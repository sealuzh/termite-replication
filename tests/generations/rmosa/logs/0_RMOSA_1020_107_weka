* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21264
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21269
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 23:38:40.351 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 23:38:40.353 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 23:38:40.356 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 23:38:40.382 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:38:40.388 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:38:40.389 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1020
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 23:39:01.684 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:39:01.717 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:39:01.718 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 23:39:03.231 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 23:39:05.316 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 23:39:05.319 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 23:39:08.697 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 23:39:08.835 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 23:39:08.840 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 23:39:08.840 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 23:39:08.844 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 23:39:08.845 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 23:39:08.845 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 23:39:08.846 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 23:39:08.847 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 23:39:09.001 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 23:39:09.050 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
[MASTER] 23:39:09.915 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 23:39:09.916 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1020
* Starting evolution
[MASTER] 23:39:16.030 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 23:41:29.700 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 23:41:52.522 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 23:42:04.635 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 305s and 315 generations, 198708 statements, best individual has fitness: 1736.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 338
* Number of covered goals: 298
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 82%
* Total number of goals: 194
* Number of covered goals: 159
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 89%
* Total number of goals: 476
* Number of covered goals: 425
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 112
* Number of covered goals: 61
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 80%
* Total number of goals: 194
* Number of covered goals: 156
* Generated 87 tests with total length 951
* Resulting test suite's coverage: 85% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 293s and 118 generations, 60352 statements, best individual has fitness: 14848.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 59%
* Total number of goals: 1378
* Number of covered goals: 816
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 45%
* Total number of goals: 809
* Number of covered goals: 366
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 64
* Number of covered goals: 64
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 65%
* Total number of goals: 424
* Number of covered goals: 274
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 20%
* Total number of goals: 278
* Number of covered goals: 56
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 103
* Number of covered goals: 102
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 43%
* Total number of goals: 809
* Number of covered goals: 347
* Generated 179 tests with total length 1786
* Resulting test suite's coverage: 53% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 53%
* Compiling and checking tests
[MASTER] 23:47:41.514 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_3_1575330461446/weka/classifiers/bayes/NaiveBayesMultinomialText_3_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_3_1575330461446/weka/classifiers/bayes/NaiveBayesMultinomialText_3_tmp__ESTest_scaffolding.java]]
[MASTER] 23:47:41.515 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:47:41.515 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:47:41.518 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 23:47:41.519 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 23:47:41.519 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 23:47:41.519 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 23:47:41.519 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 23:47:41.520 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_3_1575330461446/weka/classifiers/bayes/NaiveBayesMultinomialText_3_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 23:47:41 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.Instances;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_3_tmp__ESTest extends NaiveBayesMultinomialText_3_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=1.5280883009539776
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
30:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
31:       linkedHashMap0.put((Integer) null, linkedHashMap1);
32:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
33:       naiveBayesMultinomialText0.m_periodicP = 2047;
34:       naiveBayesMultinomialText0.pruneDictionary();
35:       try { 
36:         naiveBayesMultinomialText0.buildClassifier((Instances) null);
37:         fail("Expecting exception: NullPointerException");
38:       
39:       } catch(NullPointerException e) {
40:          //
41:          // no message in exception (getMessage() returned null)
42:          //
43:          verifyException("weka.core.Capabilities", e);
44:       }
45:   }
46: }
RegularFileObject[/tmp/EvoSuite_3_1575330461446/weka/classifiers/bayes/NaiveBayesMultinomialText_3_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 23:47:41 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_3_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_3_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.neighboursearch.KDTree",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.BinarySparseInstance",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.neighboursearch.balltrees.BallSplitter",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.filters.AllFilter",
145:       "weka.classifiers.AbstractClassifier",
146:       "weka.filters.unsupervised.attribute.Center",
147:       "weka.core.OptionHandler",
148:       "weka.core.WekaException",
149:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
150:       "weka.filters.StreamableFilter",
151:       "weka.core.Range",
152:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
153:       "weka.core.scripting.JythonSerializableObject",
154:       "weka.classifiers.Classifier",
155:       "weka.core.Capabilities$Capability",
156:       "weka.core.SparseInstance",
157:       "org.pentaho.packageManagement.PackageManager",
158:       "weka.attributeSelection.AttributeTransformer",
159:       "weka.core.tokenizers.WordTokenizer",
160:       "weka.classifiers.misc.SerializedClassifier",
161:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
162:       "weka.attributeSelection.PrincipalComponents",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.filters.SupervisedFilter",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.core.neighboursearch.LinearNNSearch",
171:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
172:       "weka.core.Option",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
175:       "weka.estimators.KernelEstimator",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.FastVector",
180:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
181:       "weka.core.UnassignedDatasetException",
182:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
183:       "weka.classifiers.SingleClassifierEnhancer",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.core.ProtectedProperties",
187:       "weka.estimators.Estimator",
188:       "weka.core.StringLocator",
189:       "weka.core.AttributeStats",
190:       "weka.core.WeightedInstancesHandler",
191:       "weka.core.neighboursearch.NearestNeighbourSearch",
192:       "weka.filters.unsupervised.attribute.Remove",
193:       "weka.core.EuclideanDistance",
194:       "weka.core.Instances",
195:       "weka.core.UnassignedClassException",
196:       "weka.classifiers.rules.ZeroR",
197:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
198:       "weka.filters.unsupervised.attribute.Standardize",
199:       "weka.core.TechnicalInformation",
200:       "weka.core.UnsupportedAttributeTypeException",
201:       "weka.classifiers.Sourcable",
202:       "weka.core.RevisionHandler",
203:       "weka.classifiers.evaluation.output.prediction.PlainText",
204:       "weka.core.neighboursearch.TreePerformanceStats",
205:       "weka.core.xml.XMLSerialization",
206:       "weka.classifiers.xml.XMLClassifier",
207:       "weka.filters.Filter",
208:       "weka.filters.supervised.attribute.Discretize"
209:     );
210:   } 
211: 
212:   private static void resetClasses() {
213:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_3_tmp__ESTest_scaffolding.class.getClassLoader()); 
214: 
215:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
216:       "weka.classifiers.AbstractClassifier",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
218:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
219:       "weka.core.Capabilities$Capability",
220:       "weka.core.tokenizers.Tokenizer",
221:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
222:       "weka.core.tokenizers.WordTokenizer",
223:       "weka.core.stemmers.NullStemmer",
224:       "weka.core.AbstractInstance",
225:       "weka.core.SparseInstance",
226:       "weka.core.BinarySparseInstance",
227:       "weka.core.Attribute",
228:       "weka.core.ProtectedProperties",
229:       "weka.core.Utils",
230:       "weka.core.UnassignedDatasetException",
231:       "weka.core.RevisionUtils",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Option",
234:       "weka.core.Instances",
235:       "weka.classifiers.bayes.NaiveBayes",
236:       "weka.classifiers.CostMatrix",
237:       "weka.core.Capabilities",
238:       "org.pentaho.packageManagement.PackageManager",
239:       "org.pentaho.packageManagement.DefaultPackageManager",
240:       "weka.core.Version",
241:       "weka.core.Environment",
242:       "weka.core.WekaPackageManager",
243:       "weka.core.SerializedObject",
244:       "weka.core.DenseInstance",
245:       "weka.core.neighboursearch.NearestNeighbourSearch",
246:       "weka.core.neighboursearch.CoverTree",
247:       "weka.core.NormalizableDistance",
248:       "weka.core.EuclideanDistance",
249:       "weka.core.Range",
250:       "weka.core.Stopwords",
251:       "weka.core.neighboursearch.BallTree",
252:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
253:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
254:       "weka.core.neighboursearch.balltrees.BallSplitter",
255:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
256:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
257:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
258:       "weka.core.TestInstances",
259:       "weka.attributeSelection.ASEvaluation",
260:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
261:       "weka.attributeSelection.PrincipalComponents",
262:       "weka.filters.Filter",
263:       "weka.filters.SimpleFilter",
264:       "weka.filters.SimpleStreamFilter",
265:       "weka.filters.MultiFilter",
266:       "weka.filters.AllFilter",
267:       "weka.core.tokenizers.NGramTokenizer",
268:       "weka.filters.supervised.attribute.Discretize",
269:       "weka.core.stemmers.LovinsStemmer",
270:       "weka.classifiers.trees.J48",
271:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
272:       "weka.core.neighboursearch.balltrees.BallNode",
273:       "weka.core.neighboursearch.LinearNNSearch",
274:       "weka.classifiers.SingleClassifierEnhancer",
275:       "weka.classifiers.misc.InputMappedClassifier",
276:       "weka.classifiers.rules.ZeroR",
277:       "weka.classifiers.RandomizableClassifier",
278:       "weka.core.Tag",
279:       "weka.classifiers.functions.SGDText",
280:       "weka.classifiers.bayes.BayesNet",
281:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
282:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
283:       "weka.classifiers.bayes.net.search.local.K2",
284:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
285:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
286:       "weka.classifiers.functions.supportVector.Kernel",
287:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
288:       "weka.core.stemmers.SnowballStemmer",
289:       "weka.core.stemmers.IteratedLovinsStemmer",
290:       "weka.core.WekaException",
291:       "weka.classifiers.misc.SerializedClassifier",
292:       "weka.core.stemmers.Stemming",
293:       "weka.core.converters.ArffLoader$ArffReader",
294:       "weka.classifiers.IteratedSingleClassifierEnhancer",
295:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
296:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
297:       "weka.classifiers.meta.Bagging",
298:       "weka.classifiers.trees.REPTree",
299:       "weka.core.WekaEnumeration",
300:       "weka.core.Attribute$1",
301:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
302:       "weka.classifiers.meta.CostSensitiveClassifier",
303:       "weka.classifiers.lazy.IBk",
304:       "weka.classifiers.MultipleClassifiersCombiner",
305:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
306:       "weka.classifiers.meta.MultiScheme",
307:       "weka.core.neighboursearch.KDTree",
308:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
309:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
310:       "weka.classifiers.bayes.net.BIFReader",
311:       "weka.core.FindWithCapabilities",
312:       "weka.core.SingleIndex",
313:       "weka.core.ClassDiscovery",
314:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
315:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
316:       "weka.core.UnsupportedAttributeTypeException",
317:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
318:       "weka.core.tokenizers.AlphabeticTokenizer",
319:       "weka.classifiers.meta.ClassificationViaRegression",
320:       "weka.classifiers.trees.m5.M5Base",
321:       "weka.classifiers.trees.M5P",
322:       "weka.classifiers.functions.LinearRegression",
323:       "weka.classifiers.trees.RandomTree",
324:       "weka.classifiers.functions.VotedPerceptron",
325:       "weka.attributeSelection.ReliefFAttributeEval",
326:       "weka.classifiers.bayes.NaiveBayesMultinomial",
327:       "weka.classifiers.functions.SimpleLogistic",
328:       "weka.classifiers.trees.DecisionStump",
329:       "weka.classifiers.meta.AdditiveRegression",
330:       "weka.classifiers.rules.M5Rules",
331:       "weka.core.UnassignedClassException",
332:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
333:       "weka.classifiers.meta.FilteredClassifier",
334:       "weka.filters.supervised.attribute.AttributeSelection",
335:       "weka.attributeSelection.AttributeSelection",
336:       "weka.attributeSelection.CfsSubsetEval",
337:       "weka.attributeSelection.ASSearch",
338:       "weka.attributeSelection.GreedyStepwise",
339:       "weka.attributeSelection.BestFirst",
340:       "weka.estimators.Estimator",
341:       "weka.estimators.KernelEstimator",
342:       "weka.classifiers.functions.Logistic",
343:       "weka.attributeSelection.WrapperSubsetEval",
344:       "weka.core.SelectedTag",
345:       "weka.classifiers.rules.OneR",
346:       "weka.core.ManhattanDistance",
347:       "weka.classifiers.lazy.LWL",
348:       "weka.classifiers.rules.PART",
349:       "weka.classifiers.rules.part.MakeDecList",
350:       "weka.core.Javadoc",
351:       "weka.core.OptionHandlerJavadoc",
352:       "weka.classifiers.functions.supportVector.CachedKernel",
353:       "weka.classifiers.functions.supportVector.Puk",
354:       "weka.classifiers.meta.AttributeSelectedClassifier",
355:       "weka.classifiers.functions.SimpleLinearRegression",
356:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
357:       "weka.classifiers.meta.AdaBoostM1",
358:       "weka.attributeSelection.CorrelationAttributeEval",
359:       "weka.classifiers.functions.GaussianProcesses",
360:       "weka.classifiers.functions.supportVector.PolyKernel",
361:       "weka.classifiers.lazy.KStar",
362:       "weka.classifiers.rules.DecisionTable",
363:       "weka.classifiers.functions.SMOreg",
364:       "weka.classifiers.functions.supportVector.RegOptimizer",
365:       "weka.classifiers.functions.supportVector.RegSMO",
366:       "weka.classifiers.functions.supportVector.RegSMOImproved",
367:       "weka.classifiers.functions.SGD",
368:       "weka.core.TechnicalInformation",
369:       "weka.core.TechnicalInformation$Type",
370:       "weka.core.TechnicalInformation$Field",
371:       "weka.core.neighboursearch.PerformanceStats",
372:       "weka.classifiers.meta.RandomCommittee",
373:       "weka.attributeSelection.InfoGainAttributeEval",
374:       "weka.classifiers.trees.LMT",
375:       "weka.classifiers.functions.supportVector.StringKernel",
376:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
377:       "weka.estimators.PoissonEstimator",
378:       "weka.classifiers.functions.SMO",
379:       "weka.classifiers.rules.JRip",
380:       "weka.core.matrix.Matrix",
381:       "weka.classifiers.meta.Vote",
382:       "weka.core.ListOptions",
383:       "weka.estimators.NormalEstimator",
384:       "weka.attributeSelection.GainRatioAttributeEval",
385:       "weka.core.SerializationHelper",
386:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
387:       "weka.attributeSelection.OneRAttributeEval",
388:       "weka.core.neighboursearch.kdtrees.MidPointOfWidestDimension",
389:       "weka.classifiers.meta.LogitBoost",
390:       "weka.classifiers.trees.j48.ClassifierTree",
391:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
392:       "weka.classifiers.meta.RegressionByDiscretization",
393:       "weka.filters.unsupervised.attribute.Discretize",
394:       "weka.classifiers.meta.CVParameterSelection",
395:       "weka.core.FastVector",
396:       "weka.classifiers.functions.supportVector.RBFKernel",
397:       "weka.core.neighboursearch.kdtrees.MedianOfWidestDimension",
398:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
399:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
400:       "weka.classifiers.meta.Stacking",
401:       "weka.core.neighboursearch.kdtrees.KMeansInpiredMethod",
402:       "weka.classifiers.bayes.NaiveBayesUpdateable",
403:       "weka.core.AttributeStats",
404:       "weka.classifiers.functions.MultilayerPerceptron",
405:       "weka.filters.unsupervised.attribute.NominalToBinary",
406:       "weka.classifiers.functions.neural.SigmoidUnit",
407:       "weka.classifiers.functions.neural.LinearUnit",
408:       "weka.experiment.Stats",
409:       "weka.core.MinkowskiDistance",
410:       "weka.classifiers.meta.MultiClassClassifier",
411:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
412:       "weka.core.neighboursearch.TreePerformanceStats",
413:       "weka.estimators.DiscreteEstimator",
414:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable"
415:     );
416:   }
417: }

[MASTER] 23:47:41.521 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.put((Integer) null, linkedHashMap1);
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
naiveBayesMultinomialText0.m_periodicP = 2047;
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.buildClassifier((Instances) null);

[MASTER] 23:47:41.906 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_10_1575330461865/weka/classifiers/bayes/NaiveBayesMultinomialText_10_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_10_1575330461865/weka/classifiers/bayes/NaiveBayesMultinomialText_10_tmp__ESTest_scaffolding.java]]
[MASTER] 23:47:41.906 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:47:41.906 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:47:41.906 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 23:47:41.906 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 23:47:41.906 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 23:47:41.906 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 23:47:41.906 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 23:47:41.907 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_10_1575330461865/weka/classifiers/bayes/NaiveBayesMultinomialText_10_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 23:47:41 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.System;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_10_tmp__ESTest extends NaiveBayesMultinomialText_10_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=1.757637858307174
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
30:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
31:       linkedHashMap0.put((Integer) null, linkedHashMap1);
32:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
33:       String[] stringArray0 = new String[6];
34:       stringArray0[0] = "-lnorm";
35:       stringArray0[1] = "-lnorm";
36:       stringArray0[2] = "-lnorm";
37:       stringArray0[3] = "-lnorm";
38:       stringArray0[4] = "-lnorm";
39:       stringArray0[5] = "";
40:       try { 
41:         naiveBayesMultinomialText0.setOptions(stringArray0);
42:         fail("Expecting exception: NumberFormatException");
43:       
44:       } catch(NumberFormatException e) {
45:       }
46:   }
47: }
RegularFileObject[/tmp/EvoSuite_10_1575330461865/weka/classifiers/bayes/NaiveBayesMultinomialText_10_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 23:47:41 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_10_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_10_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.neighboursearch.KDTree",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.BinarySparseInstance",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.neighboursearch.balltrees.BallSplitter",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.filters.AllFilter",
145:       "weka.classifiers.AbstractClassifier",
146:       "weka.filters.unsupervised.attribute.Center",
147:       "weka.core.OptionHandler",
148:       "weka.core.WekaException",
149:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
150:       "weka.filters.StreamableFilter",
151:       "weka.core.Range",
152:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
153:       "weka.core.scripting.JythonSerializableObject",
154:       "weka.classifiers.Classifier",
155:       "weka.core.Capabilities$Capability",
156:       "weka.core.SparseInstance",
157:       "org.pentaho.packageManagement.PackageManager",
158:       "weka.attributeSelection.AttributeTransformer",
159:       "weka.core.tokenizers.WordTokenizer",
160:       "weka.classifiers.misc.SerializedClassifier",
161:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
162:       "weka.attributeSelection.PrincipalComponents",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.filters.SupervisedFilter",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.core.neighboursearch.LinearNNSearch",
171:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
172:       "weka.core.Option",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
175:       "weka.estimators.KernelEstimator",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.FastVector",
180:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
181:       "weka.core.UnassignedDatasetException",
182:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
183:       "weka.classifiers.SingleClassifierEnhancer",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.core.ProtectedProperties",
187:       "weka.estimators.Estimator",
188:       "weka.core.StringLocator",
189:       "weka.core.AttributeStats",
190:       "weka.core.WeightedInstancesHandler",
191:       "weka.core.neighboursearch.NearestNeighbourSearch",
192:       "weka.filters.unsupervised.attribute.Remove",
193:       "weka.core.EuclideanDistance",
194:       "weka.core.Instances",
195:       "weka.core.UnassignedClassException",
196:       "weka.classifiers.rules.ZeroR",
197:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
198:       "weka.filters.unsupervised.attribute.Standardize",
199:       "weka.core.TechnicalInformation",
200:       "weka.core.UnsupportedAttributeTypeException",
201:       "weka.classifiers.Sourcable",
202:       "weka.core.RevisionHandler",
203:       "weka.classifiers.evaluation.output.prediction.PlainText",
204:       "weka.core.neighboursearch.TreePerformanceStats",
205:       "weka.core.xml.XMLSerialization",
206:       "weka.classifiers.xml.XMLClassifier",
207:       "weka.filters.Filter",
208:       "weka.filters.supervised.attribute.Discretize"
209:     );
210:   } 
211: 
212:   private static void resetClasses() {
213:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_10_tmp__ESTest_scaffolding.class.getClassLoader()); 
214: 
215:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
216:       "weka.classifiers.AbstractClassifier",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
218:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
219:       "weka.core.Capabilities$Capability",
220:       "weka.core.tokenizers.Tokenizer",
221:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
222:       "weka.core.tokenizers.WordTokenizer",
223:       "weka.core.stemmers.NullStemmer",
224:       "weka.core.AbstractInstance",
225:       "weka.core.SparseInstance",
226:       "weka.core.BinarySparseInstance",
227:       "weka.core.Attribute",
228:       "weka.core.ProtectedProperties",
229:       "weka.core.Utils",
230:       "weka.core.UnassignedDatasetException",
231:       "weka.core.RevisionUtils",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Option",
234:       "weka.core.Instances",
235:       "weka.classifiers.bayes.NaiveBayes",
236:       "weka.classifiers.CostMatrix",
237:       "weka.core.Capabilities",
238:       "org.pentaho.packageManagement.PackageManager",
239:       "org.pentaho.packageManagement.DefaultPackageManager",
240:       "weka.core.Version",
241:       "weka.core.Environment",
242:       "weka.core.WekaPackageManager",
243:       "weka.core.SerializedObject",
244:       "weka.core.DenseInstance",
245:       "weka.core.neighboursearch.NearestNeighbourSearch",
246:       "weka.core.neighboursearch.CoverTree",
247:       "weka.core.NormalizableDistance",
248:       "weka.core.EuclideanDistance",
249:       "weka.core.Range",
250:       "weka.core.Stopwords",
251:       "weka.core.neighboursearch.BallTree",
252:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
253:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
254:       "weka.core.neighboursearch.balltrees.BallSplitter",
255:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
256:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
257:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
258:       "weka.core.TestInstances",
259:       "weka.attributeSelection.ASEvaluation",
260:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
261:       "weka.attributeSelection.PrincipalComponents",
262:       "weka.filters.Filter",
263:       "weka.filters.SimpleFilter",
264:       "weka.filters.SimpleStreamFilter",
265:       "weka.filters.MultiFilter",
266:       "weka.filters.AllFilter",
267:       "weka.core.tokenizers.NGramTokenizer",
268:       "weka.filters.supervised.attribute.Discretize",
269:       "weka.core.stemmers.LovinsStemmer",
270:       "weka.classifiers.trees.J48",
271:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
272:       "weka.core.neighboursearch.balltrees.BallNode",
273:       "weka.core.neighboursearch.LinearNNSearch",
274:       "weka.classifiers.SingleClassifierEnhancer",
275:       "weka.classifiers.misc.InputMappedClassifier",
276:       "weka.classifiers.rules.ZeroR",
277:       "weka.classifiers.RandomizableClassifier",
278:       "weka.core.Tag",
279:       "weka.classifiers.functions.SGDText",
280:       "weka.classifiers.bayes.BayesNet",
281:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
282:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
283:       "weka.classifiers.bayes.net.search.local.K2",
284:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
285:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
286:       "weka.classifiers.functions.supportVector.Kernel",
287:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
288:       "weka.core.stemmers.SnowballStemmer",
289:       "weka.core.stemmers.IteratedLovinsStemmer",
290:       "weka.core.WekaException",
291:       "weka.classifiers.misc.SerializedClassifier",
292:       "weka.core.stemmers.Stemming",
293:       "weka.core.converters.ArffLoader$ArffReader",
294:       "weka.classifiers.IteratedSingleClassifierEnhancer",
295:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
296:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
297:       "weka.classifiers.meta.Bagging",
298:       "weka.classifiers.trees.REPTree",
299:       "weka.core.WekaEnumeration",
300:       "weka.core.Attribute$1",
301:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
302:       "weka.classifiers.meta.CostSensitiveClassifier",
303:       "weka.classifiers.lazy.IBk",
304:       "weka.classifiers.MultipleClassifiersCombiner",
305:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
306:       "weka.classifiers.meta.MultiScheme",
307:       "weka.core.neighboursearch.KDTree",
308:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
309:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
310:       "weka.classifiers.bayes.net.BIFReader",
311:       "weka.core.FindWithCapabilities",
312:       "weka.core.SingleIndex",
313:       "weka.core.ClassDiscovery",
314:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
315:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
316:       "weka.core.UnsupportedAttributeTypeException",
317:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
318:       "weka.core.tokenizers.AlphabeticTokenizer",
319:       "weka.classifiers.meta.ClassificationViaRegression",
320:       "weka.classifiers.trees.m5.M5Base",
321:       "weka.classifiers.trees.M5P",
322:       "weka.classifiers.functions.LinearRegression",
323:       "weka.classifiers.trees.RandomTree",
324:       "weka.classifiers.functions.VotedPerceptron",
325:       "weka.attributeSelection.ReliefFAttributeEval",
326:       "weka.classifiers.bayes.NaiveBayesMultinomial",
327:       "weka.classifiers.functions.SimpleLogistic",
328:       "weka.classifiers.trees.DecisionStump",
329:       "weka.classifiers.meta.AdditiveRegression",
330:       "weka.classifiers.rules.M5Rules",
331:       "weka.core.UnassignedClassException",
332:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
333:       "weka.classifiers.meta.FilteredClassifier",
334:       "weka.filters.supervised.attribute.AttributeSelection",
335:       "weka.attributeSelection.AttributeSelection",
336:       "weka.attributeSelection.CfsSubsetEval",
337:       "weka.attributeSelection.ASSearch",
338:       "weka.attributeSelection.GreedyStepwise",
339:       "weka.attributeSelection.BestFirst",
340:       "weka.estimators.Estimator",
341:       "weka.estimators.KernelEstimator",
342:       "weka.classifiers.functions.Logistic",
343:       "weka.attributeSelection.WrapperSubsetEval",
344:       "weka.core.SelectedTag",
345:       "weka.classifiers.rules.OneR",
346:       "weka.core.ManhattanDistance",
347:       "weka.classifiers.lazy.LWL",
348:       "weka.classifiers.rules.PART",
349:       "weka.classifiers.rules.part.MakeDecList",
350:       "weka.core.Javadoc",
351:       "weka.core.OptionHandlerJavadoc",
352:       "weka.classifiers.functions.supportVector.CachedKernel",
353:       "weka.classifiers.functions.supportVector.Puk",
354:       "weka.classifiers.meta.AttributeSelectedClassifier",
355:       "weka.classifiers.functions.SimpleLinearRegression",
356:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
357:       "weka.classifiers.meta.AdaBoostM1",
358:       "weka.attributeSelection.CorrelationAttributeEval",
359:       "weka.classifiers.functions.GaussianProcesses",
360:       "weka.classifiers.functions.supportVector.PolyKernel",
361:       "weka.classifiers.lazy.KStar",
362:       "weka.classifiers.rules.DecisionTable",
363:       "weka.classifiers.functions.SMOreg",
364:       "weka.classifiers.functions.supportVector.RegOptimizer",
365:       "weka.classifiers.functions.supportVector.RegSMO",
366:       "weka.classifiers.functions.supportVector.RegSMOImproved",
367:       "weka.classifiers.functions.SGD",
368:       "weka.core.TechnicalInformation",
369:       "weka.core.TechnicalInformation$Type",
370:       "weka.core.TechnicalInformation$Field",
371:       "weka.core.neighboursearch.PerformanceStats",
372:       "weka.classifiers.meta.RandomCommittee",
373:       "weka.attributeSelection.InfoGainAttributeEval",
374:       "weka.classifiers.trees.LMT",
375:       "weka.classifiers.functions.supportVector.StringKernel",
376:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
377:       "weka.estimators.PoissonEstimator",
378:       "weka.classifiers.functions.SMO",
379:       "weka.classifiers.rules.JRip",
380:       "weka.core.matrix.Matrix",
381:       "weka.classifiers.meta.Vote",
382:       "weka.core.ListOptions",
383:       "weka.estimators.NormalEstimator",
384:       "weka.attributeSelection.GainRatioAttributeEval",
385:       "weka.core.SerializationHelper",
386:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
387:       "weka.attributeSelection.OneRAttributeEval",
388:       "weka.core.neighboursearch.kdtrees.MidPointOfWidestDimension",
389:       "weka.classifiers.meta.LogitBoost",
390:       "weka.classifiers.trees.j48.ClassifierTree",
391:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
392:       "weka.classifiers.meta.RegressionByDiscretization",
393:       "weka.filters.unsupervised.attribute.Discretize",
394:       "weka.classifiers.meta.CVParameterSelection",
395:       "weka.core.FastVector",
396:       "weka.classifiers.functions.supportVector.RBFKernel",
397:       "weka.core.neighboursearch.kdtrees.MedianOfWidestDimension",
398:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
399:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
400:       "weka.classifiers.meta.Stacking",
401:       "weka.core.neighboursearch.kdtrees.KMeansInpiredMethod",
402:       "weka.classifiers.bayes.NaiveBayesUpdateable",
403:       "weka.core.AttributeStats",
404:       "weka.classifiers.functions.MultilayerPerceptron",
405:       "weka.filters.unsupervised.attribute.NominalToBinary",
406:       "weka.classifiers.functions.neural.SigmoidUnit",
407:       "weka.classifiers.functions.neural.LinearUnit",
408:       "weka.experiment.Stats",
409:       "weka.core.MinkowskiDistance",
410:       "weka.classifiers.meta.MultiClassClassifier",
411:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
412:       "weka.core.neighboursearch.TreePerformanceStats",
413:       "weka.estimators.DiscreteEstimator",
414:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable"
415:     );
416:   }
417: }

[MASTER] 23:47:41.908 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.put((Integer) null, linkedHashMap1);
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
String[] stringArray0 = new String[6];
stringArray0[0] = "-lnorm";
stringArray0[1] = "-lnorm";
stringArray0[2] = "-lnorm";
stringArray0[3] = "-lnorm";
stringArray0[4] = "-lnorm";
stringArray0[5] = "";
naiveBayesMultinomialText0.setOptions(stringArray0);

[MASTER] 23:47:42.656 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_26_1575330462622/weka/classifiers/bayes/NaiveBayesMultinomialText_26_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_26_1575330462622/weka/classifiers/bayes/NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding.java]]
[MASTER] 23:47:42.657 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:47:42.657 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:47:42.657 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 23:47:42.657 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 23:47:42.657 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 23:47:42.658 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_26_1575330462622/weka/classifiers/bayes/NaiveBayesMultinomialText_26_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 23:47:42 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.Instance;
18: import weka.filters.supervised.attribute.Discretize;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_26_tmp__ESTest extends NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=1.1217186091313738
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       naiveBayesMultinomialText0.reset();
31:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
32:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
33:       naiveBayesMultinomialText0.m_periodicP = 2027;
34:       naiveBayesMultinomialText0.pruneDictionary();
35:       Discretize discretize0 = new Discretize();
36:       // Undeclared exception!
37:       try { 
38:         discretize0.outputPeek();
39:         fail("Expecting exception: NullPointerException");
40:       
41:       } catch(NullPointerException e) {
42:          //
43:          // No output instance format defined
44:          //
45:          verifyException("weka.filters.Filter", e);
46:       }
47:   }
48: }
RegularFileObject[/tmp/EvoSuite_26_1575330462622/weka/classifiers/bayes/NaiveBayesMultinomialText_26_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 23:47:42 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.neighboursearch.KDTree",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.BinarySparseInstance",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.neighboursearch.balltrees.BallSplitter",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.filters.AllFilter",
145:       "weka.classifiers.AbstractClassifier",
146:       "weka.filters.unsupervised.attribute.Center",
147:       "weka.core.OptionHandler",
148:       "weka.core.WekaException",
149:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
150:       "weka.filters.StreamableFilter",
151:       "weka.core.Range",
152:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
153:       "weka.core.scripting.JythonSerializableObject",
154:       "weka.classifiers.Classifier",
155:       "weka.core.Capabilities$Capability",
156:       "weka.core.SparseInstance",
157:       "org.pentaho.packageManagement.PackageManager",
158:       "weka.attributeSelection.AttributeTransformer",
159:       "weka.core.tokenizers.WordTokenizer",
160:       "weka.classifiers.misc.SerializedClassifier",
161:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
162:       "weka.attributeSelection.PrincipalComponents",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.filters.SupervisedFilter",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.core.neighboursearch.LinearNNSearch",
171:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
172:       "weka.core.Option",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
175:       "weka.estimators.KernelEstimator",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.FastVector",
180:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
181:       "weka.core.UnassignedDatasetException",
182:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
183:       "weka.classifiers.SingleClassifierEnhancer",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.core.ProtectedProperties",
187:       "weka.estimators.Estimator",
188:       "weka.core.StringLocator",
189:       "weka.core.AttributeStats",
190:       "weka.core.WeightedInstancesHandler",
191:       "weka.core.neighboursearch.NearestNeighbourSearch",
192:       "weka.filters.unsupervised.attribute.Remove",
193:       "weka.core.EuclideanDistance",
194:       "weka.core.Instances",
195:       "weka.core.UnassignedClassException",
196:       "weka.classifiers.rules.ZeroR",
197:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
198:       "weka.filters.unsupervised.attribute.Standardize",
199:       "weka.core.TechnicalInformation",
200:       "weka.core.UnsupportedAttributeTypeException",
201:       "weka.classifiers.Sourcable",
202:       "weka.core.RevisionHandler",
203:       "weka.classifiers.evaluation.output.prediction.PlainText",
204:       "weka.core.neighboursearch.TreePerformanceStats",
205:       "weka.core.xml.XMLSerialization",
206:       "weka.classifiers.xml.XMLClassifier",
207:       "weka.filters.Filter",
208:       "weka.filters.supervised.attribute.Discretize"
209:     );
210:   } 
211: 
212:   private static void resetClasses() {
213:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding.class.getClassLoader()); 
214: 
215:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
216:       "weka.classifiers.AbstractClassifier",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
218:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
219:       "weka.core.Capabilities$Capability",
220:       "weka.core.tokenizers.Tokenizer",
221:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
222:       "weka.core.tokenizers.WordTokenizer",
223:       "weka.core.stemmers.NullStemmer",
224:       "weka.core.AbstractInstance",
225:       "weka.core.SparseInstance",
226:       "weka.core.BinarySparseInstance",
227:       "weka.core.Attribute",
228:       "weka.core.ProtectedProperties",
229:       "weka.core.Utils",
230:       "weka.core.UnassignedDatasetException",
231:       "weka.core.RevisionUtils",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Option",
234:       "weka.core.Instances",
235:       "weka.classifiers.bayes.NaiveBayes",
236:       "weka.classifiers.CostMatrix",
237:       "weka.core.Capabilities",
238:       "org.pentaho.packageManagement.PackageManager",
239:       "org.pentaho.packageManagement.DefaultPackageManager",
240:       "weka.core.Version",
241:       "weka.core.Environment",
242:       "weka.core.WekaPackageManager",
243:       "weka.core.SerializedObject",
244:       "weka.core.DenseInstance",
245:       "weka.core.neighboursearch.NearestNeighbourSearch",
246:       "weka.core.neighboursearch.CoverTree",
247:       "weka.core.NormalizableDistance",
248:       "weka.core.EuclideanDistance",
249:       "weka.core.Range",
250:       "weka.core.Stopwords",
251:       "weka.core.neighboursearch.BallTree",
252:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
253:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
254:       "weka.core.neighboursearch.balltrees.BallSplitter",
255:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
256:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
257:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
258:       "weka.core.TestInstances",
259:       "weka.attributeSelection.ASEvaluation",
260:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
261:       "weka.attributeSelection.PrincipalComponents",
262:       "weka.filters.Filter",
263:       "weka.filters.SimpleFilter",
264:       "weka.filters.SimpleStreamFilter",
265:       "weka.filters.MultiFilter",
266:       "weka.filters.AllFilter",
267:       "weka.core.tokenizers.NGramTokenizer",
268:       "weka.filters.supervised.attribute.Discretize",
269:       "weka.core.stemmers.LovinsStemmer",
270:       "weka.classifiers.trees.J48",
271:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
272:       "weka.core.neighboursearch.balltrees.BallNode",
273:       "weka.core.neighboursearch.LinearNNSearch",
274:       "weka.classifiers.SingleClassifierEnhancer",
275:       "weka.classifiers.misc.InputMappedClassifier",
276:       "weka.classifiers.rules.ZeroR",
277:       "weka.classifiers.RandomizableClassifier",
278:       "weka.core.Tag",
279:       "weka.classifiers.functions.SGDText",
280:       "weka.classifiers.bayes.BayesNet",
281:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
282:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
283:       "weka.classifiers.bayes.net.search.local.K2",
284:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
285:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
286:       "weka.classifiers.functions.supportVector.Kernel",
287:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
288:       "weka.core.stemmers.SnowballStemmer",
289:       "weka.core.stemmers.IteratedLovinsStemmer",
290:       "weka.core.WekaException",
291:       "weka.classifiers.misc.SerializedClassifier",
292:       "weka.core.stemmers.Stemming",
293:       "weka.core.converters.ArffLoader$ArffReader",
294:       "weka.classifiers.IteratedSingleClassifierEnhancer",
295:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
296:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
297:       "weka.classifiers.meta.Bagging",
298:       "weka.classifiers.trees.REPTree",
299:       "weka.core.WekaEnumeration",
300:       "weka.core.Attribute$1",
301:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
302:       "weka.classifiers.meta.CostSensitiveClassifier",
303:       "weka.classifiers.lazy.IBk",
304:       "weka.classifiers.MultipleClassifiersCombiner",
305:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
306:       "weka.classifiers.meta.MultiScheme",
307:       "weka.core.neighboursearch.KDTree",
308:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
309:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
310:       "weka.classifiers.bayes.net.BIFReader",
311:       "weka.core.FindWithCapabilities",
312:       "weka.core.SingleIndex",
313:       "weka.core.ClassDiscovery",
314:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
315:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
316:       "weka.core.UnsupportedAttributeTypeException",
317:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
318:       "weka.core.tokenizers.AlphabeticTokenizer",
319:       "weka.classifiers.meta.ClassificationViaRegression",
320:       "weka.classifiers.trees.m5.M5Base",
321:       "weka.classifiers.trees.M5P",
322:       "weka.classifiers.functions.LinearRegression",
323:       "weka.classifiers.trees.RandomTree",
324:       "weka.classifiers.functions.VotedPerceptron",
325:       "weka.attributeSelection.ReliefFAttributeEval",
326:       "weka.classifiers.bayes.NaiveBayesMultinomial",
327:       "weka.classifiers.functions.SimpleLogistic",
328:       "weka.classifiers.trees.DecisionStump",
329:       "weka.classifiers.meta.AdditiveRegression",
330:       "weka.classifiers.rules.M5Rules",
331:       "weka.core.UnassignedClassException",
332:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
333:       "weka.classifiers.meta.FilteredClassifier",
334:       "weka.filters.supervised.attribute.AttributeSelection",
335:       "weka.attributeSelection.AttributeSelection",
336:       "weka.attributeSelection.CfsSubsetEval",
337:       "weka.attributeSelection.ASSearch",
338:       "weka.attributeSelection.GreedyStepwise",
339:       "weka.attributeSelection.BestFirst",
340:       "weka.estimators.Estimator",
341:       "weka.estimators.KernelEstimator",
342:       "weka.classifiers.functions.Logistic",
343:       "weka.attributeSelection.WrapperSubsetEval",
344:       "weka.core.SelectedTag",
345:       "weka.classifiers.rules.OneR",
346:       "weka.core.ManhattanDistance",
347:       "weka.classifiers.lazy.LWL",
348:       "weka.classifiers.rules.PART",
349:       "weka.classifiers.rules.part.MakeDecList",
350:       "weka.core.Javadoc",
351:       "weka.core.OptionHandlerJavadoc",
352:       "weka.classifiers.functions.supportVector.CachedKernel",
353:       "weka.classifiers.functions.supportVector.Puk",
354:       "weka.classifiers.meta.AttributeSelectedClassifier",
355:       "weka.classifiers.functions.SimpleLinearRegression",
356:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
357:       "weka.classifiers.meta.AdaBoostM1",
358:       "weka.attributeSelection.CorrelationAttributeEval",
359:       "weka.classifiers.functions.GaussianProcesses",
360:       "weka.classifiers.functions.supportVector.PolyKernel",
361:       "weka.classifiers.lazy.KStar",
362:       "weka.classifiers.rules.DecisionTable",
363:       "weka.classifiers.functions.SMOreg",
364:       "weka.classifiers.functions.supportVector.RegOptimizer",
365:       "weka.classifiers.functions.supportVector.RegSMO",
366:       "weka.classifiers.functions.supportVector.RegSMOImproved",
367:       "weka.classifiers.functions.SGD",
368:       "weka.core.TechnicalInformation",
369:       "weka.core.TechnicalInformation$Type",
370:       "weka.core.TechnicalInformation$Field",
371:       "weka.core.neighboursearch.PerformanceStats",
372:       "weka.classifiers.meta.RandomCommittee",
373:       "weka.attributeSelection.InfoGainAttributeEval",
374:       "weka.classifiers.trees.LMT",
375:       "weka.classifiers.functions.supportVector.StringKernel",
376:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
377:       "weka.estimators.PoissonEstimator",
378:       "weka.classifiers.functions.SMO",
379:       "weka.classifiers.rules.JRip",
380:       "weka.core.matrix.Matrix",
381:       "weka.classifiers.meta.Vote",
382:       "weka.core.ListOptions",
383:       "weka.estimators.NormalEstimator",
384:       "weka.attributeSelection.GainRatioAttributeEval",
385:       "weka.core.SerializationHelper",
386:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
387:       "weka.attributeSelection.OneRAttributeEval",
388:       "weka.core.neighboursearch.kdtrees.MidPointOfWidestDimension",
389:       "weka.classifiers.meta.LogitBoost",
390:       "weka.classifiers.trees.j48.ClassifierTree",
391:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
392:       "weka.classifiers.meta.RegressionByDiscretization",
393:       "weka.filters.unsupervised.attribute.Discretize",
394:       "weka.classifiers.meta.CVParameterSelection",
395:       "weka.core.FastVector",
396:       "weka.classifiers.functions.supportVector.RBFKernel",
397:       "weka.core.neighboursearch.kdtrees.MedianOfWidestDimension",
398:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
399:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
400:       "weka.classifiers.meta.Stacking",
401:       "weka.core.neighboursearch.kdtrees.KMeansInpiredMethod",
402:       "weka.classifiers.bayes.NaiveBayesUpdateable",
403:       "weka.core.AttributeStats",
404:       "weka.classifiers.functions.MultilayerPerceptron",
405:       "weka.filters.unsupervised.attribute.NominalToBinary",
406:       "weka.classifiers.functions.neural.SigmoidUnit",
407:       "weka.classifiers.functions.neural.LinearUnit",
408:       "weka.experiment.Stats",
409:       "weka.core.MinkowskiDistance",
410:       "weka.classifiers.meta.MultiClassClassifier",
411:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
412:       "weka.core.neighboursearch.TreePerformanceStats",
413:       "weka.estimators.DiscreteEstimator",
414:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable"
415:     );
416:   }
417: }

[MASTER] 23:47:42.658 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.reset();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
naiveBayesMultinomialText0.m_periodicP = 2027;
naiveBayesMultinomialText0.pruneDictionary();
Discretize discretize0 = new Discretize();
discretize0.outputPeek();

[MASTER] 23:47:43.077 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_37_1575330463048/weka/classifiers/bayes/NaiveBayesMultinomialText_37_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_37_1575330463048/weka/classifiers/bayes/NaiveBayesMultinomialText_37_tmp__ESTest_scaffolding.java]]
[MASTER] 23:47:43.077 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:47:43.077 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:47:43.077 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 23:47:43.077 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 23:47:43.078 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_37_1575330463048/weka/classifiers/bayes/NaiveBayesMultinomialText_37_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 23:47:43 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_37_tmp__ESTest extends NaiveBayesMultinomialText_37_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=1.543056733112554
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>(2011);
28:       String[] stringArray0 = new String[3];
29:       stringArray0[0] = "-P";
30:       stringArray0[1] = "5#z//sF";
31:       stringArray0[2] = "";
32:       try { 
33:         naiveBayesMultinomialText0.setOptions(stringArray0);
34:         fail("Expecting exception: NumberFormatException");
35:       
36:       } catch(NumberFormatException e) {
37:          //
38:          // For input string: \"5#z//sF\"
39:          //
40:          verifyException("java.lang.NumberFormatException", e);
41:       }
42:   }
43: }
RegularFileObject[/tmp/EvoSuite_37_1575330463048/weka/classifiers/bayes/NaiveBayesMultinomialText_37_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 23:47:43 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_37_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_37_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.neighboursearch.KDTree",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.BinarySparseInstance",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.neighboursearch.balltrees.BallSplitter",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.filters.AllFilter",
145:       "weka.classifiers.AbstractClassifier",
146:       "weka.filters.unsupervised.attribute.Center",
147:       "weka.core.OptionHandler",
148:       "weka.core.WekaException",
149:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
150:       "weka.filters.StreamableFilter",
151:       "weka.core.Range",
152:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
153:       "weka.core.scripting.JythonSerializableObject",
154:       "weka.classifiers.Classifier",
155:       "weka.core.Capabilities$Capability",
156:       "weka.core.SparseInstance",
157:       "org.pentaho.packageManagement.PackageManager",
158:       "weka.attributeSelection.AttributeTransformer",
159:       "weka.core.tokenizers.WordTokenizer",
160:       "weka.classifiers.misc.SerializedClassifier",
161:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
162:       "weka.attributeSelection.PrincipalComponents",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.filters.SupervisedFilter",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.core.neighboursearch.LinearNNSearch",
171:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
172:       "weka.core.Option",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
175:       "weka.estimators.KernelEstimator",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.FastVector",
180:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
181:       "weka.core.UnassignedDatasetException",
182:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
183:       "weka.classifiers.SingleClassifierEnhancer",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.core.ProtectedProperties",
187:       "weka.estimators.Estimator",
188:       "weka.core.StringLocator",
189:       "weka.core.AttributeStats",
190:       "weka.core.WeightedInstancesHandler",
191:       "weka.core.neighboursearch.NearestNeighbourSearch",
192:       "weka.filters.unsupervised.attribute.Remove",
193:       "weka.core.EuclideanDistance",
194:       "weka.core.Instances",
195:       "weka.core.UnassignedClassException",
196:       "weka.classifiers.rules.ZeroR",
197:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
198:       "weka.filters.unsupervised.attribute.Standardize",
199:       "weka.core.TechnicalInformation",
200:       "weka.core.UnsupportedAttributeTypeException",
201:       "weka.classifiers.Sourcable",
202:       "weka.core.RevisionHandler",
203:       "weka.classifiers.evaluation.output.prediction.PlainText",
204:       "weka.core.neighboursearch.TreePerformanceStats",
205:       "weka.core.xml.XMLSerialization",
206:       "weka.classifiers.xml.XMLClassifier",
207:       "weka.filters.Filter",
208:       "weka.filters.supervised.attribute.Discretize"
209:     );
210:   } 
211: 
212:   private static void resetClasses() {
213:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_37_tmp__ESTest_scaffolding.class.getClassLoader()); 
214: 
215:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
216:       "weka.classifiers.AbstractClassifier",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
218:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
219:       "weka.core.Capabilities$Capability",
220:       "weka.core.tokenizers.Tokenizer",
221:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
222:       "weka.core.tokenizers.WordTokenizer",
223:       "weka.core.stemmers.NullStemmer",
224:       "weka.core.AbstractInstance",
225:       "weka.core.SparseInstance",
226:       "weka.core.BinarySparseInstance",
227:       "weka.core.Attribute",
228:       "weka.core.ProtectedProperties",
229:       "weka.core.Utils",
230:       "weka.core.UnassignedDatasetException",
231:       "weka.core.RevisionUtils",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Option",
234:       "weka.core.Instances",
235:       "weka.classifiers.bayes.NaiveBayes",
236:       "weka.classifiers.CostMatrix",
237:       "weka.core.Capabilities",
238:       "org.pentaho.packageManagement.PackageManager",
239:       "org.pentaho.packageManagement.DefaultPackageManager",
240:       "weka.core.Version",
241:       "weka.core.Environment",
242:       "weka.core.WekaPackageManager",
243:       "weka.core.SerializedObject",
244:       "weka.core.DenseInstance",
245:       "weka.core.neighboursearch.NearestNeighbourSearch",
246:       "weka.core.neighboursearch.CoverTree",
247:       "weka.core.NormalizableDistance",
248:       "weka.core.EuclideanDistance",
249:       "weka.core.Range",
250:       "weka.core.Stopwords",
251:       "weka.core.neighboursearch.BallTree",
252:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
253:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
254:       "weka.core.neighboursearch.balltrees.BallSplitter",
255:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
256:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
257:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
258:       "weka.core.TestInstances",
259:       "weka.attributeSelection.ASEvaluation",
260:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
261:       "weka.attributeSelection.PrincipalComponents",
262:       "weka.filters.Filter",
263:       "weka.filters.SimpleFilter",
264:       "weka.filters.SimpleStreamFilter",
265:       "weka.filters.MultiFilter",
266:       "weka.filters.AllFilter",
267:       "weka.core.tokenizers.NGramTokenizer",
268:       "weka.filters.supervised.attribute.Discretize",
269:       "weka.core.stemmers.LovinsStemmer",
270:       "weka.classifiers.trees.J48",
271:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
272:       "weka.core.neighboursearch.balltrees.BallNode",
273:       "weka.core.neighboursearch.LinearNNSearch",
274:       "weka.classifiers.SingleClassifierEnhancer",
275:       "weka.classifiers.misc.InputMappedClassifier",
276:       "weka.classifiers.rules.ZeroR",
277:       "weka.classifiers.RandomizableClassifier",
278:       "weka.core.Tag",
279:       "weka.classifiers.functions.SGDText",
280:       "weka.classifiers.bayes.BayesNet",
281:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
282:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
283:       "weka.classifiers.bayes.net.search.local.K2",
284:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
285:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
286:       "weka.classifiers.functions.supportVector.Kernel",
287:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
288:       "weka.core.stemmers.SnowballStemmer",
289:       "weka.core.stemmers.IteratedLovinsStemmer",
290:       "weka.core.WekaException",
291:       "weka.classifiers.misc.SerializedClassifier",
292:       "weka.core.stemmers.Stemming",
293:       "weka.core.converters.ArffLoader$ArffReader",
294:       "weka.classifiers.IteratedSingleClassifierEnhancer",
295:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
296:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
297:       "weka.classifiers.meta.Bagging",
298:       "weka.classifiers.trees.REPTree",
299:       "weka.core.WekaEnumeration",
300:       "weka.core.Attribute$1",
301:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
302:       "weka.classifiers.meta.CostSensitiveClassifier",
303:       "weka.classifiers.lazy.IBk",
304:       "weka.classifiers.MultipleClassifiersCombiner",
305:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
306:       "weka.classifiers.meta.MultiScheme",
307:       "weka.core.neighboursearch.KDTree",
308:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
309:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
310:       "weka.classifiers.bayes.net.BIFReader",
311:       "weka.core.FindWithCapabilities",
312:       "weka.core.SingleIndex",
313:       "weka.core.ClassDiscovery",
314:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
315:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
316:       "weka.core.UnsupportedAttributeTypeException",
317:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
318:       "weka.core.tokenizers.AlphabeticTokenizer",
319:       "weka.classifiers.meta.ClassificationViaRegression",
320:       "weka.classifiers.trees.m5.M5Base",
321:       "weka.classifiers.trees.M5P",
322:       "weka.classifiers.functions.LinearRegression",
323:       "weka.classifiers.trees.RandomTree",
324:       "weka.classifiers.functions.VotedPerceptron",
325:       "weka.attributeSelection.ReliefFAttributeEval",
326:       "weka.classifiers.bayes.NaiveBayesMultinomial",
327:       "weka.classifiers.functions.SimpleLogistic",
328:       "weka.classifiers.trees.DecisionStump",
329:       "weka.classifiers.meta.AdditiveRegression",
330:       "weka.classifiers.rules.M5Rules",
331:       "weka.core.UnassignedClassException",
332:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
333:       "weka.classifiers.meta.FilteredClassifier",
334:       "weka.filters.supervised.attribute.AttributeSelection",
335:       "weka.attributeSelection.AttributeSelection",
336:       "weka.attributeSelection.CfsSubsetEval",
337:       "weka.attributeSelection.ASSearch",
338:       "weka.attributeSelection.GreedyStepwise",
339:       "weka.attributeSelection.BestFirst",
340:       "weka.estimators.Estimator",
341:       "weka.estimators.KernelEstimator",
342:       "weka.classifiers.functions.Logistic",
343:       "weka.attributeSelection.WrapperSubsetEval",
344:       "weka.core.SelectedTag",
345:       "weka.classifiers.rules.OneR",
346:       "weka.core.ManhattanDistance",
347:       "weka.classifiers.lazy.LWL",
348:       "weka.classifiers.rules.PART",
349:       "weka.classifiers.rules.part.MakeDecList",
350:       "weka.core.Javadoc",
351:       "weka.core.OptionHandlerJavadoc",
352:       "weka.classifiers.functions.supportVector.CachedKernel",
353:       "weka.classifiers.functions.supportVector.Puk",
354:       "weka.classifiers.meta.AttributeSelectedClassifier",
355:       "weka.classifiers.functions.SimpleLinearRegression",
356:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
357:       "weka.classifiers.meta.AdaBoostM1",
358:       "weka.attributeSelection.CorrelationAttributeEval",
359:       "weka.classifiers.functions.GaussianProcesses",
360:       "weka.classifiers.functions.supportVector.PolyKernel",
361:       "weka.classifiers.lazy.KStar",
362:       "weka.classifiers.rules.DecisionTable",
363:       "weka.classifiers.functions.SMOreg",
364:       "weka.classifiers.functions.supportVector.RegOptimizer",
365:       "weka.classifiers.functions.supportVector.RegSMO",
366:       "weka.classifiers.functions.supportVector.RegSMOImproved",
367:       "weka.classifiers.functions.SGD",
368:       "weka.core.TechnicalInformation",
369:       "weka.core.TechnicalInformation$Type",
370:       "weka.core.TechnicalInformation$Field",
371:       "weka.core.neighboursearch.PerformanceStats",
372:       "weka.classifiers.meta.RandomCommittee",
373:       "weka.attributeSelection.InfoGainAttributeEval",
374:       "weka.classifiers.trees.LMT",
375:       "weka.classifiers.functions.supportVector.StringKernel",
376:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
377:       "weka.estimators.PoissonEstimator",
378:       "weka.classifiers.functions.SMO",
379:       "weka.classifiers.rules.JRip",
380:       "weka.core.matrix.Matrix",
381:       "weka.classifiers.meta.Vote",
382:       "weka.core.ListOptions",
383:       "weka.estimators.NormalEstimator",
384:       "weka.attributeSelection.GainRatioAttributeEval",
385:       "weka.core.SerializationHelper",
386:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
387:       "weka.attributeSelection.OneRAttributeEval",
388:       "weka.core.neighboursearch.kdtrees.MidPointOfWidestDimension",
389:       "weka.classifiers.meta.LogitBoost",
390:       "weka.classifiers.trees.j48.ClassifierTree",
391:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
392:       "weka.classifiers.meta.RegressionByDiscretization",
393:       "weka.filters.unsupervised.attribute.Discretize",
394:       "weka.classifiers.meta.CVParameterSelection",
395:       "weka.core.FastVector",
396:       "weka.classifiers.functions.supportVector.RBFKernel",
397:       "weka.core.neighboursearch.kdtrees.MedianOfWidestDimension",
398:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
399:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
400:       "weka.classifiers.meta.Stacking",
401:       "weka.core.neighboursearch.kdtrees.KMeansInpiredMethod",
402:       "weka.classifiers.bayes.NaiveBayesUpdateable",
403:       "weka.core.AttributeStats",
404:       "weka.classifiers.functions.MultilayerPerceptron",
405:       "weka.filters.unsupervised.attribute.NominalToBinary",
406:       "weka.classifiers.functions.neural.SigmoidUnit",
407:       "weka.classifiers.functions.neural.LinearUnit",
408:       "weka.experiment.Stats",
409:       "weka.core.MinkowskiDistance",
410:       "weka.classifiers.meta.MultiClassClassifier",
411:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
412:       "weka.core.neighboursearch.TreePerformanceStats",
413:       "weka.estimators.DiscreteEstimator",
414:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable"
415:     );
416:   }
417: }

[MASTER] 23:47:43.079 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>(2011);
String[] stringArray0 = new String[3];
stringArray0[0] = "-P";
stringArray0[1] = "5#z//sF";
stringArray0[2] = "";
naiveBayesMultinomialText0.setOptions(stringArray0);

[MASTER] 23:47:43.266 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_42_1575330463234/weka/classifiers/bayes/NaiveBayesMultinomialText_42_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_42_1575330463234/weka/classifiers/bayes/NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding.java]]
[MASTER] 23:47:43.266 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:47:43.266 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:47:43.266 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 23:47:43.266 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 23:47:43.266 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 23:47:43.267 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 23:47:43.267 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_42_1575330463234/weka/classifiers/bayes/NaiveBayesMultinomialText_42_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 23:47:43 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.System;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_42_tmp__ESTest extends NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=2.557702411245053
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
28:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
29:       String[] stringArray0 = new String[4];
30:       stringArray0[0] = "";
31:       stringArray0[1] = "";
32:       stringArray0[2] = "-lnorm";
33:       stringArray0[3] = "";
34:       naiveBayesMultinomialText0.setOptions(stringArray0);
35:       naiveBayesMultinomialText0.getMinWordFrequency();
36:       System.setCurrentTimeMillis(1678L);
37:   }
38: }
RegularFileObject[/tmp/EvoSuite_42_1575330463234/weka/classifiers/bayes/NaiveBayesMultinomialText_42_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 23:47:43 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.neighboursearch.KDTree",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.BinarySparseInstance",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.neighboursearch.balltrees.BallSplitter",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.filters.AllFilter",
145:       "weka.classifiers.AbstractClassifier",
146:       "weka.filters.unsupervised.attribute.Center",
147:       "weka.core.OptionHandler",
148:       "weka.core.WekaException",
149:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
150:       "weka.filters.StreamableFilter",
151:       "weka.core.Range",
152:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
153:       "weka.core.scripting.JythonSerializableObject",
154:       "weka.classifiers.Classifier",
155:       "weka.core.Capabilities$Capability",
156:       "weka.core.SparseInstance",
157:       "org.pentaho.packageManagement.PackageManager",
158:       "weka.attributeSelection.AttributeTransformer",
159:       "weka.core.tokenizers.WordTokenizer",
160:       "weka.classifiers.misc.SerializedClassifier",
161:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
162:       "weka.attributeSelection.PrincipalComponents",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.filters.SupervisedFilter",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.core.neighboursearch.LinearNNSearch",
171:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
172:       "weka.core.Option",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
175:       "weka.estimators.KernelEstimator",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.FastVector",
180:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
181:       "weka.core.UnassignedDatasetException",
182:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
183:       "weka.classifiers.SingleClassifierEnhancer",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.core.ProtectedProperties",
187:       "weka.estimators.Estimator",
188:       "weka.core.StringLocator",
189:       "weka.core.AttributeStats",
190:       "weka.core.WeightedInstancesHandler",
191:       "weka.core.neighboursearch.NearestNeighbourSearch",
192:       "weka.filters.unsupervised.attribute.Remove",
193:       "weka.core.EuclideanDistance",
194:       "weka.core.Instances",
195:       "weka.core.UnassignedClassException",
196:       "weka.classifiers.rules.ZeroR",
197:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
198:       "weka.filters.unsupervised.attribute.Standardize",
199:       "weka.core.TechnicalInformation",
200:       "weka.core.UnsupportedAttributeTypeException",
201:       "weka.classifiers.Sourcable",
202:       "weka.core.RevisionHandler",
203:       "weka.classifiers.evaluation.output.prediction.PlainText",
204:       "weka.core.neighboursearch.TreePerformanceStats",
205:       "weka.core.xml.XMLSerialization",
206:       "weka.classifiers.xml.XMLClassifier",
207:       "weka.filters.Filter",
208:       "weka.filters.supervised.attribute.Discretize"
209:     );
210:   } 
211: 
212:   private static void resetClasses() {
213:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding.class.getClassLoader()); 
214: 
215:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
216:       "weka.classifiers.AbstractClassifier",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
218:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
219:       "weka.core.Capabilities$Capability",
220:       "weka.core.tokenizers.Tokenizer",
221:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
222:       "weka.core.tokenizers.WordTokenizer",
223:       "weka.core.stemmers.NullStemmer",
224:       "weka.core.AbstractInstance",
225:       "weka.core.SparseInstance",
226:       "weka.core.BinarySparseInstance",
227:       "weka.core.Attribute",
228:       "weka.core.ProtectedProperties",
229:       "weka.core.Utils",
230:       "weka.core.UnassignedDatasetException",
231:       "weka.core.RevisionUtils",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Option",
234:       "weka.core.Instances",
235:       "weka.classifiers.bayes.NaiveBayes",
236:       "weka.classifiers.CostMatrix",
237:       "weka.core.Capabilities",
238:       "org.pentaho.packageManagement.PackageManager",
239:       "org.pentaho.packageManagement.DefaultPackageManager",
240:       "weka.core.Version",
241:       "weka.core.Environment",
242:       "weka.core.WekaPackageManager",
243:       "weka.core.SerializedObject",
244:       "weka.core.DenseInstance",
245:       "weka.core.neighboursearch.NearestNeighbourSearch",
246:       "weka.core.neighboursearch.CoverTree",
247:       "weka.core.NormalizableDistance",
248:       "weka.core.EuclideanDistance",
249:       "weka.core.Range",
250:       "weka.core.Stopwords",
251:       "weka.core.neighboursearch.BallTree",
252:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
253:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
254:       "weka.core.neighboursearch.balltrees.BallSplitter",
255:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
256:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
257:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
258:       "weka.core.TestInstances",
259:       "weka.attributeSelection.ASEvaluation",
260:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
261:       "weka.attributeSelection.PrincipalComponents",
262:       "weka.filters.Filter",
263:       "weka.filters.SimpleFilter",
264:       "weka.filters.SimpleStreamFilter",
265:       "weka.filters.MultiFilter",
266:       "weka.filters.AllFilter",
267:       "weka.core.tokenizers.NGramTokenizer",
268:       "weka.filters.supervised.attribute.Discretize",
269:       "weka.core.stemmers.LovinsStemmer",
270:       "weka.classifiers.trees.J48",
271:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
272:       "weka.core.neighboursearch.balltrees.BallNode",
273:       "weka.core.neighboursearch.LinearNNSearch",
274:       "weka.classifiers.SingleClassifierEnhancer",
275:       "weka.classifiers.misc.InputMappedClassifier",
276:       "weka.classifiers.rules.ZeroR",
277:       "weka.classifiers.RandomizableClassifier",
278:       "weka.core.Tag",
279:       "weka.classifiers.functions.SGDText",
280:       "weka.classifiers.bayes.BayesNet",
281:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
282:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
283:       "weka.classifiers.bayes.net.search.local.K2",
284:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
285:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
286:       "weka.classifiers.functions.supportVector.Kernel",
287:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
288:       "weka.core.stemmers.SnowballStemmer",
289:       "weka.core.stemmers.IteratedLovinsStemmer",
290:       "weka.core.WekaException",
291:       "weka.classifiers.misc.SerializedClassifier",
292:       "weka.core.stemmers.Stemming",
293:       "weka.core.converters.ArffLoader$ArffReader",
294:       "weka.classifiers.IteratedSingleClassifierEnhancer",
295:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
296:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
297:       "weka.classifiers.meta.Bagging",
298:       "weka.classifiers.trees.REPTree",
299:       "weka.core.WekaEnumeration",
300:       "weka.core.Attribute$1",
301:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
302:       "weka.classifiers.meta.CostSensitiveClassifier",
303:       "weka.classifiers.lazy.IBk",
304:       "weka.classifiers.MultipleClassifiersCombiner",
305:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
306:       "weka.classifiers.meta.MultiScheme",
307:       "weka.core.neighboursearch.KDTree",
308:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
309:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
310:       "weka.classifiers.bayes.net.BIFReader",
311:       "weka.core.FindWithCapabilities",
312:       "weka.core.SingleIndex",
313:       "weka.core.ClassDiscovery",
314:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
315:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
316:       "weka.core.UnsupportedAttributeTypeException",
317:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
318:       "weka.core.tokenizers.AlphabeticTokenizer",
319:       "weka.classifiers.meta.ClassificationViaRegression",
320:       "weka.classifiers.trees.m5.M5Base",
321:       "weka.classifiers.trees.M5P",
322:       "weka.classifiers.functions.LinearRegression",
323:       "weka.classifiers.trees.RandomTree",
324:       "weka.classifiers.functions.VotedPerceptron",
325:       "weka.attributeSelection.ReliefFAttributeEval",
326:       "weka.classifiers.bayes.NaiveBayesMultinomial",
327:       "weka.classifiers.functions.SimpleLogistic",
328:       "weka.classifiers.trees.DecisionStump",
329:       "weka.classifiers.meta.AdditiveRegression",
330:       "weka.classifiers.rules.M5Rules",
331:       "weka.core.UnassignedClassException",
332:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
333:       "weka.classifiers.meta.FilteredClassifier",
334:       "weka.filters.supervised.attribute.AttributeSelection",
335:       "weka.attributeSelection.AttributeSelection",
336:       "weka.attributeSelection.CfsSubsetEval",
337:       "weka.attributeSelection.ASSearch",
338:       "weka.attributeSelection.GreedyStepwise",
339:       "weka.attributeSelection.BestFirst",
340:       "weka.estimators.Estimator",
341:       "weka.estimators.KernelEstimator",
342:       "weka.classifiers.functions.Logistic",
343:       "weka.attributeSelection.WrapperSubsetEval",
344:       "weka.core.SelectedTag",
345:       "weka.classifiers.rules.OneR",
346:       "weka.core.ManhattanDistance",
347:       "weka.classifiers.lazy.LWL",
348:       "weka.classifiers.rules.PART",
349:       "weka.classifiers.rules.part.MakeDecList",
350:       "weka.core.Javadoc",
351:       "weka.core.OptionHandlerJavadoc",
352:       "weka.classifiers.functions.supportVector.CachedKernel",
353:       "weka.classifiers.functions.supportVector.Puk",
354:       "weka.classifiers.meta.AttributeSelectedClassifier",
355:       "weka.classifiers.functions.SimpleLinearRegression",
356:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
357:       "weka.classifiers.meta.AdaBoostM1",
358:       "weka.attributeSelection.CorrelationAttributeEval",
359:       "weka.classifiers.functions.GaussianProcesses",
360:       "weka.classifiers.functions.supportVector.PolyKernel",
361:       "weka.classifiers.lazy.KStar",
362:       "weka.classifiers.rules.DecisionTable",
363:       "weka.classifiers.functions.SMOreg",
364:       "weka.classifiers.functions.supportVector.RegOptimizer",
365:       "weka.classifiers.functions.supportVector.RegSMO",
366:       "weka.classifiers.functions.supportVector.RegSMOImproved",
367:       "weka.classifiers.functions.SGD",
368:       "weka.core.TechnicalInformation",
369:       "weka.core.TechnicalInformation$Type",
370:       "weka.core.TechnicalInformation$Field",
371:       "weka.core.neighboursearch.PerformanceStats",
372:       "weka.classifiers.meta.RandomCommittee",
373:       "weka.attributeSelection.InfoGainAttributeEval",
374:       "weka.classifiers.trees.LMT",
375:       "weka.classifiers.functions.supportVector.StringKernel",
376:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
377:       "weka.estimators.PoissonEstimator",
378:       "weka.classifiers.functions.SMO",
379:       "weka.classifiers.rules.JRip",
380:       "weka.core.matrix.Matrix",
381:       "weka.classifiers.meta.Vote",
382:       "weka.core.ListOptions",
383:       "weka.estimators.NormalEstimator",
384:       "weka.attributeSelection.GainRatioAttributeEval",
385:       "weka.core.SerializationHelper",
386:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
387:       "weka.attributeSelection.OneRAttributeEval",
388:       "weka.core.neighboursearch.kdtrees.MidPointOfWidestDimension",
389:       "weka.classifiers.meta.LogitBoost",
390:       "weka.classifiers.trees.j48.ClassifierTree",
391:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
392:       "weka.classifiers.meta.RegressionByDiscretization",
393:       "weka.filters.unsupervised.attribute.Discretize",
394:       "weka.classifiers.meta.CVParameterSelection",
395:       "weka.core.FastVector",
396:       "weka.classifiers.functions.supportVector.RBFKernel",
397:       "weka.core.neighboursearch.kdtrees.MedianOfWidestDimension",
398:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
399:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
400:       "weka.classifiers.meta.Stacking",
401:       "weka.core.neighboursearch.kdtrees.KMeansInpiredMethod",
402:       "weka.classifiers.bayes.NaiveBayesUpdateable",
403:       "weka.core.AttributeStats",
404:       "weka.classifiers.functions.MultilayerPerceptron",
405:       "weka.filters.unsupervised.attribute.NominalToBinary",
406:       "weka.classifiers.functions.neural.SigmoidUnit",
407:       "weka.classifiers.functions.neural.LinearUnit",
408:       "weka.experiment.Stats",
409:       "weka.core.MinkowskiDistance",
410:       "weka.classifiers.meta.MultiClassClassifier",
411:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
412:       "weka.core.neighboursearch.TreePerformanceStats",
413:       "weka.estimators.DiscreteEstimator",
414:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable"
415:     );
416:   }
417: }

[MASTER] 23:47:43.268 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
String[] stringArray0 = new String[4];
stringArray0[0] = "";
stringArray0[1] = "";
stringArray0[2] = "-lnorm";
stringArray0[3] = "";
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText0.getMinWordFrequency();
System.setCurrentTimeMillis(1678L);

[MASTER] 23:47:43.363 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_45_1575330463334/weka/classifiers/bayes/NaiveBayesMultinomialText_45_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_45_1575330463334/weka/classifiers/bayes/NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding.java]]
[MASTER] 23:47:43.364 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:47:43.364 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:47:43.364 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 23:47:43.364 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 23:47:43.364 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 23:47:43.364 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 23:47:43.364 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 23:47:43.365 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_45_1575330463334/weka/classifiers/bayes/NaiveBayesMultinomialText_45_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 23:47:43 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_45_tmp__ESTest extends NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=0.4
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
28:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
29:       linkedHashMap0.put((Integer) null, linkedHashMap1);
30:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
31:       naiveBayesMultinomialText0.m_periodicP = (-1150);
32:       naiveBayesMultinomialText0.pruneDictionary();
33:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
34:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
35:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
36:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
37:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
38:   }
39: }
RegularFileObject[/tmp/EvoSuite_45_1575330463334/weka/classifiers/bayes/NaiveBayesMultinomialText_45_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 23:47:43 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.neighboursearch.KDTree",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.BinarySparseInstance",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.neighboursearch.balltrees.BallSplitter",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.filters.AllFilter",
145:       "weka.classifiers.AbstractClassifier",
146:       "weka.filters.unsupervised.attribute.Center",
147:       "weka.core.OptionHandler",
148:       "weka.core.WekaException",
149:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
150:       "weka.filters.StreamableFilter",
151:       "weka.core.Range",
152:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
153:       "weka.core.scripting.JythonSerializableObject",
154:       "weka.classifiers.Classifier",
155:       "weka.core.Capabilities$Capability",
156:       "weka.core.SparseInstance",
157:       "org.pentaho.packageManagement.PackageManager",
158:       "weka.attributeSelection.AttributeTransformer",
159:       "weka.core.tokenizers.WordTokenizer",
160:       "weka.classifiers.misc.SerializedClassifier",
161:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
162:       "weka.attributeSelection.PrincipalComponents",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.filters.SupervisedFilter",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.core.neighboursearch.LinearNNSearch",
171:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
172:       "weka.core.Option",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
175:       "weka.estimators.KernelEstimator",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.FastVector",
180:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
181:       "weka.core.UnassignedDatasetException",
182:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
183:       "weka.classifiers.SingleClassifierEnhancer",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.core.ProtectedProperties",
187:       "weka.estimators.Estimator",
188:       "weka.core.StringLocator",
189:       "weka.core.AttributeStats",
190:       "weka.core.WeightedInstancesHandler",
191:       "weka.core.neighboursearch.NearestNeighbourSearch",
192:       "weka.filters.unsupervised.attribute.Remove",
193:       "weka.core.EuclideanDistance",
194:       "weka.core.Instances",
195:       "weka.core.UnassignedClassException",
196:       "weka.classifiers.rules.ZeroR",
197:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
198:       "weka.filters.unsupervised.attribute.Standardize",
199:       "weka.core.TechnicalInformation",
200:       "weka.core.UnsupportedAttributeTypeException",
201:       "weka.classifiers.Sourcable",
202:       "weka.core.RevisionHandler",
203:       "weka.classifiers.evaluation.output.prediction.PlainText",
204:       "weka.core.neighboursearch.TreePerformanceStats",
205:       "weka.core.xml.XMLSerialization",
206:       "weka.classifiers.xml.XMLClassifier",
207:       "weka.filters.Filter",
208:       "weka.filters.supervised.attribute.Discretize"
209:     );
210:   } 
211: 
212:   private static void resetClasses() {
213:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding.class.getClassLoader()); 
214: 
215:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
216:       "weka.classifiers.AbstractClassifier",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
218:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
219:       "weka.core.Capabilities$Capability",
220:       "weka.core.tokenizers.Tokenizer",
221:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
222:       "weka.core.tokenizers.WordTokenizer",
223:       "weka.core.stemmers.NullStemmer",
224:       "weka.core.AbstractInstance",
225:       "weka.core.SparseInstance",
226:       "weka.core.BinarySparseInstance",
227:       "weka.core.Attribute",
228:       "weka.core.ProtectedProperties",
229:       "weka.core.Utils",
230:       "weka.core.UnassignedDatasetException",
231:       "weka.core.RevisionUtils",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Option",
234:       "weka.core.Instances",
235:       "weka.classifiers.bayes.NaiveBayes",
236:       "weka.classifiers.CostMatrix",
237:       "weka.core.Capabilities",
238:       "org.pentaho.packageManagement.PackageManager",
239:       "org.pentaho.packageManagement.DefaultPackageManager",
240:       "weka.core.Version",
241:       "weka.core.Environment",
242:       "weka.core.WekaPackageManager",
243:       "weka.core.SerializedObject",
244:       "weka.core.DenseInstance",
245:       "weka.core.neighboursearch.NearestNeighbourSearch",
246:       "weka.core.neighboursearch.CoverTree",
247:       "weka.core.NormalizableDistance",
248:       "weka.core.EuclideanDistance",
249:       "weka.core.Range",
250:       "weka.core.Stopwords",
251:       "weka.core.neighboursearch.BallTree",
252:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
253:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
254:       "weka.core.neighboursearch.balltrees.BallSplitter",
255:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
256:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
257:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
258:       "weka.core.TestInstances",
259:       "weka.attributeSelection.ASEvaluation",
260:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
261:       "weka.attributeSelection.PrincipalComponents",
262:       "weka.filters.Filter",
263:       "weka.filters.SimpleFilter",
264:       "weka.filters.SimpleStreamFilter",
265:       "weka.filters.MultiFilter",
266:       "weka.filters.AllFilter",
267:       "weka.core.tokenizers.NGramTokenizer",
268:       "weka.filters.supervised.attribute.Discretize",
269:       "weka.core.stemmers.LovinsStemmer",
270:       "weka.classifiers.trees.J48",
271:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
272:       "weka.core.neighboursearch.balltrees.BallNode",
273:       "weka.core.neighboursearch.LinearNNSearch",
274:       "weka.classifiers.SingleClassifierEnhancer",
275:       "weka.classifiers.misc.InputMappedClassifier",
276:       "weka.classifiers.rules.ZeroR",
277:       "weka.classifiers.RandomizableClassifier",
278:       "weka.core.Tag",
279:       "weka.classifiers.functions.SGDText",
280:       "weka.classifiers.bayes.BayesNet",
281:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
282:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
283:       "weka.classifiers.bayes.net.search.local.K2",
284:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
285:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
286:       "weka.classifiers.functions.supportVector.Kernel",
287:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
288:       "weka.core.stemmers.SnowballStemmer",
289:       "weka.core.stemmers.IteratedLovinsStemmer",
290:       "weka.core.WekaException",
291:       "weka.classifiers.misc.SerializedClassifier",
292:       "weka.core.stemmers.Stemming",
293:       "weka.core.converters.ArffLoader$ArffReader",
294:       "weka.classifiers.IteratedSingleClassifierEnhancer",
295:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
296:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
297:       "weka.classifiers.meta.Bagging",
298:       "weka.classifiers.trees.REPTree",
299:       "weka.core.WekaEnumeration",
300:       "weka.core.Attribute$1",
301:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
302:       "weka.classifiers.meta.CostSensitiveClassifier",
303:       "weka.classifiers.lazy.IBk",
304:       "weka.classifiers.MultipleClassifiersCombiner",
305:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
306:       "weka.classifiers.meta.MultiScheme",
307:       "weka.core.neighboursearch.KDTree",
308:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
309:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
310:       "weka.classifiers.bayes.net.BIFReader",
311:       "weka.core.FindWithCapabilities",
312:       "weka.core.SingleIndex",
313:       "weka.core.ClassDiscovery",
314:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
315:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
316:       "weka.core.UnsupportedAttributeTypeException",
317:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
318:       "weka.core.tokenizers.AlphabeticTokenizer",
319:       "weka.classifiers.meta.ClassificationViaRegression",
320:       "weka.classifiers.trees.m5.M5Base",
321:       "weka.classifiers.trees.M5P",
322:       "weka.classifiers.functions.LinearRegression",
323:       "weka.classifiers.trees.RandomTree",
324:       "weka.classifiers.functions.VotedPerceptron",
325:       "weka.attributeSelection.ReliefFAttributeEval",
326:       "weka.classifiers.bayes.NaiveBayesMultinomial",
327:       "weka.classifiers.functions.SimpleLogistic",
328:       "weka.classifiers.trees.DecisionStump",
329:       "weka.classifiers.meta.AdditiveRegression",
330:       "weka.classifiers.rules.M5Rules",
331:       "weka.core.UnassignedClassException",
332:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
333:       "weka.classifiers.meta.FilteredClassifier",
334:       "weka.filters.supervised.attribute.AttributeSelection",
335:       "weka.attributeSelection.AttributeSelection",
336:       "weka.attributeSelection.CfsSubsetEval",
337:       "weka.attributeSelection.ASSearch",
338:       "weka.attributeSelection.GreedyStepwise",
339:       "weka.attributeSelection.BestFirst",
340:       "weka.estimators.Estimator",
341:       "weka.estimators.KernelEstimator",
342:       "weka.classifiers.functions.Logistic",
343:       "weka.attributeSelection.WrapperSubsetEval",
344:       "weka.core.SelectedTag",
345:       "weka.classifiers.rules.OneR",
346:       "weka.core.ManhattanDistance",
347:       "weka.classifiers.lazy.LWL",
348:       "weka.classifiers.rules.PART",
349:       "weka.classifiers.rules.part.MakeDecList",
350:       "weka.core.Javadoc",
351:       "weka.core.OptionHandlerJavadoc",
352:       "weka.classifiers.functions.supportVector.CachedKernel",
353:       "weka.classifiers.functions.supportVector.Puk",
354:       "weka.classifiers.meta.AttributeSelectedClassifier",
355:       "weka.classifiers.functions.SimpleLinearRegression",
356:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
357:       "weka.classifiers.meta.AdaBoostM1",
358:       "weka.attributeSelection.CorrelationAttributeEval",
359:       "weka.classifiers.functions.GaussianProcesses",
360:       "weka.classifiers.functions.supportVector.PolyKernel",
361:       "weka.classifiers.lazy.KStar",
362:       "weka.classifiers.rules.DecisionTable",
363:       "weka.classifiers.functions.SMOreg",
364:       "weka.classifiers.functions.supportVector.RegOptimizer",
365:       "weka.classifiers.functions.supportVector.RegSMO",
366:       "weka.classifiers.functions.supportVector.RegSMOImproved",
367:       "weka.classifiers.functions.SGD",
368:       "weka.core.TechnicalInformation",
369:       "weka.core.TechnicalInformation$Type",
370:       "weka.core.TechnicalInformation$Field",
371:       "weka.core.neighboursearch.PerformanceStats",
372:       "weka.classifiers.meta.RandomCommittee",
373:       "weka.attributeSelection.InfoGainAttributeEval",
374:       "weka.classifiers.trees.LMT",
375:       "weka.classifiers.functions.supportVector.StringKernel",
376:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
377:       "weka.estimators.PoissonEstimator",
378:       "weka.classifiers.functions.SMO",
379:       "weka.classifiers.rules.JRip",
380:       "weka.core.matrix.Matrix",
381:       "weka.classifiers.meta.Vote",
382:       "weka.core.ListOptions",
383:       "weka.estimators.NormalEstimator",
384:       "weka.attributeSelection.GainRatioAttributeEval",
385:       "weka.core.SerializationHelper",
386:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
387:       "weka.attributeSelection.OneRAttributeEval",
388:       "weka.core.neighboursearch.kdtrees.MidPointOfWidestDimension",
389:       "weka.classifiers.meta.LogitBoost",
390:       "weka.classifiers.trees.j48.ClassifierTree",
391:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
392:       "weka.classifiers.meta.RegressionByDiscretization",
393:       "weka.filters.unsupervised.attribute.Discretize",
394:       "weka.classifiers.meta.CVParameterSelection",
395:       "weka.core.FastVector",
396:       "weka.classifiers.functions.supportVector.RBFKernel",
397:       "weka.core.neighboursearch.kdtrees.MedianOfWidestDimension",
398:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
399:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
400:       "weka.classifiers.meta.Stacking",
401:       "weka.core.neighboursearch.kdtrees.KMeansInpiredMethod",
402:       "weka.classifiers.bayes.NaiveBayesUpdateable",
403:       "weka.core.AttributeStats",
404:       "weka.classifiers.functions.MultilayerPerceptron",
405:       "weka.filters.unsupervised.attribute.NominalToBinary",
406:       "weka.classifiers.functions.neural.SigmoidUnit",
407:       "weka.classifiers.functions.neural.LinearUnit",
408:       "weka.experiment.Stats",
409:       "weka.core.MinkowskiDistance",
410:       "weka.classifiers.meta.MultiClassClassifier",
411:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
412:       "weka.core.neighboursearch.TreePerformanceStats",
413:       "weka.estimators.DiscreteEstimator",
414:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable"
415:     );
416:   }
417: }

[MASTER] 23:47:43.365 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.put((Integer) null, linkedHashMap1);
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
naiveBayesMultinomialText0.m_periodicP = (-1150);
naiveBayesMultinomialText0.pruneDictionary();
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());


[MASTER] 23:47:43.708 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_54_1575330463679/weka/classifiers/bayes/NaiveBayesMultinomialText_54_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_54_1575330463679/weka/classifiers/bayes/NaiveBayesMultinomialText_54_tmp__ESTest_scaffolding.java]]
[MASTER] 23:47:43.708 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:47:43.708 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:47:43.709 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 23:47:43.709 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 23:47:43.709 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_54_1575330463679/weka/classifiers/bayes/NaiveBayesMultinomialText_54_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 23:47:43 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.DenseInstance;
17: import weka.core.stemmers.SnowballStemmer;
18: import weka.core.stemmers.Stemmer;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_54_tmp__ESTest extends NaiveBayesMultinomialText_54_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=0.4
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       double[] doubleArray0 = new double[9];
31:       doubleArray0[1] = (-966.1629914379987);
32:       doubleArray0[2] = (-966.1629914379987);
33:       doubleArray0[3] = (-966.1629914379987);
34:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
35:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
36:       DenseInstance denseInstance0 = new DenseInstance((-966.1629914379987), doubleArray0);
37:       // Undeclared exception!
38:       try { 
39:         naiveBayesMultinomialText0.tokenizeInstance(denseInstance0, true);
40:         fail("Expecting exception: RuntimeException");
41:       
42:       } catch(RuntimeException e) {
43:          //
44:          // DenseInstance doesn't have access to a dataset!
45:          //
46:          verifyException("weka.core.AbstractInstance", e);
47:       }
48:   }
49: }
RegularFileObject[/tmp/EvoSuite_54_1575330463679/weka/classifiers/bayes/NaiveBayesMultinomialText_54_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 23:47:43 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_54_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_54_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.neighboursearch.KDTree",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.BinarySparseInstance",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.neighboursearch.balltrees.BallSplitter",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.filters.AllFilter",
145:       "weka.classifiers.AbstractClassifier",
146:       "weka.filters.unsupervised.attribute.Center",
147:       "weka.core.OptionHandler",
148:       "weka.core.WekaException",
149:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
150:       "weka.filters.StreamableFilter",
151:       "weka.core.Range",
152:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
153:       "weka.core.scripting.JythonSerializableObject",
154:       "weka.classifiers.Classifier",
155:       "weka.core.Capabilities$Capability",
156:       "weka.core.SparseInstance",
157:       "org.pentaho.packageManagement.PackageManager",
158:       "weka.attributeSelection.AttributeTransformer",
159:       "weka.core.tokenizers.WordTokenizer",
160:       "weka.classifiers.misc.SerializedClassifier",
161:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
162:       "weka.attributeSelection.PrincipalComponents",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.filters.SupervisedFilter",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.core.neighboursearch.LinearNNSearch",
171:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
172:       "weka.core.Option",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
175:       "weka.estimators.KernelEstimator",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.FastVector",
180:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
181:       "weka.core.UnassignedDatasetException",
182:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
183:       "weka.classifiers.SingleClassifierEnhancer",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.core.ProtectedProperties",
187:       "weka.estimators.Estimator",
188:       "weka.core.StringLocator",
189:       "weka.core.AttributeStats",
190:       "weka.core.WeightedInstancesHandler",
191:       "weka.core.neighboursearch.NearestNeighbourSearch",
192:       "weka.filters.unsupervised.attribute.Remove",
193:       "weka.core.EuclideanDistance",
194:       "weka.core.Instances",
195:       "weka.core.UnassignedClassException",
196:       "weka.classifiers.rules.ZeroR",
197:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
198:       "weka.filters.unsupervised.attribute.Standardize",
199:       "weka.core.TechnicalInformation",
200:       "weka.core.UnsupportedAttributeTypeException",
201:       "weka.classifiers.Sourcable",
202:       "weka.core.RevisionHandler",
203:       "weka.classifiers.evaluation.output.prediction.PlainText",
204:       "weka.core.neighboursearch.TreePerformanceStats",
205:       "weka.core.xml.XMLSerialization",
206:       "weka.classifiers.xml.XMLClassifier",
207:       "weka.filters.Filter",
208:       "weka.filters.supervised.attribute.Discretize"
209:     );
210:   } 
211: 
212:   private static void resetClasses() {
213:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_54_tmp__ESTest_scaffolding.class.getClassLoader()); 
214: 
215:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
216:       "weka.classifiers.AbstractClassifier",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
218:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
219:       "weka.core.Capabilities$Capability",
220:       "weka.core.tokenizers.Tokenizer",
221:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
222:       "weka.core.tokenizers.WordTokenizer",
223:       "weka.core.stemmers.NullStemmer",
224:       "weka.core.AbstractInstance",
225:       "weka.core.SparseInstance",
226:       "weka.core.BinarySparseInstance",
227:       "weka.core.Attribute",
228:       "weka.core.ProtectedProperties",
229:       "weka.core.Utils",
230:       "weka.core.UnassignedDatasetException",
231:       "weka.core.RevisionUtils",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Option",
234:       "weka.core.Instances",
235:       "weka.classifiers.bayes.NaiveBayes",
236:       "weka.classifiers.CostMatrix",
237:       "weka.core.Capabilities",
238:       "org.pentaho.packageManagement.PackageManager",
239:       "org.pentaho.packageManagement.DefaultPackageManager",
240:       "weka.core.Version",
241:       "weka.core.Environment",
242:       "weka.core.WekaPackageManager",
243:       "weka.core.SerializedObject",
244:       "weka.core.DenseInstance",
245:       "weka.core.neighboursearch.NearestNeighbourSearch",
246:       "weka.core.neighboursearch.CoverTree",
247:       "weka.core.NormalizableDistance",
248:       "weka.core.EuclideanDistance",
249:       "weka.core.Range",
250:       "weka.core.Stopwords",
251:       "weka.core.neighboursearch.BallTree",
252:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
253:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
254:       "weka.core.neighboursearch.balltrees.BallSplitter",
255:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
256:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
257:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
258:       "weka.core.TestInstances",
259:       "weka.attributeSelection.ASEvaluation",
260:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
261:       "weka.attributeSelection.PrincipalComponents",
262:       "weka.filters.Filter",
263:       "weka.filters.SimpleFilter",
264:       "weka.filters.SimpleStreamFilter",
265:       "weka.filters.MultiFilter",
266:       "weka.filters.AllFilter",
267:       "weka.core.tokenizers.NGramTokenizer",
268:       "weka.filters.supervised.attribute.Discretize",
269:       "weka.core.stemmers.LovinsStemmer",
270:       "weka.classifiers.trees.J48",
271:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
272:       "weka.core.neighboursearch.balltrees.BallNode",
273:       "weka.core.neighboursearch.LinearNNSearch",
274:       "weka.classifiers.SingleClassifierEnhancer",
275:       "weka.classifiers.misc.InputMappedClassifier",
276:       "weka.classifiers.rules.ZeroR",
277:       "weka.classifiers.RandomizableClassifier",
278:       "weka.core.Tag",
279:       "weka.classifiers.functions.SGDText",
280:       "weka.classifiers.bayes.BayesNet",
281:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
282:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
283:       "weka.classifiers.bayes.net.search.local.K2",
284:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
285:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
286:       "weka.classifiers.functions.supportVector.Kernel",
287:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
288:       "weka.core.stemmers.SnowballStemmer",
289:       "weka.core.stemmers.IteratedLovinsStemmer",
290:       "weka.core.WekaException",
291:       "weka.classifiers.misc.SerializedClassifier",
292:       "weka.core.stemmers.Stemming",
293:       "weka.core.converters.ArffLoader$ArffReader",
294:       "weka.classifiers.IteratedSingleClassifierEnhancer",
295:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
296:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
297:       "weka.classifiers.meta.Bagging",
298:       "weka.classifiers.trees.REPTree",
299:       "weka.core.WekaEnumeration",
300:       "weka.core.Attribute$1",
301:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
302:       "weka.classifiers.meta.CostSensitiveClassifier",
303:       "weka.classifiers.lazy.IBk",
304:       "weka.classifiers.MultipleClassifiersCombiner",
305:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
306:       "weka.classifiers.meta.MultiScheme",
307:       "weka.core.neighboursearch.KDTree",
308:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
309:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
310:       "weka.classifiers.bayes.net.BIFReader",
311:       "weka.core.FindWithCapabilities",
312:       "weka.core.SingleIndex",
313:       "weka.core.ClassDiscovery",
314:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
315:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
316:       "weka.core.UnsupportedAttributeTypeException",
317:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
318:       "weka.core.tokenizers.AlphabeticTokenizer",
319:       "weka.classifiers.meta.ClassificationViaRegression",
320:       "weka.classifiers.trees.m5.M5Base",
321:       "weka.classifiers.trees.M5P",
322:       "weka.classifiers.functions.LinearRegression",
323:       "weka.classifiers.trees.RandomTree",
324:       "weka.classifiers.functions.VotedPerceptron",
325:       "weka.attributeSelection.ReliefFAttributeEval",
326:       "weka.classifiers.bayes.NaiveBayesMultinomial",
327:       "weka.classifiers.functions.SimpleLogistic",
328:       "weka.classifiers.trees.DecisionStump",
329:       "weka.classifiers.meta.AdditiveRegression",
330:       "weka.classifiers.rules.M5Rules",
331:       "weka.core.UnassignedClassException",
332:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
333:       "weka.classifiers.meta.FilteredClassifier",
334:       "weka.filters.supervised.attribute.AttributeSelection",
335:       "weka.attributeSelection.AttributeSelection",
336:       "weka.attributeSelection.CfsSubsetEval",
337:       "weka.attributeSelection.ASSearch",
338:       "weka.attributeSelection.GreedyStepwise",
339:       "weka.attributeSelection.BestFirst",
340:       "weka.estimators.Estimator",
341:       "weka.estimators.KernelEstimator",
342:       "weka.classifiers.functions.Logistic",
343:       "weka.attributeSelection.WrapperSubsetEval",
344:       "weka.core.SelectedTag",
345:       "weka.classifiers.rules.OneR",
346:       "weka.core.ManhattanDistance",
347:       "weka.classifiers.lazy.LWL",
348:       "weka.classifiers.rules.PART",
349:       "weka.classifiers.rules.part.MakeDecList",
350:       "weka.core.Javadoc",
351:       "weka.core.OptionHandlerJavadoc",
352:       "weka.classifiers.functions.supportVector.CachedKernel",
353:       "weka.classifiers.functions.supportVector.Puk",
354:       "weka.classifiers.meta.AttributeSelectedClassifier",
355:       "weka.classifiers.functions.SimpleLinearRegression",
356:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
357:       "weka.classifiers.meta.AdaBoostM1",
358:       "weka.attributeSelection.CorrelationAttributeEval",
359:       "weka.classifiers.functions.GaussianProcesses",
360:       "weka.classifiers.functions.supportVector.PolyKernel",
361:       "weka.classifiers.lazy.KStar",
362:       "weka.classifiers.rules.DecisionTable",
363:       "weka.classifiers.functions.SMOreg",
364:       "weka.classifiers.functions.supportVector.RegOptimizer",
365:       "weka.classifiers.functions.supportVector.RegSMO",
366:       "weka.classifiers.functions.supportVector.RegSMOImproved",
367:       "weka.classifiers.functions.SGD",
368:       "weka.core.TechnicalInformation",
369:       "weka.core.TechnicalInformation$Type",
370:       "weka.core.TechnicalInformation$Field",
371:       "weka.core.neighboursearch.PerformanceStats",
372:       "weka.classifiers.meta.RandomCommittee",
373:       "weka.attributeSelection.InfoGainAttributeEval",
374:       "weka.classifiers.trees.LMT",
375:       "weka.classifiers.functions.supportVector.StringKernel",
376:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
377:       "weka.estimators.PoissonEstimator",
378:       "weka.classifiers.functions.SMO",
379:       "weka.classifiers.rules.JRip",
380:       "weka.core.matrix.Matrix",
381:       "weka.classifiers.meta.Vote",
382:       "weka.core.ListOptions",
383:       "weka.estimators.NormalEstimator",
384:       "weka.attributeSelection.GainRatioAttributeEval",
385:       "weka.core.SerializationHelper",
386:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
387:       "weka.attributeSelection.OneRAttributeEval",
388:       "weka.core.neighboursearch.kdtrees.MidPointOfWidestDimension",
389:       "weka.classifiers.meta.LogitBoost",
390:       "weka.classifiers.trees.j48.ClassifierTree",
391:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
392:       "weka.classifiers.meta.RegressionByDiscretization",
393:       "weka.filters.unsupervised.attribute.Discretize",
394:       "weka.classifiers.meta.CVParameterSelection",
395:       "weka.core.FastVector",
396:       "weka.classifiers.functions.supportVector.RBFKernel",
397:       "weka.core.neighboursearch.kdtrees.MedianOfWidestDimension",
398:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
399:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
400:       "weka.classifiers.meta.Stacking",
401:       "weka.core.neighboursearch.kdtrees.KMeansInpiredMethod",
402:       "weka.classifiers.bayes.NaiveBayesUpdateable",
403:       "weka.core.AttributeStats",
404:       "weka.classifiers.functions.MultilayerPerceptron",
405:       "weka.filters.unsupervised.attribute.NominalToBinary",
406:       "weka.classifiers.functions.neural.SigmoidUnit",
407:       "weka.classifiers.functions.neural.LinearUnit",
408:       "weka.experiment.Stats",
409:       "weka.core.MinkowskiDistance",
410:       "weka.classifiers.meta.MultiClassClassifier",
411:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
412:       "weka.core.neighboursearch.TreePerformanceStats",
413:       "weka.estimators.DiscreteEstimator",
414:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable"
415:     );
416:   }
417: }

[MASTER] 23:47:43.710 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
double[] doubleArray0 = new double[9];
doubleArray0[1] = (-966.1629914379987);
doubleArray0[2] = (-966.1629914379987);
doubleArray0[3] = (-966.1629914379987);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
DenseInstance denseInstance0 = new DenseInstance((-966.1629914379987), doubleArray0);
naiveBayesMultinomialText0.tokenizeInstance(denseInstance0, true);

[MASTER] 23:47:44.222 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_67_1575330464193/weka/classifiers/bayes/NaiveBayesMultinomialText_67_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_67_1575330464193/weka/classifiers/bayes/NaiveBayesMultinomialText_67_tmp__ESTest_scaffolding.java]]
[MASTER] 23:47:44.222 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:47:44.222 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:47:44.222 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 23:47:44.222 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 23:47:44.223 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_67_1575330464193/weka/classifiers/bayes/NaiveBayesMultinomialText_67_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 23:47:44 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.testdata.FileSystemHandling;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_67_tmp__ESTest extends NaiveBayesMultinomialText_67_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=3.261950424367441
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       FileSystemHandling.shouldAllThrowIOExceptions();
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       naiveBayesMultinomialText0.globalInfo();
29:       naiveBayesMultinomialText0.setLowercaseTokens(true);
30:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
31:       linkedHashMap0.keySet();
32:       naiveBayesMultinomialText0.toString();
33:       naiveBayesMultinomialText0.getPeriodicPruning();
34:       naiveBayesMultinomialText0.getOptions();
35:       naiveBayesMultinomialText0.getCapabilities();
36:       naiveBayesMultinomialText0.lowercaseTokensTipText();
37:       assertTrue(naiveBayesMultinomialText0.getLowercaseTokens());
38:   }
39: }
RegularFileObject[/tmp/EvoSuite_67_1575330464193/weka/classifiers/bayes/NaiveBayesMultinomialText_67_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 23:47:44 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_67_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_67_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.neighboursearch.KDTree",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.BinarySparseInstance",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.neighboursearch.balltrees.BallSplitter",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.filters.AllFilter",
145:       "weka.classifiers.AbstractClassifier",
146:       "weka.filters.unsupervised.attribute.Center",
147:       "weka.core.OptionHandler",
148:       "weka.core.WekaException",
149:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
150:       "weka.filters.StreamableFilter",
151:       "weka.core.Range",
152:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
153:       "weka.core.scripting.JythonSerializableObject",
154:       "weka.classifiers.Classifier",
155:       "weka.core.Capabilities$Capability",
156:       "weka.core.SparseInstance",
157:       "org.pentaho.packageManagement.PackageManager",
158:       "weka.attributeSelection.AttributeTransformer",
159:       "weka.core.tokenizers.WordTokenizer",
160:       "weka.classifiers.misc.SerializedClassifier",
161:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
162:       "weka.attributeSelection.PrincipalComponents",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.filters.SupervisedFilter",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.core.neighboursearch.LinearNNSearch",
171:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
172:       "weka.core.Option",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
175:       "weka.estimators.KernelEstimator",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.FastVector",
180:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
181:       "weka.core.UnassignedDatasetException",
182:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
183:       "weka.classifiers.SingleClassifierEnhancer",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.core.ProtectedProperties",
187:       "weka.estimators.Estimator",
188:       "weka.core.StringLocator",
189:       "weka.core.AttributeStats",
190:       "weka.core.WeightedInstancesHandler",
191:       "weka.core.neighboursearch.NearestNeighbourSearch",
192:       "weka.filters.unsupervised.attribute.Remove",
193:       "weka.core.EuclideanDistance",
194:       "weka.core.Instances",
195:       "weka.core.UnassignedClassException",
196:       "weka.classifiers.rules.ZeroR",
197:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
198:       "weka.filters.unsupervised.attribute.Standardize",
199:       "weka.core.TechnicalInformation",
200:       "weka.core.UnsupportedAttributeTypeException",
201:       "weka.classifiers.Sourcable",
202:       "weka.core.RevisionHandler",
203:       "weka.classifiers.evaluation.output.prediction.PlainText",
204:       "weka.core.neighboursearch.TreePerformanceStats",
205:       "weka.core.xml.XMLSerialization",
206:       "weka.classifiers.xml.XMLClassifier",
207:       "weka.filters.Filter",
208:       "weka.filters.supervised.attribute.Discretize"
209:     );
210:   } 
211: 
212:   private static void resetClasses() {
213:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_67_tmp__ESTest_scaffolding.class.getClassLoader()); 
214: 
215:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
216:       "weka.classifiers.AbstractClassifier",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
218:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
219:       "weka.core.Capabilities$Capability",
220:       "weka.core.tokenizers.Tokenizer",
221:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
222:       "weka.core.tokenizers.WordTokenizer",
223:       "weka.core.stemmers.NullStemmer",
224:       "weka.core.AbstractInstance",
225:       "weka.core.SparseInstance",
226:       "weka.core.BinarySparseInstance",
227:       "weka.core.Attribute",
228:       "weka.core.ProtectedProperties",
229:       "weka.core.Utils",
230:       "weka.core.UnassignedDatasetException",
231:       "weka.core.RevisionUtils",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Option",
234:       "weka.core.Instances",
235:       "weka.classifiers.bayes.NaiveBayes",
236:       "weka.classifiers.CostMatrix",
237:       "weka.core.Capabilities",
238:       "org.pentaho.packageManagement.PackageManager",
239:       "org.pentaho.packageManagement.DefaultPackageManager",
240:       "weka.core.Version",
241:       "weka.core.Environment",
242:       "weka.core.WekaPackageManager",
243:       "weka.core.SerializedObject",
244:       "weka.core.DenseInstance",
245:       "weka.core.neighboursearch.NearestNeighbourSearch",
246:       "weka.core.neighboursearch.CoverTree",
247:       "weka.core.NormalizableDistance",
248:       "weka.core.EuclideanDistance",
249:       "weka.core.Range",
250:       "weka.core.Stopwords",
251:       "weka.core.neighboursearch.BallTree",
252:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
253:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
254:       "weka.core.neighboursearch.balltrees.BallSplitter",
255:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
256:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
257:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
258:       "weka.core.TestInstances",
259:       "weka.attributeSelection.ASEvaluation",
260:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
261:       "weka.attributeSelection.PrincipalComponents",
262:       "weka.filters.Filter",
263:       "weka.filters.SimpleFilter",
264:       "weka.filters.SimpleStreamFilter",
265:       "weka.filters.MultiFilter",
266:       "weka.filters.AllFilter",
267:       "weka.core.tokenizers.NGramTokenizer",
268:       "weka.filters.supervised.attribute.Discretize",
269:       "weka.core.stemmers.LovinsStemmer",
270:       "weka.classifiers.trees.J48",
271:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
272:       "weka.core.neighboursearch.balltrees.BallNode",
273:       "weka.core.neighboursearch.LinearNNSearch",
274:       "weka.classifiers.SingleClassifierEnhancer",
275:       "weka.classifiers.misc.InputMappedClassifier",
276:       "weka.classifiers.rules.ZeroR",
277:       "weka.classifiers.RandomizableClassifier",
278:       "weka.core.Tag",
279:       "weka.classifiers.functions.SGDText",
280:       "weka.classifiers.bayes.BayesNet",
281:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
282:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
283:       "weka.classifiers.bayes.net.search.local.K2",
284:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
285:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
286:       "weka.classifiers.functions.supportVector.Kernel",
287:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
288:       "weka.core.stemmers.SnowballStemmer",
289:       "weka.core.stemmers.IteratedLovinsStemmer",
290:       "weka.core.WekaException",
291:       "weka.classifiers.misc.SerializedClassifier",
292:       "weka.core.stemmers.Stemming",
293:       "weka.core.converters.ArffLoader$ArffReader",
294:       "weka.classifiers.IteratedSingleClassifierEnhancer",
295:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
296:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
297:       "weka.classifiers.meta.Bagging",
298:       "weka.classifiers.trees.REPTree",
299:       "weka.core.WekaEnumeration",
300:       "weka.core.Attribute$1",
301:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
302:       "weka.classifiers.meta.CostSensitiveClassifier",
303:       "weka.classifiers.lazy.IBk",
304:       "weka.classifiers.MultipleClassifiersCombiner",
305:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
306:       "weka.classifiers.meta.MultiScheme",
307:       "weka.core.neighboursearch.KDTree",
308:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
309:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
310:       "weka.classifiers.bayes.net.BIFReader",
311:       "weka.core.FindWithCapabilities",
312:       "weka.core.SingleIndex",
313:       "weka.core.ClassDiscovery",
314:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
315:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
316:       "weka.core.UnsupportedAttributeTypeException",
317:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
318:       "weka.core.tokenizers.AlphabeticTokenizer",
319:       "weka.classifiers.meta.ClassificationViaRegression",
320:       "weka.classifiers.trees.m5.M5Base",
321:       "weka.classifiers.trees.M5P",
322:       "weka.classifiers.functions.LinearRegression",
323:       "weka.classifiers.trees.RandomTree",
324:       "weka.classifiers.functions.VotedPerceptron",
325:       "weka.attributeSelection.ReliefFAttributeEval",
326:       "weka.classifiers.bayes.NaiveBayesMultinomial",
327:       "weka.classifiers.functions.SimpleLogistic",
328:       "weka.classifiers.trees.DecisionStump",
329:       "weka.classifiers.meta.AdditiveRegression",
330:       "weka.classifiers.rules.M5Rules",
331:       "weka.core.UnassignedClassException",
332:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
333:       "weka.classifiers.meta.FilteredClassifier",
334:       "weka.filters.supervised.attribute.AttributeSelection",
335:       "weka.attributeSelection.AttributeSelection",
336:       "weka.attributeSelection.CfsSubsetEval",
337:       "weka.attributeSelection.ASSearch",
338:       "weka.attributeSelection.GreedyStepwise",
339:       "weka.attributeSelection.BestFirst",
340:       "weka.estimators.Estimator",
341:       "weka.estimators.KernelEstimator",
342:       "weka.classifiers.functions.Logistic",
343:       "weka.attributeSelection.WrapperSubsetEval",
344:       "weka.core.SelectedTag",
345:       "weka.classifiers.rules.OneR",
346:       "weka.core.ManhattanDistance",
347:       "weka.classifiers.lazy.LWL",
348:       "weka.classifiers.rules.PART",
349:       "weka.classifiers.rules.part.MakeDecList",
350:       "weka.core.Javadoc",
351:       "weka.core.OptionHandlerJavadoc",
352:       "weka.classifiers.functions.supportVector.CachedKernel",
353:       "weka.classifiers.functions.supportVector.Puk",
354:       "weka.classifiers.meta.AttributeSelectedClassifier",
355:       "weka.classifiers.functions.SimpleLinearRegression",
356:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
357:       "weka.classifiers.meta.AdaBoostM1",
358:       "weka.attributeSelection.CorrelationAttributeEval",
359:       "weka.classifiers.functions.GaussianProcesses",
360:       "weka.classifiers.functions.supportVector.PolyKernel",
361:       "weka.classifiers.lazy.KStar",
362:       "weka.classifiers.rules.DecisionTable",
363:       "weka.classifiers.functions.SMOreg",
364:       "weka.classifiers.functions.supportVector.RegOptimizer",
365:       "weka.classifiers.functions.supportVector.RegSMO",
366:       "weka.classifiers.functions.supportVector.RegSMOImproved",
367:       "weka.classifiers.functions.SGD",
368:       "weka.core.TechnicalInformation",
369:       "weka.core.TechnicalInformation$Type",
370:       "weka.core.TechnicalInformation$Field",
371:       "weka.core.neighboursearch.PerformanceStats",
372:       "weka.classifiers.meta.RandomCommittee",
373:       "weka.attributeSelection.InfoGainAttributeEval",
374:       "weka.classifiers.trees.LMT",
375:       "weka.classifiers.functions.supportVector.StringKernel",
376:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
377:       "weka.estimators.PoissonEstimator",
378:       "weka.classifiers.functions.SMO",
379:       "weka.classifiers.rules.JRip",
380:       "weka.core.matrix.Matrix",
381:       "weka.classifiers.meta.Vote",
382:       "weka.core.ListOptions",
383:       "weka.estimators.NormalEstimator",
384:       "weka.attributeSelection.GainRatioAttributeEval",
385:       "weka.core.SerializationHelper",
386:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
387:       "weka.attributeSelection.OneRAttributeEval",
388:       "weka.core.neighboursearch.kdtrees.MidPointOfWidestDimension",
389:       "weka.classifiers.meta.LogitBoost",
390:       "weka.classifiers.trees.j48.ClassifierTree",
391:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
392:       "weka.classifiers.meta.RegressionByDiscretization",
393:       "weka.filters.unsupervised.attribute.Discretize",
394:       "weka.classifiers.meta.CVParameterSelection",
395:       "weka.core.FastVector",
396:       "weka.classifiers.functions.supportVector.RBFKernel",
397:       "weka.core.neighboursearch.kdtrees.MedianOfWidestDimension",
398:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
399:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
400:       "weka.classifiers.meta.Stacking",
401:       "weka.core.neighboursearch.kdtrees.KMeansInpiredMethod",
402:       "weka.classifiers.bayes.NaiveBayesUpdateable",
403:       "weka.core.AttributeStats",
404:       "weka.classifiers.functions.MultilayerPerceptron",
405:       "weka.filters.unsupervised.attribute.NominalToBinary",
406:       "weka.classifiers.functions.neural.SigmoidUnit",
407:       "weka.classifiers.functions.neural.LinearUnit",
408:       "weka.experiment.Stats",
409:       "weka.core.MinkowskiDistance",
410:       "weka.classifiers.meta.MultiClassClassifier",
411:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
412:       "weka.core.neighboursearch.TreePerformanceStats",
413:       "weka.estimators.DiscreteEstimator",
414:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable"
415:     );
416:   }
417: }

[MASTER] 23:47:44.224 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FileSystemHandling.shouldAllThrowIOExceptions();
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.globalInfo();
naiveBayesMultinomialText0.setLowercaseTokens(true);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.keySet();
naiveBayesMultinomialText0.toString();
naiveBayesMultinomialText0.getPeriodicPruning();
naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.getCapabilities();
naiveBayesMultinomialText0.lowercaseTokensTipText();
assertTrue(naiveBayesMultinomialText0.getLowercaseTokens());


[MASTER] 23:47:44.426 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_69_1575330464373/weka/classifiers/bayes/NaiveBayesMultinomialText_69_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_69_1575330464373/weka/classifiers/bayes/NaiveBayesMultinomialText_69_tmp__ESTest_scaffolding.java]]
[MASTER] 23:47:44.426 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:47:44.426 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:47:44.427 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 23:47:44.427 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 23:47:44.427 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 23:47:44.427 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 23:47:44.429 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_69_1575330464373/weka/classifiers/bayes/NaiveBayesMultinomialText_69_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 23:47:44 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: import weka.core.DenseInstance;
16: import weka.core.Instances;
17: import weka.core.TestInstances;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_69_tmp__ESTest extends NaiveBayesMultinomialText_69_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=1.883404187709486
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
30:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
31:       TestInstances testInstances0 = new TestInstances();
32:       Instances instances0 = testInstances0.generate();
33:       naiveBayesMultinomialText0.buildClassifier(instances0);
34:       double[] doubleArray0 = new double[0];
35:       DenseInstance denseInstance0 = new DenseInstance(99.0, doubleArray0);
36:       double[] doubleArray1 = naiveBayesMultinomialText0.distributionForInstance(denseInstance0);
37:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
38:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
39:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
40:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
41:       assertArrayEquals(new double[] {0.5454545454545454, 0.4545454545454546}, doubleArray1, 0.01);
42:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
43:   }
44: }
RegularFileObject[/tmp/EvoSuite_69_1575330464373/weka/classifiers/bayes/NaiveBayesMultinomialText_69_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 23:47:44 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_69_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_69_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.neighboursearch.KDTree",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.BinarySparseInstance",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.neighboursearch.balltrees.BallSplitter",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.filters.AllFilter",
145:       "weka.classifiers.AbstractClassifier",
146:       "weka.filters.unsupervised.attribute.Center",
147:       "weka.core.OptionHandler",
148:       "weka.core.WekaException",
149:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
150:       "weka.filters.StreamableFilter",
151:       "weka.core.Range",
152:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
153:       "weka.core.scripting.JythonSerializableObject",
154:       "weka.classifiers.Classifier",
155:       "weka.core.Capabilities$Capability",
156:       "weka.core.SparseInstance",
157:       "org.pentaho.packageManagement.PackageManager",
158:       "weka.attributeSelection.AttributeTransformer",
159:       "weka.core.tokenizers.WordTokenizer",
160:       "weka.classifiers.misc.SerializedClassifier",
161:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
162:       "weka.attributeSelection.PrincipalComponents",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.filters.SupervisedFilter",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.core.neighboursearch.LinearNNSearch",
171:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
172:       "weka.core.Option",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
175:       "weka.estimators.KernelEstimator",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.FastVector",
180:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
181:       "weka.core.UnassignedDatasetException",
182:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
183:       "weka.classifiers.SingleClassifierEnhancer",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.core.ProtectedProperties",
187:       "weka.estimators.Estimator",
188:       "weka.core.StringLocator",
189:       "weka.core.AttributeStats",
190:       "weka.core.WeightedInstancesHandler",
191:       "weka.core.neighboursearch.NearestNeighbourSearch",
192:       "weka.filters.unsupervised.attribute.Remove",
193:       "weka.core.EuclideanDistance",
194:       "weka.core.Instances",
195:       "weka.core.UnassignedClassException",
196:       "weka.classifiers.rules.ZeroR",
197:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
198:       "weka.filters.unsupervised.attribute.Standardize",
199:       "weka.core.TechnicalInformation",
200:       "weka.core.UnsupportedAttributeTypeException",
201:       "weka.classifiers.Sourcable",
202:       "weka.core.RevisionHandler",
203:       "weka.classifiers.evaluation.output.prediction.PlainText",
204:       "weka.core.neighboursearch.TreePerformanceStats",
205:       "weka.core.xml.XMLSerialization",
206:       "weka.classifiers.xml.XMLClassifier",
207:       "weka.filters.Filter",
208:       "weka.filters.supervised.attribute.Discretize"
209:     );
210:   } 
211: 
212:   private static void resetClasses() {
213:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_69_tmp__ESTest_scaffolding.class.getClassLoader()); 
214: 
215:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
216:       "weka.classifiers.AbstractClassifier",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
218:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
219:       "weka.core.Capabilities$Capability",
220:       "weka.core.tokenizers.Tokenizer",
221:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
222:       "weka.core.tokenizers.WordTokenizer",
223:       "weka.core.stemmers.NullStemmer",
224:       "weka.core.AbstractInstance",
225:       "weka.core.SparseInstance",
226:       "weka.core.BinarySparseInstance",
227:       "weka.core.Attribute",
228:       "weka.core.ProtectedProperties",
229:       "weka.core.Utils",
230:       "weka.core.UnassignedDatasetException",
231:       "weka.core.RevisionUtils",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Option",
234:       "weka.core.Instances",
235:       "weka.classifiers.bayes.NaiveBayes",
236:       "weka.classifiers.CostMatrix",
237:       "weka.core.Capabilities",
238:       "org.pentaho.packageManagement.PackageManager",
239:       "org.pentaho.packageManagement.DefaultPackageManager",
240:       "weka.core.Version",
241:       "weka.core.Environment",
242:       "weka.core.WekaPackageManager",
243:       "weka.core.SerializedObject",
244:       "weka.core.DenseInstance",
245:       "weka.core.neighboursearch.NearestNeighbourSearch",
246:       "weka.core.neighboursearch.CoverTree",
247:       "weka.core.NormalizableDistance",
248:       "weka.core.EuclideanDistance",
249:       "weka.core.Range",
250:       "weka.core.Stopwords",
251:       "weka.core.neighboursearch.BallTree",
252:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
253:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
254:       "weka.core.neighboursearch.balltrees.BallSplitter",
255:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
256:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
257:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
258:       "weka.core.TestInstances",
259:       "weka.attributeSelection.ASEvaluation",
260:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
261:       "weka.attributeSelection.PrincipalComponents",
262:       "weka.filters.Filter",
263:       "weka.filters.SimpleFilter",
264:       "weka.filters.SimpleStreamFilter",
265:       "weka.filters.MultiFilter",
266:       "weka.filters.AllFilter",
267:       "weka.core.tokenizers.NGramTokenizer",
268:       "weka.filters.supervised.attribute.Discretize",
269:       "weka.core.stemmers.LovinsStemmer",
270:       "weka.classifiers.trees.J48",
271:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
272:       "weka.core.neighboursearch.balltrees.BallNode",
273:       "weka.core.neighboursearch.LinearNNSearch",
274:       "weka.classifiers.SingleClassifierEnhancer",
275:       "weka.classifiers.misc.InputMappedClassifier",
276:       "weka.classifiers.rules.ZeroR",
277:       "weka.classifiers.RandomizableClassifier",
278:       "weka.core.Tag",
279:       "weka.classifiers.functions.SGDText",
280:       "weka.classifiers.bayes.BayesNet",
281:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
282:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
283:       "weka.classifiers.bayes.net.search.local.K2",
284:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
285:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
286:       "weka.classifiers.functions.supportVector.Kernel",
287:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
288:       "weka.core.stemmers.SnowballStemmer",
289:       "weka.core.stemmers.IteratedLovinsStemmer",
290:       "weka.core.WekaException",
291:       "weka.classifiers.misc.SerializedClassifier",
292:       "weka.core.stemmers.Stemming",
293:       "weka.core.converters.ArffLoader$ArffReader",
294:       "weka.classifiers.IteratedSingleClassifierEnhancer",
295:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
296:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
297:       "weka.classifiers.meta.Bagging",
298:       "weka.classifiers.trees.REPTree",
299:       "weka.core.WekaEnumeration",
300:       "weka.core.Attribute$1",
301:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
302:       "weka.classifiers.meta.CostSensitiveClassifier",
303:       "weka.classifiers.lazy.IBk",
304:       "weka.classifiers.MultipleClassifiersCombiner",
305:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
306:       "weka.classifiers.meta.MultiScheme",
307:       "weka.core.neighboursearch.KDTree",
308:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
309:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
310:       "weka.classifiers.bayes.net.BIFReader",
311:       "weka.core.FindWithCapabilities",
312:       "weka.core.SingleIndex",
313:       "weka.core.ClassDiscovery",
314:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
315:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
316:       "weka.core.UnsupportedAttributeTypeException",
317:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
318:       "weka.core.tokenizers.AlphabeticTokenizer",
319:       "weka.classifiers.meta.ClassificationViaRegression",
320:       "weka.classifiers.trees.m5.M5Base",
321:       "weka.classifiers.trees.M5P",
322:       "weka.classifiers.functions.LinearRegression",
323:       "weka.classifiers.trees.RandomTree",
324:       "weka.classifiers.functions.VotedPerceptron",
325:       "weka.attributeSelection.ReliefFAttributeEval",
326:       "weka.classifiers.bayes.NaiveBayesMultinomial",
327:       "weka.classifiers.functions.SimpleLogistic",
328:       "weka.classifiers.trees.DecisionStump",
329:       "weka.classifiers.meta.AdditiveRegression",
330:       "weka.classifiers.rules.M5Rules",
331:       "weka.core.UnassignedClassException",
332:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
333:       "weka.classifiers.meta.FilteredClassifier",
334:       "weka.filters.supervised.attribute.AttributeSelection",
335:       "weka.attributeSelection.AttributeSelection",
336:       "weka.attributeSelection.CfsSubsetEval",
337:       "weka.attributeSelection.ASSearch",
338:       "weka.attributeSelection.GreedyStepwise",
339:       "weka.attributeSelection.BestFirst",
340:       "weka.estimators.Estimator",
341:       "weka.estimators.KernelEstimator",
342:       "weka.classifiers.functions.Logistic",
343:       "weka.attributeSelection.WrapperSubsetEval",
344:       "weka.core.SelectedTag",
345:       "weka.classifiers.rules.OneR",
346:       "weka.core.ManhattanDistance",
347:       "weka.classifiers.lazy.LWL",
348:       "weka.classifiers.rules.PART",
349:       "weka.classifiers.rules.part.MakeDecList",
350:       "weka.core.Javadoc",
351:       "weka.core.OptionHandlerJavadoc",
352:       "weka.classifiers.functions.supportVector.CachedKernel",
353:       "weka.classifiers.functions.supportVector.Puk",
354:       "weka.classifiers.meta.AttributeSelectedClassifier",
355:       "weka.classifiers.functions.SimpleLinearRegression",
356:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
357:       "weka.classifiers.meta.AdaBoostM1",
358:       "weka.attributeSelection.CorrelationAttributeEval",
359:       "weka.classifiers.functions.GaussianProcesses",
360:       "weka.classifiers.functions.supportVector.PolyKernel",
361:       "weka.classifiers.lazy.KStar",
362:       "weka.classifiers.rules.DecisionTable",
363:       "weka.classifiers.functions.SMOreg",
364:       "weka.classifiers.functions.supportVector.RegOptimizer",
365:       "weka.classifiers.functions.supportVector.RegSMO",
366:       "weka.classifiers.functions.supportVector.RegSMOImproved",
367:       "weka.classifiers.functions.SGD",
368:       "weka.core.TechnicalInformation",
369:       "weka.core.TechnicalInformation$Type",
370:       "weka.core.TechnicalInformation$Field",
371:       "weka.core.neighboursearch.PerformanceStats",
372:       "weka.classifiers.meta.RandomCommittee",
373:       "weka.attributeSelection.InfoGainAttributeEval",
374:       "weka.classifiers.trees.LMT",
375:       "weka.classifiers.functions.supportVector.StringKernel",
376:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
377:       "weka.estimators.PoissonEstimator",
378:       "weka.classifiers.functions.SMO",
379:       "weka.classifiers.rules.JRip",
380:       "weka.core.matrix.Matrix",
381:       "weka.classifiers.meta.Vote",
382:       "weka.core.ListOptions",
383:       "weka.estimators.NormalEstimator",
384:       "weka.attributeSelection.GainRatioAttributeEval",
385:       "weka.core.SerializationHelper",
386:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
387:       "weka.attributeSelection.OneRAttributeEval",
388:       "weka.core.neighboursearch.kdtrees.MidPointOfWidestDimension",
389:       "weka.classifiers.meta.LogitBoost",
390:       "weka.classifiers.trees.j48.ClassifierTree",
391:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
392:       "weka.classifiers.meta.RegressionByDiscretization",
393:       "weka.filters.unsupervised.attribute.Discretize",
394:       "weka.classifiers.meta.CVParameterSelection",
395:       "weka.core.FastVector",
396:       "weka.classifiers.functions.supportVector.RBFKernel",
397:       "weka.core.neighboursearch.kdtrees.MedianOfWidestDimension",
398:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
399:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
400:       "weka.classifiers.meta.Stacking",
401:       "weka.core.neighboursearch.kdtrees.KMeansInpiredMethod",
402:       "weka.classifiers.bayes.NaiveBayesUpdateable",
403:       "weka.core.AttributeStats",
404:       "weka.classifiers.functions.MultilayerPerceptron",
405:       "weka.filters.unsupervised.attribute.NominalToBinary",
406:       "weka.classifiers.functions.neural.SigmoidUnit",
407:       "weka.classifiers.functions.neural.LinearUnit",
408:       "weka.experiment.Stats",
409:       "weka.core.MinkowskiDistance",
410:       "weka.classifiers.meta.MultiClassClassifier",
411:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
412:       "weka.core.neighboursearch.TreePerformanceStats",
413:       "weka.estimators.DiscreteEstimator",
414:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable"
415:     );
416:   }
417: }

[MASTER] 23:47:44.430 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
TestInstances testInstances0 = new TestInstances();
Instances instances0 = testInstances0.generate();
naiveBayesMultinomialText0.buildClassifier(instances0);
double[] doubleArray0 = new double[0];
DenseInstance denseInstance0 = new DenseInstance(99.0, doubleArray0);
double[] doubleArray1 = naiveBayesMultinomialText0.distributionForInstance(denseInstance0);
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertArrayEquals(new double[] {0.5454545454545454, 0.4545454545454546}, doubleArray1, 0.01);
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());


[MASTER] 23:47:44.564 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_73_1575330464535/weka/classifiers/bayes/NaiveBayesMultinomialText_73_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_73_1575330464535/weka/classifiers/bayes/NaiveBayesMultinomialText_73_tmp__ESTest_scaffolding.java]]
[MASTER] 23:47:44.564 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:47:44.564 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:47:44.564 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 23:47:44.564 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 23:47:44.564 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 23:47:44.564 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 23:47:44.565 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 23:47:44.565 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_73_1575330464535/weka/classifiers/bayes/NaiveBayesMultinomialText_73_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 23:47:44 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_73_tmp__ESTest extends NaiveBayesMultinomialText_73_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=0.4
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
28:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
29:       linkedHashMap0.put((Integer) null, linkedHashMap1);
30:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
31:       naiveBayesMultinomialText0.m_periodicP = 2027;
32:       naiveBayesMultinomialText0.pruneDictionary();
33:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
34:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
35:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
36:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
37:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
38:   }
39: }
RegularFileObject[/tmp/EvoSuite_73_1575330464535/weka/classifiers/bayes/NaiveBayesMultinomialText_73_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 23:47:44 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_73_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_73_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.neighboursearch.KDTree",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.BinarySparseInstance",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.neighboursearch.balltrees.BallSplitter",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.filters.AllFilter",
145:       "weka.classifiers.AbstractClassifier",
146:       "weka.filters.unsupervised.attribute.Center",
147:       "weka.core.OptionHandler",
148:       "weka.core.WekaException",
149:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
150:       "weka.filters.StreamableFilter",
151:       "weka.core.Range",
152:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
153:       "weka.core.scripting.JythonSerializableObject",
154:       "weka.classifiers.Classifier",
155:       "weka.core.Capabilities$Capability",
156:       "weka.core.SparseInstance",
157:       "org.pentaho.packageManagement.PackageManager",
158:       "weka.attributeSelection.AttributeTransformer",
159:       "weka.core.tokenizers.WordTokenizer",
160:       "weka.classifiers.misc.SerializedClassifier",
161:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
162:       "weka.attributeSelection.PrincipalComponents",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.filters.SupervisedFilter",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.core.neighboursearch.LinearNNSearch",
171:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
172:       "weka.core.Option",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
175:       "weka.estimators.KernelEstimator",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.FastVector",
180:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
181:       "weka.core.UnassignedDatasetException",
182:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
183:       "weka.classifiers.SingleClassifierEnhancer",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.core.ProtectedProperties",
187:       "weka.estimators.Estimator",
188:       "weka.core.StringLocator",
189:       "weka.core.AttributeStats",
190:       "weka.core.WeightedInstancesHandler",
191:       "weka.core.neighboursearch.NearestNeighbourSearch",
192:       "weka.filters.unsupervised.attribute.Remove",
193:       "weka.core.EuclideanDistance",
194:       "weka.core.Instances",
195:       "weka.core.UnassignedClassException",
196:       "weka.classifiers.rules.ZeroR",
197:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
198:       "weka.filters.unsupervised.attribute.Standardize",
199:       "weka.core.TechnicalInformation",
200:       "weka.core.UnsupportedAttributeTypeException",
201:       "weka.classifiers.Sourcable",
202:       "weka.core.RevisionHandler",
203:       "weka.classifiers.evaluation.output.prediction.PlainText",
204:       "weka.core.neighboursearch.TreePerformanceStats",
205:       "weka.core.xml.XMLSerialization",
206:       "weka.classifiers.xml.XMLClassifier",
207:       "weka.filters.Filter",
208:       "weka.filters.supervised.attribute.Discretize"
209:     );
210:   } 
211: 
212:   private static void resetClasses() {
213:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_73_tmp__ESTest_scaffolding.class.getClassLoader()); 
214: 
215:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
216:       "weka.classifiers.AbstractClassifier",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
218:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
219:       "weka.core.Capabilities$Capability",
220:       "weka.core.tokenizers.Tokenizer",
221:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
222:       "weka.core.tokenizers.WordTokenizer",
223:       "weka.core.stemmers.NullStemmer",
224:       "weka.core.AbstractInstance",
225:       "weka.core.SparseInstance",
226:       "weka.core.BinarySparseInstance",
227:       "weka.core.Attribute",
228:       "weka.core.ProtectedProperties",
229:       "weka.core.Utils",
230:       "weka.core.UnassignedDatasetException",
231:       "weka.core.RevisionUtils",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Option",
234:       "weka.core.Instances",
235:       "weka.classifiers.bayes.NaiveBayes",
236:       "weka.classifiers.CostMatrix",
237:       "weka.core.Capabilities",
238:       "org.pentaho.packageManagement.PackageManager",
239:       "org.pentaho.packageManagement.DefaultPackageManager",
240:       "weka.core.Version",
241:       "weka.core.Environment",
242:       "weka.core.WekaPackageManager",
243:       "weka.core.SerializedObject",
244:       "weka.core.DenseInstance",
245:       "weka.core.neighboursearch.NearestNeighbourSearch",
246:       "weka.core.neighboursearch.CoverTree",
247:       "weka.core.NormalizableDistance",
248:       "weka.core.EuclideanDistance",
249:       "weka.core.Range",
250:       "weka.core.Stopwords",
251:       "weka.core.neighboursearch.BallTree",
252:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
253:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
254:       "weka.core.neighboursearch.balltrees.BallSplitter",
255:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
256:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
257:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
258:       "weka.core.TestInstances",
259:       "weka.attributeSelection.ASEvaluation",
260:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
261:       "weka.attributeSelection.PrincipalComponents",
262:       "weka.filters.Filter",
263:       "weka.filters.SimpleFilter",
264:       "weka.filters.SimpleStreamFilter",
265:       "weka.filters.MultiFilter",
266:       "weka.filters.AllFilter",
267:       "weka.core.tokenizers.NGramTokenizer",
268:       "weka.filters.supervised.attribute.Discretize",
269:       "weka.core.stemmers.LovinsStemmer",
270:       "weka.classifiers.trees.J48",
271:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
272:       "weka.core.neighboursearch.balltrees.BallNode",
273:       "weka.core.neighboursearch.LinearNNSearch",
274:       "weka.classifiers.SingleClassifierEnhancer",
275:       "weka.classifiers.misc.InputMappedClassifier",
276:       "weka.classifiers.rules.ZeroR",
277:       "weka.classifiers.RandomizableClassifier",
278:       "weka.core.Tag",
279:       "weka.classifiers.functions.SGDText",
280:       "weka.classifiers.bayes.BayesNet",
281:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
282:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
283:       "weka.classifiers.bayes.net.search.local.K2",
284:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
285:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
286:       "weka.classifiers.functions.supportVector.Kernel",
287:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
288:       "weka.core.stemmers.SnowballStemmer",
289:       "weka.core.stemmers.IteratedLovinsStemmer",
290:       "weka.core.WekaException",
291:       "weka.classifiers.misc.SerializedClassifier",
292:       "weka.core.stemmers.Stemming",
293:       "weka.core.converters.ArffLoader$ArffReader",
294:       "weka.classifiers.IteratedSingleClassifierEnhancer",
295:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
296:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
297:       "weka.classifiers.meta.Bagging",
298:       "weka.classifiers.trees.REPTree",
299:       "weka.core.WekaEnumeration",
300:       "weka.core.Attribute$1",
301:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
302:       "weka.classifiers.meta.CostSensitiveClassifier",
303:       "weka.classifiers.lazy.IBk",
304:       "weka.classifiers.MultipleClassifiersCombiner",
305:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
306:       "weka.classifiers.meta.MultiScheme",
307:       "weka.core.neighboursearch.KDTree",
308:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
309:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
310:       "weka.classifiers.bayes.net.BIFReader",
311:       "weka.core.FindWithCapabilities",
312:       "weka.core.SingleIndex",
313:       "weka.core.ClassDiscovery",
314:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
315:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
316:       "weka.core.UnsupportedAttributeTypeException",
317:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
318:       "weka.core.tokenizers.AlphabeticTokenizer",
319:       "weka.classifiers.meta.ClassificationViaRegression",
320:       "weka.classifiers.trees.m5.M5Base",
321:       "weka.classifiers.trees.M5P",
322:       "weka.classifiers.functions.LinearRegression",
323:       "weka.classifiers.trees.RandomTree",
324:       "weka.classifiers.functions.VotedPerceptron",
325:       "weka.attributeSelection.ReliefFAttributeEval",
326:       "weka.classifiers.bayes.NaiveBayesMultinomial",
327:       "weka.classifiers.functions.SimpleLogistic",
328:       "weka.classifiers.trees.DecisionStump",
329:       "weka.classifiers.meta.AdditiveRegression",
330:       "weka.classifiers.rules.M5Rules",
331:       "weka.core.UnassignedClassException",
332:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
333:       "weka.classifiers.meta.FilteredClassifier",
334:       "weka.filters.supervised.attribute.AttributeSelection",
335:       "weka.attributeSelection.AttributeSelection",
336:       "weka.attributeSelection.CfsSubsetEval",
337:       "weka.attributeSelection.ASSearch",
338:       "weka.attributeSelection.GreedyStepwise",
339:       "weka.attributeSelection.BestFirst",
340:       "weka.estimators.Estimator",
341:       "weka.estimators.KernelEstimator",
342:       "weka.classifiers.functions.Logistic",
343:       "weka.attributeSelection.WrapperSubsetEval",
344:       "weka.core.SelectedTag",
345:       "weka.classifiers.rules.OneR",
346:       "weka.core.ManhattanDistance",
347:       "weka.classifiers.lazy.LWL",
348:       "weka.classifiers.rules.PART",
349:       "weka.classifiers.rules.part.MakeDecList",
350:       "weka.core.Javadoc",
351:       "weka.core.OptionHandlerJavadoc",
352:       "weka.classifiers.functions.supportVector.CachedKernel",
353:       "weka.classifiers.functions.supportVector.Puk",
354:       "weka.classifiers.meta.AttributeSelectedClassifier",
355:       "weka.classifiers.functions.SimpleLinearRegression",
356:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
357:       "weka.classifiers.meta.AdaBoostM1",
358:       "weka.attributeSelection.CorrelationAttributeEval",
359:       "weka.classifiers.functions.GaussianProcesses",
360:       "weka.classifiers.functions.supportVector.PolyKernel",
361:       "weka.classifiers.lazy.KStar",
362:       "weka.classifiers.rules.DecisionTable",
363:       "weka.classifiers.functions.SMOreg",
364:       "weka.classifiers.functions.supportVector.RegOptimizer",
365:       "weka.classifiers.functions.supportVector.RegSMO",
366:       "weka.classifiers.functions.supportVector.RegSMOImproved",
367:       "weka.classifiers.functions.SGD",
368:       "weka.core.TechnicalInformation",
369:       "weka.core.TechnicalInformation$Type",
370:       "weka.core.TechnicalInformation$Field",
371:       "weka.core.neighboursearch.PerformanceStats",
372:       "weka.classifiers.meta.RandomCommittee",
373:       "weka.attributeSelection.InfoGainAttributeEval",
374:       "weka.classifiers.trees.LMT",
375:       "weka.classifiers.functions.supportVector.StringKernel",
376:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
377:       "weka.estimators.PoissonEstimator",
378:       "weka.classifiers.functions.SMO",
379:       "weka.classifiers.rules.JRip",
380:       "weka.core.matrix.Matrix",
381:       "weka.classifiers.meta.Vote",
382:       "weka.core.ListOptions",
383:       "weka.estimators.NormalEstimator",
384:       "weka.attributeSelection.GainRatioAttributeEval",
385:       "weka.core.SerializationHelper",
386:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
387:       "weka.attributeSelection.OneRAttributeEval",
388:       "weka.core.neighboursearch.kdtrees.MidPointOfWidestDimension",
389:       "weka.classifiers.meta.LogitBoost",
390:       "weka.classifiers.trees.j48.ClassifierTree",
391:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
392:       "weka.classifiers.meta.RegressionByDiscretization",
393:       "weka.filters.unsupervised.attribute.Discretize",
394:       "weka.classifiers.meta.CVParameterSelection",
395:       "weka.core.FastVector",
396:       "weka.classifiers.functions.supportVector.RBFKernel",
397:       "weka.core.neighboursearch.kdtrees.MedianOfWidestDimension",
398:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
399:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
400:       "weka.classifiers.meta.Stacking",
401:       "weka.core.neighboursearch.kdtrees.KMeansInpiredMethod",
402:       "weka.classifiers.bayes.NaiveBayesUpdateable",
403:       "weka.core.AttributeStats",
404:       "weka.classifiers.functions.MultilayerPerceptron",
405:       "weka.filters.unsupervised.attribute.NominalToBinary",
406:       "weka.classifiers.functions.neural.SigmoidUnit",
407:       "weka.classifiers.functions.neural.LinearUnit",
408:       "weka.experiment.Stats",
409:       "weka.core.MinkowskiDistance",
410:       "weka.classifiers.meta.MultiClassClassifier",
411:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
412:       "weka.core.neighboursearch.TreePerformanceStats",
413:       "weka.estimators.DiscreteEstimator",
414:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable"
415:     );
416:   }
417: }

[MASTER] 23:47:44.566 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.put((Integer) null, linkedHashMap1);
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
naiveBayesMultinomialText0.m_periodicP = 2027;
naiveBayesMultinomialText0.pruneDictionary();
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);


[MASTER] 23:47:44.631 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_75_1575330464608/weka/classifiers/bayes/NaiveBayesMultinomialText_75_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_75_1575330464608/weka/classifiers/bayes/NaiveBayesMultinomialText_75_tmp__ESTest_scaffolding.java]]
[MASTER] 23:47:44.631 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:47:44.631 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:47:44.631 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 26
[MASTER] 23:47:44.631 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 26
[MASTER] 23:47:44.632 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_75_1575330464608/weka/classifiers/bayes/NaiveBayesMultinomialText_75_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 23:47:44 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: 
16: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
17: public class NaiveBayesMultinomialText_75_tmp__ESTest extends NaiveBayesMultinomialText_75_tmp__ESTest_scaffolding {
18: 
19:   /**
20:   //Test case number: 0
21:   /*Coverage entropy=1.0931471805599453
22:   */
23:   @Test(timeout = 4000)
24:   public void test0()  throws Throwable  {
25:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
26:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
27:       naiveBayesMultinomialText0.m_periodicP = 2027;
28:       int int0 = naiveBayesMultinomialText0.getPeriodicPruning();
29:       assertEquals(2027, int0);
30:   }
31: }
RegularFileObject[/tmp/EvoSuite_75_1575330464608/weka/classifiers/bayes/NaiveBayesMultinomialText_75_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 23:47:44 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_75_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_75_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.neighboursearch.KDTree",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.BinarySparseInstance",
126:       "weka.core.AttributeLocator",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.neighboursearch.balltrees.BallSplitter",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.filters.AllFilter",
145:       "weka.classifiers.AbstractClassifier",
146:       "weka.filters.unsupervised.attribute.Center",
147:       "weka.core.OptionHandler",
148:       "weka.core.WekaException",
149:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
150:       "weka.filters.StreamableFilter",
151:       "weka.core.Range",
152:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
153:       "weka.core.scripting.JythonSerializableObject",
154:       "weka.classifiers.Classifier",
155:       "weka.core.Capabilities$Capability",
156:       "weka.core.SparseInstance",
157:       "org.pentaho.packageManagement.PackageManager",
158:       "weka.attributeSelection.AttributeTransformer",
159:       "weka.core.tokenizers.WordTokenizer",
160:       "weka.classifiers.misc.SerializedClassifier",
161:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
162:       "weka.attributeSelection.PrincipalComponents",
163:       "weka.core.stemmers.SnowballStemmer",
164:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
165:       "weka.classifiers.Evaluation",
166:       "weka.classifiers.functions.supportVector.Kernel",
167:       "weka.core.WekaPackageManager",
168:       "weka.filters.SupervisedFilter",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.core.neighboursearch.LinearNNSearch",
171:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
172:       "weka.core.Option",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
175:       "weka.estimators.KernelEstimator",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.FastVector",
180:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
181:       "weka.core.UnassignedDatasetException",
182:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
183:       "weka.classifiers.SingleClassifierEnhancer",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.core.ProtectedProperties",
187:       "weka.estimators.Estimator",
188:       "weka.core.StringLocator",
189:       "weka.core.AttributeStats",
190:       "weka.core.WeightedInstancesHandler",
191:       "weka.core.neighboursearch.NearestNeighbourSearch",
192:       "weka.filters.unsupervised.attribute.Remove",
193:       "weka.core.EuclideanDistance",
194:       "weka.core.Instances",
195:       "weka.core.UnassignedClassException",
196:       "weka.classifiers.rules.ZeroR",
197:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
198:       "weka.filters.unsupervised.attribute.Standardize",
199:       "weka.core.TechnicalInformation",
200:       "weka.core.UnsupportedAttributeTypeException",
201:       "weka.classifiers.Sourcable",
202:       "weka.core.RevisionHandler",
203:       "weka.classifiers.evaluation.output.prediction.PlainText",
204:       "weka.core.neighboursearch.TreePerformanceStats",
205:       "weka.core.xml.XMLSerialization",
206:       "weka.classifiers.xml.XMLClassifier",
207:       "weka.filters.Filter",
208:       "weka.filters.supervised.attribute.Discretize"
209:     );
210:   } 
211: 
212:   private static void resetClasses() {
213:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_75_tmp__ESTest_scaffolding.class.getClassLoader()); 
214: 
215:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
216:       "weka.classifiers.AbstractClassifier",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
218:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
219:       "weka.core.Capabilities$Capability",
220:       "weka.core.tokenizers.Tokenizer",
221:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
222:       "weka.core.tokenizers.WordTokenizer",
223:       "weka.core.stemmers.NullStemmer",
224:       "weka.core.AbstractInstance",
225:       "weka.core.SparseInstance",
226:       "weka.core.BinarySparseInstance",
227:       "weka.core.Attribute",
228:       "weka.core.ProtectedProperties",
229:       "weka.core.Utils",
230:       "weka.core.UnassignedDatasetException",
231:       "weka.core.RevisionUtils",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Option",
234:       "weka.core.Instances",
235:       "weka.classifiers.bayes.NaiveBayes",
236:       "weka.classifiers.CostMatrix",
237:       "weka.core.Capabilities",
238:       "org.pentaho.packageManagement.PackageManager",
239:       "org.pentaho.packageManagement.DefaultPackageManager",
240:       "weka.core.Version",
241:       "weka.core.Environment",
242:       "weka.core.WekaPackageManager",
243:       "weka.core.SerializedObject",
244:       "weka.core.DenseInstance",
245:       "weka.core.neighboursearch.NearestNeighbourSearch",
246:       "weka.core.neighboursearch.CoverTree",
247:       "weka.core.NormalizableDistance",
248:       "weka.core.EuclideanDistance",
249:       "weka.core.Range",
250:       "weka.core.Stopwords",
251:       "weka.core.neighboursearch.BallTree",
252:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
253:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
254:       "weka.core.neighboursearch.balltrees.BallSplitter",
255:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
256:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
257:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
258:       "weka.core.TestInstances",
259:       "weka.attributeSelection.ASEvaluation",
260:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
261:       "weka.attributeSelection.PrincipalComponents",
262:       "weka.filters.Filter",
263:       "weka.filters.SimpleFilter",
264:       "weka.filters.SimpleStreamFilter",
265:       "weka.filters.MultiFilter",
266:       "weka.filters.AllFilter",
267:       "weka.core.tokenizers.NGramTokenizer",
268:       "weka.filters.supervised.attribute.Discretize",
269:       "weka.core.stemmers.LovinsStemmer",
270:       "weka.classifiers.trees.J48",
271:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
272:       "weka.core.neighboursearch.balltrees.BallNode",
273:       "weka.core.neighboursearch.LinearNNSearch",
274:       "weka.classifiers.SingleClassifierEnhancer",
275:       "weka.classifiers.misc.InputMappedClassifier",
276:       "weka.classifiers.rules.ZeroR",
277:       "weka.classifiers.RandomizableClassifier",
278:       "weka.core.Tag",
279:       "weka.classifiers.functions.SGDText",
280:       "weka.classifiers.bayes.BayesNet",
281:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
282:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
283:       "weka.classifiers.bayes.net.search.local.K2",
284:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
285:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
286:       "weka.classifiers.functions.supportVector.Kernel",
287:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
288:       "weka.core.stemmers.SnowballStemmer",
289:       "weka.core.stemmers.IteratedLovinsStemmer",
290:       "weka.core.WekaException",
291:       "weka.classifiers.misc.SerializedClassifier",
292:       "weka.core.stemmers.Stemming",
293:       "weka.core.converters.ArffLoader$ArffReader",
294:       "weka.classifiers.IteratedSingleClassifierEnhancer",
295:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
296:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
297:       "weka.classifiers.meta.Bagging",
298:       "weka.classifiers.trees.REPTree",
299:       "weka.core.WekaEnumeration",
300:       "weka.core.Attribute$1",
301:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
302:       "weka.classifiers.meta.CostSensitiveClassifier",
303:       "weka.classifiers.lazy.IBk",
304:       "weka.classifiers.MultipleClassifiersCombiner",
305:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
306:       "weka.classifiers.meta.MultiScheme",
307:       "weka.core.neighboursearch.KDTree",
308:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
309:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
310:       "weka.classifiers.bayes.net.BIFReader",
311:       "weka.core.FindWithCapabilities",
312:       "weka.core.SingleIndex",
313:       "weka.core.ClassDiscovery",
314:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
315:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
316:       "weka.core.UnsupportedAttributeTypeException",
317:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
318:       "weka.core.tokenizers.AlphabeticTokenizer",
319:       "weka.classifiers.meta.ClassificationViaRegression",
320:       "weka.classifiers.trees.m5.M5Base",
321:       "weka.classifiers.trees.M5P",
322:       "weka.classifiers.functions.LinearRegression",
323:       "weka.classifiers.trees.RandomTree",
324:       "weka.classifiers.functions.VotedPerceptron",
325:       "weka.attributeSelection.ReliefFAttributeEval",
326:       "weka.classifiers.bayes.NaiveBayesMultinomial",
327:       "weka.classifiers.functions.SimpleLogistic",
328:       "weka.classifiers.trees.DecisionStump",
329:       "weka.classifiers.meta.AdditiveRegression",
330:       "weka.classifiers.rules.M5Rules",
331:       "weka.core.UnassignedClassException",
332:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
333:       "weka.classifiers.meta.FilteredClassifier",
334:       "weka.filters.supervised.attribute.AttributeSelection",
335:       "weka.attributeSelection.AttributeSelection",
336:       "weka.attributeSelection.CfsSubsetEval",
337:       "weka.attributeSelection.ASSearch",
338:       "weka.attributeSelection.GreedyStepwise",
339:       "weka.attributeSelection.BestFirst",
340:       "weka.estimators.Estimator",
341:       "weka.estimators.KernelEstimator",
342:       "weka.classifiers.functions.Logistic",
343:       "weka.attributeSelection.WrapperSubsetEval",
344:       "weka.core.SelectedTag",
345:       "weka.classifiers.rules.OneR",
346:       "weka.core.ManhattanDistance",
347:       "weka.classifiers.lazy.LWL",
348:       "weka.classifiers.rules.PART",
349:       "weka.classifiers.rules.part.MakeDecList",
350:       "weka.core.Javadoc",
351:       "weka.core.OptionHandlerJavadoc",
352:       "weka.classifiers.functions.supportVector.CachedKernel",
353:       "weka.classifiers.functions.supportVector.Puk",
354:       "weka.classifiers.meta.AttributeSelectedClassifier",
355:       "weka.classifiers.functions.SimpleLinearRegression",
356:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
357:       "weka.classifiers.meta.AdaBoostM1",
358:       "weka.attributeSelection.CorrelationAttributeEval",
359:       "weka.classifiers.functions.GaussianProcesses",
360:       "weka.classifiers.functions.supportVector.PolyKernel",
361:       "weka.classifiers.lazy.KStar",
362:       "weka.classifiers.rules.DecisionTable",
363:       "weka.classifiers.functions.SMOreg",
364:       "weka.classifiers.functions.supportVector.RegOptimizer",
365:       "weka.classifiers.functions.supportVector.RegSMO",
366:       "weka.classifiers.functions.supportVector.RegSMOImproved",
367:       "weka.classifiers.functions.SGD",
368:       "weka.core.TechnicalInformation",
369:       "weka.core.TechnicalInformation$Type",
370:       "weka.core.TechnicalInformation$Field",
371:       "weka.core.neighboursearch.PerformanceStats",
372:       "weka.classifiers.meta.RandomCommittee",
373:       "weka.attributeSelection.InfoGainAttributeEval",
374:       "weka.classifiers.trees.LMT",
375:       "weka.classifiers.functions.supportVector.StringKernel",
376:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
377:       "weka.estimators.PoissonEstimator",
378:       "weka.classifiers.functions.SMO",
379:       "weka.classifiers.rules.JRip",
380:       "weka.core.matrix.Matrix",
381:       "weka.classifiers.meta.Vote",
382:       "weka.core.ListOptions",
383:       "weka.estimators.NormalEstimator",
384:       "weka.attributeSelection.GainRatioAttributeEval",
385:       "weka.core.SerializationHelper",
386:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
387:       "weka.attributeSelection.OneRAttributeEval",
388:       "weka.core.neighboursearch.kdtrees.MidPointOfWidestDimension",
389:       "weka.classifiers.meta.LogitBoost",
390:       "weka.classifiers.trees.j48.ClassifierTree",
391:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
392:       "weka.classifiers.meta.RegressionByDiscretization",
393:       "weka.filters.unsupervised.attribute.Discretize",
394:       "weka.classifiers.meta.CVParameterSelection",
395:       "weka.core.FastVector",
396:       "weka.classifiers.functions.supportVector.RBFKernel",
397:       "weka.core.neighboursearch.kdtrees.MedianOfWidestDimension",
398:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
399:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
400:       "weka.classifiers.meta.Stacking",
401:       "weka.core.neighboursearch.kdtrees.KMeansInpiredMethod",
402:       "weka.classifiers.bayes.NaiveBayesUpdateable",
403:       "weka.core.AttributeStats",
404:       "weka.classifiers.functions.MultilayerPerceptron",
405:       "weka.filters.unsupervised.attribute.NominalToBinary",
406:       "weka.classifiers.functions.neural.SigmoidUnit",
407:       "weka.classifiers.functions.neural.LinearUnit",
408:       "weka.experiment.Stats",
409:       "weka.core.MinkowskiDistance",
410:       "weka.classifiers.meta.MultiClassClassifier",
411:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
412:       "weka.core.neighboursearch.TreePerformanceStats",
413:       "weka.estimators.DiscreteEstimator",
414:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable"
415:     );
416:   }
417: }

[MASTER] 23:47:44.632 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_periodicP = 2027;
int int0 = naiveBayesMultinomialText0.getPeriodicPruning();
assertEquals(2027, int0);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/rmosa/tests/s1020/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 9%
* Compiling and checking tests
[MASTER] 23:49:41.482 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 23:49:41.835 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 23:49:41.836 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 23:49:43.117 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 23:49:43.134 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 23:49:43.597 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1020/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21271
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1020
* Starting evolution
* Search finished after 226s and 243 generations, 109153 statements, best individual has fitness: 2952.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 85%
* Total number of goals: 217
* Number of covered goals: 184
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 281
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 88%
* Total number of goals: 260
* Number of covered goals: 228
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 281
* Generated 92 tests with total length 247
* Resulting test suite's coverage: 73% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 76%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1020/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21266
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 00:00:37.989 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 00:00:38.011 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 00:00:38.014 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 00:00:38.104 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1020
* Starting evolution
* Search finished after 421s and 49 generations, 44488 statements, best individual has fitness: 2352.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 96%
* Total number of goals: 647
* Number of covered goals: 620
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 95%
* Total number of goals: 441
* Number of covered goals: 417
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 678
* Number of covered goals: 614
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 45%
* Total number of goals: 244
* Number of covered goals: 109
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 124
* Number of covered goals: 124
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 124
* Number of covered goals: 124
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 90%
* Total number of goals: 441
* Number of covered goals: 399
* Generated 189 tests with total length 3703
* Resulting test suite's coverage: 89% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 00:13:43.104 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.7046145833333334% of time used, but only 26/189 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 9%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/rmosa/tests/s1020/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21265
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21266
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21270
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 00:16:36.885 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 00:16:36.947 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 00:16:36.961 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 00:16:37.217 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 00:16:37.241 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 00:16:37.243 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1020
* Starting evolution
[MASTER] 00:16:43.444 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 00:16:43.554 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 00:16:43.565 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 00:16:48.140 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 00:16:49.075 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 00:16:49.101 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 00:16:49.107 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 00:16:49.132 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 00:16:49.452 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 00:16:49.493 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1020
* Starting evolution
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 00:16:51.766 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1020
* Starting evolution
[MASTER] 00:16:55.177 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 136
[MASTER] 00:16:55.193 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 158
[MASTER] 00:16:55.193 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 161
[MASTER] 00:16:55.193 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 164
[MASTER] 00:16:55.193 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 167
[MASTER] 00:16:55.193 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 170
[MASTER] 00:16:55.193 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 173
[MASTER] 00:16:55.193 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 176
[MASTER] 00:16:55.193 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 179
[MASTER] 00:16:55.194 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 182
[MASTER] 00:16:55.194 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 185
[MASTER] 00:16:55.194 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 1075
[MASTER] 00:16:55.208 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: root-Branch
[MASTER] 00:16:55.253 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.<init>()V
[MASTER] 00:16:55.262 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.<init>()V
[MASTER] 00:16:55.275 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.<init>()V: root-Branch in context: weka.classifiers.rules.JRip:<init>()V
[MASTER] 00:17:01.122 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 00:17:06.694 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setSeed(J)V: Line 527
[MASTER] 00:17:06.694 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setSeed(J)V: Line 528
[MASTER] 00:17:06.695 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setSeed(J)V: root-Branch
[MASTER] 00:17:06.695 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 198: weka.classifiers.rules.JRip.setSeed(J)V:527 - ReplaceVariable s -> serialVersionUID
[MASTER] 00:17:06.695 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 199: weka.classifiers.rules.JRip.setSeed(J)V:527 - InsertUnaryOp Negation of s
[MASTER] 00:17:06.697 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setSeed(J)V
[MASTER] 00:17:06.697 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setSeed(J)V
[MASTER] 00:17:06.697 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setSeed(J)V: root-Branch in context: weka.classifiers.rules.JRip:setSeed(J)V
* Search finished after 243s and 262 generations, 103720 statements, best individual has fitness: 13376.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 34%
* Total number of goals: 705
* Number of covered goals: 239
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 24%
* Total number of goals: 416
* Number of covered goals: 101
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 15
* Number of covered goals: 15
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 49%
* Total number of goals: 993
* Number of covered goals: 482
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 30%
* Total number of goals: 93
* Number of covered goals: 28
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 24%
* Total number of goals: 416
* Number of covered goals: 100
* Generated 78 tests with total length 548
* Resulting test suite's coverage: 40% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 258s and 128 generations, 80546 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 21 tests with total length 153
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1020/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 00:21:47.272 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
* Resulting test suite's mutation score: 24%
* Compiling and checking tests
[MASTER] 00:22:03.078 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 00:22:04.015 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Search finished after 365s and 369 generations, 180479 statements, best individual has fitness: 5008.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 71%
* Total number of goals: 370
* Number of covered goals: 264
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 57%
* Total number of goals: 242
* Number of covered goals: 137
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 36
* Number of covered goals: 36
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 61%
* Total number of goals: 713
* Number of covered goals: 437
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 53%
* Total number of goals: 72
* Number of covered goals: 38
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 57%
* Total number of goals: 242
* Number of covered goals: 137
* Generated 93 tests with total length 799
* Resulting test suite's coverage: 65% (average coverage for all fitness functions)
* Generating assertions
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1020/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 23%
* Compiling and checking tests
[MASTER] 00:25:28.082 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 00:25:28.119 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 00:25:28.277 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 00:25:28.277 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 00:25:44.286 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 00:25:44.288 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances((String) null, arrayList0, 3172);
Attribute attribute0 = new Attribute((String) null, instances0);
arrayList0.add(attribute0);
instances0.retainAll(arrayList0);
discretize0.setInputFormat(instances0);

[MASTER] 00:25:47.870 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 00:25:47.872 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances((String) null, arrayList0, 3172);
Attribute attribute0 = new Attribute(".arff", instances0, 3172);
arrayList0.add(attribute0);
discretize0.setInputFormat(instances0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1020/107_weka/evosuite-tests
* Done!

* Computation finished
