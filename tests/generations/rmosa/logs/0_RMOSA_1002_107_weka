* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2248
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 23:15:45.023 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:15:45.048 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:15:45.048 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 23:15:45.099 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1002
* Starting evolution
* Search finished after 330s and 49 generations, 36085 statements, best individual has fitness: 2448.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 96%
* Total number of goals: 647
* Number of covered goals: 620
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 93%
* Total number of goals: 441
* Number of covered goals: 412
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 678
* Number of covered goals: 616
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 43%
* Total number of goals: 244
* Number of covered goals: 104
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 124
* Number of covered goals: 124
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 124
* Number of covered goals: 124
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 90%
* Total number of goals: 441
* Number of covered goals: 395
* Generated 190 tests with total length 3026
* Resulting test suite's coverage: 89% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 23:27:23.809 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.7305604166666667% of time used, but only 59/190 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
[MASTER] 23:28:45.826 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/rmosa/tests/s1002/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2248
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 23:30:26.133 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:30:26.182 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:30:26.183 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 23:30:26.212 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1002
* Starting evolution
[MASTER] 23:30:29.334 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Search finished after 203s and 128 generations, 85312 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 19 tests with total length 118
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 13%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1002/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2248
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 23:41:01.068 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:41:01.097 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:41:01.098 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 23:41:01.500 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 23:41:01.524 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 23:41:01.526 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1002
* Starting evolution
[MASTER] 23:42:59.890 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 221s and 369 generations, 187447 statements, best individual has fitness: 4048.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 72%
* Total number of goals: 370
* Number of covered goals: 267
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 60%
* Total number of goals: 242
* Number of covered goals: 145
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 33
* Number of covered goals: 33
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 75%
* Total number of goals: 713
* Number of covered goals: 536
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 56%
* Total number of goals: 72
* Number of covered goals: 40
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 60%
* Total number of goals: 242
* Number of covered goals: 145
* Generated 95 tests with total length 730
* Resulting test suite's coverage: 71% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 28%
* Compiling and checking tests
[MASTER] 23:47:43.549 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 23:47:44.337 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 23:48:08.814 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 23:48:08.817 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
double[][] doubleArray0 = new double[12][6];
discretize0.m_CutPoints = doubleArray0;
discretize0.getBinRangesString(1);
String[] stringArray0 = new String[7];
stringArray0[0] = "(-inf-0],(0-0],(0-0],(0-0],(0-0],(0-0],(0-inf)";
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("}bC}On\"fX", arrayList0, 1);
Properties properties0 = new Properties();
ProtectedProperties protectedProperties0 = new ProtectedProperties(properties0);
Attribute attribute0 = new Attribute("(-inf-0],(0-0],(0-0],(0-0],(0-0],(0-0],(0-inf)", instances0, protectedProperties0);
arrayList0.add(attribute0);
Instances instances1 = new Instances("A$]NHlt1!'%NK3", arrayList0, 5920);
Discretize discretize1 = new Discretize();
discretize1.setInputFormat(instances0);

[MASTER] 23:48:10.806 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 23:48:10.807 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Attribute attribute0 = new Attribute((String) null);
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
arrayList0.add(attribute0);
Instances instances0 = new Instances((String) null, arrayList0, 4);
Attribute attribute1 = new Attribute("@attribute", instances0);
arrayList0.add(attribute1);
arrayList0.add(attribute0);
Discretize discretize0 = new Discretize();
discretize0.setInputFormat(instances0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1002/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2247
* Connecting to master process on port 2250
* Connecting to master process on port 2251
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2252
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1002
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 23:49:04.334 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 23:49:04.334 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 23:49:04.354 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 23:49:04.437 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:49:04.482 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:49:04.483 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 23:49:07.956 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:49:07.983 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:49:07.985 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 23:49:10.307 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1002
* Starting evolution
[MASTER] 23:49:10.829 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 23:49:10.829 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 23:49:10.863 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 23:49:10.871 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1002
* Starting evolution
[MASTER] 23:49:14.551 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: Line 625
[MASTER] 23:49:14.551 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: Line 626
[MASTER] 23:49:14.552 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: root-Branch
[MASTER] 23:49:14.553 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 257: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - ReplaceVariable l -> m_normalize
[MASTER] 23:49:14.553 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 261: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - InsertUnaryOp Negation of l
[MASTER] 23:49:14.553 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 262: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - InsertUnaryOp IINC 1 l
[MASTER] 23:49:14.553 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 263: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - InsertUnaryOp IINC -1 l
[MASTER] 23:49:14.554 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V
[MASTER] 23:49:14.558 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V
[MASTER] 23:49:14.559 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setLowercaseTokens(Z)V
[MASTER] 23:49:17.674 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 754
[MASTER] 23:49:17.674 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 755
[MASTER] 23:49:17.674 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 756
[MASTER] 23:49:17.674 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 757
[MASTER] 23:49:17.675 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.getRevision()Ljava/lang/String;: Line 937
[MASTER] 23:49:17.675 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 699
[MASTER] 23:49:17.675 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 700
[MASTER] 23:49:17.675 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 701
[MASTER] 23:49:17.675 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 702
[MASTER] 23:49:17.675 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 703
[MASTER] 23:49:17.675 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 704
[MASTER] 23:49:17.675 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 705
[MASTER] 23:49:17.675 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 706
[MASTER] 23:49:17.676 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setCheckErrorRate(Z)V: Line 609
[MASTER] 23:49:17.676 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setCheckErrorRate(Z)V: Line 610
[MASTER] 23:49:17.683 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.toString()Ljava/lang/String;: Line 2027
[MASTER] 23:49:17.683 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.toString()Ljava/lang/String;: Line 2028
[MASTER] 23:49:17.687 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.getRevision()Ljava/lang/String;: root-Branch
[MASTER] 23:49:17.687 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: root-Branch
[MASTER] 23:49:17.687 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: root-Branch
[MASTER] 23:49:17.687 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setCheckErrorRate(Z)V: root-Branch
[MASTER] 23:49:17.697 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.toString()Ljava/lang/String;: I4 Branch 105 IFNONNULL L2027 - false
[MASTER] 23:49:17.699 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 215: weka.classifiers.rules.JRip.setCheckErrorRate(Z)V:609 - InsertUnaryOp Negation of d
[MASTER] 23:49:17.700 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 216: weka.classifiers.rules.JRip.setCheckErrorRate(Z)V:609 - InsertUnaryOp IINC 1 d
[MASTER] 23:49:17.700 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 217: weka.classifiers.rules.JRip.setCheckErrorRate(Z)V:609 - InsertUnaryOp IINC -1 d
[MASTER] 23:49:17.700 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 378: weka.classifiers.rules.JRip.toString()Ljava/lang/String;:2027 - ReplaceComparisonOperator != null -> = null
[MASTER] 23:49:17.700 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 379: weka.classifiers.rules.JRip.toString()Ljava/lang/String;:2028 - ReplaceConstant - JRIP: No model built yet. -> 
[MASTER] 23:49:17.702 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 646: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:700 - ReplaceVariable a -> att
[MASTER] 23:49:17.702 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 647: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:701 - ReplaceConstant - NaN -> 0.0
[MASTER] 23:49:17.702 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 648: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:701 - ReplaceConstant - NaN -> 1.0
[MASTER] 23:49:17.702 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 649: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:701 - ReplaceConstant - NaN -> -1.0
[MASTER] 23:49:17.702 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 650: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:701 - ReplaceConstant - NaN -> NaN
[MASTER] 23:49:17.702 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 651: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:702 - ReplaceConstant - 0.0 -> 1.0
[MASTER] 23:49:17.702 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 652: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:702 - ReplaceConstant - 0.0 -> -1.0
[MASTER] 23:49:17.702 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 653: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:703 - ReplaceConstant - NaN -> 0.0
[MASTER] 23:49:17.702 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 654: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:703 - ReplaceConstant - NaN -> 1.0
[MASTER] 23:49:17.702 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 655: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:703 - ReplaceConstant - NaN -> -1.0
[MASTER] 23:49:17.702 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 656: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:703 - ReplaceConstant - NaN -> NaN
[MASTER] 23:49:17.702 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 657: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:704 - ReplaceConstant - NaN -> 0.0
[MASTER] 23:49:17.702 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 658: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:704 - ReplaceConstant - NaN -> 1.0
[MASTER] 23:49:17.702 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 659: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:704 - ReplaceConstant - NaN -> -1.0
[MASTER] 23:49:17.702 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 660: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:704 - ReplaceConstant - NaN -> NaN
[MASTER] 23:49:17.702 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 661: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:705 - ReplaceConstant - NaN -> 0.0
[MASTER] 23:49:17.702 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 662: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:705 - ReplaceConstant - NaN -> 1.0
[MASTER] 23:49:17.702 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 663: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:705 - ReplaceConstant - NaN -> -1.0
[MASTER] 23:49:17.702 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 664: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:705 - ReplaceConstant - NaN -> NaN
[MASTER] 23:49:17.702 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 691: weka.classifiers.rules.JRip$NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:756 - ReplaceConstant - NaN -> 0.0
[MASTER] 23:49:17.702 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 692: weka.classifiers.rules.JRip$NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:756 - ReplaceConstant - NaN -> 1.0
[MASTER] 23:49:17.702 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 693: weka.classifiers.rules.JRip$NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:756 - ReplaceConstant - NaN -> -1.0
[MASTER] 23:49:17.703 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 694: weka.classifiers.rules.JRip$NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:756 - ReplaceConstant - NaN -> NaN
[MASTER] 23:49:17.703 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 884: weka.classifiers.rules.JRip$NumericAntd.getRevision()Ljava/lang/String;:937 - ReplaceConstant - $Revision: 8118 $ -> 
[MASTER] 23:49:17.703 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.listOptions()Ljava/util/Enumeration;:NonNull
[MASTER] 23:49:17.704 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.toString()Ljava/lang/String;:NonEmptyString
[MASTER] 23:49:17.704 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.listOptions()Ljava/util/Enumeration;
[MASTER] 23:49:17.704 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setCheckErrorRate(Z)V
[MASTER] 23:49:17.704 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.toString()Ljava/lang/String;
[MASTER] 23:49:17.705 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
[MASTER] 23:49:17.705 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NumericAntd.getRevision()Ljava/lang/String;
[MASTER] 23:49:17.719 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.listOptions()Ljava/util/Enumeration;
[MASTER] 23:49:17.719 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setCheckErrorRate(Z)V
[MASTER] 23:49:17.720 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.toString()Ljava/lang/String;
[MASTER] 23:49:17.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
[MASTER] 23:49:17.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.NumericAntd.getRevision()Ljava/lang/String;
[MASTER] 23:49:17.731 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$NumericAntd.getRevision()Ljava/lang/String;: root-Branch in context: 
[MASTER] 23:49:17.731 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.toString()Ljava/lang/String;: I4 Branch 105 IFNONNULL L2027 - false in context: weka.classifiers.rules.JRip:toString()Ljava/lang/String;
[MASTER] 23:49:17.731 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: root-Branch in context: weka.classifiers.rules.JRip$Antd:<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
[MASTER] 23:49:17.731 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.listOptions()Ljava/util/Enumeration;: root-Branch in context: weka.classifiers.rules.JRip:listOptions()Ljava/util/Enumeration;
[MASTER] 23:49:17.731 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: root-Branch in context: weka.classifiers.rules.JRip$NumericAntd:<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
[MASTER] 23:49:17.733 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setCheckErrorRate(Z)V: root-Branch in context: weka.classifiers.rules.JRip:setCheckErrorRate(Z)V
[MASTER] 23:49:19.107 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getTokenizer()Lweka/core/tokenizers/Tokenizer;:NonNull
[MASTER] 23:49:19.107 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getTokenizer()Lweka/core/tokenizers/Tokenizer;
[MASTER] 23:49:19.108 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getTokenizer()Lweka/core/tokenizers/Tokenizer;
[MASTER] 23:49:19.109 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getTokenizer()Lweka/core/tokenizers/Tokenizer;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getTokenizer()Lweka/core/tokenizers/Tokenizer;
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 23:49:24.232 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.getSeed()J:Positive
[MASTER] 23:49:26.608 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:49:26.611 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:49:26.612 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 23:49:27.585 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 23:49:28.305 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 23:49:28.306 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 23:49:29.970 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 23:49:30.000 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 23:49:30.000 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 23:49:30.000 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 23:49:30.001 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 23:49:30.001 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 23:49:30.002 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 23:49:30.003 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 23:49:30.004 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 23:49:30.119 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 23:49:30.152 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1002
* Starting evolution
[MASTER] 23:49:41.077 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 23:50:06.390 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 23:50:42.535 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NominalAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
[MASTER] 23:51:06.347 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 23:51:14.329 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 253s and 243 generations, 117032 statements, best individual has fitness: 2520.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 89%
* Total number of goals: 217
* Number of covered goals: 193
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 70%
* Total number of goals: 428
* Number of covered goals: 298
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 239
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 70%
* Total number of goals: 428
* Number of covered goals: 298
* Generated 91 tests with total length 241
* Resulting test suite's coverage: 77% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 80%
* Search finished after 290s and 262 generations, 122069 statements, best individual has fitness: 12688.0
* Compiling and checking tests
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 36%
* Total number of goals: 705
* Number of covered goals: 253
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 27%
* Total number of goals: 416
* Number of covered goals: 111
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 54%
* Total number of goals: 993
* Number of covered goals: 533
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 27%
* Total number of goals: 93
* Number of covered goals: 25
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 27%
* Total number of goals: 416
* Number of covered goals: 111
* Generated 84 tests with total length 536
* Resulting test suite's coverage: 43% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 286s and 118 generations, 72046 statements, best individual has fitness: 14832.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1002/107_weka/evosuite-tests
* Done!

* Computation finished
* Coverage of criterion LINE: 59%
* Total number of goals: 1378
* Number of covered goals: 818
* Coverage analysis for criterion BRANCH
* Search finished after 314s and 315 generations, 200852 statements, best individual has fitness: 1304.0
* Coverage of criterion BRANCH: 45%
* Total number of goals: 809
* Number of covered goals: 362
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 75
* Number of covered goals: 75
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 61%
* Total number of goals: 424
* Number of covered goals: 259
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 23%
* Total number of goals: 278
* Number of covered goals: 63
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 44%
* Total number of goals: 809
* Number of covered goals: 359
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 91%
* Total number of goals: 338
* Number of covered goals: 309
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 86%
* Total number of goals: 194
* Number of covered goals: 167
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 27
* Number of covered goals: 27
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 94%
* Total number of goals: 476
* Number of covered goals: 446
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 57%
* Total number of goals: 112
* Number of covered goals: 64
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 86%
* Total number of goals: 194
* Number of covered goals: 166
* Generated 94 tests with total length 1055
* Resulting test suite's coverage: 89% (average coverage for all fitness functions)
* Generating assertions
* Generated 179 tests with total length 2195
* Resulting test suite's coverage: 53% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 20%
* Compiling and checking tests
[MASTER] 23:56:08.295 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1002/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 58%
* Compiling and checking tests
[MASTER] 00:00:53.577 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_38_1575244853540/weka/classifiers/bayes/NaiveBayesMultinomialText_38_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_38_1575244853540/weka/classifiers/bayes/NaiveBayesMultinomialText_38_tmp__ESTest_scaffolding.java]]
[MASTER] 00:00:53.577 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 00:00:53.577 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 00:00:53.584 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 00:00:53.587 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_38_1575244853540/weka/classifiers/bayes/NaiveBayesMultinomialText_38_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 00:00:53 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.testdata.FileSystemHandling;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.classifiers.functions.SGDText;
18: import weka.core.BinarySparseInstance;
19: import weka.core.SparseInstance;
20: import weka.core.TestInstances;
21: import weka.core.stemmers.NullStemmer;
22: import weka.core.tokenizers.Tokenizer;
23: import weka.core.tokenizers.WordTokenizer;
24: 
25: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
26: public class NaiveBayesMultinomialText_38_tmp__ESTest extends NaiveBayesMultinomialText_38_tmp__ESTest_scaffolding {
27: 
28:   /**
29:   //Test case number: 0
30:   /*Coverage entropy=3.125543816101745
31:   */
32:   @Test(timeout = 4000)
33:   public void test0()  throws Throwable  {
34:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
35:       TestInstances testInstances0 = new TestInstances();
36:       testInstances0.setRelation("RG1=e66u2");
37:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
38:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText1.m_inputVector;
39:       naiveBayesMultinomialText0.m_inputVector = null;
40:       SGDText sGDText0 = new SGDText();
41:       WordTokenizer wordTokenizer0 = new WordTokenizer();
42:       naiveBayesMultinomialText0.m_tokenizer = (Tokenizer) wordTokenizer0;
43:       naiveBayesMultinomialText0.m_lowercaseTokens = true;
44:       TestInstances.main(testInstances0.DEFAULT_WORDS);
45:       NullStemmer nullStemmer0 = new NullStemmer();
46:       naiveBayesMultinomialText0.setPeriodicPruning(0);
47:       NaiveBayesMultinomialText.main(testInstances0.DEFAULT_WORDS);
48:       naiveBayesMultinomialText0.tokenizerTipText();
49:       naiveBayesMultinomialText0.getUseStopList();
50:       naiveBayesMultinomialText0.setNorm((-1));
51:       naiveBayesMultinomialText0.toString();
52:       sGDText0.setPeriodicPruning(0);
53:       FileSystemHandling.shouldAllThrowIOExceptions();
54:       naiveBayesMultinomialText0.periodicPruningTipText();
55:       naiveBayesMultinomialText0.getTokenizer();
56:       naiveBayesMultinomialText1.minWordFrequencyTipText();
57:       naiveBayesMultinomialText0.setLNorm((-2703.21318412));
58:       naiveBayesMultinomialText1.globalInfo();
59:       naiveBayesMultinomialText0.getNorm();
60:       double[] doubleArray0 = new double[0];
61:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-1.0), doubleArray0);
62:       SparseInstance sparseInstance0 = new SparseInstance((SparseInstance) binarySparseInstance0);
63:       try { 
64:         naiveBayesMultinomialText1.updateClassifier(sparseInstance0);
65:         fail("Expecting exception: RuntimeException");
66:       
67:       } catch(RuntimeException e) {
68:          //
69:          // DenseInstance doesn't have access to a dataset!
70:          //
71:          verifyException("weka.core.AbstractInstance", e);
72:       }
73:   }
74: }
RegularFileObject[/tmp/EvoSuite_38_1575244853540/weka/classifiers/bayes/NaiveBayesMultinomialText_38_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 00:00:53 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_38_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_38_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "weka.classifiers.meta.LogitBoost",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.AttributeLocator",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.neighboursearch.balltrees.BallNode",
131:       "weka.core.AdditionalMeasureProducer",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
134:       "weka.core.Drawable",
135:       "weka.core.matrix.Matrix",
136:       "weka.core.CapabilitiesHandler",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "org.pentaho.packageManagement.DefaultPackage",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.filters.AllFilter",
145:       "weka.core.Tag",
146:       "weka.classifiers.IteratedSingleClassifierEnhancer",
147:       "weka.core.ManhattanDistance",
148:       "weka.classifiers.AbstractClassifier",
149:       "weka.filters.unsupervised.attribute.Center",
150:       "weka.core.OptionHandler",
151:       "weka.core.WekaException",
152:       "weka.classifiers.trees.RandomForest",
153:       "weka.filters.StreamableFilter",
154:       "weka.core.Range",
155:       "weka.core.Attribute$1",
156:       "weka.core.PartitionGenerator",
157:       "weka.core.scripting.JythonSerializableObject",
158:       "weka.classifiers.Classifier",
159:       "weka.core.Capabilities$Capability",
160:       "weka.core.SparseInstance",
161:       "org.pentaho.packageManagement.PackageManager",
162:       "weka.estimators.PoissonEstimator",
163:       "weka.core.WekaEnumeration",
164:       "weka.attributeSelection.AttributeTransformer",
165:       "weka.core.tokenizers.WordTokenizer",
166:       "weka.classifiers.misc.SerializedClassifier",
167:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
168:       "weka.attributeSelection.PrincipalComponents",
169:       "weka.core.stemmers.SnowballStemmer",
170:       "weka.core.stemmers.LovinsStemmer",
171:       "weka.classifiers.Evaluation",
172:       "weka.classifiers.functions.supportVector.Kernel",
173:       "weka.core.WekaPackageManager",
174:       "weka.core.TechnicalInformationHandler",
175:       "weka.classifiers.functions.SimpleLogistic",
176:       "weka.classifiers.lazy.LWL",
177:       "weka.core.neighboursearch.LinearNNSearch",
178:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
179:       "weka.core.Option",
180:       "weka.classifiers.meta.CostSensitiveClassifier",
181:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
182:       "weka.core.neighboursearch.PerformanceStats",
183:       "weka.filters.Sourcable",
184:       "weka.core.Attribute",
185:       "weka.core.Stopwords",
186:       "weka.core.tokenizers.AlphabeticTokenizer",
187:       "weka.core.FastVector",
188:       "weka.classifiers.MultipleClassifiersCombiner",
189:       "weka.core.tokenizers.NGramTokenizer",
190:       "weka.core.UnassignedDatasetException",
191:       "weka.classifiers.RandomizableClassifier",
192:       "weka.classifiers.trees.RandomTree",
193:       "weka.classifiers.SingleClassifierEnhancer",
194:       "weka.core.RevisionUtils",
195:       "weka.core.Instance",
196:       "weka.core.ProtectedProperties",
197:       "weka.estimators.Estimator",
198:       "weka.classifiers.meta.Vote",
199:       "weka.core.StringLocator",
200:       "weka.core.AttributeStats",
201:       "weka.core.WeightedInstancesHandler",
202:       "weka.core.neighboursearch.NearestNeighbourSearch",
203:       "weka.classifiers.trees.DecisionStump",
204:       "weka.filters.unsupervised.attribute.Remove",
205:       "weka.core.Randomizable",
206:       "weka.classifiers.functions.SGD",
207:       "weka.core.EuclideanDistance",
208:       "weka.core.Instances",
209:       "weka.classifiers.rules.OneR",
210:       "weka.core.UnassignedClassException",
211:       "weka.classifiers.rules.ZeroR",
212:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
213:       "weka.filters.unsupervised.attribute.Standardize",
214:       "weka.core.stemmers.Stemming",
215:       "weka.core.TechnicalInformation",
216:       "weka.core.UnsupportedAttributeTypeException",
217:       "weka.classifiers.Sourcable",
218:       "weka.core.RevisionHandler",
219:       "weka.classifiers.evaluation.output.prediction.PlainText",
220:       "weka.classifiers.rules.OneR$OneRRule",
221:       "weka.core.xml.XMLSerialization",
222:       "weka.classifiers.xml.XMLClassifier",
223:       "weka.filters.Filter"
224:     );
225:   } 
226: 
227:   private static void resetClasses() {
228:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_38_tmp__ESTest_scaffolding.class.getClassLoader()); 
229: 
230:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
231:       "weka.classifiers.AbstractClassifier",
232:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
233:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
234:       "weka.core.Capabilities$Capability",
235:       "weka.core.tokenizers.Tokenizer",
236:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
237:       "weka.core.tokenizers.WordTokenizer",
238:       "weka.core.stemmers.NullStemmer",
239:       "weka.core.NormalizableDistance",
240:       "weka.core.ChebyshevDistance",
241:       "weka.core.Range",
242:       "weka.core.AbstractInstance",
243:       "weka.core.SparseInstance",
244:       "weka.core.BinarySparseInstance",
245:       "weka.core.RevisionUtils",
246:       "weka.classifiers.misc.SerializedClassifier",
247:       "weka.core.Utils",
248:       "weka.core.tokenizers.NGramTokenizer",
249:       "weka.core.Option",
250:       "weka.core.neighboursearch.balltrees.BallNode",
251:       "weka.core.UnassignedDatasetException",
252:       "weka.classifiers.Evaluation",
253:       "weka.core.DenseInstance",
254:       "weka.core.stemmers.LovinsStemmer",
255:       "weka.classifiers.SingleClassifierEnhancer",
256:       "weka.classifiers.misc.InputMappedClassifier",
257:       "weka.classifiers.rules.ZeroR",
258:       "weka.core.SerializedObject",
259:       "weka.classifiers.bayes.BayesNet",
260:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
261:       "weka.core.Tag",
262:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
263:       "weka.classifiers.bayes.net.search.local.K2",
264:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
265:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
266:       "weka.core.Capabilities",
267:       "org.pentaho.packageManagement.PackageManager",
268:       "org.pentaho.packageManagement.DefaultPackageManager",
269:       "weka.core.Version",
270:       "weka.core.Environment",
271:       "weka.core.WekaPackageManager",
272:       "weka.core.stemmers.Stemming",
273:       "weka.core.Instances",
274:       "weka.classifiers.RandomizableClassifier",
275:       "weka.classifiers.functions.SGDText",
276:       "weka.core.tokenizers.AlphabeticTokenizer",
277:       "weka.core.neighboursearch.NearestNeighbourSearch",
278:       "weka.core.neighboursearch.KDTree",
279:       "weka.core.EuclideanDistance",
280:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
281:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
282:       "weka.core.TechnicalInformation",
283:       "weka.core.TechnicalInformation$Type",
284:       "weka.core.TechnicalInformation$Field",
285:       "weka.attributeSelection.ASEvaluation",
286:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
287:       "weka.attributeSelection.PrincipalComponents",
288:       "weka.core.TestInstances",
289:       "weka.core.Attribute",
290:       "weka.core.ProtectedProperties",
291:       "weka.core.WekaEnumeration",
292:       "weka.core.Attribute$1",
293:       "weka.core.stemmers.SnowballStemmer",
294:       "weka.core.neighboursearch.LinearNNSearch",
295:       "weka.attributeSelection.GainRatioAttributeEval",
296:       "weka.attributeSelection.AttributeSelection",
297:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
298:       "weka.classifiers.meta.CostSensitiveClassifier",
299:       "weka.classifiers.CostMatrix",
300:       "weka.estimators.Estimator",
301:       "weka.estimators.DiscreteEstimator",
302:       "weka.core.UnassignedClassException",
303:       "weka.core.Javadoc",
304:       "weka.core.ClassDiscovery",
305:       "weka.core.ClassCache",
306:       "weka.core.AllJavadoc",
307:       "weka.core.MinkowskiDistance",
308:       "weka.core.neighboursearch.CoverTree",
309:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
310:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
311:       "weka.core.TechnicalInformationHandlerJavadoc",
312:       "weka.core.Check",
313:       "weka.core.CheckOptionHandler",
314:       "weka.filters.Filter",
315:       "weka.filters.supervised.attribute.Discretize",
316:       "weka.classifiers.IteratedSingleClassifierEnhancer",
317:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
318:       "weka.classifiers.meta.LogitBoost",
319:       "weka.classifiers.trees.DecisionStump",
320:       "weka.core.WekaException",
321:       "weka.classifiers.meta.FilteredClassifier",
322:       "weka.filters.supervised.attribute.AttributeSelection",
323:       "weka.attributeSelection.CfsSubsetEval",
324:       "weka.attributeSelection.ASSearch",
325:       "weka.attributeSelection.GreedyStepwise",
326:       "weka.attributeSelection.BestFirst",
327:       "weka.classifiers.trees.J48",
328:       "weka.classifiers.functions.SMO",
329:       "weka.classifiers.functions.supportVector.Kernel",
330:       "weka.classifiers.functions.supportVector.CachedKernel",
331:       "weka.classifiers.functions.supportVector.PolyKernel",
332:       "weka.classifiers.bayes.net.BIFReader",
333:       "weka.core.ListOptions",
334:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
335:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
336:       "weka.classifiers.bayes.NaiveBayesMultinomial",
337:       "weka.core.converters.ArffLoader$ArffReader",
338:       "weka.core.neighboursearch.BallTree",
339:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
340:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
341:       "weka.core.neighboursearch.balltrees.BallSplitter",
342:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
343:       "weka.core.Stopwords",
344:       "weka.classifiers.bayes.NaiveBayes",
345:       "weka.core.CheckGOE",
346:       "weka.classifiers.meta.AdaBoostM1",
347:       "weka.classifiers.functions.MultilayerPerceptron",
348:       "weka.core.FastVector",
349:       "weka.filters.unsupervised.attribute.NominalToBinary",
350:       "weka.classifiers.functions.neural.SigmoidUnit",
351:       "weka.classifiers.functions.neural.LinearUnit",
352:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
353:       "weka.core.ManhattanDistance",
354:       "weka.classifiers.trees.LMT",
355:       "weka.core.UnsupportedAttributeTypeException",
356:       "weka.classifiers.functions.LinearRegression",
357:       "weka.estimators.NormalEstimator",
358:       "weka.classifiers.lazy.IBk",
359:       "weka.classifiers.meta.CVParameterSelection",
360:       "weka.classifiers.lazy.KStar",
361:       "weka.classifiers.rules.DecisionTable",
362:       "weka.classifiers.MultipleClassifiersCombiner",
363:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
364:       "weka.classifiers.meta.MultiScheme",
365:       "weka.core.FindWithCapabilities",
366:       "weka.core.SingleIndex",
367:       "weka.classifiers.functions.Logistic",
368:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
369:       "weka.classifiers.meta.Vote",
370:       "weka.filters.AllFilter",
371:       "weka.classifiers.rules.PART",
372:       "weka.classifiers.rules.part.MakeDecList",
373:       "weka.classifiers.meta.MultiClassClassifier",
374:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
375:       "weka.classifiers.rules.OneR",
376:       "weka.core.GlobalInfoJavadoc",
377:       "weka.core.stemmers.IteratedLovinsStemmer",
378:       "weka.attributeSelection.WrapperSubsetEval",
379:       "weka.classifiers.meta.AdditiveRegression",
380:       "weka.classifiers.functions.SGD",
381:       "weka.core.SelectedTag",
382:       "weka.classifiers.trees.m5.M5Base",
383:       "weka.classifiers.rules.M5Rules",
384:       "weka.estimators.PoissonEstimator",
385:       "weka.filters.SimpleFilter",
386:       "weka.filters.SimpleStreamFilter",
387:       "weka.filters.MultiFilter",
388:       "weka.classifiers.meta.AttributeSelectedClassifier",
389:       "weka.attributeSelection.OneRAttributeEval",
390:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
391:       "weka.core.converters.ConverterUtils$DataSource",
392:       "weka.core.converters.AbstractLoader",
393:       "weka.core.converters.AbstractFileLoader",
394:       "weka.core.converters.ArffLoader",
395:       "weka.classifiers.functions.supportVector.StringKernel",
396:       "weka.classifiers.lazy.LWL",
397:       "weka.classifiers.functions.SimpleLinearRegression",
398:       "weka.attributeSelection.CorrelationAttributeEval",
399:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
400:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
401:       "weka.classifiers.meta.Bagging",
402:       "weka.classifiers.trees.REPTree",
403:       "weka.classifiers.functions.SMOreg",
404:       "weka.classifiers.functions.supportVector.RegOptimizer",
405:       "weka.classifiers.functions.supportVector.RegSMO",
406:       "weka.classifiers.functions.supportVector.RegSMOImproved",
407:       "weka.classifiers.rules.JRip",
408:       "weka.attributeSelection.ReliefFAttributeEval",
409:       "weka.classifiers.functions.GaussianProcesses",
410:       "weka.classifiers.trees.j48.ClassifierTree",
411:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
412:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
413:       "weka.core.Queue",
414:       "weka.core.AttributeLocator",
415:       "weka.core.StringLocator",
416:       "weka.core.RelationalLocator",
417:       "weka.core.ContingencyTables",
418:       "weka.core.Queue$QueueNode",
419:       "weka.classifiers.rules.OneR$OneRRule",
420:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
421:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
422:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
423:       "weka.classifiers.meta.Stacking",
424:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
425:       "weka.core.matrix.Matrix",
426:       "weka.core.OptionHandlerJavadoc",
427:       "weka.classifiers.functions.supportVector.RBFKernel",
428:       "weka.classifiers.trees.RandomForest",
429:       "weka.classifiers.trees.RandomTree",
430:       "weka.classifiers.meta.RegressionByDiscretization",
431:       "weka.filters.unsupervised.attribute.Discretize",
432:       "weka.core.AttributeStats",
433:       "weka.classifiers.meta.ClassificationViaRegression",
434:       "weka.classifiers.trees.M5P",
435:       "weka.estimators.KernelEstimator",
436:       "weka.attributeSelection.InfoGainAttributeEval",
437:       "weka.classifiers.bayes.NaiveBayesUpdateable",
438:       "weka.classifiers.meta.RandomCommittee",
439:       "weka.core.SerializationHelper",
440:       "weka.classifiers.functions.supportVector.Puk",
441:       "weka.classifiers.functions.VotedPerceptron",
442:       "weka.classifiers.functions.SimpleLogistic",
443:       "weka.core.neighboursearch.kdtrees.KMeansInpiredMethod",
444:       "weka.classifiers.functions.neural.NeuralConnection",
445:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
446:       "weka.estimators.MahalanobisEstimator",
447:       "weka.experiment.Stats",
448:       "weka.core.neighboursearch.PerformanceStats"
449:     );
450:   }
451: }

[MASTER] 00:00:53.587 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
TestInstances testInstances0 = new TestInstances();
testInstances0.setRelation("RG1=e66u2");
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText1.m_inputVector;
naiveBayesMultinomialText0.m_inputVector = null;
SGDText sGDText0 = new SGDText();
WordTokenizer wordTokenizer0 = new WordTokenizer();
naiveBayesMultinomialText0.m_tokenizer = (Tokenizer) wordTokenizer0;
naiveBayesMultinomialText0.m_lowercaseTokens = true;
TestInstances.main(testInstances0.DEFAULT_WORDS);
NullStemmer nullStemmer0 = new NullStemmer();
naiveBayesMultinomialText0.setPeriodicPruning(0);
NaiveBayesMultinomialText.main(testInstances0.DEFAULT_WORDS);
naiveBayesMultinomialText0.tokenizerTipText();
naiveBayesMultinomialText0.getUseStopList();
naiveBayesMultinomialText0.setNorm((-1));
naiveBayesMultinomialText0.toString();
sGDText0.setPeriodicPruning(0);
FileSystemHandling.shouldAllThrowIOExceptions();
naiveBayesMultinomialText0.periodicPruningTipText();
naiveBayesMultinomialText0.getTokenizer();
naiveBayesMultinomialText1.minWordFrequencyTipText();
naiveBayesMultinomialText0.setLNorm((-2703.21318412));
naiveBayesMultinomialText1.globalInfo();
naiveBayesMultinomialText0.getNorm();
double[] doubleArray0 = new double[0];
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-1.0), doubleArray0);
SparseInstance sparseInstance0 = new SparseInstance((SparseInstance) binarySparseInstance0);
naiveBayesMultinomialText1.updateClassifier(sparseInstance0);

[MASTER] 00:00:56.865 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_89_1575244856832/weka/classifiers/bayes/NaiveBayesMultinomialText_89_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_89_1575244856832/weka/classifiers/bayes/NaiveBayesMultinomialText_89_tmp__ESTest_scaffolding.java]]
[MASTER] 00:00:56.865 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 00:00:56.865 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 00:00:56.866 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 00:00:56.866 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 00:00:56.866 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_89_1575244856832/weka/classifiers/bayes/NaiveBayesMultinomialText_89_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 00:00:56 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: 
16: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
17: public class NaiveBayesMultinomialText_89_tmp__ESTest extends NaiveBayesMultinomialText_89_tmp__ESTest_scaffolding {
18: 
19:   /**
20:   //Test case number: 0
21:   /*Coverage entropy=2.4164983843494308
22:   */
23:   @Test(timeout = 4000)
24:   public void test0()  throws Throwable  {
25:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
26:       naiveBayesMultinomialText0.setPeriodicPruning((-35));
27:       naiveBayesMultinomialText0.m_stopwordsFile = null;
28:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
29:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
30:       naiveBayesMultinomialText0.setPeriodicPruning((-3617));
31:       naiveBayesMultinomialText0.getTokenizer();
32:       naiveBayesMultinomialText0.getStemmer();
33:       naiveBayesMultinomialText0.minWordFrequencyTipText();
34:       naiveBayesMultinomialText0.listOptions();
35:       naiveBayesMultinomialText0.getStopwords();
36:       assertEquals((-3617), naiveBayesMultinomialText0.getPeriodicPruning());
37:   }
38: }
RegularFileObject[/tmp/EvoSuite_89_1575244856832/weka/classifiers/bayes/NaiveBayesMultinomialText_89_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 00:00:56 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_89_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_89_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "weka.classifiers.meta.LogitBoost",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.estimators.Estimator$Builder",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.MultiInstanceCapabilitiesHandler",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.AttributeLocator",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.neighboursearch.balltrees.BallNode",
131:       "weka.core.AdditionalMeasureProducer",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
134:       "weka.core.Drawable",
135:       "weka.core.matrix.Matrix",
136:       "weka.core.CapabilitiesHandler",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "org.pentaho.packageManagement.DefaultPackage",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.filters.AllFilter",
145:       "weka.core.Tag",
146:       "weka.classifiers.IteratedSingleClassifierEnhancer",
147:       "weka.core.ManhattanDistance",
148:       "weka.classifiers.AbstractClassifier",
149:       "weka.filters.unsupervised.attribute.Center",
150:       "weka.core.OptionHandler",
151:       "weka.core.WekaException",
152:       "weka.classifiers.trees.RandomForest",
153:       "weka.filters.StreamableFilter",
154:       "weka.core.Range",
155:       "weka.core.Attribute$1",
156:       "weka.core.PartitionGenerator",
157:       "weka.core.scripting.JythonSerializableObject",
158:       "weka.classifiers.Classifier",
159:       "weka.core.Capabilities$Capability",
160:       "weka.core.SparseInstance",
161:       "org.pentaho.packageManagement.PackageManager",
162:       "weka.estimators.PoissonEstimator",
163:       "weka.core.WekaEnumeration",
164:       "weka.attributeSelection.AttributeTransformer",
165:       "weka.core.tokenizers.WordTokenizer",
166:       "weka.classifiers.misc.SerializedClassifier",
167:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
168:       "weka.attributeSelection.PrincipalComponents",
169:       "weka.core.stemmers.SnowballStemmer",
170:       "weka.core.stemmers.LovinsStemmer",
171:       "weka.classifiers.Evaluation",
172:       "weka.classifiers.functions.supportVector.Kernel",
173:       "weka.core.WekaPackageManager",
174:       "weka.core.TechnicalInformationHandler",
175:       "weka.classifiers.functions.SimpleLogistic",
176:       "weka.classifiers.lazy.LWL",
177:       "weka.core.neighboursearch.LinearNNSearch",
178:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
179:       "weka.core.Option",
180:       "weka.classifiers.meta.CostSensitiveClassifier",
181:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
182:       "weka.core.neighboursearch.PerformanceStats",
183:       "weka.filters.Sourcable",
184:       "weka.core.Attribute",
185:       "weka.core.Stopwords",
186:       "weka.core.tokenizers.AlphabeticTokenizer",
187:       "weka.core.FastVector",
188:       "weka.classifiers.MultipleClassifiersCombiner",
189:       "weka.core.tokenizers.NGramTokenizer",
190:       "weka.core.UnassignedDatasetException",
191:       "weka.classifiers.RandomizableClassifier",
192:       "weka.classifiers.trees.RandomTree",
193:       "weka.classifiers.SingleClassifierEnhancer",
194:       "weka.core.RevisionUtils",
195:       "weka.core.Instance",
196:       "weka.core.ProtectedProperties",
197:       "weka.estimators.Estimator",
198:       "weka.classifiers.meta.Vote",
199:       "weka.core.StringLocator",
200:       "weka.core.AttributeStats",
201:       "weka.core.WeightedInstancesHandler",
202:       "weka.core.neighboursearch.NearestNeighbourSearch",
203:       "weka.classifiers.trees.DecisionStump",
204:       "weka.filters.unsupervised.attribute.Remove",
205:       "weka.core.Randomizable",
206:       "weka.classifiers.functions.SGD",
207:       "weka.core.EuclideanDistance",
208:       "weka.core.Instances",
209:       "weka.classifiers.rules.OneR",
210:       "weka.core.UnassignedClassException",
211:       "weka.classifiers.rules.ZeroR",
212:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
213:       "weka.filters.unsupervised.attribute.Standardize",
214:       "weka.core.stemmers.Stemming",
215:       "weka.core.TechnicalInformation",
216:       "weka.core.UnsupportedAttributeTypeException",
217:       "weka.classifiers.Sourcable",
218:       "weka.core.RevisionHandler",
219:       "weka.classifiers.evaluation.output.prediction.PlainText",
220:       "weka.classifiers.rules.OneR$OneRRule",
221:       "weka.core.xml.XMLSerialization",
222:       "weka.classifiers.xml.XMLClassifier",
223:       "weka.filters.Filter"
224:     );
225:   } 
226: 
227:   private static void resetClasses() {
228:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_89_tmp__ESTest_scaffolding.class.getClassLoader()); 
229: 
230:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
231:       "weka.classifiers.AbstractClassifier",
232:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
233:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
234:       "weka.core.Capabilities$Capability",
235:       "weka.core.tokenizers.Tokenizer",
236:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
237:       "weka.core.tokenizers.WordTokenizer",
238:       "weka.core.stemmers.NullStemmer",
239:       "weka.core.NormalizableDistance",
240:       "weka.core.ChebyshevDistance",
241:       "weka.core.Range",
242:       "weka.core.AbstractInstance",
243:       "weka.core.SparseInstance",
244:       "weka.core.BinarySparseInstance",
245:       "weka.core.RevisionUtils",
246:       "weka.classifiers.misc.SerializedClassifier",
247:       "weka.core.Utils",
248:       "weka.core.tokenizers.NGramTokenizer",
249:       "weka.core.Option",
250:       "weka.core.neighboursearch.balltrees.BallNode",
251:       "weka.core.UnassignedDatasetException",
252:       "weka.classifiers.Evaluation",
253:       "weka.core.DenseInstance",
254:       "weka.core.stemmers.LovinsStemmer",
255:       "weka.classifiers.SingleClassifierEnhancer",
256:       "weka.classifiers.misc.InputMappedClassifier",
257:       "weka.classifiers.rules.ZeroR",
258:       "weka.core.SerializedObject",
259:       "weka.classifiers.bayes.BayesNet",
260:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
261:       "weka.core.Tag",
262:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
263:       "weka.classifiers.bayes.net.search.local.K2",
264:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
265:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
266:       "weka.core.Capabilities",
267:       "org.pentaho.packageManagement.PackageManager",
268:       "org.pentaho.packageManagement.DefaultPackageManager",
269:       "weka.core.Version",
270:       "weka.core.Environment",
271:       "weka.core.WekaPackageManager",
272:       "weka.core.stemmers.Stemming",
273:       "weka.core.Instances",
274:       "weka.classifiers.RandomizableClassifier",
275:       "weka.classifiers.functions.SGDText",
276:       "weka.core.tokenizers.AlphabeticTokenizer",
277:       "weka.core.neighboursearch.NearestNeighbourSearch",
278:       "weka.core.neighboursearch.KDTree",
279:       "weka.core.EuclideanDistance",
280:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
281:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
282:       "weka.core.TechnicalInformation",
283:       "weka.core.TechnicalInformation$Type",
284:       "weka.core.TechnicalInformation$Field",
285:       "weka.attributeSelection.ASEvaluation",
286:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
287:       "weka.attributeSelection.PrincipalComponents",
288:       "weka.core.TestInstances",
289:       "weka.core.Attribute",
290:       "weka.core.ProtectedProperties",
291:       "weka.core.WekaEnumeration",
292:       "weka.core.Attribute$1",
293:       "weka.core.stemmers.SnowballStemmer",
294:       "weka.core.neighboursearch.LinearNNSearch",
295:       "weka.attributeSelection.GainRatioAttributeEval",
296:       "weka.attributeSelection.AttributeSelection",
297:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
298:       "weka.classifiers.meta.CostSensitiveClassifier",
299:       "weka.classifiers.CostMatrix",
300:       "weka.estimators.Estimator",
301:       "weka.estimators.DiscreteEstimator",
302:       "weka.core.UnassignedClassException",
303:       "weka.core.Javadoc",
304:       "weka.core.ClassDiscovery",
305:       "weka.core.ClassCache",
306:       "weka.core.AllJavadoc",
307:       "weka.core.MinkowskiDistance",
308:       "weka.core.neighboursearch.CoverTree",
309:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
310:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
311:       "weka.core.TechnicalInformationHandlerJavadoc",
312:       "weka.core.Check",
313:       "weka.core.CheckOptionHandler",
314:       "weka.filters.Filter",
315:       "weka.filters.supervised.attribute.Discretize",
316:       "weka.classifiers.IteratedSingleClassifierEnhancer",
317:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
318:       "weka.classifiers.meta.LogitBoost",
319:       "weka.classifiers.trees.DecisionStump",
320:       "weka.core.WekaException",
321:       "weka.classifiers.meta.FilteredClassifier",
322:       "weka.filters.supervised.attribute.AttributeSelection",
323:       "weka.attributeSelection.CfsSubsetEval",
324:       "weka.attributeSelection.ASSearch",
325:       "weka.attributeSelection.GreedyStepwise",
326:       "weka.attributeSelection.BestFirst",
327:       "weka.classifiers.trees.J48",
328:       "weka.classifiers.functions.SMO",
329:       "weka.classifiers.functions.supportVector.Kernel",
330:       "weka.classifiers.functions.supportVector.CachedKernel",
331:       "weka.classifiers.functions.supportVector.PolyKernel",
332:       "weka.classifiers.bayes.net.BIFReader",
333:       "weka.core.ListOptions",
334:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
335:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
336:       "weka.classifiers.bayes.NaiveBayesMultinomial",
337:       "weka.core.converters.ArffLoader$ArffReader",
338:       "weka.core.neighboursearch.BallTree",
339:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
340:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
341:       "weka.core.neighboursearch.balltrees.BallSplitter",
342:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
343:       "weka.core.Stopwords",
344:       "weka.classifiers.bayes.NaiveBayes",
345:       "weka.core.CheckGOE",
346:       "weka.classifiers.meta.AdaBoostM1",
347:       "weka.classifiers.functions.MultilayerPerceptron",
348:       "weka.core.FastVector",
349:       "weka.filters.unsupervised.attribute.NominalToBinary",
350:       "weka.classifiers.functions.neural.SigmoidUnit",
351:       "weka.classifiers.functions.neural.LinearUnit",
352:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
353:       "weka.core.ManhattanDistance",
354:       "weka.classifiers.trees.LMT",
355:       "weka.core.UnsupportedAttributeTypeException",
356:       "weka.classifiers.functions.LinearRegression",
357:       "weka.estimators.NormalEstimator",
358:       "weka.classifiers.lazy.IBk",
359:       "weka.classifiers.meta.CVParameterSelection",
360:       "weka.classifiers.lazy.KStar",
361:       "weka.classifiers.rules.DecisionTable",
362:       "weka.classifiers.MultipleClassifiersCombiner",
363:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
364:       "weka.classifiers.meta.MultiScheme",
365:       "weka.core.FindWithCapabilities",
366:       "weka.core.SingleIndex",
367:       "weka.classifiers.functions.Logistic",
368:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
369:       "weka.classifiers.meta.Vote",
370:       "weka.filters.AllFilter",
371:       "weka.classifiers.rules.PART",
372:       "weka.classifiers.rules.part.MakeDecList",
373:       "weka.classifiers.meta.MultiClassClassifier",
374:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
375:       "weka.classifiers.rules.OneR",
376:       "weka.core.GlobalInfoJavadoc",
377:       "weka.core.stemmers.IteratedLovinsStemmer",
378:       "weka.attributeSelection.WrapperSubsetEval",
379:       "weka.classifiers.meta.AdditiveRegression",
380:       "weka.classifiers.functions.SGD",
381:       "weka.core.SelectedTag",
382:       "weka.classifiers.trees.m5.M5Base",
383:       "weka.classifiers.rules.M5Rules",
384:       "weka.estimators.PoissonEstimator",
385:       "weka.filters.SimpleFilter",
386:       "weka.filters.SimpleStreamFilter",
387:       "weka.filters.MultiFilter",
388:       "weka.classifiers.meta.AttributeSelectedClassifier",
389:       "weka.attributeSelection.OneRAttributeEval",
390:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
391:       "weka.core.converters.ConverterUtils$DataSource",
392:       "weka.core.converters.AbstractLoader",
393:       "weka.core.converters.AbstractFileLoader",
394:       "weka.core.converters.ArffLoader",
395:       "weka.classifiers.functions.supportVector.StringKernel",
396:       "weka.classifiers.lazy.LWL",
397:       "weka.classifiers.functions.SimpleLinearRegression",
398:       "weka.attributeSelection.CorrelationAttributeEval",
399:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
400:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
401:       "weka.classifiers.meta.Bagging",
402:       "weka.classifiers.trees.REPTree",
403:       "weka.classifiers.functions.SMOreg",
404:       "weka.classifiers.functions.supportVector.RegOptimizer",
405:       "weka.classifiers.functions.supportVector.RegSMO",
406:       "weka.classifiers.functions.supportVector.RegSMOImproved",
407:       "weka.classifiers.rules.JRip",
408:       "weka.attributeSelection.ReliefFAttributeEval",
409:       "weka.classifiers.functions.GaussianProcesses",
410:       "weka.classifiers.trees.j48.ClassifierTree",
411:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
412:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
413:       "weka.core.Queue",
414:       "weka.core.AttributeLocator",
415:       "weka.core.StringLocator",
416:       "weka.core.RelationalLocator",
417:       "weka.core.ContingencyTables",
418:       "weka.core.Queue$QueueNode",
419:       "weka.classifiers.rules.OneR$OneRRule",
420:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
421:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
422:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
423:       "weka.classifiers.meta.Stacking",
424:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
425:       "weka.core.matrix.Matrix",
426:       "weka.core.OptionHandlerJavadoc",
427:       "weka.classifiers.functions.supportVector.RBFKernel",
428:       "weka.classifiers.trees.RandomForest",
429:       "weka.classifiers.trees.RandomTree",
430:       "weka.classifiers.meta.RegressionByDiscretization",
431:       "weka.filters.unsupervised.attribute.Discretize",
432:       "weka.core.AttributeStats",
433:       "weka.classifiers.meta.ClassificationViaRegression",
434:       "weka.classifiers.trees.M5P",
435:       "weka.estimators.KernelEstimator",
436:       "weka.attributeSelection.InfoGainAttributeEval",
437:       "weka.classifiers.bayes.NaiveBayesUpdateable",
438:       "weka.classifiers.meta.RandomCommittee",
439:       "weka.core.SerializationHelper",
440:       "weka.classifiers.functions.supportVector.Puk",
441:       "weka.classifiers.functions.VotedPerceptron",
442:       "weka.classifiers.functions.SimpleLogistic",
443:       "weka.core.neighboursearch.kdtrees.KMeansInpiredMethod",
444:       "weka.classifiers.functions.neural.NeuralConnection",
445:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
446:       "weka.estimators.MahalanobisEstimator",
447:       "weka.experiment.Stats",
448:       "weka.core.neighboursearch.PerformanceStats"
449:     );
450:   }
451: }

[MASTER] 00:00:56.867 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setPeriodicPruning((-35));
naiveBayesMultinomialText0.m_stopwordsFile = null;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.setPeriodicPruning((-3617));
naiveBayesMultinomialText0.getTokenizer();
naiveBayesMultinomialText0.getStemmer();
naiveBayesMultinomialText0.minWordFrequencyTipText();
naiveBayesMultinomialText0.listOptions();
naiveBayesMultinomialText0.getStopwords();
assertEquals((-3617), naiveBayesMultinomialText0.getPeriodicPruning());


[MASTER] 00:00:59.716 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 00:00:59.960 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 00:01:00.083 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
[MASTER] 00:01:00.892 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/rmosa/tests/s1002/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 00:02:29.542 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 8%
* Compiling and checking tests
[MASTER] 00:02:41.773 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 00:02:42.241 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 00:02:42.242 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 00:02:44.044 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1002/107_weka/evosuite-tests
* Done!

* Computation finished
