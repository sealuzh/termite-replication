* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10601
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10603
* Connecting to master process on port 10602
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 22:12:06.833 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:12:06.900 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:12:06.905 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:12:07.018 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Using seed 1001
* Starting evolution
[MASTER] 22:12:12.560 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:12:12.577 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:12:12.579 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:12:14.500 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 22:12:15.268 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 22:12:15.269 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1001
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 22:12:21.392 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;: Line 599
[MASTER] 22:12:21.394 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;: root-Branch
[MASTER] 22:12:21.397 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 214: weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;:599 - ReplaceConstant - Whether check for error rate >= 1/2 is included in stopping criterion. -> 
[MASTER] 22:12:21.399 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 22:12:21.400 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;
[MASTER] 22:12:21.414 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;
[MASTER] 22:12:21.415 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.rules.JRip:checkErrorRateTipText()Ljava/lang/String;
[MASTER] 22:12:21.571 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NominalAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
[MASTER] 22:12:25.410 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:12:25.414 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:12:25.415 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:12:26.195 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 22:12:27.007 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 22:12:27.008 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 22:12:29.005 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 22:12:29.069 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 22:12:29.070 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 22:12:29.070 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 22:12:29.071 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 22:12:29.071 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 22:12:29.071 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 22:12:29.073 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 22:12:29.074 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 22:12:29.148 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 22:12:29.161 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1001
* Starting evolution
[MASTER] 22:12:59.320 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 22:13:10.382 [logback-2] ERROR ClientNodeImpl - Error when generating tests for: weka.experiment.ResultMatrix with seed 1001. Configuration id : RMOSA
java.lang.OutOfMemoryError: GC overhead limit exceeded
* Computation finished
[MASTER] 22:13:10.861 [main] ERROR SearchStatistics - No obtained value for output variable: Total_Goals
[MASTER] 22:13:12.864 [main] ERROR SearchStatistics - No obtained value for output variable: Total_Goals
[MASTER] 22:13:13.865 [main] ERROR SearchStatistics - No obtained value for output variable: Total_Goals
[MASTER] 22:13:14.865 [main] ERROR SearchStatistics - No obtained value for output variable: Total_Goals
[MASTER] 22:13:15.865 [main] ERROR SearchStatistics - No obtained value for output variable: Total_Goals
[MASTER] 22:13:16.871 [main] ERROR SearchStatistics - No obtained value for output variable: Total_Goals
[MASTER] 22:13:16.871 [main] ERROR SearchStatistics - Not going to write down statistics data, as some are missing
[MASTER] 22:13:16.972 [main] ERROR TestGeneration - failed to write statistics data
[MASTER] 22:13:17.279 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 22:14:23.292 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 22:14:49.556 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 226s and 262 generations, 99207 statements, best individual has fitness: 13360.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 33%
* Total number of goals: 705
* Number of covered goals: 231
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 25%
* Total number of goals: 416
* Number of covered goals: 102
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 50%
* Total number of goals: 993
* Number of covered goals: 493
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 93
* Number of covered goals: 31
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 25%
* Total number of goals: 416
* Number of covered goals: 102
* Generated 74 tests with total length 425
* Resulting test suite's coverage: 40% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 19%
* Compiling and checking tests
* Search finished after 281s and 118 generations, 69737 statements, best individual has fitness: 14880.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 59%
* Total number of goals: 1378
* Number of covered goals: 818
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 45%
* Total number of goals: 809
* Number of covered goals: 364
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 69
* Number of covered goals: 69
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 62%
* Total number of goals: 424
* Number of covered goals: 262
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 22%
* Total number of goals: 278
* Number of covered goals: 61
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 103
* Number of covered goals: 102
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 103
* Number of covered goals: 101
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 43%
* Total number of goals: 809
* Number of covered goals: 351
* Generated 169 tests with total length 1793
* Resulting test suite's coverage: 53% (average coverage for all fitness functions)
* Generating assertions
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1001/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 22:25:21.311 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 8%
* Compiling and checking tests
[MASTER] 22:25:31.814 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 22:25:31.922 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 22:25:31.933 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 22:25:32.329 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 22:25:32.330 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 22:25:32.332 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1001/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10602
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1001
* Starting evolution
* Search finished after 315s and 243 generations, 129156 statements, best individual has fitness: 2600.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 89%
* Total number of goals: 217
* Number of covered goals: 193
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 68%
* Total number of goals: 428
* Number of covered goals: 293
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 239
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 68%
* Total number of goals: 428
* Number of covered goals: 293
* Generated 92 tests with total length 251
* Resulting test suite's coverage: 76% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 76%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1001/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10604
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 22:38:16.541 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:38:16.550 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:38:16.555 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:38:16.560 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1001
* Starting evolution
[MASTER] 22:38:18.294 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 22:38:33.038 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 22:38:33.039 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Search finished after 192s and 128 generations, 78067 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 19 tests with total length 160
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1001/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10598
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 22:42:57.882 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:42:57.907 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:42:57.909 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:42:58.187 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 22:42:58.227 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 22:42:58.229 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1001
* Starting evolution
* Search finished after 179s and 369 generations, 135906 statements, best individual has fitness: 7912.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 45%
* Total number of goals: 370
* Number of covered goals: 166
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 81
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 42%
* Total number of goals: 713
* Number of covered goals: 298
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 72
* Number of covered goals: 32
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 81
* Generated 68 tests with total length 407
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 19%
* Compiling and checking tests
[MASTER] 22:47:29.086 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 22:47:29.833 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1001/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10601
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 22:49:25.005 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 22:49:25.039 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 22:49:25.045 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 22:49:25.140 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:49:25.153 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:49:25.184 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1001
* Starting evolution
[MASTER] 22:49:34.317 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z: Line 635
[MASTER] 22:49:34.317 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D: Line 704
[MASTER] 22:49:34.318 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;: Line 771
[MASTER] 22:49:34.321 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: Line 817
[MASTER] 22:49:34.322 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D: root-Branch
[MASTER] 22:49:34.326 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;: root-Branch
[MASTER] 22:49:34.326 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: root-Branch
[MASTER] 22:49:34.326 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z: root-Branch
[MASTER] 22:49:34.349 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 267: weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z:635 - InsertUnaryOp Negation
[MASTER] 22:49:34.349 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 283: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - ReplaceVariable m_minWordP -> m_norm
[MASTER] 22:49:34.349 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 284: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - ReplaceVariable m_minWordP -> m_t
[MASTER] 22:49:34.371 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 285: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - ReplaceVariable m_minWordP -> m_leplace
[MASTER] 22:49:34.371 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 286: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - ReplaceVariable m_minWordP -> m_lnorm
[MASTER] 22:49:34.371 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 287: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - InsertUnaryOp Negation
[MASTER] 22:49:34.372 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 312: weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;:771 - ReplaceConstant - The LNorm to use for document length normalization. -> 
[MASTER] 22:49:34.372 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 335: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z:817 - InsertUnaryOp Negation
[MASTER] 22:49:34.373 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z:False
[MASTER] 22:49:34.373 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:Positive
[MASTER] 22:49:34.406 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 22:49:34.406 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z:False
[MASTER] 22:49:34.407 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z
[MASTER] 22:49:34.407 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D
[MASTER] 22:49:34.407 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;
[MASTER] 22:49:34.407 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z
[MASTER] 22:49:34.409 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z
[MASTER] 22:49:34.409 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D
[MASTER] 22:49:34.410 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;
[MASTER] 22:49:34.410 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z
[MASTER] 22:49:34.410 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getLowercaseTokens()Z
[MASTER] 22:49:34.410 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getUseStopList()Z
[MASTER] 22:49:34.410 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getMinWordFrequency()D
[MASTER] 22:49:34.411 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:LNormTipText()Ljava/lang/String;
[MASTER] 22:49:34.450 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V: Line 789
[MASTER] 22:49:34.450 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V: Line 790
[MASTER] 22:49:34.451 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V: root-Branch
[MASTER] 22:49:34.455 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 318: weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V:789 - ReplaceVariable newLNorm -> m_norm
[MASTER] 22:49:34.456 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 319: weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V:789 - ReplaceVariable newLNorm -> m_minWordP
[MASTER] 22:49:34.456 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 321: weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V:789 - ReplaceVariable newLNorm -> m_leplace
[MASTER] 22:49:34.456 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 322: weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V:789 - ReplaceVariable newLNorm -> m_lnorm
[MASTER] 22:49:34.456 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 323: weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V:789 - InsertUnaryOp Negation of newLNorm
[MASTER] 22:49:34.462 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V
[MASTER] 22:49:34.468 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V
[MASTER] 22:49:34.469 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setLNorm(D)V
[MASTER] 22:49:48.546 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 22:49:48.546 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 22:50:18.104 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 276s and 315 generations, 200068 statements, best individual has fitness: 1584.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 90%
* Total number of goals: 338
* Number of covered goals: 303
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 82%
* Total number of goals: 194
* Number of covered goals: 159
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 476
* Number of covered goals: 439
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 112
* Number of covered goals: 61
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 80%
* Total number of goals: 194
* Number of covered goals: 156
* Generated 82 tests with total length 816
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 54%
* Compiling and checking tests
[MASTER] 22:57:33.841 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_23_1575241053800/weka/classifiers/bayes/NaiveBayesMultinomialText_23_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_23_1575241053800/weka/classifiers/bayes/NaiveBayesMultinomialText_23_tmp__ESTest_scaffolding.java]]
[MASTER] 22:57:33.841 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 22:57:33.841 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 22:57:33.845 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 22:57:33.845 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 22:57:33.846 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_23_1575241053800/weka/classifiers/bayes/NaiveBayesMultinomialText_23_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Sun Dec 01 22:57:33 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.ArrayList;
12: import java.util.Collection;
13: import java.util.LinkedHashMap;
14: import java.util.LinkedList;
15: import java.util.List;
16: import java.util.Locale;
17: import org.evosuite.runtime.EvoRunner;
18: import org.evosuite.runtime.EvoRunnerParameters;
19: import org.evosuite.runtime.Random;
20: import org.evosuite.runtime.util.SystemInUtil;
21: import org.junit.runner.RunWith;
22: import weka.classifiers.bayes.NaiveBayesMultinomialText;
23: import weka.core.Attribute;
24: import weka.core.BinarySparseInstance;
25: 
26: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
27: public class NaiveBayesMultinomialText_23_tmp__ESTest extends NaiveBayesMultinomialText_23_tmp__ESTest_scaffolding {
28: 
29:   /**
30:   //Test case number: 0
31:   /*Coverage entropy=0.4
32:   */
33:   @Test(timeout = 4000)
34:   public void test0()  throws Throwable  {
35:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
36:       int int0 = 78;
37:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(78);
38:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
39:       ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
40:       LinkedList<String> linkedList0 = new LinkedList<String>();
41:       linkedList0.offer("");
42:       List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) linkedList0);
43:       Attribute attribute0 = new Attribute("VI!", list0);
44:       binarySparseInstance0.toString(attribute0);
45:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
46:       SystemInUtil.addInputLine("");
47:       // Undeclared exception!
48:       try { 
49:         naiveBayesMultinomialText0.tokenizeInstance(binarySparseInstance0, true);
50:         fail("Expecting exception: RuntimeException");
51:       
52:       } catch(RuntimeException e) {
53:          //
54:          // DenseInstance doesn't have access to a dataset!
55:          //
56:          verifyException("weka.core.AbstractInstance", e);
57:       }
58:   }
59: }
RegularFileObject[/tmp/EvoSuite_23_1575241053800/weka/classifiers/bayes/NaiveBayesMultinomialText_23_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Sun Dec 01 22:57:33 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_23_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_23_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.CoverTree$DistanceNode",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.classifiers.bayes.NaiveBayes",
108:       "weka.core.neighboursearch.CoverTree$MyHeap",
109:       "weka.estimators.IncrementalEstimator",
110:       "weka.estimators.Estimator$Builder",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.core.EnvironmentHandler",
113:       "weka.core.RelationalLocator",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NormalizableDistance",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
125:       "weka.core.BinarySparseInstance",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.AttributeLocator",
128:       "weka.core.SerializedObject",
129:       "weka.clusterers.UpdateableClusterer",
130:       "weka.core.Summarizable",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "weka.core.AdditionalMeasureProducer",
133:       "org.pentaho.packageManagement.PackageManager$1",
134:       "weka.core.Drawable",
135:       "weka.core.matrix.Matrix",
136:       "weka.core.CapabilitiesHandler",
137:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
138:       "weka.classifiers.functions.supportVector.StringKernel",
139:       "weka.attributeSelection.ASEvaluation",
140:       "weka.core.AbstractInstance",
141:       "weka.core.SelectedTag",
142:       "org.pentaho.packageManagement.DefaultPackage",
143:       "weka.estimators.DiscreteEstimator",
144:       "weka.core.neighboursearch.balltrees.BallSplitter",
145:       "weka.classifiers.bayes.BayesNet",
146:       "weka.classifiers.misc.InputMappedClassifier",
147:       "weka.core.Version",
148:       "weka.filters.AllFilter",
149:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
150:       "weka.core.Tag",
151:       "weka.core.neighboursearch.CoverTree",
152:       "weka.classifiers.AbstractClassifier",
153:       "weka.filters.unsupervised.attribute.Center",
154:       "weka.core.OptionHandler",
155:       "weka.core.WekaException",
156:       "weka.filters.StreamableFilter",
157:       "weka.core.Range",
158:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
159:       "weka.core.PartitionGenerator",
160:       "weka.classifiers.Classifier",
161:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
162:       "weka.core.Capabilities$Capability",
163:       "weka.core.SparseInstance",
164:       "org.pentaho.packageManagement.PackageManager",
165:       "weka.estimators.PoissonEstimator",
166:       "weka.attributeSelection.AttributeTransformer",
167:       "weka.core.tokenizers.WordTokenizer",
168:       "weka.classifiers.misc.SerializedClassifier",
169:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
170:       "weka.attributeSelection.PrincipalComponents",
171:       "weka.core.stemmers.SnowballStemmer",
172:       "weka.core.stemmers.LovinsStemmer",
173:       "weka.classifiers.Evaluation",
174:       "weka.classifiers.functions.supportVector.Kernel",
175:       "weka.core.WekaPackageManager",
176:       "weka.filters.SupervisedFilter",
177:       "weka.core.TechnicalInformationHandler",
178:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
179:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
180:       "weka.core.Option",
181:       "weka.core.neighboursearch.PerformanceStats",
182:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
183:       "weka.estimators.KernelEstimator",
184:       "weka.filters.Sourcable",
185:       "weka.core.Attribute",
186:       "weka.core.Stopwords",
187:       "weka.core.tokenizers.AlphabeticTokenizer",
188:       "weka.core.FastVector",
189:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
190:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
191:       "weka.core.tokenizers.NGramTokenizer",
192:       "weka.core.UnassignedDatasetException",
193:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
194:       "weka.classifiers.trees.RandomTree",
195:       "weka.classifiers.SingleClassifierEnhancer",
196:       "weka.core.RevisionUtils",
197:       "weka.core.Instance",
198:       "weka.core.ProtectedProperties",
199:       "weka.estimators.Estimator",
200:       "weka.core.StringLocator",
201:       "weka.classifiers.bayes.net.ADNode",
202:       "weka.core.AttributeStats",
203:       "weka.core.WeightedInstancesHandler",
204:       "weka.core.neighboursearch.NearestNeighbourSearch",
205:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
206:       "weka.core.neighboursearch.covertrees.Stack",
207:       "weka.filters.unsupervised.attribute.Remove",
208:       "weka.core.Randomizable",
209:       "weka.core.EuclideanDistance",
210:       "weka.core.Instances",
211:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
212:       "weka.core.UnassignedClassException",
213:       "weka.classifiers.bayes.net.BIFReader",
214:       "weka.classifiers.bayes.net.ParentSet",
215:       "weka.classifiers.rules.ZeroR",
216:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
217:       "weka.filters.unsupervised.attribute.Standardize",
218:       "weka.core.TechnicalInformation",
219:       "weka.core.UnsupportedAttributeTypeException",
220:       "weka.classifiers.Sourcable",
221:       "weka.core.RevisionHandler",
222:       "weka.classifiers.evaluation.output.prediction.PlainText",
223:       "weka.core.neighboursearch.TreePerformanceStats",
224:       "weka.core.xml.XMLSerialization",
225:       "weka.classifiers.xml.XMLClassifier",
226:       "weka.filters.Filter",
227:       "weka.filters.supervised.attribute.Discretize"
228:     );
229:   } 
230: 
231:   private static void resetClasses() {
232:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_23_tmp__ESTest_scaffolding.class.getClassLoader()); 
233: 
234:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
235:       "weka.classifiers.AbstractClassifier",
236:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
237:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
238:       "weka.core.Capabilities$Capability",
239:       "weka.core.tokenizers.Tokenizer",
240:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
241:       "weka.core.tokenizers.WordTokenizer",
242:       "weka.core.stemmers.NullStemmer",
243:       "weka.core.Instances",
244:       "weka.core.Utils",
245:       "weka.filters.Filter",
246:       "weka.filters.supervised.attribute.Discretize",
247:       "weka.core.Range",
248:       "weka.core.AbstractInstance",
249:       "weka.core.SparseInstance",
250:       "weka.core.BinarySparseInstance",
251:       "weka.core.Capabilities",
252:       "org.pentaho.packageManagement.PackageManager",
253:       "org.pentaho.packageManagement.DefaultPackageManager",
254:       "weka.core.Version",
255:       "weka.core.Environment",
256:       "weka.core.WekaPackageManager",
257:       "weka.core.UnassignedDatasetException",
258:       "weka.classifiers.Evaluation",
259:       "weka.core.Option",
260:       "weka.core.tokenizers.AlphabeticTokenizer",
261:       "weka.core.SerializedObject",
262:       "weka.core.FindWithCapabilities",
263:       "weka.core.SingleIndex",
264:       "weka.core.ClassDiscovery",
265:       "weka.core.Attribute",
266:       "weka.core.ProtectedProperties",
267:       "weka.core.neighboursearch.NearestNeighbourSearch",
268:       "weka.core.neighboursearch.KDTree",
269:       "weka.core.NormalizableDistance",
270:       "weka.core.EuclideanDistance",
271:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
272:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
273:       "weka.classifiers.bayes.NaiveBayesMultinomial",
274:       "weka.classifiers.bayes.NaiveBayes",
275:       "weka.core.TechnicalInformation",
276:       "weka.core.TechnicalInformation$Type",
277:       "weka.core.TechnicalInformation$Field",
278:       "weka.classifiers.bayes.BayesNet",
279:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
280:       "weka.core.Tag",
281:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
282:       "weka.classifiers.bayes.net.search.local.K2",
283:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
284:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
285:       "weka.classifiers.RandomizableClassifier",
286:       "weka.classifiers.functions.SGDText",
287:       "weka.core.RevisionUtils",
288:       "weka.core.neighboursearch.BallTree",
289:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
290:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
291:       "weka.core.neighboursearch.balltrees.BallSplitter",
292:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
293:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
294:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
295:       "weka.core.stemmers.SnowballStemmer",
296:       "weka.core.neighboursearch.balltrees.BallNode",
297:       "weka.core.DenseInstance",
298:       "weka.core.stemmers.Stemming",
299:       "weka.classifiers.CostMatrix",
300:       "weka.core.TestInstances",
301:       "weka.core.Stopwords",
302:       "weka.core.neighboursearch.LinearNNSearch",
303:       "weka.core.stemmers.LovinsStemmer",
304:       "weka.core.stemmers.IteratedLovinsStemmer",
305:       "weka.classifiers.SingleClassifierEnhancer",
306:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
307:       "weka.classifiers.meta.CostSensitiveClassifier",
308:       "weka.classifiers.rules.ZeroR",
309:       "weka.classifiers.lazy.IBk",
310:       "weka.classifiers.functions.supportVector.Kernel",
311:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
312:       "weka.core.WekaEnumeration",
313:       "weka.core.Attribute$1",
314:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
315:       "weka.classifiers.rules.OneR",
316:       "weka.classifiers.meta.RegressionByDiscretization",
317:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
318:       "weka.filters.unsupervised.attribute.Discretize",
319:       "weka.classifiers.trees.J48",
320:       "weka.classifiers.trees.j48.ClassifierTree",
321:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
322:       "weka.estimators.Estimator",
323:       "weka.estimators.PoissonEstimator",
324:       "weka.classifiers.MultipleClassifiersCombiner",
325:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
326:       "weka.classifiers.meta.MultiScheme",
327:       "weka.core.WekaException",
328:       "weka.core.UnsupportedAttributeTypeException",
329:       "weka.attributeSelection.ASEvaluation",
330:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
331:       "weka.attributeSelection.PrincipalComponents",
332:       "weka.core.neighboursearch.CoverTree",
333:       "weka.classifiers.misc.InputMappedClassifier",
334:       "weka.filters.AllFilter",
335:       "weka.core.converters.ArffLoader$ArffReader",
336:       "weka.classifiers.functions.supportVector.StringKernel",
337:       "weka.classifiers.misc.SerializedClassifier",
338:       "weka.classifiers.functions.SMO",
339:       "weka.classifiers.functions.supportVector.CachedKernel",
340:       "weka.classifiers.functions.supportVector.PolyKernel",
341:       "weka.classifiers.meta.Vote",
342:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
343:       "weka.estimators.KernelEstimator",
344:       "weka.core.UnassignedClassException",
345:       "weka.classifiers.functions.SimpleLinearRegression",
346:       "weka.classifiers.rules.DecisionTable",
347:       "weka.attributeSelection.ASSearch",
348:       "weka.attributeSelection.BestFirst",
349:       "weka.classifiers.IteratedSingleClassifierEnhancer",
350:       "weka.classifiers.meta.AdditiveRegression",
351:       "weka.classifiers.trees.DecisionStump",
352:       "weka.classifiers.functions.LinearRegression",
353:       "weka.classifiers.trees.RandomForest",
354:       "weka.classifiers.trees.RandomTree",
355:       "weka.filters.SimpleFilter",
356:       "weka.filters.SimpleStreamFilter",
357:       "weka.filters.MultiFilter",
358:       "weka.estimators.NormalEstimator",
359:       "weka.attributeSelection.ReliefFAttributeEval",
360:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
361:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
362:       "weka.classifiers.meta.Bagging",
363:       "weka.classifiers.trees.REPTree",
364:       "weka.attributeSelection.WrapperSubsetEval",
365:       "weka.core.SelectedTag",
366:       "weka.classifiers.meta.FilteredClassifier",
367:       "weka.filters.supervised.attribute.AttributeSelection",
368:       "weka.attributeSelection.AttributeSelection",
369:       "weka.attributeSelection.CfsSubsetEval",
370:       "weka.attributeSelection.GreedyStepwise",
371:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
372:       "weka.estimators.DiscreteEstimator",
373:       "weka.attributeSelection.CorrelationAttributeEval",
374:       "weka.classifiers.lazy.LWL",
375:       "weka.classifiers.meta.MultiClassClassifier",
376:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
377:       "weka.classifiers.functions.Logistic",
378:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
379:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
380:       "weka.classifiers.meta.Stacking",
381:       "weka.classifiers.trees.LMT",
382:       "weka.classifiers.trees.m5.M5Base",
383:       "weka.classifiers.rules.M5Rules",
384:       "weka.classifiers.functions.SGD",
385:       "weka.core.SerializationHelper",
386:       "weka.classifiers.functions.SimpleLogistic",
387:       "weka.attributeSelection.OneRAttributeEval",
388:       "weka.classifiers.meta.ClassificationViaRegression",
389:       "weka.classifiers.trees.M5P",
390:       "weka.classifiers.bayes.net.BIFReader",
391:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
392:       "weka.classifiers.functions.MultilayerPerceptron",
393:       "weka.core.FastVector",
394:       "weka.filters.unsupervised.attribute.NominalToBinary",
395:       "weka.classifiers.functions.neural.SigmoidUnit",
396:       "weka.classifiers.functions.neural.LinearUnit",
397:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
398:       "weka.classifiers.meta.AdaBoostM1",
399:       "weka.classifiers.bayes.NaiveBayesUpdateable",
400:       "weka.attributeSelection.InfoGainAttributeEval",
401:       "weka.classifiers.lazy.KStar",
402:       "weka.core.Queue",
403:       "weka.core.AttributeLocator",
404:       "weka.core.StringLocator",
405:       "weka.core.RelationalLocator",
406:       "weka.core.Queue$QueueNode",
407:       "weka.classifiers.meta.CVParameterSelection",
408:       "weka.core.tokenizers.NGramTokenizer",
409:       "weka.attributeSelection.GainRatioAttributeEval",
410:       "weka.classifiers.functions.GaussianProcesses",
411:       "weka.core.AttributeStats",
412:       "weka.classifiers.functions.VotedPerceptron",
413:       "weka.classifiers.functions.supportVector.RBFKernel",
414:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
415:       "weka.classifiers.functions.SMOreg",
416:       "weka.classifiers.functions.supportVector.RegOptimizer",
417:       "weka.classifiers.functions.supportVector.RegSMO",
418:       "weka.classifiers.functions.supportVector.RegSMOImproved",
419:       "weka.classifiers.meta.AttributeSelectedClassifier",
420:       "weka.classifiers.rules.JRip",
421:       "weka.classifiers.meta.RandomCommittee",
422:       "weka.classifiers.functions.supportVector.Puk",
423:       "weka.classifiers.meta.LogitBoost",
424:       "weka.core.ManhattanDistance",
425:       "weka.core.matrix.Matrix",
426:       "weka.estimators.MahalanobisEstimator",
427:       "weka.classifiers.rules.PART",
428:       "weka.classifiers.rules.part.MakeDecList",
429:       "weka.core.Javadoc",
430:       "weka.core.TechnicalInformationHandlerJavadoc",
431:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
432:       "weka.core.ContingencyTables",
433:       "weka.core.Check",
434:       "weka.core.CheckGOE",
435:       "weka.core.ListOptions",
436:       "weka.estimators.UnivariateEqualFrequencyHistogramEstimator",
437:       "weka.core.neighboursearch.kdtrees.MidPointOfWidestDimension"
438:     );
439:   }
440: }

[MASTER] 22:57:33.846 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
int int0 = 78;
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(78);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
LinkedList<String> linkedList0 = new LinkedList<String>();
linkedList0.offer("");
List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) linkedList0);
Attribute attribute0 = new Attribute("VI!", list0);
binarySparseInstance0.toString(attribute0);
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
SystemInUtil.addInputLine("");
naiveBayesMultinomialText0.tokenizeInstance(binarySparseInstance0, true);

[MASTER] 22:57:35.027 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_53_1575241054998/weka/classifiers/bayes/NaiveBayesMultinomialText_53_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_53_1575241054998/weka/classifiers/bayes/NaiveBayesMultinomialText_53_tmp__ESTest_scaffolding.java]]
[MASTER] 22:57:35.028 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 22:57:35.028 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 22:57:35.028 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 22:57:35.028 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 22:57:35.029 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 22:57:35.029 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 22:57:35.029 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 22:57:35.029 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 22:57:35.030 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_53_1575241054998/weka/classifiers/bayes/NaiveBayesMultinomialText_53_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Sun Dec 01 22:57:35 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.System;
15: import org.evosuite.runtime.testdata.EvoSuiteFile;
16: import org.evosuite.runtime.testdata.FileSystemHandling;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.classifiers.bayes.net.BIFReader;
20: import weka.core.Instances;
21: import weka.filters.AllFilter;
22: import weka.filters.Filter;
23: 
24: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
25: public class NaiveBayesMultinomialText_53_tmp__ESTest extends NaiveBayesMultinomialText_53_tmp__ESTest_scaffolding {
26: 
27:   /**
28:   //Test case number: 0
29:   /*Coverage entropy=2.2584261358947213
30:   */
31:   @Test(timeout = 4000)
32:   public void test0()  throws Throwable  {
33:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
34:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
35:       naiveBayesMultinomialText0.debugTipText();
36:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
37:       Integer integer0 = new Integer(5);
38:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
39:       linkedHashMap0.put(integer0, linkedHashMap1);
40:       Integer integer1 = new Integer(5);
41:       Integer.max(5, 5);
42:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
43:       byte[] byteArray0 = new byte[1];
44:       byteArray0[0] = (byte)1;
45:       FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
46:       naiveBayesMultinomialText0.m_normalize = true;
47:       naiveBayesMultinomialText0.globalInfo();
48:       naiveBayesMultinomialText0.getNormalizeDocLength();
49:       System.setCurrentTimeMillis(5);
50:       naiveBayesMultinomialText0.LNormTipText();
51:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
52:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
53:       naiveBayesMultinomialText0.listOptions();
54:       BIFReader bIFReader0 = new BIFReader();
55:       Instances instances0 = bIFReader0.m_Instances;
56:       AllFilter allFilter0 = new AllFilter();
57:       try { 
58:         Filter.useFilter((Instances) null, allFilter0);
59:         fail("Expecting exception: NullPointerException");
60:       
61:       } catch(NullPointerException e) {
62:          //
63:          // no message in exception (getMessage() returned null)
64:          //
65:          verifyException("weka.filters.Filter", e);
66:       }
67:   }
68: }
RegularFileObject[/tmp/EvoSuite_53_1575241054998/weka/classifiers/bayes/NaiveBayesMultinomialText_53_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Sun Dec 01 22:57:35 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_53_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_53_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.bayes.net.search.local.K2",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.CoverTree$DistanceNode",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.classifiers.bayes.NaiveBayes",
108:       "weka.core.neighboursearch.CoverTree$MyHeap",
109:       "weka.estimators.IncrementalEstimator",
110:       "weka.estimators.Estimator$Builder",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.core.EnvironmentHandler",
113:       "weka.core.RelationalLocator",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NormalizableDistance",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
125:       "weka.core.BinarySparseInstance",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.AttributeLocator",
128:       "weka.core.SerializedObject",
129:       "weka.clusterers.UpdateableClusterer",
130:       "weka.core.Summarizable",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "weka.core.AdditionalMeasureProducer",
133:       "org.pentaho.packageManagement.PackageManager$1",
134:       "weka.core.Drawable",
135:       "weka.core.matrix.Matrix",
136:       "weka.core.CapabilitiesHandler",
137:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
138:       "weka.classifiers.functions.supportVector.StringKernel",
139:       "weka.attributeSelection.ASEvaluation",
140:       "weka.core.AbstractInstance",
141:       "weka.core.SelectedTag",
142:       "org.pentaho.packageManagement.DefaultPackage",
143:       "weka.estimators.DiscreteEstimator",
144:       "weka.core.neighboursearch.balltrees.BallSplitter",
145:       "weka.classifiers.bayes.BayesNet",
146:       "weka.classifiers.misc.InputMappedClassifier",
147:       "weka.core.Version",
148:       "weka.filters.AllFilter",
149:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
150:       "weka.core.Tag",
151:       "weka.core.neighboursearch.CoverTree",
152:       "weka.classifiers.AbstractClassifier",
153:       "weka.filters.unsupervised.attribute.Center",
154:       "weka.core.OptionHandler",
155:       "weka.core.WekaException",
156:       "weka.filters.StreamableFilter",
157:       "weka.core.Range",
158:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
159:       "weka.core.PartitionGenerator",
160:       "weka.classifiers.Classifier",
161:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
162:       "weka.core.Capabilities$Capability",
163:       "weka.core.SparseInstance",
164:       "org.pentaho.packageManagement.PackageManager",
165:       "weka.estimators.PoissonEstimator",
166:       "weka.attributeSelection.AttributeTransformer",
167:       "weka.core.tokenizers.WordTokenizer",
168:       "weka.classifiers.misc.SerializedClassifier",
169:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
170:       "weka.attributeSelection.PrincipalComponents",
171:       "weka.core.stemmers.SnowballStemmer",
172:       "weka.core.stemmers.LovinsStemmer",
173:       "weka.classifiers.Evaluation",
174:       "weka.classifiers.functions.supportVector.Kernel",
175:       "weka.core.WekaPackageManager",
176:       "weka.filters.SupervisedFilter",
177:       "weka.core.TechnicalInformationHandler",
178:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
179:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
180:       "weka.core.Option",
181:       "weka.core.neighboursearch.PerformanceStats",
182:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
183:       "weka.estimators.KernelEstimator",
184:       "weka.filters.Sourcable",
185:       "weka.core.Attribute",
186:       "weka.core.Stopwords",
187:       "weka.core.tokenizers.AlphabeticTokenizer",
188:       "weka.core.FastVector",
189:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
190:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
191:       "weka.core.tokenizers.NGramTokenizer",
192:       "weka.core.UnassignedDatasetException",
193:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
194:       "weka.classifiers.trees.RandomTree",
195:       "weka.classifiers.SingleClassifierEnhancer",
196:       "weka.core.RevisionUtils",
197:       "weka.core.Instance",
198:       "weka.core.ProtectedProperties",
199:       "weka.estimators.Estimator",
200:       "weka.core.StringLocator",
201:       "weka.classifiers.bayes.net.ADNode",
202:       "weka.core.AttributeStats",
203:       "weka.core.WeightedInstancesHandler",
204:       "weka.core.neighboursearch.NearestNeighbourSearch",
205:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
206:       "weka.core.neighboursearch.covertrees.Stack",
207:       "weka.filters.unsupervised.attribute.Remove",
208:       "weka.core.Randomizable",
209:       "weka.core.EuclideanDistance",
210:       "weka.core.Instances",
211:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
212:       "weka.core.UnassignedClassException",
213:       "weka.classifiers.bayes.net.BIFReader",
214:       "weka.classifiers.bayes.net.ParentSet",
215:       "weka.classifiers.rules.ZeroR",
216:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
217:       "weka.filters.unsupervised.attribute.Standardize",
218:       "weka.core.TechnicalInformation",
219:       "weka.core.UnsupportedAttributeTypeException",
220:       "weka.classifiers.Sourcable",
221:       "weka.core.RevisionHandler",
222:       "weka.classifiers.evaluation.output.prediction.PlainText",
223:       "weka.core.neighboursearch.TreePerformanceStats",
224:       "weka.core.xml.XMLSerialization",
225:       "weka.classifiers.xml.XMLClassifier",
226:       "weka.filters.Filter",
227:       "weka.filters.supervised.attribute.Discretize"
228:     );
229:   } 
230: 
231:   private static void resetClasses() {
232:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_53_tmp__ESTest_scaffolding.class.getClassLoader()); 
233: 
234:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
235:       "weka.classifiers.AbstractClassifier",
236:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
237:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
238:       "weka.core.Capabilities$Capability",
239:       "weka.core.tokenizers.Tokenizer",
240:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
241:       "weka.core.tokenizers.WordTokenizer",
242:       "weka.core.stemmers.NullStemmer",
243:       "weka.core.Instances",
244:       "weka.core.Utils",
245:       "weka.filters.Filter",
246:       "weka.filters.supervised.attribute.Discretize",
247:       "weka.core.Range",
248:       "weka.core.AbstractInstance",
249:       "weka.core.SparseInstance",
250:       "weka.core.BinarySparseInstance",
251:       "weka.core.Capabilities",
252:       "org.pentaho.packageManagement.PackageManager",
253:       "org.pentaho.packageManagement.DefaultPackageManager",
254:       "weka.core.Version",
255:       "weka.core.Environment",
256:       "weka.core.WekaPackageManager",
257:       "weka.core.UnassignedDatasetException",
258:       "weka.classifiers.Evaluation",
259:       "weka.core.Option",
260:       "weka.core.tokenizers.AlphabeticTokenizer",
261:       "weka.core.SerializedObject",
262:       "weka.core.FindWithCapabilities",
263:       "weka.core.SingleIndex",
264:       "weka.core.ClassDiscovery",
265:       "weka.core.Attribute",
266:       "weka.core.ProtectedProperties",
267:       "weka.core.neighboursearch.NearestNeighbourSearch",
268:       "weka.core.neighboursearch.KDTree",
269:       "weka.core.NormalizableDistance",
270:       "weka.core.EuclideanDistance",
271:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
272:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
273:       "weka.classifiers.bayes.NaiveBayesMultinomial",
274:       "weka.classifiers.bayes.NaiveBayes",
275:       "weka.core.TechnicalInformation",
276:       "weka.core.TechnicalInformation$Type",
277:       "weka.core.TechnicalInformation$Field",
278:       "weka.classifiers.bayes.BayesNet",
279:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
280:       "weka.core.Tag",
281:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
282:       "weka.classifiers.bayes.net.search.local.K2",
283:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
284:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
285:       "weka.classifiers.RandomizableClassifier",
286:       "weka.classifiers.functions.SGDText",
287:       "weka.core.RevisionUtils",
288:       "weka.core.neighboursearch.BallTree",
289:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
290:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
291:       "weka.core.neighboursearch.balltrees.BallSplitter",
292:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
293:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
294:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
295:       "weka.core.stemmers.SnowballStemmer",
296:       "weka.core.neighboursearch.balltrees.BallNode",
297:       "weka.core.DenseInstance",
298:       "weka.core.stemmers.Stemming",
299:       "weka.classifiers.CostMatrix",
300:       "weka.core.TestInstances",
301:       "weka.core.Stopwords",
302:       "weka.core.neighboursearch.LinearNNSearch",
303:       "weka.core.stemmers.LovinsStemmer",
304:       "weka.core.stemmers.IteratedLovinsStemmer",
305:       "weka.classifiers.SingleClassifierEnhancer",
306:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
307:       "weka.classifiers.meta.CostSensitiveClassifier",
308:       "weka.classifiers.rules.ZeroR",
309:       "weka.classifiers.lazy.IBk",
310:       "weka.classifiers.functions.supportVector.Kernel",
311:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
312:       "weka.core.WekaEnumeration",
313:       "weka.core.Attribute$1",
314:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
315:       "weka.classifiers.rules.OneR",
316:       "weka.classifiers.meta.RegressionByDiscretization",
317:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
318:       "weka.filters.unsupervised.attribute.Discretize",
319:       "weka.classifiers.trees.J48",
320:       "weka.classifiers.trees.j48.ClassifierTree",
321:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
322:       "weka.estimators.Estimator",
323:       "weka.estimators.PoissonEstimator",
324:       "weka.classifiers.MultipleClassifiersCombiner",
325:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
326:       "weka.classifiers.meta.MultiScheme",
327:       "weka.core.WekaException",
328:       "weka.core.UnsupportedAttributeTypeException",
329:       "weka.attributeSelection.ASEvaluation",
330:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
331:       "weka.attributeSelection.PrincipalComponents",
332:       "weka.core.neighboursearch.CoverTree",
333:       "weka.classifiers.misc.InputMappedClassifier",
334:       "weka.filters.AllFilter",
335:       "weka.core.converters.ArffLoader$ArffReader",
336:       "weka.classifiers.functions.supportVector.StringKernel",
337:       "weka.classifiers.misc.SerializedClassifier",
338:       "weka.classifiers.functions.SMO",
339:       "weka.classifiers.functions.supportVector.CachedKernel",
340:       "weka.classifiers.functions.supportVector.PolyKernel",
341:       "weka.classifiers.meta.Vote",
342:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
343:       "weka.estimators.KernelEstimator",
344:       "weka.core.UnassignedClassException",
345:       "weka.classifiers.functions.SimpleLinearRegression",
346:       "weka.classifiers.rules.DecisionTable",
347:       "weka.attributeSelection.ASSearch",
348:       "weka.attributeSelection.BestFirst",
349:       "weka.classifiers.IteratedSingleClassifierEnhancer",
350:       "weka.classifiers.meta.AdditiveRegression",
351:       "weka.classifiers.trees.DecisionStump",
352:       "weka.classifiers.functions.LinearRegression",
353:       "weka.classifiers.trees.RandomForest",
354:       "weka.classifiers.trees.RandomTree",
355:       "weka.filters.SimpleFilter",
356:       "weka.filters.SimpleStreamFilter",
357:       "weka.filters.MultiFilter",
358:       "weka.estimators.NormalEstimator",
359:       "weka.attributeSelection.ReliefFAttributeEval",
360:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
361:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
362:       "weka.classifiers.meta.Bagging",
363:       "weka.classifiers.trees.REPTree",
364:       "weka.attributeSelection.WrapperSubsetEval",
365:       "weka.core.SelectedTag",
366:       "weka.classifiers.meta.FilteredClassifier",
367:       "weka.filters.supervised.attribute.AttributeSelection",
368:       "weka.attributeSelection.AttributeSelection",
369:       "weka.attributeSelection.CfsSubsetEval",
370:       "weka.attributeSelection.GreedyStepwise",
371:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
372:       "weka.estimators.DiscreteEstimator",
373:       "weka.attributeSelection.CorrelationAttributeEval",
374:       "weka.classifiers.lazy.LWL",
375:       "weka.classifiers.meta.MultiClassClassifier",
376:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
377:       "weka.classifiers.functions.Logistic",
378:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
379:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
380:       "weka.classifiers.meta.Stacking",
381:       "weka.classifiers.trees.LMT",
382:       "weka.classifiers.trees.m5.M5Base",
383:       "weka.classifiers.rules.M5Rules",
384:       "weka.classifiers.functions.SGD",
385:       "weka.core.SerializationHelper",
386:       "weka.classifiers.functions.SimpleLogistic",
387:       "weka.attributeSelection.OneRAttributeEval",
388:       "weka.classifiers.meta.ClassificationViaRegression",
389:       "weka.classifiers.trees.M5P",
390:       "weka.classifiers.bayes.net.BIFReader",
391:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
392:       "weka.classifiers.functions.MultilayerPerceptron",
393:       "weka.core.FastVector",
394:       "weka.filters.unsupervised.attribute.NominalToBinary",
395:       "weka.classifiers.functions.neural.SigmoidUnit",
396:       "weka.classifiers.functions.neural.LinearUnit",
397:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
398:       "weka.classifiers.meta.AdaBoostM1",
399:       "weka.classifiers.bayes.NaiveBayesUpdateable",
400:       "weka.attributeSelection.InfoGainAttributeEval",
401:       "weka.classifiers.lazy.KStar",
402:       "weka.core.Queue",
403:       "weka.core.AttributeLocator",
404:       "weka.core.StringLocator",
405:       "weka.core.RelationalLocator",
406:       "weka.core.Queue$QueueNode",
407:       "weka.classifiers.meta.CVParameterSelection",
408:       "weka.core.tokenizers.NGramTokenizer",
409:       "weka.attributeSelection.GainRatioAttributeEval",
410:       "weka.classifiers.functions.GaussianProcesses",
411:       "weka.core.AttributeStats",
412:       "weka.classifiers.functions.VotedPerceptron",
413:       "weka.classifiers.functions.supportVector.RBFKernel",
414:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
415:       "weka.classifiers.functions.SMOreg",
416:       "weka.classifiers.functions.supportVector.RegOptimizer",
417:       "weka.classifiers.functions.supportVector.RegSMO",
418:       "weka.classifiers.functions.supportVector.RegSMOImproved",
419:       "weka.classifiers.meta.AttributeSelectedClassifier",
420:       "weka.classifiers.rules.JRip",
421:       "weka.classifiers.meta.RandomCommittee",
422:       "weka.classifiers.functions.supportVector.Puk",
423:       "weka.classifiers.meta.LogitBoost",
424:       "weka.core.ManhattanDistance",
425:       "weka.core.matrix.Matrix",
426:       "weka.estimators.MahalanobisEstimator",
427:       "weka.classifiers.rules.PART",
428:       "weka.classifiers.rules.part.MakeDecList",
429:       "weka.core.Javadoc",
430:       "weka.core.TechnicalInformationHandlerJavadoc",
431:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
432:       "weka.core.ContingencyTables",
433:       "weka.core.Check",
434:       "weka.core.CheckGOE",
435:       "weka.core.ListOptions",
436:       "weka.estimators.UnivariateEqualFrequencyHistogramEstimator",
437:       "weka.core.neighboursearch.kdtrees.MidPointOfWidestDimension"
438:     );
439:   }
440: }

[MASTER] 22:57:35.031 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
naiveBayesMultinomialText0.debugTipText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer0 = new Integer(5);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.put(integer0, linkedHashMap1);
Integer integer1 = new Integer(5);
Integer.max(5, 5);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
byte[] byteArray0 = new byte[1];
byteArray0[0] = (byte)1;
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
naiveBayesMultinomialText0.m_normalize = true;
naiveBayesMultinomialText0.globalInfo();
naiveBayesMultinomialText0.getNormalizeDocLength();
System.setCurrentTimeMillis(5);
naiveBayesMultinomialText0.LNormTipText();
naiveBayesMultinomialText0.normalizeDocLengthTipText();
naiveBayesMultinomialText0.normalizeDocLengthTipText();
naiveBayesMultinomialText0.listOptions();
BIFReader bIFReader0 = new BIFReader();
Instances instances0 = bIFReader0.m_Instances;
AllFilter allFilter0 = new AllFilter();
Filter.useFilter((Instances) null, allFilter0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/rmosa/tests/s1001/107_weka/evosuite-tests
* Done!

* Computation finished
