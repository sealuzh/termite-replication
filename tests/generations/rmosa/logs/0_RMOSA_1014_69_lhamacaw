* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: macaw.businessLayer.Variable
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/69_lhamacaw/evosuite-files/evosuite.properties
* Connecting to master process on port 7483
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 15:37:52.535 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 15:37:52.569 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 15:37:52.573 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 15:37:52.706 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 15:37:52.708 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 15:37:52.735 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 15:37:52.744 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 15:37:52.755 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 15:37:52.756 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 15:37:52.757 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 15:37:52.758 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 15:37:52.762 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 15:37:52.770 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 15:37:52.893 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 15:37:52.940 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class macaw.businessLayer.Variable
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1014
* Starting evolution
[MASTER] 15:37:59.443 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 15:38:01.897 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was macaw.businessLayer.Variable.getAlternativeVariable()Lmacaw/businessLayer/Variable;: Line 529
[MASTER] 15:38:01.899 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was macaw.businessLayer.Variable.getAlternativeVariable()Lmacaw/businessLayer/Variable;: root-Branch
[MASTER] 15:38:01.901 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: macaw.businessLayer.Variable.getAlternativeVariable()Lmacaw/businessLayer/Variable;:Null
[MASTER] 15:38:01.901 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] macaw.businessLayer.Variable.getAlternativeVariable()Lmacaw/businessLayer/Variable;
[MASTER] 15:38:01.901 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] macaw.businessLayer.Variable.clone()Ljava/lang/Object;
[MASTER] 15:38:01.901 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] macaw.businessLayer.Variable.getAlternativeVariable()Lmacaw/businessLayer/Variable;
[MASTER] 15:38:01.925 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch macaw.businessLayer.Variable.getAlternativeVariable()Lmacaw/businessLayer/Variable;: root-Branch in context: macaw.businessLayer.Variable:getAlternativeVariable()Lmacaw/businessLayer/Variable;
[MASTER] 15:38:12.975 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 231: macaw.businessLayer.Variable.getFilePath()Ljava/lang/String;:457 - ReplaceVariable filePath -> notes
[MASTER] 15:38:41.548 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: macaw.businessLayer.Variable.getAlias()Ljava/lang/String;:NonEmptyString
[MASTER] 15:40:12.285 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 229s and 388 generations, 229182 statements, best individual has fitness: 416.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 97%
* Total number of goals: 412
* Number of covered goals: 400
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 98%
* Total number of goals: 153
* Number of covered goals: 150
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 98%
* Total number of goals: 533
* Number of covered goals: 524
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 73%
* Total number of goals: 116
* Number of covered goals: 85
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 67
* Number of covered goals: 67
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 67
* Number of covered goals: 67
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 98%
* Total number of goals: 153
* Number of covered goals: 150
* Generated 149 tests with total length 1605
* Resulting test suite's coverage: 97% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 74%
* Compiling and checking tests
[MASTER] 15:46:10.680 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 15:46:10.682 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setAlternativeVariable(rawVariable0);
rawVariable0.setNotes("n");
User user0 = new User("n", "n");
Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
SupportingDocument supportingDocument0 = new SupportingDocument();
supportingDocument0.clone();
rawVariable0.containsSupportingDocument(supportingDocument0);
RawVariable rawVariable1 = new RawVariable();
rawVariable0.cloneAttributes(rawVariable1);

[MASTER] 15:46:15.720 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 15:46:15.722 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setAlternativeVariable(rawVariable0);
User user0 = new User(".U~<YKv", "b{z_+#q5x");
DerivedVariable derivedVariable0 = new DerivedVariable();
ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
derivedVariable0.setSourceVariables(arrayList0);
derivedVariable0.setCleaningStatus("");
User user1 = new User("MC>6zq", "b{z_+#q5x");
derivedVariable0.setName("b{z_+#q5x");
user1.setPostCode((String) null);
User user2 = new User("$/%?P7+)Y[fN,39", "UNABLE_TO_UPDATE_CLEANING_STATE");
user1.setPostCode("9f.r2XB%[?\"O>");
DerivedVariable derivedVariable1 = new DerivedVariable();
Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
rawVariable0.setCleaningDescription("UNABLE_TO_UPDATE_CLEANING_STATE");
RawVariable rawVariable1 = new RawVariable();
rawVariable1.getCleaningStatus();
Variable.detectChangesInAlternativeVariable(user1, rawVariable0, derivedVariable1);
Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable0);
Variable.detectFieldChanges(user1, rawVariable1, derivedVariable0);
Variable.validateFields(derivedVariable1);
rawVariable0.clone();
rawVariable1.getCategory();

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'Variable_ESTest' to /home/ubuntu/termite/rmosa/tests/s1014/69_lhamacaw/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: macaw.businessLayer.SupportingDocument
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/69_lhamacaw/evosuite-files/evosuite.properties
* Connecting to master process on port 7488
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 16:16:58.112 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 16:16:58.113 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 16:16:58.151 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 16:16:58.152 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 16:16:58.168 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 16:16:58.183 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 16:16:58.184 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 16:16:58.225 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 16:16:58.227 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 16:16:58.524 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 16:16:58.525 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 16:16:58.526 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 16:16:58.600 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 16:16:58.657 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 16:16:58.658 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class macaw.businessLayer.SupportingDocument
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1014
* Starting evolution
* Search finished after 503s and 1101 generations, 2900302 statements, best individual has fitness: 88.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 104
* Number of covered goals: 104
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 38
* Number of covered goals: 38
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 129
* Number of covered goals: 125
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 79%
* Total number of goals: 34
* Number of covered goals: 27
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 38
* Number of covered goals: 38
* Generated 39 tests with total length 210
* Resulting test suite's coverage: 97% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 45%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing JUnit test case 'SupportingDocument_ESTest' to /home/ubuntu/termite/rmosa/tests/s1014/69_lhamacaw/evosuite-tests
* Done!

* Computation finished
