* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 8336
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 04:20:39.917 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:20:39.968 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:20:39.969 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 04:20:43.012 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 04:20:44.068 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 04:20:44.069 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1024
* Starting evolution
[MASTER] 04:22:13.532 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 04:24:45.165 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 284s and 262 generations, 172364 statements, best individual has fitness: 12296.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 37%
* Total number of goals: 705
* Number of covered goals: 258
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 28%
* Total number of goals: 416
* Number of covered goals: 116
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 58%
* Total number of goals: 993
* Number of covered goals: 573
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 30%
* Total number of goals: 93
* Number of covered goals: 28
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 28%
* Total number of goals: 416
* Number of covered goals: 116
* Generated 80 tests with total length 758
* Resulting test suite's coverage: 45% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 25%
* Compiling and checking tests
[MASTER] 04:26:55.597 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 04:26:55.766 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 04:26:55.900 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 04:26:55.901 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1024/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 8338
* Connecting to master process on port 8339
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 04:45:39.192 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 04:45:39.193 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 04:45:39.208 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 04:45:39.307 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:45:39.323 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:45:39.324 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 04:45:39.532 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:45:39.538 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:45:39.539 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 04:45:39.604 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1024
* Starting evolution
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1024
* Starting evolution
[MASTER] 04:45:46.899 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 04:45:46.899 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 04:45:50.335 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V: Line 525
[MASTER] 04:45:50.336 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: Line 1084
[MASTER] 04:45:50.336 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: Line 1085
[MASTER] 04:45:50.344 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V: I3 Branch 47 IFNULL L524 - false
[MASTER] 04:45:50.344 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: I4 Branch 70 IFNONNULL L1084 - false
[MASTER] 04:45:50.367 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 240: weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V:525 - ReplaceVariable value -> m_stemmer
[MASTER] 04:45:50.368 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 435: weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;:1084 - ReplaceComparisonOperator != null -> = null
[MASTER] 04:45:50.368 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 436: weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;:1085 - ReplaceConstant - NaiveBayesMultinomialText: No model built yet.
 -> 
[MASTER] 04:45:50.370 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getStemmer()Lweka/core/stemmers/Stemmer;:NonNull
[MASTER] 04:45:50.372 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getTokenizer()Lweka/core/tokenizers/Tokenizer;:NonNull
[MASTER] 04:45:50.372 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:Zero
[MASTER] 04:45:50.372 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;:NonEmptyString
[MASTER] 04:45:50.372 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V
[MASTER] 04:45:50.373 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getStemmer()Lweka/core/stemmers/Stemmer;
[MASTER] 04:45:50.373 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getTokenizer()Lweka/core/tokenizers/Tokenizer;
[MASTER] 04:45:50.373 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D
[MASTER] 04:45:50.374 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;
[MASTER] 04:45:50.374 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V
[MASTER] 04:45:50.375 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getStemmer()Lweka/core/stemmers/Stemmer;
[MASTER] 04:45:50.375 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getTokenizer()Lweka/core/tokenizers/Tokenizer;
[MASTER] 04:45:50.375 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D
[MASTER] 04:45:50.376 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;
[MASTER] 04:45:50.376 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: I4 Branch 70 IFNONNULL L1084 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:toString()Ljava/lang/String;
[MASTER] 04:45:50.376 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getTokenizer()Lweka/core/tokenizers/Tokenizer;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getTokenizer()Lweka/core/tokenizers/Tokenizer;
[MASTER] 04:45:50.376 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V: I3 Branch 47 IFNULL L524 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStemmer(Lweka/core/stemmers/Stemmer;)V
[MASTER] 04:45:50.376 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getMinWordFrequency()D
[MASTER] 04:45:50.376 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getStemmer()Lweka/core/stemmers/Stemmer;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getStemmer()Lweka/core/stemmers/Stemmer;
[MASTER] 04:46:42.243 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 309s and 315 generations, 176984 statements, best individual has fitness: 1704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 338
* Number of covered goals: 296
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 81%
* Total number of goals: 194
* Number of covered goals: 157
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 89%
* Total number of goals: 476
* Number of covered goals: 424
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 112
* Number of covered goals: 61
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 49
* Number of covered goals: 48
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 49
* Number of covered goals: 48
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 79%
* Total number of goals: 194
* Number of covered goals: 153
* Generated 79 tests with total length 798
* Resulting test suite's coverage: 85% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 498s and 49 generations, 44021 statements, best individual has fitness: 2352.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 647
* Number of covered goals: 632
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 94%
* Total number of goals: 441
* Number of covered goals: 414
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 678
* Number of covered goals: 613
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 45%
* Total number of goals: 244
* Number of covered goals: 109
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 124
* Number of covered goals: 123
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 124
* Number of covered goals: 123
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 89%
* Total number of goals: 441
* Number of covered goals: 393
* Generated 185 tests with total length 3683
* Resulting test suite's coverage: 89% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 51%
* Compiling and checking tests
[MASTER] 04:54:39.742 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_10_1575348879697/weka/classifiers/bayes/NaiveBayesMultinomialText_10_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_10_1575348879697/weka/classifiers/bayes/NaiveBayesMultinomialText_10_tmp__ESTest_scaffolding.java]]
[MASTER] 04:54:39.742 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:54:39.742 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:54:39.746 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 04:54:39.746 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 04:54:39.746 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 04:54:39.747 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_10_1575348879697/weka/classifiers/bayes/NaiveBayesMultinomialText_10_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 04:54:39 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.BinarySparseInstance;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_10_tmp__ESTest extends NaiveBayesMultinomialText_10_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=0.45454545454545453
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0);
29:       naiveBayesMultinomialText0.m_normalize = false;
30:       naiveBayesMultinomialText0.m_useStopList = false;
31:       naiveBayesMultinomialText0.tokenizeInstance(binarySparseInstance0, false);
32:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
33:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
34:       naiveBayesMultinomialText0.pruneDictionary();
35:       int[] intArray0 = new int[1];
36:       intArray0[0] = (-1718);
37:       BinarySparseInstance binarySparseInstance1 = new BinarySparseInstance(1.0, intArray0, (-1718));
38:       binarySparseInstance0.setWeight(0);
39:       try { 
40:         naiveBayesMultinomialText0.distributionForInstance(binarySparseInstance0);
41:         fail("Expecting exception: NullPointerException");
42:       
43:       } catch(NullPointerException e) {
44:          //
45:          // no message in exception (getMessage() returned null)
46:          //
47:          verifyException("weka.classifiers.bayes.NaiveBayesMultinomialText", e);
48:       }
49:   }
50: }
RegularFileObject[/tmp/EvoSuite_10_1575348879697/weka/classifiers/bayes/NaiveBayesMultinomialText_10_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 04:54:39 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_10_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_10_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.attributeSelection.SubsetEvaluator",
95:       "weka.classifiers.CostMatrix",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.classifiers.trees.J48",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.core.EnvironmentHandler",
108:       "weka.classifiers.trees.j48.C45ModelSelection",
109:       "weka.classifiers.functions.SGDText",
110:       "weka.core.RelationalLocator",
111:       "weka.core.Utils",
112:       "weka.core.tokenizers.Tokenizer",
113:       "weka.core.NoSupportForMissingValuesException",
114:       "weka.classifiers.UpdateableClassifier",
115:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
116:       "weka.core.TechnicalInformation$Type",
117:       "weka.core.MultiInstanceCapabilitiesHandler",
118:       "weka.core.Copyable",
119:       "weka.core.Capabilities",
120:       "weka.core.BinarySparseInstance",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
122:       "weka.core.AttributeLocator",
123:       "weka.core.SerializedObject",
124:       "weka.clusterers.UpdateableClusterer",
125:       "weka.core.Summarizable",
126:       "weka.classifiers.trees.j48.ModelSelection",
127:       "weka.core.AdditionalMeasureProducer",
128:       "weka.core.neighboursearch.balltrees.BallNode",
129:       "org.pentaho.packageManagement.PackageManager$1",
130:       "weka.core.Drawable",
131:       "weka.core.matrix.Matrix",
132:       "weka.core.CapabilitiesHandler",
133:       "weka.attributeSelection.ASEvaluation",
134:       "weka.core.AbstractInstance",
135:       "weka.core.scripting.JythonObject",
136:       "weka.core.SelectedTag",
137:       "org.pentaho.packageManagement.DefaultPackage",
138:       "weka.classifiers.misc.InputMappedClassifier",
139:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
140:       "weka.core.Version",
141:       "weka.filters.AllFilter",
142:       "weka.core.Tag",
143:       "weka.classifiers.trees.j48.BinC45ModelSelection",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.core.OptionHandler",
146:       "weka.core.WekaException",
147:       "weka.filters.StreamableFilter",
148:       "weka.core.PartitionGenerator",
149:       "weka.attributeSelection.WrapperSubsetEval",
150:       "weka.core.scripting.JythonSerializableObject",
151:       "weka.classifiers.Classifier",
152:       "weka.core.Capabilities$Capability",
153:       "weka.core.SparseInstance",
154:       "org.pentaho.packageManagement.PackageManager",
155:       "weka.classifiers.trees.j48.ClassifierSplitModel",
156:       "weka.core.tokenizers.WordTokenizer",
157:       "weka.classifiers.trees.j48.ClassifierTree",
158:       "weka.core.stemmers.SnowballStemmer",
159:       "weka.classifiers.trees.j48.PruneableClassifierTree",
160:       "weka.core.stemmers.LovinsStemmer",
161:       "weka.classifiers.Evaluation",
162:       "weka.classifiers.functions.supportVector.Kernel",
163:       "weka.core.WekaPackageManager",
164:       "weka.filters.SupervisedFilter",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
167:       "weka.classifiers.meta.CostSensitiveClassifier",
168:       "weka.core.Option",
169:       "weka.filters.Sourcable",
170:       "weka.core.Attribute",
171:       "weka.core.Stopwords",
172:       "weka.core.FastVector",
173:       "weka.core.UnassignedDatasetException",
174:       "weka.classifiers.RandomizableClassifier",
175:       "weka.classifiers.SingleClassifierEnhancer",
176:       "weka.core.RevisionUtils",
177:       "weka.core.Instance",
178:       "weka.core.ProtectedProperties",
179:       "weka.core.StringLocator",
180:       "weka.core.Matchable",
181:       "weka.core.AttributeStats",
182:       "weka.core.WeightedInstancesHandler",
183:       "weka.core.TechnicalInformation$Field",
184:       "weka.filters.unsupervised.attribute.Remove",
185:       "weka.core.Randomizable",
186:       "weka.classifiers.trees.j48.NoSplit",
187:       "weka.core.Instances",
188:       "weka.core.UnassignedClassException",
189:       "weka.classifiers.rules.ZeroR",
190:       "weka.core.stemmers.IteratedLovinsStemmer",
191:       "weka.core.TechnicalInformation",
192:       "weka.core.UnsupportedAttributeTypeException",
193:       "weka.classifiers.Sourcable",
194:       "weka.core.RevisionHandler",
195:       "weka.classifiers.evaluation.output.prediction.PlainText",
196:       "weka.core.xml.XMLSerialization",
197:       "weka.classifiers.xml.XMLClassifier",
198:       "weka.filters.Filter",
199:       "weka.filters.supervised.attribute.Discretize"
200:     );
201:   } 
202: 
203:   private static void resetClasses() {
204:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_10_tmp__ESTest_scaffolding.class.getClassLoader()); 
205: 
206:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
207:       "weka.classifiers.AbstractClassifier",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
210:       "weka.core.Capabilities$Capability",
211:       "weka.core.tokenizers.Tokenizer",
212:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
213:       "weka.core.tokenizers.WordTokenizer",
214:       "weka.core.stemmers.NullStemmer",
215:       "weka.classifiers.RandomizableClassifier",
216:       "weka.core.Tag",
217:       "weka.classifiers.functions.SGDText",
218:       "weka.core.SelectedTag",
219:       "weka.core.AbstractInstance",
220:       "weka.core.SparseInstance",
221:       "weka.core.BinarySparseInstance",
222:       "weka.core.UnassignedDatasetException",
223:       "weka.core.Utils",
224:       "weka.classifiers.misc.SerializedClassifier",
225:       "weka.classifiers.Evaluation",
226:       "weka.core.Option",
227:       "weka.core.neighboursearch.NearestNeighbourSearch",
228:       "weka.core.neighboursearch.KDTree",
229:       "weka.core.NormalizableDistance",
230:       "weka.core.EuclideanDistance",
231:       "weka.core.Range",
232:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
233:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
234:       "weka.classifiers.bayes.NaiveBayes",
235:       "weka.core.neighboursearch.LinearNNSearch",
236:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
237:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
238:       "weka.core.SerializedObject",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.TestInstances",
246:       "weka.core.Attribute",
247:       "weka.core.ProtectedProperties",
248:       "weka.core.Instances",
249:       "weka.core.DenseInstance",
250:       "weka.classifiers.SingleClassifierEnhancer",
251:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
252:       "weka.classifiers.meta.CostSensitiveClassifier",
253:       "weka.classifiers.rules.ZeroR",
254:       "weka.classifiers.CostMatrix",
255:       "weka.core.RevisionUtils",
256:       "weka.attributeSelection.ASEvaluation",
257:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
258:       "weka.attributeSelection.PrincipalComponents",
259:       "weka.core.tokenizers.AlphabeticTokenizer",
260:       "weka.filters.Filter",
261:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
262:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
263:       "weka.estimators.Estimator",
264:       "weka.estimators.DiscreteEstimator",
265:       "weka.core.UnassignedClassException",
266:       "weka.classifiers.rules.OneR",
267:       "weka.core.tokenizers.NGramTokenizer",
268:       "weka.core.neighboursearch.CoverTree",
269:       "weka.classifiers.bayes.BayesNet",
270:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
271:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
272:       "weka.classifiers.bayes.net.search.local.K2",
273:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
274:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
275:       "weka.core.TechnicalInformation",
276:       "weka.core.TechnicalInformation$Type",
277:       "weka.core.TechnicalInformation$Field",
278:       "weka.attributeSelection.CorrelationAttributeEval",
279:       "weka.core.neighboursearch.BallTree",
280:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
281:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
282:       "weka.core.neighboursearch.balltrees.BallSplitter",
283:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
284:       "weka.core.stemmers.SnowballStemmer",
285:       "weka.core.stemmers.Stemming",
286:       "weka.filters.supervised.attribute.Discretize",
287:       "weka.core.stemmers.LovinsStemmer",
288:       "weka.core.FindWithCapabilities",
289:       "weka.core.SingleIndex",
290:       "weka.core.WekaException",
291:       "weka.core.UnsupportedAttributeTypeException",
292:       "weka.core.neighboursearch.balltrees.BallNode",
293:       "weka.core.stemmers.IteratedLovinsStemmer",
294:       "weka.classifiers.trees.m5.M5Base",
295:       "weka.classifiers.rules.M5Rules",
296:       "weka.core.converters.ArffLoader$ArffReader",
297:       "weka.classifiers.functions.supportVector.Kernel",
298:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
299:       "weka.classifiers.misc.InputMappedClassifier",
300:       "weka.core.Stopwords",
301:       "weka.filters.AllFilter",
302:       "weka.classifiers.rules.JRip",
303:       "weka.classifiers.lazy.IBk",
304:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
305:       "weka.classifiers.bayes.NaiveBayesUpdateable",
306:       "weka.classifiers.MultipleClassifiersCombiner",
307:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
308:       "weka.classifiers.meta.Vote",
309:       "weka.core.WekaEnumeration",
310:       "weka.core.Attribute$1",
311:       "weka.classifiers.bayes.NaiveBayesMultinomial",
312:       "weka.classifiers.trees.REPTree",
313:       "weka.classifiers.bayes.net.BIFReader",
314:       "weka.classifiers.trees.RandomTree",
315:       "weka.classifiers.functions.VotedPerceptron",
316:       "weka.classifiers.functions.GaussianProcesses",
317:       "weka.classifiers.functions.supportVector.CachedKernel",
318:       "weka.classifiers.functions.supportVector.PolyKernel",
319:       "weka.estimators.PoissonEstimator",
320:       "weka.attributeSelection.GainRatioAttributeEval",
321:       "weka.classifiers.meta.FilteredClassifier",
322:       "weka.filters.supervised.attribute.AttributeSelection",
323:       "weka.attributeSelection.AttributeSelection",
324:       "weka.attributeSelection.CfsSubsetEval",
325:       "weka.attributeSelection.ASSearch",
326:       "weka.attributeSelection.GreedyStepwise",
327:       "weka.attributeSelection.BestFirst",
328:       "weka.classifiers.trees.J48",
329:       "weka.classifiers.trees.LMT",
330:       "weka.classifiers.meta.CVParameterSelection",
331:       "weka.core.FastVector",
332:       "weka.classifiers.meta.MultiScheme",
333:       "weka.classifiers.functions.SimpleLogistic",
334:       "weka.classifiers.functions.SMO",
335:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
336:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
337:       "weka.classifiers.meta.Stacking",
338:       "weka.classifiers.lazy.LWL",
339:       "weka.classifiers.trees.DecisionStump",
340:       "weka.estimators.KernelEstimator",
341:       "weka.classifiers.IteratedSingleClassifierEnhancer",
342:       "weka.classifiers.meta.AdditiveRegression",
343:       "weka.attributeSelection.InfoGainAttributeEval",
344:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
345:       "weka.filters.SimpleFilter",
346:       "weka.filters.SimpleStreamFilter",
347:       "weka.filters.MultiFilter",
348:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
349:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.meta.Bagging",
351:       "weka.classifiers.rules.PART",
352:       "weka.classifiers.rules.part.MakeDecList",
353:       "weka.classifiers.functions.Logistic",
354:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
355:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
356:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
357:       "weka.classifiers.meta.LogitBoost",
358:       "weka.classifiers.meta.MultiClassClassifier",
359:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
360:       "weka.classifiers.meta.RandomCommittee",
361:       "weka.classifiers.lazy.KStar",
362:       "weka.classifiers.functions.SGD",
363:       "weka.attributeSelection.ReliefFAttributeEval",
364:       "weka.classifiers.functions.supportVector.StringKernel",
365:       "weka.classifiers.meta.AttributeSelectedClassifier",
366:       "weka.classifiers.functions.LinearRegression",
367:       "weka.classifiers.functions.MultilayerPerceptron",
368:       "weka.filters.unsupervised.attribute.NominalToBinary",
369:       "weka.classifiers.functions.neural.SigmoidUnit",
370:       "weka.classifiers.functions.neural.LinearUnit",
371:       "weka.classifiers.meta.RegressionByDiscretization",
372:       "weka.filters.unsupervised.attribute.Discretize",
373:       "weka.classifiers.trees.j48.ClassifierTree",
374:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
375:       "weka.classifiers.functions.SimpleLinearRegression",
376:       "weka.classifiers.trees.M5P",
377:       "weka.core.matrix.Matrix",
378:       "weka.classifiers.trees.RandomForest",
379:       "weka.classifiers.meta.ClassificationViaRegression",
380:       "weka.classifiers.meta.AdaBoostM1",
381:       "weka.estimators.NormalEstimator",
382:       "weka.classifiers.functions.SMOreg",
383:       "weka.classifiers.functions.supportVector.RegOptimizer",
384:       "weka.classifiers.functions.supportVector.RegSMO",
385:       "weka.classifiers.functions.supportVector.RegSMOImproved",
386:       "weka.classifiers.functions.supportVector.Puk",
387:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
388:       "weka.core.Check",
389:       "weka.core.CheckGOE",
390:       "weka.classifiers.functions.supportVector.RBFKernel",
391:       "weka.attributeSelection.OneRAttributeEval",
392:       "weka.core.AttributeStats",
393:       "weka.experiment.Stats",
394:       "weka.core.Queue",
395:       "weka.core.AttributeLocator",
396:       "weka.core.StringLocator",
397:       "weka.core.RelationalLocator",
398:       "weka.core.Queue$QueueNode",
399:       "weka.attributeSelection.WrapperSubsetEval",
400:       "weka.classifiers.rules.DecisionTable",
401:       "weka.classifiers.meta.RandomSubSpace",
402:       "weka.core.ClassDiscovery",
403:       "weka.classifiers.functions.neural.NeuralConnection",
404:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
405:       "weka.core.ManhattanDistance",
406:       "weka.core.Javadoc",
407:       "weka.core.OptionHandlerJavadoc",
408:       "weka.core.converters.ConverterUtils$DataSource",
409:       "weka.core.converters.AbstractLoader",
410:       "weka.core.converters.AbstractFileLoader",
411:       "weka.core.converters.ArffLoader",
412:       "weka.estimators.MahalanobisEstimator"
413:     );
414:   }
415: }

[MASTER] 04:54:39.748 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0);
naiveBayesMultinomialText0.m_normalize = false;
naiveBayesMultinomialText0.m_useStopList = false;
naiveBayesMultinomialText0.tokenizeInstance(binarySparseInstance0, false);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap1 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.pruneDictionary();
int[] intArray0 = new int[1];
intArray0[0] = (-1718);
BinarySparseInstance binarySparseInstance1 = new BinarySparseInstance(1.0, intArray0, (-1718));
binarySparseInstance0.setWeight(0);
naiveBayesMultinomialText0.distributionForInstance(binarySparseInstance0);

[MASTER] 04:54:39.970 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_14_1575348879917/weka/classifiers/bayes/NaiveBayesMultinomialText_14_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_14_1575348879917/weka/classifiers/bayes/NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding.java]]
[MASTER] 04:54:39.971 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:54:39.971 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:54:39.971 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 04:54:39.971 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 04:54:39.972 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_14_1575348879917/weka/classifiers/bayes/NaiveBayesMultinomialText_14_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 04:54:39 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.net.URI;
12: import java.util.LinkedHashMap;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.mock.java.io.MockFile;
16: import org.evosuite.runtime.mock.java.net.MockURI;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.core.Instance;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_14_tmp__ESTest extends NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=1.1375916250043898
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       naiveBayesMultinomialText0.setLowercaseTokens(true);
32:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
33:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
34:       try { 
35:         naiveBayesMultinomialText0.distributionForInstance((Instance) null);
36:         fail("Expecting exception: NullPointerException");
37:       
38:       } catch(NullPointerException e) {
39:          //
40:          // no message in exception (getMessage() returned null)
41:          //
42:       }
43:   }
44: }
RegularFileObject[/tmp/EvoSuite_14_1575348879917/weka/classifiers/bayes/NaiveBayesMultinomialText_14_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 04:54:39 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.attributeSelection.SubsetEvaluator",
95:       "weka.classifiers.CostMatrix",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.classifiers.trees.J48",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.core.EnvironmentHandler",
108:       "weka.classifiers.trees.j48.C45ModelSelection",
109:       "weka.classifiers.functions.SGDText",
110:       "weka.core.RelationalLocator",
111:       "weka.core.Utils",
112:       "weka.core.tokenizers.Tokenizer",
113:       "weka.core.NoSupportForMissingValuesException",
114:       "weka.classifiers.UpdateableClassifier",
115:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
116:       "weka.core.TechnicalInformation$Type",
117:       "weka.core.MultiInstanceCapabilitiesHandler",
118:       "weka.core.Copyable",
119:       "weka.core.Capabilities",
120:       "weka.core.BinarySparseInstance",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
122:       "weka.core.AttributeLocator",
123:       "weka.core.SerializedObject",
124:       "weka.clusterers.UpdateableClusterer",
125:       "weka.core.Summarizable",
126:       "weka.classifiers.trees.j48.ModelSelection",
127:       "weka.core.AdditionalMeasureProducer",
128:       "weka.core.neighboursearch.balltrees.BallNode",
129:       "org.pentaho.packageManagement.PackageManager$1",
130:       "weka.core.Drawable",
131:       "weka.core.matrix.Matrix",
132:       "weka.core.CapabilitiesHandler",
133:       "weka.attributeSelection.ASEvaluation",
134:       "weka.core.AbstractInstance",
135:       "weka.core.scripting.JythonObject",
136:       "weka.core.SelectedTag",
137:       "org.pentaho.packageManagement.DefaultPackage",
138:       "weka.classifiers.misc.InputMappedClassifier",
139:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
140:       "weka.core.Version",
141:       "weka.filters.AllFilter",
142:       "weka.core.Tag",
143:       "weka.classifiers.trees.j48.BinC45ModelSelection",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.core.OptionHandler",
146:       "weka.core.WekaException",
147:       "weka.filters.StreamableFilter",
148:       "weka.core.PartitionGenerator",
149:       "weka.attributeSelection.WrapperSubsetEval",
150:       "weka.core.scripting.JythonSerializableObject",
151:       "weka.classifiers.Classifier",
152:       "weka.core.Capabilities$Capability",
153:       "weka.core.SparseInstance",
154:       "org.pentaho.packageManagement.PackageManager",
155:       "weka.classifiers.trees.j48.ClassifierSplitModel",
156:       "weka.core.tokenizers.WordTokenizer",
157:       "weka.classifiers.trees.j48.ClassifierTree",
158:       "weka.core.stemmers.SnowballStemmer",
159:       "weka.classifiers.trees.j48.PruneableClassifierTree",
160:       "weka.core.stemmers.LovinsStemmer",
161:       "weka.classifiers.Evaluation",
162:       "weka.classifiers.functions.supportVector.Kernel",
163:       "weka.core.WekaPackageManager",
164:       "weka.filters.SupervisedFilter",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
167:       "weka.classifiers.meta.CostSensitiveClassifier",
168:       "weka.core.Option",
169:       "weka.filters.Sourcable",
170:       "weka.core.Attribute",
171:       "weka.core.Stopwords",
172:       "weka.core.FastVector",
173:       "weka.core.UnassignedDatasetException",
174:       "weka.classifiers.RandomizableClassifier",
175:       "weka.classifiers.SingleClassifierEnhancer",
176:       "weka.core.RevisionUtils",
177:       "weka.core.Instance",
178:       "weka.core.ProtectedProperties",
179:       "weka.core.StringLocator",
180:       "weka.core.Matchable",
181:       "weka.core.AttributeStats",
182:       "weka.core.WeightedInstancesHandler",
183:       "weka.core.TechnicalInformation$Field",
184:       "weka.filters.unsupervised.attribute.Remove",
185:       "weka.core.Randomizable",
186:       "weka.classifiers.trees.j48.NoSplit",
187:       "weka.core.Instances",
188:       "weka.core.UnassignedClassException",
189:       "weka.classifiers.rules.ZeroR",
190:       "weka.core.stemmers.IteratedLovinsStemmer",
191:       "weka.core.TechnicalInformation",
192:       "weka.core.UnsupportedAttributeTypeException",
193:       "weka.classifiers.Sourcable",
194:       "weka.core.RevisionHandler",
195:       "weka.classifiers.evaluation.output.prediction.PlainText",
196:       "weka.core.xml.XMLSerialization",
197:       "weka.classifiers.xml.XMLClassifier",
198:       "weka.filters.Filter",
199:       "weka.filters.supervised.attribute.Discretize"
200:     );
201:   } 
202: 
203:   private static void resetClasses() {
204:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding.class.getClassLoader()); 
205: 
206:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
207:       "weka.classifiers.AbstractClassifier",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
210:       "weka.core.Capabilities$Capability",
211:       "weka.core.tokenizers.Tokenizer",
212:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
213:       "weka.core.tokenizers.WordTokenizer",
214:       "weka.core.stemmers.NullStemmer",
215:       "weka.classifiers.RandomizableClassifier",
216:       "weka.core.Tag",
217:       "weka.classifiers.functions.SGDText",
218:       "weka.core.SelectedTag",
219:       "weka.core.AbstractInstance",
220:       "weka.core.SparseInstance",
221:       "weka.core.BinarySparseInstance",
222:       "weka.core.UnassignedDatasetException",
223:       "weka.core.Utils",
224:       "weka.classifiers.misc.SerializedClassifier",
225:       "weka.classifiers.Evaluation",
226:       "weka.core.Option",
227:       "weka.core.neighboursearch.NearestNeighbourSearch",
228:       "weka.core.neighboursearch.KDTree",
229:       "weka.core.NormalizableDistance",
230:       "weka.core.EuclideanDistance",
231:       "weka.core.Range",
232:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
233:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
234:       "weka.classifiers.bayes.NaiveBayes",
235:       "weka.core.neighboursearch.LinearNNSearch",
236:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
237:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
238:       "weka.core.SerializedObject",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.TestInstances",
246:       "weka.core.Attribute",
247:       "weka.core.ProtectedProperties",
248:       "weka.core.Instances",
249:       "weka.core.DenseInstance",
250:       "weka.classifiers.SingleClassifierEnhancer",
251:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
252:       "weka.classifiers.meta.CostSensitiveClassifier",
253:       "weka.classifiers.rules.ZeroR",
254:       "weka.classifiers.CostMatrix",
255:       "weka.core.RevisionUtils",
256:       "weka.attributeSelection.ASEvaluation",
257:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
258:       "weka.attributeSelection.PrincipalComponents",
259:       "weka.core.tokenizers.AlphabeticTokenizer",
260:       "weka.filters.Filter",
261:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
262:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
263:       "weka.estimators.Estimator",
264:       "weka.estimators.DiscreteEstimator",
265:       "weka.core.UnassignedClassException",
266:       "weka.classifiers.rules.OneR",
267:       "weka.core.tokenizers.NGramTokenizer",
268:       "weka.core.neighboursearch.CoverTree",
269:       "weka.classifiers.bayes.BayesNet",
270:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
271:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
272:       "weka.classifiers.bayes.net.search.local.K2",
273:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
274:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
275:       "weka.core.TechnicalInformation",
276:       "weka.core.TechnicalInformation$Type",
277:       "weka.core.TechnicalInformation$Field",
278:       "weka.attributeSelection.CorrelationAttributeEval",
279:       "weka.core.neighboursearch.BallTree",
280:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
281:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
282:       "weka.core.neighboursearch.balltrees.BallSplitter",
283:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
284:       "weka.core.stemmers.SnowballStemmer",
285:       "weka.core.stemmers.Stemming",
286:       "weka.filters.supervised.attribute.Discretize",
287:       "weka.core.stemmers.LovinsStemmer",
288:       "weka.core.FindWithCapabilities",
289:       "weka.core.SingleIndex",
290:       "weka.core.WekaException",
291:       "weka.core.UnsupportedAttributeTypeException",
292:       "weka.core.neighboursearch.balltrees.BallNode",
293:       "weka.core.stemmers.IteratedLovinsStemmer",
294:       "weka.classifiers.trees.m5.M5Base",
295:       "weka.classifiers.rules.M5Rules",
296:       "weka.core.converters.ArffLoader$ArffReader",
297:       "weka.classifiers.functions.supportVector.Kernel",
298:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
299:       "weka.classifiers.misc.InputMappedClassifier",
300:       "weka.core.Stopwords",
301:       "weka.filters.AllFilter",
302:       "weka.classifiers.rules.JRip",
303:       "weka.classifiers.lazy.IBk",
304:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
305:       "weka.classifiers.bayes.NaiveBayesUpdateable",
306:       "weka.classifiers.MultipleClassifiersCombiner",
307:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
308:       "weka.classifiers.meta.Vote",
309:       "weka.core.WekaEnumeration",
310:       "weka.core.Attribute$1",
311:       "weka.classifiers.bayes.NaiveBayesMultinomial",
312:       "weka.classifiers.trees.REPTree",
313:       "weka.classifiers.bayes.net.BIFReader",
314:       "weka.classifiers.trees.RandomTree",
315:       "weka.classifiers.functions.VotedPerceptron",
316:       "weka.classifiers.functions.GaussianProcesses",
317:       "weka.classifiers.functions.supportVector.CachedKernel",
318:       "weka.classifiers.functions.supportVector.PolyKernel",
319:       "weka.estimators.PoissonEstimator",
320:       "weka.attributeSelection.GainRatioAttributeEval",
321:       "weka.classifiers.meta.FilteredClassifier",
322:       "weka.filters.supervised.attribute.AttributeSelection",
323:       "weka.attributeSelection.AttributeSelection",
324:       "weka.attributeSelection.CfsSubsetEval",
325:       "weka.attributeSelection.ASSearch",
326:       "weka.attributeSelection.GreedyStepwise",
327:       "weka.attributeSelection.BestFirst",
328:       "weka.classifiers.trees.J48",
329:       "weka.classifiers.trees.LMT",
330:       "weka.classifiers.meta.CVParameterSelection",
331:       "weka.core.FastVector",
332:       "weka.classifiers.meta.MultiScheme",
333:       "weka.classifiers.functions.SimpleLogistic",
334:       "weka.classifiers.functions.SMO",
335:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
336:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
337:       "weka.classifiers.meta.Stacking",
338:       "weka.classifiers.lazy.LWL",
339:       "weka.classifiers.trees.DecisionStump",
340:       "weka.estimators.KernelEstimator",
341:       "weka.classifiers.IteratedSingleClassifierEnhancer",
342:       "weka.classifiers.meta.AdditiveRegression",
343:       "weka.attributeSelection.InfoGainAttributeEval",
344:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
345:       "weka.filters.SimpleFilter",
346:       "weka.filters.SimpleStreamFilter",
347:       "weka.filters.MultiFilter",
348:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
349:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.meta.Bagging",
351:       "weka.classifiers.rules.PART",
352:       "weka.classifiers.rules.part.MakeDecList",
353:       "weka.classifiers.functions.Logistic",
354:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
355:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
356:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
357:       "weka.classifiers.meta.LogitBoost",
358:       "weka.classifiers.meta.MultiClassClassifier",
359:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
360:       "weka.classifiers.meta.RandomCommittee",
361:       "weka.classifiers.lazy.KStar",
362:       "weka.classifiers.functions.SGD",
363:       "weka.attributeSelection.ReliefFAttributeEval",
364:       "weka.classifiers.functions.supportVector.StringKernel",
365:       "weka.classifiers.meta.AttributeSelectedClassifier",
366:       "weka.classifiers.functions.LinearRegression",
367:       "weka.classifiers.functions.MultilayerPerceptron",
368:       "weka.filters.unsupervised.attribute.NominalToBinary",
369:       "weka.classifiers.functions.neural.SigmoidUnit",
370:       "weka.classifiers.functions.neural.LinearUnit",
371:       "weka.classifiers.meta.RegressionByDiscretization",
372:       "weka.filters.unsupervised.attribute.Discretize",
373:       "weka.classifiers.trees.j48.ClassifierTree",
374:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
375:       "weka.classifiers.functions.SimpleLinearRegression",
376:       "weka.classifiers.trees.M5P",
377:       "weka.core.matrix.Matrix",
378:       "weka.classifiers.trees.RandomForest",
379:       "weka.classifiers.meta.ClassificationViaRegression",
380:       "weka.classifiers.meta.AdaBoostM1",
381:       "weka.estimators.NormalEstimator",
382:       "weka.classifiers.functions.SMOreg",
383:       "weka.classifiers.functions.supportVector.RegOptimizer",
384:       "weka.classifiers.functions.supportVector.RegSMO",
385:       "weka.classifiers.functions.supportVector.RegSMOImproved",
386:       "weka.classifiers.functions.supportVector.Puk",
387:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
388:       "weka.core.Check",
389:       "weka.core.CheckGOE",
390:       "weka.classifiers.functions.supportVector.RBFKernel",
391:       "weka.attributeSelection.OneRAttributeEval",
392:       "weka.core.AttributeStats",
393:       "weka.experiment.Stats",
394:       "weka.core.Queue",
395:       "weka.core.AttributeLocator",
396:       "weka.core.StringLocator",
397:       "weka.core.RelationalLocator",
398:       "weka.core.Queue$QueueNode",
399:       "weka.attributeSelection.WrapperSubsetEval",
400:       "weka.classifiers.rules.DecisionTable",
401:       "weka.classifiers.meta.RandomSubSpace",
402:       "weka.core.ClassDiscovery",
403:       "weka.classifiers.functions.neural.NeuralConnection",
404:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
405:       "weka.core.ManhattanDistance",
406:       "weka.core.Javadoc",
407:       "weka.core.OptionHandlerJavadoc",
408:       "weka.core.converters.ConverterUtils$DataSource",
409:       "weka.core.converters.AbstractLoader",
410:       "weka.core.converters.AbstractFileLoader",
411:       "weka.core.converters.ArffLoader",
412:       "weka.estimators.MahalanobisEstimator"
413:     );
414:   }
415: }

[MASTER] 04:54:39.972 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setLowercaseTokens(true);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.distributionForInstance((Instance) null);

[MASTER] 04:54:40.211 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_18_1575348880116/weka/classifiers/bayes/NaiveBayesMultinomialText_18_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_18_1575348880116/weka/classifiers/bayes/NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding.java]]
[MASTER] 04:54:40.211 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:54:40.211 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:54:40.211 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 04:54:40.211 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 04:54:40.211 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 04:54:40.212 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_18_1575348880116/weka/classifiers/bayes/NaiveBayesMultinomialText_18_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 04:54:40 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.AbstractClassifier;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.core.Instances;
20: import weka.core.TestInstances;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
23: public class NaiveBayesMultinomialText_18_tmp__ESTest extends NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding {
24: 
25:   /**
26:   //Test case number: 0
27:   /*Coverage entropy=1.0931471805599453
28:   */
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
32:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
33:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = (NaiveBayesMultinomialText)AbstractClassifier.makeCopy(naiveBayesMultinomialText0);
34:       naiveBayesMultinomialText1.setUseStopList(true);
35:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
36:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
37:       TestInstances testInstances0 = new TestInstances();
38:       testInstances0.setNumDate(1037);
39:       testInstances0.generate();
40:   }
41: }
RegularFileObject[/tmp/EvoSuite_18_1575348880116/weka/classifiers/bayes/NaiveBayesMultinomialText_18_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 04:54:40 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.attributeSelection.SubsetEvaluator",
95:       "weka.classifiers.CostMatrix",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.classifiers.trees.J48",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.core.EnvironmentHandler",
108:       "weka.classifiers.trees.j48.C45ModelSelection",
109:       "weka.classifiers.functions.SGDText",
110:       "weka.core.RelationalLocator",
111:       "weka.core.Utils",
112:       "weka.core.tokenizers.Tokenizer",
113:       "weka.core.NoSupportForMissingValuesException",
114:       "weka.classifiers.UpdateableClassifier",
115:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
116:       "weka.core.TechnicalInformation$Type",
117:       "weka.core.MultiInstanceCapabilitiesHandler",
118:       "weka.core.Copyable",
119:       "weka.core.Capabilities",
120:       "weka.core.BinarySparseInstance",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
122:       "weka.core.AttributeLocator",
123:       "weka.core.SerializedObject",
124:       "weka.clusterers.UpdateableClusterer",
125:       "weka.core.Summarizable",
126:       "weka.classifiers.trees.j48.ModelSelection",
127:       "weka.core.AdditionalMeasureProducer",
128:       "weka.core.neighboursearch.balltrees.BallNode",
129:       "org.pentaho.packageManagement.PackageManager$1",
130:       "weka.core.Drawable",
131:       "weka.core.matrix.Matrix",
132:       "weka.core.CapabilitiesHandler",
133:       "weka.attributeSelection.ASEvaluation",
134:       "weka.core.AbstractInstance",
135:       "weka.core.scripting.JythonObject",
136:       "weka.core.SelectedTag",
137:       "org.pentaho.packageManagement.DefaultPackage",
138:       "weka.classifiers.misc.InputMappedClassifier",
139:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
140:       "weka.core.Version",
141:       "weka.filters.AllFilter",
142:       "weka.core.Tag",
143:       "weka.classifiers.trees.j48.BinC45ModelSelection",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.core.OptionHandler",
146:       "weka.core.WekaException",
147:       "weka.filters.StreamableFilter",
148:       "weka.core.PartitionGenerator",
149:       "weka.attributeSelection.WrapperSubsetEval",
150:       "weka.core.scripting.JythonSerializableObject",
151:       "weka.classifiers.Classifier",
152:       "weka.core.Capabilities$Capability",
153:       "weka.core.SparseInstance",
154:       "org.pentaho.packageManagement.PackageManager",
155:       "weka.classifiers.trees.j48.ClassifierSplitModel",
156:       "weka.core.tokenizers.WordTokenizer",
157:       "weka.classifiers.trees.j48.ClassifierTree",
158:       "weka.core.stemmers.SnowballStemmer",
159:       "weka.classifiers.trees.j48.PruneableClassifierTree",
160:       "weka.core.stemmers.LovinsStemmer",
161:       "weka.classifiers.Evaluation",
162:       "weka.classifiers.functions.supportVector.Kernel",
163:       "weka.core.WekaPackageManager",
164:       "weka.filters.SupervisedFilter",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
167:       "weka.classifiers.meta.CostSensitiveClassifier",
168:       "weka.core.Option",
169:       "weka.filters.Sourcable",
170:       "weka.core.Attribute",
171:       "weka.core.Stopwords",
172:       "weka.core.FastVector",
173:       "weka.core.UnassignedDatasetException",
174:       "weka.classifiers.RandomizableClassifier",
175:       "weka.classifiers.SingleClassifierEnhancer",
176:       "weka.core.RevisionUtils",
177:       "weka.core.Instance",
178:       "weka.core.ProtectedProperties",
179:       "weka.core.StringLocator",
180:       "weka.core.Matchable",
181:       "weka.core.AttributeStats",
182:       "weka.core.WeightedInstancesHandler",
183:       "weka.core.TechnicalInformation$Field",
184:       "weka.filters.unsupervised.attribute.Remove",
185:       "weka.core.Randomizable",
186:       "weka.classifiers.trees.j48.NoSplit",
187:       "weka.core.Instances",
188:       "weka.core.UnassignedClassException",
189:       "weka.classifiers.rules.ZeroR",
190:       "weka.core.stemmers.IteratedLovinsStemmer",
191:       "weka.core.TechnicalInformation",
192:       "weka.core.UnsupportedAttributeTypeException",
193:       "weka.classifiers.Sourcable",
194:       "weka.core.RevisionHandler",
195:       "weka.classifiers.evaluation.output.prediction.PlainText",
196:       "weka.core.xml.XMLSerialization",
197:       "weka.classifiers.xml.XMLClassifier",
198:       "weka.filters.Filter",
199:       "weka.filters.supervised.attribute.Discretize"
200:     );
201:   } 
202: 
203:   private static void resetClasses() {
204:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding.class.getClassLoader()); 
205: 
206:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
207:       "weka.classifiers.AbstractClassifier",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
210:       "weka.core.Capabilities$Capability",
211:       "weka.core.tokenizers.Tokenizer",
212:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
213:       "weka.core.tokenizers.WordTokenizer",
214:       "weka.core.stemmers.NullStemmer",
215:       "weka.classifiers.RandomizableClassifier",
216:       "weka.core.Tag",
217:       "weka.classifiers.functions.SGDText",
218:       "weka.core.SelectedTag",
219:       "weka.core.AbstractInstance",
220:       "weka.core.SparseInstance",
221:       "weka.core.BinarySparseInstance",
222:       "weka.core.UnassignedDatasetException",
223:       "weka.core.Utils",
224:       "weka.classifiers.misc.SerializedClassifier",
225:       "weka.classifiers.Evaluation",
226:       "weka.core.Option",
227:       "weka.core.neighboursearch.NearestNeighbourSearch",
228:       "weka.core.neighboursearch.KDTree",
229:       "weka.core.NormalizableDistance",
230:       "weka.core.EuclideanDistance",
231:       "weka.core.Range",
232:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
233:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
234:       "weka.classifiers.bayes.NaiveBayes",
235:       "weka.core.neighboursearch.LinearNNSearch",
236:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
237:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
238:       "weka.core.SerializedObject",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.TestInstances",
246:       "weka.core.Attribute",
247:       "weka.core.ProtectedProperties",
248:       "weka.core.Instances",
249:       "weka.core.DenseInstance",
250:       "weka.classifiers.SingleClassifierEnhancer",
251:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
252:       "weka.classifiers.meta.CostSensitiveClassifier",
253:       "weka.classifiers.rules.ZeroR",
254:       "weka.classifiers.CostMatrix",
255:       "weka.core.RevisionUtils",
256:       "weka.attributeSelection.ASEvaluation",
257:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
258:       "weka.attributeSelection.PrincipalComponents",
259:       "weka.core.tokenizers.AlphabeticTokenizer",
260:       "weka.filters.Filter",
261:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
262:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
263:       "weka.estimators.Estimator",
264:       "weka.estimators.DiscreteEstimator",
265:       "weka.core.UnassignedClassException",
266:       "weka.classifiers.rules.OneR",
267:       "weka.core.tokenizers.NGramTokenizer",
268:       "weka.core.neighboursearch.CoverTree",
269:       "weka.classifiers.bayes.BayesNet",
270:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
271:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
272:       "weka.classifiers.bayes.net.search.local.K2",
273:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
274:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
275:       "weka.core.TechnicalInformation",
276:       "weka.core.TechnicalInformation$Type",
277:       "weka.core.TechnicalInformation$Field",
278:       "weka.attributeSelection.CorrelationAttributeEval",
279:       "weka.core.neighboursearch.BallTree",
280:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
281:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
282:       "weka.core.neighboursearch.balltrees.BallSplitter",
283:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
284:       "weka.core.stemmers.SnowballStemmer",
285:       "weka.core.stemmers.Stemming",
286:       "weka.filters.supervised.attribute.Discretize",
287:       "weka.core.stemmers.LovinsStemmer",
288:       "weka.core.FindWithCapabilities",
289:       "weka.core.SingleIndex",
290:       "weka.core.WekaException",
291:       "weka.core.UnsupportedAttributeTypeException",
292:       "weka.core.neighboursearch.balltrees.BallNode",
293:       "weka.core.stemmers.IteratedLovinsStemmer",
294:       "weka.classifiers.trees.m5.M5Base",
295:       "weka.classifiers.rules.M5Rules",
296:       "weka.core.converters.ArffLoader$ArffReader",
297:       "weka.classifiers.functions.supportVector.Kernel",
298:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
299:       "weka.classifiers.misc.InputMappedClassifier",
300:       "weka.core.Stopwords",
301:       "weka.filters.AllFilter",
302:       "weka.classifiers.rules.JRip",
303:       "weka.classifiers.lazy.IBk",
304:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
305:       "weka.classifiers.bayes.NaiveBayesUpdateable",
306:       "weka.classifiers.MultipleClassifiersCombiner",
307:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
308:       "weka.classifiers.meta.Vote",
309:       "weka.core.WekaEnumeration",
310:       "weka.core.Attribute$1",
311:       "weka.classifiers.bayes.NaiveBayesMultinomial",
312:       "weka.classifiers.trees.REPTree",
313:       "weka.classifiers.bayes.net.BIFReader",
314:       "weka.classifiers.trees.RandomTree",
315:       "weka.classifiers.functions.VotedPerceptron",
316:       "weka.classifiers.functions.GaussianProcesses",
317:       "weka.classifiers.functions.supportVector.CachedKernel",
318:       "weka.classifiers.functions.supportVector.PolyKernel",
319:       "weka.estimators.PoissonEstimator",
320:       "weka.attributeSelection.GainRatioAttributeEval",
321:       "weka.classifiers.meta.FilteredClassifier",
322:       "weka.filters.supervised.attribute.AttributeSelection",
323:       "weka.attributeSelection.AttributeSelection",
324:       "weka.attributeSelection.CfsSubsetEval",
325:       "weka.attributeSelection.ASSearch",
326:       "weka.attributeSelection.GreedyStepwise",
327:       "weka.attributeSelection.BestFirst",
328:       "weka.classifiers.trees.J48",
329:       "weka.classifiers.trees.LMT",
330:       "weka.classifiers.meta.CVParameterSelection",
331:       "weka.core.FastVector",
332:       "weka.classifiers.meta.MultiScheme",
333:       "weka.classifiers.functions.SimpleLogistic",
334:       "weka.classifiers.functions.SMO",
335:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
336:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
337:       "weka.classifiers.meta.Stacking",
338:       "weka.classifiers.lazy.LWL",
339:       "weka.classifiers.trees.DecisionStump",
340:       "weka.estimators.KernelEstimator",
341:       "weka.classifiers.IteratedSingleClassifierEnhancer",
342:       "weka.classifiers.meta.AdditiveRegression",
343:       "weka.attributeSelection.InfoGainAttributeEval",
344:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
345:       "weka.filters.SimpleFilter",
346:       "weka.filters.SimpleStreamFilter",
347:       "weka.filters.MultiFilter",
348:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
349:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.meta.Bagging",
351:       "weka.classifiers.rules.PART",
352:       "weka.classifiers.rules.part.MakeDecList",
353:       "weka.classifiers.functions.Logistic",
354:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
355:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
356:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
357:       "weka.classifiers.meta.LogitBoost",
358:       "weka.classifiers.meta.MultiClassClassifier",
359:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
360:       "weka.classifiers.meta.RandomCommittee",
361:       "weka.classifiers.lazy.KStar",
362:       "weka.classifiers.functions.SGD",
363:       "weka.attributeSelection.ReliefFAttributeEval",
364:       "weka.classifiers.functions.supportVector.StringKernel",
365:       "weka.classifiers.meta.AttributeSelectedClassifier",
366:       "weka.classifiers.functions.LinearRegression",
367:       "weka.classifiers.functions.MultilayerPerceptron",
368:       "weka.filters.unsupervised.attribute.NominalToBinary",
369:       "weka.classifiers.functions.neural.SigmoidUnit",
370:       "weka.classifiers.functions.neural.LinearUnit",
371:       "weka.classifiers.meta.RegressionByDiscretization",
372:       "weka.filters.unsupervised.attribute.Discretize",
373:       "weka.classifiers.trees.j48.ClassifierTree",
374:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
375:       "weka.classifiers.functions.SimpleLinearRegression",
376:       "weka.classifiers.trees.M5P",
377:       "weka.core.matrix.Matrix",
378:       "weka.classifiers.trees.RandomForest",
379:       "weka.classifiers.meta.ClassificationViaRegression",
380:       "weka.classifiers.meta.AdaBoostM1",
381:       "weka.estimators.NormalEstimator",
382:       "weka.classifiers.functions.SMOreg",
383:       "weka.classifiers.functions.supportVector.RegOptimizer",
384:       "weka.classifiers.functions.supportVector.RegSMO",
385:       "weka.classifiers.functions.supportVector.RegSMOImproved",
386:       "weka.classifiers.functions.supportVector.Puk",
387:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
388:       "weka.core.Check",
389:       "weka.core.CheckGOE",
390:       "weka.classifiers.functions.supportVector.RBFKernel",
391:       "weka.attributeSelection.OneRAttributeEval",
392:       "weka.core.AttributeStats",
393:       "weka.experiment.Stats",
394:       "weka.core.Queue",
395:       "weka.core.AttributeLocator",
396:       "weka.core.StringLocator",
397:       "weka.core.RelationalLocator",
398:       "weka.core.Queue$QueueNode",
399:       "weka.attributeSelection.WrapperSubsetEval",
400:       "weka.classifiers.rules.DecisionTable",
401:       "weka.classifiers.meta.RandomSubSpace",
402:       "weka.core.ClassDiscovery",
403:       "weka.classifiers.functions.neural.NeuralConnection",
404:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
405:       "weka.core.ManhattanDistance",
406:       "weka.core.Javadoc",
407:       "weka.core.OptionHandlerJavadoc",
408:       "weka.core.converters.ConverterUtils$DataSource",
409:       "weka.core.converters.AbstractLoader",
410:       "weka.core.converters.AbstractFileLoader",
411:       "weka.core.converters.ArffLoader",
412:       "weka.estimators.MahalanobisEstimator"
413:     );
414:   }
415: }

[MASTER] 04:54:40.213 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = (NaiveBayesMultinomialText)AbstractClassifier.makeCopy(naiveBayesMultinomialText0);
naiveBayesMultinomialText1.setUseStopList(true);
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
TestInstances testInstances0 = new TestInstances();
testInstances0.setNumDate(1037);
testInstances0.generate();

[MASTER] 04:54:40.829 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_34_1575348880797/weka/classifiers/bayes/NaiveBayesMultinomialText_34_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_34_1575348880797/weka/classifiers/bayes/NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding.java]]
[MASTER] 04:54:40.829 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:54:40.829 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:54:40.829 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 04:54:40.829 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 04:54:40.831 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_34_1575348880797/weka/classifiers/bayes/NaiveBayesMultinomialText_34_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 04:54:40 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.testdata.EvoSuiteFile;
14: import org.evosuite.runtime.testdata.FileSystemHandling;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.AbstractClassifier;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_34_tmp__ESTest extends NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=1.5271837172395382
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       byte[] byteArray0 = new byte[7];
30:       byteArray0[0] = (byte) (-46);
31:       byteArray0[1] = (byte) (-50);
32:       byteArray0[2] = (byte)11;
33:       byteArray0[3] = (byte)46;
34:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
35:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
36:       byteArray0[4] = (byte)57;
37:       byteArray0[5] = (byte)37;
38:       FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
39:       String[] stringArray0 = new String[26];
40:       FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
41:       stringArray0[0] = "";
42:       stringArray0[1] = "&CvWoG*]!ao_,Fj?YR_";
43:       stringArray0[2] = "";
44:       stringArray0[3] = "&CvWoG*]!ao_,Fj?YR_";
45:       stringArray0[4] = "";
46:       naiveBayesMultinomialText0.m_lowercaseTokens = true;
47:       stringArray0[5] = "";
48:       stringArray0[6] = "";
49:       AbstractClassifier.runClassifier(naiveBayesMultinomialText0, stringArray0);
50:       naiveBayesMultinomialText0.getNorm();
51:       boolean boolean0 = naiveBayesMultinomialText0.getLowercaseTokens();
52:       assertTrue(boolean0);
53:   }
54: }
RegularFileObject[/tmp/EvoSuite_34_1575348880797/weka/classifiers/bayes/NaiveBayesMultinomialText_34_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 04:54:40 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.attributeSelection.SubsetEvaluator",
95:       "weka.classifiers.CostMatrix",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.classifiers.trees.J48",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.core.EnvironmentHandler",
108:       "weka.classifiers.trees.j48.C45ModelSelection",
109:       "weka.classifiers.functions.SGDText",
110:       "weka.core.RelationalLocator",
111:       "weka.core.Utils",
112:       "weka.core.tokenizers.Tokenizer",
113:       "weka.core.NoSupportForMissingValuesException",
114:       "weka.classifiers.UpdateableClassifier",
115:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
116:       "weka.core.TechnicalInformation$Type",
117:       "weka.core.MultiInstanceCapabilitiesHandler",
118:       "weka.core.Copyable",
119:       "weka.core.Capabilities",
120:       "weka.core.BinarySparseInstance",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
122:       "weka.core.AttributeLocator",
123:       "weka.core.SerializedObject",
124:       "weka.clusterers.UpdateableClusterer",
125:       "weka.core.Summarizable",
126:       "weka.classifiers.trees.j48.ModelSelection",
127:       "weka.core.AdditionalMeasureProducer",
128:       "weka.core.neighboursearch.balltrees.BallNode",
129:       "org.pentaho.packageManagement.PackageManager$1",
130:       "weka.core.Drawable",
131:       "weka.core.matrix.Matrix",
132:       "weka.core.CapabilitiesHandler",
133:       "weka.attributeSelection.ASEvaluation",
134:       "weka.core.AbstractInstance",
135:       "weka.core.scripting.JythonObject",
136:       "weka.core.SelectedTag",
137:       "org.pentaho.packageManagement.DefaultPackage",
138:       "weka.classifiers.misc.InputMappedClassifier",
139:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
140:       "weka.core.Version",
141:       "weka.filters.AllFilter",
142:       "weka.core.Tag",
143:       "weka.classifiers.trees.j48.BinC45ModelSelection",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.core.OptionHandler",
146:       "weka.core.WekaException",
147:       "weka.filters.StreamableFilter",
148:       "weka.core.PartitionGenerator",
149:       "weka.attributeSelection.WrapperSubsetEval",
150:       "weka.core.scripting.JythonSerializableObject",
151:       "weka.classifiers.Classifier",
152:       "weka.core.Capabilities$Capability",
153:       "weka.core.SparseInstance",
154:       "org.pentaho.packageManagement.PackageManager",
155:       "weka.classifiers.trees.j48.ClassifierSplitModel",
156:       "weka.core.tokenizers.WordTokenizer",
157:       "weka.classifiers.trees.j48.ClassifierTree",
158:       "weka.core.stemmers.SnowballStemmer",
159:       "weka.classifiers.trees.j48.PruneableClassifierTree",
160:       "weka.core.stemmers.LovinsStemmer",
161:       "weka.classifiers.Evaluation",
162:       "weka.classifiers.functions.supportVector.Kernel",
163:       "weka.core.WekaPackageManager",
164:       "weka.filters.SupervisedFilter",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
167:       "weka.classifiers.meta.CostSensitiveClassifier",
168:       "weka.core.Option",
169:       "weka.filters.Sourcable",
170:       "weka.core.Attribute",
171:       "weka.core.Stopwords",
172:       "weka.core.FastVector",
173:       "weka.core.UnassignedDatasetException",
174:       "weka.classifiers.RandomizableClassifier",
175:       "weka.classifiers.SingleClassifierEnhancer",
176:       "weka.core.RevisionUtils",
177:       "weka.core.Instance",
178:       "weka.core.ProtectedProperties",
179:       "weka.core.StringLocator",
180:       "weka.core.Matchable",
181:       "weka.core.AttributeStats",
182:       "weka.core.WeightedInstancesHandler",
183:       "weka.core.TechnicalInformation$Field",
184:       "weka.filters.unsupervised.attribute.Remove",
185:       "weka.core.Randomizable",
186:       "weka.classifiers.trees.j48.NoSplit",
187:       "weka.core.Instances",
188:       "weka.core.UnassignedClassException",
189:       "weka.classifiers.rules.ZeroR",
190:       "weka.core.stemmers.IteratedLovinsStemmer",
191:       "weka.core.TechnicalInformation",
192:       "weka.core.UnsupportedAttributeTypeException",
193:       "weka.classifiers.Sourcable",
194:       "weka.core.RevisionHandler",
195:       "weka.classifiers.evaluation.output.prediction.PlainText",
196:       "weka.core.xml.XMLSerialization",
197:       "weka.classifiers.xml.XMLClassifier",
198:       "weka.filters.Filter",
199:       "weka.filters.supervised.attribute.Discretize"
200:     );
201:   } 
202: 
203:   private static void resetClasses() {
204:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding.class.getClassLoader()); 
205: 
206:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
207:       "weka.classifiers.AbstractClassifier",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
210:       "weka.core.Capabilities$Capability",
211:       "weka.core.tokenizers.Tokenizer",
212:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
213:       "weka.core.tokenizers.WordTokenizer",
214:       "weka.core.stemmers.NullStemmer",
215:       "weka.classifiers.RandomizableClassifier",
216:       "weka.core.Tag",
217:       "weka.classifiers.functions.SGDText",
218:       "weka.core.SelectedTag",
219:       "weka.core.AbstractInstance",
220:       "weka.core.SparseInstance",
221:       "weka.core.BinarySparseInstance",
222:       "weka.core.UnassignedDatasetException",
223:       "weka.core.Utils",
224:       "weka.classifiers.misc.SerializedClassifier",
225:       "weka.classifiers.Evaluation",
226:       "weka.core.Option",
227:       "weka.core.neighboursearch.NearestNeighbourSearch",
228:       "weka.core.neighboursearch.KDTree",
229:       "weka.core.NormalizableDistance",
230:       "weka.core.EuclideanDistance",
231:       "weka.core.Range",
232:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
233:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
234:       "weka.classifiers.bayes.NaiveBayes",
235:       "weka.core.neighboursearch.LinearNNSearch",
236:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
237:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
238:       "weka.core.SerializedObject",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.TestInstances",
246:       "weka.core.Attribute",
247:       "weka.core.ProtectedProperties",
248:       "weka.core.Instances",
249:       "weka.core.DenseInstance",
250:       "weka.classifiers.SingleClassifierEnhancer",
251:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
252:       "weka.classifiers.meta.CostSensitiveClassifier",
253:       "weka.classifiers.rules.ZeroR",
254:       "weka.classifiers.CostMatrix",
255:       "weka.core.RevisionUtils",
256:       "weka.attributeSelection.ASEvaluation",
257:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
258:       "weka.attributeSelection.PrincipalComponents",
259:       "weka.core.tokenizers.AlphabeticTokenizer",
260:       "weka.filters.Filter",
261:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
262:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
263:       "weka.estimators.Estimator",
264:       "weka.estimators.DiscreteEstimator",
265:       "weka.core.UnassignedClassException",
266:       "weka.classifiers.rules.OneR",
267:       "weka.core.tokenizers.NGramTokenizer",
268:       "weka.core.neighboursearch.CoverTree",
269:       "weka.classifiers.bayes.BayesNet",
270:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
271:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
272:       "weka.classifiers.bayes.net.search.local.K2",
273:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
274:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
275:       "weka.core.TechnicalInformation",
276:       "weka.core.TechnicalInformation$Type",
277:       "weka.core.TechnicalInformation$Field",
278:       "weka.attributeSelection.CorrelationAttributeEval",
279:       "weka.core.neighboursearch.BallTree",
280:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
281:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
282:       "weka.core.neighboursearch.balltrees.BallSplitter",
283:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
284:       "weka.core.stemmers.SnowballStemmer",
285:       "weka.core.stemmers.Stemming",
286:       "weka.filters.supervised.attribute.Discretize",
287:       "weka.core.stemmers.LovinsStemmer",
288:       "weka.core.FindWithCapabilities",
289:       "weka.core.SingleIndex",
290:       "weka.core.WekaException",
291:       "weka.core.UnsupportedAttributeTypeException",
292:       "weka.core.neighboursearch.balltrees.BallNode",
293:       "weka.core.stemmers.IteratedLovinsStemmer",
294:       "weka.classifiers.trees.m5.M5Base",
295:       "weka.classifiers.rules.M5Rules",
296:       "weka.core.converters.ArffLoader$ArffReader",
297:       "weka.classifiers.functions.supportVector.Kernel",
298:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
299:       "weka.classifiers.misc.InputMappedClassifier",
300:       "weka.core.Stopwords",
301:       "weka.filters.AllFilter",
302:       "weka.classifiers.rules.JRip",
303:       "weka.classifiers.lazy.IBk",
304:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
305:       "weka.classifiers.bayes.NaiveBayesUpdateable",
306:       "weka.classifiers.MultipleClassifiersCombiner",
307:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
308:       "weka.classifiers.meta.Vote",
309:       "weka.core.WekaEnumeration",
310:       "weka.core.Attribute$1",
311:       "weka.classifiers.bayes.NaiveBayesMultinomial",
312:       "weka.classifiers.trees.REPTree",
313:       "weka.classifiers.bayes.net.BIFReader",
314:       "weka.classifiers.trees.RandomTree",
315:       "weka.classifiers.functions.VotedPerceptron",
316:       "weka.classifiers.functions.GaussianProcesses",
317:       "weka.classifiers.functions.supportVector.CachedKernel",
318:       "weka.classifiers.functions.supportVector.PolyKernel",
319:       "weka.estimators.PoissonEstimator",
320:       "weka.attributeSelection.GainRatioAttributeEval",
321:       "weka.classifiers.meta.FilteredClassifier",
322:       "weka.filters.supervised.attribute.AttributeSelection",
323:       "weka.attributeSelection.AttributeSelection",
324:       "weka.attributeSelection.CfsSubsetEval",
325:       "weka.attributeSelection.ASSearch",
326:       "weka.attributeSelection.GreedyStepwise",
327:       "weka.attributeSelection.BestFirst",
328:       "weka.classifiers.trees.J48",
329:       "weka.classifiers.trees.LMT",
330:       "weka.classifiers.meta.CVParameterSelection",
331:       "weka.core.FastVector",
332:       "weka.classifiers.meta.MultiScheme",
333:       "weka.classifiers.functions.SimpleLogistic",
334:       "weka.classifiers.functions.SMO",
335:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
336:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
337:       "weka.classifiers.meta.Stacking",
338:       "weka.classifiers.lazy.LWL",
339:       "weka.classifiers.trees.DecisionStump",
340:       "weka.estimators.KernelEstimator",
341:       "weka.classifiers.IteratedSingleClassifierEnhancer",
342:       "weka.classifiers.meta.AdditiveRegression",
343:       "weka.attributeSelection.InfoGainAttributeEval",
344:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
345:       "weka.filters.SimpleFilter",
346:       "weka.filters.SimpleStreamFilter",
347:       "weka.filters.MultiFilter",
348:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
349:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.meta.Bagging",
351:       "weka.classifiers.rules.PART",
352:       "weka.classifiers.rules.part.MakeDecList",
353:       "weka.classifiers.functions.Logistic",
354:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
355:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
356:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
357:       "weka.classifiers.meta.LogitBoost",
358:       "weka.classifiers.meta.MultiClassClassifier",
359:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
360:       "weka.classifiers.meta.RandomCommittee",
361:       "weka.classifiers.lazy.KStar",
362:       "weka.classifiers.functions.SGD",
363:       "weka.attributeSelection.ReliefFAttributeEval",
364:       "weka.classifiers.functions.supportVector.StringKernel",
365:       "weka.classifiers.meta.AttributeSelectedClassifier",
366:       "weka.classifiers.functions.LinearRegression",
367:       "weka.classifiers.functions.MultilayerPerceptron",
368:       "weka.filters.unsupervised.attribute.NominalToBinary",
369:       "weka.classifiers.functions.neural.SigmoidUnit",
370:       "weka.classifiers.functions.neural.LinearUnit",
371:       "weka.classifiers.meta.RegressionByDiscretization",
372:       "weka.filters.unsupervised.attribute.Discretize",
373:       "weka.classifiers.trees.j48.ClassifierTree",
374:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
375:       "weka.classifiers.functions.SimpleLinearRegression",
376:       "weka.classifiers.trees.M5P",
377:       "weka.core.matrix.Matrix",
378:       "weka.classifiers.trees.RandomForest",
379:       "weka.classifiers.meta.ClassificationViaRegression",
380:       "weka.classifiers.meta.AdaBoostM1",
381:       "weka.estimators.NormalEstimator",
382:       "weka.classifiers.functions.SMOreg",
383:       "weka.classifiers.functions.supportVector.RegOptimizer",
384:       "weka.classifiers.functions.supportVector.RegSMO",
385:       "weka.classifiers.functions.supportVector.RegSMOImproved",
386:       "weka.classifiers.functions.supportVector.Puk",
387:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
388:       "weka.core.Check",
389:       "weka.core.CheckGOE",
390:       "weka.classifiers.functions.supportVector.RBFKernel",
391:       "weka.attributeSelection.OneRAttributeEval",
392:       "weka.core.AttributeStats",
393:       "weka.experiment.Stats",
394:       "weka.core.Queue",
395:       "weka.core.AttributeLocator",
396:       "weka.core.StringLocator",
397:       "weka.core.RelationalLocator",
398:       "weka.core.Queue$QueueNode",
399:       "weka.attributeSelection.WrapperSubsetEval",
400:       "weka.classifiers.rules.DecisionTable",
401:       "weka.classifiers.meta.RandomSubSpace",
402:       "weka.core.ClassDiscovery",
403:       "weka.classifiers.functions.neural.NeuralConnection",
404:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
405:       "weka.core.ManhattanDistance",
406:       "weka.core.Javadoc",
407:       "weka.core.OptionHandlerJavadoc",
408:       "weka.core.converters.ConverterUtils$DataSource",
409:       "weka.core.converters.AbstractLoader",
410:       "weka.core.converters.AbstractFileLoader",
411:       "weka.core.converters.ArffLoader",
412:       "weka.estimators.MahalanobisEstimator"
413:     );
414:   }
415: }

[MASTER] 04:54:40.832 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
byte[] byteArray0 = new byte[7];
byteArray0[0] = (byte) (-46);
byteArray0[1] = (byte) (-50);
byteArray0[2] = (byte)11;
byteArray0[3] = (byte)46;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
byteArray0[4] = (byte)57;
byteArray0[5] = (byte)37;
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
String[] stringArray0 = new String[26];
FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
stringArray0[0] = "";
stringArray0[1] = "&CvWoG*]!ao_,Fj?YR_";
stringArray0[2] = "";
stringArray0[3] = "&CvWoG*]!ao_,Fj?YR_";
stringArray0[4] = "";
naiveBayesMultinomialText0.m_lowercaseTokens = true;
stringArray0[5] = "";
stringArray0[6] = "";
AbstractClassifier.runClassifier(naiveBayesMultinomialText0, stringArray0);
naiveBayesMultinomialText0.getNorm();
boolean boolean0 = naiveBayesMultinomialText0.getLowercaseTokens();
assertTrue(boolean0);


[MASTER] 04:54:41.674 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_56_1575348881646/weka/classifiers/bayes/NaiveBayesMultinomialText_56_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_56_1575348881646/weka/classifiers/bayes/NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding.java]]
[MASTER] 04:54:41.690 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:54:41.690 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:54:41.690 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 04:54:41.690 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 04:54:41.691 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_56_1575348881646/weka/classifiers/bayes/NaiveBayesMultinomialText_56_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 04:54:41 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.io.BufferedReader;
12: import java.io.StringReader;
13: import java.util.LinkedHashMap;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.testdata.FileSystemHandling;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.AbstractClassifier;
19: import weka.classifiers.bayes.NaiveBayesMultinomialText;
20: import weka.core.Instances;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
23: public class NaiveBayesMultinomialText_56_tmp__ESTest extends NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding {
24: 
25:   /**
26:   //Test case number: 0
27:   /*Coverage entropy=0.4
28:   */
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
32:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
33:       AbstractClassifier.makeCopy(naiveBayesMultinomialText0);
34:       Integer integer0 = new Integer((-2799));
35:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
36:       naiveBayesMultinomialText0.m_periodicP = (-2799);
37:       naiveBayesMultinomialText0.pruneDictionary();
38:       StringReader stringReader0 = new StringReader("");
39:       BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
40:       BufferedReader bufferedReader1 = null;
41:       try {
42:         bufferedReader1 = new BufferedReader(stringReader0, (-2799));
43:         fail("Expecting exception: IllegalArgumentException");
44:       
45:       } catch(IllegalArgumentException e) {
46:          //
47:          // Buffer size <= 0
48:          //
49:          verifyException("java.io.BufferedReader", e);
50:       }
51:   }
52: }
RegularFileObject[/tmp/EvoSuite_56_1575348881646/weka/classifiers/bayes/NaiveBayesMultinomialText_56_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 04:54:41 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.attributeSelection.SubsetEvaluator",
95:       "weka.classifiers.CostMatrix",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.classifiers.trees.J48",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.core.EnvironmentHandler",
108:       "weka.classifiers.trees.j48.C45ModelSelection",
109:       "weka.classifiers.functions.SGDText",
110:       "weka.core.RelationalLocator",
111:       "weka.core.Utils",
112:       "weka.core.tokenizers.Tokenizer",
113:       "weka.core.NoSupportForMissingValuesException",
114:       "weka.classifiers.UpdateableClassifier",
115:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
116:       "weka.core.TechnicalInformation$Type",
117:       "weka.core.MultiInstanceCapabilitiesHandler",
118:       "weka.core.Copyable",
119:       "weka.core.Capabilities",
120:       "weka.core.BinarySparseInstance",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
122:       "weka.core.AttributeLocator",
123:       "weka.core.SerializedObject",
124:       "weka.clusterers.UpdateableClusterer",
125:       "weka.core.Summarizable",
126:       "weka.classifiers.trees.j48.ModelSelection",
127:       "weka.core.AdditionalMeasureProducer",
128:       "weka.core.neighboursearch.balltrees.BallNode",
129:       "org.pentaho.packageManagement.PackageManager$1",
130:       "weka.core.Drawable",
131:       "weka.core.matrix.Matrix",
132:       "weka.core.CapabilitiesHandler",
133:       "weka.attributeSelection.ASEvaluation",
134:       "weka.core.AbstractInstance",
135:       "weka.core.scripting.JythonObject",
136:       "weka.core.SelectedTag",
137:       "org.pentaho.packageManagement.DefaultPackage",
138:       "weka.classifiers.misc.InputMappedClassifier",
139:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
140:       "weka.core.Version",
141:       "weka.filters.AllFilter",
142:       "weka.core.Tag",
143:       "weka.classifiers.trees.j48.BinC45ModelSelection",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.core.OptionHandler",
146:       "weka.core.WekaException",
147:       "weka.filters.StreamableFilter",
148:       "weka.core.PartitionGenerator",
149:       "weka.attributeSelection.WrapperSubsetEval",
150:       "weka.core.scripting.JythonSerializableObject",
151:       "weka.classifiers.Classifier",
152:       "weka.core.Capabilities$Capability",
153:       "weka.core.SparseInstance",
154:       "org.pentaho.packageManagement.PackageManager",
155:       "weka.classifiers.trees.j48.ClassifierSplitModel",
156:       "weka.core.tokenizers.WordTokenizer",
157:       "weka.classifiers.trees.j48.ClassifierTree",
158:       "weka.core.stemmers.SnowballStemmer",
159:       "weka.classifiers.trees.j48.PruneableClassifierTree",
160:       "weka.core.stemmers.LovinsStemmer",
161:       "weka.classifiers.Evaluation",
162:       "weka.classifiers.functions.supportVector.Kernel",
163:       "weka.core.WekaPackageManager",
164:       "weka.filters.SupervisedFilter",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
167:       "weka.classifiers.meta.CostSensitiveClassifier",
168:       "weka.core.Option",
169:       "weka.filters.Sourcable",
170:       "weka.core.Attribute",
171:       "weka.core.Stopwords",
172:       "weka.core.FastVector",
173:       "weka.core.UnassignedDatasetException",
174:       "weka.classifiers.RandomizableClassifier",
175:       "weka.classifiers.SingleClassifierEnhancer",
176:       "weka.core.RevisionUtils",
177:       "weka.core.Instance",
178:       "weka.core.ProtectedProperties",
179:       "weka.core.StringLocator",
180:       "weka.core.Matchable",
181:       "weka.core.AttributeStats",
182:       "weka.core.WeightedInstancesHandler",
183:       "weka.core.TechnicalInformation$Field",
184:       "weka.filters.unsupervised.attribute.Remove",
185:       "weka.core.Randomizable",
186:       "weka.classifiers.trees.j48.NoSplit",
187:       "weka.core.Instances",
188:       "weka.core.UnassignedClassException",
189:       "weka.classifiers.rules.ZeroR",
190:       "weka.core.stemmers.IteratedLovinsStemmer",
191:       "weka.core.TechnicalInformation",
192:       "weka.core.UnsupportedAttributeTypeException",
193:       "weka.classifiers.Sourcable",
194:       "weka.core.RevisionHandler",
195:       "weka.classifiers.evaluation.output.prediction.PlainText",
196:       "weka.core.xml.XMLSerialization",
197:       "weka.classifiers.xml.XMLClassifier",
198:       "weka.filters.Filter",
199:       "weka.filters.supervised.attribute.Discretize"
200:     );
201:   } 
202: 
203:   private static void resetClasses() {
204:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_56_tmp__ESTest_scaffolding.class.getClassLoader()); 
205: 
206:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
207:       "weka.classifiers.AbstractClassifier",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
210:       "weka.core.Capabilities$Capability",
211:       "weka.core.tokenizers.Tokenizer",
212:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
213:       "weka.core.tokenizers.WordTokenizer",
214:       "weka.core.stemmers.NullStemmer",
215:       "weka.classifiers.RandomizableClassifier",
216:       "weka.core.Tag",
217:       "weka.classifiers.functions.SGDText",
218:       "weka.core.SelectedTag",
219:       "weka.core.AbstractInstance",
220:       "weka.core.SparseInstance",
221:       "weka.core.BinarySparseInstance",
222:       "weka.core.UnassignedDatasetException",
223:       "weka.core.Utils",
224:       "weka.classifiers.misc.SerializedClassifier",
225:       "weka.classifiers.Evaluation",
226:       "weka.core.Option",
227:       "weka.core.neighboursearch.NearestNeighbourSearch",
228:       "weka.core.neighboursearch.KDTree",
229:       "weka.core.NormalizableDistance",
230:       "weka.core.EuclideanDistance",
231:       "weka.core.Range",
232:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
233:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
234:       "weka.classifiers.bayes.NaiveBayes",
235:       "weka.core.neighboursearch.LinearNNSearch",
236:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
237:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
238:       "weka.core.SerializedObject",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.TestInstances",
246:       "weka.core.Attribute",
247:       "weka.core.ProtectedProperties",
248:       "weka.core.Instances",
249:       "weka.core.DenseInstance",
250:       "weka.classifiers.SingleClassifierEnhancer",
251:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
252:       "weka.classifiers.meta.CostSensitiveClassifier",
253:       "weka.classifiers.rules.ZeroR",
254:       "weka.classifiers.CostMatrix",
255:       "weka.core.RevisionUtils",
256:       "weka.attributeSelection.ASEvaluation",
257:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
258:       "weka.attributeSelection.PrincipalComponents",
259:       "weka.core.tokenizers.AlphabeticTokenizer",
260:       "weka.filters.Filter",
261:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
262:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
263:       "weka.estimators.Estimator",
264:       "weka.estimators.DiscreteEstimator",
265:       "weka.core.UnassignedClassException",
266:       "weka.classifiers.rules.OneR",
267:       "weka.core.tokenizers.NGramTokenizer",
268:       "weka.core.neighboursearch.CoverTree",
269:       "weka.classifiers.bayes.BayesNet",
270:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
271:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
272:       "weka.classifiers.bayes.net.search.local.K2",
273:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
274:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
275:       "weka.core.TechnicalInformation",
276:       "weka.core.TechnicalInformation$Type",
277:       "weka.core.TechnicalInformation$Field",
278:       "weka.attributeSelection.CorrelationAttributeEval",
279:       "weka.core.neighboursearch.BallTree",
280:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
281:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
282:       "weka.core.neighboursearch.balltrees.BallSplitter",
283:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
284:       "weka.core.stemmers.SnowballStemmer",
285:       "weka.core.stemmers.Stemming",
286:       "weka.filters.supervised.attribute.Discretize",
287:       "weka.core.stemmers.LovinsStemmer",
288:       "weka.core.FindWithCapabilities",
289:       "weka.core.SingleIndex",
290:       "weka.core.WekaException",
291:       "weka.core.UnsupportedAttributeTypeException",
292:       "weka.core.neighboursearch.balltrees.BallNode",
293:       "weka.core.stemmers.IteratedLovinsStemmer",
294:       "weka.classifiers.trees.m5.M5Base",
295:       "weka.classifiers.rules.M5Rules",
296:       "weka.core.converters.ArffLoader$ArffReader",
297:       "weka.classifiers.functions.supportVector.Kernel",
298:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
299:       "weka.classifiers.misc.InputMappedClassifier",
300:       "weka.core.Stopwords",
301:       "weka.filters.AllFilter",
302:       "weka.classifiers.rules.JRip",
303:       "weka.classifiers.lazy.IBk",
304:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
305:       "weka.classifiers.bayes.NaiveBayesUpdateable",
306:       "weka.classifiers.MultipleClassifiersCombiner",
307:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
308:       "weka.classifiers.meta.Vote",
309:       "weka.core.WekaEnumeration",
310:       "weka.core.Attribute$1",
311:       "weka.classifiers.bayes.NaiveBayesMultinomial",
312:       "weka.classifiers.trees.REPTree",
313:       "weka.classifiers.bayes.net.BIFReader",
314:       "weka.classifiers.trees.RandomTree",
315:       "weka.classifiers.functions.VotedPerceptron",
316:       "weka.classifiers.functions.GaussianProcesses",
317:       "weka.classifiers.functions.supportVector.CachedKernel",
318:       "weka.classifiers.functions.supportVector.PolyKernel",
319:       "weka.estimators.PoissonEstimator",
320:       "weka.attributeSelection.GainRatioAttributeEval",
321:       "weka.classifiers.meta.FilteredClassifier",
322:       "weka.filters.supervised.attribute.AttributeSelection",
323:       "weka.attributeSelection.AttributeSelection",
324:       "weka.attributeSelection.CfsSubsetEval",
325:       "weka.attributeSelection.ASSearch",
326:       "weka.attributeSelection.GreedyStepwise",
327:       "weka.attributeSelection.BestFirst",
328:       "weka.classifiers.trees.J48",
329:       "weka.classifiers.trees.LMT",
330:       "weka.classifiers.meta.CVParameterSelection",
331:       "weka.core.FastVector",
332:       "weka.classifiers.meta.MultiScheme",
333:       "weka.classifiers.functions.SimpleLogistic",
334:       "weka.classifiers.functions.SMO",
335:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
336:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
337:       "weka.classifiers.meta.Stacking",
338:       "weka.classifiers.lazy.LWL",
339:       "weka.classifiers.trees.DecisionStump",
340:       "weka.estimators.KernelEstimator",
341:       "weka.classifiers.IteratedSingleClassifierEnhancer",
342:       "weka.classifiers.meta.AdditiveRegression",
343:       "weka.attributeSelection.InfoGainAttributeEval",
344:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
345:       "weka.filters.SimpleFilter",
346:       "weka.filters.SimpleStreamFilter",
347:       "weka.filters.MultiFilter",
348:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
349:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.meta.Bagging",
351:       "weka.classifiers.rules.PART",
352:       "weka.classifiers.rules.part.MakeDecList",
353:       "weka.classifiers.functions.Logistic",
354:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
355:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
356:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
357:       "weka.classifiers.meta.LogitBoost",
358:       "weka.classifiers.meta.MultiClassClassifier",
359:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
360:       "weka.classifiers.meta.RandomCommittee",
361:       "weka.classifiers.lazy.KStar",
362:       "weka.classifiers.functions.SGD",
363:       "weka.attributeSelection.ReliefFAttributeEval",
364:       "weka.classifiers.functions.supportVector.StringKernel",
365:       "weka.classifiers.meta.AttributeSelectedClassifier",
366:       "weka.classifiers.functions.LinearRegression",
367:       "weka.classifiers.functions.MultilayerPerceptron",
368:       "weka.filters.unsupervised.attribute.NominalToBinary",
369:       "weka.classifiers.functions.neural.SigmoidUnit",
370:       "weka.classifiers.functions.neural.LinearUnit",
371:       "weka.classifiers.meta.RegressionByDiscretization",
372:       "weka.filters.unsupervised.attribute.Discretize",
373:       "weka.classifiers.trees.j48.ClassifierTree",
374:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
375:       "weka.classifiers.functions.SimpleLinearRegression",
376:       "weka.classifiers.trees.M5P",
377:       "weka.core.matrix.Matrix",
378:       "weka.classifiers.trees.RandomForest",
379:       "weka.classifiers.meta.ClassificationViaRegression",
380:       "weka.classifiers.meta.AdaBoostM1",
381:       "weka.estimators.NormalEstimator",
382:       "weka.classifiers.functions.SMOreg",
383:       "weka.classifiers.functions.supportVector.RegOptimizer",
384:       "weka.classifiers.functions.supportVector.RegSMO",
385:       "weka.classifiers.functions.supportVector.RegSMOImproved",
386:       "weka.classifiers.functions.supportVector.Puk",
387:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
388:       "weka.core.Check",
389:       "weka.core.CheckGOE",
390:       "weka.classifiers.functions.supportVector.RBFKernel",
391:       "weka.attributeSelection.OneRAttributeEval",
392:       "weka.core.AttributeStats",
393:       "weka.experiment.Stats",
394:       "weka.core.Queue",
395:       "weka.core.AttributeLocator",
396:       "weka.core.StringLocator",
397:       "weka.core.RelationalLocator",
398:       "weka.core.Queue$QueueNode",
399:       "weka.attributeSelection.WrapperSubsetEval",
400:       "weka.classifiers.rules.DecisionTable",
401:       "weka.classifiers.meta.RandomSubSpace",
402:       "weka.core.ClassDiscovery",
403:       "weka.classifiers.functions.neural.NeuralConnection",
404:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
405:       "weka.core.ManhattanDistance",
406:       "weka.core.Javadoc",
407:       "weka.core.OptionHandlerJavadoc",
408:       "weka.core.converters.ConverterUtils$DataSource",
409:       "weka.core.converters.AbstractLoader",
410:       "weka.core.converters.AbstractFileLoader",
411:       "weka.core.converters.ArffLoader",
412:       "weka.estimators.MahalanobisEstimator"
413:     );
414:   }
415: }

[MASTER] 04:54:41.691 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
AbstractClassifier.makeCopy(naiveBayesMultinomialText0);
Integer integer0 = new Integer((-2799));
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_periodicP = (-2799);
naiveBayesMultinomialText0.pruneDictionary();
StringReader stringReader0 = new StringReader("");
BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
BufferedReader bufferedReader1 = new BufferedReader(stringReader0, (-2799));

[MASTER] 04:54:42.338 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_70_1575348882304/weka/classifiers/bayes/NaiveBayesMultinomialText_70_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_70_1575348882304/weka/classifiers/bayes/NaiveBayesMultinomialText_70_tmp__ESTest_scaffolding.java]]
[MASTER] 04:54:42.338 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:54:42.338 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:54:42.338 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 04:54:42.338 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 04:54:42.339 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 04:54:42.339 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 04:54:42.339 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 04:54:42.340 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_70_1575348882304/weka/classifiers/bayes/NaiveBayesMultinomialText_70_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 04:54:42 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_70_tmp__ESTest extends NaiveBayesMultinomialText_70_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=0.4
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
30:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
31:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
32:       Integer integer0 = new Integer((-2799));
33:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = naiveBayesMultinomialText0.m_inputVector;
34:       linkedHashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
35:       naiveBayesMultinomialText0.m_periodicP = 41;
36:       // Undeclared exception!
37:       try { 
38:         naiveBayesMultinomialText0.pruneDictionary();
39:         fail("Expecting exception: NullPointerException");
40:       
41:       } catch(NullPointerException e) {
42:          //
43:          // no message in exception (getMessage() returned null)
44:          //
45:          verifyException("weka.classifiers.bayes.NaiveBayesMultinomialText", e);
46:       }
47:   }
48: }
RegularFileObject[/tmp/EvoSuite_70_1575348882304/weka/classifiers/bayes/NaiveBayesMultinomialText_70_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 04:54:42 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_70_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_70_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.attributeSelection.SubsetEvaluator",
95:       "weka.classifiers.CostMatrix",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.classifiers.trees.J48",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.core.EnvironmentHandler",
108:       "weka.classifiers.trees.j48.C45ModelSelection",
109:       "weka.classifiers.functions.SGDText",
110:       "weka.core.RelationalLocator",
111:       "weka.core.Utils",
112:       "weka.core.tokenizers.Tokenizer",
113:       "weka.core.NoSupportForMissingValuesException",
114:       "weka.classifiers.UpdateableClassifier",
115:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
116:       "weka.core.TechnicalInformation$Type",
117:       "weka.core.MultiInstanceCapabilitiesHandler",
118:       "weka.core.Copyable",
119:       "weka.core.Capabilities",
120:       "weka.core.BinarySparseInstance",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
122:       "weka.core.AttributeLocator",
123:       "weka.core.SerializedObject",
124:       "weka.clusterers.UpdateableClusterer",
125:       "weka.core.Summarizable",
126:       "weka.classifiers.trees.j48.ModelSelection",
127:       "weka.core.AdditionalMeasureProducer",
128:       "weka.core.neighboursearch.balltrees.BallNode",
129:       "org.pentaho.packageManagement.PackageManager$1",
130:       "weka.core.Drawable",
131:       "weka.core.matrix.Matrix",
132:       "weka.core.CapabilitiesHandler",
133:       "weka.attributeSelection.ASEvaluation",
134:       "weka.core.AbstractInstance",
135:       "weka.core.scripting.JythonObject",
136:       "weka.core.SelectedTag",
137:       "org.pentaho.packageManagement.DefaultPackage",
138:       "weka.classifiers.misc.InputMappedClassifier",
139:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
140:       "weka.core.Version",
141:       "weka.filters.AllFilter",
142:       "weka.core.Tag",
143:       "weka.classifiers.trees.j48.BinC45ModelSelection",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.core.OptionHandler",
146:       "weka.core.WekaException",
147:       "weka.filters.StreamableFilter",
148:       "weka.core.PartitionGenerator",
149:       "weka.attributeSelection.WrapperSubsetEval",
150:       "weka.core.scripting.JythonSerializableObject",
151:       "weka.classifiers.Classifier",
152:       "weka.core.Capabilities$Capability",
153:       "weka.core.SparseInstance",
154:       "org.pentaho.packageManagement.PackageManager",
155:       "weka.classifiers.trees.j48.ClassifierSplitModel",
156:       "weka.core.tokenizers.WordTokenizer",
157:       "weka.classifiers.trees.j48.ClassifierTree",
158:       "weka.core.stemmers.SnowballStemmer",
159:       "weka.classifiers.trees.j48.PruneableClassifierTree",
160:       "weka.core.stemmers.LovinsStemmer",
161:       "weka.classifiers.Evaluation",
162:       "weka.classifiers.functions.supportVector.Kernel",
163:       "weka.core.WekaPackageManager",
164:       "weka.filters.SupervisedFilter",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
167:       "weka.classifiers.meta.CostSensitiveClassifier",
168:       "weka.core.Option",
169:       "weka.filters.Sourcable",
170:       "weka.core.Attribute",
171:       "weka.core.Stopwords",
172:       "weka.core.FastVector",
173:       "weka.core.UnassignedDatasetException",
174:       "weka.classifiers.RandomizableClassifier",
175:       "weka.classifiers.SingleClassifierEnhancer",
176:       "weka.core.RevisionUtils",
177:       "weka.core.Instance",
178:       "weka.core.ProtectedProperties",
179:       "weka.core.StringLocator",
180:       "weka.core.Matchable",
181:       "weka.core.AttributeStats",
182:       "weka.core.WeightedInstancesHandler",
183:       "weka.core.TechnicalInformation$Field",
184:       "weka.filters.unsupervised.attribute.Remove",
185:       "weka.core.Randomizable",
186:       "weka.classifiers.trees.j48.NoSplit",
187:       "weka.core.Instances",
188:       "weka.core.UnassignedClassException",
189:       "weka.classifiers.rules.ZeroR",
190:       "weka.core.stemmers.IteratedLovinsStemmer",
191:       "weka.core.TechnicalInformation",
192:       "weka.core.UnsupportedAttributeTypeException",
193:       "weka.classifiers.Sourcable",
194:       "weka.core.RevisionHandler",
195:       "weka.classifiers.evaluation.output.prediction.PlainText",
196:       "weka.core.xml.XMLSerialization",
197:       "weka.classifiers.xml.XMLClassifier",
198:       "weka.filters.Filter",
199:       "weka.filters.supervised.attribute.Discretize"
200:     );
201:   } 
202: 
203:   private static void resetClasses() {
204:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_70_tmp__ESTest_scaffolding.class.getClassLoader()); 
205: 
206:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
207:       "weka.classifiers.AbstractClassifier",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
210:       "weka.core.Capabilities$Capability",
211:       "weka.core.tokenizers.Tokenizer",
212:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
213:       "weka.core.tokenizers.WordTokenizer",
214:       "weka.core.stemmers.NullStemmer",
215:       "weka.classifiers.RandomizableClassifier",
216:       "weka.core.Tag",
217:       "weka.classifiers.functions.SGDText",
218:       "weka.core.SelectedTag",
219:       "weka.core.AbstractInstance",
220:       "weka.core.SparseInstance",
221:       "weka.core.BinarySparseInstance",
222:       "weka.core.UnassignedDatasetException",
223:       "weka.core.Utils",
224:       "weka.classifiers.misc.SerializedClassifier",
225:       "weka.classifiers.Evaluation",
226:       "weka.core.Option",
227:       "weka.core.neighboursearch.NearestNeighbourSearch",
228:       "weka.core.neighboursearch.KDTree",
229:       "weka.core.NormalizableDistance",
230:       "weka.core.EuclideanDistance",
231:       "weka.core.Range",
232:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
233:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
234:       "weka.classifiers.bayes.NaiveBayes",
235:       "weka.core.neighboursearch.LinearNNSearch",
236:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
237:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
238:       "weka.core.SerializedObject",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.TestInstances",
246:       "weka.core.Attribute",
247:       "weka.core.ProtectedProperties",
248:       "weka.core.Instances",
249:       "weka.core.DenseInstance",
250:       "weka.classifiers.SingleClassifierEnhancer",
251:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
252:       "weka.classifiers.meta.CostSensitiveClassifier",
253:       "weka.classifiers.rules.ZeroR",
254:       "weka.classifiers.CostMatrix",
255:       "weka.core.RevisionUtils",
256:       "weka.attributeSelection.ASEvaluation",
257:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
258:       "weka.attributeSelection.PrincipalComponents",
259:       "weka.core.tokenizers.AlphabeticTokenizer",
260:       "weka.filters.Filter",
261:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
262:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
263:       "weka.estimators.Estimator",
264:       "weka.estimators.DiscreteEstimator",
265:       "weka.core.UnassignedClassException",
266:       "weka.classifiers.rules.OneR",
267:       "weka.core.tokenizers.NGramTokenizer",
268:       "weka.core.neighboursearch.CoverTree",
269:       "weka.classifiers.bayes.BayesNet",
270:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
271:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
272:       "weka.classifiers.bayes.net.search.local.K2",
273:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
274:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
275:       "weka.core.TechnicalInformation",
276:       "weka.core.TechnicalInformation$Type",
277:       "weka.core.TechnicalInformation$Field",
278:       "weka.attributeSelection.CorrelationAttributeEval",
279:       "weka.core.neighboursearch.BallTree",
280:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
281:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
282:       "weka.core.neighboursearch.balltrees.BallSplitter",
283:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
284:       "weka.core.stemmers.SnowballStemmer",
285:       "weka.core.stemmers.Stemming",
286:       "weka.filters.supervised.attribute.Discretize",
287:       "weka.core.stemmers.LovinsStemmer",
288:       "weka.core.FindWithCapabilities",
289:       "weka.core.SingleIndex",
290:       "weka.core.WekaException",
291:       "weka.core.UnsupportedAttributeTypeException",
292:       "weka.core.neighboursearch.balltrees.BallNode",
293:       "weka.core.stemmers.IteratedLovinsStemmer",
294:       "weka.classifiers.trees.m5.M5Base",
295:       "weka.classifiers.rules.M5Rules",
296:       "weka.core.converters.ArffLoader$ArffReader",
297:       "weka.classifiers.functions.supportVector.Kernel",
298:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
299:       "weka.classifiers.misc.InputMappedClassifier",
300:       "weka.core.Stopwords",
301:       "weka.filters.AllFilter",
302:       "weka.classifiers.rules.JRip",
303:       "weka.classifiers.lazy.IBk",
304:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
305:       "weka.classifiers.bayes.NaiveBayesUpdateable",
306:       "weka.classifiers.MultipleClassifiersCombiner",
307:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
308:       "weka.classifiers.meta.Vote",
309:       "weka.core.WekaEnumeration",
310:       "weka.core.Attribute$1",
311:       "weka.classifiers.bayes.NaiveBayesMultinomial",
312:       "weka.classifiers.trees.REPTree",
313:       "weka.classifiers.bayes.net.BIFReader",
314:       "weka.classifiers.trees.RandomTree",
315:       "weka.classifiers.functions.VotedPerceptron",
316:       "weka.classifiers.functions.GaussianProcesses",
317:       "weka.classifiers.functions.supportVector.CachedKernel",
318:       "weka.classifiers.functions.supportVector.PolyKernel",
319:       "weka.estimators.PoissonEstimator",
320:       "weka.attributeSelection.GainRatioAttributeEval",
321:       "weka.classifiers.meta.FilteredClassifier",
322:       "weka.filters.supervised.attribute.AttributeSelection",
323:       "weka.attributeSelection.AttributeSelection",
324:       "weka.attributeSelection.CfsSubsetEval",
325:       "weka.attributeSelection.ASSearch",
326:       "weka.attributeSelection.GreedyStepwise",
327:       "weka.attributeSelection.BestFirst",
328:       "weka.classifiers.trees.J48",
329:       "weka.classifiers.trees.LMT",
330:       "weka.classifiers.meta.CVParameterSelection",
331:       "weka.core.FastVector",
332:       "weka.classifiers.meta.MultiScheme",
333:       "weka.classifiers.functions.SimpleLogistic",
334:       "weka.classifiers.functions.SMO",
335:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
336:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
337:       "weka.classifiers.meta.Stacking",
338:       "weka.classifiers.lazy.LWL",
339:       "weka.classifiers.trees.DecisionStump",
340:       "weka.estimators.KernelEstimator",
341:       "weka.classifiers.IteratedSingleClassifierEnhancer",
342:       "weka.classifiers.meta.AdditiveRegression",
343:       "weka.attributeSelection.InfoGainAttributeEval",
344:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
345:       "weka.filters.SimpleFilter",
346:       "weka.filters.SimpleStreamFilter",
347:       "weka.filters.MultiFilter",
348:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
349:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.meta.Bagging",
351:       "weka.classifiers.rules.PART",
352:       "weka.classifiers.rules.part.MakeDecList",
353:       "weka.classifiers.functions.Logistic",
354:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
355:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
356:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
357:       "weka.classifiers.meta.LogitBoost",
358:       "weka.classifiers.meta.MultiClassClassifier",
359:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
360:       "weka.classifiers.meta.RandomCommittee",
361:       "weka.classifiers.lazy.KStar",
362:       "weka.classifiers.functions.SGD",
363:       "weka.attributeSelection.ReliefFAttributeEval",
364:       "weka.classifiers.functions.supportVector.StringKernel",
365:       "weka.classifiers.meta.AttributeSelectedClassifier",
366:       "weka.classifiers.functions.LinearRegression",
367:       "weka.classifiers.functions.MultilayerPerceptron",
368:       "weka.filters.unsupervised.attribute.NominalToBinary",
369:       "weka.classifiers.functions.neural.SigmoidUnit",
370:       "weka.classifiers.functions.neural.LinearUnit",
371:       "weka.classifiers.meta.RegressionByDiscretization",
372:       "weka.filters.unsupervised.attribute.Discretize",
373:       "weka.classifiers.trees.j48.ClassifierTree",
374:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
375:       "weka.classifiers.functions.SimpleLinearRegression",
376:       "weka.classifiers.trees.M5P",
377:       "weka.core.matrix.Matrix",
378:       "weka.classifiers.trees.RandomForest",
379:       "weka.classifiers.meta.ClassificationViaRegression",
380:       "weka.classifiers.meta.AdaBoostM1",
381:       "weka.estimators.NormalEstimator",
382:       "weka.classifiers.functions.SMOreg",
383:       "weka.classifiers.functions.supportVector.RegOptimizer",
384:       "weka.classifiers.functions.supportVector.RegSMO",
385:       "weka.classifiers.functions.supportVector.RegSMOImproved",
386:       "weka.classifiers.functions.supportVector.Puk",
387:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
388:       "weka.core.Check",
389:       "weka.core.CheckGOE",
390:       "weka.classifiers.functions.supportVector.RBFKernel",
391:       "weka.attributeSelection.OneRAttributeEval",
392:       "weka.core.AttributeStats",
393:       "weka.experiment.Stats",
394:       "weka.core.Queue",
395:       "weka.core.AttributeLocator",
396:       "weka.core.StringLocator",
397:       "weka.core.RelationalLocator",
398:       "weka.core.Queue$QueueNode",
399:       "weka.attributeSelection.WrapperSubsetEval",
400:       "weka.classifiers.rules.DecisionTable",
401:       "weka.classifiers.meta.RandomSubSpace",
402:       "weka.core.ClassDiscovery",
403:       "weka.classifiers.functions.neural.NeuralConnection",
404:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
405:       "weka.core.ManhattanDistance",
406:       "weka.core.Javadoc",
407:       "weka.core.OptionHandlerJavadoc",
408:       "weka.core.converters.ConverterUtils$DataSource",
409:       "weka.core.converters.AbstractLoader",
410:       "weka.core.converters.AbstractFileLoader",
411:       "weka.core.converters.ArffLoader",
412:       "weka.estimators.MahalanobisEstimator"
413:     );
414:   }
415: }

[MASTER] 04:54:42.341 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
Integer integer0 = new Integer((-2799));
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = naiveBayesMultinomialText0.m_inputVector;
linkedHashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
naiveBayesMultinomialText0.m_periodicP = 41;
naiveBayesMultinomialText0.pruneDictionary();

[MASTER] 04:54:42.529 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_75_1575348882498/weka/classifiers/bayes/NaiveBayesMultinomialText_75_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_75_1575348882498/weka/classifiers/bayes/NaiveBayesMultinomialText_75_tmp__ESTest_scaffolding.java]]
[MASTER] 04:54:42.529 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:54:42.529 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:54:42.530 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 04:54:42.531 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_75_1575348882498/weka/classifiers/bayes/NaiveBayesMultinomialText_75_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 04:54:42 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.Random;
15: import org.evosuite.runtime.System;
16: import org.evosuite.runtime.testdata.EvoSuiteFile;
17: import org.evosuite.runtime.testdata.FileSystemHandling;
18: import org.junit.runner.RunWith;
19: import weka.classifiers.bayes.NaiveBayesMultinomialText;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_75_tmp__ESTest extends NaiveBayesMultinomialText_75_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=3.437192602354846
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
32:       naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
33:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
34:       
35:       FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ":,srJ$hOmiSP");
36:       naiveBayesMultinomialText0.m_norm = (-1.0);
37:       naiveBayesMultinomialText0.getRevision();
38:       naiveBayesMultinomialText0.getTokenizer();
39:       naiveBayesMultinomialText0.pruneDictionary();
40:       String[] stringArray0 = new String[5];
41:       stringArray0[0] = ":,srJ$hOmiSP";
42:       stringArray0[1] = ":,srJ$hOmiSP";
43:       stringArray0[2] = "9122";
44:       stringArray0[3] = ":,srJ$hOmiSP";
45:       stringArray0[4] = "9122";
46:       naiveBayesMultinomialText0.setOptions(stringArray0);
47:       naiveBayesMultinomialText0.setOptions(stringArray0);
48:       System.setCurrentTimeMillis(3532L);
49:       naiveBayesMultinomialText0.stemmerTipText();
50:       naiveBayesMultinomialText0.globalInfo();
51:       naiveBayesMultinomialText0.tokenizerTipText();
52:       naiveBayesMultinomialText0.getCapabilities();
53:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
54:       naiveBayesMultinomialText0.getCapabilities();
55:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
56:       naiveBayesMultinomialText0.normTipText();
57:       Random.setNextRandom(119);
58:       naiveBayesMultinomialText0.getStemmer();
59:       naiveBayesMultinomialText0.getMinWordFrequency();
60:       naiveBayesMultinomialText0.getNorm();
61:       naiveBayesMultinomialText0.pruneDictionary();
62:       assertEquals((-1.0), naiveBayesMultinomialText0.getNorm(), 0.01);
63:   }
64: }
RegularFileObject[/tmp/EvoSuite_75_1575348882498/weka/classifiers/bayes/NaiveBayesMultinomialText_75_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 04:54:42 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_75_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_75_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.attributeSelection.SubsetEvaluator",
95:       "weka.classifiers.CostMatrix",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.classifiers.trees.J48",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.core.EnvironmentHandler",
108:       "weka.classifiers.trees.j48.C45ModelSelection",
109:       "weka.classifiers.functions.SGDText",
110:       "weka.core.RelationalLocator",
111:       "weka.core.Utils",
112:       "weka.core.tokenizers.Tokenizer",
113:       "weka.core.NoSupportForMissingValuesException",
114:       "weka.classifiers.UpdateableClassifier",
115:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
116:       "weka.core.TechnicalInformation$Type",
117:       "weka.core.MultiInstanceCapabilitiesHandler",
118:       "weka.core.Copyable",
119:       "weka.core.Capabilities",
120:       "weka.core.BinarySparseInstance",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
122:       "weka.core.AttributeLocator",
123:       "weka.core.SerializedObject",
124:       "weka.clusterers.UpdateableClusterer",
125:       "weka.core.Summarizable",
126:       "weka.classifiers.trees.j48.ModelSelection",
127:       "weka.core.AdditionalMeasureProducer",
128:       "weka.core.neighboursearch.balltrees.BallNode",
129:       "org.pentaho.packageManagement.PackageManager$1",
130:       "weka.core.Drawable",
131:       "weka.core.matrix.Matrix",
132:       "weka.core.CapabilitiesHandler",
133:       "weka.attributeSelection.ASEvaluation",
134:       "weka.core.AbstractInstance",
135:       "weka.core.scripting.JythonObject",
136:       "weka.core.SelectedTag",
137:       "org.pentaho.packageManagement.DefaultPackage",
138:       "weka.classifiers.misc.InputMappedClassifier",
139:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
140:       "weka.core.Version",
141:       "weka.filters.AllFilter",
142:       "weka.core.Tag",
143:       "weka.classifiers.trees.j48.BinC45ModelSelection",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.core.OptionHandler",
146:       "weka.core.WekaException",
147:       "weka.filters.StreamableFilter",
148:       "weka.core.PartitionGenerator",
149:       "weka.attributeSelection.WrapperSubsetEval",
150:       "weka.core.scripting.JythonSerializableObject",
151:       "weka.classifiers.Classifier",
152:       "weka.core.Capabilities$Capability",
153:       "weka.core.SparseInstance",
154:       "org.pentaho.packageManagement.PackageManager",
155:       "weka.classifiers.trees.j48.ClassifierSplitModel",
156:       "weka.core.tokenizers.WordTokenizer",
157:       "weka.classifiers.trees.j48.ClassifierTree",
158:       "weka.core.stemmers.SnowballStemmer",
159:       "weka.classifiers.trees.j48.PruneableClassifierTree",
160:       "weka.core.stemmers.LovinsStemmer",
161:       "weka.classifiers.Evaluation",
162:       "weka.classifiers.functions.supportVector.Kernel",
163:       "weka.core.WekaPackageManager",
164:       "weka.filters.SupervisedFilter",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
167:       "weka.classifiers.meta.CostSensitiveClassifier",
168:       "weka.core.Option",
169:       "weka.filters.Sourcable",
170:       "weka.core.Attribute",
171:       "weka.core.Stopwords",
172:       "weka.core.FastVector",
173:       "weka.core.UnassignedDatasetException",
174:       "weka.classifiers.RandomizableClassifier",
175:       "weka.classifiers.SingleClassifierEnhancer",
176:       "weka.core.RevisionUtils",
177:       "weka.core.Instance",
178:       "weka.core.ProtectedProperties",
179:       "weka.core.StringLocator",
180:       "weka.core.Matchable",
181:       "weka.core.AttributeStats",
182:       "weka.core.WeightedInstancesHandler",
183:       "weka.core.TechnicalInformation$Field",
184:       "weka.filters.unsupervised.attribute.Remove",
185:       "weka.core.Randomizable",
186:       "weka.classifiers.trees.j48.NoSplit",
187:       "weka.core.Instances",
188:       "weka.core.UnassignedClassException",
189:       "weka.classifiers.rules.ZeroR",
190:       "weka.core.stemmers.IteratedLovinsStemmer",
191:       "weka.core.TechnicalInformation",
192:       "weka.core.UnsupportedAttributeTypeException",
193:       "weka.classifiers.Sourcable",
194:       "weka.core.RevisionHandler",
195:       "weka.classifiers.evaluation.output.prediction.PlainText",
196:       "weka.core.xml.XMLSerialization",
197:       "weka.classifiers.xml.XMLClassifier",
198:       "weka.filters.Filter",
199:       "weka.filters.supervised.attribute.Discretize"
200:     );
201:   } 
202: 
203:   private static void resetClasses() {
204:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_75_tmp__ESTest_scaffolding.class.getClassLoader()); 
205: 
206:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
207:       "weka.classifiers.AbstractClassifier",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
210:       "weka.core.Capabilities$Capability",
211:       "weka.core.tokenizers.Tokenizer",
212:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
213:       "weka.core.tokenizers.WordTokenizer",
214:       "weka.core.stemmers.NullStemmer",
215:       "weka.classifiers.RandomizableClassifier",
216:       "weka.core.Tag",
217:       "weka.classifiers.functions.SGDText",
218:       "weka.core.SelectedTag",
219:       "weka.core.AbstractInstance",
220:       "weka.core.SparseInstance",
221:       "weka.core.BinarySparseInstance",
222:       "weka.core.UnassignedDatasetException",
223:       "weka.core.Utils",
224:       "weka.classifiers.misc.SerializedClassifier",
225:       "weka.classifiers.Evaluation",
226:       "weka.core.Option",
227:       "weka.core.neighboursearch.NearestNeighbourSearch",
228:       "weka.core.neighboursearch.KDTree",
229:       "weka.core.NormalizableDistance",
230:       "weka.core.EuclideanDistance",
231:       "weka.core.Range",
232:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
233:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
234:       "weka.classifiers.bayes.NaiveBayes",
235:       "weka.core.neighboursearch.LinearNNSearch",
236:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
237:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
238:       "weka.core.SerializedObject",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.TestInstances",
246:       "weka.core.Attribute",
247:       "weka.core.ProtectedProperties",
248:       "weka.core.Instances",
249:       "weka.core.DenseInstance",
250:       "weka.classifiers.SingleClassifierEnhancer",
251:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
252:       "weka.classifiers.meta.CostSensitiveClassifier",
253:       "weka.classifiers.rules.ZeroR",
254:       "weka.classifiers.CostMatrix",
255:       "weka.core.RevisionUtils",
256:       "weka.attributeSelection.ASEvaluation",
257:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
258:       "weka.attributeSelection.PrincipalComponents",
259:       "weka.core.tokenizers.AlphabeticTokenizer",
260:       "weka.filters.Filter",
261:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
262:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
263:       "weka.estimators.Estimator",
264:       "weka.estimators.DiscreteEstimator",
265:       "weka.core.UnassignedClassException",
266:       "weka.classifiers.rules.OneR",
267:       "weka.core.tokenizers.NGramTokenizer",
268:       "weka.core.neighboursearch.CoverTree",
269:       "weka.classifiers.bayes.BayesNet",
270:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
271:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
272:       "weka.classifiers.bayes.net.search.local.K2",
273:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
274:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
275:       "weka.core.TechnicalInformation",
276:       "weka.core.TechnicalInformation$Type",
277:       "weka.core.TechnicalInformation$Field",
278:       "weka.attributeSelection.CorrelationAttributeEval",
279:       "weka.core.neighboursearch.BallTree",
280:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
281:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
282:       "weka.core.neighboursearch.balltrees.BallSplitter",
283:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
284:       "weka.core.stemmers.SnowballStemmer",
285:       "weka.core.stemmers.Stemming",
286:       "weka.filters.supervised.attribute.Discretize",
287:       "weka.core.stemmers.LovinsStemmer",
288:       "weka.core.FindWithCapabilities",
289:       "weka.core.SingleIndex",
290:       "weka.core.WekaException",
291:       "weka.core.UnsupportedAttributeTypeException",
292:       "weka.core.neighboursearch.balltrees.BallNode",
293:       "weka.core.stemmers.IteratedLovinsStemmer",
294:       "weka.classifiers.trees.m5.M5Base",
295:       "weka.classifiers.rules.M5Rules",
296:       "weka.core.converters.ArffLoader$ArffReader",
297:       "weka.classifiers.functions.supportVector.Kernel",
298:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
299:       "weka.classifiers.misc.InputMappedClassifier",
300:       "weka.core.Stopwords",
301:       "weka.filters.AllFilter",
302:       "weka.classifiers.rules.JRip",
303:       "weka.classifiers.lazy.IBk",
304:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
305:       "weka.classifiers.bayes.NaiveBayesUpdateable",
306:       "weka.classifiers.MultipleClassifiersCombiner",
307:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
308:       "weka.classifiers.meta.Vote",
309:       "weka.core.WekaEnumeration",
310:       "weka.core.Attribute$1",
311:       "weka.classifiers.bayes.NaiveBayesMultinomial",
312:       "weka.classifiers.trees.REPTree",
313:       "weka.classifiers.bayes.net.BIFReader",
314:       "weka.classifiers.trees.RandomTree",
315:       "weka.classifiers.functions.VotedPerceptron",
316:       "weka.classifiers.functions.GaussianProcesses",
317:       "weka.classifiers.functions.supportVector.CachedKernel",
318:       "weka.classifiers.functions.supportVector.PolyKernel",
319:       "weka.estimators.PoissonEstimator",
320:       "weka.attributeSelection.GainRatioAttributeEval",
321:       "weka.classifiers.meta.FilteredClassifier",
322:       "weka.filters.supervised.attribute.AttributeSelection",
323:       "weka.attributeSelection.AttributeSelection",
324:       "weka.attributeSelection.CfsSubsetEval",
325:       "weka.attributeSelection.ASSearch",
326:       "weka.attributeSelection.GreedyStepwise",
327:       "weka.attributeSelection.BestFirst",
328:       "weka.classifiers.trees.J48",
329:       "weka.classifiers.trees.LMT",
330:       "weka.classifiers.meta.CVParameterSelection",
331:       "weka.core.FastVector",
332:       "weka.classifiers.meta.MultiScheme",
333:       "weka.classifiers.functions.SimpleLogistic",
334:       "weka.classifiers.functions.SMO",
335:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
336:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
337:       "weka.classifiers.meta.Stacking",
338:       "weka.classifiers.lazy.LWL",
339:       "weka.classifiers.trees.DecisionStump",
340:       "weka.estimators.KernelEstimator",
341:       "weka.classifiers.IteratedSingleClassifierEnhancer",
342:       "weka.classifiers.meta.AdditiveRegression",
343:       "weka.attributeSelection.InfoGainAttributeEval",
344:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
345:       "weka.filters.SimpleFilter",
346:       "weka.filters.SimpleStreamFilter",
347:       "weka.filters.MultiFilter",
348:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
349:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.meta.Bagging",
351:       "weka.classifiers.rules.PART",
352:       "weka.classifiers.rules.part.MakeDecList",
353:       "weka.classifiers.functions.Logistic",
354:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
355:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
356:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
357:       "weka.classifiers.meta.LogitBoost",
358:       "weka.classifiers.meta.MultiClassClassifier",
359:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
360:       "weka.classifiers.meta.RandomCommittee",
361:       "weka.classifiers.lazy.KStar",
362:       "weka.classifiers.functions.SGD",
363:       "weka.attributeSelection.ReliefFAttributeEval",
364:       "weka.classifiers.functions.supportVector.StringKernel",
365:       "weka.classifiers.meta.AttributeSelectedClassifier",
366:       "weka.classifiers.functions.LinearRegression",
367:       "weka.classifiers.functions.MultilayerPerceptron",
368:       "weka.filters.unsupervised.attribute.NominalToBinary",
369:       "weka.classifiers.functions.neural.SigmoidUnit",
370:       "weka.classifiers.functions.neural.LinearUnit",
371:       "weka.classifiers.meta.RegressionByDiscretization",
372:       "weka.filters.unsupervised.attribute.Discretize",
373:       "weka.classifiers.trees.j48.ClassifierTree",
374:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
375:       "weka.classifiers.functions.SimpleLinearRegression",
376:       "weka.classifiers.trees.M5P",
377:       "weka.core.matrix.Matrix",
378:       "weka.classifiers.trees.RandomForest",
379:       "weka.classifiers.meta.ClassificationViaRegression",
380:       "weka.classifiers.meta.AdaBoostM1",
381:       "weka.estimators.NormalEstimator",
382:       "weka.classifiers.functions.SMOreg",
383:       "weka.classifiers.functions.supportVector.RegOptimizer",
384:       "weka.classifiers.functions.supportVector.RegSMO",
385:       "weka.classifiers.functions.supportVector.RegSMOImproved",
386:       "weka.classifiers.functions.supportVector.Puk",
387:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
388:       "weka.core.Check",
389:       "weka.core.CheckGOE",
390:       "weka.classifiers.functions.supportVector.RBFKernel",
391:       "weka.attributeSelection.OneRAttributeEval",
392:       "weka.core.AttributeStats",
393:       "weka.experiment.Stats",
394:       "weka.core.Queue",
395:       "weka.core.AttributeLocator",
396:       "weka.core.StringLocator",
397:       "weka.core.RelationalLocator",
398:       "weka.core.Queue$QueueNode",
399:       "weka.attributeSelection.WrapperSubsetEval",
400:       "weka.classifiers.rules.DecisionTable",
401:       "weka.classifiers.meta.RandomSubSpace",
402:       "weka.core.ClassDiscovery",
403:       "weka.classifiers.functions.neural.NeuralConnection",
404:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
405:       "weka.core.ManhattanDistance",
406:       "weka.core.Javadoc",
407:       "weka.core.OptionHandlerJavadoc",
408:       "weka.core.converters.ConverterUtils$DataSource",
409:       "weka.core.converters.AbstractLoader",
410:       "weka.core.converters.AbstractFileLoader",
411:       "weka.core.converters.ArffLoader",
412:       "weka.estimators.MahalanobisEstimator"
413:     );
414:   }
415: }

[MASTER] 04:54:42.532 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);

FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ":,srJ$hOmiSP");
naiveBayesMultinomialText0.m_norm = (-1.0);
naiveBayesMultinomialText0.getRevision();
naiveBayesMultinomialText0.getTokenizer();
naiveBayesMultinomialText0.pruneDictionary();
String[] stringArray0 = new String[5];
stringArray0[0] = ":,srJ$hOmiSP";
stringArray0[1] = ":,srJ$hOmiSP";
stringArray0[2] = "9122";
stringArray0[3] = ":,srJ$hOmiSP";
stringArray0[4] = "9122";
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText0.setOptions(stringArray0);
System.setCurrentTimeMillis(3532L);
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.globalInfo();
naiveBayesMultinomialText0.tokenizerTipText();
naiveBayesMultinomialText0.getCapabilities();
naiveBayesMultinomialText0.useWordFrequenciesTipText();
naiveBayesMultinomialText0.getCapabilities();
naiveBayesMultinomialText0.normalizeDocLengthTipText();
naiveBayesMultinomialText0.normTipText();
Random.setNextRandom(119);
naiveBayesMultinomialText0.getStemmer();
naiveBayesMultinomialText0.getMinWordFrequency();
naiveBayesMultinomialText0.getNorm();
naiveBayesMultinomialText0.pruneDictionary();
assertEquals((-1.0), naiveBayesMultinomialText0.getNorm(), 0.01);


[MASTER] 04:54:42.640 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_78_1575348882605/weka/classifiers/bayes/NaiveBayesMultinomialText_78_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_78_1575348882605/weka/classifiers/bayes/NaiveBayesMultinomialText_78_tmp__ESTest_scaffolding.java]]
[MASTER] 04:54:42.640 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:54:42.640 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:54:42.640 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 04:54:42.641 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_78_1575348882605/weka/classifiers/bayes/NaiveBayesMultinomialText_78_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 04:54:42 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.testdata.EvoSuiteFile;
14: import org.evosuite.runtime.testdata.FileSystemHandling;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_78_tmp__ESTest extends NaiveBayesMultinomialText_78_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=2.4164983843494308
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       naiveBayesMultinomialText0.listOptions();
29:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
30:       naiveBayesMultinomialText0.m_tokenizer = null;
31:       naiveBayesMultinomialText0.m_inputVector = null;
32:       byte[] byteArray0 = new byte[9];
33:       byteArray0[0] = (byte)85;
34:       byteArray0[1] = (byte)34;
35:       byteArray0[2] = (byte) (-105);
36:       byteArray0[3] = (byte)74;
37:       byteArray0[4] = (byte)88;
38:       byteArray0[5] = (byte) (-67);
39:       byteArray0[6] = (byte) (-1);
40:       byteArray0[7] = (byte)109;
41:       byteArray0[8] = (byte) (-55);
42:       FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
43:       naiveBayesMultinomialText0.m_minWordP = 5.0;
44:       naiveBayesMultinomialText0.useStopListTipText();
45:       naiveBayesMultinomialText0.getStemmer();
46:       naiveBayesMultinomialText0.getTokenizer();
47:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
48:       naiveBayesMultinomialText0.pruneDictionary();
49:       double double0 = naiveBayesMultinomialText0.getMinWordFrequency();
50:       assertEquals(5.0, double0, 0.01);
51:   }
52: }
RegularFileObject[/tmp/EvoSuite_78_1575348882605/weka/classifiers/bayes/NaiveBayesMultinomialText_78_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 04:54:42 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_78_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_78_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.attributeSelection.SubsetEvaluator",
95:       "weka.classifiers.CostMatrix",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.classifiers.trees.J48",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.core.EnvironmentHandler",
108:       "weka.classifiers.trees.j48.C45ModelSelection",
109:       "weka.classifiers.functions.SGDText",
110:       "weka.core.RelationalLocator",
111:       "weka.core.Utils",
112:       "weka.core.tokenizers.Tokenizer",
113:       "weka.core.NoSupportForMissingValuesException",
114:       "weka.classifiers.UpdateableClassifier",
115:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
116:       "weka.core.TechnicalInformation$Type",
117:       "weka.core.MultiInstanceCapabilitiesHandler",
118:       "weka.core.Copyable",
119:       "weka.core.Capabilities",
120:       "weka.core.BinarySparseInstance",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
122:       "weka.core.AttributeLocator",
123:       "weka.core.SerializedObject",
124:       "weka.clusterers.UpdateableClusterer",
125:       "weka.core.Summarizable",
126:       "weka.classifiers.trees.j48.ModelSelection",
127:       "weka.core.AdditionalMeasureProducer",
128:       "weka.core.neighboursearch.balltrees.BallNode",
129:       "org.pentaho.packageManagement.PackageManager$1",
130:       "weka.core.Drawable",
131:       "weka.core.matrix.Matrix",
132:       "weka.core.CapabilitiesHandler",
133:       "weka.attributeSelection.ASEvaluation",
134:       "weka.core.AbstractInstance",
135:       "weka.core.scripting.JythonObject",
136:       "weka.core.SelectedTag",
137:       "org.pentaho.packageManagement.DefaultPackage",
138:       "weka.classifiers.misc.InputMappedClassifier",
139:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
140:       "weka.core.Version",
141:       "weka.filters.AllFilter",
142:       "weka.core.Tag",
143:       "weka.classifiers.trees.j48.BinC45ModelSelection",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.core.OptionHandler",
146:       "weka.core.WekaException",
147:       "weka.filters.StreamableFilter",
148:       "weka.core.PartitionGenerator",
149:       "weka.attributeSelection.WrapperSubsetEval",
150:       "weka.core.scripting.JythonSerializableObject",
151:       "weka.classifiers.Classifier",
152:       "weka.core.Capabilities$Capability",
153:       "weka.core.SparseInstance",
154:       "org.pentaho.packageManagement.PackageManager",
155:       "weka.classifiers.trees.j48.ClassifierSplitModel",
156:       "weka.core.tokenizers.WordTokenizer",
157:       "weka.classifiers.trees.j48.ClassifierTree",
158:       "weka.core.stemmers.SnowballStemmer",
159:       "weka.classifiers.trees.j48.PruneableClassifierTree",
160:       "weka.core.stemmers.LovinsStemmer",
161:       "weka.classifiers.Evaluation",
162:       "weka.classifiers.functions.supportVector.Kernel",
163:       "weka.core.WekaPackageManager",
164:       "weka.filters.SupervisedFilter",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
167:       "weka.classifiers.meta.CostSensitiveClassifier",
168:       "weka.core.Option",
169:       "weka.filters.Sourcable",
170:       "weka.core.Attribute",
171:       "weka.core.Stopwords",
172:       "weka.core.FastVector",
173:       "weka.core.UnassignedDatasetException",
174:       "weka.classifiers.RandomizableClassifier",
175:       "weka.classifiers.SingleClassifierEnhancer",
176:       "weka.core.RevisionUtils",
177:       "weka.core.Instance",
178:       "weka.core.ProtectedProperties",
179:       "weka.core.StringLocator",
180:       "weka.core.Matchable",
181:       "weka.core.AttributeStats",
182:       "weka.core.WeightedInstancesHandler",
183:       "weka.core.TechnicalInformation$Field",
184:       "weka.filters.unsupervised.attribute.Remove",
185:       "weka.core.Randomizable",
186:       "weka.classifiers.trees.j48.NoSplit",
187:       "weka.core.Instances",
188:       "weka.core.UnassignedClassException",
189:       "weka.classifiers.rules.ZeroR",
190:       "weka.core.stemmers.IteratedLovinsStemmer",
191:       "weka.core.TechnicalInformation",
192:       "weka.core.UnsupportedAttributeTypeException",
193:       "weka.classifiers.Sourcable",
194:       "weka.core.RevisionHandler",
195:       "weka.classifiers.evaluation.output.prediction.PlainText",
196:       "weka.core.xml.XMLSerialization",
197:       "weka.classifiers.xml.XMLClassifier",
198:       "weka.filters.Filter",
199:       "weka.filters.supervised.attribute.Discretize"
200:     );
201:   } 
202: 
203:   private static void resetClasses() {
204:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_78_tmp__ESTest_scaffolding.class.getClassLoader()); 
205: 
206:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
207:       "weka.classifiers.AbstractClassifier",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
210:       "weka.core.Capabilities$Capability",
211:       "weka.core.tokenizers.Tokenizer",
212:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
213:       "weka.core.tokenizers.WordTokenizer",
214:       "weka.core.stemmers.NullStemmer",
215:       "weka.classifiers.RandomizableClassifier",
216:       "weka.core.Tag",
217:       "weka.classifiers.functions.SGDText",
218:       "weka.core.SelectedTag",
219:       "weka.core.AbstractInstance",
220:       "weka.core.SparseInstance",
221:       "weka.core.BinarySparseInstance",
222:       "weka.core.UnassignedDatasetException",
223:       "weka.core.Utils",
224:       "weka.classifiers.misc.SerializedClassifier",
225:       "weka.classifiers.Evaluation",
226:       "weka.core.Option",
227:       "weka.core.neighboursearch.NearestNeighbourSearch",
228:       "weka.core.neighboursearch.KDTree",
229:       "weka.core.NormalizableDistance",
230:       "weka.core.EuclideanDistance",
231:       "weka.core.Range",
232:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
233:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
234:       "weka.classifiers.bayes.NaiveBayes",
235:       "weka.core.neighboursearch.LinearNNSearch",
236:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
237:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
238:       "weka.core.SerializedObject",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.TestInstances",
246:       "weka.core.Attribute",
247:       "weka.core.ProtectedProperties",
248:       "weka.core.Instances",
249:       "weka.core.DenseInstance",
250:       "weka.classifiers.SingleClassifierEnhancer",
251:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
252:       "weka.classifiers.meta.CostSensitiveClassifier",
253:       "weka.classifiers.rules.ZeroR",
254:       "weka.classifiers.CostMatrix",
255:       "weka.core.RevisionUtils",
256:       "weka.attributeSelection.ASEvaluation",
257:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
258:       "weka.attributeSelection.PrincipalComponents",
259:       "weka.core.tokenizers.AlphabeticTokenizer",
260:       "weka.filters.Filter",
261:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
262:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
263:       "weka.estimators.Estimator",
264:       "weka.estimators.DiscreteEstimator",
265:       "weka.core.UnassignedClassException",
266:       "weka.classifiers.rules.OneR",
267:       "weka.core.tokenizers.NGramTokenizer",
268:       "weka.core.neighboursearch.CoverTree",
269:       "weka.classifiers.bayes.BayesNet",
270:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
271:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
272:       "weka.classifiers.bayes.net.search.local.K2",
273:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
274:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
275:       "weka.core.TechnicalInformation",
276:       "weka.core.TechnicalInformation$Type",
277:       "weka.core.TechnicalInformation$Field",
278:       "weka.attributeSelection.CorrelationAttributeEval",
279:       "weka.core.neighboursearch.BallTree",
280:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
281:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
282:       "weka.core.neighboursearch.balltrees.BallSplitter",
283:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
284:       "weka.core.stemmers.SnowballStemmer",
285:       "weka.core.stemmers.Stemming",
286:       "weka.filters.supervised.attribute.Discretize",
287:       "weka.core.stemmers.LovinsStemmer",
288:       "weka.core.FindWithCapabilities",
289:       "weka.core.SingleIndex",
290:       "weka.core.WekaException",
291:       "weka.core.UnsupportedAttributeTypeException",
292:       "weka.core.neighboursearch.balltrees.BallNode",
293:       "weka.core.stemmers.IteratedLovinsStemmer",
294:       "weka.classifiers.trees.m5.M5Base",
295:       "weka.classifiers.rules.M5Rules",
296:       "weka.core.converters.ArffLoader$ArffReader",
297:       "weka.classifiers.functions.supportVector.Kernel",
298:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
299:       "weka.classifiers.misc.InputMappedClassifier",
300:       "weka.core.Stopwords",
301:       "weka.filters.AllFilter",
302:       "weka.classifiers.rules.JRip",
303:       "weka.classifiers.lazy.IBk",
304:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
305:       "weka.classifiers.bayes.NaiveBayesUpdateable",
306:       "weka.classifiers.MultipleClassifiersCombiner",
307:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
308:       "weka.classifiers.meta.Vote",
309:       "weka.core.WekaEnumeration",
310:       "weka.core.Attribute$1",
311:       "weka.classifiers.bayes.NaiveBayesMultinomial",
312:       "weka.classifiers.trees.REPTree",
313:       "weka.classifiers.bayes.net.BIFReader",
314:       "weka.classifiers.trees.RandomTree",
315:       "weka.classifiers.functions.VotedPerceptron",
316:       "weka.classifiers.functions.GaussianProcesses",
317:       "weka.classifiers.functions.supportVector.CachedKernel",
318:       "weka.classifiers.functions.supportVector.PolyKernel",
319:       "weka.estimators.PoissonEstimator",
320:       "weka.attributeSelection.GainRatioAttributeEval",
321:       "weka.classifiers.meta.FilteredClassifier",
322:       "weka.filters.supervised.attribute.AttributeSelection",
323:       "weka.attributeSelection.AttributeSelection",
324:       "weka.attributeSelection.CfsSubsetEval",
325:       "weka.attributeSelection.ASSearch",
326:       "weka.attributeSelection.GreedyStepwise",
327:       "weka.attributeSelection.BestFirst",
328:       "weka.classifiers.trees.J48",
329:       "weka.classifiers.trees.LMT",
330:       "weka.classifiers.meta.CVParameterSelection",
331:       "weka.core.FastVector",
332:       "weka.classifiers.meta.MultiScheme",
333:       "weka.classifiers.functions.SimpleLogistic",
334:       "weka.classifiers.functions.SMO",
335:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
336:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
337:       "weka.classifiers.meta.Stacking",
338:       "weka.classifiers.lazy.LWL",
339:       "weka.classifiers.trees.DecisionStump",
340:       "weka.estimators.KernelEstimator",
341:       "weka.classifiers.IteratedSingleClassifierEnhancer",
342:       "weka.classifiers.meta.AdditiveRegression",
343:       "weka.attributeSelection.InfoGainAttributeEval",
344:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
345:       "weka.filters.SimpleFilter",
346:       "weka.filters.SimpleStreamFilter",
347:       "weka.filters.MultiFilter",
348:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
349:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.meta.Bagging",
351:       "weka.classifiers.rules.PART",
352:       "weka.classifiers.rules.part.MakeDecList",
353:       "weka.classifiers.functions.Logistic",
354:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
355:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
356:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
357:       "weka.classifiers.meta.LogitBoost",
358:       "weka.classifiers.meta.MultiClassClassifier",
359:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
360:       "weka.classifiers.meta.RandomCommittee",
361:       "weka.classifiers.lazy.KStar",
362:       "weka.classifiers.functions.SGD",
363:       "weka.attributeSelection.ReliefFAttributeEval",
364:       "weka.classifiers.functions.supportVector.StringKernel",
365:       "weka.classifiers.meta.AttributeSelectedClassifier",
366:       "weka.classifiers.functions.LinearRegression",
367:       "weka.classifiers.functions.MultilayerPerceptron",
368:       "weka.filters.unsupervised.attribute.NominalToBinary",
369:       "weka.classifiers.functions.neural.SigmoidUnit",
370:       "weka.classifiers.functions.neural.LinearUnit",
371:       "weka.classifiers.meta.RegressionByDiscretization",
372:       "weka.filters.unsupervised.attribute.Discretize",
373:       "weka.classifiers.trees.j48.ClassifierTree",
374:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
375:       "weka.classifiers.functions.SimpleLinearRegression",
376:       "weka.classifiers.trees.M5P",
377:       "weka.core.matrix.Matrix",
378:       "weka.classifiers.trees.RandomForest",
379:       "weka.classifiers.meta.ClassificationViaRegression",
380:       "weka.classifiers.meta.AdaBoostM1",
381:       "weka.estimators.NormalEstimator",
382:       "weka.classifiers.functions.SMOreg",
383:       "weka.classifiers.functions.supportVector.RegOptimizer",
384:       "weka.classifiers.functions.supportVector.RegSMO",
385:       "weka.classifiers.functions.supportVector.RegSMOImproved",
386:       "weka.classifiers.functions.supportVector.Puk",
387:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
388:       "weka.core.Check",
389:       "weka.core.CheckGOE",
390:       "weka.classifiers.functions.supportVector.RBFKernel",
391:       "weka.attributeSelection.OneRAttributeEval",
392:       "weka.core.AttributeStats",
393:       "weka.experiment.Stats",
394:       "weka.core.Queue",
395:       "weka.core.AttributeLocator",
396:       "weka.core.StringLocator",
397:       "weka.core.RelationalLocator",
398:       "weka.core.Queue$QueueNode",
399:       "weka.attributeSelection.WrapperSubsetEval",
400:       "weka.classifiers.rules.DecisionTable",
401:       "weka.classifiers.meta.RandomSubSpace",
402:       "weka.core.ClassDiscovery",
403:       "weka.classifiers.functions.neural.NeuralConnection",
404:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
405:       "weka.core.ManhattanDistance",
406:       "weka.core.Javadoc",
407:       "weka.core.OptionHandlerJavadoc",
408:       "weka.core.converters.ConverterUtils$DataSource",
409:       "weka.core.converters.AbstractLoader",
410:       "weka.core.converters.AbstractFileLoader",
411:       "weka.core.converters.ArffLoader",
412:       "weka.estimators.MahalanobisEstimator"
413:     );
414:   }
415: }

[MASTER] 04:54:42.641 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.listOptions();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.m_tokenizer = null;
naiveBayesMultinomialText0.m_inputVector = null;
byte[] byteArray0 = new byte[9];
byteArray0[0] = (byte)85;
byteArray0[1] = (byte)34;
byteArray0[2] = (byte) (-105);
byteArray0[3] = (byte)74;
byteArray0[4] = (byte)88;
byteArray0[5] = (byte) (-67);
byteArray0[6] = (byte) (-1);
byteArray0[7] = (byte)109;
byteArray0[8] = (byte) (-55);
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
naiveBayesMultinomialText0.m_minWordP = 5.0;
naiveBayesMultinomialText0.useStopListTipText();
naiveBayesMultinomialText0.getStemmer();
naiveBayesMultinomialText0.getTokenizer();
naiveBayesMultinomialText0.useWordFrequenciesTipText();
naiveBayesMultinomialText0.pruneDictionary();
double double0 = naiveBayesMultinomialText0.getMinWordFrequency();
assertEquals(5.0, double0, 0.01);


[MASTER] 04:54:45.383 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 04:54:46.505 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/rmosa/tests/s1024/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 04:59:52.079 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6948645833333333% of time used, but only 40/185 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 12%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 7
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/rmosa/tests/s1024/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 8339
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 05:02:39.077 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 05:02:39.089 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 05:02:39.090 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 05:02:40.557 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 05:02:41.972 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 05:02:41.974 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 05:02:45.889 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 05:02:46.008 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 05:02:46.010 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 05:02:46.010 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 05:02:46.011 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 05:02:46.021 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 05:02:46.023 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 05:02:46.032 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 05:02:46.033 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 05:02:46.165 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 05:02:46.205 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1024
* Starting evolution
[MASTER] 05:02:53.896 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 05:03:42.372 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 05:04:15.493 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.rootRelativeSquaredError()D
[MASTER] 05:04:15.502 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.rootRelativeSquaredError()D
[MASTER] 05:04:50.811 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 262s and 118 generations, 70779 statements, best individual has fitness: 14728.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 59%
* Total number of goals: 1378
* Number of covered goals: 819
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 45%
* Total number of goals: 809
* Number of covered goals: 366
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 65
* Number of covered goals: 65
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 63%
* Total number of goals: 424
* Number of covered goals: 268
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 22%
* Total number of goals: 278
* Number of covered goals: 61
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 44%
* Total number of goals: 809
* Number of covered goals: 359
* Generated 164 tests with total length 1737
* Resulting test suite's coverage: 54% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 8%
* Compiling and checking tests
[MASTER] 05:12:50.228 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 05:12:50.546 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 05:12:50.546 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 05:12:52.217 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 05:12:52.233 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 05:12:52.754 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1024/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 8340
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 8339
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1024
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 05:14:07.820 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 05:14:07.831 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 05:14:07.832 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 05:14:07.891 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1024
* Starting evolution
[MASTER] 05:14:12.517 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Search finished after 240s and 243 generations, 97630 statements, best individual has fitness: 2760.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 217
* Number of covered goals: 188
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 285
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 240
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 285
* Generated 94 tests with total length 296
* Resulting test suite's coverage: 75% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 261s and 128 generations, 92068 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 17 tests with total length 159
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 79%
* Compiling and checking tests
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1024/107_weka/evosuite-tests
* Done!

* Computation finished
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1024/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 8341
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 05:28:34.777 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 05:28:34.866 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 05:28:34.868 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 05:28:35.324 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 05:28:35.354 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 05:28:35.384 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1024
* Starting evolution
[MASTER] 05:31:07.050 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 284s and 369 generations, 168445 statements, best individual has fitness: 3992.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 72%
* Total number of goals: 370
* Number of covered goals: 267
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 61%
* Total number of goals: 242
* Number of covered goals: 148
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 31
* Number of covered goals: 31
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 75%
* Total number of goals: 713
* Number of covered goals: 538
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 72
* Number of covered goals: 39
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 61%
* Total number of goals: 242
* Number of covered goals: 148
* Generated 90 tests with total length 682
* Resulting test suite's coverage: 72% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 28%
* Compiling and checking tests
[MASTER] 05:36:20.720 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 05:36:21.555 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 05:36:39.027 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 05:36:39.029 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
String[] stringArray0 = new String[6];
stringArray0[0] = "2137,-1610612733,-772,11,-2079,201,3116,201,-1994091955";
stringArray0[1] = "yfdnthR2@GYO2k<";
stringArray0[2] = "xAd'f$j&p.F";
stringArray0[3] = "DenseInstance has accesss to a dataset!";
stringArray0[4] = " because it requires ";
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("Tn>T-\"2K,j#}p", arrayList0, 1143);
Attribute attribute0 = new Attribute(" because it requires ", instances0, 1143);
arrayList0.add(attribute0);
Instances instances1 = new Instances(" Eu-T#X", arrayList0, 2);
discretize0.setInputFormat(instances1);

[MASTER] 05:36:48.317 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 05:36:48.318 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
Attribute attribute0 = new Attribute("", "");
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
arrayList0.add(attribute0);
Instances instances0 = new Instances("relational", arrayList0, 4);
Attribute attribute1 = new Attribute("real", instances0, 4);
arrayList0.add(attribute1);
Instances instances1 = new Instances("Sorted array (ints): ", arrayList0, 3);
discretize0.setInputFormat(instances1);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 7
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1024/107_weka/evosuite-tests
* Done!

* Computation finished
