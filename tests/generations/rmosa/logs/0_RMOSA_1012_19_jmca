* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 2863
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 13:02:59.597 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:02:59.610 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:02:59.620 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 13:02:59.648 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1012
* Starting evolution
* Search finished after 279s and 71 generations, 66257 statements, best individual has fitness: 15800.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 55%
* Total number of goals: 981
* Number of covered goals: 536
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 62%
* Total number of goals: 1707
* Number of covered goals: 1052
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 50%
* Total number of goals: 434
* Number of covered goals: 216
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 4
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 62%
* Total number of goals: 1707
* Number of covered goals: 1052
* Generated 197 tests with total length 1972
* Resulting test suite's coverage: 59% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 21%
* Compiling and checking tests
[MASTER] 13:09:40.855 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<7> but was:<1>
[MASTER] 13:09:40.856 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("f~b4LbCRPrx");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 6, 3542, 14);
char[] charArray0 = new char[3];
charArray0[0] = '7';
charArray0[1] = 'R';
charArray0[2] = '7';
CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
stringReader0.read(charBuffer0);
JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 17, 6);
JavaCharStream javaCharStream3 = new JavaCharStream(stringReader0, 3542, 116);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream3);
Token token0 = javaParserTokenManager0.getNextToken();
assertEquals(7, javaCharStream3.bufpos);
assertEquals("4LbCRPrx", token0.toString());


[MASTER] 13:09:41.124 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager but in org.junit.Assert.fail(Assert.java:88): java.lang.AssertionError: Expecting exception: Error
[MASTER] 13:09:41.125 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("stan\"cAof");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
javaCharStream0.adjustBeginLineColumn(12, (-456));
StringReader stringReader1 = new StringReader("stan\"cAof");
char[] charArray0 = new char[2];
charArray0[1] = 'i';
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
stringReader0.read(charArray0);
JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), 50);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
javaParserTokenManager0.curLexState = (-1);
javaParserTokenManager0.getNextToken();
assertEquals(0, javaCharStream1.bufpos);

javaParserTokenManager0.getNextToken();

[MASTER] 13:09:42.364 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<6> but was:<0>
[MASTER] 13:09:42.365 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("protected");
FileSystemHandling.shouldAllThrowIOExceptions();
byte[] byteArray0 = new byte[7];
byteArray0[0] = (byte)57;
byteArray0[1] = (byte)115;
byteArray0[2] = (byte)115;
byteArray0[3] = (byte)115;
byteArray0[4] = (byte)115;
byteArray0[5] = (byte)57;
byteArray0[6] = (byte)57;
ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
javaParserTokenManager0.getNextToken();
assertEquals(6, javaCharStream0.bufpos);
assertEquals(7, javaCharStream0.getEndColumn());


[MASTER] 13:09:43.218 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<10> but was:<9>
[MASTER] 13:09:43.219 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
doReturn(false).when(enumeration0).hasMoreElements();
SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0);
JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, (-456), (-456));
javaCharStream0.adjustBeginLineColumn(3557, 12);
StringReader stringReader0 = new StringReader("W<6reywbS8^ZLz");
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
char[] charArray0 = new char[8];
charArray0[0] = 'i';
charArray0[1] = 'i';
charArray0[2] = 'i';
charArray0[3] = 'i';
charArray0[4] = 'i';
charArray0[5] = 'i';
charArray0[6] = 'i';
charArray0[7] = 'M';
stringReader0.read(charArray0);
stringReader0.reset();
JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 8, 50);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
javaParserTokenManager0.getNextToken();
javaParserTokenManager0.getNextToken();
Token.GTToken token_GTToken0 = new Token.GTToken();
Token token0 = token_GTToken0.specialToken;
javaParserTokenManager0.getNextToken();
javaParserTokenManager0.getNextToken();
assertEquals(10, javaCharStream1.bufpos);
assertEquals(60, javaCharStream1.getColumn());


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing JUnit test case 'JavaParserTokenManager_ESTest' to /home/ubuntu/termite/rmosa/tests/s1012/19_jmca/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.JavaCharStream
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.SimpleNode
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 2863
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 2868
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 13:15:34.815 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:15:34.831 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:15:34.832 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 13:15:35.191 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.SimpleNode
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.JavaCharStream
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1012
* Starting evolution
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1012
* Starting evolution
[MASTER] 13:15:41.860 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was com.soops.CEN4010.JMCA.JParser.SimpleNode.dump(Ljava/lang/String;Ljava/io/Writer;)V: Line 148
[MASTER] 13:15:41.860 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was com.soops.CEN4010.JMCA.JParser.SimpleNode.dump(Ljava/lang/String;Ljava/io/Writer;)V: Line 152
[MASTER] 13:15:41.860 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was com.soops.CEN4010.JMCA.JParser.SimpleNode.dump(Ljava/lang/String;Ljava/io/Writer;)V: Line 153
[MASTER] 13:15:41.860 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was com.soops.CEN4010.JMCA.JParser.SimpleNode.dump(Ljava/lang/String;Ljava/io/Writer;)V: Line 154
[MASTER] 13:15:41.860 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was com.soops.CEN4010.JMCA.JParser.SimpleNode.dump(Ljava/lang/String;Ljava/io/Writer;)V: Line 155
[MASTER] 13:15:41.868 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] com.soops.CEN4010.JMCA.JParser.SimpleNode.jjtGetNumChildren()I
[MASTER] 13:15:41.869 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] com.soops.CEN4010.JMCA.JParser.SimpleNode.jjtClose()V
[MASTER] 13:15:41.869 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] com.soops.CEN4010.JMCA.JParser.SimpleNode.toString()Ljava/lang/String;
[MASTER] 13:15:41.869 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] com.soops.CEN4010.JMCA.JParser.SimpleNode.jjtGetNumChildren()I
[MASTER] 13:15:41.870 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] com.soops.CEN4010.JMCA.JParser.SimpleNode.jjtClose()V
[MASTER] 13:15:41.870 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] com.soops.CEN4010.JMCA.JParser.SimpleNode.toString()Ljava/lang/String;
[MASTER] 13:15:41.871 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch com.soops.CEN4010.JMCA.JParser.SimpleNode.dump(Ljava/lang/String;Ljava/io/Writer;)V: I231 Branch 26 IFNULL L154 - false in context: com.soops.CEN4010.JMCA.JParser.SimpleNode:dump(Ljava/lang/String;Ljava/io/Writer;)V
[MASTER] 13:15:41.871 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch com.soops.CEN4010.JMCA.JParser.SimpleNode.dump(Ljava/lang/String;Ljava/io/Writer;)V: I219 Branch 25 IF_ICMPGE L152 - false in context: com.soops.CEN4010.JMCA.JParser.SimpleNode:dump(Ljava/lang/String;Ljava/io/Writer;)V
[MASTER] 13:15:41.871 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch com.soops.CEN4010.JMCA.JParser.SimpleNode.dump(Ljava/lang/String;Ljava/io/Writer;)V: I187 Branch 23 IFLE L147 - false in context: com.soops.CEN4010.JMCA.JParser.SimpleNode:dump(Ljava/lang/String;Ljava/io/Writer;)V
[MASTER] 13:15:41.871 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch com.soops.CEN4010.JMCA.JParser.SimpleNode.dump(Ljava/lang/String;Ljava/io/Writer;)V: I183 Branch 22 IFNULL L147 - false in context: com.soops.CEN4010.JMCA.JParser.SimpleNode:dump(Ljava/lang/String;Ljava/io/Writer;)V
[MASTER] 13:15:41.871 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch com.soops.CEN4010.JMCA.JParser.SimpleNode.dump(Ljava/lang/String;Ljava/io/Writer;)V: I209 Branch 24 IFNULL L151 - false in context: com.soops.CEN4010.JMCA.JParser.SimpleNode:dump(Ljava/lang/String;Ljava/io/Writer;)V
[MASTER] 13:16:03.479 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] com.soops.CEN4010.JMCA.JParser.JavaCharStream.getBeginLine()I
[MASTER] 13:16:03.479 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] com.soops.CEN4010.JMCA.JParser.JavaCharStream.getBeginLine()I
[MASTER] 13:16:10.325 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] com.soops.CEN4010.JMCA.JParser.SimpleNode.jjtGetChild(I)Lcom/soops/CEN4010/JMCA/JParser/Node;
[MASTER] 13:16:34.394 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] com.soops.CEN4010.JMCA.JParser.JavaCharStream.FillBuff()V
* Search finished after 162s and 69 generations, 38665 statements, best individual has fitness: 1192.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 86%
* Total number of goals: 239
* Number of covered goals: 205
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 90%
* Total number of goals: 216
* Number of covered goals: 194
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 39
* Number of covered goals: 39
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 974
* Number of covered goals: 909
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 86%
* Total number of goals: 36
* Number of covered goals: 31
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 31
* Number of covered goals: 31
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 31
* Number of covered goals: 31
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 89%
* Total number of goals: 216
* Number of covered goals: 193
* Generated 159 tests with total length 1066
* Resulting test suite's coverage: 92% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 37%
* Compiling and checking tests
* Search finished after 255s and 256 generations, 146289 statements, best individual has fitness: 152.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 62
* Number of covered goals: 62
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 67
* Number of covered goals: 67
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 121
* Number of covered goals: 110
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 53%
* Total number of goals: 17
* Number of covered goals: 9
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 67
* Number of covered goals: 67
* Generated 48 tests with total length 355
* Resulting test suite's coverage: 95% (average coverage for all fitness functions)
* Generating assertions
* Writing JUnit test case 'JavaCharStream_ESTest' to /home/ubuntu/termite/rmosa/tests/s1012/19_jmca/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 90%
* Compiling and checking tests
[MASTER] 13:22:23.390 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test20 -> class java.lang.StackOverflowError: null
[MASTER] 13:22:23.392 [logback-1] WARN  JUnitAnalyzer - Failing test:
 SimpleNode simpleNode0 = new SimpleNode(1);
Node[] nodeArray0 = new Node[2];
nodeArray0[0] = (Node) simpleNode0;
nodeArray0[1] = (Node) simpleNode0;
simpleNode0.children = nodeArray0;
ArrayList<String> arrayList0 = simpleNode0.identifiers;
arrayList0.add("<=");
StringWriter stringWriter0 = new StringWriter(1);
simpleNode0.dump("<=", stringWriter0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing JUnit test case 'SimpleNode_ESTest' to /home/ubuntu/termite/rmosa/tests/s1012/19_jmca/evosuite-tests
* Done!

* Computation finished
