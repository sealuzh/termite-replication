* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21349
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 09:59:53.608 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 09:59:53.635 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 09:59:53.671 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 09:59:56.540 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 09:59:57.152 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 09:59:57.155 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1010
* Starting evolution
[MASTER] 10:00:00.806 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.<init>(Lweka/classifiers/rules/JRip;)V
[MASTER] 10:00:26.515 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NominalAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
[MASTER] 10:00:38.308 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 10:03:08.984 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 235s and 262 generations, 148061 statements, best individual has fitness: 12392.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 36%
* Total number of goals: 705
* Number of covered goals: 257
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 27%
* Total number of goals: 416
* Number of covered goals: 113
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 57%
* Total number of goals: 993
* Number of covered goals: 569
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 29%
* Total number of goals: 93
* Number of covered goals: 27
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 27%
* Total number of goals: 416
* Number of covered goals: 112
* Generated 81 tests with total length 666
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 24%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1010/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21350
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:10:44.900 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:10:44.931 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:10:44.932 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:10:45.036 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1010
* Starting evolution
* Search finished after 334s and 49 generations, 44374 statements, best individual has fitness: 2448.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 647
* Number of covered goals: 615
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 93%
* Total number of goals: 441
* Number of covered goals: 410
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 678
* Number of covered goals: 616
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 45%
* Total number of goals: 244
* Number of covered goals: 109
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 124
* Number of covered goals: 123
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 124
* Number of covered goals: 123
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 90%
* Total number of goals: 441
* Number of covered goals: 399
* Generated 209 tests with total length 3927
* Resulting test suite's coverage: 89% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 10:22:07.900 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6809645833333333% of time used, but only 43/209 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 14%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/rmosa/tests/s1010/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21352
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:25:19.816 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:25:19.851 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:25:19.852 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:25:20.177 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 10:25:20.204 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 10:25:20.207 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1010
* Starting evolution
[MASTER] 10:25:46.192 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 10:27:11.729 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 188s and 369 generations, 113591 statements, best individual has fitness: 7896.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 45%
* Total number of goals: 370
* Number of covered goals: 166
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 81
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 42%
* Total number of goals: 713
* Number of covered goals: 298
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 47%
* Total number of goals: 72
* Number of covered goals: 34
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 96%
* Total number of goals: 45
* Number of covered goals: 43
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 81
* Generated 68 tests with total length 306
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 14%
* Compiling and checking tests
[MASTER] 10:29:27.459 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 10:29:27.509 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 10:29:27.685 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 10:29:27.685 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 10:29:51.382 [logback-1] WARN  ClassResetter - java.lang.reflect.InvocationTargetException, caused by: java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 10:29:51.382 [logback-1] WARN  ClassResetter - java.lang.reflect.InvocationTargetException, caused by: java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1010/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21346
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21348
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21350
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:34:10.851 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 10:34:10.852 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 10:34:10.853 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 10:34:10.987 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:34:11.010 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:34:11.011 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1010
* Starting evolution
[MASTER] 10:34:18.469 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:34:18.489 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:34:18.498 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:34:18.524 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1010
* Starting evolution
[MASTER] 10:34:21.152 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getTokenizer()Lweka/core/tokenizers/Tokenizer;:NonNull
[MASTER] 10:34:21.152 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getTokenizer()Lweka/core/tokenizers/Tokenizer;
[MASTER] 10:34:21.152 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getTokenizer()Lweka/core/tokenizers/Tokenizer;
[MASTER] 10:34:21.153 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getTokenizer()Lweka/core/tokenizers/Tokenizer;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getTokenizer()Lweka/core/tokenizers/Tokenizer;
[MASTER] 10:34:25.499 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:34:33.280 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:34:33.294 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:34:33.299 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:34:33.913 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 10:34:34.653 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 10:34:34.658 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 10:34:36.517 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 10:34:36.551 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 10:34:36.552 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 10:34:36.552 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 10:34:36.552 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 10:34:36.553 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 10:34:36.554 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 10:34:36.555 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 10:34:36.556 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 10:34:36.619 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 10:34:36.632 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1010
* Starting evolution
[MASTER] 10:34:44.711 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 10:34:44.711 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 10:34:47.595 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 10:35:18.565 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 10:35:25.390 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 10:35:30.663 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.num2ShortID(I[CI)Ljava/lang/String;
[MASTER] 10:35:50.285 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.unclassified()D
[MASTER] 10:35:50.286 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.unclassified()D
[MASTER] 10:35:50.344 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.pctCorrect()D: Line 2102
[MASTER] 10:35:50.347 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.pctCorrect()D: root-Branch
[MASTER] 10:35:50.349 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.Evaluation.getClassPriors()[D:NonEmptyArray
[MASTER] 10:35:50.349 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.pctCorrect()D
[MASTER] 10:35:50.350 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.pctCorrect()D
[MASTER] 10:35:50.350 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.pctCorrect()D: root-Branch in context: weka.classifiers.Evaluation:pctCorrect()D
* Search finished after 264s and 128 generations, 85656 statements, best individual has fitness: 16712.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 22 tests with total length 140
* Resulting test suite's coverage: 16% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 14%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1010/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 10:39:14.379 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.updateStatsForPredictor(DLweka/core/Instance;)V
* Search finished after 298s and 118 generations, 74471 statements, best individual has fitness: 13968.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 62%
* Total number of goals: 1378
* Number of covered goals: 861
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 48%
* Total number of goals: 809
* Number of covered goals: 387
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 82
* Number of covered goals: 82
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 66%
* Total number of goals: 424
* Number of covered goals: 280
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 23%
* Total number of goals: 278
* Number of covered goals: 65
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 103
* Number of covered goals: 102
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 46%
* Total number of goals: 809
* Number of covered goals: 373
* Generated 188 tests with total length 2027
* Resulting test suite's coverage: 56% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 408s and 315 generations, 289638 statements, best individual has fitness: 1352.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 91%
* Total number of goals: 338
* Number of covered goals: 309
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 86%
* Total number of goals: 194
* Number of covered goals: 167
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 94%
* Total number of goals: 476
* Number of covered goals: 446
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 112
* Number of covered goals: 61
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 85%
* Total number of goals: 194
* Number of covered goals: 164
* Generated 87 tests with total length 998
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 10%
* Compiling and checking tests
[MASTER] 10:46:19.594 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
* Resulting test suite's mutation score: 57%
* Compiling and checking tests
[MASTER] 10:46:20.011 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 10:46:20.012 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 10:46:21.908 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 10:46:23.513 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_35_1575283583483/weka/classifiers/bayes/NaiveBayesMultinomialText_35_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_35_1575283583483/weka/classifiers/bayes/NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding.java]]
[MASTER] 10:46:23.513 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 10:46:23.513 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 10:46:23.516 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 10:46:23.517 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 10:46:23.517 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_35_1575283583483/weka/classifiers/bayes/NaiveBayesMultinomialText_35_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 10:46:23 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.testdata.EvoSuiteFile;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.core.SparseInstance;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_35_tmp__ESTest extends NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=0.42857142857142855
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
31:       FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
32:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
33:       double[] doubleArray0 = new double[0];
34:       SparseInstance sparseInstance0 = new SparseInstance(0.0, doubleArray0);
35:       try { 
36:         naiveBayesMultinomialText0.distributionForInstance(sparseInstance0);
37:         fail("Expecting exception: NullPointerException");
38:       
39:       } catch(NullPointerException e) {
40:          //
41:          // no message in exception (getMessage() returned null)
42:          //
43:          verifyException("weka.classifiers.bayes.NaiveBayesMultinomialText", e);
44:       }
45:   }
46: }
RegularFileObject[/tmp/EvoSuite_35_1575283583483/weka/classifiers/bayes/NaiveBayesMultinomialText_35_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 10:46:23 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:     org.evosuite.runtime.util.SystemInUtil.getInstance().initForTestCase(); 
60:   } 
61: 
62:   @After 
63:   public void doneWithTestCase(){ 
64:     threadStopper.killAndJoinClientThreads();
65:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
66:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
67:     resetClasses(); 
68:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
69:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
70:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
71:   } 
72: 
73:   public static void setSystemProperties() {
74:  
75:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
76:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
77:     java.lang.System.setProperty("java.awt.headless", "true"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:     java.lang.System.setProperty("user.country", "US"); 
80:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
81:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
82:     java.lang.System.setProperty("user.language", "en"); 
83:     java.lang.System.setProperty("user.name", "ubuntu"); 
84:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
85:   }
86: 
87:   private static void initializeClasses() {
88:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding.class.getClassLoader() ,
89:       "weka.core.Environment",
90:       "weka.core.TestInstances",
91:       "weka.filters.unsupervised.attribute.NominalToBinary",
92:       "weka.core.DistanceFunction",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "weka.attributeSelection.ReliefFAttributeEval",
96:       "org.pentaho.packageManagement.Package",
97:       "weka.core.xml.XMLBasicSerialization",
98:       "weka.classifiers.CostMatrix",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.core.DenseInstance",
104:       "weka.core.stemmers.Stemmer",
105:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.classifiers.bayes.NaiveBayes",
109:       "weka.estimators.IncrementalEstimator",
110:       "weka.estimators.Estimator$Builder",
111:       "weka.core.neighboursearch.KDTree",
112:       "weka.core.stemmers.NullStemmer",
113:       "weka.classifiers.functions.SGDText",
114:       "weka.core.RelationalLocator",
115:       "weka.core.Utils",
116:       "weka.core.CustomDisplayStringProvider",
117:       "weka.core.tokenizers.Tokenizer",
118:       "weka.core.NormalizableDistance",
119:       "weka.core.NoSupportForMissingValuesException",
120:       "weka.classifiers.UpdateableClassifier",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
122:       "weka.core.MultiInstanceCapabilitiesHandler",
123:       "weka.core.Copyable",
124:       "weka.core.Capabilities",
125:       "weka.core.AttributeLocator",
126:       "weka.core.BinarySparseInstance",
127:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
128:       "weka.core.SerializedObject",
129:       "weka.clusterers.UpdateableClusterer",
130:       "weka.core.Summarizable",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "weka.core.AdditionalMeasureProducer",
133:       "org.pentaho.packageManagement.PackageManager$1",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "org.pentaho.packageManagement.DefaultPackage",
142:       "weka.estimators.DiscreteEstimator",
143:       "weka.classifiers.bayes.NaiveBayesUpdateable",
144:       "weka.core.Version",
145:       "weka.core.Tag",
146:       "weka.core.TechnicalInformationHandlerJavadoc",
147:       "weka.core.neighboursearch.CoverTree",
148:       "weka.classifiers.AbstractClassifier",
149:       "weka.filters.unsupervised.attribute.Center",
150:       "weka.core.OptionHandler",
151:       "weka.core.WekaException",
152:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
153:       "weka.filters.StreamableFilter",
154:       "weka.core.Range",
155:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
156:       "weka.core.scripting.JythonSerializableObject",
157:       "weka.classifiers.Classifier",
158:       "weka.core.Capabilities$Capability",
159:       "weka.core.SparseInstance",
160:       "org.pentaho.packageManagement.PackageManager",
161:       "weka.core.WekaEnumeration",
162:       "weka.attributeSelection.AttributeTransformer",
163:       "weka.core.tokenizers.WordTokenizer",
164:       "weka.classifiers.misc.SerializedClassifier",
165:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
166:       "weka.attributeSelection.PrincipalComponents",
167:       "weka.core.stemmers.SnowballStemmer",
168:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
169:       "weka.classifiers.Evaluation",
170:       "weka.classifiers.functions.supportVector.Kernel",
171:       "weka.core.WekaPackageManager",
172:       "weka.filters.SupervisedFilter",
173:       "weka.core.TechnicalInformationHandler",
174:       "weka.core.neighboursearch.CoverTree$d_node",
175:       "weka.core.neighboursearch.LinearNNSearch",
176:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
177:       "weka.core.Option",
178:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
179:       "weka.core.neighboursearch.PerformanceStats",
180:       "weka.estimators.NormalEstimator",
181:       "weka.filters.Sourcable",
182:       "weka.core.Attribute",
183:       "weka.core.Stopwords",
184:       "weka.core.tokenizers.AlphabeticTokenizer",
185:       "weka.core.FastVector",
186:       "weka.core.UnassignedDatasetException",
187:       "weka.classifiers.RandomizableClassifier",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.estimators.Estimator",
191:       "weka.core.ProtectedProperties",
192:       "weka.core.StringLocator",
193:       "weka.core.AttributeStats",
194:       "weka.core.WeightedInstancesHandler",
195:       "weka.core.neighboursearch.NearestNeighbourSearch",
196:       "weka.filters.unsupervised.attribute.Remove",
197:       "weka.core.Randomizable",
198:       "weka.core.Javadoc",
199:       "weka.core.EuclideanDistance",
200:       "weka.core.Instances",
201:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
202:       "weka.core.UnassignedClassException",
203:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
204:       "weka.filters.unsupervised.attribute.Standardize",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.core.TechnicalInformation",
207:       "weka.core.RevisionHandler",
208:       "weka.classifiers.evaluation.output.prediction.PlainText",
209:       "weka.core.neighboursearch.TreePerformanceStats",
210:       "weka.core.xml.XMLSerialization",
211:       "weka.classifiers.xml.XMLClassifier",
212:       "weka.filters.Filter",
213:       "weka.classifiers.lazy.IBk",
214:       "weka.filters.supervised.attribute.Discretize"
215:     );
216:   } 
217: 
218:   private static void resetClasses() {
219:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding.class.getClassLoader()); 
220: 
221:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
222:       "weka.classifiers.AbstractClassifier",
223:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
225:       "weka.core.Capabilities$Capability",
226:       "weka.core.tokenizers.Tokenizer",
227:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
228:       "weka.core.tokenizers.WordTokenizer",
229:       "weka.core.stemmers.NullStemmer",
230:       "weka.classifiers.Evaluation",
231:       "weka.core.Utils",
232:       "weka.core.Option",
233:       "weka.core.stemmers.LovinsStemmer",
234:       "weka.core.stemmers.IteratedLovinsStemmer",
235:       "weka.core.TechnicalInformation",
236:       "weka.core.TechnicalInformation$Type",
237:       "weka.core.TechnicalInformation$Field",
238:       "weka.core.AbstractInstance",
239:       "weka.core.DenseInstance",
240:       "weka.core.neighboursearch.NearestNeighbourSearch",
241:       "weka.core.neighboursearch.KDTree",
242:       "weka.core.NormalizableDistance",
243:       "weka.core.EuclideanDistance",
244:       "weka.core.Range",
245:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
246:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
247:       "weka.classifiers.misc.SerializedClassifier",
248:       "weka.filters.Filter",
249:       "weka.filters.supervised.attribute.Discretize",
250:       "weka.core.SparseInstance",
251:       "weka.core.BinarySparseInstance",
252:       "weka.core.UnassignedDatasetException",
253:       "weka.core.neighboursearch.BallTree",
254:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
255:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
256:       "weka.core.neighboursearch.balltrees.BallSplitter",
257:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
258:       "weka.attributeSelection.ASEvaluation",
259:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
260:       "weka.attributeSelection.PrincipalComponents",
261:       "weka.core.Instances",
262:       "weka.core.converters.ArffLoader$ArffReader",
263:       "weka.core.RevisionUtils",
264:       "weka.core.stemmers.SnowballStemmer",
265:       "weka.core.tokenizers.AlphabeticTokenizer",
266:       "weka.core.Attribute",
267:       "weka.core.ProtectedProperties",
268:       "weka.core.neighboursearch.balltrees.BallNode",
269:       "weka.classifiers.trees.J48",
270:       "weka.core.SerializedObject",
271:       "weka.classifiers.SingleClassifierEnhancer",
272:       "weka.classifiers.misc.InputMappedClassifier",
273:       "weka.classifiers.rules.ZeroR",
274:       "weka.core.neighboursearch.LinearNNSearch",
275:       "weka.classifiers.RandomizableClassifier",
276:       "weka.core.Tag",
277:       "weka.classifiers.functions.SGDText",
278:       "weka.classifiers.bayes.BayesNet",
279:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
280:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
281:       "weka.classifiers.bayes.net.search.local.K2",
282:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
283:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
284:       "weka.core.Capabilities",
285:       "org.pentaho.packageManagement.PackageManager",
286:       "org.pentaho.packageManagement.DefaultPackageManager",
287:       "weka.core.Version",
288:       "weka.core.Environment",
289:       "weka.core.WekaPackageManager",
290:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
291:       "weka.classifiers.lazy.LWL",
292:       "weka.classifiers.trees.DecisionStump",
293:       "weka.core.tokenizers.NGramTokenizer",
294:       "weka.core.stemmers.Stemming",
295:       "weka.core.Stopwords",
296:       "weka.core.neighboursearch.CoverTree",
297:       "weka.classifiers.lazy.IBk",
298:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
299:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
300:       "weka.core.TestInstances",
301:       "weka.core.WekaEnumeration",
302:       "weka.classifiers.meta.RegressionByDiscretization",
303:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
304:       "weka.filters.unsupervised.attribute.Discretize",
305:       "weka.classifiers.MultipleClassifiersCombiner",
306:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
307:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
308:       "weka.classifiers.meta.Stacking",
309:       "weka.classifiers.bayes.net.BIFReader",
310:       "weka.classifiers.bayes.NaiveBayesMultinomial",
311:       "weka.classifiers.functions.MultilayerPerceptron",
312:       "weka.core.FastVector",
313:       "weka.filters.unsupervised.attribute.NominalToBinary",
314:       "weka.classifiers.functions.neural.SigmoidUnit",
315:       "weka.classifiers.functions.neural.LinearUnit",
316:       "weka.classifiers.functions.neural.NeuralConnection",
317:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
318:       "weka.core.AttributeStats",
319:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
320:       "weka.classifiers.CostMatrix",
321:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
322:       "weka.classifiers.bayes.NaiveBayes",
323:       "weka.classifiers.rules.JRip",
324:       "weka.core.matrix.Matrix",
325:       "weka.core.SelectedTag",
326:       "weka.classifiers.IteratedSingleClassifierEnhancer",
327:       "weka.classifiers.meta.AdditiveRegression",
328:       "weka.core.WekaException",
329:       "weka.core.UnsupportedAttributeTypeException",
330:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
331:       "weka.classifiers.meta.CostSensitiveClassifier",
332:       "weka.classifiers.meta.ClassificationViaRegression",
333:       "weka.classifiers.trees.m5.M5Base",
334:       "weka.classifiers.trees.M5P",
335:       "weka.classifiers.functions.LinearRegression",
336:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
337:       "weka.estimators.Estimator",
338:       "weka.estimators.DiscreteEstimator",
339:       "weka.core.FindWithCapabilities",
340:       "weka.core.SingleIndex",
341:       "weka.classifiers.meta.MultiClassClassifier",
342:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
343:       "weka.classifiers.functions.Logistic",
344:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
345:       "weka.classifiers.meta.LogitBoost",
346:       "weka.classifiers.meta.AttributeSelectedClassifier",
347:       "weka.attributeSelection.CfsSubsetEval",
348:       "weka.attributeSelection.ASSearch",
349:       "weka.attributeSelection.BestFirst",
350:       "weka.core.UnassignedClassException",
351:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
352:       "weka.classifiers.trees.RandomTree",
353:       "weka.classifiers.functions.SMOreg",
354:       "weka.classifiers.functions.supportVector.RegOptimizer",
355:       "weka.classifiers.functions.supportVector.RegSMO",
356:       "weka.classifiers.functions.supportVector.RegSMOImproved",
357:       "weka.classifiers.functions.supportVector.Kernel",
358:       "weka.classifiers.functions.supportVector.CachedKernel",
359:       "weka.classifiers.functions.supportVector.PolyKernel",
360:       "weka.filters.AllFilter",
361:       "weka.core.Attribute$1",
362:       "weka.attributeSelection.InfoGainAttributeEval",
363:       "weka.attributeSelection.GainRatioAttributeEval",
364:       "weka.classifiers.meta.FilteredClassifier",
365:       "weka.filters.supervised.attribute.AttributeSelection",
366:       "weka.attributeSelection.AttributeSelection",
367:       "weka.attributeSelection.GreedyStepwise",
368:       "weka.filters.SimpleFilter",
369:       "weka.filters.SimpleStreamFilter",
370:       "weka.filters.MultiFilter",
371:       "weka.estimators.NormalEstimator",
372:       "weka.attributeSelection.OneRAttributeEval",
373:       "weka.estimators.PoissonEstimator",
374:       "weka.attributeSelection.WrapperSubsetEval",
375:       "weka.attributeSelection.CorrelationAttributeEval",
376:       "weka.classifiers.meta.CVParameterSelection",
377:       "weka.classifiers.rules.M5Rules",
378:       "weka.classifiers.trees.LMT",
379:       "weka.classifiers.functions.SimpleLinearRegression",
380:       "weka.classifiers.lazy.KStar",
381:       "weka.classifiers.functions.supportVector.RBFKernel",
382:       "weka.classifiers.functions.SGD",
383:       "weka.classifiers.trees.RandomForest",
384:       "weka.classifiers.functions.SMO",
385:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
386:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
387:       "weka.classifiers.meta.RandomCommittee",
388:       "weka.classifiers.trees.j48.ClassifierTree",
389:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
390:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
391:       "weka.classifiers.functions.supportVector.StringKernel",
392:       "weka.attributeSelection.ReliefFAttributeEval",
393:       "weka.classifiers.rules.OneR",
394:       "weka.classifiers.functions.SimpleLogistic",
395:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
396:       "weka.classifiers.meta.Vote",
397:       "weka.classifiers.meta.Bagging",
398:       "weka.classifiers.trees.REPTree",
399:       "weka.classifiers.functions.supportVector.Puk",
400:       "weka.classifiers.rules.PART",
401:       "weka.classifiers.rules.part.MakeDecList",
402:       "weka.estimators.MahalanobisEstimator",
403:       "weka.classifiers.bayes.NaiveBayesUpdateable",
404:       "weka.classifiers.meta.RandomSubSpace",
405:       "weka.estimators.KernelEstimator",
406:       "weka.classifiers.meta.AdaBoostM1",
407:       "weka.core.MinkowskiDistance",
408:       "weka.classifiers.functions.VotedPerceptron",
409:       "weka.classifiers.rules.DecisionTable",
410:       "weka.core.Javadoc",
411:       "weka.core.OptionHandlerJavadoc",
412:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
413:       "weka.core.ListOptions",
414:       "weka.core.Check",
415:       "weka.core.CheckGOE",
416:       "weka.core.TechnicalInformationHandlerJavadoc",
417:       "weka.classifiers.meta.MultiScheme",
418:       "weka.core.ChebyshevDistance",
419:       "weka.core.ClassDiscovery",
420:       "weka.core.ClassCache",
421:       "weka.core.AllJavadoc",
422:       "weka.core.CheckOptionHandler",
423:       "weka.core.ManhattanDistance",
424:       "weka.classifiers.functions.GaussianProcesses",
425:       "weka.core.GlobalInfoJavadoc",
426:       "weka.core.SerializationHelper",
427:       "weka.core.neighboursearch.CoverTree$d_node",
428:       "weka.classifiers.trees.j48.PruneableClassifierTree",
429:       "weka.core.neighboursearch.PerformanceStats"
430:     );
431:   }
432: }

[MASTER] 10:46:23.518 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
double[] doubleArray0 = new double[0];
SparseInstance sparseInstance0 = new SparseInstance(0.0, doubleArray0);
naiveBayesMultinomialText0.distributionForInstance(sparseInstance0);

[MASTER] 10:46:29.270 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 10:46:29.373 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1010/107_weka/evosuite-tests
* Done!

* Computation finished
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/rmosa/tests/s1010/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21353
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1010
* Starting evolution
* Search finished after 252s and 243 generations, 110137 statements, best individual has fitness: 2792.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 217
* Number of covered goals: 189
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 283
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 239
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 283
* Generated 87 tests with total length 209
* Resulting test suite's coverage: 75% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 79%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1010/107_weka/evosuite-tests
* Done!

* Computation finished
