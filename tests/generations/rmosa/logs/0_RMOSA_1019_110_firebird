* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: org.firebirdsql.jdbc.FBProcedureCall
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/110_firebird/evosuite-files/evosuite.properties
* Connecting to master process on port 13430
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class org.firebirdsql.jdbc.FBProcedureCall
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1019
* Starting evolution
* Search finished after 323s and 795 generations, 205541 statements, best individual has fitness: 592.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 117
* Number of covered goals: 111
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 89%
* Total number of goals: 98
* Number of covered goals: 87
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 347
* Number of covered goals: 323
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 71%
* Total number of goals: 70
* Number of covered goals: 50
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 94%
* Total number of goals: 18
* Number of covered goals: 17
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 94%
* Total number of goals: 18
* Number of covered goals: 17
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 89%
* Total number of goals: 98
* Number of covered goals: 87
* Generated 80 tests with total length 376
* Resulting test suite's coverage: 91% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 57%
* Compiling and checking tests
[MASTER] 22:23:06.181 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 22:23:06.182 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
fBProcedureCall0.setName("'");
FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
boolean boolean0 = fBProcedureCall0.equals(fBProcedureCall1);
assertFalse(fBProcedureCall1.equals((Object)fBProcedureCall0));
assertTrue(boolean0);


[MASTER] 22:23:07.772 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Requested array size exceeds VM limit
[MASTER] 22:23:07.773 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
fBProcedureCall0.addParam(2147483645, "4>!~tn]le6#(+p4``W");

[MASTER] 22:23:07.817 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Requested array size exceeds VM limit
[MASTER] 22:23:07.817 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
fBProcedureCall0.registerOutParam(2147483645, 2147483645);

[MASTER] 22:23:07.858 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Requested array size exceeds VM limit
[MASTER] 22:23:07.858 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
fBProcedureCall0.getInputParam(2147483645);

[MASTER] 22:23:08.011 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Requested array size exceeds VM limit
[MASTER] 22:23:08.011 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
FBProcedureParam fBProcedureParam0 = new FBProcedureParam(2147483645, "08003");
fBProcedureCall0.addInputParam(fBProcedureParam0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing JUnit test case 'FBProcedureCall_ESTest' to /home/ubuntu/termite/rmosa/tests/s1019/110_firebird/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: org.firebirdsql.jdbc.FBCachedFetcher
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: org.firebirdsql.encodings.EncodingFactory
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/110_firebird/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/110_firebird/evosuite-files/evosuite.properties
* Connecting to master process on port 13430
* Connecting to master process on port 13432
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class org.firebirdsql.encodings.EncodingFactory
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1019
* Starting evolution
[MASTER] 22:56:44.439 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:56:44.452 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:56:44.453 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:56:45.185 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.sql.SQLType
[MASTER] 22:56:46.641 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 22:56:46.641 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 22:56:46.643 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 22:56:48.678 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 22:56:48.701 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 22:56:48.701 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 22:56:48.801 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 22:56:48.803 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 22:56:48.804 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 22:56:48.805 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 22:56:48.848 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 22:56:48.849 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 22:56:49.681 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 22:56:50.153 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class org.firebirdsql.jdbc.FBCachedFetcher
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1019
* Starting evolution
[MASTER] 22:56:59.500 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.firebirdsql.jdbc.FBCachedFetcher.<init>(Lorg/firebirdsql/gds/impl/GDSHelper;IILorg/firebirdsql/gds/impl/AbstractIscStmtHandle;Lorg/firebirdsql/jdbc/FBObjectListener$FetcherListener;Z)V
[MASTER] 22:56:59.509 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.firebirdsql.jdbc.FBCachedFetcher.getRowNum()I
[MASTER] 22:56:59.509 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.firebirdsql.jdbc.FBCachedFetcher.deleteRow()V
[MASTER] 22:56:59.512 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.firebirdsql.jdbc.FBCachedFetcher.isEmpty()Z
[MASTER] 22:56:59.512 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.firebirdsql.jdbc.FBCachedFetcher.first()Z
[MASTER] 22:56:59.513 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.firebirdsql.jdbc.FBCachedFetcher.<init>(Lorg/firebirdsql/gds/impl/GDSHelper;IILorg/firebirdsql/gds/impl/AbstractIscStmtHandle;Lorg/firebirdsql/jdbc/FBObjectListener$FetcherListener;Z)V
[MASTER] 22:56:59.527 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.firebirdsql.jdbc.FBCachedFetcher.getRowNum()I
[MASTER] 22:56:59.527 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.firebirdsql.jdbc.FBCachedFetcher.deleteRow()V
[MASTER] 22:56:59.530 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.firebirdsql.jdbc.FBCachedFetcher.isEmpty()Z
[MASTER] 22:56:59.530 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.firebirdsql.jdbc.FBCachedFetcher.first()Z
[MASTER] 22:57:21.324 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 22:58:49.529 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
[MASTER] 22:59:01.371 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 22:59:03.888 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
* Search finished after 229s and 562 generations, 144831 statements, best individual has fitness: 624.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 94%
* Total number of goals: 242
* Number of covered goals: 228
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 195
* Number of covered goals: 188
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 387
* Number of covered goals: 351
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 48%
* Total number of goals: 25
* Number of covered goals: 12
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 195
* Number of covered goals: 188
* Generated 94 tests with total length 115
* Resulting test suite's coverage: 93% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 39%
* Compiling and checking tests
* Writing JUnit test case 'EncodingFactory_ESTest' to /home/ubuntu/termite/rmosa/tests/s1019/110_firebird/evosuite-tests
* Done!

* Computation finished
* Search finished after 434s and 567 generations, 271647 statements, best individual has fitness: 1600.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 63%
* Total number of goals: 158
* Number of covered goals: 100
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 51%
* Total number of goals: 118
* Number of covered goals: 60
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 15
* Number of covered goals: 15
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 347
* Number of covered goals: 335
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 96%
* Total number of goals: 28
* Number of covered goals: 27
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 40%
* Total number of goals: 118
* Number of covered goals: 47
* Generated 56 tests with total length 287
* Resulting test suite's coverage: 76% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 63%
* Compiling and checking tests
[MASTER] 23:04:30.289 [logback-2] ERROR ClassStateSupport - Could not initialize org.firebirdsql.gds.impl.jni.JniGDSImpl: no jaybird22_x64 in java.library.path
[MASTER] 23:04:30.383 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class org.firebirdsql.gds.impl.jni.JniGDSImpl
* Permissions denied during test execution: 
  - javax.security.auth.AuthPermission: 
         getSubject: 5
* Writing JUnit test case 'FBCachedFetcher_ESTest' to /home/ubuntu/termite/rmosa/tests/s1019/110_firebird/evosuite-tests
* Done!

* Computation finished
