* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 11924
* Connecting to master process on port 11930
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 03:20:02.679 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 03:20:02.693 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 03:20:02.694 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 03:20:02.730 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1023
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 03:20:27.306 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 03:20:27.347 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 03:20:27.359 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 03:20:28.498 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 03:20:29.604 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 03:20:29.606 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 03:20:32.835 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 03:20:32.892 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 03:20:32.893 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 03:20:32.894 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 03:20:32.895 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 03:20:32.896 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 03:20:32.896 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 03:20:32.898 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 03:20:32.899 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 03:20:33.002 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 03:20:33.023 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1023
* Starting evolution
[MASTER] 03:20:47.197 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 03:21:49.529 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 03:22:31.127 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.evaluationForSingleInstance([DLweka/core/Instance;Z)D
* Search finished after 343s and 49 generations, 44790 statements, best individual has fitness: 2184.0
* Search finished after 317s and 118 generations, 74087 statements, best individual has fitness: 14048.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 62%
* Total number of goals: 1378
* Number of covered goals: 857
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 47%
* Total number of goals: 809
* Number of covered goals: 384
* Coverage analysis for criterion EXCEPTION
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 78
* Number of covered goals: 78
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 67%
* Total number of goals: 424
* Number of covered goals: 282
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 24%
* Total number of goals: 278
* Number of covered goals: 68
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion LINE: 98%
* Total number of goals: 647
* Number of covered goals: 631
* Coverage analysis for criterion BRANCH
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 45%
* Total number of goals: 809
* Number of covered goals: 366
* Coverage of criterion BRANCH: 95%
* Total number of goals: 441
* Number of covered goals: 420
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 678
* Number of covered goals: 617
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 43%
* Total number of goals: 244
* Number of covered goals: 106
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 124
* Number of covered goals: 124
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 124
* Number of covered goals: 124
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 92%
* Total number of goals: 441
* Number of covered goals: 406
* Generated 179 tests with total length 2197
* Resulting test suite's coverage: 56% (average coverage for all fitness functions)
* Generating assertions
* Generated 214 tests with total length 3678
* Resulting test suite's coverage: 90% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 03:31:29.224 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6762958333333333% of time used, but only 71/214 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 9%
* Compiling and checking tests
[MASTER] 03:31:52.625 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 03:31:53.009 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 03:31:53.009 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 03:31:54.637 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
* Permissions denied during test execution: 
[MASTER] 03:32:54.681 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/rmosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 11926
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 11925
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 11928
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Using seed 1023
* Starting evolution
[MASTER] 03:33:31.069 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 03:33:31.083 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 03:33:31.084 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 03:33:31.309 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 03:33:31.327 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 03:33:31.329 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1023
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 03:33:44.612 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 03:33:44.616 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 03:33:44.617 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 03:33:44.656 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1023
* Starting evolution
[MASTER] 03:33:48.543 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Search finished after 234s and 243 generations, 93282 statements, best individual has fitness: 2736.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 217
* Number of covered goals: 191
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 285
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 240
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 285
* Generated 89 tests with total length 256
* Resulting test suite's coverage: 75% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 03:37:45.666 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
* Search finished after 242s and 128 generations, 93191 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 22 tests with total length 183
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 78%
* Compiling and checking tests
* Resulting test suite's mutation score: 14%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
* Search finished after 280s and 369 generations, 176318 statements, best individual has fitness: 4128.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 71%
* Total number of goals: 370
* Number of covered goals: 264
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 60%
* Total number of goals: 242
* Number of covered goals: 146
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 32
* Number of covered goals: 32
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 74%
* Total number of goals: 713
* Number of covered goals: 530
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 53%
* Total number of goals: 72
* Number of covered goals: 38
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 60%
* Total number of goals: 242
* Number of covered goals: 146
* Generated 88 tests with total length 632
* Resulting test suite's coverage: 71% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 29%
* Compiling and checking tests
[MASTER] 03:40:41.966 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 03:40:41.996 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 03:40:42.531 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 03:40:42.531 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 03:41:08.816 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 03:41:08.819 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
double[][] doubleArray0 = new double[7][4];
discretize0.m_CutPoints = doubleArray0;
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("'B1of2'", arrayList0, 864);
Attribute attribute0 = new Attribute("// generate output format", instances0);
arrayList0.add(attribute0);
Instances instances1 = new Instances(")", arrayList0, 0);
discretize0.setInputFormat(instances1);

[MASTER] 03:41:11.273 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 03:41:11.274 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("'B1of2'", arrayList0, 864);
Attribute attribute0 = new Attribute("// generate output format", instances0);
arrayList0.add(attribute0);
Instances instances1 = new Instances(")", arrayList0, 0);
discretize0.setInputFormat(instances1);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 11926
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 03:48:16.210 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 03:48:16.256 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 03:48:16.285 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 03:48:20.645 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 03:48:21.461 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 03:48:21.463 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1023
* Starting evolution
[MASTER] 03:48:26.650 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.<init>(Lweka/classifiers/rules/JRip;)V
* Search finished after 269s and 262 generations, 118187 statements, best individual has fitness: 12488.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 36%
* Total number of goals: 705
* Number of covered goals: 254
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 109
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 56%
* Total number of goals: 993
* Number of covered goals: 557
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 30%
* Total number of goals: 93
* Number of covered goals: 28
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 97%
* Total number of goals: 72
* Number of covered goals: 70
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 97%
* Total number of goals: 72
* Number of covered goals: 70
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 109
* Generated 74 tests with total length 612
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 21%
* Compiling and checking tests
[MASTER] 03:53:53.186 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 03:53:54.134 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 11924
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 04:07:54.173 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 04:07:54.173 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 04:07:54.175 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 04:07:54.336 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:07:54.353 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:07:54.360 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1023
* Starting evolution
[MASTER] 04:08:01.357 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 04:08:01.357 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 04:08:03.040 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V: Line 525
[MASTER] 04:08:03.076 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V: I3 Branch 47 IFNULL L524 - false
[MASTER] 04:08:03.089 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 240: weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V:525 - ReplaceVariable value -> m_stemmer
[MASTER] 04:08:03.097 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V
[MASTER] 04:08:03.100 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V
[MASTER] 04:08:03.103 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V: I3 Branch 47 IFNULL L524 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStemmer(Lweka/core/stemmers/Stemmer;)V
[MASTER] 04:08:16.489 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I3 Branch 48 IFNONNULL L828 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStopwords(Ljava/io/File;)V
[MASTER] 04:09:31.268 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 311s and 315 generations, 201828 statements, best individual has fitness: 1376.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 91%
* Total number of goals: 338
* Number of covered goals: 308
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 87%
* Total number of goals: 194
* Number of covered goals: 168
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 25
* Number of covered goals: 25
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 476
* Number of covered goals: 444
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 53%
* Total number of goals: 112
* Number of covered goals: 59
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 85%
* Total number of goals: 194
* Number of covered goals: 165
* Generated 94 tests with total length 829
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 61%
* Compiling and checking tests
[MASTER] 04:17:13.922 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_34_1575346633886/weka/classifiers/bayes/NaiveBayesMultinomialText_34_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_34_1575346633886/weka/classifiers/bayes/NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding.java]]
[MASTER] 04:17:13.923 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:17:13.923 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:17:13.926 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 04:17:13.926 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 04:17:13.927 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_34_1575346633886/weka/classifiers/bayes/NaiveBayesMultinomialText_34_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 04:17:13 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.io.File;
12: import java.util.LinkedHashMap;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.mock.java.io.MockFile;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.core.BinarySparseInstance;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_34_tmp__ESTest extends NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=1.5531577432135641
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       naiveBayesMultinomialText0.setUseStopList(true);
31:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>(210);
32:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
33:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(210);
34:       naiveBayesMultinomialText0.m_norm = (double) 210;
35:       MockFile mockFile0 = new MockFile("hELz%/r(cqM", "hELz%/r(cqM");
36:       naiveBayesMultinomialText0.m_stopwordsFile = (File) mockFile0;
37:       try { 
38:         naiveBayesMultinomialText0.distributionForInstance(binarySparseInstance0);
39:         fail("Expecting exception: RuntimeException");
40:       
41:       } catch(RuntimeException e) {
42:          //
43:          // DenseInstance doesn't have access to a dataset!
44:          //
45:          verifyException("weka.core.AbstractInstance", e);
46:       }
47:   }
48: }
RegularFileObject[/tmp/EvoSuite_34_1575346633886/weka/classifiers/bayes/NaiveBayesMultinomialText_34_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 04:17:13 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.classifiers.rules.part.C45PruneableDecList",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.classifiers.trees.m5.M5Base",
98:       "weka.classifiers.CostMatrix",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.classifiers.rules.PART",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.core.DenseInstance",
104:       "weka.classifiers.functions.LinearRegression",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
107:       "org.pentaho.packageManagement.DefaultPackageManager",
108:       "org.bounce.net.DefaultAuthenticator",
109:       "weka.classifiers.bayes.NaiveBayes",
110:       "weka.estimators.IncrementalEstimator",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.core.EnvironmentHandler",
113:       "weka.classifiers.trees.j48.C45ModelSelection",
114:       "weka.classifiers.functions.SGDText",
115:       "weka.classifiers.trees.m5.RuleNode",
116:       "weka.classifiers.functions.SMO$BinarySMO",
117:       "weka.core.Utils",
118:       "weka.core.tokenizers.Tokenizer",
119:       "weka.core.NoSupportForMissingValuesException",
120:       "weka.classifiers.UpdateableClassifier",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
122:       "weka.core.TechnicalInformation$Type",
123:       "weka.core.MultiInstanceCapabilitiesHandler",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.core.BinarySparseInstance",
127:       "weka.filters.supervised.attribute.NominalToBinary",
128:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
129:       "weka.classifiers.functions.supportVector.CachedKernel",
130:       "weka.core.SerializedObject",
131:       "weka.clusterers.UpdateableClusterer",
132:       "weka.core.Summarizable",
133:       "weka.classifiers.trees.j48.ModelSelection",
134:       "weka.core.AdditionalMeasureProducer",
135:       "weka.core.neighboursearch.balltrees.BallNode",
136:       "org.pentaho.packageManagement.PackageManager$1",
137:       "weka.core.Drawable",
138:       "weka.core.matrix.Matrix",
139:       "weka.classifiers.ConditionalDensityEstimator",
140:       "weka.core.CapabilitiesHandler",
141:       "weka.classifiers.rules.part.ClassifierDecList",
142:       "weka.attributeSelection.ASEvaluation",
143:       "weka.core.AbstractInstance",
144:       "weka.classifiers.lazy.kstar.KStarConstants",
145:       "weka.core.SelectedTag",
146:       "org.pentaho.packageManagement.DefaultPackage",
147:       "weka.estimators.DiscreteEstimator",
148:       "weka.classifiers.misc.InputMappedClassifier",
149:       "weka.core.Version",
150:       "weka.filters.unsupervised.attribute.RemoveUseless",
151:       "weka.core.Tag",
152:       "weka.classifiers.trees.j48.BinC45ModelSelection",
153:       "weka.classifiers.AbstractClassifier",
154:       "weka.filters.unsupervised.attribute.Center",
155:       "weka.core.OptionHandler",
156:       "weka.core.WekaException",
157:       "weka.classifiers.trees.RandomForest",
158:       "weka.filters.StreamableFilter",
159:       "weka.core.PartitionGenerator",
160:       "weka.classifiers.Classifier",
161:       "weka.core.Capabilities$Capability",
162:       "weka.core.SparseInstance",
163:       "org.pentaho.packageManagement.PackageManager",
164:       "weka.estimators.PoissonEstimator",
165:       "weka.core.WekaEnumeration",
166:       "weka.attributeSelection.AttributeTransformer",
167:       "weka.core.tokenizers.WordTokenizer",
168:       "weka.classifiers.misc.SerializedClassifier",
169:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
170:       "weka.attributeSelection.PrincipalComponents",
171:       "weka.core.stemmers.SnowballStemmer",
172:       "weka.core.stemmers.LovinsStemmer",
173:       "weka.classifiers.Evaluation",
174:       "weka.classifiers.functions.supportVector.Kernel",
175:       "weka.core.WekaPackageManager",
176:       "weka.filters.SupervisedFilter",
177:       "weka.classifiers.functions.SMO",
178:       "weka.core.TechnicalInformationHandler",
179:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
180:       "weka.core.Option",
181:       "weka.classifiers.meta.CostSensitiveClassifier",
182:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
183:       "weka.filters.Sourcable",
184:       "weka.core.Attribute",
185:       "weka.core.Stopwords",
186:       "weka.core.FastVector",
187:       "weka.core.UnassignedDatasetException",
188:       "weka.core.tokenizers.NGramTokenizer",
189:       "weka.classifiers.RandomizableClassifier",
190:       "weka.classifiers.trees.RandomTree",
191:       "weka.classifiers.SingleClassifierEnhancer",
192:       "weka.core.RevisionUtils",
193:       "weka.core.Instance",
194:       "weka.classifiers.rules.part.MakeDecList",
195:       "weka.classifiers.lazy.KStar",
196:       "weka.classifiers.functions.supportVector.PolyKernel",
197:       "weka.estimators.Estimator",
198:       "weka.core.ProtectedProperties",
199:       "weka.classifiers.IntervalEstimator",
200:       "weka.core.AttributeStats",
201:       "weka.core.WeightedInstancesHandler",
202:       "weka.classifiers.functions.GaussianProcesses",
203:       "weka.core.TechnicalInformation$Field",
204:       "weka.filters.unsupervised.attribute.Remove",
205:       "weka.core.Randomizable",
206:       "weka.classifiers.rules.M5Rules",
207:       "weka.core.Instances",
208:       "weka.classifiers.rules.part.PruneableDecList",
209:       "weka.filters.unsupervised.attribute.Normalize",
210:       "weka.core.UnassignedClassException",
211:       "weka.classifiers.rules.ZeroR",
212:       "weka.core.stemmers.IteratedLovinsStemmer",
213:       "weka.filters.unsupervised.attribute.Standardize",
214:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
215:       "weka.core.TechnicalInformation",
216:       "weka.core.UnsupportedAttributeTypeException",
217:       "weka.classifiers.Sourcable",
218:       "weka.core.RevisionHandler",
219:       "weka.classifiers.evaluation.output.prediction.PlainText",
220:       "weka.core.xml.XMLSerialization",
221:       "weka.classifiers.xml.XMLClassifier",
222:       "weka.filters.Filter",
223:       "weka.filters.supervised.attribute.Discretize"
224:     );
225:   } 
226: 
227:   private static void resetClasses() {
228:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding.class.getClassLoader()); 
229: 
230:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
231:       "weka.classifiers.AbstractClassifier",
232:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
233:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
234:       "weka.core.Capabilities$Capability",
235:       "weka.core.tokenizers.Tokenizer",
236:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
237:       "weka.core.tokenizers.WordTokenizer",
238:       "weka.core.stemmers.NullStemmer",
239:       "weka.core.Utils",
240:       "weka.core.AbstractInstance",
241:       "weka.core.SparseInstance",
242:       "weka.classifiers.Evaluation",
243:       "weka.core.Option",
244:       "weka.core.UnassignedDatasetException",
245:       "weka.core.stemmers.SnowballStemmer",
246:       "weka.core.BinarySparseInstance",
247:       "weka.core.SerializedObject",
248:       "weka.classifiers.RandomizableClassifier",
249:       "weka.core.Tag",
250:       "weka.classifiers.functions.SGDText",
251:       "weka.core.FindWithCapabilities",
252:       "weka.core.Capabilities",
253:       "org.pentaho.packageManagement.PackageManager",
254:       "org.pentaho.packageManagement.DefaultPackageManager",
255:       "weka.core.Version",
256:       "weka.core.Environment",
257:       "weka.core.WekaPackageManager",
258:       "weka.core.SingleIndex",
259:       "weka.classifiers.SingleClassifierEnhancer",
260:       "weka.classifiers.IteratedSingleClassifierEnhancer",
261:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
262:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
263:       "weka.classifiers.meta.Bagging",
264:       "weka.classifiers.rules.ZeroR",
265:       "weka.classifiers.trees.REPTree",
266:       "weka.core.Attribute",
267:       "weka.core.ProtectedProperties",
268:       "weka.core.RevisionUtils",
269:       "weka.classifiers.bayes.BayesNet",
270:       "weka.classifiers.bayes.net.BIFReader",
271:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
272:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
273:       "weka.classifiers.bayes.net.search.local.K2",
274:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
275:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
276:       "weka.classifiers.bayes.NaiveBayes",
277:       "weka.core.stemmers.LovinsStemmer",
278:       "weka.core.stemmers.IteratedLovinsStemmer",
279:       "weka.core.TechnicalInformation",
280:       "weka.core.TechnicalInformation$Type",
281:       "weka.core.TechnicalInformation$Field",
282:       "weka.core.tokenizers.NGramTokenizer",
283:       "weka.classifiers.misc.InputMappedClassifier",
284:       "weka.core.DenseInstance",
285:       "weka.classifiers.functions.supportVector.Kernel",
286:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
287:       "weka.filters.Filter",
288:       "weka.filters.supervised.attribute.Discretize",
289:       "weka.core.Range",
290:       "weka.classifiers.lazy.IBk",
291:       "weka.core.neighboursearch.NearestNeighbourSearch",
292:       "weka.core.neighboursearch.LinearNNSearch",
293:       "weka.core.NormalizableDistance",
294:       "weka.core.EuclideanDistance",
295:       "weka.core.TestInstances",
296:       "weka.attributeSelection.ASEvaluation",
297:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
298:       "weka.attributeSelection.PrincipalComponents",
299:       "weka.core.Instances",
300:       "weka.core.converters.ArffLoader$ArffReader",
301:       "weka.core.neighboursearch.CoverTree",
302:       "weka.core.Stopwords",
303:       "weka.core.neighboursearch.balltrees.BallNode",
304:       "weka.classifiers.misc.SerializedClassifier",
305:       "weka.core.neighboursearch.BallTree",
306:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
307:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
308:       "weka.core.neighboursearch.balltrees.BallSplitter",
309:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
310:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
311:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
312:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
313:       "weka.classifiers.functions.Logistic",
314:       "weka.core.Javadoc",
315:       "weka.core.OptionHandlerJavadoc",
316:       "weka.classifiers.rules.OneR",
317:       "weka.core.neighboursearch.KDTree",
318:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
319:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
320:       "weka.classifiers.bayes.NaiveBayesUpdateable",
321:       "weka.core.WekaException",
322:       "weka.core.SelectedTag",
323:       "weka.classifiers.CostMatrix",
324:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
325:       "weka.classifiers.meta.CostSensitiveClassifier",
326:       "weka.core.stemmers.Stemming",
327:       "weka.classifiers.functions.GaussianProcesses",
328:       "weka.classifiers.functions.supportVector.CachedKernel",
329:       "weka.classifiers.functions.supportVector.PolyKernel",
330:       "weka.core.UnsupportedAttributeTypeException",
331:       "weka.core.matrix.Matrix",
332:       "weka.core.WekaEnumeration",
333:       "weka.core.Attribute$1",
334:       "weka.classifiers.rules.PART",
335:       "weka.classifiers.rules.part.MakeDecList",
336:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
337:       "weka.classifiers.trees.m5.M5Base",
338:       "weka.classifiers.rules.M5Rules",
339:       "weka.classifiers.functions.LinearRegression",
340:       "weka.filters.SimpleFilter",
341:       "weka.filters.SimpleStreamFilter",
342:       "weka.filters.MultiFilter",
343:       "weka.filters.AllFilter",
344:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
345:       "weka.classifiers.functions.SimpleLinearRegression",
346:       "weka.core.tokenizers.AlphabeticTokenizer",
347:       "weka.attributeSelection.CfsSubsetEval",
348:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
349:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
350:       "weka.classifiers.bayes.NaiveBayesMultinomial",
351:       "weka.classifiers.functions.supportVector.Puk",
352:       "weka.classifiers.functions.supportVector.StringKernel",
353:       "weka.classifiers.meta.AdditiveRegression",
354:       "weka.classifiers.trees.DecisionStump",
355:       "weka.attributeSelection.CorrelationAttributeEval",
356:       "weka.estimators.Estimator",
357:       "weka.estimators.MahalanobisEstimator",
358:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
359:       "weka.classifiers.meta.AdaBoostM1",
360:       "weka.classifiers.functions.supportVector.RBFKernel",
361:       "weka.classifiers.functions.SMOreg",
362:       "weka.classifiers.functions.supportVector.RegOptimizer",
363:       "weka.classifiers.functions.supportVector.RegSMO",
364:       "weka.classifiers.functions.supportVector.RegSMOImproved",
365:       "weka.estimators.NormalEstimator",
366:       "weka.core.UnassignedClassException",
367:       "weka.estimators.DiscreteEstimator",
368:       "weka.classifiers.lazy.LWL",
369:       "weka.attributeSelection.ReliefFAttributeEval",
370:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
371:       "weka.classifiers.functions.VotedPerceptron",
372:       "weka.classifiers.meta.CVParameterSelection",
373:       "weka.core.FastVector",
374:       "weka.classifiers.trees.RandomTree",
375:       "weka.estimators.PoissonEstimator",
376:       "weka.classifiers.functions.SMO",
377:       "weka.attributeSelection.GainRatioAttributeEval",
378:       "weka.attributeSelection.WrapperSubsetEval",
379:       "weka.classifiers.trees.RandomForest",
380:       "weka.attributeSelection.OneRAttributeEval",
381:       "weka.classifiers.meta.AttributeSelectedClassifier",
382:       "weka.attributeSelection.ASSearch",
383:       "weka.attributeSelection.BestFirst",
384:       "weka.classifiers.trees.J48",
385:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
386:       "weka.classifiers.meta.LogitBoost",
387:       "weka.classifiers.functions.SGD",
388:       "weka.classifiers.meta.ClassificationViaRegression",
389:       "weka.classifiers.trees.M5P",
390:       "weka.classifiers.meta.RegressionByDiscretization",
391:       "weka.filters.unsupervised.attribute.Discretize",
392:       "weka.classifiers.trees.j48.ClassifierTree",
393:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
394:       "weka.core.ListOptions",
395:       "weka.classifiers.rules.DecisionTable",
396:       "weka.classifiers.rules.JRip",
397:       "weka.classifiers.meta.RandomCommittee",
398:       "weka.classifiers.meta.MultiClassClassifier",
399:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
400:       "weka.classifiers.functions.MultilayerPerceptron",
401:       "weka.filters.unsupervised.attribute.NominalToBinary",
402:       "weka.classifiers.functions.neural.SigmoidUnit",
403:       "weka.classifiers.functions.neural.LinearUnit",
404:       "weka.core.Queue",
405:       "weka.core.AttributeLocator",
406:       "weka.core.StringLocator",
407:       "weka.core.RelationalLocator",
408:       "weka.core.ContingencyTables",
409:       "weka.core.Queue$QueueNode",
410:       "weka.classifiers.meta.FilteredClassifier",
411:       "weka.filters.supervised.attribute.AttributeSelection",
412:       "weka.attributeSelection.AttributeSelection",
413:       "weka.attributeSelection.GreedyStepwise",
414:       "weka.classifiers.functions.SimpleLogistic",
415:       "weka.core.AttributeStats",
416:       "weka.attributeSelection.InfoGainAttributeEval",
417:       "weka.core.ClassDiscovery",
418:       "weka.classifiers.MultipleClassifiersCombiner",
419:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
420:       "weka.classifiers.meta.MultiScheme",
421:       "weka.classifiers.meta.Vote",
422:       "weka.classifiers.lazy.KStar",
423:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
424:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
425:       "weka.classifiers.meta.Stacking",
426:       "weka.core.ManhattanDistance",
427:       "weka.classifiers.meta.RandomSubSpace",
428:       "weka.estimators.KernelEstimator",
429:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
430:       "weka.classifiers.trees.LMT",
431:       "weka.core.SerializationHelper",
432:       "weka.classifiers.bayes.net.ADNode",
433:       "weka.core.Check",
434:       "weka.core.CheckOptionHandler",
435:       "weka.core.converters.ConverterUtils$DataSource",
436:       "weka.core.converters.AbstractLoader",
437:       "weka.core.converters.AbstractFileLoader",
438:       "weka.core.converters.ArffLoader",
439:       "weka.classifiers.functions.neural.NeuralConnection",
440:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
441:       "weka.experiment.Stats",
442:       "weka.classifiers.functions.SMO$BinarySMO"
443:     );
444:   }
445: }

[MASTER] 04:17:13.928 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setUseStopList(true);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>(210);
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(210);
naiveBayesMultinomialText0.m_norm = (double) 210;
MockFile mockFile0 = new MockFile("hELz%/r(cqM", "hELz%/r(cqM");
naiveBayesMultinomialText0.m_stopwordsFile = (File) mockFile0;
naiveBayesMultinomialText0.distributionForInstance(binarySparseInstance0);

[MASTER] 04:17:13.996 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_36_1575346633963/weka/classifiers/bayes/NaiveBayesMultinomialText_36_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_36_1575346633963/weka/classifiers/bayes/NaiveBayesMultinomialText_36_tmp__ESTest_scaffolding.java]]
[MASTER] 04:17:13.996 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:17:13.996 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:17:13.996 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 04:17:13.996 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 04:17:13.997 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 04:17:13.998 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_36_1575346633963/weka/classifiers/bayes/NaiveBayesMultinomialText_36_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 04:17:13 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_36_tmp__ESTest extends NaiveBayesMultinomialText_36_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=0.4
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
29:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
30:       naiveBayesMultinomialText0.m_normalize = true;
31:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
32:       
33:       naiveBayesMultinomialText0.m_periodicP = 3719;
34:       naiveBayesMultinomialText0.pruneDictionary();
35:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
36:   }
37: }
RegularFileObject[/tmp/EvoSuite_36_1575346633963/weka/classifiers/bayes/NaiveBayesMultinomialText_36_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 04:17:13 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_36_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_36_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.classifiers.rules.part.C45PruneableDecList",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.classifiers.trees.m5.M5Base",
98:       "weka.classifiers.CostMatrix",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.classifiers.rules.PART",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.core.DenseInstance",
104:       "weka.classifiers.functions.LinearRegression",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
107:       "org.pentaho.packageManagement.DefaultPackageManager",
108:       "org.bounce.net.DefaultAuthenticator",
109:       "weka.classifiers.bayes.NaiveBayes",
110:       "weka.estimators.IncrementalEstimator",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.core.EnvironmentHandler",
113:       "weka.classifiers.trees.j48.C45ModelSelection",
114:       "weka.classifiers.functions.SGDText",
115:       "weka.classifiers.trees.m5.RuleNode",
116:       "weka.classifiers.functions.SMO$BinarySMO",
117:       "weka.core.Utils",
118:       "weka.core.tokenizers.Tokenizer",
119:       "weka.core.NoSupportForMissingValuesException",
120:       "weka.classifiers.UpdateableClassifier",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
122:       "weka.core.TechnicalInformation$Type",
123:       "weka.core.MultiInstanceCapabilitiesHandler",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.core.BinarySparseInstance",
127:       "weka.filters.supervised.attribute.NominalToBinary",
128:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
129:       "weka.classifiers.functions.supportVector.CachedKernel",
130:       "weka.core.SerializedObject",
131:       "weka.clusterers.UpdateableClusterer",
132:       "weka.core.Summarizable",
133:       "weka.classifiers.trees.j48.ModelSelection",
134:       "weka.core.AdditionalMeasureProducer",
135:       "weka.core.neighboursearch.balltrees.BallNode",
136:       "org.pentaho.packageManagement.PackageManager$1",
137:       "weka.core.Drawable",
138:       "weka.core.matrix.Matrix",
139:       "weka.classifiers.ConditionalDensityEstimator",
140:       "weka.core.CapabilitiesHandler",
141:       "weka.classifiers.rules.part.ClassifierDecList",
142:       "weka.attributeSelection.ASEvaluation",
143:       "weka.core.AbstractInstance",
144:       "weka.classifiers.lazy.kstar.KStarConstants",
145:       "weka.core.SelectedTag",
146:       "org.pentaho.packageManagement.DefaultPackage",
147:       "weka.estimators.DiscreteEstimator",
148:       "weka.classifiers.misc.InputMappedClassifier",
149:       "weka.core.Version",
150:       "weka.filters.unsupervised.attribute.RemoveUseless",
151:       "weka.core.Tag",
152:       "weka.classifiers.trees.j48.BinC45ModelSelection",
153:       "weka.classifiers.AbstractClassifier",
154:       "weka.filters.unsupervised.attribute.Center",
155:       "weka.core.OptionHandler",
156:       "weka.core.WekaException",
157:       "weka.classifiers.trees.RandomForest",
158:       "weka.filters.StreamableFilter",
159:       "weka.core.PartitionGenerator",
160:       "weka.classifiers.Classifier",
161:       "weka.core.Capabilities$Capability",
162:       "weka.core.SparseInstance",
163:       "org.pentaho.packageManagement.PackageManager",
164:       "weka.estimators.PoissonEstimator",
165:       "weka.core.WekaEnumeration",
166:       "weka.attributeSelection.AttributeTransformer",
167:       "weka.core.tokenizers.WordTokenizer",
168:       "weka.classifiers.misc.SerializedClassifier",
169:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
170:       "weka.attributeSelection.PrincipalComponents",
171:       "weka.core.stemmers.SnowballStemmer",
172:       "weka.core.stemmers.LovinsStemmer",
173:       "weka.classifiers.Evaluation",
174:       "weka.classifiers.functions.supportVector.Kernel",
175:       "weka.core.WekaPackageManager",
176:       "weka.filters.SupervisedFilter",
177:       "weka.classifiers.functions.SMO",
178:       "weka.core.TechnicalInformationHandler",
179:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
180:       "weka.core.Option",
181:       "weka.classifiers.meta.CostSensitiveClassifier",
182:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
183:       "weka.filters.Sourcable",
184:       "weka.core.Attribute",
185:       "weka.core.Stopwords",
186:       "weka.core.FastVector",
187:       "weka.core.UnassignedDatasetException",
188:       "weka.core.tokenizers.NGramTokenizer",
189:       "weka.classifiers.RandomizableClassifier",
190:       "weka.classifiers.trees.RandomTree",
191:       "weka.classifiers.SingleClassifierEnhancer",
192:       "weka.core.RevisionUtils",
193:       "weka.core.Instance",
194:       "weka.classifiers.rules.part.MakeDecList",
195:       "weka.classifiers.lazy.KStar",
196:       "weka.classifiers.functions.supportVector.PolyKernel",
197:       "weka.estimators.Estimator",
198:       "weka.core.ProtectedProperties",
199:       "weka.classifiers.IntervalEstimator",
200:       "weka.core.AttributeStats",
201:       "weka.core.WeightedInstancesHandler",
202:       "weka.classifiers.functions.GaussianProcesses",
203:       "weka.core.TechnicalInformation$Field",
204:       "weka.filters.unsupervised.attribute.Remove",
205:       "weka.core.Randomizable",
206:       "weka.classifiers.rules.M5Rules",
207:       "weka.core.Instances",
208:       "weka.classifiers.rules.part.PruneableDecList",
209:       "weka.filters.unsupervised.attribute.Normalize",
210:       "weka.core.UnassignedClassException",
211:       "weka.classifiers.rules.ZeroR",
212:       "weka.core.stemmers.IteratedLovinsStemmer",
213:       "weka.filters.unsupervised.attribute.Standardize",
214:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
215:       "weka.core.TechnicalInformation",
216:       "weka.core.UnsupportedAttributeTypeException",
217:       "weka.classifiers.Sourcable",
218:       "weka.core.RevisionHandler",
219:       "weka.classifiers.evaluation.output.prediction.PlainText",
220:       "weka.core.xml.XMLSerialization",
221:       "weka.classifiers.xml.XMLClassifier",
222:       "weka.filters.Filter",
223:       "weka.filters.supervised.attribute.Discretize"
224:     );
225:   } 
226: 
227:   private static void resetClasses() {
228:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_36_tmp__ESTest_scaffolding.class.getClassLoader()); 
229: 
230:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
231:       "weka.classifiers.AbstractClassifier",
232:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
233:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
234:       "weka.core.Capabilities$Capability",
235:       "weka.core.tokenizers.Tokenizer",
236:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
237:       "weka.core.tokenizers.WordTokenizer",
238:       "weka.core.stemmers.NullStemmer",
239:       "weka.core.Utils",
240:       "weka.core.AbstractInstance",
241:       "weka.core.SparseInstance",
242:       "weka.classifiers.Evaluation",
243:       "weka.core.Option",
244:       "weka.core.UnassignedDatasetException",
245:       "weka.core.stemmers.SnowballStemmer",
246:       "weka.core.BinarySparseInstance",
247:       "weka.core.SerializedObject",
248:       "weka.classifiers.RandomizableClassifier",
249:       "weka.core.Tag",
250:       "weka.classifiers.functions.SGDText",
251:       "weka.core.FindWithCapabilities",
252:       "weka.core.Capabilities",
253:       "org.pentaho.packageManagement.PackageManager",
254:       "org.pentaho.packageManagement.DefaultPackageManager",
255:       "weka.core.Version",
256:       "weka.core.Environment",
257:       "weka.core.WekaPackageManager",
258:       "weka.core.SingleIndex",
259:       "weka.classifiers.SingleClassifierEnhancer",
260:       "weka.classifiers.IteratedSingleClassifierEnhancer",
261:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
262:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
263:       "weka.classifiers.meta.Bagging",
264:       "weka.classifiers.rules.ZeroR",
265:       "weka.classifiers.trees.REPTree",
266:       "weka.core.Attribute",
267:       "weka.core.ProtectedProperties",
268:       "weka.core.RevisionUtils",
269:       "weka.classifiers.bayes.BayesNet",
270:       "weka.classifiers.bayes.net.BIFReader",
271:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
272:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
273:       "weka.classifiers.bayes.net.search.local.K2",
274:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
275:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
276:       "weka.classifiers.bayes.NaiveBayes",
277:       "weka.core.stemmers.LovinsStemmer",
278:       "weka.core.stemmers.IteratedLovinsStemmer",
279:       "weka.core.TechnicalInformation",
280:       "weka.core.TechnicalInformation$Type",
281:       "weka.core.TechnicalInformation$Field",
282:       "weka.core.tokenizers.NGramTokenizer",
283:       "weka.classifiers.misc.InputMappedClassifier",
284:       "weka.core.DenseInstance",
285:       "weka.classifiers.functions.supportVector.Kernel",
286:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
287:       "weka.filters.Filter",
288:       "weka.filters.supervised.attribute.Discretize",
289:       "weka.core.Range",
290:       "weka.classifiers.lazy.IBk",
291:       "weka.core.neighboursearch.NearestNeighbourSearch",
292:       "weka.core.neighboursearch.LinearNNSearch",
293:       "weka.core.NormalizableDistance",
294:       "weka.core.EuclideanDistance",
295:       "weka.core.TestInstances",
296:       "weka.attributeSelection.ASEvaluation",
297:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
298:       "weka.attributeSelection.PrincipalComponents",
299:       "weka.core.Instances",
300:       "weka.core.converters.ArffLoader$ArffReader",
301:       "weka.core.neighboursearch.CoverTree",
302:       "weka.core.Stopwords",
303:       "weka.core.neighboursearch.balltrees.BallNode",
304:       "weka.classifiers.misc.SerializedClassifier",
305:       "weka.core.neighboursearch.BallTree",
306:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
307:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
308:       "weka.core.neighboursearch.balltrees.BallSplitter",
309:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
310:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
311:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
312:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
313:       "weka.classifiers.functions.Logistic",
314:       "weka.core.Javadoc",
315:       "weka.core.OptionHandlerJavadoc",
316:       "weka.classifiers.rules.OneR",
317:       "weka.core.neighboursearch.KDTree",
318:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
319:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
320:       "weka.classifiers.bayes.NaiveBayesUpdateable",
321:       "weka.core.WekaException",
322:       "weka.core.SelectedTag",
323:       "weka.classifiers.CostMatrix",
324:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
325:       "weka.classifiers.meta.CostSensitiveClassifier",
326:       "weka.core.stemmers.Stemming",
327:       "weka.classifiers.functions.GaussianProcesses",
328:       "weka.classifiers.functions.supportVector.CachedKernel",
329:       "weka.classifiers.functions.supportVector.PolyKernel",
330:       "weka.core.UnsupportedAttributeTypeException",
331:       "weka.core.matrix.Matrix",
332:       "weka.core.WekaEnumeration",
333:       "weka.core.Attribute$1",
334:       "weka.classifiers.rules.PART",
335:       "weka.classifiers.rules.part.MakeDecList",
336:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
337:       "weka.classifiers.trees.m5.M5Base",
338:       "weka.classifiers.rules.M5Rules",
339:       "weka.classifiers.functions.LinearRegression",
340:       "weka.filters.SimpleFilter",
341:       "weka.filters.SimpleStreamFilter",
342:       "weka.filters.MultiFilter",
343:       "weka.filters.AllFilter",
344:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
345:       "weka.classifiers.functions.SimpleLinearRegression",
346:       "weka.core.tokenizers.AlphabeticTokenizer",
347:       "weka.attributeSelection.CfsSubsetEval",
348:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
349:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
350:       "weka.classifiers.bayes.NaiveBayesMultinomial",
351:       "weka.classifiers.functions.supportVector.Puk",
352:       "weka.classifiers.functions.supportVector.StringKernel",
353:       "weka.classifiers.meta.AdditiveRegression",
354:       "weka.classifiers.trees.DecisionStump",
355:       "weka.attributeSelection.CorrelationAttributeEval",
356:       "weka.estimators.Estimator",
357:       "weka.estimators.MahalanobisEstimator",
358:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
359:       "weka.classifiers.meta.AdaBoostM1",
360:       "weka.classifiers.functions.supportVector.RBFKernel",
361:       "weka.classifiers.functions.SMOreg",
362:       "weka.classifiers.functions.supportVector.RegOptimizer",
363:       "weka.classifiers.functions.supportVector.RegSMO",
364:       "weka.classifiers.functions.supportVector.RegSMOImproved",
365:       "weka.estimators.NormalEstimator",
366:       "weka.core.UnassignedClassException",
367:       "weka.estimators.DiscreteEstimator",
368:       "weka.classifiers.lazy.LWL",
369:       "weka.attributeSelection.ReliefFAttributeEval",
370:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
371:       "weka.classifiers.functions.VotedPerceptron",
372:       "weka.classifiers.meta.CVParameterSelection",
373:       "weka.core.FastVector",
374:       "weka.classifiers.trees.RandomTree",
375:       "weka.estimators.PoissonEstimator",
376:       "weka.classifiers.functions.SMO",
377:       "weka.attributeSelection.GainRatioAttributeEval",
378:       "weka.attributeSelection.WrapperSubsetEval",
379:       "weka.classifiers.trees.RandomForest",
380:       "weka.attributeSelection.OneRAttributeEval",
381:       "weka.classifiers.meta.AttributeSelectedClassifier",
382:       "weka.attributeSelection.ASSearch",
383:       "weka.attributeSelection.BestFirst",
384:       "weka.classifiers.trees.J48",
385:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
386:       "weka.classifiers.meta.LogitBoost",
387:       "weka.classifiers.functions.SGD",
388:       "weka.classifiers.meta.ClassificationViaRegression",
389:       "weka.classifiers.trees.M5P",
390:       "weka.classifiers.meta.RegressionByDiscretization",
391:       "weka.filters.unsupervised.attribute.Discretize",
392:       "weka.classifiers.trees.j48.ClassifierTree",
393:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
394:       "weka.core.ListOptions",
395:       "weka.classifiers.rules.DecisionTable",
396:       "weka.classifiers.rules.JRip",
397:       "weka.classifiers.meta.RandomCommittee",
398:       "weka.classifiers.meta.MultiClassClassifier",
399:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
400:       "weka.classifiers.functions.MultilayerPerceptron",
401:       "weka.filters.unsupervised.attribute.NominalToBinary",
402:       "weka.classifiers.functions.neural.SigmoidUnit",
403:       "weka.classifiers.functions.neural.LinearUnit",
404:       "weka.core.Queue",
405:       "weka.core.AttributeLocator",
406:       "weka.core.StringLocator",
407:       "weka.core.RelationalLocator",
408:       "weka.core.ContingencyTables",
409:       "weka.core.Queue$QueueNode",
410:       "weka.classifiers.meta.FilteredClassifier",
411:       "weka.filters.supervised.attribute.AttributeSelection",
412:       "weka.attributeSelection.AttributeSelection",
413:       "weka.attributeSelection.GreedyStepwise",
414:       "weka.classifiers.functions.SimpleLogistic",
415:       "weka.core.AttributeStats",
416:       "weka.attributeSelection.InfoGainAttributeEval",
417:       "weka.core.ClassDiscovery",
418:       "weka.classifiers.MultipleClassifiersCombiner",
419:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
420:       "weka.classifiers.meta.MultiScheme",
421:       "weka.classifiers.meta.Vote",
422:       "weka.classifiers.lazy.KStar",
423:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
424:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
425:       "weka.classifiers.meta.Stacking",
426:       "weka.core.ManhattanDistance",
427:       "weka.classifiers.meta.RandomSubSpace",
428:       "weka.estimators.KernelEstimator",
429:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
430:       "weka.classifiers.trees.LMT",
431:       "weka.core.SerializationHelper",
432:       "weka.classifiers.bayes.net.ADNode",
433:       "weka.core.Check",
434:       "weka.core.CheckOptionHandler",
435:       "weka.core.converters.ConverterUtils$DataSource",
436:       "weka.core.converters.AbstractLoader",
437:       "weka.core.converters.AbstractFileLoader",
438:       "weka.core.converters.ArffLoader",
439:       "weka.classifiers.functions.neural.NeuralConnection",
440:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
441:       "weka.experiment.Stats",
442:       "weka.classifiers.functions.SMO$BinarySMO"
443:     );
444:   }
445: }

[MASTER] 04:17:13.998 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
naiveBayesMultinomialText0.m_normalize = true;
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());

naiveBayesMultinomialText0.m_periodicP = 3719;
naiveBayesMultinomialText0.pruneDictionary();
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);


[MASTER] 04:17:18.752 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 04:17:18.753 [logback-1] WARN  JUnitAnalyzer - Failing test:
 NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setStemmer((Stemmer) null);
NaiveBayes naiveBayes0 = new NaiveBayes();
Instances instances0 = naiveBayes0.m_Instances;
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(2028179000);

[MASTER] 04:17:19.678 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 04:17:20.848 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/rmosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
