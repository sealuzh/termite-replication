* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.Optimization
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13273
* Connecting to master process on port 13270
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 14:15:42.543 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:15:42.570 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:15:42.579 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 14:15:45.589 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 14:15:46.680 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 14:15:46.685 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 14:15:47.585 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:15:47.604 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:15:47.609 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 14:15:47.629 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1013
* Starting evolution
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1013
* Starting evolution
[MASTER] 14:15:51.696 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 14:15:51.818 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setMinNo(D)V: Line 500
[MASTER] 14:15:51.818 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setMinNo(D)V: Line 501
[MASTER] 14:15:51.818 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setSeed(J)V: Line 527
[MASTER] 14:15:51.818 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setSeed(J)V: Line 528
[MASTER] 14:15:51.818 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getSeed()J: Line 536
[MASTER] 14:15:51.818 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptimizations(I)V: Line 554
[MASTER] 14:15:51.818 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptimizations(I)V: Line 555
[MASTER] 14:15:51.818 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setDebug(Z)V: Line 581
[MASTER] 14:15:51.818 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setDebug(Z)V: Line 582
[MASTER] 14:15:51.829 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setDebug(Z)V: root-Branch
[MASTER] 14:15:51.829 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptimizations(I)V: root-Branch
[MASTER] 14:15:51.829 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setSeed(J)V: root-Branch
[MASTER] 14:15:51.829 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getSeed()J: root-Branch
[MASTER] 14:15:51.829 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setMinNo(D)V: root-Branch
[MASTER] 14:15:51.830 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 195: weka.classifiers.rules.JRip.setMinNo(D)V:500 - InsertUnaryOp Negation of m
[MASTER] 14:15:51.830 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 198: weka.classifiers.rules.JRip.setSeed(J)V:527 - ReplaceVariable s -> serialVersionUID
[MASTER] 14:15:51.830 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 199: weka.classifiers.rules.JRip.setSeed(J)V:527 - InsertUnaryOp Negation of s
[MASTER] 14:15:51.830 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 200: weka.classifiers.rules.JRip.getSeed()J:536 - ReplaceVariable m_Seed -> serialVersionUID
[MASTER] 14:15:51.830 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 201: weka.classifiers.rules.JRip.getSeed()J:536 - InsertUnaryOp Negation
[MASTER] 14:15:51.830 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 203: weka.classifiers.rules.JRip.setOptimizations(I)V:554 - InsertUnaryOp Negation of run
[MASTER] 14:15:51.830 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 204: weka.classifiers.rules.JRip.setOptimizations(I)V:554 - InsertUnaryOp IINC 1 run
[MASTER] 14:15:51.830 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 205: weka.classifiers.rules.JRip.setOptimizations(I)V:554 - InsertUnaryOp IINC -1 run
[MASTER] 14:15:51.830 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 210: weka.classifiers.rules.JRip.setDebug(Z)V:581 - InsertUnaryOp Negation of d
[MASTER] 14:15:51.830 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 211: weka.classifiers.rules.JRip.setDebug(Z)V:581 - InsertUnaryOp IINC 1 d
[MASTER] 14:15:51.830 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 212: weka.classifiers.rules.JRip.setDebug(Z)V:581 - InsertUnaryOp IINC -1 d
[MASTER] 14:15:51.833 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.getSeed()J:Zero
[MASTER] 14:15:51.833 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setMinNo(D)V
[MASTER] 14:15:51.833 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setOptimizations(I)V
[MASTER] 14:15:51.833 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setDebug(Z)V
[MASTER] 14:15:51.833 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setSeed(J)V
[MASTER] 14:15:51.833 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.getSeed()J
[MASTER] 14:15:51.834 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setMinNo(D)V
[MASTER] 14:15:51.834 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setOptimizations(I)V
[MASTER] 14:15:51.834 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setDebug(Z)V
[MASTER] 14:15:51.834 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setSeed(J)V
[MASTER] 14:15:51.834 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.getSeed()J
[MASTER] 14:15:51.835 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setSeed(J)V: root-Branch in context: weka.classifiers.rules.JRip:setSeed(J)V
[MASTER] 14:15:51.835 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setMinNo(D)V: root-Branch in context: weka.classifiers.rules.JRip:setMinNo(D)V
[MASTER] 14:15:51.835 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptimizations(I)V: root-Branch in context: weka.classifiers.rules.JRip:setOptimizations(I)V
[MASTER] 14:15:51.835 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setDebug(Z)V: root-Branch in context: weka.classifiers.rules.JRip:setDebug(Z)V
[MASTER] 14:15:51.835 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.getSeed()J: root-Branch in context: weka.classifiers.rules.JRip:getSeed()J
[MASTER] 14:15:52.709 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.getAttrValue()D: Line 723
[MASTER] 14:15:52.709 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;: Line 572
[MASTER] 14:15:52.711 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.getAttrValue()D: root-Branch
[MASTER] 14:15:52.711 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;: root-Branch
[MASTER] 14:15:52.712 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 209: weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;:572 - ReplaceConstant - Whether debug information is output to the console. -> 
[MASTER] 14:15:52.715 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 665: weka.classifiers.rules.JRip$Antd.getAttrValue()D:723 - ReplaceVariable value -> cover
[MASTER] 14:15:52.715 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 666: weka.classifiers.rules.JRip$Antd.getAttrValue()D:723 - ReplaceVariable value -> accu
[MASTER] 14:15:52.715 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 667: weka.classifiers.rules.JRip$Antd.getAttrValue()D:723 - ReplaceVariable value -> accuRate
[MASTER] 14:15:52.715 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 668: weka.classifiers.rules.JRip$Antd.getAttrValue()D:723 - ReplaceVariable value -> maxInfoGain
[MASTER] 14:15:52.715 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 669: weka.classifiers.rules.JRip$Antd.getAttrValue()D:723 - InsertUnaryOp Negation
[MASTER] 14:15:52.716 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 14:15:52.716 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;
[MASTER] 14:15:52.717 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.Antd.getAttrValue()D
[MASTER] 14:15:52.718 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;
[MASTER] 14:15:52.718 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.Antd.getAttrValue()D
[MASTER] 14:15:52.719 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$Antd.getAttrValue()D: root-Branch in context: weka.classifiers.rules.JRip$Antd:getAttrValue()D
[MASTER] 14:15:52.719 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.rules.JRip:debugTipText()Ljava/lang/String;
[MASTER] 14:16:05.550 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 873: weka.classifiers.rules.JRip$NumericAntd.toString()Ljava/lang/String;:928 - ReplaceVariable splitPoint -> cover
[MASTER] 14:16:05.551 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 874: weka.classifiers.rules.JRip$NumericAntd.toString()Ljava/lang/String;:928 - ReplaceVariable splitPoint -> accu
[MASTER] 14:16:05.551 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 875: weka.classifiers.rules.JRip$NumericAntd.toString()Ljava/lang/String;:928 - ReplaceVariable splitPoint -> value
[MASTER] 14:16:05.551 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 876: weka.classifiers.rules.JRip$NumericAntd.toString()Ljava/lang/String;:928 - ReplaceVariable splitPoint -> accuRate
[MASTER] 14:16:05.551 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 877: weka.classifiers.rules.JRip$NumericAntd.toString()Ljava/lang/String;:928 - ReplaceVariable splitPoint -> maxInfoGain
[MASTER] 14:16:05.551 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 878: weka.classifiers.rules.JRip$NumericAntd.toString()Ljava/lang/String;:928 - InsertUnaryOp Negation
[MASTER] 14:16:05.551 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 879: weka.classifiers.rules.JRip$NumericAntd.toString()Ljava/lang/String;:928 - ReplaceConstant - 6 -> 0
[MASTER] 14:16:05.551 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 880: weka.classifiers.rules.JRip$NumericAntd.toString()Ljava/lang/String;:928 - ReplaceConstant - 6 -> 1
[MASTER] 14:16:05.551 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 881: weka.classifiers.rules.JRip$NumericAntd.toString()Ljava/lang/String;:928 - ReplaceConstant - 6 -> -1
[MASTER] 14:16:05.551 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 882: weka.classifiers.rules.JRip$NumericAntd.toString()Ljava/lang/String;:928 - ReplaceConstant - 6 -> 5
[MASTER] 14:16:05.551 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 883: weka.classifiers.rules.JRip$NumericAntd.toString()Ljava/lang/String;:928 - ReplaceConstant - 6 -> 7
[MASTER] 14:16:05.552 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.NumericAntd.toString()Ljava/lang/String;
[MASTER] 14:16:21.069 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 14:17:59.187 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 228s and 262 generations, 119714 statements, best individual has fitness: 12480.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 36%
* Total number of goals: 705
* Number of covered goals: 255
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 110
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 56%
* Total number of goals: 993
* Number of covered goals: 554
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 28%
* Total number of goals: 93
* Number of covered goals: 26
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 97%
* Total number of goals: 72
* Number of covered goals: 70
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 97%
* Total number of goals: 72
* Number of covered goals: 70
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 110
* Generated 72 tests with total length 646
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 234s and 128 generations, 81112 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 19 tests with total length 194
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/rmosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 23%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/rmosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13270
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13268
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13274
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 14:44:12.439 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:44:12.465 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:44:12.466 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 14:44:12.509 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 14:44:12.512 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 14:44:12.517 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 14:44:12.545 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 14:44:12.581 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:44:12.642 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:44:12.650 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1013
* Starting evolution
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1013
* Starting evolution
[MASTER] 14:44:23.147 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 14:44:23.147 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 14:44:31.594 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:44:31.598 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:44:31.599 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 14:44:32.167 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 14:44:32.850 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 14:44:32.851 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 14:44:35.183 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 14:44:35.216 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 14:44:35.217 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 14:44:35.217 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 14:44:35.231 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 14:44:35.234 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 14:44:35.235 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 14:44:35.236 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 14:44:35.237 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 14:44:35.328 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 14:44:35.339 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1013
* Starting evolution
[MASTER] 14:44:40.452 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 14:45:09.401 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.unweightedMicroFmeasure()D
[MASTER] 14:45:09.402 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.unweightedMicroFmeasure()D
[MASTER] 14:45:58.840 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 14:46:23.811 [logback-2] ERROR ClientNodeImpl - Error when generating tests for: weka.experiment.ResultMatrix with seed 1013. Configuration id : RMOSA
java.lang.OutOfMemoryError: GC overhead limit exceeded
* Computation finished
[MASTER] 14:46:24.222 [main] ERROR SearchStatistics - No obtained value for output variable: Total_Goals
[MASTER] 14:46:26.225 [main] ERROR SearchStatistics - No obtained value for output variable: Total_Goals
[MASTER] 14:46:27.225 [main] ERROR SearchStatistics - No obtained value for output variable: Total_Goals
[MASTER] 14:46:28.226 [main] ERROR SearchStatistics - No obtained value for output variable: Total_Goals
[MASTER] 14:46:29.226 [main] ERROR SearchStatistics - No obtained value for output variable: Total_Goals
[MASTER] 14:46:30.227 [main] ERROR SearchStatistics - No obtained value for output variable: Total_Goals
[MASTER] 14:46:30.227 [main] ERROR SearchStatistics - Not going to write down statistics data, as some are missing
[MASTER] 14:46:30.328 [main] ERROR TestGeneration - failed to write statistics data
[MASTER] 14:46:36.908 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 14:47:25.870 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 211s and 315 generations, 193023 statements, best individual has fitness: 1728.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 338
* Number of covered goals: 296
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 78%
* Total number of goals: 194
* Number of covered goals: 151
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 476
* Number of covered goals: 439
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 112
* Number of covered goals: 60
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 49
* Number of covered goals: 48
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 49
* Number of covered goals: 48
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 76%
* Total number of goals: 194
* Number of covered goals: 147
* Generated 79 tests with total length 747
* Resulting test suite's coverage: 85% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 314s and 118 generations, 81899 statements, best individual has fitness: 14088.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 62%
* Total number of goals: 1378
* Number of covered goals: 852
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 48%
* Total number of goals: 809
* Number of covered goals: 387
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 87
* Number of covered goals: 87
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 66%
* Total number of goals: 424
* Number of covered goals: 281
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 23%
* Total number of goals: 278
* Number of covered goals: 64
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 45%
* Total number of goals: 809
* Number of covered goals: 368
* Generated 196 tests with total length 2451
* Resulting test suite's coverage: 56% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 52%
* Compiling and checking tests
[MASTER] 14:51:55.489 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_29_1575298315457/weka/classifiers/bayes/NaiveBayesMultinomialText_29_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_29_1575298315457/weka/classifiers/bayes/NaiveBayesMultinomialText_29_tmp__ESTest_scaffolding.java]]
[MASTER] 14:51:55.489 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:51:55.489 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:51:55.492 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 14:51:55.492 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 14:51:55.493 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_29_1575298315457/weka/classifiers/bayes/NaiveBayesMultinomialText_29_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 14:51:55 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.SparseInstance;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_29_tmp__ESTest extends NaiveBayesMultinomialText_29_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=0.42857142857142855
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       String[] stringArray0 = new String[8];
29:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
30:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
31:       stringArray0[0] = "Tz;%`&";
32:       double[] doubleArray0 = new double[1];
33:       doubleArray0[0] = 23.0;
34:       int[] intArray0 = new int[8];
35:       intArray0[0] = (-1);
36:       intArray0[1] = 1;
37:       intArray0[2] = 2582;
38:       intArray0[3] = (-187);
39:       intArray0[4] = 0;
40:       intArray0[5] = 73;
41:       intArray0[6] = (-2268);
42:       intArray0[7] = (-1332);
43:       SparseInstance sparseInstance0 = new SparseInstance(23.0, doubleArray0, intArray0, 0);
44:       SparseInstance sparseInstance1 = new SparseInstance((-1332), doubleArray0, intArray0, 36);
45:       try { 
46:         naiveBayesMultinomialText0.distributionForInstance(sparseInstance1);
47:         fail("Expecting exception: RuntimeException");
48:       
49:       } catch(RuntimeException e) {
50:          //
51:          // DenseInstance doesn't have access to a dataset!
52:          //
53:          verifyException("weka.core.AbstractInstance", e);
54:       }
55:   }
56: }
RegularFileObject[/tmp/EvoSuite_29_1575298315457/weka/classifiers/bayes/NaiveBayesMultinomialText_29_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 14:51:55 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_29_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_29_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.neighboursearch.KDTree",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.AdditionalMeasureProducer",
129:       "org.pentaho.packageManagement.PackageManager$1",
130:       "weka.core.Drawable",
131:       "weka.core.matrix.Matrix",
132:       "weka.core.CapabilitiesHandler",
133:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
134:       "weka.attributeSelection.ASEvaluation",
135:       "weka.core.AbstractInstance",
136:       "weka.core.scripting.JythonObject",
137:       "weka.core.SelectedTag",
138:       "org.pentaho.packageManagement.DefaultPackage",
139:       "weka.classifiers.bayes.BayesNet",
140:       "weka.core.Version",
141:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
142:       "weka.core.Tag",
143:       "weka.classifiers.AbstractClassifier",
144:       "weka.filters.unsupervised.attribute.Center",
145:       "weka.core.FindWithCapabilities",
146:       "weka.core.OptionHandler",
147:       "weka.core.WekaException",
148:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
149:       "weka.filters.StreamableFilter",
150:       "weka.core.Range",
151:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
152:       "weka.core.scripting.JythonSerializableObject",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.attributeSelection.AttributeTransformer",
158:       "weka.core.tokenizers.WordTokenizer",
159:       "weka.classifiers.misc.SerializedClassifier",
160:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
161:       "weka.attributeSelection.PrincipalComponents",
162:       "weka.core.stemmers.SnowballStemmer",
163:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
164:       "weka.classifiers.Evaluation",
165:       "weka.classifiers.functions.supportVector.Kernel",
166:       "weka.core.WekaPackageManager",
167:       "weka.filters.SupervisedFilter",
168:       "weka.core.TechnicalInformationHandler",
169:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
170:       "weka.core.neighboursearch.LinearNNSearch",
171:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
172:       "weka.core.Option",
173:       "weka.classifiers.meta.CostSensitiveClassifier",
174:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
175:       "weka.core.neighboursearch.PerformanceStats",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.FastVector",
180:       "weka.classifiers.MultipleClassifiersCombiner",
181:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
182:       "weka.core.UnassignedDatasetException",
183:       "weka.core.tokenizers.NGramTokenizer",
184:       "weka.classifiers.RandomizableClassifier",
185:       "weka.classifiers.SingleClassifierEnhancer",
186:       "weka.core.Instance",
187:       "weka.estimators.Estimator",
188:       "weka.core.ProtectedProperties",
189:       "weka.classifiers.meta.Vote",
190:       "weka.classifiers.bayes.net.ADNode",
191:       "weka.core.AttributeStats",
192:       "weka.core.WeightedInstancesHandler",
193:       "weka.core.neighboursearch.NearestNeighbourSearch",
194:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
195:       "weka.filters.unsupervised.attribute.Remove",
196:       "weka.core.Randomizable",
197:       "weka.core.EuclideanDistance",
198:       "weka.core.Instances",
199:       "weka.core.UnassignedClassException",
200:       "weka.classifiers.bayes.net.BIFReader",
201:       "weka.classifiers.bayes.net.ParentSet",
202:       "weka.classifiers.rules.ZeroR",
203:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
204:       "weka.filters.unsupervised.attribute.Standardize",
205:       "weka.core.TechnicalInformation",
206:       "weka.core.UnsupportedAttributeTypeException",
207:       "weka.classifiers.Sourcable",
208:       "weka.core.RevisionHandler",
209:       "weka.classifiers.evaluation.output.prediction.PlainText",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.filters.Filter",
214:       "weka.classifiers.lazy.IBk",
215:       "weka.filters.supervised.attribute.Discretize"
216:     );
217:   } 
218: 
219:   private static void resetClasses() {
220:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_29_tmp__ESTest_scaffolding.class.getClassLoader()); 
221: 
222:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
223:       "weka.classifiers.AbstractClassifier",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
225:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
226:       "weka.core.Capabilities$Capability",
227:       "weka.core.tokenizers.Tokenizer",
228:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
229:       "weka.core.tokenizers.WordTokenizer",
230:       "weka.core.stemmers.NullStemmer",
231:       "weka.classifiers.Evaluation",
232:       "weka.core.Utils",
233:       "weka.core.Option",
234:       "weka.core.stemmers.LovinsStemmer",
235:       "weka.core.stemmers.IteratedLovinsStemmer",
236:       "weka.core.SerializedObject",
237:       "weka.core.TechnicalInformation",
238:       "weka.core.TechnicalInformation$Type",
239:       "weka.core.TechnicalInformation$Field",
240:       "weka.core.RevisionUtils",
241:       "weka.core.Capabilities",
242:       "org.pentaho.packageManagement.PackageManager",
243:       "org.pentaho.packageManagement.DefaultPackageManager",
244:       "weka.core.Version",
245:       "weka.core.Environment",
246:       "weka.core.WekaPackageManager",
247:       "weka.attributeSelection.ASEvaluation",
248:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
249:       "weka.attributeSelection.PrincipalComponents",
250:       "weka.classifiers.misc.SerializedClassifier",
251:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
252:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
253:       "weka.core.Tag",
254:       "weka.classifiers.lazy.IBk",
255:       "weka.core.neighboursearch.NearestNeighbourSearch",
256:       "weka.core.neighboursearch.LinearNNSearch",
257:       "weka.core.NormalizableDistance",
258:       "weka.core.EuclideanDistance",
259:       "weka.core.Range",
260:       "weka.classifiers.CostMatrix",
261:       "weka.core.TestInstances",
262:       "weka.core.stemmers.SnowballStemmer",
263:       "weka.core.stemmers.Stemming",
264:       "weka.core.neighboursearch.CoverTree",
265:       "weka.core.AbstractInstance",
266:       "weka.core.SparseInstance",
267:       "weka.core.BinarySparseInstance",
268:       "weka.core.Instances",
269:       "weka.core.UnassignedDatasetException",
270:       "weka.core.Attribute",
271:       "weka.core.ProtectedProperties",
272:       "weka.core.neighboursearch.balltrees.BallNode",
273:       "weka.core.DenseInstance",
274:       "weka.attributeSelection.CorrelationAttributeEval",
275:       "weka.core.tokenizers.NGramTokenizer",
276:       "weka.classifiers.bayes.NaiveBayesMultinomial",
277:       "weka.core.tokenizers.AlphabeticTokenizer",
278:       "weka.classifiers.functions.supportVector.Kernel",
279:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
280:       "weka.classifiers.bayes.BayesNet",
281:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
282:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
283:       "weka.classifiers.bayes.net.search.local.K2",
284:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
285:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
286:       "weka.classifiers.SingleClassifierEnhancer",
287:       "weka.classifiers.misc.InputMappedClassifier",
288:       "weka.classifiers.rules.ZeroR",
289:       "weka.classifiers.RandomizableClassifier",
290:       "weka.classifiers.functions.SGDText",
291:       "weka.filters.Filter",
292:       "weka.filters.supervised.attribute.Discretize",
293:       "weka.classifiers.IteratedSingleClassifierEnhancer",
294:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
295:       "weka.classifiers.meta.LogitBoost",
296:       "weka.classifiers.trees.DecisionStump",
297:       "weka.core.Javadoc",
298:       "weka.core.ClassDiscovery",
299:       "weka.core.ClassCache",
300:       "weka.core.AllJavadoc",
301:       "weka.core.converters.ArffLoader$ArffReader",
302:       "weka.classifiers.bayes.net.BIFReader",
303:       "weka.core.SelectedTag",
304:       "weka.core.FindWithCapabilities",
305:       "weka.core.SingleIndex",
306:       "weka.classifiers.meta.FilteredClassifier",
307:       "weka.filters.supervised.attribute.AttributeSelection",
308:       "weka.attributeSelection.AttributeSelection",
309:       "weka.attributeSelection.CfsSubsetEval",
310:       "weka.attributeSelection.ASSearch",
311:       "weka.attributeSelection.GreedyStepwise",
312:       "weka.attributeSelection.BestFirst",
313:       "weka.classifiers.trees.J48",
314:       "weka.core.WekaException",
315:       "weka.core.UnsupportedAttributeTypeException",
316:       "weka.core.ChebyshevDistance",
317:       "weka.classifiers.MultipleClassifiersCombiner",
318:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
319:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
320:       "weka.classifiers.meta.Stacking",
321:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
322:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
323:       "weka.core.neighboursearch.KDTree",
324:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
325:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
326:       "weka.classifiers.bayes.NaiveBayes",
327:       "weka.estimators.Estimator",
328:       "weka.estimators.NormalEstimator",
329:       "weka.classifiers.functions.supportVector.CachedKernel",
330:       "weka.classifiers.functions.supportVector.Puk",
331:       "weka.core.Stopwords",
332:       "weka.classifiers.lazy.KStar",
333:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
334:       "weka.classifiers.meta.CostSensitiveClassifier",
335:       "weka.core.WekaEnumeration",
336:       "weka.core.Attribute$1",
337:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
338:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
339:       "weka.classifiers.functions.supportVector.PolyKernel",
340:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
341:       "weka.filters.SimpleFilter",
342:       "weka.filters.SimpleStreamFilter",
343:       "weka.filters.MultiFilter",
344:       "weka.filters.AllFilter",
345:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
346:       "weka.core.neighboursearch.balltrees.BallSplitter",
347:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
348:       "weka.classifiers.functions.GaussianProcesses",
349:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
351:       "weka.classifiers.meta.RandomSubSpace",
352:       "weka.classifiers.trees.REPTree",
353:       "weka.classifiers.functions.SMO",
354:       "weka.core.neighboursearch.BallTree",
355:       "weka.classifiers.trees.m5.M5Base",
356:       "weka.classifiers.rules.M5Rules",
357:       "weka.classifiers.functions.LinearRegression",
358:       "weka.classifiers.trees.LMT",
359:       "weka.estimators.DiscreteEstimator",
360:       "weka.classifiers.trees.RandomTree",
361:       "weka.classifiers.meta.AdaBoostM1",
362:       "weka.classifiers.rules.OneR",
363:       "weka.classifiers.bayes.NaiveBayesUpdateable",
364:       "weka.attributeSelection.WrapperSubsetEval",
365:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
366:       "weka.classifiers.rules.JRip",
367:       "weka.classifiers.functions.MultilayerPerceptron",
368:       "weka.core.FastVector",
369:       "weka.filters.unsupervised.attribute.NominalToBinary",
370:       "weka.classifiers.functions.neural.SigmoidUnit",
371:       "weka.classifiers.functions.neural.LinearUnit",
372:       "weka.classifiers.meta.MultiClassClassifier",
373:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
374:       "weka.classifiers.functions.Logistic",
375:       "weka.core.SerializationHelper",
376:       "weka.classifiers.trees.RandomForest",
377:       "weka.classifiers.meta.RegressionByDiscretization",
378:       "weka.filters.unsupervised.attribute.Discretize",
379:       "weka.estimators.KernelEstimator",
380:       "weka.classifiers.rules.DecisionTable",
381:       "weka.attributeSelection.InfoGainAttributeEval",
382:       "weka.core.ListOptions",
383:       "weka.core.GlobalInfoJavadoc",
384:       "weka.attributeSelection.OneRAttributeEval",
385:       "weka.core.OptionHandlerJavadoc",
386:       "weka.classifiers.trees.j48.ClassifierTree",
387:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
388:       "weka.classifiers.meta.AttributeSelectedClassifier",
389:       "weka.attributeSelection.ReliefFAttributeEval",
390:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
391:       "weka.classifiers.meta.Vote",
392:       "weka.estimators.PoissonEstimator",
393:       "weka.core.UnassignedClassException",
394:       "weka.classifiers.meta.CVParameterSelection",
395:       "weka.classifiers.meta.MultiScheme",
396:       "weka.classifiers.lazy.LWL",
397:       "weka.core.AttributeStats",
398:       "weka.experiment.Stats",
399:       "weka.core.matrix.Matrix",
400:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
401:       "weka.core.neighboursearch.PerformanceStats",
402:       "weka.core.neighboursearch.TreePerformanceStats",
403:       "weka.classifiers.meta.AdditiveRegression",
404:       "weka.classifiers.meta.RandomCommittee",
405:       "weka.classifiers.functions.SGD",
406:       "weka.classifiers.functions.SimpleLinearRegression",
407:       "weka.classifiers.functions.SimpleLogistic",
408:       "weka.classifiers.rules.PART",
409:       "weka.classifiers.rules.part.MakeDecList",
410:       "weka.classifiers.functions.VotedPerceptron",
411:       "weka.classifiers.meta.Bagging",
412:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
413:       "weka.classifiers.functions.SMOreg",
414:       "weka.classifiers.functions.supportVector.RegOptimizer",
415:       "weka.classifiers.functions.supportVector.RegSMO",
416:       "weka.classifiers.functions.supportVector.RegSMOImproved",
417:       "weka.attributeSelection.GainRatioAttributeEval",
418:       "weka.core.ManhattanDistance",
419:       "weka.classifiers.functions.supportVector.RBFKernel",
420:       "weka.classifiers.meta.ClassificationViaRegression",
421:       "weka.classifiers.trees.M5P",
422:       "weka.estimators.MahalanobisEstimator",
423:       "weka.classifiers.functions.supportVector.StringKernel",
424:       "weka.classifiers.functions.SGDText$Count",
425:       "weka.core.Check",
426:       "weka.core.CheckOptionHandler"
427:     );
428:   }
429: }

[MASTER] 14:51:55.494 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
String[] stringArray0 = new String[8];
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
stringArray0[0] = "Tz;%`&";
double[] doubleArray0 = new double[1];
doubleArray0[0] = 23.0;
int[] intArray0 = new int[8];
intArray0[0] = (-1);
intArray0[1] = 1;
intArray0[2] = 2582;
intArray0[3] = (-187);
intArray0[4] = 0;
intArray0[5] = 73;
intArray0[6] = (-2268);
intArray0[7] = (-1332);
SparseInstance sparseInstance0 = new SparseInstance(23.0, doubleArray0, intArray0, 0);
SparseInstance sparseInstance1 = new SparseInstance((-1332), doubleArray0, intArray0, 36);
naiveBayesMultinomialText0.distributionForInstance(sparseInstance1);

[MASTER] 14:51:56.661 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_51_1575298316623/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_51_1575298316623/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding.java]]
[MASTER] 14:51:56.661 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:51:56.661 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:51:56.661 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 14:51:56.661 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 14:51:56.662 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_51_1575298316623/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 14:51:56 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import java.util.LinkedHashMap;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_51_tmp__ESTest extends NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=2.7808459625592628
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       naiveBayesMultinomialText0.m_stopwordsFile = null;
29:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
30:       // Undeclared exception!
31:       try { 
32:         naiveBayesMultinomialText0.getOptions();
33:         fail("Expecting exception: NullPointerException");
34:       
35:       } catch(NullPointerException e) {
36:          //
37:          // no message in exception (getMessage() returned null)
38:          //
39:          verifyException("weka.classifiers.bayes.NaiveBayesMultinomialText", e);
40:       }
41:   }
42: }
RegularFileObject[/tmp/EvoSuite_51_1575298316623/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 14:51:56 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.neighboursearch.KDTree",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.AdditionalMeasureProducer",
129:       "org.pentaho.packageManagement.PackageManager$1",
130:       "weka.core.Drawable",
131:       "weka.core.matrix.Matrix",
132:       "weka.core.CapabilitiesHandler",
133:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
134:       "weka.attributeSelection.ASEvaluation",
135:       "weka.core.AbstractInstance",
136:       "weka.core.scripting.JythonObject",
137:       "weka.core.SelectedTag",
138:       "org.pentaho.packageManagement.DefaultPackage",
139:       "weka.classifiers.bayes.BayesNet",
140:       "weka.core.Version",
141:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
142:       "weka.core.Tag",
143:       "weka.classifiers.AbstractClassifier",
144:       "weka.filters.unsupervised.attribute.Center",
145:       "weka.core.FindWithCapabilities",
146:       "weka.core.OptionHandler",
147:       "weka.core.WekaException",
148:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
149:       "weka.filters.StreamableFilter",
150:       "weka.core.Range",
151:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
152:       "weka.core.scripting.JythonSerializableObject",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.attributeSelection.AttributeTransformer",
158:       "weka.core.tokenizers.WordTokenizer",
159:       "weka.classifiers.misc.SerializedClassifier",
160:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
161:       "weka.attributeSelection.PrincipalComponents",
162:       "weka.core.stemmers.SnowballStemmer",
163:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
164:       "weka.classifiers.Evaluation",
165:       "weka.classifiers.functions.supportVector.Kernel",
166:       "weka.core.WekaPackageManager",
167:       "weka.filters.SupervisedFilter",
168:       "weka.core.TechnicalInformationHandler",
169:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
170:       "weka.core.neighboursearch.LinearNNSearch",
171:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
172:       "weka.core.Option",
173:       "weka.classifiers.meta.CostSensitiveClassifier",
174:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
175:       "weka.core.neighboursearch.PerformanceStats",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.FastVector",
180:       "weka.classifiers.MultipleClassifiersCombiner",
181:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
182:       "weka.core.UnassignedDatasetException",
183:       "weka.core.tokenizers.NGramTokenizer",
184:       "weka.classifiers.RandomizableClassifier",
185:       "weka.classifiers.SingleClassifierEnhancer",
186:       "weka.core.Instance",
187:       "weka.estimators.Estimator",
188:       "weka.core.ProtectedProperties",
189:       "weka.classifiers.meta.Vote",
190:       "weka.classifiers.bayes.net.ADNode",
191:       "weka.core.AttributeStats",
192:       "weka.core.WeightedInstancesHandler",
193:       "weka.core.neighboursearch.NearestNeighbourSearch",
194:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
195:       "weka.filters.unsupervised.attribute.Remove",
196:       "weka.core.Randomizable",
197:       "weka.core.EuclideanDistance",
198:       "weka.core.Instances",
199:       "weka.core.UnassignedClassException",
200:       "weka.classifiers.bayes.net.BIFReader",
201:       "weka.classifiers.bayes.net.ParentSet",
202:       "weka.classifiers.rules.ZeroR",
203:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
204:       "weka.filters.unsupervised.attribute.Standardize",
205:       "weka.core.TechnicalInformation",
206:       "weka.core.UnsupportedAttributeTypeException",
207:       "weka.classifiers.Sourcable",
208:       "weka.core.RevisionHandler",
209:       "weka.classifiers.evaluation.output.prediction.PlainText",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.filters.Filter",
214:       "weka.classifiers.lazy.IBk",
215:       "weka.filters.supervised.attribute.Discretize"
216:     );
217:   } 
218: 
219:   private static void resetClasses() {
220:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding.class.getClassLoader()); 
221: 
222:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
223:       "weka.classifiers.AbstractClassifier",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
225:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
226:       "weka.core.Capabilities$Capability",
227:       "weka.core.tokenizers.Tokenizer",
228:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
229:       "weka.core.tokenizers.WordTokenizer",
230:       "weka.core.stemmers.NullStemmer",
231:       "weka.classifiers.Evaluation",
232:       "weka.core.Utils",
233:       "weka.core.Option",
234:       "weka.core.stemmers.LovinsStemmer",
235:       "weka.core.stemmers.IteratedLovinsStemmer",
236:       "weka.core.SerializedObject",
237:       "weka.core.TechnicalInformation",
238:       "weka.core.TechnicalInformation$Type",
239:       "weka.core.TechnicalInformation$Field",
240:       "weka.core.RevisionUtils",
241:       "weka.core.Capabilities",
242:       "org.pentaho.packageManagement.PackageManager",
243:       "org.pentaho.packageManagement.DefaultPackageManager",
244:       "weka.core.Version",
245:       "weka.core.Environment",
246:       "weka.core.WekaPackageManager",
247:       "weka.attributeSelection.ASEvaluation",
248:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
249:       "weka.attributeSelection.PrincipalComponents",
250:       "weka.classifiers.misc.SerializedClassifier",
251:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
252:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
253:       "weka.core.Tag",
254:       "weka.classifiers.lazy.IBk",
255:       "weka.core.neighboursearch.NearestNeighbourSearch",
256:       "weka.core.neighboursearch.LinearNNSearch",
257:       "weka.core.NormalizableDistance",
258:       "weka.core.EuclideanDistance",
259:       "weka.core.Range",
260:       "weka.classifiers.CostMatrix",
261:       "weka.core.TestInstances",
262:       "weka.core.stemmers.SnowballStemmer",
263:       "weka.core.stemmers.Stemming",
264:       "weka.core.neighboursearch.CoverTree",
265:       "weka.core.AbstractInstance",
266:       "weka.core.SparseInstance",
267:       "weka.core.BinarySparseInstance",
268:       "weka.core.Instances",
269:       "weka.core.UnassignedDatasetException",
270:       "weka.core.Attribute",
271:       "weka.core.ProtectedProperties",
272:       "weka.core.neighboursearch.balltrees.BallNode",
273:       "weka.core.DenseInstance",
274:       "weka.attributeSelection.CorrelationAttributeEval",
275:       "weka.core.tokenizers.NGramTokenizer",
276:       "weka.classifiers.bayes.NaiveBayesMultinomial",
277:       "weka.core.tokenizers.AlphabeticTokenizer",
278:       "weka.classifiers.functions.supportVector.Kernel",
279:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
280:       "weka.classifiers.bayes.BayesNet",
281:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
282:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
283:       "weka.classifiers.bayes.net.search.local.K2",
284:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
285:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
286:       "weka.classifiers.SingleClassifierEnhancer",
287:       "weka.classifiers.misc.InputMappedClassifier",
288:       "weka.classifiers.rules.ZeroR",
289:       "weka.classifiers.RandomizableClassifier",
290:       "weka.classifiers.functions.SGDText",
291:       "weka.filters.Filter",
292:       "weka.filters.supervised.attribute.Discretize",
293:       "weka.classifiers.IteratedSingleClassifierEnhancer",
294:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
295:       "weka.classifiers.meta.LogitBoost",
296:       "weka.classifiers.trees.DecisionStump",
297:       "weka.core.Javadoc",
298:       "weka.core.ClassDiscovery",
299:       "weka.core.ClassCache",
300:       "weka.core.AllJavadoc",
301:       "weka.core.converters.ArffLoader$ArffReader",
302:       "weka.classifiers.bayes.net.BIFReader",
303:       "weka.core.SelectedTag",
304:       "weka.core.FindWithCapabilities",
305:       "weka.core.SingleIndex",
306:       "weka.classifiers.meta.FilteredClassifier",
307:       "weka.filters.supervised.attribute.AttributeSelection",
308:       "weka.attributeSelection.AttributeSelection",
309:       "weka.attributeSelection.CfsSubsetEval",
310:       "weka.attributeSelection.ASSearch",
311:       "weka.attributeSelection.GreedyStepwise",
312:       "weka.attributeSelection.BestFirst",
313:       "weka.classifiers.trees.J48",
314:       "weka.core.WekaException",
315:       "weka.core.UnsupportedAttributeTypeException",
316:       "weka.core.ChebyshevDistance",
317:       "weka.classifiers.MultipleClassifiersCombiner",
318:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
319:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
320:       "weka.classifiers.meta.Stacking",
321:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
322:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
323:       "weka.core.neighboursearch.KDTree",
324:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
325:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
326:       "weka.classifiers.bayes.NaiveBayes",
327:       "weka.estimators.Estimator",
328:       "weka.estimators.NormalEstimator",
329:       "weka.classifiers.functions.supportVector.CachedKernel",
330:       "weka.classifiers.functions.supportVector.Puk",
331:       "weka.core.Stopwords",
332:       "weka.classifiers.lazy.KStar",
333:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
334:       "weka.classifiers.meta.CostSensitiveClassifier",
335:       "weka.core.WekaEnumeration",
336:       "weka.core.Attribute$1",
337:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
338:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
339:       "weka.classifiers.functions.supportVector.PolyKernel",
340:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
341:       "weka.filters.SimpleFilter",
342:       "weka.filters.SimpleStreamFilter",
343:       "weka.filters.MultiFilter",
344:       "weka.filters.AllFilter",
345:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
346:       "weka.core.neighboursearch.balltrees.BallSplitter",
347:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
348:       "weka.classifiers.functions.GaussianProcesses",
349:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
351:       "weka.classifiers.meta.RandomSubSpace",
352:       "weka.classifiers.trees.REPTree",
353:       "weka.classifiers.functions.SMO",
354:       "weka.core.neighboursearch.BallTree",
355:       "weka.classifiers.trees.m5.M5Base",
356:       "weka.classifiers.rules.M5Rules",
357:       "weka.classifiers.functions.LinearRegression",
358:       "weka.classifiers.trees.LMT",
359:       "weka.estimators.DiscreteEstimator",
360:       "weka.classifiers.trees.RandomTree",
361:       "weka.classifiers.meta.AdaBoostM1",
362:       "weka.classifiers.rules.OneR",
363:       "weka.classifiers.bayes.NaiveBayesUpdateable",
364:       "weka.attributeSelection.WrapperSubsetEval",
365:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
366:       "weka.classifiers.rules.JRip",
367:       "weka.classifiers.functions.MultilayerPerceptron",
368:       "weka.core.FastVector",
369:       "weka.filters.unsupervised.attribute.NominalToBinary",
370:       "weka.classifiers.functions.neural.SigmoidUnit",
371:       "weka.classifiers.functions.neural.LinearUnit",
372:       "weka.classifiers.meta.MultiClassClassifier",
373:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
374:       "weka.classifiers.functions.Logistic",
375:       "weka.core.SerializationHelper",
376:       "weka.classifiers.trees.RandomForest",
377:       "weka.classifiers.meta.RegressionByDiscretization",
378:       "weka.filters.unsupervised.attribute.Discretize",
379:       "weka.estimators.KernelEstimator",
380:       "weka.classifiers.rules.DecisionTable",
381:       "weka.attributeSelection.InfoGainAttributeEval",
382:       "weka.core.ListOptions",
383:       "weka.core.GlobalInfoJavadoc",
384:       "weka.attributeSelection.OneRAttributeEval",
385:       "weka.core.OptionHandlerJavadoc",
386:       "weka.classifiers.trees.j48.ClassifierTree",
387:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
388:       "weka.classifiers.meta.AttributeSelectedClassifier",
389:       "weka.attributeSelection.ReliefFAttributeEval",
390:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
391:       "weka.classifiers.meta.Vote",
392:       "weka.estimators.PoissonEstimator",
393:       "weka.core.UnassignedClassException",
394:       "weka.classifiers.meta.CVParameterSelection",
395:       "weka.classifiers.meta.MultiScheme",
396:       "weka.classifiers.lazy.LWL",
397:       "weka.core.AttributeStats",
398:       "weka.experiment.Stats",
399:       "weka.core.matrix.Matrix",
400:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
401:       "weka.core.neighboursearch.PerformanceStats",
402:       "weka.core.neighboursearch.TreePerformanceStats",
403:       "weka.classifiers.meta.AdditiveRegression",
404:       "weka.classifiers.meta.RandomCommittee",
405:       "weka.classifiers.functions.SGD",
406:       "weka.classifiers.functions.SimpleLinearRegression",
407:       "weka.classifiers.functions.SimpleLogistic",
408:       "weka.classifiers.rules.PART",
409:       "weka.classifiers.rules.part.MakeDecList",
410:       "weka.classifiers.functions.VotedPerceptron",
411:       "weka.classifiers.meta.Bagging",
412:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
413:       "weka.classifiers.functions.SMOreg",
414:       "weka.classifiers.functions.supportVector.RegOptimizer",
415:       "weka.classifiers.functions.supportVector.RegSMO",
416:       "weka.classifiers.functions.supportVector.RegSMOImproved",
417:       "weka.attributeSelection.GainRatioAttributeEval",
418:       "weka.core.ManhattanDistance",
419:       "weka.classifiers.functions.supportVector.RBFKernel",
420:       "weka.classifiers.meta.ClassificationViaRegression",
421:       "weka.classifiers.trees.M5P",
422:       "weka.estimators.MahalanobisEstimator",
423:       "weka.classifiers.functions.supportVector.StringKernel",
424:       "weka.classifiers.functions.SGDText$Count",
425:       "weka.core.Check",
426:       "weka.core.CheckOptionHandler"
427:     );
428:   }
429: }

[MASTER] 14:51:56.662 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_stopwordsFile = null;
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.getOptions();

[MASTER] 14:51:56.702 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_52_1575298316663/weka/classifiers/bayes/NaiveBayesMultinomialText_52_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_52_1575298316663/weka/classifiers/bayes/NaiveBayesMultinomialText_52_tmp__ESTest_scaffolding.java]]
[MASTER] 14:51:56.702 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:51:56.702 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:51:56.702 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 14:51:56.702 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 14:51:56.702 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 14:51:56.703 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_52_1575298316663/weka/classifiers/bayes/NaiveBayesMultinomialText_52_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 14:51:56 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_52_tmp__ESTest extends NaiveBayesMultinomialText_52_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=1.830738805564335
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
29:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
30:       naiveBayesMultinomialText0.setUseStopList(true);
31:       naiveBayesMultinomialText0.m_wordFrequencies = true;
32:       naiveBayesMultinomialText0.getUseStopList();
33:       boolean boolean0 = naiveBayesMultinomialText0.getUseWordFrequencies();
34:       assertTrue(naiveBayesMultinomialText0.getUseStopList());
35:       assertTrue(boolean0);
36:   }
37: }
RegularFileObject[/tmp/EvoSuite_52_1575298316663/weka/classifiers/bayes/NaiveBayesMultinomialText_52_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 14:51:56 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_52_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_52_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.neighboursearch.KDTree",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.AdditionalMeasureProducer",
129:       "org.pentaho.packageManagement.PackageManager$1",
130:       "weka.core.Drawable",
131:       "weka.core.matrix.Matrix",
132:       "weka.core.CapabilitiesHandler",
133:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
134:       "weka.attributeSelection.ASEvaluation",
135:       "weka.core.AbstractInstance",
136:       "weka.core.scripting.JythonObject",
137:       "weka.core.SelectedTag",
138:       "org.pentaho.packageManagement.DefaultPackage",
139:       "weka.classifiers.bayes.BayesNet",
140:       "weka.core.Version",
141:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
142:       "weka.core.Tag",
143:       "weka.classifiers.AbstractClassifier",
144:       "weka.filters.unsupervised.attribute.Center",
145:       "weka.core.FindWithCapabilities",
146:       "weka.core.OptionHandler",
147:       "weka.core.WekaException",
148:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
149:       "weka.filters.StreamableFilter",
150:       "weka.core.Range",
151:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
152:       "weka.core.scripting.JythonSerializableObject",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.attributeSelection.AttributeTransformer",
158:       "weka.core.tokenizers.WordTokenizer",
159:       "weka.classifiers.misc.SerializedClassifier",
160:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
161:       "weka.attributeSelection.PrincipalComponents",
162:       "weka.core.stemmers.SnowballStemmer",
163:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
164:       "weka.classifiers.Evaluation",
165:       "weka.classifiers.functions.supportVector.Kernel",
166:       "weka.core.WekaPackageManager",
167:       "weka.filters.SupervisedFilter",
168:       "weka.core.TechnicalInformationHandler",
169:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
170:       "weka.core.neighboursearch.LinearNNSearch",
171:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
172:       "weka.core.Option",
173:       "weka.classifiers.meta.CostSensitiveClassifier",
174:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
175:       "weka.core.neighboursearch.PerformanceStats",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.FastVector",
180:       "weka.classifiers.MultipleClassifiersCombiner",
181:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
182:       "weka.core.UnassignedDatasetException",
183:       "weka.core.tokenizers.NGramTokenizer",
184:       "weka.classifiers.RandomizableClassifier",
185:       "weka.classifiers.SingleClassifierEnhancer",
186:       "weka.core.Instance",
187:       "weka.estimators.Estimator",
188:       "weka.core.ProtectedProperties",
189:       "weka.classifiers.meta.Vote",
190:       "weka.classifiers.bayes.net.ADNode",
191:       "weka.core.AttributeStats",
192:       "weka.core.WeightedInstancesHandler",
193:       "weka.core.neighboursearch.NearestNeighbourSearch",
194:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
195:       "weka.filters.unsupervised.attribute.Remove",
196:       "weka.core.Randomizable",
197:       "weka.core.EuclideanDistance",
198:       "weka.core.Instances",
199:       "weka.core.UnassignedClassException",
200:       "weka.classifiers.bayes.net.BIFReader",
201:       "weka.classifiers.bayes.net.ParentSet",
202:       "weka.classifiers.rules.ZeroR",
203:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
204:       "weka.filters.unsupervised.attribute.Standardize",
205:       "weka.core.TechnicalInformation",
206:       "weka.core.UnsupportedAttributeTypeException",
207:       "weka.classifiers.Sourcable",
208:       "weka.core.RevisionHandler",
209:       "weka.classifiers.evaluation.output.prediction.PlainText",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.filters.Filter",
214:       "weka.classifiers.lazy.IBk",
215:       "weka.filters.supervised.attribute.Discretize"
216:     );
217:   } 
218: 
219:   private static void resetClasses() {
220:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_52_tmp__ESTest_scaffolding.class.getClassLoader()); 
221: 
222:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
223:       "weka.classifiers.AbstractClassifier",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
225:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
226:       "weka.core.Capabilities$Capability",
227:       "weka.core.tokenizers.Tokenizer",
228:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
229:       "weka.core.tokenizers.WordTokenizer",
230:       "weka.core.stemmers.NullStemmer",
231:       "weka.classifiers.Evaluation",
232:       "weka.core.Utils",
233:       "weka.core.Option",
234:       "weka.core.stemmers.LovinsStemmer",
235:       "weka.core.stemmers.IteratedLovinsStemmer",
236:       "weka.core.SerializedObject",
237:       "weka.core.TechnicalInformation",
238:       "weka.core.TechnicalInformation$Type",
239:       "weka.core.TechnicalInformation$Field",
240:       "weka.core.RevisionUtils",
241:       "weka.core.Capabilities",
242:       "org.pentaho.packageManagement.PackageManager",
243:       "org.pentaho.packageManagement.DefaultPackageManager",
244:       "weka.core.Version",
245:       "weka.core.Environment",
246:       "weka.core.WekaPackageManager",
247:       "weka.attributeSelection.ASEvaluation",
248:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
249:       "weka.attributeSelection.PrincipalComponents",
250:       "weka.classifiers.misc.SerializedClassifier",
251:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
252:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
253:       "weka.core.Tag",
254:       "weka.classifiers.lazy.IBk",
255:       "weka.core.neighboursearch.NearestNeighbourSearch",
256:       "weka.core.neighboursearch.LinearNNSearch",
257:       "weka.core.NormalizableDistance",
258:       "weka.core.EuclideanDistance",
259:       "weka.core.Range",
260:       "weka.classifiers.CostMatrix",
261:       "weka.core.TestInstances",
262:       "weka.core.stemmers.SnowballStemmer",
263:       "weka.core.stemmers.Stemming",
264:       "weka.core.neighboursearch.CoverTree",
265:       "weka.core.AbstractInstance",
266:       "weka.core.SparseInstance",
267:       "weka.core.BinarySparseInstance",
268:       "weka.core.Instances",
269:       "weka.core.UnassignedDatasetException",
270:       "weka.core.Attribute",
271:       "weka.core.ProtectedProperties",
272:       "weka.core.neighboursearch.balltrees.BallNode",
273:       "weka.core.DenseInstance",
274:       "weka.attributeSelection.CorrelationAttributeEval",
275:       "weka.core.tokenizers.NGramTokenizer",
276:       "weka.classifiers.bayes.NaiveBayesMultinomial",
277:       "weka.core.tokenizers.AlphabeticTokenizer",
278:       "weka.classifiers.functions.supportVector.Kernel",
279:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
280:       "weka.classifiers.bayes.BayesNet",
281:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
282:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
283:       "weka.classifiers.bayes.net.search.local.K2",
284:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
285:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
286:       "weka.classifiers.SingleClassifierEnhancer",
287:       "weka.classifiers.misc.InputMappedClassifier",
288:       "weka.classifiers.rules.ZeroR",
289:       "weka.classifiers.RandomizableClassifier",
290:       "weka.classifiers.functions.SGDText",
291:       "weka.filters.Filter",
292:       "weka.filters.supervised.attribute.Discretize",
293:       "weka.classifiers.IteratedSingleClassifierEnhancer",
294:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
295:       "weka.classifiers.meta.LogitBoost",
296:       "weka.classifiers.trees.DecisionStump",
297:       "weka.core.Javadoc",
298:       "weka.core.ClassDiscovery",
299:       "weka.core.ClassCache",
300:       "weka.core.AllJavadoc",
301:       "weka.core.converters.ArffLoader$ArffReader",
302:       "weka.classifiers.bayes.net.BIFReader",
303:       "weka.core.SelectedTag",
304:       "weka.core.FindWithCapabilities",
305:       "weka.core.SingleIndex",
306:       "weka.classifiers.meta.FilteredClassifier",
307:       "weka.filters.supervised.attribute.AttributeSelection",
308:       "weka.attributeSelection.AttributeSelection",
309:       "weka.attributeSelection.CfsSubsetEval",
310:       "weka.attributeSelection.ASSearch",
311:       "weka.attributeSelection.GreedyStepwise",
312:       "weka.attributeSelection.BestFirst",
313:       "weka.classifiers.trees.J48",
314:       "weka.core.WekaException",
315:       "weka.core.UnsupportedAttributeTypeException",
316:       "weka.core.ChebyshevDistance",
317:       "weka.classifiers.MultipleClassifiersCombiner",
318:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
319:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
320:       "weka.classifiers.meta.Stacking",
321:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
322:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
323:       "weka.core.neighboursearch.KDTree",
324:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
325:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
326:       "weka.classifiers.bayes.NaiveBayes",
327:       "weka.estimators.Estimator",
328:       "weka.estimators.NormalEstimator",
329:       "weka.classifiers.functions.supportVector.CachedKernel",
330:       "weka.classifiers.functions.supportVector.Puk",
331:       "weka.core.Stopwords",
332:       "weka.classifiers.lazy.KStar",
333:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
334:       "weka.classifiers.meta.CostSensitiveClassifier",
335:       "weka.core.WekaEnumeration",
336:       "weka.core.Attribute$1",
337:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
338:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
339:       "weka.classifiers.functions.supportVector.PolyKernel",
340:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
341:       "weka.filters.SimpleFilter",
342:       "weka.filters.SimpleStreamFilter",
343:       "weka.filters.MultiFilter",
344:       "weka.filters.AllFilter",
345:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
346:       "weka.core.neighboursearch.balltrees.BallSplitter",
347:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
348:       "weka.classifiers.functions.GaussianProcesses",
349:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
351:       "weka.classifiers.meta.RandomSubSpace",
352:       "weka.classifiers.trees.REPTree",
353:       "weka.classifiers.functions.SMO",
354:       "weka.core.neighboursearch.BallTree",
355:       "weka.classifiers.trees.m5.M5Base",
356:       "weka.classifiers.rules.M5Rules",
357:       "weka.classifiers.functions.LinearRegression",
358:       "weka.classifiers.trees.LMT",
359:       "weka.estimators.DiscreteEstimator",
360:       "weka.classifiers.trees.RandomTree",
361:       "weka.classifiers.meta.AdaBoostM1",
362:       "weka.classifiers.rules.OneR",
363:       "weka.classifiers.bayes.NaiveBayesUpdateable",
364:       "weka.attributeSelection.WrapperSubsetEval",
365:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
366:       "weka.classifiers.rules.JRip",
367:       "weka.classifiers.functions.MultilayerPerceptron",
368:       "weka.core.FastVector",
369:       "weka.filters.unsupervised.attribute.NominalToBinary",
370:       "weka.classifiers.functions.neural.SigmoidUnit",
371:       "weka.classifiers.functions.neural.LinearUnit",
372:       "weka.classifiers.meta.MultiClassClassifier",
373:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
374:       "weka.classifiers.functions.Logistic",
375:       "weka.core.SerializationHelper",
376:       "weka.classifiers.trees.RandomForest",
377:       "weka.classifiers.meta.RegressionByDiscretization",
378:       "weka.filters.unsupervised.attribute.Discretize",
379:       "weka.estimators.KernelEstimator",
380:       "weka.classifiers.rules.DecisionTable",
381:       "weka.attributeSelection.InfoGainAttributeEval",
382:       "weka.core.ListOptions",
383:       "weka.core.GlobalInfoJavadoc",
384:       "weka.attributeSelection.OneRAttributeEval",
385:       "weka.core.OptionHandlerJavadoc",
386:       "weka.classifiers.trees.j48.ClassifierTree",
387:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
388:       "weka.classifiers.meta.AttributeSelectedClassifier",
389:       "weka.attributeSelection.ReliefFAttributeEval",
390:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
391:       "weka.classifiers.meta.Vote",
392:       "weka.estimators.PoissonEstimator",
393:       "weka.core.UnassignedClassException",
394:       "weka.classifiers.meta.CVParameterSelection",
395:       "weka.classifiers.meta.MultiScheme",
396:       "weka.classifiers.lazy.LWL",
397:       "weka.core.AttributeStats",
398:       "weka.experiment.Stats",
399:       "weka.core.matrix.Matrix",
400:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
401:       "weka.core.neighboursearch.PerformanceStats",
402:       "weka.core.neighboursearch.TreePerformanceStats",
403:       "weka.classifiers.meta.AdditiveRegression",
404:       "weka.classifiers.meta.RandomCommittee",
405:       "weka.classifiers.functions.SGD",
406:       "weka.classifiers.functions.SimpleLinearRegression",
407:       "weka.classifiers.functions.SimpleLogistic",
408:       "weka.classifiers.rules.PART",
409:       "weka.classifiers.rules.part.MakeDecList",
410:       "weka.classifiers.functions.VotedPerceptron",
411:       "weka.classifiers.meta.Bagging",
412:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
413:       "weka.classifiers.functions.SMOreg",
414:       "weka.classifiers.functions.supportVector.RegOptimizer",
415:       "weka.classifiers.functions.supportVector.RegSMO",
416:       "weka.classifiers.functions.supportVector.RegSMOImproved",
417:       "weka.attributeSelection.GainRatioAttributeEval",
418:       "weka.core.ManhattanDistance",
419:       "weka.classifiers.functions.supportVector.RBFKernel",
420:       "weka.classifiers.meta.ClassificationViaRegression",
421:       "weka.classifiers.trees.M5P",
422:       "weka.estimators.MahalanobisEstimator",
423:       "weka.classifiers.functions.supportVector.StringKernel",
424:       "weka.classifiers.functions.SGDText$Count",
425:       "weka.core.Check",
426:       "weka.core.CheckOptionHandler"
427:     );
428:   }
429: }

[MASTER] 14:51:56.703 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
naiveBayesMultinomialText0.setUseStopList(true);
naiveBayesMultinomialText0.m_wordFrequencies = true;
naiveBayesMultinomialText0.getUseStopList();
boolean boolean0 = naiveBayesMultinomialText0.getUseWordFrequencies();
assertTrue(naiveBayesMultinomialText0.getUseStopList());
assertTrue(boolean0);


[MASTER] 14:51:57.140 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_62_1575298317104/weka/classifiers/bayes/NaiveBayesMultinomialText_62_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_62_1575298317104/weka/classifiers/bayes/NaiveBayesMultinomialText_62_tmp__ESTest_scaffolding.java]]
[MASTER] 14:51:57.140 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:51:57.140 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:51:57.140 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 14:51:57.140 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 14:51:57.140 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 14:51:57.140 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 14:51:57.141 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 14:51:57.141 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_62_1575298317104/weka/classifiers/bayes/NaiveBayesMultinomialText_62_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Dec 02 14:51:57 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_62_tmp__ESTest extends NaiveBayesMultinomialText_62_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=1.1217186091313738
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
29:       Integer integer0 = new Integer(1302);
30:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
31:       hashMap0.put(integer0, linkedHashMap0);
32:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
33:       naiveBayesMultinomialText0.setPeriodicPruning(1302);
34:       naiveBayesMultinomialText0.pruneDictionary();
35:       assertEquals(1302, naiveBayesMultinomialText0.getPeriodicPruning());
36:   }
37: }
RegularFileObject[/tmp/EvoSuite_62_1575298317104/weka/classifiers/bayes/NaiveBayesMultinomialText_62_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Dec 02 14:51:57 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_62_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_62_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.neighboursearch.KDTree",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.BinarySparseInstance",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
124:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.AdditionalMeasureProducer",
129:       "org.pentaho.packageManagement.PackageManager$1",
130:       "weka.core.Drawable",
131:       "weka.core.matrix.Matrix",
132:       "weka.core.CapabilitiesHandler",
133:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
134:       "weka.attributeSelection.ASEvaluation",
135:       "weka.core.AbstractInstance",
136:       "weka.core.scripting.JythonObject",
137:       "weka.core.SelectedTag",
138:       "org.pentaho.packageManagement.DefaultPackage",
139:       "weka.classifiers.bayes.BayesNet",
140:       "weka.core.Version",
141:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
142:       "weka.core.Tag",
143:       "weka.classifiers.AbstractClassifier",
144:       "weka.filters.unsupervised.attribute.Center",
145:       "weka.core.FindWithCapabilities",
146:       "weka.core.OptionHandler",
147:       "weka.core.WekaException",
148:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
149:       "weka.filters.StreamableFilter",
150:       "weka.core.Range",
151:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
152:       "weka.core.scripting.JythonSerializableObject",
153:       "weka.classifiers.Classifier",
154:       "weka.core.Capabilities$Capability",
155:       "weka.core.SparseInstance",
156:       "org.pentaho.packageManagement.PackageManager",
157:       "weka.attributeSelection.AttributeTransformer",
158:       "weka.core.tokenizers.WordTokenizer",
159:       "weka.classifiers.misc.SerializedClassifier",
160:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
161:       "weka.attributeSelection.PrincipalComponents",
162:       "weka.core.stemmers.SnowballStemmer",
163:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
164:       "weka.classifiers.Evaluation",
165:       "weka.classifiers.functions.supportVector.Kernel",
166:       "weka.core.WekaPackageManager",
167:       "weka.filters.SupervisedFilter",
168:       "weka.core.TechnicalInformationHandler",
169:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
170:       "weka.core.neighboursearch.LinearNNSearch",
171:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
172:       "weka.core.Option",
173:       "weka.classifiers.meta.CostSensitiveClassifier",
174:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
175:       "weka.core.neighboursearch.PerformanceStats",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.FastVector",
180:       "weka.classifiers.MultipleClassifiersCombiner",
181:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
182:       "weka.core.UnassignedDatasetException",
183:       "weka.core.tokenizers.NGramTokenizer",
184:       "weka.classifiers.RandomizableClassifier",
185:       "weka.classifiers.SingleClassifierEnhancer",
186:       "weka.core.Instance",
187:       "weka.estimators.Estimator",
188:       "weka.core.ProtectedProperties",
189:       "weka.classifiers.meta.Vote",
190:       "weka.classifiers.bayes.net.ADNode",
191:       "weka.core.AttributeStats",
192:       "weka.core.WeightedInstancesHandler",
193:       "weka.core.neighboursearch.NearestNeighbourSearch",
194:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
195:       "weka.filters.unsupervised.attribute.Remove",
196:       "weka.core.Randomizable",
197:       "weka.core.EuclideanDistance",
198:       "weka.core.Instances",
199:       "weka.core.UnassignedClassException",
200:       "weka.classifiers.bayes.net.BIFReader",
201:       "weka.classifiers.bayes.net.ParentSet",
202:       "weka.classifiers.rules.ZeroR",
203:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
204:       "weka.filters.unsupervised.attribute.Standardize",
205:       "weka.core.TechnicalInformation",
206:       "weka.core.UnsupportedAttributeTypeException",
207:       "weka.classifiers.Sourcable",
208:       "weka.core.RevisionHandler",
209:       "weka.classifiers.evaluation.output.prediction.PlainText",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.filters.Filter",
214:       "weka.classifiers.lazy.IBk",
215:       "weka.filters.supervised.attribute.Discretize"
216:     );
217:   } 
218: 
219:   private static void resetClasses() {
220:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_62_tmp__ESTest_scaffolding.class.getClassLoader()); 
221: 
222:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
223:       "weka.classifiers.AbstractClassifier",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
225:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
226:       "weka.core.Capabilities$Capability",
227:       "weka.core.tokenizers.Tokenizer",
228:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
229:       "weka.core.tokenizers.WordTokenizer",
230:       "weka.core.stemmers.NullStemmer",
231:       "weka.classifiers.Evaluation",
232:       "weka.core.Utils",
233:       "weka.core.Option",
234:       "weka.core.stemmers.LovinsStemmer",
235:       "weka.core.stemmers.IteratedLovinsStemmer",
236:       "weka.core.SerializedObject",
237:       "weka.core.TechnicalInformation",
238:       "weka.core.TechnicalInformation$Type",
239:       "weka.core.TechnicalInformation$Field",
240:       "weka.core.RevisionUtils",
241:       "weka.core.Capabilities",
242:       "org.pentaho.packageManagement.PackageManager",
243:       "org.pentaho.packageManagement.DefaultPackageManager",
244:       "weka.core.Version",
245:       "weka.core.Environment",
246:       "weka.core.WekaPackageManager",
247:       "weka.attributeSelection.ASEvaluation",
248:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
249:       "weka.attributeSelection.PrincipalComponents",
250:       "weka.classifiers.misc.SerializedClassifier",
251:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
252:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
253:       "weka.core.Tag",
254:       "weka.classifiers.lazy.IBk",
255:       "weka.core.neighboursearch.NearestNeighbourSearch",
256:       "weka.core.neighboursearch.LinearNNSearch",
257:       "weka.core.NormalizableDistance",
258:       "weka.core.EuclideanDistance",
259:       "weka.core.Range",
260:       "weka.classifiers.CostMatrix",
261:       "weka.core.TestInstances",
262:       "weka.core.stemmers.SnowballStemmer",
263:       "weka.core.stemmers.Stemming",
264:       "weka.core.neighboursearch.CoverTree",
265:       "weka.core.AbstractInstance",
266:       "weka.core.SparseInstance",
267:       "weka.core.BinarySparseInstance",
268:       "weka.core.Instances",
269:       "weka.core.UnassignedDatasetException",
270:       "weka.core.Attribute",
271:       "weka.core.ProtectedProperties",
272:       "weka.core.neighboursearch.balltrees.BallNode",
273:       "weka.core.DenseInstance",
274:       "weka.attributeSelection.CorrelationAttributeEval",
275:       "weka.core.tokenizers.NGramTokenizer",
276:       "weka.classifiers.bayes.NaiveBayesMultinomial",
277:       "weka.core.tokenizers.AlphabeticTokenizer",
278:       "weka.classifiers.functions.supportVector.Kernel",
279:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
280:       "weka.classifiers.bayes.BayesNet",
281:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
282:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
283:       "weka.classifiers.bayes.net.search.local.K2",
284:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
285:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
286:       "weka.classifiers.SingleClassifierEnhancer",
287:       "weka.classifiers.misc.InputMappedClassifier",
288:       "weka.classifiers.rules.ZeroR",
289:       "weka.classifiers.RandomizableClassifier",
290:       "weka.classifiers.functions.SGDText",
291:       "weka.filters.Filter",
292:       "weka.filters.supervised.attribute.Discretize",
293:       "weka.classifiers.IteratedSingleClassifierEnhancer",
294:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
295:       "weka.classifiers.meta.LogitBoost",
296:       "weka.classifiers.trees.DecisionStump",
297:       "weka.core.Javadoc",
298:       "weka.core.ClassDiscovery",
299:       "weka.core.ClassCache",
300:       "weka.core.AllJavadoc",
301:       "weka.core.converters.ArffLoader$ArffReader",
302:       "weka.classifiers.bayes.net.BIFReader",
303:       "weka.core.SelectedTag",
304:       "weka.core.FindWithCapabilities",
305:       "weka.core.SingleIndex",
306:       "weka.classifiers.meta.FilteredClassifier",
307:       "weka.filters.supervised.attribute.AttributeSelection",
308:       "weka.attributeSelection.AttributeSelection",
309:       "weka.attributeSelection.CfsSubsetEval",
310:       "weka.attributeSelection.ASSearch",
311:       "weka.attributeSelection.GreedyStepwise",
312:       "weka.attributeSelection.BestFirst",
313:       "weka.classifiers.trees.J48",
314:       "weka.core.WekaException",
315:       "weka.core.UnsupportedAttributeTypeException",
316:       "weka.core.ChebyshevDistance",
317:       "weka.classifiers.MultipleClassifiersCombiner",
318:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
319:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
320:       "weka.classifiers.meta.Stacking",
321:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
322:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
323:       "weka.core.neighboursearch.KDTree",
324:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
325:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
326:       "weka.classifiers.bayes.NaiveBayes",
327:       "weka.estimators.Estimator",
328:       "weka.estimators.NormalEstimator",
329:       "weka.classifiers.functions.supportVector.CachedKernel",
330:       "weka.classifiers.functions.supportVector.Puk",
331:       "weka.core.Stopwords",
332:       "weka.classifiers.lazy.KStar",
333:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
334:       "weka.classifiers.meta.CostSensitiveClassifier",
335:       "weka.core.WekaEnumeration",
336:       "weka.core.Attribute$1",
337:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
338:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
339:       "weka.classifiers.functions.supportVector.PolyKernel",
340:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
341:       "weka.filters.SimpleFilter",
342:       "weka.filters.SimpleStreamFilter",
343:       "weka.filters.MultiFilter",
344:       "weka.filters.AllFilter",
345:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
346:       "weka.core.neighboursearch.balltrees.BallSplitter",
347:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
348:       "weka.classifiers.functions.GaussianProcesses",
349:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
351:       "weka.classifiers.meta.RandomSubSpace",
352:       "weka.classifiers.trees.REPTree",
353:       "weka.classifiers.functions.SMO",
354:       "weka.core.neighboursearch.BallTree",
355:       "weka.classifiers.trees.m5.M5Base",
356:       "weka.classifiers.rules.M5Rules",
357:       "weka.classifiers.functions.LinearRegression",
358:       "weka.classifiers.trees.LMT",
359:       "weka.estimators.DiscreteEstimator",
360:       "weka.classifiers.trees.RandomTree",
361:       "weka.classifiers.meta.AdaBoostM1",
362:       "weka.classifiers.rules.OneR",
363:       "weka.classifiers.bayes.NaiveBayesUpdateable",
364:       "weka.attributeSelection.WrapperSubsetEval",
365:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
366:       "weka.classifiers.rules.JRip",
367:       "weka.classifiers.functions.MultilayerPerceptron",
368:       "weka.core.FastVector",
369:       "weka.filters.unsupervised.attribute.NominalToBinary",
370:       "weka.classifiers.functions.neural.SigmoidUnit",
371:       "weka.classifiers.functions.neural.LinearUnit",
372:       "weka.classifiers.meta.MultiClassClassifier",
373:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
374:       "weka.classifiers.functions.Logistic",
375:       "weka.core.SerializationHelper",
376:       "weka.classifiers.trees.RandomForest",
377:       "weka.classifiers.meta.RegressionByDiscretization",
378:       "weka.filters.unsupervised.attribute.Discretize",
379:       "weka.estimators.KernelEstimator",
380:       "weka.classifiers.rules.DecisionTable",
381:       "weka.attributeSelection.InfoGainAttributeEval",
382:       "weka.core.ListOptions",
383:       "weka.core.GlobalInfoJavadoc",
384:       "weka.attributeSelection.OneRAttributeEval",
385:       "weka.core.OptionHandlerJavadoc",
386:       "weka.classifiers.trees.j48.ClassifierTree",
387:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
388:       "weka.classifiers.meta.AttributeSelectedClassifier",
389:       "weka.attributeSelection.ReliefFAttributeEval",
390:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
391:       "weka.classifiers.meta.Vote",
392:       "weka.estimators.PoissonEstimator",
393:       "weka.core.UnassignedClassException",
394:       "weka.classifiers.meta.CVParameterSelection",
395:       "weka.classifiers.meta.MultiScheme",
396:       "weka.classifiers.lazy.LWL",
397:       "weka.core.AttributeStats",
398:       "weka.experiment.Stats",
399:       "weka.core.matrix.Matrix",
400:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
401:       "weka.core.neighboursearch.PerformanceStats",
402:       "weka.core.neighboursearch.TreePerformanceStats",
403:       "weka.classifiers.meta.AdditiveRegression",
404:       "weka.classifiers.meta.RandomCommittee",
405:       "weka.classifiers.functions.SGD",
406:       "weka.classifiers.functions.SimpleLinearRegression",
407:       "weka.classifiers.functions.SimpleLogistic",
408:       "weka.classifiers.rules.PART",
409:       "weka.classifiers.rules.part.MakeDecList",
410:       "weka.classifiers.functions.VotedPerceptron",
411:       "weka.classifiers.meta.Bagging",
412:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
413:       "weka.classifiers.functions.SMOreg",
414:       "weka.classifiers.functions.supportVector.RegOptimizer",
415:       "weka.classifiers.functions.supportVector.RegSMO",
416:       "weka.classifiers.functions.supportVector.RegSMOImproved",
417:       "weka.attributeSelection.GainRatioAttributeEval",
418:       "weka.core.ManhattanDistance",
419:       "weka.classifiers.functions.supportVector.RBFKernel",
420:       "weka.classifiers.meta.ClassificationViaRegression",
421:       "weka.classifiers.trees.M5P",
422:       "weka.estimators.MahalanobisEstimator",
423:       "weka.classifiers.functions.supportVector.StringKernel",
424:       "weka.classifiers.functions.SGDText$Count",
425:       "weka.core.Check",
426:       "weka.core.CheckOptionHandler"
427:     );
428:   }
429: }

[MASTER] 14:51:57.142 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer0 = new Integer(1302);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
hashMap0.put(integer0, linkedHashMap0);
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
naiveBayesMultinomialText0.setPeriodicPruning(1302);
naiveBayesMultinomialText0.pruneDictionary();
assertEquals(1302, naiveBayesMultinomialText0.getPeriodicPruning());


[MASTER] 14:52:01.095 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 14:52:01.207 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/rmosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 6%
[MASTER] 14:58:05.279 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
[MASTER] 14:58:15.037 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 14:58:15.204 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 14:58:15.437 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 14:58:15.438 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 7
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/rmosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: RMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13273
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13270
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 15:01:50.080 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 15:01:50.101 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 15:01:50.113 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 15:01:50.231 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 15:01:50.251 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 15:01:50.269 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1013
* Starting evolution
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.EntropyBasedPreferenceSorting
* Using seed 1013
* Starting evolution
[MASTER] 15:05:00.315 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 301s and 243 generations, 106055 statements, best individual has fitness: 2768.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 217
* Number of covered goals: 190
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 284
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 239
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 284
* Generated 87 tests with total length 215
* Resulting test suite's coverage: 75% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 77%
* Compiling and checking tests
* Search finished after 332s and 369 generations, 204771 statements, best individual has fitness: 5248.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 69%
* Total number of goals: 370
* Number of covered goals: 254
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 54%
* Total number of goals: 242
* Number of covered goals: 131
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 33
* Number of covered goals: 33
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 61%
* Total number of goals: 713
* Number of covered goals: 433
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 49%
* Total number of goals: 72
* Number of covered goals: 35
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 54%
* Total number of goals: 242
* Number of covered goals: 131
* Generated 90 tests with total length 742
* Resulting test suite's coverage: 63% (average coverage for all fitness functions)
* Generating assertions
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/rmosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
[MASTER] 15:09:54.164 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 15:09:54.970 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 15:10:09.734 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 15:10:09.735 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("The base filters to be used.", arrayList0, 10);
Attribute attribute0 = new Attribute("The base filters to be used.", instances0);
arrayList0.add(attribute0);
discretize0.setInputFormat(instances0);

[MASTER] 15:10:15.211 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 15:10:15.213 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("'", arrayList0, 45);
Attribute attribute0 = new Attribute(".bsi", instances0);
arrayList0.add(attribute0);
discretize0.setInputFormat(instances0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/rmosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
