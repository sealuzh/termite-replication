* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10604
* Connecting to master process on port 10601
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 19:03:43.395 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 19:03:43.441 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 19:03:43.456 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
[MASTER] 19:03:43.697 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
[MASTER] 19:03:43.720 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 19:03:43.740 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Total number of test goals for MOSA: 1367
* Using seed 1001
* Starting evolution
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1729
* Using seed 1001
* Starting evolution
[MASTER] 19:04:35.849 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 268s and 243 generations, 113046 statements, best individual has fitness: 2688.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 217
* Number of covered goals: 192
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 288
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 239
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 288
* Generated 81 tests with total length 191
* Resulting test suite's coverage: 75% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 314s and 369 generations, 169802 statements, best individual has fitness: 5104.0
* Resulting test suite's mutation score: 74%
* Compiling and checking tests
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 69%
* Total number of goals: 370
* Number of covered goals: 257
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 55%
* Total number of goals: 242
* Number of covered goals: 134
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 37
* Number of covered goals: 37
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 61%
* Total number of goals: 713
* Number of covered goals: 438
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 53%
* Total number of goals: 72
* Number of covered goals: 38
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 55%
* Total number of goals: 242
* Number of covered goals: 134
* Generated 92 tests with total length 678
* Resulting test suite's coverage: 64% (average coverage for all fitness functions)
* Generating assertions
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/mosa/tests/s1001/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 24%
* Compiling and checking tests
[MASTER] 19:12:36.780 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 19:12:37.220 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 19:13:01.008 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 19:13:01.010 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
Attribute attribute0 = new Attribute("Unable to create WEKA_HOME (");
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("aM;}$d", arrayList0, 2);
Attribute attribute1 = new Attribute("M", instances0);
arrayList0.add(attribute1);
Instances instances1 = new Instances("@attribute", arrayList0, 0);
Discretize discretize1 = new Discretize();
discretize1.setFindNumBins(true);
discretize0.setInputFormat(instances0);

[MASTER] 19:13:05.764 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 19:13:05.765 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
int int0 = 82;
Instances instances0 = new Instances("-D", arrayList0, 82);
Properties properties0 = new Properties();
ProtectedProperties protectedProperties0 = new ProtectedProperties(properties0);
ProtectedProperties protectedProperties1 = new ProtectedProperties(protectedProperties0);
Attribute attribute0 = new Attribute("-D", instances0, protectedProperties1);
arrayList0.add(attribute0);
Discretize discretize0 = new Discretize();
discretize0.setInputFormat(instances0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/mosa/tests/s1001/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10603
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 19:13:45.526 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 19:13:45.530 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 19:13:45.531 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 19:13:46.462 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 19:13:47.105 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 19:13:47.107 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 19:13:49.687 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 19:13:49.769 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 19:13:49.769 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 19:13:49.769 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 19:13:49.769 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 19:13:49.770 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 19:13:49.770 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 19:13:49.770 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 19:13:49.771 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 19:13:49.963 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 19:13:50.000 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 3904
* Using seed 1001
* Starting evolution
[MASTER] 19:14:29.427 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 19:14:47.201 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 305s and 118 generations, 62762 statements, best individual has fitness: 15184.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 58%
* Total number of goals: 1378
* Number of covered goals: 805
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 43%
* Total number of goals: 809
* Number of covered goals: 347
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 70
* Number of covered goals: 70
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 64%
* Total number of goals: 424
* Number of covered goals: 271
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 22%
* Total number of goals: 278
* Number of covered goals: 60
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 41%
* Total number of goals: 809
* Number of covered goals: 334
* Generated 157 tests with total length 1551
* Resulting test suite's coverage: 52% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 8%
[MASTER] 19:27:11.316 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
[MASTER] 19:27:23.128 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 19:27:23.256 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 19:27:23.273 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 19:27:23.708 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 19:27:23.708 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 19:27:23.710 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/mosa/tests/s1001/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10601
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10598
* Connecting to master process on port 10600
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 19:28:28.004 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 19:28:28.017 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 19:28:28.047 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 19:28:28.199 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 19:28:29.035 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 19:28:29.036 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 19:28:29.056 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 19:28:29.148 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 19:28:29.156 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 19:28:29.159 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Total number of test goals for MOSA: 2699
* Using seed 1001
* Starting evolution
[MASTER] 19:28:33.437 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 19:28:33.462 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 19:28:33.470 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1412
* Using seed 1001
* Starting evolution
[MASTER] 19:28:35.899 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 19:28:36.379 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 19:28:36.381 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 19:28:38.168 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z: Line 635
[MASTER] 19:28:38.168 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D: Line 704
[MASTER] 19:28:38.168 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;: Line 771
[MASTER] 19:28:38.168 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: Line 817
[MASTER] 19:28:38.172 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D: root-Branch
[MASTER] 19:28:38.172 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;: root-Branch
[MASTER] 19:28:38.172 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: root-Branch
[MASTER] 19:28:38.172 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z: root-Branch
[MASTER] 19:28:38.179 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 267: weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z:635 - InsertUnaryOp Negation
[MASTER] 19:28:38.179 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 283: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - ReplaceVariable m_minWordP -> m_norm
[MASTER] 19:28:38.179 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 284: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - ReplaceVariable m_minWordP -> m_t
[MASTER] 19:28:38.179 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 285: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - ReplaceVariable m_minWordP -> m_leplace
[MASTER] 19:28:38.179 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 286: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - ReplaceVariable m_minWordP -> m_lnorm
[MASTER] 19:28:38.179 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 287: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - InsertUnaryOp Negation
[MASTER] 19:28:38.179 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 312: weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;:771 - ReplaceConstant - The LNorm to use for document length normalization. -> 
[MASTER] 19:28:38.182 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 335: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z:817 - InsertUnaryOp Negation
[MASTER] 19:28:38.183 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z:False
[MASTER] 19:28:38.183 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:Positive
[MASTER] 19:28:38.183 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 19:28:38.183 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z:False
[MASTER] 19:28:38.184 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z
[MASTER] 19:28:38.184 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D
[MASTER] 19:28:38.184 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;
[MASTER] 19:28:38.184 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z
[MASTER] 19:28:38.185 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z
[MASTER] 19:28:38.195 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D
[MASTER] 19:28:38.195 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;
[MASTER] 19:28:38.195 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z
[MASTER] 19:28:38.196 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getLowercaseTokens()Z
[MASTER] 19:28:38.196 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getUseStopList()Z
[MASTER] 19:28:38.196 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getMinWordFrequency()D
[MASTER] 19:28:38.196 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:LNormTipText()Ljava/lang/String;
[MASTER] 19:28:38.235 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V: Line 789
[MASTER] 19:28:38.235 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V: Line 790
[MASTER] 19:28:38.236 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V: root-Branch
[MASTER] 19:28:38.237 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 318: weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V:789 - ReplaceVariable newLNorm -> m_norm
[MASTER] 19:28:38.238 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 319: weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V:789 - ReplaceVariable newLNorm -> m_minWordP
[MASTER] 19:28:38.238 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 321: weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V:789 - ReplaceVariable newLNorm -> m_leplace
[MASTER] 19:28:38.238 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 322: weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V:789 - ReplaceVariable newLNorm -> m_lnorm
[MASTER] 19:28:38.238 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 323: weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V:789 - InsertUnaryOp Negation of newLNorm
[MASTER] 19:28:38.239 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V
[MASTER] 19:28:38.240 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V
[MASTER] 19:28:38.241 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setLNorm(D)V
* Total number of test goals for MOSA: 2767
* Using seed 1001
* Starting evolution
[MASTER] 19:28:41.441 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I34 Branch 49 IFEQ L832 - false
[MASTER] 19:28:41.441 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I37 Branch 50 IFEQ L832 - true
[MASTER] 19:28:41.442 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 343: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:832 - ReplaceComparisonOperator == -> !=
[MASTER] 19:28:41.455 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z:False
[MASTER] 19:28:41.455 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z
[MASTER] 19:28:41.462 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z
[MASTER] 19:28:41.463 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I34 Branch 49 IFEQ L832 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStopwords(Ljava/io/File;)V
[MASTER] 19:28:41.463 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getUseWordFrequencies()Z
[MASTER] 19:28:41.464 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I37 Branch 50 IFEQ L832 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStopwords(Ljava/io/File;)V
[MASTER] 19:28:42.853 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getPeriodicPruning()I:Positive
[MASTER] 19:28:45.932 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;: Line 599
[MASTER] 19:28:45.934 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;: root-Branch
[MASTER] 19:28:45.934 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 214: weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;:599 - ReplaceConstant - Whether check for error rate >= 1/2 is included in stopping criterion. -> 
[MASTER] 19:28:45.936 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 19:28:45.937 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;
[MASTER] 19:28:45.937 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;
[MASTER] 19:28:45.943 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.rules.JRip:checkErrorRateTipText()Ljava/lang/String;
[MASTER] 19:28:46.026 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NominalAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
[MASTER] 19:28:52.143 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.<init>(Lweka/classifiers/rules/JRip;)V
[MASTER] 19:29:08.785 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 19:29:08.786 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 19:29:13.331 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 19:30:13.635 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 313s and 315 generations, 117851 statements, best individual has fitness: 1440.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 90%
* Total number of goals: 338
* Number of covered goals: 305
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 85%
* Total number of goals: 194
* Number of covered goals: 164
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 476
* Number of covered goals: 445
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 112
* Number of covered goals: 61
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 83%
* Total number of goals: 194
* Number of covered goals: 161
* Generated 78 tests with total length 542
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 338s and 262 generations, 103535 statements, best individual has fitness: 12928.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 35%
* Total number of goals: 705
* Number of covered goals: 246
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 25%
* Total number of goals: 416
* Number of covered goals: 106
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 53%
* Total number of goals: 993
* Number of covered goals: 529
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 28%
* Total number of goals: 93
* Number of covered goals: 26
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 25%
* Total number of goals: 416
* Number of covered goals: 106
* Generated 77 tests with total length 423
* Resulting test suite's coverage: 42% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 21%
* Compiling and checking tests
[MASTER] 19:35:18.861 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 19:35:19.914 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/mosa/tests/s1001/107_weka/evosuite-tests
* Done!

* Computation finished
* Search finished after 464s and 49 generations, 37264 statements, best individual has fitness: 1776.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 647
* Number of covered goals: 639
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 97%
* Total number of goals: 441
* Number of covered goals: 429
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 678
* Number of covered goals: 633
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 47%
* Total number of goals: 244
* Number of covered goals: 114
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 124
* Number of covered goals: 124
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 124
* Number of covered goals: 124
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 94%
* Total number of goals: 441
* Number of covered goals: 416
* Generated 221 tests with total length 2247
* Resulting test suite's coverage: 92% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 57%
* Compiling and checking tests
[MASTER] 19:37:58.855 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_64_1573673878814/weka/classifiers/bayes/NaiveBayesMultinomialText_64_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_64_1573673878814/weka/classifiers/bayes/NaiveBayesMultinomialText_64_tmp__ESTest_scaffolding.java]]
[MASTER] 19:37:58.855 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 19:37:58.855 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 19:37:58.859 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 19:37:58.859 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 19:37:58.859 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 19:37:58.861 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_64_1573673878814/weka/classifiers/bayes/NaiveBayesMultinomialText_64_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Nov 13 19:37:58 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.System;
16: import org.evosuite.runtime.testdata.EvoSuiteFile;
17: import org.evosuite.runtime.testdata.FileSystemHandling;
18: import org.junit.runner.RunWith;
19: import weka.classifiers.bayes.NaiveBayesMultinomialText;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_64_tmp__ESTest extends NaiveBayesMultinomialText_64_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=3.0440205692665008
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
32:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
33:       naiveBayesMultinomialText0.setDebug(true);
34:       naiveBayesMultinomialText0.getStopwords();
35:       FileSystemHandling.createFolder((EvoSuiteFile) null);
36:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
37:       naiveBayesMultinomialText0.getOptions();
38:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
39:       
40:       naiveBayesMultinomialText0.m_wordFrequencies = true;
41:       naiveBayesMultinomialText0.getRevision();
42:       System.setCurrentTimeMillis((-2411L));
43:       naiveBayesMultinomialText0.m_lowercaseTokens = false;
44:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
45:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
46:       naiveBayesMultinomialText0.pruneDictionary();
47:       naiveBayesMultinomialText0.getNorm();
48:       System.setCurrentTimeMillis((-1720L));
49:       naiveBayesMultinomialText0.getUseWordFrequencies();
50:       naiveBayesMultinomialText0.toString();
51:       naiveBayesMultinomialText0.getRevision();
52:       assertTrue(naiveBayesMultinomialText0.getUseWordFrequencies());
53:   }
54: }
RegularFileObject[/tmp/EvoSuite_64_1573673878814/weka/classifiers/bayes/NaiveBayesMultinomialText_64_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Nov 13 19:37:58 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_64_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_64_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.attributeSelection.SubsetEvaluator",
95:       "weka.classifiers.bayes.net.search.local.K2",
96:       "weka.core.neighboursearch.BallTree",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.attributeSelection.CfsSubsetEval",
101:       "weka.core.DenseInstance",
102:       "weka.classifiers.trees.J48",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.rules.DecisionTable$DummySubsetEvaluator",
105:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.filters.SimpleFilter",
109:       "weka.filters.SimpleStreamFilter",
110:       "weka.estimators.IncrementalEstimator",
111:       "weka.estimators.Estimator$Builder",
112:       "weka.core.stemmers.NullStemmer",
113:       "weka.classifiers.trees.j48.C45ModelSelection",
114:       "weka.core.RelationalLocator",
115:       "weka.core.Utils",
116:       "weka.core.CustomDisplayStringProvider",
117:       "weka.core.tokenizers.Tokenizer",
118:       "weka.core.NormalizableDistance",
119:       "weka.core.NoSupportForMissingValuesException",
120:       "weka.classifiers.UpdateableClassifier",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
122:       "weka.core.MultiInstanceCapabilitiesHandler",
123:       "weka.core.Copyable",
124:       "weka.core.Capabilities",
125:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
126:       "weka.core.BinarySparseInstance",
127:       "weka.core.AttributeLocator",
128:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
129:       "weka.core.SerializedObject",
130:       "weka.clusterers.UpdateableClusterer",
131:       "weka.attributeSelection.BestFirst",
132:       "weka.core.Summarizable",
133:       "weka.classifiers.trees.j48.ModelSelection",
134:       "weka.core.AdditionalMeasureProducer",
135:       "weka.core.neighboursearch.balltrees.BallNode",
136:       "org.pentaho.packageManagement.PackageManager$1",
137:       "weka.attributeSelection.GreedyStepwise",
138:       "weka.core.Drawable",
139:       "weka.core.matrix.Matrix",
140:       "weka.core.CapabilitiesHandler",
141:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
142:       "weka.attributeSelection.ASEvaluation",
143:       "weka.core.AbstractInstance",
144:       "weka.core.scripting.JythonObject",
145:       "weka.classifiers.meta.FilteredClassifier",
146:       "weka.core.SelectedTag",
147:       "org.pentaho.packageManagement.DefaultPackage",
148:       "weka.core.neighboursearch.balltrees.BallSplitter",
149:       "weka.classifiers.bayes.BayesNet",
150:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
151:       "weka.core.Version",
152:       "weka.attributeSelection.AttributeSelection",
153:       "weka.filters.AllFilter",
154:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
155:       "weka.core.Tag",
156:       "weka.classifiers.trees.j48.BinC45ModelSelection",
157:       "weka.classifiers.AbstractClassifier",
158:       "weka.core.OptionHandler",
159:       "weka.core.WekaException",
160:       "weka.filters.supervised.attribute.AttributeSelection",
161:       "weka.filters.StreamableFilter",
162:       "weka.core.Range",
163:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
164:       "weka.core.PartitionGenerator",
165:       "weka.core.scripting.JythonSerializableObject",
166:       "weka.classifiers.Classifier",
167:       "weka.core.Capabilities$Capability",
168:       "weka.core.SparseInstance",
169:       "org.pentaho.packageManagement.PackageManager",
170:       "weka.estimators.PoissonEstimator",
171:       "weka.core.tokenizers.WordTokenizer",
172:       "weka.classifiers.trees.j48.ClassifierTree",
173:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
174:       "weka.core.stemmers.SnowballStemmer",
175:       "weka.classifiers.trees.j48.PruneableClassifierTree",
176:       "weka.classifiers.Evaluation",
177:       "weka.attributeSelection.ASSearch",
178:       "weka.classifiers.functions.supportVector.Kernel",
179:       "weka.core.WekaPackageManager",
180:       "weka.filters.SupervisedFilter",
181:       "weka.core.TechnicalInformationHandler",
182:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
183:       "weka.classifiers.lazy.LWL",
184:       "weka.core.neighboursearch.LinearNNSearch",
185:       "weka.attributeSelection.StartSetHandler",
186:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
187:       "weka.core.Option",
188:       "weka.core.neighboursearch.PerformanceStats",
189:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
190:       "weka.filters.Sourcable",
191:       "weka.core.Attribute",
192:       "weka.core.Stopwords",
193:       "weka.classifiers.rules.DecisionTable",
194:       "weka.core.tokenizers.AlphabeticTokenizer",
195:       "weka.core.FastVector",
196:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
197:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
198:       "weka.core.UnassignedDatasetException",
199:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
200:       "weka.attributeSelection.RankedOutputSearch",
201:       "weka.classifiers.SingleClassifierEnhancer",
202:       "weka.core.RevisionUtils",
203:       "weka.core.Instance",
204:       "weka.estimators.Estimator",
205:       "weka.core.ProtectedProperties",
206:       "weka.core.StringLocator",
207:       "weka.classifiers.bayes.net.ADNode",
208:       "weka.core.Matchable",
209:       "weka.core.AttributeStats",
210:       "weka.filters.MultiFilter",
211:       "weka.core.WeightedInstancesHandler",
212:       "weka.core.neighboursearch.NearestNeighbourSearch",
213:       "weka.classifiers.trees.DecisionStump",
214:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
215:       "weka.filters.unsupervised.attribute.Discretize",
216:       "weka.filters.unsupervised.attribute.Remove",
217:       "weka.core.EuclideanDistance",
218:       "weka.core.Instances",
219:       "weka.core.UnassignedClassException",
220:       "weka.classifiers.bayes.net.ParentSet",
221:       "weka.classifiers.rules.ZeroR",
222:       "weka.attributeSelection.Ranker",
223:       "weka.core.TechnicalInformation",
224:       "weka.core.UnsupportedAttributeTypeException",
225:       "weka.classifiers.Sourcable",
226:       "weka.core.RevisionHandler",
227:       "weka.classifiers.evaluation.output.prediction.PlainText",
228:       "weka.core.neighboursearch.TreePerformanceStats",
229:       "weka.core.xml.XMLSerialization",
230:       "weka.classifiers.xml.XMLClassifier",
231:       "weka.filters.Filter",
232:       "weka.filters.supervised.attribute.Discretize"
233:     );
234:   } 
235: 
236:   private static void resetClasses() {
237:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_64_tmp__ESTest_scaffolding.class.getClassLoader()); 
238: 
239:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
240:       "weka.classifiers.AbstractClassifier",
241:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
242:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
243:       "weka.core.Capabilities$Capability",
244:       "weka.core.tokenizers.Tokenizer",
245:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
246:       "weka.core.tokenizers.WordTokenizer",
247:       "weka.core.stemmers.NullStemmer",
248:       "weka.core.Instances",
249:       "weka.core.Utils",
250:       "weka.filters.Filter",
251:       "weka.filters.supervised.attribute.Discretize",
252:       "weka.core.Range",
253:       "weka.core.AbstractInstance",
254:       "weka.core.SparseInstance",
255:       "weka.core.BinarySparseInstance",
256:       "weka.core.Capabilities",
257:       "org.pentaho.packageManagement.PackageManager",
258:       "org.pentaho.packageManagement.DefaultPackageManager",
259:       "weka.core.Version",
260:       "weka.core.Environment",
261:       "weka.core.WekaPackageManager",
262:       "weka.core.UnassignedDatasetException",
263:       "weka.classifiers.Evaluation",
264:       "weka.core.Option",
265:       "weka.core.tokenizers.AlphabeticTokenizer",
266:       "weka.core.SerializedObject",
267:       "weka.core.FindWithCapabilities",
268:       "weka.core.SingleIndex",
269:       "weka.core.ClassDiscovery",
270:       "weka.core.Attribute",
271:       "weka.core.ProtectedProperties",
272:       "weka.core.neighboursearch.NearestNeighbourSearch",
273:       "weka.core.neighboursearch.KDTree",
274:       "weka.core.NormalizableDistance",
275:       "weka.core.EuclideanDistance",
276:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
277:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
278:       "weka.classifiers.bayes.NaiveBayesMultinomial",
279:       "weka.classifiers.bayes.NaiveBayes",
280:       "weka.core.TechnicalInformation",
281:       "weka.core.TechnicalInformation$Type",
282:       "weka.core.TechnicalInformation$Field",
283:       "weka.classifiers.bayes.BayesNet",
284:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
285:       "weka.core.Tag",
286:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
287:       "weka.classifiers.bayes.net.search.local.K2",
288:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
289:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
290:       "weka.classifiers.RandomizableClassifier",
291:       "weka.classifiers.functions.SGDText",
292:       "weka.core.RevisionUtils",
293:       "weka.core.neighboursearch.BallTree",
294:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
295:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
296:       "weka.core.neighboursearch.balltrees.BallSplitter",
297:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
298:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
299:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
300:       "weka.classifiers.functions.neural.NeuralConnection",
301:       "weka.classifiers.functions.neural.NeuralNode",
302:       "weka.core.stemmers.SnowballStemmer",
303:       "weka.core.neighboursearch.balltrees.BallNode",
304:       "weka.core.DenseInstance",
305:       "weka.core.stemmers.Stemming",
306:       "weka.classifiers.CostMatrix",
307:       "weka.core.TestInstances",
308:       "weka.core.Stopwords",
309:       "weka.core.neighboursearch.LinearNNSearch",
310:       "weka.core.stemmers.LovinsStemmer",
311:       "weka.core.stemmers.IteratedLovinsStemmer",
312:       "weka.classifiers.SingleClassifierEnhancer",
313:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
314:       "weka.classifiers.meta.CostSensitiveClassifier",
315:       "weka.classifiers.rules.ZeroR",
316:       "weka.classifiers.lazy.IBk",
317:       "weka.classifiers.functions.supportVector.Kernel",
318:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
319:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
320:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
321:       "weka.classifiers.trees.DecisionStump",
322:       "weka.classifiers.misc.SerializedClassifier",
323:       "weka.classifiers.lazy.LWL",
324:       "weka.classifiers.MultipleClassifiersCombiner",
325:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
326:       "weka.classifiers.meta.MultiScheme",
327:       "weka.classifiers.meta.MultiClassClassifier",
328:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
329:       "weka.classifiers.functions.Logistic",
330:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
331:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
332:       "weka.classifiers.meta.Stacking",
333:       "weka.core.WekaException",
334:       "weka.core.UnsupportedAttributeTypeException",
335:       "weka.core.tokenizers.NGramTokenizer",
336:       "weka.core.neighboursearch.CoverTree",
337:       "weka.classifiers.bayes.net.BIFReader",
338:       "weka.attributeSelection.ASEvaluation",
339:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
340:       "weka.attributeSelection.PrincipalComponents",
341:       "weka.classifiers.IteratedSingleClassifierEnhancer",
342:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
343:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
344:       "weka.classifiers.meta.RandomSubSpace",
345:       "weka.classifiers.trees.REPTree",
346:       "weka.core.WekaEnumeration",
347:       "weka.core.Attribute$1",
348:       "weka.classifiers.meta.AdditiveRegression",
349:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
350:       "weka.classifiers.meta.AdaBoostM1",
351:       "weka.classifiers.functions.supportVector.CachedKernel",
352:       "weka.classifiers.functions.supportVector.RBFKernel",
353:       "weka.classifiers.trees.RandomTree",
354:       "weka.classifiers.misc.InputMappedClassifier",
355:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
356:       "weka.classifiers.meta.RandomCommittee",
357:       "weka.classifiers.functions.SimpleLogistic",
358:       "weka.filters.SimpleFilter",
359:       "weka.filters.SimpleStreamFilter",
360:       "weka.filters.MultiFilter",
361:       "weka.filters.AllFilter",
362:       "weka.estimators.Estimator",
363:       "weka.estimators.DiscreteEstimator",
364:       "weka.classifiers.functions.SMOreg",
365:       "weka.classifiers.functions.supportVector.RegOptimizer",
366:       "weka.classifiers.functions.supportVector.RegSMO",
367:       "weka.classifiers.functions.supportVector.RegSMOImproved",
368:       "weka.classifiers.functions.supportVector.PolyKernel",
369:       "weka.classifiers.lazy.KStar",
370:       "weka.classifiers.rules.JRip",
371:       "weka.classifiers.rules.DecisionTable",
372:       "weka.attributeSelection.ASSearch",
373:       "weka.attributeSelection.BestFirst",
374:       "weka.classifiers.meta.LogitBoost",
375:       "weka.classifiers.meta.FilteredClassifier",
376:       "weka.filters.supervised.attribute.AttributeSelection",
377:       "weka.attributeSelection.AttributeSelection",
378:       "weka.attributeSelection.CfsSubsetEval",
379:       "weka.attributeSelection.GreedyStepwise",
380:       "weka.classifiers.trees.J48",
381:       "weka.attributeSelection.ReliefFAttributeEval",
382:       "weka.attributeSelection.InfoGainAttributeEval",
383:       "weka.classifiers.meta.ClassificationViaRegression",
384:       "weka.classifiers.trees.m5.M5Base",
385:       "weka.classifiers.trees.M5P",
386:       "weka.classifiers.functions.LinearRegression",
387:       "weka.classifiers.meta.CVParameterSelection",
388:       "weka.core.FastVector",
389:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
390:       "weka.core.neighboursearch.balltrees.BottomUpConstructor$TempNode",
391:       "weka.classifiers.meta.AttributeSelectedClassifier",
392:       "weka.classifiers.functions.supportVector.StringKernel",
393:       "weka.classifiers.functions.SimpleLinearRegression",
394:       "weka.attributeSelection.OneRAttributeEval",
395:       "weka.core.AttributeStats",
396:       "weka.estimators.PoissonEstimator",
397:       "weka.core.UnassignedClassException",
398:       "weka.attributeSelection.GainRatioAttributeEval",
399:       "weka.classifiers.rules.M5Rules",
400:       "weka.core.converters.ArffLoader$ArffReader",
401:       "weka.estimators.NormalEstimator",
402:       "weka.core.matrix.Matrix",
403:       "weka.core.Check",
404:       "weka.core.CheckGOE",
405:       "weka.classifiers.rules.PART",
406:       "weka.classifiers.rules.part.MakeDecList",
407:       "weka.classifiers.functions.VotedPerceptron",
408:       "weka.classifiers.functions.GaussianProcesses",
409:       "weka.classifiers.functions.SMO",
410:       "weka.attributeSelection.CorrelationAttributeEval",
411:       "weka.attributeSelection.WrapperSubsetEval",
412:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
413:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
414:       "weka.classifiers.trees.j48.ClassifierTree",
415:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
416:       "weka.classifiers.trees.LMT",
417:       "weka.classifiers.rules.OneR",
418:       "weka.classifiers.functions.MultilayerPerceptron",
419:       "weka.filters.unsupervised.attribute.NominalToBinary",
420:       "weka.classifiers.functions.neural.SigmoidUnit",
421:       "weka.classifiers.functions.neural.LinearUnit",
422:       "weka.classifiers.meta.Bagging",
423:       "weka.classifiers.meta.RegressionByDiscretization",
424:       "weka.filters.unsupervised.attribute.Discretize",
425:       "weka.classifiers.bayes.NaiveBayesUpdateable",
426:       "weka.classifiers.functions.SGD",
427:       "weka.core.SelectedTag",
428:       "weka.classifiers.functions.supportVector.Puk",
429:       "weka.classifiers.meta.Vote",
430:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
431:       "weka.estimators.KernelEstimator",
432:       "weka.classifiers.trees.RandomForest",
433:       "weka.core.ListOptions",
434:       "weka.core.Javadoc",
435:       "weka.core.ClassCache",
436:       "weka.core.AllJavadoc",
437:       "weka.estimators.MahalanobisEstimator",
438:       "weka.experiment.Stats",
439:       "weka.core.ManhattanDistance"
440:     );
441:   }
442: }

[MASTER] 19:37:58.879 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
naiveBayesMultinomialText0.setDebug(true);
naiveBayesMultinomialText0.getStopwords();
FileSystemHandling.createFolder((EvoSuiteFile) null);
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
naiveBayesMultinomialText0.getOptions();
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());

naiveBayesMultinomialText0.m_wordFrequencies = true;
naiveBayesMultinomialText0.getRevision();
System.setCurrentTimeMillis((-2411L));
naiveBayesMultinomialText0.m_lowercaseTokens = false;
naiveBayesMultinomialText0.normalizeDocLengthTipText();
naiveBayesMultinomialText0.useWordFrequenciesTipText();
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.getNorm();
System.setCurrentTimeMillis((-1720L));
naiveBayesMultinomialText0.getUseWordFrequencies();
naiveBayesMultinomialText0.toString();
naiveBayesMultinomialText0.getRevision();
assertTrue(naiveBayesMultinomialText0.getUseWordFrequencies());


[MASTER] 19:38:02.402 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 19:38:02.496 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/mosa/tests/s1001/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 19:41:51.509 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6672395833333333% of time used, but only 68/221 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/mosa/tests/s1001/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10599
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 19:44:27.679 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 19:44:27.683 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 19:44:27.684 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 19:44:27.763 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2499
* Using seed 1001
* Starting evolution
[MASTER] 19:44:30.024 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Search finished after 240s and 128 generations, 81229 statements, best individual has fitness: 16712.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 16 tests with total length 91
* Resulting test suite's coverage: 16% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/mosa/tests/s1001/107_weka/evosuite-tests
* Done!

* Computation finished
