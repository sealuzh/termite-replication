* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.Optimization
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20190
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20195
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20198
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:22:28.183 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:22:28.211 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:22:28.216 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:22:30.137 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 21:22:30.990 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 21:22:30.991 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Total number of test goals for MOSA: 2767
* Using seed 1003
* Starting evolution
[MASTER] 21:22:34.732 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:22:34.750 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:22:34.761 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:22:34.834 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2499
* Using seed 1003
* Starting evolution
[MASTER] 21:22:38.181 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.getAccuRate()D: Line 725
[MASTER] 21:22:38.186 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.getAccuRate()D: root-Branch
[MASTER] 21:22:38.193 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 21:22:38.198 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 675: weka.classifiers.rules.JRip$Antd.getAccuRate()D:725 - ReplaceVariable accuRate -> cover
[MASTER] 21:22:38.198 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 676: weka.classifiers.rules.JRip$Antd.getAccuRate()D:725 - ReplaceVariable accuRate -> accu
[MASTER] 21:22:38.198 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 677: weka.classifiers.rules.JRip$Antd.getAccuRate()D:725 - ReplaceVariable accuRate -> value
[MASTER] 21:22:38.198 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 678: weka.classifiers.rules.JRip$Antd.getAccuRate()D:725 - ReplaceVariable accuRate -> maxInfoGain
[MASTER] 21:22:38.198 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 679: weka.classifiers.rules.JRip$Antd.getAccuRate()D:725 - InsertUnaryOp Negation
[MASTER] 21:22:38.200 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.Antd.getAccuRate()D
[MASTER] 21:22:38.202 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.Antd.getAccuRate()D
[MASTER] 21:22:38.203 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$Antd.getAccuRate()D: root-Branch in context: weka.classifiers.rules.JRip$Antd:getAccuRate()D
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:22:47.740 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:22:47.746 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:22:47.760 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:22:48.874 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 21:22:49.750 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 21:22:49.750 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 21:22:52.437 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 21:22:52.487 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 21:22:52.488 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 21:22:52.488 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 21:22:52.489 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 21:22:52.489 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 21:22:52.490 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 21:22:52.491 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 21:22:52.491 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 21:22:52.570 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 21:22:52.598 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 3904
* Using seed 1003
* Starting evolution
[MASTER] 21:22:58.045 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 21:24:31.023 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 237s and 118 generations, 58848 statements, best individual has fitness: 15008.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 59%
* Total number of goals: 1378
* Number of covered goals: 814
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 44%
* Total number of goals: 809
* Number of covered goals: 354
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 68
* Number of covered goals: 68
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 63%
* Total number of goals: 424
* Number of covered goals: 269
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 23%
* Total number of goals: 278
* Number of covered goals: 63
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 103
* Number of covered goals: 101
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 42%
* Total number of goals: 809
* Number of covered goals: 338
* Generated 153 tests with total length 1522
* Resulting test suite's coverage: 53% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 284s and 128 generations, 86014 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 19 tests with total length 111
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 296s and 262 generations, 118984 statements, best individual has fitness: 12240.0
* Resulting test suite's mutation score: 20%
* Compiling and checking tests
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 37%
* Total number of goals: 705
* Number of covered goals: 262
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 28%
* Total number of goals: 416
* Number of covered goals: 117
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 15
* Number of covered goals: 15
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 58%
* Total number of goals: 993
* Number of covered goals: 575
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 30%
* Total number of goals: 93
* Number of covered goals: 28
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 28%
* Total number of goals: 416
* Number of covered goals: 117
* Generated 81 tests with total length 571
* Resulting test suite's coverage: 45% (average coverage for all fitness functions)
* Generating assertions
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/mosa/tests/s1003/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
[MASTER] 21:28:51.645 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 21:28:52.451 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/mosa/tests/s1003/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 10%
* Compiling and checking tests
[MASTER] 21:33:56.201 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_144_1573680836168/weka/classifiers/Evaluation_144_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_144_1573680836168/weka/classifiers/Evaluation_144_tmp__ESTest_scaffolding.java]]
[MASTER] 21:33:56.201 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 21:33:56.201 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 21:33:56.207 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   variable double1
  location: class weka.classifiers.Evaluation_144_tmp__ESTest: 46
[MASTER] 21:33:56.208 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_144_1573680836168/weka/classifiers/Evaluation_144_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Nov 13 21:33:56 GMT 2019
4:  */
5: 
6: package weka.classifiers;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import org.evosuite.runtime.EvoRunner;
11: import org.evosuite.runtime.EvoRunnerParameters;
12: import org.evosuite.runtime.testdata.EvoSuiteURL;
13: import org.evosuite.runtime.testdata.NetworkHandling;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.Evaluation;
16: import weka.core.Instances;
17: import weka.core.TestInstances;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class Evaluation_144_tmp__ESTest extends Evaluation_144_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=2.2593940774764087
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, " V[X*XEvG9m&iw");
29:       TestInstances testInstances0 = new TestInstances();
30:       Instances instances0 = testInstances0.generate(" ");
31:       Evaluation evaluation0 = new Evaluation(instances0);
32:       evaluation0.weightedFalseNegativeRate();
33:       String[] stringArray0 = new String[5];
34:       stringArray0[0] = "@data";
35:       stringArray0[1] = " statistics for each class.\n";
36:       stringArray0[2] = ".arff";
37:       stringArray0[3] = ".arff";
38:       stringArray0[4] = ".arff";
39:       evaluation0.m_SumSchemeEntropy = 1282.954734;
40:       testInstances0.setOptions(stringArray0);
41:       evaluation0.SFEntropyGain();
42:       evaluation0.trueNegativeRate((-2));
43:       assertEquals(Double.NEGATIVE_INFINITY, evaluation0.SFMeanEntropyGain(), 0.01);
44:       
45:       double double0 = Evaluation.MIN_SF_PROB;
46:       assertNotEquals(double0, double1, 0.01);
47:   }
48: }
RegularFileObject[/tmp/EvoSuite_144_1573680836168/weka/classifiers/Evaluation_144_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Nov 13 21:33:56 GMT 2019
5:  */
6: 
7: package weka.classifiers;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class Evaluation_144_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.Evaluation"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Evaluation_144_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.clusterers.AbstractClusterer",
91:       "weka.classifiers.functions.MultilayerPerceptron$ControlPanel",
92:       "weka.core.converters.TextDirectoryLoader",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.filters.UnsupervisedFilter",
96:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
97:       "weka.core.DenseInstance",
98:       "weka.classifiers.trees.J48",
99:       "weka.core.converters.DatabaseConverter",
100:       "org.pentaho.packageManagement.DefaultPackageManager",
101:       "weka.estimators.UnivariateIntervalEstimator",
102:       "org.bounce.net.DefaultAuthenticator",
103:       "weka.clusterers.NumberOfClustersRequestable",
104:       "weka.core.stemmers.NullStemmer",
105:       "weka.classifiers.functions.SGDText",
106:       "weka.classifiers.meta.AdaBoostM1",
107:       "weka.core.CustomDisplayStringProvider",
108:       "weka.core.NormalizableDistance",
109:       "weka.classifiers.functions.SMOreg",
110:       "weka.clusterers.SimpleKMeans",
111:       "weka.core.TechnicalInformation$Type",
112:       "weka.core.Copyable",
113:       "weka.filters.supervised.attribute.NominalToBinary",
114:       "weka.core.BinarySparseInstance",
115:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
116:       "weka.core.SerializedObject",
117:       "weka.clusterers.UpdateableClusterer",
118:       "weka.core.AdditionalMeasureProducer",
119:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
120:       "weka.classifiers.lazy.kstar.KStarConstants",
121:       "weka.classifiers.functions.supportVector.RegOptimizer",
122:       "weka.classifiers.misc.InputMappedClassifier",
123:       "weka.experiment.ResultProducer",
124:       "weka.classifiers.functions.neural.NeuralConnection",
125:       "weka.core.Version",
126:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
127:       "weka.core.neighboursearch.CoverTree",
128:       "weka.classifiers.AbstractClassifier",
129:       "weka.core.converters.ArffLoader",
130:       "weka.classifiers.meta.Stacking",
131:       "weka.core.WekaException",
132:       "weka.classifiers.functions.neural.NeuralNode",
133:       "weka.filters.StreamableFilter",
134:       "weka.core.Attribute$1",
135:       "weka.core.PartitionGenerator",
136:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
137:       "weka.core.SparseInstance",
138:       "weka.core.tokenizers.WordTokenizer",
139:       "weka.classifiers.trees.j48.ClassifierTree",
140:       "weka.classifiers.functions.MultilayerPerceptron",
141:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
142:       "weka.classifiers.trees.j48.PruneableClassifierTree",
143:       "weka.classifiers.Evaluation",
144:       "weka.classifiers.functions.supportVector.Kernel",
145:       "weka.core.converters.CSVLoader",
146:       "weka.classifiers.functions.neural.LinearUnit",
147:       "weka.classifiers.evaluation.ThresholdCurve",
148:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
149:       "weka.core.converters.URLSourcedLoader",
150:       "weka.core.converters.FileSourcedConverter",
151:       "weka.clusterers.Clusterer",
152:       "weka.core.neighboursearch.PerformanceStats",
153:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
154:       "weka.estimators.UnivariateKernelEstimator",
155:       "weka.core.UnassignedDatasetException",
156:       "weka.classifiers.RandomizableClassifier",
157:       "weka.core.Queue$QueueNode",
158:       "weka.core.RevisionUtils",
159:       "weka.core.converters.Loader",
160:       "weka.classifiers.functions.supportVector.RegSMO",
161:       "weka.core.ProtectedProperties",
162:       "weka.estimators.Estimator",
163:       "weka.core.StringLocator",
164:       "weka.classifiers.lazy.kstar.KStarCache",
165:       "weka.core.AttributeStats",
166:       "weka.clusterers.DensityBasedClusterer",
167:       "weka.classifiers.trees.DecisionStump",
168:       "weka.estimators.UnivariateQuantileEstimator",
169:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
170:       "weka.filters.unsupervised.attribute.Remove",
171:       "weka.core.Randomizable",
172:       "weka.core.EuclideanDistance",
173:       "weka.core.Instances",
174:       "weka.core.converters.AbstractFileLoader",
175:       "weka.classifiers.bayes.NaiveBayesMultinomial",
176:       "weka.core.converters.ConverterUtils$DataSink",
177:       "weka.classifiers.bayes.net.ParentSet",
178:       "weka.core.converters.DatabaseConnection",
179:       "weka.core.TechnicalInformation",
180:       "weka.core.UnsupportedAttributeTypeException",
181:       "weka.core.RevisionHandler",
182:       "weka.experiment.Stats",
183:       "weka.core.converters.ConverterUtils$DataSource",
184:       "weka.classifiers.rules.OneR$OneRRule",
185:       "weka.classifiers.xml.XMLClassifier",
186:       "weka.filters.Filter",
187:       "weka.filters.supervised.attribute.Discretize",
188:       "weka.core.TestInstances",
189:       "weka.core.converters.ConverterUtils",
190:       "weka.core.DistanceFunction",
191:       "org.pentaho.packageManagement.Package",
192:       "weka.classifiers.trees.m5.M5Base",
193:       "weka.attributeSelection.SubsetEvaluator",
194:       "weka.classifiers.CostMatrix",
195:       "weka.classifiers.bayes.net.search.local.K2",
196:       "weka.core.logging.Logger$Level",
197:       "weka.core.stemmers.Stemmer",
198:       "weka.classifiers.evaluation.output.prediction.HTML",
199:       "weka.core.converters.IncrementalConverter",
200:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
201:       "weka.classifiers.meta.LogitBoost",
202:       "weka.core.EnvironmentHandler",
203:       "weka.classifiers.trees.j48.C45ModelSelection",
204:       "weka.classifiers.trees.m5.RuleNode",
205:       "weka.core.RelationalLocator",
206:       "weka.core.Utils",
207:       "weka.core.tokenizers.Tokenizer",
208:       "weka.clusterers.AbstractDensityBasedClusterer",
209:       "weka.core.NoSupportForMissingValuesException",
210:       "weka.classifiers.UpdateableClassifier",
211:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
212:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
213:       "weka.core.MultiInstanceCapabilitiesHandler",
214:       "weka.core.Capabilities",
215:       "weka.core.AttributeLocator",
216:       "weka.classifiers.functions.supportVector.CachedKernel",
217:       "weka.classifiers.meta.RegressionByDiscretization",
218:       "weka.core.Summarizable",
219:       "weka.classifiers.trees.j48.ModelSelection",
220:       "org.pentaho.packageManagement.PackageManager$1",
221:       "weka.core.Drawable",
222:       "weka.classifiers.ConditionalDensityEstimator",
223:       "weka.core.CapabilitiesHandler",
224:       "weka.classifiers.trees.REPTree",
225:       "weka.attributeSelection.ASEvaluation",
226:       "weka.core.AbstractInstance",
227:       "weka.core.scripting.JythonObject",
228:       "weka.core.SelectedTag",
229:       "org.pentaho.packageManagement.DefaultPackage",
230:       "weka.classifiers.bayes.BayesNet",
231:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
232:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
233:       "weka.classifiers.meta.AdditiveRegression",
234:       "weka.core.Queue",
235:       "weka.clusterers.RandomizableClusterer",
236:       "weka.core.converters.AbstractLoader",
237:       "weka.filters.unsupervised.attribute.RemoveUseless",
238:       "weka.core.converters.BatchConverter",
239:       "weka.core.Tag",
240:       "weka.classifiers.IteratedSingleClassifierEnhancer",
241:       "weka.classifiers.trees.j48.BinC45ModelSelection",
242:       "weka.estimators.UnivariateDensityEstimator",
243:       "weka.core.OptionHandler",
244:       "weka.core.Range",
245:       "weka.attributeSelection.WrapperSubsetEval",
246:       "weka.core.scripting.JythonSerializableObject",
247:       "weka.classifiers.Classifier",
248:       "weka.core.Capabilities$Capability",
249:       "org.pentaho.packageManagement.PackageManager",
250:       "weka.core.WekaEnumeration",
251:       "weka.classifiers.trees.M5P",
252:       "weka.core.WekaPackageManager",
253:       "weka.estimators.UnivariateEqualFrequencyHistogramEstimator",
254:       "weka.filters.SupervisedFilter",
255:       "weka.core.TechnicalInformationHandler",
256:       "weka.experiment.DatabaseUtils",
257:       "weka.classifiers.functions.SimpleLogistic",
258:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
259:       "weka.classifiers.meta.CostSensitiveClassifier",
260:       "weka.core.Option",
261:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
262:       "weka.classifiers.functions.neural.NeuralMethod",
263:       "weka.filters.Sourcable",
264:       "weka.classifiers.meta.RandomSubSpace",
265:       "weka.core.Attribute",
266:       "weka.classifiers.functions.MultilayerPerceptron$NodePanel",
267:       "weka.classifiers.meta.MultiScheme",
268:       "weka.core.FastVector",
269:       "weka.classifiers.MultipleClassifiersCombiner",
270:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
271:       "weka.core.BatchPredictor",
272:       "weka.classifiers.functions.supportVector.RegSMOImproved",
273:       "weka.classifiers.functions.neural.SigmoidUnit",
274:       "weka.classifiers.SingleClassifierEnhancer",
275:       "weka.core.Instance",
276:       "weka.core.converters.SerializedInstancesLoader",
277:       "weka.classifiers.lazy.KStar",
278:       "weka.classifiers.functions.supportVector.PolyKernel",
279:       "weka.classifiers.IntervalEstimator",
280:       "weka.core.Matchable",
281:       "weka.classifiers.bayes.net.ADNode",
282:       "weka.core.WeightedInstancesHandler",
283:       "weka.core.neighboursearch.NearestNeighbourSearch",
284:       "weka.classifiers.functions.GaussianProcesses",
285:       "weka.core.TechnicalInformation$Field",
286:       "weka.filters.unsupervised.attribute.Discretize",
287:       "weka.core.converters.DatabaseLoader",
288:       "weka.classifiers.functions.SGD",
289:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
290:       "weka.filters.unsupervised.attribute.Normalize",
291:       "weka.classifiers.rules.OneR",
292:       "weka.core.UnassignedClassException",
293:       "weka.classifiers.rules.ZeroR",
294:       "weka.filters.unsupervised.attribute.Standardize",
295:       "weka.classifiers.Sourcable",
296:       "weka.classifiers.evaluation.output.prediction.PlainText",
297:       "weka.core.xml.XMLSerialization",
298:       "weka.core.neighboursearch.TreePerformanceStats",
299:       "weka.filters.unsupervised.attribute.MakeIndicator",
300:       "weka.classifiers.meta.ClassificationViaRegression",
301:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
302:       "weka.clusterers.MakeDensityBasedClusterer"
303:     );
304:   } 
305: 
306:   private static void resetClasses() {
307:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Evaluation_144_tmp__ESTest_scaffolding.class.getClassLoader()); 
308: 
309:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
310:       "weka.classifiers.Evaluation",
311:       "weka.core.pmml.PMMLFactory$ModelType",
312:       "weka.core.pmml.PMMLFactory$1",
313:       "weka.core.xml.KOML",
314:       "weka.core.Version",
315:       "weka.core.Utils",
316:       "weka.attributeSelection.ASEvaluation",
317:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
318:       "weka.attributeSelection.PrincipalComponents",
319:       "weka.core.converters.AbstractLoader",
320:       "weka.core.converters.AbstractFileLoader",
321:       "weka.core.converters.JSONLoader",
322:       "weka.core.converters.DatabaseLoader",
323:       "weka.core.Environment",
324:       "weka.experiment.DatabaseUtils",
325:       "weka.core.converters.DatabaseConnection",
326:       "org.pentaho.packageManagement.PackageManager",
327:       "org.pentaho.packageManagement.DefaultPackageManager",
328:       "weka.core.WekaPackageManager",
329:       "weka.experiment.InstanceQuery",
330:       "weka.core.Option",
331:       "weka.core.Capabilities",
332:       "weka.core.converters.ArffLoader",
333:       "weka.core.Instances",
334:       "weka.core.xml.XMLDocument",
335:       "weka.core.xml.XMLInstances",
336:       "weka.core.converters.XRFFLoader",
337:       "weka.estimators.Estimator",
338:       "weka.estimators.KernelEstimator",
339:       "weka.core.TestInstances",
340:       "weka.core.Capabilities$Capability",
341:       "weka.clusterers.AbstractClusterer",
342:       "weka.clusterers.RandomizableClusterer",
343:       "weka.clusterers.SimpleKMeans",
344:       "weka.core.NormalizableDistance",
345:       "weka.core.EuclideanDistance",
346:       "weka.core.Range",
347:       "weka.core.converters.C45Loader",
348:       "weka.core.converters.SVMLightLoader",
349:       "weka.core.converters.LibSVMLoader",
350:       "weka.core.converters.ConverterUtils$DataSource",
351:       "weka.core.converters.SerializedInstancesLoader",
352:       "weka.classifiers.AbstractClassifier",
353:       "weka.classifiers.MultipleClassifiersCombiner",
354:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
355:       "weka.classifiers.meta.MultiScheme",
356:       "weka.classifiers.rules.ZeroR",
357:       "weka.core.converters.TextDirectoryLoader",
358:       "weka.core.Attribute",
359:       "weka.core.ProtectedProperties",
360:       "weka.core.WekaEnumeration",
361:       "weka.core.Attribute$1",
362:       "weka.core.converters.CSVLoader",
363:       "weka.core.AttributeStats",
364:       "weka.core.converters.MatlabLoader",
365:       "weka.classifiers.trees.J48",
366:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
367:       "weka.core.tokenizers.Tokenizer",
368:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
369:       "weka.core.tokenizers.WordTokenizer",
370:       "weka.core.stemmers.NullStemmer",
371:       "weka.classifiers.SingleClassifierEnhancer",
372:       "weka.classifiers.IteratedSingleClassifierEnhancer",
373:       "weka.classifiers.meta.AdditiveRegression",
374:       "weka.core.RevisionUtils",
375:       "weka.classifiers.trees.DecisionStump",
376:       "weka.gui.GenericPropertiesCreator",
377:       "weka.gui.GenericObjectEditor",
378:       "weka.core.converters.ConverterUtils",
379:       "weka.core.AbstractInstance",
380:       "weka.core.SparseInstance",
381:       "weka.core.BinarySparseInstance",
382:       "weka.core.UnassignedDatasetException",
383:       "weka.core.converters.ArffLoader$ArffReader",
384:       "weka.classifiers.meta.ClassificationViaRegression",
385:       "weka.classifiers.trees.m5.M5Base",
386:       "weka.classifiers.trees.M5P",
387:       "weka.core.TechnicalInformation",
388:       "weka.core.TechnicalInformation$Type",
389:       "weka.core.TechnicalInformation$Field",
390:       "weka.classifiers.CostMatrix",
391:       "weka.filters.Filter",
392:       "weka.filters.AllFilter",
393:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
394:       "weka.classifiers.meta.LogitBoost",
395:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
396:       "weka.core.Tag",
397:       "weka.classifiers.meta.CostSensitiveClassifier",
398:       "weka.classifiers.RandomizableClassifier",
399:       "weka.classifiers.functions.SGD",
400:       "weka.core.SerializedObject",
401:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
402:       "weka.classifiers.evaluation.output.prediction.HTML",
403:       "weka.classifiers.trees.REPTree",
404:       "weka.classifiers.bayes.NaiveBayes",
405:       "weka.classifiers.bayes.NaiveBayesUpdateable",
406:       "weka.classifiers.misc.InputMappedClassifier",
407:       "weka.classifiers.meta.AdaBoostM1",
408:       "weka.classifiers.rules.OneR",
409:       "weka.classifiers.rules.OneR$OneRRule",
410:       "weka.classifiers.rules.PART",
411:       "weka.classifiers.lazy.IBk",
412:       "weka.core.neighboursearch.NearestNeighbourSearch",
413:       "weka.core.neighboursearch.LinearNNSearch",
414:       "weka.classifiers.evaluation.output.prediction.Null",
415:       "weka.classifiers.bayes.BayesNet",
416:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
417:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
418:       "weka.classifiers.bayes.net.search.local.K2",
419:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
420:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
421:       "weka.classifiers.functions.GaussianProcesses",
422:       "weka.classifiers.functions.supportVector.Kernel",
423:       "weka.classifiers.functions.supportVector.CachedKernel",
424:       "weka.classifiers.functions.supportVector.PolyKernel",
425:       "weka.classifiers.lazy.KStar",
426:       "weka.attributeSelection.WrapperSubsetEval",
427:       "weka.classifiers.meta.RegressionByDiscretization",
428:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
429:       "weka.filters.unsupervised.attribute.Discretize",
430:       "weka.core.neighboursearch.balltrees.BallNode",
431:       "weka.classifiers.evaluation.output.prediction.PlainText",
432:       "weka.core.SelectedTag",
433:       "weka.estimators.UnivariateEqualFrequencyHistogramEstimator",
434:       "weka.core.neighboursearch.CoverTree",
435:       "weka.classifiers.functions.SGDText",
436:       "weka.estimators.UnivariateKernelEstimator",
437:       "weka.core.DenseInstance",
438:       "weka.classifiers.trees.j48.ClassifierTree",
439:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
440:       "weka.classifiers.functions.MultilayerPerceptron",
441:       "weka.core.FastVector",
442:       "weka.filters.unsupervised.attribute.NominalToBinary",
443:       "weka.classifiers.functions.neural.SigmoidUnit",
444:       "weka.classifiers.functions.neural.LinearUnit",
445:       "weka.classifiers.rules.part.MakeDecList",
446:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
447:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
448:       "weka.classifiers.meta.Stacking",
449:       "weka.core.UnassignedClassException",
450:       "weka.classifiers.meta.AttributeSelectedClassifier",
451:       "weka.attributeSelection.CfsSubsetEval",
452:       "weka.attributeSelection.ASSearch",
453:       "weka.attributeSelection.BestFirst",
454:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
455:       "weka.core.neighboursearch.BallTree",
456:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
457:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
458:       "weka.core.neighboursearch.balltrees.BallSplitter",
459:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
460:       "weka.classifiers.functions.SMO",
461:       "weka.core.ChebyshevDistance",
462:       "weka.classifiers.meta.FilteredClassifier",
463:       "weka.filters.supervised.attribute.AttributeSelection",
464:       "weka.attributeSelection.AttributeSelection",
465:       "weka.attributeSelection.GreedyStepwise",
466:       "weka.filters.supervised.attribute.Discretize",
467:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
468:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
469:       "weka.classifiers.meta.RandomSubSpace",
470:       "weka.clusterers.SingleClustererEnhancer",
471:       "weka.clusterers.FilteredClusterer",
472:       "weka.classifiers.evaluation.output.prediction.XML",
473:       "weka.estimators.DiscreteEstimator",
474:       "weka.classifiers.functions.LinearRegression",
475:       "weka.classifiers.rules.DecisionTable",
476:       "weka.classifiers.lazy.LWL",
477:       "weka.classifiers.trees.RandomForest",
478:       "weka.classifiers.functions.Logistic",
479:       "weka.classifiers.meta.Vote",
480:       "weka.experiment.Stats",
481:       "weka.classifiers.functions.SimpleLinearRegression",
482:       "weka.classifiers.meta.Bagging",
483:       "weka.classifiers.functions.VotedPerceptron",
484:       "weka.classifiers.trees.RandomTree",
485:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
486:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
487:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
488:       "weka.classifiers.bayes.NaiveBayesMultinomial",
489:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
490:       "weka.classifiers.evaluation.output.prediction.CSV",
491:       "weka.classifiers.misc.SerializedClassifier",
492:       "weka.clusterers.ClusterEvaluation",
493:       "weka.classifiers.rules.M5Rules",
494:       "weka.classifiers.trees.LMT",
495:       "weka.core.FindWithCapabilities",
496:       "weka.core.SingleIndex",
497:       "weka.classifiers.pmml.consumer.PMMLClassifier",
498:       "weka.classifiers.pmml.consumer.RuleSetModel",
499:       "weka.classifiers.pmml.consumer.TreeModel$MiningFunction",
500:       "weka.attributeSelection.CorrelationAttributeEval",
501:       "weka.classifiers.functions.SMOreg",
502:       "weka.classifiers.functions.supportVector.RegOptimizer",
503:       "weka.classifiers.functions.supportVector.RegSMO",
504:       "weka.classifiers.functions.supportVector.RegSMOImproved",
505:       "weka.core.ListOptions",
506:       "weka.core.SpecialFunctions",
507:       "weka.core.Statistics",
508:       "weka.core.neighboursearch.KDTree",
509:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
510:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
511:       "weka.classifiers.meta.CVParameterSelection",
512:       "weka.core.WekaException",
513:       "weka.core.UnsupportedAttributeTypeException",
514:       "weka.classifiers.functions.SimpleLogistic",
515:       "weka.classifiers.meta.MultiClassClassifier",
516:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
517:       "weka.core.ClassDiscovery",
518:       "weka.estimators.NormalEstimator",
519:       "weka.classifiers.functions.supportVector.Puk",
520:       "weka.clusterers.FarthestFirst",
521:       "weka.classifiers.meta.RandomCommittee",
522:       "weka.clusterers.AbstractDensityBasedClusterer",
523:       "weka.clusterers.MakeDensityBasedClusterer",
524:       "weka.core.Javadoc",
525:       "weka.core.ClassCache",
526:       "weka.core.AllJavadoc",
527:       "weka.classifiers.functions.supportVector.RBFKernel",
528:       "weka.core.OptionHandlerJavadoc",
529:       "weka.core.GlobalInfoJavadoc",
530:       "weka.classifiers.functions.supportVector.StringKernel",
531:       "weka.attributeSelection.GainRatioAttributeEval",
532:       "weka.core.MinkowskiDistance",
533:       "weka.attributeSelection.ReliefFAttributeEval",
534:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
535:       "weka.core.matrix.Matrix",
536:       "weka.clusterers.RandomizableDensityBasedClusterer",
537:       "weka.clusterers.EM",
538:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
539:       "weka.core.TechnicalInformationHandlerJavadoc",
540:       "weka.classifiers.evaluation.ThresholdCurve",
541:       "weka.classifiers.functions.neural.NeuralConnection",
542:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
543:       "weka.core.Queue",
544:       "weka.core.AttributeLocator",
545:       "weka.core.StringLocator",
546:       "weka.core.RelationalLocator",
547:       "weka.core.Queue$QueueNode",
548:       "weka.classifiers.functions.neural.NeuralNode"
549:     );
550:   }
551: }

[MASTER] 21:33:56.209 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, " V[X*XEvG9m&iw");
TestInstances testInstances0 = new TestInstances();
Instances instances0 = testInstances0.generate(" ");
Evaluation evaluation0 = new Evaluation(instances0);
evaluation0.weightedFalseNegativeRate();
String[] stringArray0 = new String[5];
stringArray0[0] = "@data";
stringArray0[1] = " statistics for each class.\n";
stringArray0[2] = ".arff";
stringArray0[3] = ".arff";
stringArray0[4] = ".arff";
evaluation0.m_SumSchemeEntropy = 1282.954734;
testInstances0.setOptions(stringArray0);
evaluation0.SFEntropyGain();
evaluation0.trueNegativeRate((-2));
assertEquals(Double.NEGATIVE_INFINITY, evaluation0.SFMeanEntropyGain(), 0.01);

double double0 = Evaluation.MIN_SF_PROB;
assertNotEquals(double0, double1, 0.01);


[MASTER] 21:33:57.481 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 21:33:57.862 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 21:33:57.863 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 21:33:59.459 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 21:33:59.474 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 21:33:59.903 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/mosa/tests/s1003/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20190
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:35:02.046 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:35:02.093 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:35:02.113 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:35:02.232 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2699
* Using seed 1003
* Starting evolution
* Search finished after 295s and 49 generations, 35759 statements, best individual has fitness: 2616.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 647
* Number of covered goals: 613
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 92%
* Total number of goals: 441
* Number of covered goals: 404
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 678
* Number of covered goals: 610
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 45%
* Total number of goals: 244
* Number of covered goals: 110
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 124
* Number of covered goals: 124
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 124
* Number of covered goals: 124
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 88%
* Total number of goals: 441
* Number of covered goals: 389
* Generated 208 tests with total length 1958
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 21:45:46.798 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6818041666666667% of time used, but only 69/208 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 19%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/mosa/tests/s1003/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20190
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1367
* Using seed 1003
* Starting evolution
* Search finished after 278s and 243 generations, 87455 statements, best individual has fitness: 2744.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 217
* Number of covered goals: 191
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 285
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 239
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 285
* Generated 76 tests with total length 215
* Resulting test suite's coverage: 75% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 76%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/mosa/tests/s1003/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20197
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:55:20.697 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 21:55:20.720 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 21:55:20.722 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 21:55:20.822 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:55:20.855 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:55:20.871 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1412
* Using seed 1003
* Starting evolution
[MASTER] 21:55:29.439 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 21:55:29.439 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 21:55:30.783 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V: Line 487
[MASTER] 21:55:30.783 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V: Line 488
[MASTER] 21:55:30.784 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V: I4 Branch 42 IFLE L487 - true
[MASTER] 21:55:30.792 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 191: weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V:487 - InsertUnaryOp Negation
[MASTER] 21:55:30.792 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 192: weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V:487 - InsertUnaryOp +1
[MASTER] 21:55:30.792 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 193: weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V:487 - InsertUnaryOp -1
[MASTER] 21:55:30.799 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 196: weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V:487 - ReplaceComparisonOperator <= -> <
[MASTER] 21:55:30.801 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V
[MASTER] 21:55:30.801 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V
[MASTER] 21:55:30.801 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V: I4 Branch 42 IFLE L487 - true in context: 
[MASTER] 21:56:44.013 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 21:58:05.268 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 299s and 315 generations, 123914 statements, best individual has fitness: 1440.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 91%
* Total number of goals: 338
* Number of covered goals: 307
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 85%
* Total number of goals: 194
* Number of covered goals: 164
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 26
* Number of covered goals: 26
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 476
* Number of covered goals: 443
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 112
* Number of covered goals: 61
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 83%
* Total number of goals: 194
* Number of covered goals: 161
* Generated 88 tests with total length 559
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 62%
* Compiling and checking tests
[MASTER] 22:05:15.830 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_69_1573682715790/weka/classifiers/bayes/NaiveBayesMultinomialText_69_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_69_1573682715790/weka/classifiers/bayes/NaiveBayesMultinomialText_69_tmp__ESTest_scaffolding.java]]
[MASTER] 22:05:15.830 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 22:05:15.830 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 22:05:15.835 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 22:05:15.835 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 22:05:15.836 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 22:05:15.836 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 22:05:15.836 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 22:05:15.841 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_69_1573682715790/weka/classifiers/bayes/NaiveBayesMultinomialText_69_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Nov 13 22:05:15 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.Random;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.core.BinarySparseInstance;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_69_tmp__ESTest extends NaiveBayesMultinomialText_69_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=3.0298322221883276
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
31:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
32:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
33:       linkedHashMap0.put((Integer) null, linkedHashMap1);
34:       naiveBayesMultinomialText0.m_t = 873.07926804;
35:       naiveBayesMultinomialText0.getOptions();
36:       naiveBayesMultinomialText0.setLowercaseTokens(true);
37:       naiveBayesMultinomialText0.globalInfo();
38:       naiveBayesMultinomialText0.normTipText();
39:       naiveBayesMultinomialText0.pruneDictionary();
40:       naiveBayesMultinomialText0.getMinWordFrequency();
41:       naiveBayesMultinomialText0.getLowercaseTokens();
42:       Random.setNextRandom(1195);
43:       int[] intArray0 = new int[2];
44:       intArray0[0] = 1195;
45:       intArray0[1] = 1195;
46:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(983.09895426, intArray0, 1195);
47:       binarySparseInstance0.insertAttributeAt(1195);
48:       // Undeclared exception!
49:       try { 
50:         naiveBayesMultinomialText0.tokenizeInstance(binarySparseInstance0, false);
51:         fail("Expecting exception: RuntimeException");
52:       
53:       } catch(RuntimeException e) {
54:          //
55:          // DenseInstance doesn't have access to a dataset!
56:          //
57:          verifyException("weka.core.AbstractInstance", e);
58:       }
59:   }
60: }
RegularFileObject[/tmp/EvoSuite_69_1573682715790/weka/classifiers/bayes/NaiveBayesMultinomialText_69_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Nov 13 22:05:15 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_69_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_69_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.classifiers.trees.m5.M5Base",
95:       "weka.filters.UnsupervisedFilter",
96:       "weka.core.logging.Logger$Level",
97:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
98:       "weka.core.DenseInstance",
99:       "weka.classifiers.functions.LinearRegression",
100:       "weka.core.stemmers.Stemmer",
101:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.estimators.IncrementalEstimator",
105:       "weka.estimators.Estimator$Builder",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.core.EnvironmentHandler",
108:       "weka.classifiers.trees.m5.RuleNode",
109:       "weka.core.Utils",
110:       "weka.core.tokenizers.Tokenizer",
111:       "weka.core.NoSupportForMissingValuesException",
112:       "weka.classifiers.UpdateableClassifier",
113:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
114:       "weka.core.MultiInstanceCapabilitiesHandler",
115:       "weka.core.Copyable",
116:       "weka.core.Capabilities",
117:       "weka.core.BinarySparseInstance",
118:       "weka.filters.supervised.attribute.NominalToBinary",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
120:       "weka.classifiers.functions.supportVector.CachedKernel",
121:       "weka.core.SerializedObject",
122:       "weka.clusterers.UpdateableClusterer",
123:       "weka.core.Summarizable",
124:       "weka.core.AdditionalMeasureProducer",
125:       "org.pentaho.packageManagement.PackageManager$1",
126:       "weka.core.Drawable",
127:       "weka.core.matrix.Matrix",
128:       "weka.classifiers.ConditionalDensityEstimator",
129:       "weka.core.CapabilitiesHandler",
130:       "weka.core.AbstractInstance",
131:       "weka.core.SelectedTag",
132:       "org.pentaho.packageManagement.DefaultPackage",
133:       "weka.classifiers.misc.InputMappedClassifier",
134:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
135:       "weka.core.Version",
136:       "weka.filters.unsupervised.attribute.RemoveUseless",
137:       "weka.core.Tag",
138:       "weka.classifiers.IteratedSingleClassifierEnhancer",
139:       "weka.classifiers.AbstractClassifier",
140:       "weka.core.OptionHandler",
141:       "weka.core.WekaException",
142:       "weka.core.PartitionGenerator",
143:       "weka.classifiers.Classifier",
144:       "weka.core.Capabilities$Capability",
145:       "weka.core.SparseInstance",
146:       "org.pentaho.packageManagement.PackageManager",
147:       "weka.estimators.PoissonEstimator",
148:       "weka.core.tokenizers.WordTokenizer",
149:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
150:       "weka.core.stemmers.SnowballStemmer",
151:       "weka.classifiers.Evaluation",
152:       "weka.classifiers.functions.supportVector.Kernel",
153:       "weka.core.WekaPackageManager",
154:       "weka.filters.SupervisedFilter",
155:       "weka.core.TechnicalInformationHandler",
156:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
157:       "weka.core.Option",
158:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
159:       "weka.filters.Sourcable",
160:       "weka.core.Attribute",
161:       "weka.core.Stopwords",
162:       "weka.core.tokenizers.AlphabeticTokenizer",
163:       "weka.core.tokenizers.NGramTokenizer",
164:       "weka.core.UnassignedDatasetException",
165:       "weka.classifiers.trees.RandomTree",
166:       "weka.classifiers.SingleClassifierEnhancer",
167:       "weka.core.RevisionUtils",
168:       "weka.core.Instance",
169:       "weka.classifiers.meta.RandomCommittee",
170:       "weka.classifiers.functions.supportVector.PolyKernel",
171:       "weka.estimators.Estimator",
172:       "weka.core.ProtectedProperties",
173:       "weka.classifiers.IntervalEstimator",
174:       "weka.core.AttributeStats",
175:       "weka.core.WeightedInstancesHandler",
176:       "weka.classifiers.functions.GaussianProcesses",
177:       "weka.classifiers.rules.M5Rules",
178:       "weka.core.Randomizable",
179:       "weka.core.Instances",
180:       "weka.filters.unsupervised.attribute.Normalize",
181:       "weka.core.UnassignedClassException",
182:       "weka.classifiers.rules.ZeroR",
183:       "weka.filters.unsupervised.attribute.Standardize",
184:       "weka.core.TechnicalInformation",
185:       "weka.core.UnsupportedAttributeTypeException",
186:       "weka.classifiers.Sourcable",
187:       "weka.core.RevisionHandler",
188:       "weka.classifiers.evaluation.output.prediction.PlainText",
189:       "weka.core.xml.XMLSerialization",
190:       "weka.classifiers.xml.XMLClassifier",
191:       "weka.filters.Filter",
192:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer"
193:     );
194:   } 
195: 
196:   private static void resetClasses() {
197:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_69_tmp__ESTest_scaffolding.class.getClassLoader()); 
198: 
199:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
200:       "weka.classifiers.AbstractClassifier",
201:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
202:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
203:       "weka.core.Capabilities$Capability",
204:       "weka.core.tokenizers.Tokenizer",
205:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
206:       "weka.core.tokenizers.WordTokenizer",
207:       "weka.core.stemmers.NullStemmer",
208:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
209:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
210:       "weka.core.neighboursearch.balltrees.BallSplitter",
211:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
212:       "weka.core.neighboursearch.balltrees.BallNode",
213:       "weka.classifiers.misc.SerializedClassifier",
214:       "weka.core.AbstractInstance",
215:       "weka.core.SparseInstance",
216:       "weka.core.BinarySparseInstance",
217:       "weka.core.FindWithCapabilities",
218:       "weka.core.Capabilities",
219:       "weka.core.Utils",
220:       "org.pentaho.packageManagement.PackageManager",
221:       "org.pentaho.packageManagement.DefaultPackageManager",
222:       "weka.core.Version",
223:       "weka.core.Environment",
224:       "weka.core.WekaPackageManager",
225:       "weka.core.SingleIndex",
226:       "weka.core.Attribute",
227:       "weka.core.ProtectedProperties",
228:       "weka.core.neighboursearch.NearestNeighbourSearch",
229:       "weka.core.neighboursearch.CoverTree",
230:       "weka.core.NormalizableDistance",
231:       "weka.core.EuclideanDistance",
232:       "weka.core.Range",
233:       "weka.filters.Filter",
234:       "weka.filters.supervised.attribute.Discretize",
235:       "weka.core.RevisionUtils",
236:       "weka.core.tokenizers.NGramTokenizer",
237:       "weka.classifiers.bayes.NaiveBayes",
238:       "weka.classifiers.bayes.NaiveBayesUpdateable",
239:       "weka.core.UnassignedDatasetException",
240:       "weka.core.stemmers.LovinsStemmer",
241:       "weka.core.stemmers.IteratedLovinsStemmer",
242:       "weka.classifiers.SingleClassifierEnhancer",
243:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
244:       "weka.classifiers.meta.CVParameterSelection",
245:       "weka.classifiers.rules.ZeroR",
246:       "weka.core.FastVector",
247:       "weka.classifiers.Evaluation",
248:       "weka.core.Option",
249:       "weka.core.stemmers.SnowballStemmer",
250:       "weka.core.Tag",
251:       "weka.classifiers.lazy.IBk",
252:       "weka.core.neighboursearch.LinearNNSearch",
253:       "weka.core.TestInstances",
254:       "weka.core.SerializedObject",
255:       "weka.core.TechnicalInformation",
256:       "weka.core.TechnicalInformation$Type",
257:       "weka.core.TechnicalInformation$Field",
258:       "weka.core.Instances",
259:       "weka.core.converters.ArffLoader$ArffReader",
260:       "weka.core.tokenizers.AlphabeticTokenizer",
261:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
262:       "weka.classifiers.functions.supportVector.Kernel",
263:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
264:       "weka.attributeSelection.ASEvaluation",
265:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
266:       "weka.attributeSelection.PrincipalComponents",
267:       "weka.core.DenseInstance",
268:       "weka.core.Stopwords",
269:       "weka.classifiers.RandomizableClassifier",
270:       "weka.classifiers.functions.SGDText",
271:       "weka.core.neighboursearch.KDTree",
272:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
273:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
274:       "weka.classifiers.misc.InputMappedClassifier",
275:       "weka.classifiers.bayes.BayesNet",
276:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
277:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
278:       "weka.classifiers.bayes.net.search.local.K2",
279:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
280:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
281:       "weka.classifiers.rules.JRip",
282:       "weka.classifiers.bayes.NaiveBayesMultinomial",
283:       "weka.core.WekaEnumeration",
284:       "weka.core.Attribute$1",
285:       "weka.attributeSelection.ReliefFAttributeEval",
286:       "weka.classifiers.meta.FilteredClassifier",
287:       "weka.filters.supervised.attribute.AttributeSelection",
288:       "weka.attributeSelection.AttributeSelection",
289:       "weka.attributeSelection.CfsSubsetEval",
290:       "weka.attributeSelection.ASSearch",
291:       "weka.attributeSelection.GreedyStepwise",
292:       "weka.attributeSelection.BestFirst",
293:       "weka.classifiers.trees.J48",
294:       "weka.estimators.Estimator",
295:       "weka.estimators.KernelEstimator",
296:       "weka.core.stemmers.Stemming",
297:       "weka.classifiers.functions.VotedPerceptron",
298:       "weka.core.neighboursearch.BallTree",
299:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
300:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
301:       "weka.attributeSelection.GainRatioAttributeEval",
302:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
303:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
304:       "weka.classifiers.bayes.net.BIFReader",
305:       "weka.classifiers.meta.CostSensitiveClassifier",
306:       "weka.classifiers.CostMatrix",
307:       "weka.classifiers.functions.SimpleLogistic",
308:       "weka.core.UnassignedClassException",
309:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
310:       "weka.classifiers.IteratedSingleClassifierEnhancer",
311:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
312:       "weka.classifiers.meta.AdaBoostM1",
313:       "weka.classifiers.trees.DecisionStump",
314:       "weka.attributeSelection.CorrelationAttributeEval",
315:       "weka.classifiers.meta.ClassificationViaRegression",
316:       "weka.classifiers.trees.m5.M5Base",
317:       "weka.classifiers.trees.M5P",
318:       "weka.classifiers.functions.LinearRegression",
319:       "weka.estimators.NormalEstimator",
320:       "weka.attributeSelection.WrapperSubsetEval",
321:       "weka.core.WekaException",
322:       "weka.core.UnsupportedAttributeTypeException",
323:       "weka.attributeSelection.OneRAttributeEval",
324:       "weka.filters.SimpleFilter",
325:       "weka.filters.SimpleStreamFilter",
326:       "weka.filters.MultiFilter",
327:       "weka.filters.AllFilter",
328:       "weka.classifiers.meta.LogitBoost",
329:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
330:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
331:       "weka.classifiers.meta.RandomCommittee",
332:       "weka.classifiers.trees.RandomTree",
333:       "weka.classifiers.lazy.KStar",
334:       "weka.estimators.DiscreteEstimator",
335:       "weka.classifiers.MultipleClassifiersCombiner",
336:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
337:       "weka.classifiers.meta.MultiScheme",
338:       "weka.classifiers.functions.supportVector.CachedKernel",
339:       "weka.classifiers.functions.supportVector.Puk",
340:       "weka.classifiers.meta.Vote",
341:       "weka.classifiers.functions.supportVector.PolyKernel",
342:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
343:       "weka.classifiers.rules.OneR",
344:       "weka.classifiers.functions.SMOreg",
345:       "weka.classifiers.functions.supportVector.RegOptimizer",
346:       "weka.classifiers.functions.supportVector.RegSMO",
347:       "weka.classifiers.functions.supportVector.RegSMOImproved",
348:       "weka.classifiers.functions.supportVector.StringKernel",
349:       "weka.classifiers.functions.SMO",
350:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
351:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
352:       "weka.classifiers.meta.Stacking",
353:       "weka.classifiers.meta.AttributeSelectedClassifier",
354:       "weka.classifiers.functions.GaussianProcesses",
355:       "weka.classifiers.functions.MultilayerPerceptron",
356:       "weka.filters.unsupervised.attribute.NominalToBinary",
357:       "weka.classifiers.functions.neural.SigmoidUnit",
358:       "weka.classifiers.functions.neural.LinearUnit",
359:       "weka.classifiers.meta.MultiClassClassifier",
360:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
361:       "weka.classifiers.functions.Logistic",
362:       "weka.classifiers.rules.PART",
363:       "weka.classifiers.rules.part.MakeDecList",
364:       "weka.estimators.MahalanobisEstimator",
365:       "weka.classifiers.trees.LMT",
366:       "weka.classifiers.trees.REPTree",
367:       "weka.classifiers.meta.Bagging",
368:       "weka.core.matrix.Matrix",
369:       "weka.classifiers.rules.M5Rules",
370:       "weka.core.SelectedTag",
371:       "weka.attributeSelection.InfoGainAttributeEval",
372:       "weka.classifiers.functions.SGD",
373:       "weka.classifiers.meta.AdditiveRegression",
374:       "weka.classifiers.trees.RandomForest",
375:       "weka.classifiers.meta.RegressionByDiscretization",
376:       "weka.filters.unsupervised.attribute.Discretize",
377:       "weka.classifiers.trees.j48.ClassifierTree",
378:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
379:       "weka.estimators.PoissonEstimator",
380:       "weka.classifiers.functions.SimpleLinearRegression",
381:       "weka.core.ClassDiscovery",
382:       "weka.classifiers.rules.DecisionTable",
383:       "weka.estimators.Estimator$Builder",
384:       "weka.core.AttributeStats",
385:       "weka.experiment.Stats",
386:       "weka.core.Javadoc",
387:       "weka.core.TechnicalInformationHandlerJavadoc",
388:       "weka.core.ManhattanDistance",
389:       "weka.classifiers.functions.supportVector.RBFKernel",
390:       "weka.classifiers.lazy.LWL",
391:       "weka.core.Queue",
392:       "weka.core.AttributeLocator",
393:       "weka.core.StringLocator",
394:       "weka.core.RelationalLocator",
395:       "weka.core.ContingencyTables",
396:       "weka.core.Queue$QueueNode",
397:       "weka.core.OptionHandlerJavadoc",
398:       "weka.core.ClassCache",
399:       "weka.core.AllJavadoc",
400:       "weka.core.ListOptions",
401:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
402:       "weka.core.SerializationHelper",
403:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
404:       "weka.core.neighboursearch.PerformanceStats",
405:       "weka.core.neighboursearch.TreePerformanceStats"
406:     );
407:   }
408: }

[MASTER] 22:05:15.842 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.put((Integer) null, linkedHashMap1);
naiveBayesMultinomialText0.m_t = 873.07926804;
naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.setLowercaseTokens(true);
naiveBayesMultinomialText0.globalInfo();
naiveBayesMultinomialText0.normTipText();
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.getMinWordFrequency();
naiveBayesMultinomialText0.getLowercaseTokens();
Random.setNextRandom(1195);
int[] intArray0 = new int[2];
intArray0[0] = 1195;
intArray0[1] = 1195;
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(983.09895426, intArray0, 1195);
binarySparseInstance0.insertAttributeAt(1195);
naiveBayesMultinomialText0.tokenizeInstance(binarySparseInstance0, false);

[MASTER] 22:05:19.760 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 22:05:19.873 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/mosa/tests/s1003/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20191
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 22:07:54.753 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:07:54.779 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:07:54.780 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:07:55.066 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 22:07:55.105 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 22:07:55.107 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1729
* Using seed 1003
* Starting evolution
* Search finished after 235s and 369 generations, 116897 statements, best individual has fitness: 7888.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 45%
* Total number of goals: 370
* Number of covered goals: 166
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 81
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 42%
* Total number of goals: 713
* Number of covered goals: 298
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 49%
* Total number of goals: 72
* Number of covered goals: 35
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 96%
* Total number of goals: 45
* Number of covered goals: 43
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 81
* Generated 62 tests with total length 252
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 20%
* Compiling and checking tests
[MASTER] 22:13:42.637 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 22:13:43.714 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 7
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/mosa/tests/s1003/107_weka/evosuite-tests
* Done!

* Computation finished
