* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20773
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 06:06:43.494 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 06:06:43.495 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 06:06:43.521 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 06:06:43.679 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:06:43.734 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:06:43.749 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1412
* Using seed 1028
* Starting evolution
[MASTER] 06:07:20.838 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 06:07:20.839 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 06:08:05.110 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 267s and 315 generations, 126421 statements, best individual has fitness: 1528.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 91%
* Total number of goals: 338
* Number of covered goals: 306
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 82%
* Total number of goals: 194
* Number of covered goals: 160
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 476
* Number of covered goals: 442
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 53%
* Total number of goals: 112
* Number of covered goals: 59
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 81%
* Total number of goals: 194
* Number of covered goals: 158
* Generated 91 tests with total length 541
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 56%
* Compiling and checking tests
[MASTER] 06:15:14.985 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_77_1573798514953/weka/classifiers/bayes/NaiveBayesMultinomialText_77_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_77_1573798514953/weka/classifiers/bayes/NaiveBayesMultinomialText_77_tmp__ESTest_scaffolding.java]]
[MASTER] 06:15:14.985 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:15:14.985 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:15:14.989 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 06:15:14.989 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 06:15:14.989 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 06:15:14.990 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_77_1573798514953/weka/classifiers/bayes/NaiveBayesMultinomialText_77_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Nov 15 06:15:14 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.testdata.EvoSuiteFile;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_77_tmp__ESTest extends NaiveBayesMultinomialText_77_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=1.9296217656001493
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/107_weka");
30:       FileSystemHandling.setPermissions(evoSuiteFile0, false, true, false);
31:       naiveBayesMultinomialText0.setPeriodicPruning(1679);
32:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
33:       naiveBayesMultinomialText0.getStopwords();
34:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
35:       naiveBayesMultinomialText0.pruneDictionary();
36:       double double0 = naiveBayesMultinomialText0.getMinWordFrequency();
37:       assertEquals(1679, naiveBayesMultinomialText0.getPeriodicPruning());
38:       assertEquals(3.0, double0, 0.01);
39:   }
40: }
RegularFileObject[/tmp/EvoSuite_77_1573798514953/weka/classifiers/bayes/NaiveBayesMultinomialText_77_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Nov 15 06:15:14 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_77_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_77_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.classifiers.AbstractClassifier",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "weka.filters.unsupervised.attribute.Center",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.OptionHandler",
97:       "weka.core.xml.XMLBasicSerialization",
98:       "weka.core.WekaException",
99:       "weka.classifiers.CostMatrix",
100:       "weka.filters.StreamableFilter",
101:       "weka.filters.UnsupervisedFilter",
102:       "weka.core.logging.Logger$Level",
103:       "weka.classifiers.Classifier",
104:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
105:       "weka.core.Capabilities$Capability",
106:       "weka.core.SparseInstance",
107:       "weka.core.DenseInstance",
108:       "org.pentaho.packageManagement.PackageManager",
109:       "weka.core.stemmers.Stemmer",
110:       "weka.attributeSelection.AttributeTransformer",
111:       "weka.core.tokenizers.WordTokenizer",
112:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
113:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
114:       "org.pentaho.packageManagement.DefaultPackageManager",
115:       "weka.attributeSelection.PrincipalComponents",
116:       "weka.core.stemmers.SnowballStemmer",
117:       "weka.classifiers.Evaluation",
118:       "weka.classifiers.functions.supportVector.Kernel",
119:       "weka.core.WekaPackageManager",
120:       "org.bounce.net.DefaultAuthenticator",
121:       "weka.core.TechnicalInformationHandler",
122:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
123:       "weka.classifiers.meta.CostSensitiveClassifier",
124:       "weka.core.Option",
125:       "weka.core.stemmers.NullStemmer",
126:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
127:       "weka.core.EnvironmentHandler",
128:       "weka.classifiers.functions.SGDText",
129:       "weka.filters.Sourcable",
130:       "weka.core.Utils",
131:       "weka.core.tokenizers.Tokenizer",
132:       "weka.core.Attribute",
133:       "weka.core.NoSupportForMissingValuesException",
134:       "weka.core.Stopwords",
135:       "weka.classifiers.UpdateableClassifier",
136:       "weka.core.tokenizers.AlphabeticTokenizer",
137:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
138:       "weka.core.FastVector",
139:       "weka.core.MultiInstanceCapabilitiesHandler",
140:       "weka.core.Copyable",
141:       "weka.core.Capabilities",
142:       "weka.core.BinarySparseInstance",
143:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
144:       "weka.core.UnassignedDatasetException",
145:       "weka.core.tokenizers.NGramTokenizer",
146:       "weka.classifiers.RandomizableClassifier",
147:       "weka.core.SerializedObject",
148:       "weka.clusterers.UpdateableClusterer",
149:       "weka.core.Summarizable",
150:       "weka.classifiers.SingleClassifierEnhancer",
151:       "weka.core.RevisionUtils",
152:       "weka.core.AdditionalMeasureProducer",
153:       "org.pentaho.packageManagement.PackageManager$1",
154:       "weka.core.Instance",
155:       "weka.core.Drawable",
156:       "weka.core.ProtectedProperties",
157:       "weka.core.AttributeStats",
158:       "weka.core.WeightedInstancesHandler",
159:       "weka.core.CapabilitiesHandler",
160:       "weka.filters.unsupervised.attribute.Remove",
161:       "weka.core.Randomizable",
162:       "weka.attributeSelection.ASEvaluation",
163:       "weka.classifiers.functions.supportVector.StringKernel",
164:       "weka.core.AbstractInstance",
165:       "weka.core.Instances",
166:       "weka.core.SelectedTag",
167:       "org.pentaho.packageManagement.DefaultPackage",
168:       "weka.classifiers.misc.InputMappedClassifier",
169:       "weka.core.UnassignedClassException",
170:       "weka.classifiers.rules.ZeroR",
171:       "weka.core.Version",
172:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
173:       "weka.filters.unsupervised.attribute.Standardize",
174:       "weka.core.UnsupportedAttributeTypeException",
175:       "weka.core.TechnicalInformation",
176:       "weka.classifiers.Sourcable",
177:       "weka.core.RevisionHandler",
178:       "weka.classifiers.evaluation.output.prediction.PlainText",
179:       "weka.core.xml.XMLSerialization",
180:       "weka.classifiers.xml.XMLClassifier",
181:       "weka.filters.Filter",
182:       "weka.core.Tag"
183:     );
184:   } 
185: 
186:   private static void resetClasses() {
187:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_77_tmp__ESTest_scaffolding.class.getClassLoader()); 
188: 
189:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
190:       "weka.classifiers.AbstractClassifier",
191:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
192:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
193:       "weka.core.Capabilities$Capability",
194:       "weka.core.tokenizers.Tokenizer",
195:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
196:       "weka.core.tokenizers.WordTokenizer",
197:       "weka.core.stemmers.NullStemmer",
198:       "weka.core.Capabilities",
199:       "weka.core.Utils",
200:       "org.pentaho.packageManagement.PackageManager",
201:       "org.pentaho.packageManagement.DefaultPackageManager",
202:       "weka.core.Version",
203:       "weka.core.Environment",
204:       "weka.core.WekaPackageManager",
205:       "weka.attributeSelection.ASEvaluation",
206:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
207:       "weka.attributeSelection.PrincipalComponents",
208:       "weka.core.RevisionUtils",
209:       "weka.core.Option",
210:       "weka.classifiers.bayes.BayesNet",
211:       "weka.classifiers.bayes.net.BIFReader",
212:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
213:       "weka.core.Tag",
214:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
215:       "weka.classifiers.bayes.net.search.local.K2",
216:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
217:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
218:       "weka.core.Instances",
219:       "weka.core.stemmers.SnowballStemmer",
220:       "weka.classifiers.RandomizableClassifier",
221:       "weka.classifiers.functions.SGDText",
222:       "weka.core.AbstractInstance",
223:       "weka.core.SparseInstance",
224:       "weka.core.BinarySparseInstance",
225:       "weka.core.UnassignedDatasetException",
226:       "weka.core.DenseInstance",
227:       "weka.classifiers.Evaluation",
228:       "weka.classifiers.MultipleClassifiersCombiner",
229:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
230:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
231:       "weka.classifiers.meta.Stacking",
232:       "weka.classifiers.rules.ZeroR",
233:       "weka.core.TechnicalInformation",
234:       "weka.core.TechnicalInformation$Type",
235:       "weka.core.TechnicalInformation$Field",
236:       "weka.core.neighboursearch.NearestNeighbourSearch",
237:       "weka.core.neighboursearch.CoverTree",
238:       "weka.core.NormalizableDistance",
239:       "weka.core.EuclideanDistance",
240:       "weka.core.Range",
241:       "weka.classifiers.SingleClassifierEnhancer",
242:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
243:       "weka.classifiers.meta.CostSensitiveClassifier",
244:       "weka.classifiers.CostMatrix",
245:       "weka.core.Stopwords",
246:       "weka.filters.Filter",
247:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
248:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
249:       "weka.core.Attribute",
250:       "weka.core.ProtectedProperties",
251:       "weka.classifiers.functions.supportVector.Kernel",
252:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
253:       "weka.core.SerializedObject",
254:       "weka.core.neighboursearch.balltrees.BallNode",
255:       "weka.core.neighboursearch.KDTree",
256:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
257:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
258:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
259:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
260:       "weka.core.tokenizers.AlphabeticTokenizer",
261:       "weka.classifiers.misc.InputMappedClassifier",
262:       "weka.core.TestInstances",
263:       "weka.core.tokenizers.NGramTokenizer",
264:       "weka.classifiers.bayes.NaiveBayes",
265:       "weka.core.converters.ArffLoader$ArffReader",
266:       "weka.core.stemmers.LovinsStemmer",
267:       "weka.core.neighboursearch.LinearNNSearch",
268:       "weka.filters.supervised.attribute.Discretize",
269:       "weka.filters.SimpleFilter",
270:       "weka.filters.SimpleStreamFilter",
271:       "weka.filters.MultiFilter",
272:       "weka.filters.AllFilter",
273:       "weka.classifiers.bayes.NaiveBayesMultinomial",
274:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
275:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
276:       "weka.classifiers.meta.FilteredClassifier",
277:       "weka.filters.supervised.attribute.AttributeSelection",
278:       "weka.attributeSelection.AttributeSelection",
279:       "weka.attributeSelection.CfsSubsetEval",
280:       "weka.attributeSelection.ASSearch",
281:       "weka.attributeSelection.GreedyStepwise",
282:       "weka.attributeSelection.BestFirst",
283:       "weka.classifiers.trees.J48",
284:       "weka.core.FindWithCapabilities",
285:       "weka.core.SingleIndex",
286:       "weka.classifiers.functions.SGD",
287:       "weka.core.SelectedTag",
288:       "weka.classifiers.lazy.IBk",
289:       "weka.classifiers.misc.SerializedClassifier",
290:       "weka.classifiers.trees.DecisionStump",
291:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
292:       "weka.classifiers.trees.RandomForest",
293:       "weka.classifiers.trees.RandomTree",
294:       "weka.classifiers.functions.VotedPerceptron",
295:       "weka.classifiers.trees.m5.M5Base",
296:       "weka.classifiers.rules.M5Rules",
297:       "weka.classifiers.functions.LinearRegression",
298:       "weka.classifiers.IteratedSingleClassifierEnhancer",
299:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
300:       "weka.classifiers.meta.LogitBoost",
301:       "weka.classifiers.functions.GaussianProcesses",
302:       "weka.classifiers.functions.supportVector.CachedKernel",
303:       "weka.classifiers.functions.supportVector.PolyKernel",
304:       "weka.core.WekaException",
305:       "weka.core.UnsupportedAttributeTypeException",
306:       "weka.core.ClassDiscovery",
307:       "weka.classifiers.functions.SMO",
308:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
309:       "weka.classifiers.meta.Vote",
310:       "weka.core.stemmers.IteratedLovinsStemmer",
311:       "weka.core.neighboursearch.BallTree",
312:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
313:       "weka.core.neighboursearch.balltrees.BallSplitter",
314:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
315:       "weka.attributeSelection.OneRAttributeEval",
316:       "weka.classifiers.bayes.NaiveBayesUpdateable",
317:       "weka.classifiers.functions.Logistic",
318:       "weka.classifiers.trees.REPTree",
319:       "weka.core.UnassignedClassException",
320:       "weka.classifiers.functions.SMOreg",
321:       "weka.classifiers.functions.supportVector.RegOptimizer",
322:       "weka.classifiers.functions.supportVector.RegSMO",
323:       "weka.classifiers.functions.supportVector.RegSMOImproved",
324:       "weka.classifiers.rules.PART",
325:       "weka.classifiers.rules.part.MakeDecList",
326:       "weka.core.WekaEnumeration",
327:       "weka.core.Attribute$1",
328:       "weka.classifiers.functions.supportVector.RBFKernel",
329:       "weka.classifiers.meta.MultiScheme",
330:       "weka.estimators.Estimator",
331:       "weka.estimators.KernelEstimator",
332:       "weka.attributeSelection.GainRatioAttributeEval",
333:       "weka.classifiers.meta.AdditiveRegression",
334:       "weka.classifiers.rules.JRip",
335:       "weka.attributeSelection.InfoGainAttributeEval",
336:       "weka.classifiers.functions.supportVector.StringKernel",
337:       "weka.core.stemmers.Stemming",
338:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
339:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
340:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
341:       "weka.classifiers.meta.RandomCommittee",
342:       "weka.estimators.NormalEstimator",
343:       "weka.classifiers.meta.MultiClassClassifier",
344:       "weka.classifiers.lazy.KStar",
345:       "weka.estimators.PoissonEstimator",
346:       "weka.classifiers.trees.LMT",
347:       "weka.attributeSelection.ReliefFAttributeEval",
348:       "weka.classifiers.functions.supportVector.Puk",
349:       "weka.core.matrix.Matrix",
350:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
351:       "weka.classifiers.functions.SimpleLinearRegression",
352:       "weka.classifiers.meta.AdaBoostM1",
353:       "weka.classifiers.rules.DecisionTable",
354:       "weka.classifiers.functions.MultilayerPerceptron",
355:       "weka.core.FastVector",
356:       "weka.filters.unsupervised.attribute.NominalToBinary",
357:       "weka.classifiers.functions.neural.SigmoidUnit",
358:       "weka.classifiers.functions.neural.LinearUnit",
359:       "weka.classifiers.meta.RegressionByDiscretization",
360:       "weka.filters.unsupervised.attribute.Discretize",
361:       "weka.classifiers.trees.j48.ClassifierTree",
362:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
363:       "weka.attributeSelection.WrapperSubsetEval",
364:       "weka.core.AttributeStats",
365:       "weka.experiment.Stats",
366:       "weka.classifiers.meta.CVParameterSelection",
367:       "weka.classifiers.rules.OneR",
368:       "weka.classifiers.lazy.LWL",
369:       "weka.attributeSelection.CorrelationAttributeEval",
370:       "weka.classifiers.meta.AttributeSelectedClassifier",
371:       "weka.classifiers.meta.Bagging",
372:       "weka.classifiers.meta.ClassificationViaRegression",
373:       "weka.classifiers.trees.M5P",
374:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
375:       "weka.core.Javadoc",
376:       "weka.core.OptionHandlerJavadoc",
377:       "weka.classifiers.functions.SimpleLogistic",
378:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
379:       "weka.estimators.MahalanobisEstimator",
380:       "weka.estimators.DiscreteEstimator",
381:       "weka.core.SerializationHelper",
382:       "weka.classifiers.meta.RandomSubSpace",
383:       "weka.core.Check",
384:       "weka.core.CheckGOE"
385:     );
386:   }
387: }

[MASTER] 06:15:14.990 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/107_weka");
FileSystemHandling.setPermissions(evoSuiteFile0, false, true, false);
naiveBayesMultinomialText0.setPeriodicPruning(1679);
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.getStopwords();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
naiveBayesMultinomialText0.pruneDictionary();
double double0 = naiveBayesMultinomialText0.getMinWordFrequency();
assertEquals(1679, naiveBayesMultinomialText0.getPeriodicPruning());
assertEquals(3.0, double0, 0.01);


[MASTER] 06:15:15.420 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_88_1573798515389/weka/classifiers/bayes/NaiveBayesMultinomialText_88_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_88_1573798515389/weka/classifiers/bayes/NaiveBayesMultinomialText_88_tmp__ESTest_scaffolding.java]]
[MASTER] 06:15:15.420 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:15:15.420 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:15:15.420 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 06:15:15.420 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 06:15:15.421 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_88_1573798515389/weka/classifiers/bayes/NaiveBayesMultinomialText_88_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Nov 15 06:15:15 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.testdata.EvoSuiteFile;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_88_tmp__ESTest extends NaiveBayesMultinomialText_88_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=1.830738805564335
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ")");
30:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
31:       naiveBayesMultinomialText0.getStopwords();
32:       String[] stringArray0 = new String[4];
33:       stringArray0[0] = "-norm";
34:       stringArray0[1] = "-norm";
35:       stringArray0[2] = "";
36:       stringArray0[3] = "-";
37:       try { 
38:         naiveBayesMultinomialText0.setOptions(stringArray0);
39:         fail("Expecting exception: StringIndexOutOfBoundsException");
40:       
41:       } catch(StringIndexOutOfBoundsException e) {
42:       }
43:   }
44: }
RegularFileObject[/tmp/EvoSuite_88_1573798515389/weka/classifiers/bayes/NaiveBayesMultinomialText_88_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Nov 15 06:15:15 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_88_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_88_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.classifiers.AbstractClassifier",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "weka.filters.unsupervised.attribute.Center",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.OptionHandler",
97:       "weka.core.xml.XMLBasicSerialization",
98:       "weka.core.WekaException",
99:       "weka.classifiers.CostMatrix",
100:       "weka.filters.StreamableFilter",
101:       "weka.filters.UnsupervisedFilter",
102:       "weka.core.logging.Logger$Level",
103:       "weka.classifiers.Classifier",
104:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
105:       "weka.core.Capabilities$Capability",
106:       "weka.core.SparseInstance",
107:       "weka.core.DenseInstance",
108:       "org.pentaho.packageManagement.PackageManager",
109:       "weka.core.stemmers.Stemmer",
110:       "weka.attributeSelection.AttributeTransformer",
111:       "weka.core.tokenizers.WordTokenizer",
112:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
113:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
114:       "org.pentaho.packageManagement.DefaultPackageManager",
115:       "weka.attributeSelection.PrincipalComponents",
116:       "weka.core.stemmers.SnowballStemmer",
117:       "weka.classifiers.Evaluation",
118:       "weka.classifiers.functions.supportVector.Kernel",
119:       "weka.core.WekaPackageManager",
120:       "org.bounce.net.DefaultAuthenticator",
121:       "weka.core.TechnicalInformationHandler",
122:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
123:       "weka.classifiers.meta.CostSensitiveClassifier",
124:       "weka.core.Option",
125:       "weka.core.stemmers.NullStemmer",
126:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
127:       "weka.core.EnvironmentHandler",
128:       "weka.classifiers.functions.SGDText",
129:       "weka.filters.Sourcable",
130:       "weka.core.Utils",
131:       "weka.core.tokenizers.Tokenizer",
132:       "weka.core.Attribute",
133:       "weka.core.NoSupportForMissingValuesException",
134:       "weka.core.Stopwords",
135:       "weka.classifiers.UpdateableClassifier",
136:       "weka.core.tokenizers.AlphabeticTokenizer",
137:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
138:       "weka.core.FastVector",
139:       "weka.core.MultiInstanceCapabilitiesHandler",
140:       "weka.core.Copyable",
141:       "weka.core.Capabilities",
142:       "weka.core.BinarySparseInstance",
143:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
144:       "weka.core.UnassignedDatasetException",
145:       "weka.core.tokenizers.NGramTokenizer",
146:       "weka.classifiers.RandomizableClassifier",
147:       "weka.core.SerializedObject",
148:       "weka.clusterers.UpdateableClusterer",
149:       "weka.core.Summarizable",
150:       "weka.classifiers.SingleClassifierEnhancer",
151:       "weka.core.RevisionUtils",
152:       "weka.core.AdditionalMeasureProducer",
153:       "org.pentaho.packageManagement.PackageManager$1",
154:       "weka.core.Instance",
155:       "weka.core.Drawable",
156:       "weka.core.ProtectedProperties",
157:       "weka.core.AttributeStats",
158:       "weka.core.WeightedInstancesHandler",
159:       "weka.core.CapabilitiesHandler",
160:       "weka.filters.unsupervised.attribute.Remove",
161:       "weka.core.Randomizable",
162:       "weka.attributeSelection.ASEvaluation",
163:       "weka.classifiers.functions.supportVector.StringKernel",
164:       "weka.core.AbstractInstance",
165:       "weka.core.Instances",
166:       "weka.core.SelectedTag",
167:       "org.pentaho.packageManagement.DefaultPackage",
168:       "weka.classifiers.misc.InputMappedClassifier",
169:       "weka.core.UnassignedClassException",
170:       "weka.classifiers.rules.ZeroR",
171:       "weka.core.Version",
172:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
173:       "weka.filters.unsupervised.attribute.Standardize",
174:       "weka.core.UnsupportedAttributeTypeException",
175:       "weka.core.TechnicalInformation",
176:       "weka.classifiers.Sourcable",
177:       "weka.core.RevisionHandler",
178:       "weka.classifiers.evaluation.output.prediction.PlainText",
179:       "weka.core.xml.XMLSerialization",
180:       "weka.classifiers.xml.XMLClassifier",
181:       "weka.filters.Filter",
182:       "weka.core.Tag"
183:     );
184:   } 
185: 
186:   private static void resetClasses() {
187:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_88_tmp__ESTest_scaffolding.class.getClassLoader()); 
188: 
189:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
190:       "weka.classifiers.AbstractClassifier",
191:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
192:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
193:       "weka.core.Capabilities$Capability",
194:       "weka.core.tokenizers.Tokenizer",
195:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
196:       "weka.core.tokenizers.WordTokenizer",
197:       "weka.core.stemmers.NullStemmer",
198:       "weka.core.Capabilities",
199:       "weka.core.Utils",
200:       "org.pentaho.packageManagement.PackageManager",
201:       "org.pentaho.packageManagement.DefaultPackageManager",
202:       "weka.core.Version",
203:       "weka.core.Environment",
204:       "weka.core.WekaPackageManager",
205:       "weka.attributeSelection.ASEvaluation",
206:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
207:       "weka.attributeSelection.PrincipalComponents",
208:       "weka.core.RevisionUtils",
209:       "weka.core.Option",
210:       "weka.classifiers.bayes.BayesNet",
211:       "weka.classifiers.bayes.net.BIFReader",
212:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
213:       "weka.core.Tag",
214:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
215:       "weka.classifiers.bayes.net.search.local.K2",
216:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
217:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
218:       "weka.core.Instances",
219:       "weka.core.stemmers.SnowballStemmer",
220:       "weka.classifiers.RandomizableClassifier",
221:       "weka.classifiers.functions.SGDText",
222:       "weka.core.AbstractInstance",
223:       "weka.core.SparseInstance",
224:       "weka.core.BinarySparseInstance",
225:       "weka.core.UnassignedDatasetException",
226:       "weka.core.DenseInstance",
227:       "weka.classifiers.Evaluation",
228:       "weka.classifiers.MultipleClassifiersCombiner",
229:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
230:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
231:       "weka.classifiers.meta.Stacking",
232:       "weka.classifiers.rules.ZeroR",
233:       "weka.core.TechnicalInformation",
234:       "weka.core.TechnicalInformation$Type",
235:       "weka.core.TechnicalInformation$Field",
236:       "weka.core.neighboursearch.NearestNeighbourSearch",
237:       "weka.core.neighboursearch.CoverTree",
238:       "weka.core.NormalizableDistance",
239:       "weka.core.EuclideanDistance",
240:       "weka.core.Range",
241:       "weka.classifiers.SingleClassifierEnhancer",
242:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
243:       "weka.classifiers.meta.CostSensitiveClassifier",
244:       "weka.classifiers.CostMatrix",
245:       "weka.core.Stopwords",
246:       "weka.filters.Filter",
247:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
248:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
249:       "weka.core.Attribute",
250:       "weka.core.ProtectedProperties",
251:       "weka.classifiers.functions.supportVector.Kernel",
252:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
253:       "weka.core.SerializedObject",
254:       "weka.core.neighboursearch.balltrees.BallNode",
255:       "weka.core.neighboursearch.KDTree",
256:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
257:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
258:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
259:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
260:       "weka.core.tokenizers.AlphabeticTokenizer",
261:       "weka.classifiers.misc.InputMappedClassifier",
262:       "weka.core.TestInstances",
263:       "weka.core.tokenizers.NGramTokenizer",
264:       "weka.classifiers.bayes.NaiveBayes",
265:       "weka.core.converters.ArffLoader$ArffReader",
266:       "weka.core.stemmers.LovinsStemmer",
267:       "weka.core.neighboursearch.LinearNNSearch",
268:       "weka.filters.supervised.attribute.Discretize",
269:       "weka.filters.SimpleFilter",
270:       "weka.filters.SimpleStreamFilter",
271:       "weka.filters.MultiFilter",
272:       "weka.filters.AllFilter",
273:       "weka.classifiers.bayes.NaiveBayesMultinomial",
274:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
275:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
276:       "weka.classifiers.meta.FilteredClassifier",
277:       "weka.filters.supervised.attribute.AttributeSelection",
278:       "weka.attributeSelection.AttributeSelection",
279:       "weka.attributeSelection.CfsSubsetEval",
280:       "weka.attributeSelection.ASSearch",
281:       "weka.attributeSelection.GreedyStepwise",
282:       "weka.attributeSelection.BestFirst",
283:       "weka.classifiers.trees.J48",
284:       "weka.core.FindWithCapabilities",
285:       "weka.core.SingleIndex",
286:       "weka.classifiers.functions.SGD",
287:       "weka.core.SelectedTag",
288:       "weka.classifiers.lazy.IBk",
289:       "weka.classifiers.misc.SerializedClassifier",
290:       "weka.classifiers.trees.DecisionStump",
291:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
292:       "weka.classifiers.trees.RandomForest",
293:       "weka.classifiers.trees.RandomTree",
294:       "weka.classifiers.functions.VotedPerceptron",
295:       "weka.classifiers.trees.m5.M5Base",
296:       "weka.classifiers.rules.M5Rules",
297:       "weka.classifiers.functions.LinearRegression",
298:       "weka.classifiers.IteratedSingleClassifierEnhancer",
299:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
300:       "weka.classifiers.meta.LogitBoost",
301:       "weka.classifiers.functions.GaussianProcesses",
302:       "weka.classifiers.functions.supportVector.CachedKernel",
303:       "weka.classifiers.functions.supportVector.PolyKernel",
304:       "weka.core.WekaException",
305:       "weka.core.UnsupportedAttributeTypeException",
306:       "weka.core.ClassDiscovery",
307:       "weka.classifiers.functions.SMO",
308:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
309:       "weka.classifiers.meta.Vote",
310:       "weka.core.stemmers.IteratedLovinsStemmer",
311:       "weka.core.neighboursearch.BallTree",
312:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
313:       "weka.core.neighboursearch.balltrees.BallSplitter",
314:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
315:       "weka.attributeSelection.OneRAttributeEval",
316:       "weka.classifiers.bayes.NaiveBayesUpdateable",
317:       "weka.classifiers.functions.Logistic",
318:       "weka.classifiers.trees.REPTree",
319:       "weka.core.UnassignedClassException",
320:       "weka.classifiers.functions.SMOreg",
321:       "weka.classifiers.functions.supportVector.RegOptimizer",
322:       "weka.classifiers.functions.supportVector.RegSMO",
323:       "weka.classifiers.functions.supportVector.RegSMOImproved",
324:       "weka.classifiers.rules.PART",
325:       "weka.classifiers.rules.part.MakeDecList",
326:       "weka.core.WekaEnumeration",
327:       "weka.core.Attribute$1",
328:       "weka.classifiers.functions.supportVector.RBFKernel",
329:       "weka.classifiers.meta.MultiScheme",
330:       "weka.estimators.Estimator",
331:       "weka.estimators.KernelEstimator",
332:       "weka.attributeSelection.GainRatioAttributeEval",
333:       "weka.classifiers.meta.AdditiveRegression",
334:       "weka.classifiers.rules.JRip",
335:       "weka.attributeSelection.InfoGainAttributeEval",
336:       "weka.classifiers.functions.supportVector.StringKernel",
337:       "weka.core.stemmers.Stemming",
338:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
339:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
340:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
341:       "weka.classifiers.meta.RandomCommittee",
342:       "weka.estimators.NormalEstimator",
343:       "weka.classifiers.meta.MultiClassClassifier",
344:       "weka.classifiers.lazy.KStar",
345:       "weka.estimators.PoissonEstimator",
346:       "weka.classifiers.trees.LMT",
347:       "weka.attributeSelection.ReliefFAttributeEval",
348:       "weka.classifiers.functions.supportVector.Puk",
349:       "weka.core.matrix.Matrix",
350:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
351:       "weka.classifiers.functions.SimpleLinearRegression",
352:       "weka.classifiers.meta.AdaBoostM1",
353:       "weka.classifiers.rules.DecisionTable",
354:       "weka.classifiers.functions.MultilayerPerceptron",
355:       "weka.core.FastVector",
356:       "weka.filters.unsupervised.attribute.NominalToBinary",
357:       "weka.classifiers.functions.neural.SigmoidUnit",
358:       "weka.classifiers.functions.neural.LinearUnit",
359:       "weka.classifiers.meta.RegressionByDiscretization",
360:       "weka.filters.unsupervised.attribute.Discretize",
361:       "weka.classifiers.trees.j48.ClassifierTree",
362:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
363:       "weka.attributeSelection.WrapperSubsetEval",
364:       "weka.core.AttributeStats",
365:       "weka.experiment.Stats",
366:       "weka.classifiers.meta.CVParameterSelection",
367:       "weka.classifiers.rules.OneR",
368:       "weka.classifiers.lazy.LWL",
369:       "weka.attributeSelection.CorrelationAttributeEval",
370:       "weka.classifiers.meta.AttributeSelectedClassifier",
371:       "weka.classifiers.meta.Bagging",
372:       "weka.classifiers.meta.ClassificationViaRegression",
373:       "weka.classifiers.trees.M5P",
374:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
375:       "weka.core.Javadoc",
376:       "weka.core.OptionHandlerJavadoc",
377:       "weka.classifiers.functions.SimpleLogistic",
378:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
379:       "weka.estimators.MahalanobisEstimator",
380:       "weka.estimators.DiscreteEstimator",
381:       "weka.core.SerializationHelper",
382:       "weka.classifiers.meta.RandomSubSpace",
383:       "weka.core.Check",
384:       "weka.core.CheckGOE"
385:     );
386:   }
387: }

[MASTER] 06:15:15.421 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ")");
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.getStopwords();
String[] stringArray0 = new String[4];
stringArray0[0] = "-norm";
stringArray0[1] = "-norm";
stringArray0[2] = "";
stringArray0[3] = "-";
naiveBayesMultinomialText0.setOptions(stringArray0);

[MASTER] 06:15:15.451 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_89_1573798515422/weka/classifiers/bayes/NaiveBayesMultinomialText_89_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_89_1573798515422/weka/classifiers/bayes/NaiveBayesMultinomialText_89_tmp__ESTest_scaffolding.java]]
[MASTER] 06:15:15.451 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:15:15.451 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:15:15.451 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 06:15:15.452 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 06:15:15.452 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 06:15:15.452 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 06:15:15.452 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 06:15:15.452 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 06:15:15.452 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 06:15:15.452 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_89_1573798515422/weka/classifiers/bayes/NaiveBayesMultinomialText_89_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Nov 15 06:15:15 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.testdata.EvoSuiteFile;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_89_tmp__ESTest extends NaiveBayesMultinomialText_89_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=1.0931471805599453
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/107_weka");
30:       FileSystemHandling.setPermissions(evoSuiteFile0, true, false, false);
31:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
32:       naiveBayesMultinomialText0.getStopwords();
33:       Integer integer0 = new Integer((-5146));
34:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
35:       linkedHashMap0.put(integer0, linkedHashMap1);
36:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
37:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
38:       Integer integer1 = new Integer(913);
39:       assertEquals(913, (int)integer1);
40:   }
41: }
RegularFileObject[/tmp/EvoSuite_89_1573798515422/weka/classifiers/bayes/NaiveBayesMultinomialText_89_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Nov 15 06:15:15 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_89_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_89_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.classifiers.AbstractClassifier",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "weka.filters.unsupervised.attribute.Center",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.OptionHandler",
97:       "weka.core.xml.XMLBasicSerialization",
98:       "weka.core.WekaException",
99:       "weka.classifiers.CostMatrix",
100:       "weka.filters.StreamableFilter",
101:       "weka.filters.UnsupervisedFilter",
102:       "weka.core.logging.Logger$Level",
103:       "weka.classifiers.Classifier",
104:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
105:       "weka.core.Capabilities$Capability",
106:       "weka.core.SparseInstance",
107:       "weka.core.DenseInstance",
108:       "org.pentaho.packageManagement.PackageManager",
109:       "weka.core.stemmers.Stemmer",
110:       "weka.attributeSelection.AttributeTransformer",
111:       "weka.core.tokenizers.WordTokenizer",
112:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
113:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
114:       "org.pentaho.packageManagement.DefaultPackageManager",
115:       "weka.attributeSelection.PrincipalComponents",
116:       "weka.core.stemmers.SnowballStemmer",
117:       "weka.classifiers.Evaluation",
118:       "weka.classifiers.functions.supportVector.Kernel",
119:       "weka.core.WekaPackageManager",
120:       "org.bounce.net.DefaultAuthenticator",
121:       "weka.core.TechnicalInformationHandler",
122:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
123:       "weka.classifiers.meta.CostSensitiveClassifier",
124:       "weka.core.Option",
125:       "weka.core.stemmers.NullStemmer",
126:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
127:       "weka.core.EnvironmentHandler",
128:       "weka.classifiers.functions.SGDText",
129:       "weka.filters.Sourcable",
130:       "weka.core.Utils",
131:       "weka.core.tokenizers.Tokenizer",
132:       "weka.core.Attribute",
133:       "weka.core.NoSupportForMissingValuesException",
134:       "weka.core.Stopwords",
135:       "weka.classifiers.UpdateableClassifier",
136:       "weka.core.tokenizers.AlphabeticTokenizer",
137:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
138:       "weka.core.FastVector",
139:       "weka.core.MultiInstanceCapabilitiesHandler",
140:       "weka.core.Copyable",
141:       "weka.core.Capabilities",
142:       "weka.core.BinarySparseInstance",
143:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
144:       "weka.core.UnassignedDatasetException",
145:       "weka.core.tokenizers.NGramTokenizer",
146:       "weka.classifiers.RandomizableClassifier",
147:       "weka.core.SerializedObject",
148:       "weka.clusterers.UpdateableClusterer",
149:       "weka.core.Summarizable",
150:       "weka.classifiers.SingleClassifierEnhancer",
151:       "weka.core.RevisionUtils",
152:       "weka.core.AdditionalMeasureProducer",
153:       "org.pentaho.packageManagement.PackageManager$1",
154:       "weka.core.Instance",
155:       "weka.core.Drawable",
156:       "weka.core.ProtectedProperties",
157:       "weka.core.AttributeStats",
158:       "weka.core.WeightedInstancesHandler",
159:       "weka.core.CapabilitiesHandler",
160:       "weka.filters.unsupervised.attribute.Remove",
161:       "weka.core.Randomizable",
162:       "weka.attributeSelection.ASEvaluation",
163:       "weka.classifiers.functions.supportVector.StringKernel",
164:       "weka.core.AbstractInstance",
165:       "weka.core.Instances",
166:       "weka.core.SelectedTag",
167:       "org.pentaho.packageManagement.DefaultPackage",
168:       "weka.classifiers.misc.InputMappedClassifier",
169:       "weka.core.UnassignedClassException",
170:       "weka.classifiers.rules.ZeroR",
171:       "weka.core.Version",
172:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
173:       "weka.filters.unsupervised.attribute.Standardize",
174:       "weka.core.UnsupportedAttributeTypeException",
175:       "weka.core.TechnicalInformation",
176:       "weka.classifiers.Sourcable",
177:       "weka.core.RevisionHandler",
178:       "weka.classifiers.evaluation.output.prediction.PlainText",
179:       "weka.core.xml.XMLSerialization",
180:       "weka.classifiers.xml.XMLClassifier",
181:       "weka.filters.Filter",
182:       "weka.core.Tag"
183:     );
184:   } 
185: 
186:   private static void resetClasses() {
187:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_89_tmp__ESTest_scaffolding.class.getClassLoader()); 
188: 
189:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
190:       "weka.classifiers.AbstractClassifier",
191:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
192:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
193:       "weka.core.Capabilities$Capability",
194:       "weka.core.tokenizers.Tokenizer",
195:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
196:       "weka.core.tokenizers.WordTokenizer",
197:       "weka.core.stemmers.NullStemmer",
198:       "weka.core.Capabilities",
199:       "weka.core.Utils",
200:       "org.pentaho.packageManagement.PackageManager",
201:       "org.pentaho.packageManagement.DefaultPackageManager",
202:       "weka.core.Version",
203:       "weka.core.Environment",
204:       "weka.core.WekaPackageManager",
205:       "weka.attributeSelection.ASEvaluation",
206:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
207:       "weka.attributeSelection.PrincipalComponents",
208:       "weka.core.RevisionUtils",
209:       "weka.core.Option",
210:       "weka.classifiers.bayes.BayesNet",
211:       "weka.classifiers.bayes.net.BIFReader",
212:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
213:       "weka.core.Tag",
214:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
215:       "weka.classifiers.bayes.net.search.local.K2",
216:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
217:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
218:       "weka.core.Instances",
219:       "weka.core.stemmers.SnowballStemmer",
220:       "weka.classifiers.RandomizableClassifier",
221:       "weka.classifiers.functions.SGDText",
222:       "weka.core.AbstractInstance",
223:       "weka.core.SparseInstance",
224:       "weka.core.BinarySparseInstance",
225:       "weka.core.UnassignedDatasetException",
226:       "weka.core.DenseInstance",
227:       "weka.classifiers.Evaluation",
228:       "weka.classifiers.MultipleClassifiersCombiner",
229:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
230:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
231:       "weka.classifiers.meta.Stacking",
232:       "weka.classifiers.rules.ZeroR",
233:       "weka.core.TechnicalInformation",
234:       "weka.core.TechnicalInformation$Type",
235:       "weka.core.TechnicalInformation$Field",
236:       "weka.core.neighboursearch.NearestNeighbourSearch",
237:       "weka.core.neighboursearch.CoverTree",
238:       "weka.core.NormalizableDistance",
239:       "weka.core.EuclideanDistance",
240:       "weka.core.Range",
241:       "weka.classifiers.SingleClassifierEnhancer",
242:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
243:       "weka.classifiers.meta.CostSensitiveClassifier",
244:       "weka.classifiers.CostMatrix",
245:       "weka.core.Stopwords",
246:       "weka.filters.Filter",
247:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
248:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
249:       "weka.core.Attribute",
250:       "weka.core.ProtectedProperties",
251:       "weka.classifiers.functions.supportVector.Kernel",
252:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
253:       "weka.core.SerializedObject",
254:       "weka.core.neighboursearch.balltrees.BallNode",
255:       "weka.core.neighboursearch.KDTree",
256:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
257:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
258:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
259:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
260:       "weka.core.tokenizers.AlphabeticTokenizer",
261:       "weka.classifiers.misc.InputMappedClassifier",
262:       "weka.core.TestInstances",
263:       "weka.core.tokenizers.NGramTokenizer",
264:       "weka.classifiers.bayes.NaiveBayes",
265:       "weka.core.converters.ArffLoader$ArffReader",
266:       "weka.core.stemmers.LovinsStemmer",
267:       "weka.core.neighboursearch.LinearNNSearch",
268:       "weka.filters.supervised.attribute.Discretize",
269:       "weka.filters.SimpleFilter",
270:       "weka.filters.SimpleStreamFilter",
271:       "weka.filters.MultiFilter",
272:       "weka.filters.AllFilter",
273:       "weka.classifiers.bayes.NaiveBayesMultinomial",
274:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
275:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
276:       "weka.classifiers.meta.FilteredClassifier",
277:       "weka.filters.supervised.attribute.AttributeSelection",
278:       "weka.attributeSelection.AttributeSelection",
279:       "weka.attributeSelection.CfsSubsetEval",
280:       "weka.attributeSelection.ASSearch",
281:       "weka.attributeSelection.GreedyStepwise",
282:       "weka.attributeSelection.BestFirst",
283:       "weka.classifiers.trees.J48",
284:       "weka.core.FindWithCapabilities",
285:       "weka.core.SingleIndex",
286:       "weka.classifiers.functions.SGD",
287:       "weka.core.SelectedTag",
288:       "weka.classifiers.lazy.IBk",
289:       "weka.classifiers.misc.SerializedClassifier",
290:       "weka.classifiers.trees.DecisionStump",
291:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
292:       "weka.classifiers.trees.RandomForest",
293:       "weka.classifiers.trees.RandomTree",
294:       "weka.classifiers.functions.VotedPerceptron",
295:       "weka.classifiers.trees.m5.M5Base",
296:       "weka.classifiers.rules.M5Rules",
297:       "weka.classifiers.functions.LinearRegression",
298:       "weka.classifiers.IteratedSingleClassifierEnhancer",
299:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
300:       "weka.classifiers.meta.LogitBoost",
301:       "weka.classifiers.functions.GaussianProcesses",
302:       "weka.classifiers.functions.supportVector.CachedKernel",
303:       "weka.classifiers.functions.supportVector.PolyKernel",
304:       "weka.core.WekaException",
305:       "weka.core.UnsupportedAttributeTypeException",
306:       "weka.core.ClassDiscovery",
307:       "weka.classifiers.functions.SMO",
308:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
309:       "weka.classifiers.meta.Vote",
310:       "weka.core.stemmers.IteratedLovinsStemmer",
311:       "weka.core.neighboursearch.BallTree",
312:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
313:       "weka.core.neighboursearch.balltrees.BallSplitter",
314:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
315:       "weka.attributeSelection.OneRAttributeEval",
316:       "weka.classifiers.bayes.NaiveBayesUpdateable",
317:       "weka.classifiers.functions.Logistic",
318:       "weka.classifiers.trees.REPTree",
319:       "weka.core.UnassignedClassException",
320:       "weka.classifiers.functions.SMOreg",
321:       "weka.classifiers.functions.supportVector.RegOptimizer",
322:       "weka.classifiers.functions.supportVector.RegSMO",
323:       "weka.classifiers.functions.supportVector.RegSMOImproved",
324:       "weka.classifiers.rules.PART",
325:       "weka.classifiers.rules.part.MakeDecList",
326:       "weka.core.WekaEnumeration",
327:       "weka.core.Attribute$1",
328:       "weka.classifiers.functions.supportVector.RBFKernel",
329:       "weka.classifiers.meta.MultiScheme",
330:       "weka.estimators.Estimator",
331:       "weka.estimators.KernelEstimator",
332:       "weka.attributeSelection.GainRatioAttributeEval",
333:       "weka.classifiers.meta.AdditiveRegression",
334:       "weka.classifiers.rules.JRip",
335:       "weka.attributeSelection.InfoGainAttributeEval",
336:       "weka.classifiers.functions.supportVector.StringKernel",
337:       "weka.core.stemmers.Stemming",
338:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
339:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
340:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
341:       "weka.classifiers.meta.RandomCommittee",
342:       "weka.estimators.NormalEstimator",
343:       "weka.classifiers.meta.MultiClassClassifier",
344:       "weka.classifiers.lazy.KStar",
345:       "weka.estimators.PoissonEstimator",
346:       "weka.classifiers.trees.LMT",
347:       "weka.attributeSelection.ReliefFAttributeEval",
348:       "weka.classifiers.functions.supportVector.Puk",
349:       "weka.core.matrix.Matrix",
350:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
351:       "weka.classifiers.functions.SimpleLinearRegression",
352:       "weka.classifiers.meta.AdaBoostM1",
353:       "weka.classifiers.rules.DecisionTable",
354:       "weka.classifiers.functions.MultilayerPerceptron",
355:       "weka.core.FastVector",
356:       "weka.filters.unsupervised.attribute.NominalToBinary",
357:       "weka.classifiers.functions.neural.SigmoidUnit",
358:       "weka.classifiers.functions.neural.LinearUnit",
359:       "weka.classifiers.meta.RegressionByDiscretization",
360:       "weka.filters.unsupervised.attribute.Discretize",
361:       "weka.classifiers.trees.j48.ClassifierTree",
362:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
363:       "weka.attributeSelection.WrapperSubsetEval",
364:       "weka.core.AttributeStats",
365:       "weka.experiment.Stats",
366:       "weka.classifiers.meta.CVParameterSelection",
367:       "weka.classifiers.rules.OneR",
368:       "weka.classifiers.lazy.LWL",
369:       "weka.attributeSelection.CorrelationAttributeEval",
370:       "weka.classifiers.meta.AttributeSelectedClassifier",
371:       "weka.classifiers.meta.Bagging",
372:       "weka.classifiers.meta.ClassificationViaRegression",
373:       "weka.classifiers.trees.M5P",
374:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
375:       "weka.core.Javadoc",
376:       "weka.core.OptionHandlerJavadoc",
377:       "weka.classifiers.functions.SimpleLogistic",
378:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
379:       "weka.estimators.MahalanobisEstimator",
380:       "weka.estimators.DiscreteEstimator",
381:       "weka.core.SerializationHelper",
382:       "weka.classifiers.meta.RandomSubSpace",
383:       "weka.core.Check",
384:       "weka.core.CheckGOE"
385:     );
386:   }
387: }

[MASTER] 06:15:15.453 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/107_weka");
FileSystemHandling.setPermissions(evoSuiteFile0, true, false, false);
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.getStopwords();
Integer integer0 = new Integer((-5146));
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.put(integer0, linkedHashMap1);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
Integer integer1 = new Integer(913);
assertEquals(913, (int)integer1);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/mosa/tests/s1028/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20776
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20777
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1367
* Using seed 1028
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 06:17:10.259 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:17:10.261 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:17:10.262 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 06:17:10.992 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 06:17:11.772 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 06:17:11.801 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 06:17:14.527 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 06:17:14.574 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 06:17:14.575 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 06:17:14.575 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 06:17:14.575 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 06:17:14.576 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 06:17:14.576 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 06:17:14.576 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 06:17:14.577 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 06:17:14.650 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 06:17:14.664 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 3904
* Using seed 1028
* Starting evolution
[MASTER] 06:17:18.133 [logback-2] ERROR TestCluster - Failed to check cache for javax.swing.RowFilter<M, I>.ComparisonType : Type points to itself
[MASTER] 06:17:28.249 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 06:17:40.270 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.areaUnderPRC(I)D: Line 521
[MASTER] 06:17:40.270 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.areaUnderPRC(I)D: Line 522
[MASTER] 06:17:40.280 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.areaUnderPRC(I)D: I4 Branch 12 IFNONNULL L521 - false
[MASTER] 06:17:40.281 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 339: weka.classifiers.Evaluation.areaUnderPRC(I)D:521 - ReplaceComparisonOperator != null -> = null
[MASTER] 06:17:40.283 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.areaUnderPRC(I)D
[MASTER] 06:17:40.288 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.areaUnderPRC(I)D
[MASTER] 06:17:40.289 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.areaUnderPRC(I)D: I4 Branch 12 IFNONNULL L521 - false in context: weka.classifiers.Evaluation:areaUnderPRC(I)D
[MASTER] 06:18:32.469 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.num2ShortID(I[CI)Ljava/lang/String;
[MASTER] 06:18:32.470 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.evaluateModelOnce(DLweka/core/Instance;)V
[MASTER] 06:18:54.356 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.numFalsePositives(I)D
[MASTER] 06:18:54.357 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.numFalsePositives(I)D
[MASTER] 06:18:59.838 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 06:21:37.119 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.updateStatsForConditionalDensityEstimator(Lweka/classifiers/ConditionalDensityEstimator;Lweka/core/Instance;D)V
* Search finished after 295s and 243 generations, 112671 statements, best individual has fitness: 2800.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 86%
* Total number of goals: 217
* Number of covered goals: 187
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 68%
* Total number of goals: 428
* Number of covered goals: 289
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 88%
* Total number of goals: 260
* Number of covered goals: 228
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 68%
* Total number of goals: 428
* Number of covered goals: 289
* Search finished after 269s and 118 generations, 58306 statements, best individual has fitness: 15512.0
* Generated 75 tests with total length 203
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Generating assertions
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 57%
* Total number of goals: 1378
* Number of covered goals: 788
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 42%
* Total number of goals: 809
* Number of covered goals: 340
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 70
* Number of covered goals: 70
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 60%
* Total number of goals: 424
* Number of covered goals: 256
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 22%
* Total number of goals: 278
* Number of covered goals: 61
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 103
* Number of covered goals: 102
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 41%
* Total number of goals: 809
* Number of covered goals: 330
* Generated 158 tests with total length 1511
* Resulting test suite's coverage: 51% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 71%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/mosa/tests/s1028/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 10%
[MASTER] 06:29:57.380 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
[MASTER] 06:30:06.677 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 06:30:07.119 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 06:30:07.120 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 06:30:08.872 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/mosa/tests/s1028/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20776
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 06:31:11.403 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:31:11.410 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:31:11.412 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 06:31:11.530 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 06:31:11.537 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 06:31:11.539 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1729
* Using seed 1028
* Starting evolution
[MASTER] 06:32:32.452 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
* Search finished after 237s and 369 generations, 110028 statements, best individual has fitness: 9064.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 41%
* Total number of goals: 370
* Number of covered goals: 153
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 28%
* Total number of goals: 242
* Number of covered goals: 67
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 27%
* Total number of goals: 713
* Number of covered goals: 194
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 46%
* Total number of goals: 72
* Number of covered goals: 33
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 28%
* Total number of goals: 242
* Number of covered goals: 67
* Generated 57 tests with total length 273
* Resulting test suite's coverage: 35% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 11%
* Compiling and checking tests
[MASTER] 06:36:53.082 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 06:36:53.612 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 7
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/mosa/tests/s1028/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20772
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20776
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 06:50:42.002 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:50:42.034 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:50:42.059 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 06:50:42.162 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2699
* Using seed 1028
* Starting evolution
[MASTER] 06:50:46.544 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:50:46.557 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:50:46.592 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 06:50:50.014 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 06:50:50.506 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 06:50:50.508 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2767
* Using seed 1028
* Starting evolution
[MASTER] 06:50:54.866 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NominalAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
* Search finished after 223s and 262 generations, 102300 statements, best individual has fitness: 12528.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 36%
* Total number of goals: 705
* Number of covered goals: 256
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 110
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 56%
* Total number of goals: 993
* Number of covered goals: 559
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 30%
* Total number of goals: 93
* Number of covered goals: 28
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 110
* Generated 84 tests with total length 508
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 268s and 49 generations, 35502 statements, best individual has fitness: 2416.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 96%
* Total number of goals: 647
* Number of covered goals: 624
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 93%
* Total number of goals: 441
* Number of covered goals: 411
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 26
* Number of covered goals: 26
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 678
* Number of covered goals: 610
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 47%
* Total number of goals: 244
* Number of covered goals: 114
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 124
* Number of covered goals: 122
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 124
* Number of covered goals: 121
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 90%
* Total number of goals: 441
* Number of covered goals: 396
* Generated 223 tests with total length 2070
* Resulting test suite's coverage: 89% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 23%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/mosa/tests/s1028/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 07:00:49.527 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6708895833333334% of time used, but only 87/223 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 21%
* Compiling and checking tests
[MASTER] 07:02:18.524 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/mosa/tests/s1028/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 20775
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 07:03:13.224 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 07:03:13.234 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 07:03:13.237 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 07:03:13.286 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2499
* Using seed 1028
* Starting evolution
[MASTER] 07:03:15.183 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Search finished after 256s and 128 generations, 82797 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 20 tests with total length 86
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/mosa/tests/s1028/107_weka/evosuite-tests
* Done!

* Computation finished
