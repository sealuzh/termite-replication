* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13272
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13274
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:12:18.554 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:12:18.591 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:12:18.592 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:12:18.919 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 10:12:18.924 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 10:12:18.944 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1729
* Using seed 1013
* Starting evolution
[MASTER] 10:12:22.953 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 10:12:22.953 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 10:12:22.955 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 10:12:23.078 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:12:23.094 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:12:23.140 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1412
* Using seed 1013
* Starting evolution
[MASTER] 10:13:03.385 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 10:13:03.386 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 10:13:12.551 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 10:14:52.961 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 10:15:12.772 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
* Search finished after 254s and 315 generations, 116501 statements, best individual has fitness: 1456.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 90%
* Total number of goals: 338
* Number of covered goals: 305
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 85%
* Total number of goals: 194
* Number of covered goals: 165
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 476
* Number of covered goals: 442
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 112
* Number of covered goals: 61
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 84%
* Total number of goals: 194
* Number of covered goals: 162
* Generated 85 tests with total length 542
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 296s and 369 generations, 143603 statements, best individual has fitness: 3848.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 73%
* Total number of goals: 370
* Number of covered goals: 269
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 63%
* Total number of goals: 242
* Number of covered goals: 153
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 36
* Number of covered goals: 36
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 76%
* Total number of goals: 713
* Number of covered goals: 544
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 72
* Number of covered goals: 39
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 63%
* Total number of goals: 242
* Number of covered goals: 153
* Generated 92 tests with total length 571
* Resulting test suite's coverage: 73% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 30%
* Compiling and checking tests
[MASTER] 10:20:46.017 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 10:20:46.061 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 10:20:46.253 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 10:20:46.254 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Resulting test suite's mutation score: 55%
* Compiling and checking tests
[MASTER] 10:21:04.553 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_28_1573726864506/weka/classifiers/bayes/NaiveBayesMultinomialText_28_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_28_1573726864506/weka/classifiers/bayes/NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding.java]]
[MASTER] 10:21:04.553 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 10:21:04.553 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 10:21:04.557 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 10:21:04.557 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 10:21:04.557 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 10:21:04.559 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_28_1573726864506/weka/classifiers/bayes/NaiveBayesMultinomialText_28_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Nov 14 10:21:04 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_28_tmp__ESTest extends NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=1.6868977693384444
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
28:       linkedHashMap0.values();
29:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
30:       naiveBayesMultinomialText0.setPeriodicPruning(1879048192);
31:       naiveBayesMultinomialText0.pruneDictionary();
32:       int int0 = naiveBayesMultinomialText0.getPeriodicPruning();
33:       assertEquals(1879048192, int0);
34:   }
35: }
RegularFileObject[/tmp/EvoSuite_28_1573726864506/weka/classifiers/bayes/NaiveBayesMultinomialText_28_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Nov 14 10:21:04 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.classifiers.bayes.net.search.local.K2",
95:       "weka.filters.UnsupervisedFilter",
96:       "weka.core.logging.Logger$Level",
97:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
98:       "weka.core.DenseInstance",
99:       "weka.core.stemmers.Stemmer",
100:       "org.pentaho.packageManagement.DefaultPackageManager",
101:       "org.bounce.net.DefaultAuthenticator",
102:       "weka.filters.SimpleFilter",
103:       "weka.filters.SimpleStreamFilter",
104:       "weka.estimators.IncrementalEstimator",
105:       "weka.estimators.Estimator$Builder",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.core.RelationalLocator",
108:       "weka.core.Utils",
109:       "weka.core.CustomDisplayStringProvider",
110:       "weka.core.tokenizers.Tokenizer",
111:       "weka.core.NormalizableDistance",
112:       "weka.core.NoSupportForMissingValuesException",
113:       "weka.classifiers.UpdateableClassifier",
114:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
115:       "weka.core.MultiInstanceCapabilitiesHandler",
116:       "weka.core.Copyable",
117:       "weka.core.Capabilities",
118:       "weka.core.BinarySparseInstance",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
120:       "weka.core.AttributeLocator",
121:       "weka.core.SerializedObject",
122:       "weka.clusterers.UpdateableClusterer",
123:       "weka.core.Summarizable",
124:       "weka.core.AdditionalMeasureProducer",
125:       "weka.core.neighboursearch.balltrees.BallNode",
126:       "org.pentaho.packageManagement.PackageManager$1",
127:       "weka.core.Drawable",
128:       "weka.core.CapabilitiesHandler",
129:       "weka.core.AbstractInstance",
130:       "weka.core.scripting.JythonObject",
131:       "weka.core.SelectedTag",
132:       "org.pentaho.packageManagement.DefaultPackage",
133:       "weka.classifiers.bayes.BayesNet",
134:       "weka.core.Version",
135:       "weka.filters.AllFilter",
136:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
137:       "weka.core.Tag",
138:       "weka.classifiers.AbstractClassifier",
139:       "weka.core.OptionHandler",
140:       "weka.core.WekaException",
141:       "weka.filters.StreamableFilter",
142:       "weka.core.Range",
143:       "weka.core.scripting.JythonSerializableObject",
144:       "weka.classifiers.Classifier",
145:       "weka.core.Capabilities$Capability",
146:       "weka.core.SparseInstance",
147:       "org.pentaho.packageManagement.PackageManager",
148:       "weka.estimators.PoissonEstimator",
149:       "weka.core.tokenizers.WordTokenizer",
150:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
151:       "weka.core.stemmers.SnowballStemmer",
152:       "weka.classifiers.Evaluation",
153:       "weka.core.WekaPackageManager",
154:       "weka.filters.SupervisedFilter",
155:       "weka.core.TechnicalInformationHandler",
156:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
157:       "weka.core.neighboursearch.LinearNNSearch",
158:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
159:       "weka.core.Option",
160:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
161:       "weka.filters.Sourcable",
162:       "weka.core.Attribute",
163:       "weka.core.Stopwords",
164:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
165:       "weka.core.UnassignedDatasetException",
166:       "weka.core.tokenizers.NGramTokenizer",
167:       "weka.core.RevisionUtils",
168:       "weka.core.Instance",
169:       "weka.estimators.Estimator",
170:       "weka.core.ProtectedProperties",
171:       "weka.core.StringLocator",
172:       "weka.classifiers.bayes.net.ADNode",
173:       "weka.core.AttributeStats",
174:       "weka.filters.MultiFilter",
175:       "weka.core.WeightedInstancesHandler",
176:       "weka.core.neighboursearch.NearestNeighbourSearch",
177:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
178:       "weka.core.EuclideanDistance",
179:       "weka.core.Instances",
180:       "weka.core.UnassignedClassException",
181:       "weka.classifiers.bayes.net.BIFReader",
182:       "weka.classifiers.bayes.net.ParentSet",
183:       "weka.core.UnsupportedAttributeTypeException",
184:       "weka.core.TechnicalInformation",
185:       "weka.classifiers.Sourcable",
186:       "weka.core.RevisionHandler",
187:       "weka.classifiers.evaluation.output.prediction.PlainText",
188:       "weka.core.xml.XMLSerialization",
189:       "weka.classifiers.xml.XMLClassifier",
190:       "weka.classifiers.lazy.IBk",
191:       "weka.filters.Filter",
192:       "weka.filters.supervised.attribute.Discretize"
193:     );
194:   } 
195: 
196:   private static void resetClasses() {
197:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding.class.getClassLoader()); 
198: 
199:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
200:       "weka.classifiers.AbstractClassifier",
201:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
202:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
203:       "weka.core.Capabilities$Capability",
204:       "weka.core.tokenizers.Tokenizer",
205:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
206:       "weka.core.tokenizers.WordTokenizer",
207:       "weka.core.stemmers.NullStemmer",
208:       "weka.classifiers.Evaluation",
209:       "weka.core.Utils",
210:       "weka.core.Option",
211:       "weka.core.stemmers.LovinsStemmer",
212:       "weka.core.stemmers.IteratedLovinsStemmer",
213:       "weka.core.SerializedObject",
214:       "weka.core.TechnicalInformation",
215:       "weka.core.TechnicalInformation$Type",
216:       "weka.core.TechnicalInformation$Field",
217:       "weka.core.RevisionUtils",
218:       "weka.core.Capabilities",
219:       "org.pentaho.packageManagement.PackageManager",
220:       "org.pentaho.packageManagement.DefaultPackageManager",
221:       "weka.core.Version",
222:       "weka.core.Environment",
223:       "weka.core.WekaPackageManager",
224:       "weka.attributeSelection.ASEvaluation",
225:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
226:       "weka.attributeSelection.PrincipalComponents",
227:       "weka.classifiers.misc.SerializedClassifier",
228:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
229:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
230:       "weka.core.Tag",
231:       "weka.classifiers.lazy.IBk",
232:       "weka.core.neighboursearch.NearestNeighbourSearch",
233:       "weka.core.neighboursearch.LinearNNSearch",
234:       "weka.core.NormalizableDistance",
235:       "weka.core.EuclideanDistance",
236:       "weka.core.Range",
237:       "weka.classifiers.CostMatrix",
238:       "weka.core.TestInstances",
239:       "weka.core.stemmers.SnowballStemmer",
240:       "weka.core.stemmers.Stemming",
241:       "weka.core.neighboursearch.CoverTree",
242:       "weka.core.AbstractInstance",
243:       "weka.core.SparseInstance",
244:       "weka.core.BinarySparseInstance",
245:       "weka.core.Instances",
246:       "weka.core.UnassignedDatasetException",
247:       "weka.core.Attribute",
248:       "weka.core.ProtectedProperties",
249:       "weka.core.neighboursearch.balltrees.BallNode",
250:       "weka.core.DenseInstance",
251:       "weka.attributeSelection.CorrelationAttributeEval",
252:       "weka.core.tokenizers.NGramTokenizer",
253:       "weka.classifiers.bayes.NaiveBayesMultinomial",
254:       "weka.core.tokenizers.AlphabeticTokenizer",
255:       "weka.classifiers.functions.supportVector.Kernel",
256:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
257:       "weka.classifiers.bayes.BayesNet",
258:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
259:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
260:       "weka.classifiers.bayes.net.search.local.K2",
261:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
262:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
263:       "weka.classifiers.SingleClassifierEnhancer",
264:       "weka.classifiers.misc.InputMappedClassifier",
265:       "weka.classifiers.rules.ZeroR",
266:       "weka.classifiers.RandomizableClassifier",
267:       "weka.classifiers.functions.SGDText",
268:       "weka.filters.Filter",
269:       "weka.filters.supervised.attribute.Discretize",
270:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
271:       "weka.classifiers.meta.MultiClassClassifier",
272:       "weka.classifiers.functions.Logistic",
273:       "weka.core.converters.ArffLoader$ArffReader",
274:       "weka.core.Stopwords",
275:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
276:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
277:       "weka.core.FindWithCapabilities",
278:       "weka.core.SingleIndex",
279:       "weka.classifiers.functions.SGD",
280:       "weka.classifiers.functions.supportVector.CachedKernel",
281:       "weka.classifiers.functions.supportVector.PolyKernel",
282:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
283:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
284:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
285:       "weka.classifiers.meta.CostSensitiveClassifier",
286:       "weka.core.neighboursearch.BallTree",
287:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
288:       "weka.core.neighboursearch.balltrees.BallSplitter",
289:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
290:       "weka.core.Check",
291:       "weka.core.CheckOptionHandler",
292:       "weka.classifiers.IteratedSingleClassifierEnhancer",
293:       "weka.classifiers.meta.AdditiveRegression",
294:       "weka.classifiers.meta.RegressionByDiscretization",
295:       "weka.filters.unsupervised.attribute.Discretize",
296:       "weka.classifiers.trees.J48",
297:       "weka.classifiers.trees.j48.ClassifierTree",
298:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
299:       "weka.core.WekaException",
300:       "weka.core.UnsupportedAttributeTypeException",
301:       "weka.attributeSelection.InfoGainAttributeEval",
302:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
303:       "weka.classifiers.trees.RandomForest",
304:       "weka.classifiers.trees.RandomTree",
305:       "weka.core.ClassDiscovery",
306:       "weka.classifiers.rules.PART",
307:       "weka.classifiers.rules.part.MakeDecList",
308:       "weka.classifiers.bayes.NaiveBayes",
309:       "weka.core.WekaEnumeration",
310:       "weka.core.Attribute$1",
311:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
312:       "weka.classifiers.meta.AdaBoostM1",
313:       "weka.classifiers.trees.DecisionStump",
314:       "weka.filters.SimpleFilter",
315:       "weka.filters.SimpleStreamFilter",
316:       "weka.filters.MultiFilter",
317:       "weka.filters.AllFilter",
318:       "weka.classifiers.trees.m5.M5Base",
319:       "weka.classifiers.rules.M5Rules",
320:       "weka.classifiers.functions.LinearRegression",
321:       "weka.estimators.Estimator",
322:       "weka.estimators.DiscreteEstimator",
323:       "weka.classifiers.trees.REPTree",
324:       "weka.core.neighboursearch.KDTree",
325:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
326:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
327:       "weka.classifiers.meta.CVParameterSelection",
328:       "weka.core.FastVector",
329:       "weka.classifiers.meta.AttributeSelectedClassifier",
330:       "weka.attributeSelection.CfsSubsetEval",
331:       "weka.attributeSelection.ASSearch",
332:       "weka.attributeSelection.BestFirst",
333:       "weka.classifiers.functions.SimpleLinearRegression",
334:       "weka.classifiers.bayes.net.BIFReader",
335:       "weka.estimators.NormalEstimator",
336:       "weka.classifiers.functions.SMOreg",
337:       "weka.classifiers.functions.supportVector.RegOptimizer",
338:       "weka.classifiers.functions.supportVector.RegSMO",
339:       "weka.classifiers.functions.supportVector.RegSMOImproved",
340:       "weka.classifiers.functions.SimpleLogistic",
341:       "weka.classifiers.MultipleClassifiersCombiner",
342:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
343:       "weka.classifiers.meta.Vote",
344:       "weka.core.SelectedTag",
345:       "weka.classifiers.trees.LMT",
346:       "weka.core.UnassignedClassException",
347:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
348:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
349:       "weka.classifiers.meta.Stacking",
350:       "weka.classifiers.lazy.LWL",
351:       "weka.estimators.PoissonEstimator",
352:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
353:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
354:       "weka.classifiers.meta.Bagging",
355:       "weka.core.Queue",
356:       "weka.core.AttributeLocator",
357:       "weka.core.StringLocator",
358:       "weka.core.RelationalLocator",
359:       "weka.core.ContingencyTables",
360:       "weka.core.Queue$QueueNode",
361:       "weka.classifiers.meta.RandomCommittee",
362:       "weka.classifiers.functions.supportVector.StringKernel",
363:       "weka.attributeSelection.OneRAttributeEval",
364:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
365:       "weka.classifiers.meta.ClassificationViaRegression",
366:       "weka.classifiers.trees.M5P",
367:       "weka.classifiers.functions.GaussianProcesses",
368:       "weka.classifiers.functions.VotedPerceptron",
369:       "weka.classifiers.rules.JRip",
370:       "weka.classifiers.meta.FilteredClassifier",
371:       "weka.filters.supervised.attribute.AttributeSelection",
372:       "weka.attributeSelection.AttributeSelection",
373:       "weka.attributeSelection.GreedyStepwise",
374:       "weka.classifiers.meta.MultiScheme",
375:       "weka.classifiers.rules.OneR",
376:       "weka.classifiers.functions.supportVector.RBFKernel",
377:       "weka.attributeSelection.ReliefFAttributeEval",
378:       "weka.classifiers.lazy.KStar",
379:       "weka.core.matrix.Matrix",
380:       "weka.classifiers.meta.LogitBoost",
381:       "weka.classifiers.functions.SMO",
382:       "weka.attributeSelection.WrapperSubsetEval",
383:       "weka.attributeSelection.GainRatioAttributeEval",
384:       "weka.core.AttributeStats",
385:       "weka.estimators.KernelEstimator",
386:       "weka.classifiers.rules.DecisionTable",
387:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
388:       "weka.classifiers.bayes.NaiveBayesUpdateable",
389:       "weka.classifiers.functions.supportVector.Puk",
390:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
391:       "weka.core.Statistics",
392:       "weka.classifiers.functions.MultilayerPerceptron",
393:       "weka.filters.unsupervised.attribute.NominalToBinary",
394:       "weka.classifiers.functions.neural.SigmoidUnit",
395:       "weka.classifiers.functions.neural.LinearUnit",
396:       "weka.core.converters.ConverterUtils$DataSource",
397:       "weka.core.converters.AbstractLoader",
398:       "weka.core.converters.AbstractFileLoader",
399:       "weka.core.converters.ArffLoader",
400:       "weka.gui.GenericPropertiesCreator",
401:       "weka.gui.GenericObjectEditor",
402:       "weka.core.converters.ConverterUtils",
403:       "weka.estimators.MahalanobisEstimator",
404:       "weka.experiment.Stats",
405:       "weka.core.ManhattanDistance",
406:       "weka.core.Javadoc",
407:       "weka.core.OptionHandlerJavadoc"
408:     );
409:   }
410: }

[MASTER] 10:21:04.559 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
linkedHashMap0.values();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
naiveBayesMultinomialText0.setPeriodicPruning(1879048192);
naiveBayesMultinomialText0.pruneDictionary();
int int0 = naiveBayesMultinomialText0.getPeriodicPruning();
assertEquals(1879048192, int0);


[MASTER] 10:21:05.572 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_48_1573726865535/weka/classifiers/bayes/NaiveBayesMultinomialText_48_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_48_1573726865535/weka/classifiers/bayes/NaiveBayesMultinomialText_48_tmp__ESTest_scaffolding.java]]
[MASTER] 10:21:05.572 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 10:21:05.572 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 10:21:05.573 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 10:21:05.573 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 10:21:05.573 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 10:21:05.573 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_48_1573726865535/weka/classifiers/bayes/NaiveBayesMultinomialText_48_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Nov 14 10:21:05 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_48_tmp__ESTest extends NaiveBayesMultinomialText_48_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=1.1217186091313738
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
28:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
29:       naiveBayesMultinomialText0.setPeriodicPruning(10000);
30:       naiveBayesMultinomialText0.pruneDictionary();
31:       assertEquals(10000, naiveBayesMultinomialText0.getPeriodicPruning());
32:   }
33: }
RegularFileObject[/tmp/EvoSuite_48_1573726865535/weka/classifiers/bayes/NaiveBayesMultinomialText_48_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Nov 14 10:21:05 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_48_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_48_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.classifiers.bayes.net.search.local.K2",
95:       "weka.filters.UnsupervisedFilter",
96:       "weka.core.logging.Logger$Level",
97:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
98:       "weka.core.DenseInstance",
99:       "weka.core.stemmers.Stemmer",
100:       "org.pentaho.packageManagement.DefaultPackageManager",
101:       "org.bounce.net.DefaultAuthenticator",
102:       "weka.filters.SimpleFilter",
103:       "weka.filters.SimpleStreamFilter",
104:       "weka.estimators.IncrementalEstimator",
105:       "weka.estimators.Estimator$Builder",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.core.RelationalLocator",
108:       "weka.core.Utils",
109:       "weka.core.CustomDisplayStringProvider",
110:       "weka.core.tokenizers.Tokenizer",
111:       "weka.core.NormalizableDistance",
112:       "weka.core.NoSupportForMissingValuesException",
113:       "weka.classifiers.UpdateableClassifier",
114:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
115:       "weka.core.MultiInstanceCapabilitiesHandler",
116:       "weka.core.Copyable",
117:       "weka.core.Capabilities",
118:       "weka.core.BinarySparseInstance",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
120:       "weka.core.AttributeLocator",
121:       "weka.core.SerializedObject",
122:       "weka.clusterers.UpdateableClusterer",
123:       "weka.core.Summarizable",
124:       "weka.core.AdditionalMeasureProducer",
125:       "weka.core.neighboursearch.balltrees.BallNode",
126:       "org.pentaho.packageManagement.PackageManager$1",
127:       "weka.core.Drawable",
128:       "weka.core.CapabilitiesHandler",
129:       "weka.core.AbstractInstance",
130:       "weka.core.scripting.JythonObject",
131:       "weka.core.SelectedTag",
132:       "org.pentaho.packageManagement.DefaultPackage",
133:       "weka.classifiers.bayes.BayesNet",
134:       "weka.core.Version",
135:       "weka.filters.AllFilter",
136:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
137:       "weka.core.Tag",
138:       "weka.classifiers.AbstractClassifier",
139:       "weka.core.OptionHandler",
140:       "weka.core.WekaException",
141:       "weka.filters.StreamableFilter",
142:       "weka.core.Range",
143:       "weka.core.scripting.JythonSerializableObject",
144:       "weka.classifiers.Classifier",
145:       "weka.core.Capabilities$Capability",
146:       "weka.core.SparseInstance",
147:       "org.pentaho.packageManagement.PackageManager",
148:       "weka.estimators.PoissonEstimator",
149:       "weka.core.tokenizers.WordTokenizer",
150:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
151:       "weka.core.stemmers.SnowballStemmer",
152:       "weka.classifiers.Evaluation",
153:       "weka.core.WekaPackageManager",
154:       "weka.filters.SupervisedFilter",
155:       "weka.core.TechnicalInformationHandler",
156:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
157:       "weka.core.neighboursearch.LinearNNSearch",
158:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
159:       "weka.core.Option",
160:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
161:       "weka.filters.Sourcable",
162:       "weka.core.Attribute",
163:       "weka.core.Stopwords",
164:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
165:       "weka.core.UnassignedDatasetException",
166:       "weka.core.tokenizers.NGramTokenizer",
167:       "weka.core.RevisionUtils",
168:       "weka.core.Instance",
169:       "weka.estimators.Estimator",
170:       "weka.core.ProtectedProperties",
171:       "weka.core.StringLocator",
172:       "weka.classifiers.bayes.net.ADNode",
173:       "weka.core.AttributeStats",
174:       "weka.filters.MultiFilter",
175:       "weka.core.WeightedInstancesHandler",
176:       "weka.core.neighboursearch.NearestNeighbourSearch",
177:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
178:       "weka.core.EuclideanDistance",
179:       "weka.core.Instances",
180:       "weka.core.UnassignedClassException",
181:       "weka.classifiers.bayes.net.BIFReader",
182:       "weka.classifiers.bayes.net.ParentSet",
183:       "weka.core.UnsupportedAttributeTypeException",
184:       "weka.core.TechnicalInformation",
185:       "weka.classifiers.Sourcable",
186:       "weka.core.RevisionHandler",
187:       "weka.classifiers.evaluation.output.prediction.PlainText",
188:       "weka.core.xml.XMLSerialization",
189:       "weka.classifiers.xml.XMLClassifier",
190:       "weka.classifiers.lazy.IBk",
191:       "weka.filters.Filter",
192:       "weka.filters.supervised.attribute.Discretize"
193:     );
194:   } 
195: 
196:   private static void resetClasses() {
197:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_48_tmp__ESTest_scaffolding.class.getClassLoader()); 
198: 
199:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
200:       "weka.classifiers.AbstractClassifier",
201:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
202:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
203:       "weka.core.Capabilities$Capability",
204:       "weka.core.tokenizers.Tokenizer",
205:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
206:       "weka.core.tokenizers.WordTokenizer",
207:       "weka.core.stemmers.NullStemmer",
208:       "weka.classifiers.Evaluation",
209:       "weka.core.Utils",
210:       "weka.core.Option",
211:       "weka.core.stemmers.LovinsStemmer",
212:       "weka.core.stemmers.IteratedLovinsStemmer",
213:       "weka.core.SerializedObject",
214:       "weka.core.TechnicalInformation",
215:       "weka.core.TechnicalInformation$Type",
216:       "weka.core.TechnicalInformation$Field",
217:       "weka.core.RevisionUtils",
218:       "weka.core.Capabilities",
219:       "org.pentaho.packageManagement.PackageManager",
220:       "org.pentaho.packageManagement.DefaultPackageManager",
221:       "weka.core.Version",
222:       "weka.core.Environment",
223:       "weka.core.WekaPackageManager",
224:       "weka.attributeSelection.ASEvaluation",
225:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
226:       "weka.attributeSelection.PrincipalComponents",
227:       "weka.classifiers.misc.SerializedClassifier",
228:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
229:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
230:       "weka.core.Tag",
231:       "weka.classifiers.lazy.IBk",
232:       "weka.core.neighboursearch.NearestNeighbourSearch",
233:       "weka.core.neighboursearch.LinearNNSearch",
234:       "weka.core.NormalizableDistance",
235:       "weka.core.EuclideanDistance",
236:       "weka.core.Range",
237:       "weka.classifiers.CostMatrix",
238:       "weka.core.TestInstances",
239:       "weka.core.stemmers.SnowballStemmer",
240:       "weka.core.stemmers.Stemming",
241:       "weka.core.neighboursearch.CoverTree",
242:       "weka.core.AbstractInstance",
243:       "weka.core.SparseInstance",
244:       "weka.core.BinarySparseInstance",
245:       "weka.core.Instances",
246:       "weka.core.UnassignedDatasetException",
247:       "weka.core.Attribute",
248:       "weka.core.ProtectedProperties",
249:       "weka.core.neighboursearch.balltrees.BallNode",
250:       "weka.core.DenseInstance",
251:       "weka.attributeSelection.CorrelationAttributeEval",
252:       "weka.core.tokenizers.NGramTokenizer",
253:       "weka.classifiers.bayes.NaiveBayesMultinomial",
254:       "weka.core.tokenizers.AlphabeticTokenizer",
255:       "weka.classifiers.functions.supportVector.Kernel",
256:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
257:       "weka.classifiers.bayes.BayesNet",
258:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
259:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
260:       "weka.classifiers.bayes.net.search.local.K2",
261:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
262:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
263:       "weka.classifiers.SingleClassifierEnhancer",
264:       "weka.classifiers.misc.InputMappedClassifier",
265:       "weka.classifiers.rules.ZeroR",
266:       "weka.classifiers.RandomizableClassifier",
267:       "weka.classifiers.functions.SGDText",
268:       "weka.filters.Filter",
269:       "weka.filters.supervised.attribute.Discretize",
270:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
271:       "weka.classifiers.meta.MultiClassClassifier",
272:       "weka.classifiers.functions.Logistic",
273:       "weka.core.converters.ArffLoader$ArffReader",
274:       "weka.core.Stopwords",
275:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
276:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
277:       "weka.core.FindWithCapabilities",
278:       "weka.core.SingleIndex",
279:       "weka.classifiers.functions.SGD",
280:       "weka.classifiers.functions.supportVector.CachedKernel",
281:       "weka.classifiers.functions.supportVector.PolyKernel",
282:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
283:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
284:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
285:       "weka.classifiers.meta.CostSensitiveClassifier",
286:       "weka.core.neighboursearch.BallTree",
287:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
288:       "weka.core.neighboursearch.balltrees.BallSplitter",
289:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
290:       "weka.core.Check",
291:       "weka.core.CheckOptionHandler",
292:       "weka.classifiers.IteratedSingleClassifierEnhancer",
293:       "weka.classifiers.meta.AdditiveRegression",
294:       "weka.classifiers.meta.RegressionByDiscretization",
295:       "weka.filters.unsupervised.attribute.Discretize",
296:       "weka.classifiers.trees.J48",
297:       "weka.classifiers.trees.j48.ClassifierTree",
298:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
299:       "weka.core.WekaException",
300:       "weka.core.UnsupportedAttributeTypeException",
301:       "weka.attributeSelection.InfoGainAttributeEval",
302:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
303:       "weka.classifiers.trees.RandomForest",
304:       "weka.classifiers.trees.RandomTree",
305:       "weka.core.ClassDiscovery",
306:       "weka.classifiers.rules.PART",
307:       "weka.classifiers.rules.part.MakeDecList",
308:       "weka.classifiers.bayes.NaiveBayes",
309:       "weka.core.WekaEnumeration",
310:       "weka.core.Attribute$1",
311:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
312:       "weka.classifiers.meta.AdaBoostM1",
313:       "weka.classifiers.trees.DecisionStump",
314:       "weka.filters.SimpleFilter",
315:       "weka.filters.SimpleStreamFilter",
316:       "weka.filters.MultiFilter",
317:       "weka.filters.AllFilter",
318:       "weka.classifiers.trees.m5.M5Base",
319:       "weka.classifiers.rules.M5Rules",
320:       "weka.classifiers.functions.LinearRegression",
321:       "weka.estimators.Estimator",
322:       "weka.estimators.DiscreteEstimator",
323:       "weka.classifiers.trees.REPTree",
324:       "weka.core.neighboursearch.KDTree",
325:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
326:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
327:       "weka.classifiers.meta.CVParameterSelection",
328:       "weka.core.FastVector",
329:       "weka.classifiers.meta.AttributeSelectedClassifier",
330:       "weka.attributeSelection.CfsSubsetEval",
331:       "weka.attributeSelection.ASSearch",
332:       "weka.attributeSelection.BestFirst",
333:       "weka.classifiers.functions.SimpleLinearRegression",
334:       "weka.classifiers.bayes.net.BIFReader",
335:       "weka.estimators.NormalEstimator",
336:       "weka.classifiers.functions.SMOreg",
337:       "weka.classifiers.functions.supportVector.RegOptimizer",
338:       "weka.classifiers.functions.supportVector.RegSMO",
339:       "weka.classifiers.functions.supportVector.RegSMOImproved",
340:       "weka.classifiers.functions.SimpleLogistic",
341:       "weka.classifiers.MultipleClassifiersCombiner",
342:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
343:       "weka.classifiers.meta.Vote",
344:       "weka.core.SelectedTag",
345:       "weka.classifiers.trees.LMT",
346:       "weka.core.UnassignedClassException",
347:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
348:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
349:       "weka.classifiers.meta.Stacking",
350:       "weka.classifiers.lazy.LWL",
351:       "weka.estimators.PoissonEstimator",
352:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
353:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
354:       "weka.classifiers.meta.Bagging",
355:       "weka.core.Queue",
356:       "weka.core.AttributeLocator",
357:       "weka.core.StringLocator",
358:       "weka.core.RelationalLocator",
359:       "weka.core.ContingencyTables",
360:       "weka.core.Queue$QueueNode",
361:       "weka.classifiers.meta.RandomCommittee",
362:       "weka.classifiers.functions.supportVector.StringKernel",
363:       "weka.attributeSelection.OneRAttributeEval",
364:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
365:       "weka.classifiers.meta.ClassificationViaRegression",
366:       "weka.classifiers.trees.M5P",
367:       "weka.classifiers.functions.GaussianProcesses",
368:       "weka.classifiers.functions.VotedPerceptron",
369:       "weka.classifiers.rules.JRip",
370:       "weka.classifiers.meta.FilteredClassifier",
371:       "weka.filters.supervised.attribute.AttributeSelection",
372:       "weka.attributeSelection.AttributeSelection",
373:       "weka.attributeSelection.GreedyStepwise",
374:       "weka.classifiers.meta.MultiScheme",
375:       "weka.classifiers.rules.OneR",
376:       "weka.classifiers.functions.supportVector.RBFKernel",
377:       "weka.attributeSelection.ReliefFAttributeEval",
378:       "weka.classifiers.lazy.KStar",
379:       "weka.core.matrix.Matrix",
380:       "weka.classifiers.meta.LogitBoost",
381:       "weka.classifiers.functions.SMO",
382:       "weka.attributeSelection.WrapperSubsetEval",
383:       "weka.attributeSelection.GainRatioAttributeEval",
384:       "weka.core.AttributeStats",
385:       "weka.estimators.KernelEstimator",
386:       "weka.classifiers.rules.DecisionTable",
387:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
388:       "weka.classifiers.bayes.NaiveBayesUpdateable",
389:       "weka.classifiers.functions.supportVector.Puk",
390:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
391:       "weka.core.Statistics",
392:       "weka.classifiers.functions.MultilayerPerceptron",
393:       "weka.filters.unsupervised.attribute.NominalToBinary",
394:       "weka.classifiers.functions.neural.SigmoidUnit",
395:       "weka.classifiers.functions.neural.LinearUnit",
396:       "weka.core.converters.ConverterUtils$DataSource",
397:       "weka.core.converters.AbstractLoader",
398:       "weka.core.converters.AbstractFileLoader",
399:       "weka.core.converters.ArffLoader",
400:       "weka.gui.GenericPropertiesCreator",
401:       "weka.gui.GenericObjectEditor",
402:       "weka.core.converters.ConverterUtils",
403:       "weka.estimators.MahalanobisEstimator",
404:       "weka.experiment.Stats",
405:       "weka.core.ManhattanDistance",
406:       "weka.core.Javadoc",
407:       "weka.core.OptionHandlerJavadoc"
408:     );
409:   }
410: }

[MASTER] 10:21:05.574 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
naiveBayesMultinomialText0.setPeriodicPruning(10000);
naiveBayesMultinomialText0.pruneDictionary();
assertEquals(10000, naiveBayesMultinomialText0.getPeriodicPruning());


[MASTER] 10:21:05.673 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_51_1573726865648/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_51_1573726865648/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding.java]]
[MASTER] 10:21:05.673 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 10:21:05.673 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 10:21:05.673 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 25
[MASTER] 10:21:05.673 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 25
[MASTER] 10:21:05.673 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 10:21:05.673 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 10:21:05.674 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_51_1573726865648/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Nov 14 10:21:05 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: 
16: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
17: public class NaiveBayesMultinomialText_51_tmp__ESTest extends NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding {
18: 
19:   /**
20:   //Test case number: 0
21:   /*Coverage entropy=1.830738805564335
22:   */
23:   @Test(timeout = 4000)
24:   public void test0()  throws Throwable  {
25:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
26:       Integer.getInteger("-S <num>", 6);
27:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
28:       Integer integer0 = new Integer((-1249));
29:       linkedHashMap0.put(integer0, linkedHashMap1);
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       naiveBayesMultinomialText0.setPeriodicPruning((-1273));
32:       naiveBayesMultinomialText0.pruneDictionary();
33:       int int0 = naiveBayesMultinomialText0.getPeriodicPruning();
34:       assertEquals((-1273), int0);
35:   }
36: }
RegularFileObject[/tmp/EvoSuite_51_1573726865648/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Nov 14 10:21:05 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.classifiers.bayes.net.search.local.K2",
95:       "weka.filters.UnsupervisedFilter",
96:       "weka.core.logging.Logger$Level",
97:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
98:       "weka.core.DenseInstance",
99:       "weka.core.stemmers.Stemmer",
100:       "org.pentaho.packageManagement.DefaultPackageManager",
101:       "org.bounce.net.DefaultAuthenticator",
102:       "weka.filters.SimpleFilter",
103:       "weka.filters.SimpleStreamFilter",
104:       "weka.estimators.IncrementalEstimator",
105:       "weka.estimators.Estimator$Builder",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.core.RelationalLocator",
108:       "weka.core.Utils",
109:       "weka.core.CustomDisplayStringProvider",
110:       "weka.core.tokenizers.Tokenizer",
111:       "weka.core.NormalizableDistance",
112:       "weka.core.NoSupportForMissingValuesException",
113:       "weka.classifiers.UpdateableClassifier",
114:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
115:       "weka.core.MultiInstanceCapabilitiesHandler",
116:       "weka.core.Copyable",
117:       "weka.core.Capabilities",
118:       "weka.core.BinarySparseInstance",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
120:       "weka.core.AttributeLocator",
121:       "weka.core.SerializedObject",
122:       "weka.clusterers.UpdateableClusterer",
123:       "weka.core.Summarizable",
124:       "weka.core.AdditionalMeasureProducer",
125:       "weka.core.neighboursearch.balltrees.BallNode",
126:       "org.pentaho.packageManagement.PackageManager$1",
127:       "weka.core.Drawable",
128:       "weka.core.CapabilitiesHandler",
129:       "weka.core.AbstractInstance",
130:       "weka.core.scripting.JythonObject",
131:       "weka.core.SelectedTag",
132:       "org.pentaho.packageManagement.DefaultPackage",
133:       "weka.classifiers.bayes.BayesNet",
134:       "weka.core.Version",
135:       "weka.filters.AllFilter",
136:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
137:       "weka.core.Tag",
138:       "weka.classifiers.AbstractClassifier",
139:       "weka.core.OptionHandler",
140:       "weka.core.WekaException",
141:       "weka.filters.StreamableFilter",
142:       "weka.core.Range",
143:       "weka.core.scripting.JythonSerializableObject",
144:       "weka.classifiers.Classifier",
145:       "weka.core.Capabilities$Capability",
146:       "weka.core.SparseInstance",
147:       "org.pentaho.packageManagement.PackageManager",
148:       "weka.estimators.PoissonEstimator",
149:       "weka.core.tokenizers.WordTokenizer",
150:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
151:       "weka.core.stemmers.SnowballStemmer",
152:       "weka.classifiers.Evaluation",
153:       "weka.core.WekaPackageManager",
154:       "weka.filters.SupervisedFilter",
155:       "weka.core.TechnicalInformationHandler",
156:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
157:       "weka.core.neighboursearch.LinearNNSearch",
158:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
159:       "weka.core.Option",
160:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
161:       "weka.filters.Sourcable",
162:       "weka.core.Attribute",
163:       "weka.core.Stopwords",
164:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
165:       "weka.core.UnassignedDatasetException",
166:       "weka.core.tokenizers.NGramTokenizer",
167:       "weka.core.RevisionUtils",
168:       "weka.core.Instance",
169:       "weka.estimators.Estimator",
170:       "weka.core.ProtectedProperties",
171:       "weka.core.StringLocator",
172:       "weka.classifiers.bayes.net.ADNode",
173:       "weka.core.AttributeStats",
174:       "weka.filters.MultiFilter",
175:       "weka.core.WeightedInstancesHandler",
176:       "weka.core.neighboursearch.NearestNeighbourSearch",
177:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
178:       "weka.core.EuclideanDistance",
179:       "weka.core.Instances",
180:       "weka.core.UnassignedClassException",
181:       "weka.classifiers.bayes.net.BIFReader",
182:       "weka.classifiers.bayes.net.ParentSet",
183:       "weka.core.UnsupportedAttributeTypeException",
184:       "weka.core.TechnicalInformation",
185:       "weka.classifiers.Sourcable",
186:       "weka.core.RevisionHandler",
187:       "weka.classifiers.evaluation.output.prediction.PlainText",
188:       "weka.core.xml.XMLSerialization",
189:       "weka.classifiers.xml.XMLClassifier",
190:       "weka.classifiers.lazy.IBk",
191:       "weka.filters.Filter",
192:       "weka.filters.supervised.attribute.Discretize"
193:     );
194:   } 
195: 
196:   private static void resetClasses() {
197:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding.class.getClassLoader()); 
198: 
199:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
200:       "weka.classifiers.AbstractClassifier",
201:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
202:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
203:       "weka.core.Capabilities$Capability",
204:       "weka.core.tokenizers.Tokenizer",
205:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
206:       "weka.core.tokenizers.WordTokenizer",
207:       "weka.core.stemmers.NullStemmer",
208:       "weka.classifiers.Evaluation",
209:       "weka.core.Utils",
210:       "weka.core.Option",
211:       "weka.core.stemmers.LovinsStemmer",
212:       "weka.core.stemmers.IteratedLovinsStemmer",
213:       "weka.core.SerializedObject",
214:       "weka.core.TechnicalInformation",
215:       "weka.core.TechnicalInformation$Type",
216:       "weka.core.TechnicalInformation$Field",
217:       "weka.core.RevisionUtils",
218:       "weka.core.Capabilities",
219:       "org.pentaho.packageManagement.PackageManager",
220:       "org.pentaho.packageManagement.DefaultPackageManager",
221:       "weka.core.Version",
222:       "weka.core.Environment",
223:       "weka.core.WekaPackageManager",
224:       "weka.attributeSelection.ASEvaluation",
225:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
226:       "weka.attributeSelection.PrincipalComponents",
227:       "weka.classifiers.misc.SerializedClassifier",
228:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
229:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
230:       "weka.core.Tag",
231:       "weka.classifiers.lazy.IBk",
232:       "weka.core.neighboursearch.NearestNeighbourSearch",
233:       "weka.core.neighboursearch.LinearNNSearch",
234:       "weka.core.NormalizableDistance",
235:       "weka.core.EuclideanDistance",
236:       "weka.core.Range",
237:       "weka.classifiers.CostMatrix",
238:       "weka.core.TestInstances",
239:       "weka.core.stemmers.SnowballStemmer",
240:       "weka.core.stemmers.Stemming",
241:       "weka.core.neighboursearch.CoverTree",
242:       "weka.core.AbstractInstance",
243:       "weka.core.SparseInstance",
244:       "weka.core.BinarySparseInstance",
245:       "weka.core.Instances",
246:       "weka.core.UnassignedDatasetException",
247:       "weka.core.Attribute",
248:       "weka.core.ProtectedProperties",
249:       "weka.core.neighboursearch.balltrees.BallNode",
250:       "weka.core.DenseInstance",
251:       "weka.attributeSelection.CorrelationAttributeEval",
252:       "weka.core.tokenizers.NGramTokenizer",
253:       "weka.classifiers.bayes.NaiveBayesMultinomial",
254:       "weka.core.tokenizers.AlphabeticTokenizer",
255:       "weka.classifiers.functions.supportVector.Kernel",
256:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
257:       "weka.classifiers.bayes.BayesNet",
258:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
259:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
260:       "weka.classifiers.bayes.net.search.local.K2",
261:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
262:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
263:       "weka.classifiers.SingleClassifierEnhancer",
264:       "weka.classifiers.misc.InputMappedClassifier",
265:       "weka.classifiers.rules.ZeroR",
266:       "weka.classifiers.RandomizableClassifier",
267:       "weka.classifiers.functions.SGDText",
268:       "weka.filters.Filter",
269:       "weka.filters.supervised.attribute.Discretize",
270:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
271:       "weka.classifiers.meta.MultiClassClassifier",
272:       "weka.classifiers.functions.Logistic",
273:       "weka.core.converters.ArffLoader$ArffReader",
274:       "weka.core.Stopwords",
275:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
276:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
277:       "weka.core.FindWithCapabilities",
278:       "weka.core.SingleIndex",
279:       "weka.classifiers.functions.SGD",
280:       "weka.classifiers.functions.supportVector.CachedKernel",
281:       "weka.classifiers.functions.supportVector.PolyKernel",
282:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
283:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
284:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
285:       "weka.classifiers.meta.CostSensitiveClassifier",
286:       "weka.core.neighboursearch.BallTree",
287:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
288:       "weka.core.neighboursearch.balltrees.BallSplitter",
289:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
290:       "weka.core.Check",
291:       "weka.core.CheckOptionHandler",
292:       "weka.classifiers.IteratedSingleClassifierEnhancer",
293:       "weka.classifiers.meta.AdditiveRegression",
294:       "weka.classifiers.meta.RegressionByDiscretization",
295:       "weka.filters.unsupervised.attribute.Discretize",
296:       "weka.classifiers.trees.J48",
297:       "weka.classifiers.trees.j48.ClassifierTree",
298:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
299:       "weka.core.WekaException",
300:       "weka.core.UnsupportedAttributeTypeException",
301:       "weka.attributeSelection.InfoGainAttributeEval",
302:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
303:       "weka.classifiers.trees.RandomForest",
304:       "weka.classifiers.trees.RandomTree",
305:       "weka.core.ClassDiscovery",
306:       "weka.classifiers.rules.PART",
307:       "weka.classifiers.rules.part.MakeDecList",
308:       "weka.classifiers.bayes.NaiveBayes",
309:       "weka.core.WekaEnumeration",
310:       "weka.core.Attribute$1",
311:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
312:       "weka.classifiers.meta.AdaBoostM1",
313:       "weka.classifiers.trees.DecisionStump",
314:       "weka.filters.SimpleFilter",
315:       "weka.filters.SimpleStreamFilter",
316:       "weka.filters.MultiFilter",
317:       "weka.filters.AllFilter",
318:       "weka.classifiers.trees.m5.M5Base",
319:       "weka.classifiers.rules.M5Rules",
320:       "weka.classifiers.functions.LinearRegression",
321:       "weka.estimators.Estimator",
322:       "weka.estimators.DiscreteEstimator",
323:       "weka.classifiers.trees.REPTree",
324:       "weka.core.neighboursearch.KDTree",
325:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
326:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
327:       "weka.classifiers.meta.CVParameterSelection",
328:       "weka.core.FastVector",
329:       "weka.classifiers.meta.AttributeSelectedClassifier",
330:       "weka.attributeSelection.CfsSubsetEval",
331:       "weka.attributeSelection.ASSearch",
332:       "weka.attributeSelection.BestFirst",
333:       "weka.classifiers.functions.SimpleLinearRegression",
334:       "weka.classifiers.bayes.net.BIFReader",
335:       "weka.estimators.NormalEstimator",
336:       "weka.classifiers.functions.SMOreg",
337:       "weka.classifiers.functions.supportVector.RegOptimizer",
338:       "weka.classifiers.functions.supportVector.RegSMO",
339:       "weka.classifiers.functions.supportVector.RegSMOImproved",
340:       "weka.classifiers.functions.SimpleLogistic",
341:       "weka.classifiers.MultipleClassifiersCombiner",
342:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
343:       "weka.classifiers.meta.Vote",
344:       "weka.core.SelectedTag",
345:       "weka.classifiers.trees.LMT",
346:       "weka.core.UnassignedClassException",
347:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
348:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
349:       "weka.classifiers.meta.Stacking",
350:       "weka.classifiers.lazy.LWL",
351:       "weka.estimators.PoissonEstimator",
352:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
353:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
354:       "weka.classifiers.meta.Bagging",
355:       "weka.core.Queue",
356:       "weka.core.AttributeLocator",
357:       "weka.core.StringLocator",
358:       "weka.core.RelationalLocator",
359:       "weka.core.ContingencyTables",
360:       "weka.core.Queue$QueueNode",
361:       "weka.classifiers.meta.RandomCommittee",
362:       "weka.classifiers.functions.supportVector.StringKernel",
363:       "weka.attributeSelection.OneRAttributeEval",
364:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
365:       "weka.classifiers.meta.ClassificationViaRegression",
366:       "weka.classifiers.trees.M5P",
367:       "weka.classifiers.functions.GaussianProcesses",
368:       "weka.classifiers.functions.VotedPerceptron",
369:       "weka.classifiers.rules.JRip",
370:       "weka.classifiers.meta.FilteredClassifier",
371:       "weka.filters.supervised.attribute.AttributeSelection",
372:       "weka.attributeSelection.AttributeSelection",
373:       "weka.attributeSelection.GreedyStepwise",
374:       "weka.classifiers.meta.MultiScheme",
375:       "weka.classifiers.rules.OneR",
376:       "weka.classifiers.functions.supportVector.RBFKernel",
377:       "weka.attributeSelection.ReliefFAttributeEval",
378:       "weka.classifiers.lazy.KStar",
379:       "weka.core.matrix.Matrix",
380:       "weka.classifiers.meta.LogitBoost",
381:       "weka.classifiers.functions.SMO",
382:       "weka.attributeSelection.WrapperSubsetEval",
383:       "weka.attributeSelection.GainRatioAttributeEval",
384:       "weka.core.AttributeStats",
385:       "weka.estimators.KernelEstimator",
386:       "weka.classifiers.rules.DecisionTable",
387:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
388:       "weka.classifiers.bayes.NaiveBayesUpdateable",
389:       "weka.classifiers.functions.supportVector.Puk",
390:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
391:       "weka.core.Statistics",
392:       "weka.classifiers.functions.MultilayerPerceptron",
393:       "weka.filters.unsupervised.attribute.NominalToBinary",
394:       "weka.classifiers.functions.neural.SigmoidUnit",
395:       "weka.classifiers.functions.neural.LinearUnit",
396:       "weka.core.converters.ConverterUtils$DataSource",
397:       "weka.core.converters.AbstractLoader",
398:       "weka.core.converters.AbstractFileLoader",
399:       "weka.core.converters.ArffLoader",
400:       "weka.gui.GenericPropertiesCreator",
401:       "weka.gui.GenericObjectEditor",
402:       "weka.core.converters.ConverterUtils",
403:       "weka.estimators.MahalanobisEstimator",
404:       "weka.experiment.Stats",
405:       "weka.core.ManhattanDistance",
406:       "weka.core.Javadoc",
407:       "weka.core.OptionHandlerJavadoc"
408:     );
409:   }
410: }

[MASTER] 10:21:05.674 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer.getInteger("-S <num>", 6);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
Integer integer0 = new Integer((-1249));
linkedHashMap0.put(integer0, linkedHashMap1);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setPeriodicPruning((-1273));
naiveBayesMultinomialText0.pruneDictionary();
int int0 = naiveBayesMultinomialText0.getPeriodicPruning();
assertEquals((-1273), int0);


[MASTER] 10:21:07.153 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_82_1573726867122/weka/classifiers/bayes/NaiveBayesMultinomialText_82_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_82_1573726867122/weka/classifiers/bayes/NaiveBayesMultinomialText_82_tmp__ESTest_scaffolding.java]]
[MASTER] 10:21:07.153 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 10:21:07.153 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 10:21:07.153 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 10:21:07.154 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 10:21:07.154 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_82_1573726867122/weka/classifiers/bayes/NaiveBayesMultinomialText_82_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Nov 14 10:21:07 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.testdata.EvoSuiteFile;
14: import org.evosuite.runtime.testdata.FileSystemHandling;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_82_tmp__ESTest extends NaiveBayesMultinomialText_82_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=2.7204225901862604
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
29:       naiveBayesMultinomialText0.m_stemmer = null;
30:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
31:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
32:       naiveBayesMultinomialText0.getStemmer();
33:       String string0 = naiveBayesMultinomialText0.globalInfo();
34:       assertEquals("Multinomial naive bayes for text data. Operates directly (and only) on String attributes. Other types of input attributes are accepted but ignored during training and classification", string0);
35:       
36:       String[] stringArray0 = new String[3];
37:       stringArray0[0] = "";
38:       stringArray0[1] = "Multinomial naive bayes for text data. Operates directly (and only) on String attributes. Other types of input attributes are accepted but ignored during training and classification";
39:       stringArray0[2] = "";
40:       naiveBayesMultinomialText0.setOptions(stringArray0);
41:       String string1 = naiveBayesMultinomialText0.normTipText();
42:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
43:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
44:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
45:       assertEquals("The norm of the instances after normalization.", string1);
46:       assertFalse(naiveBayesMultinomialText0.getLowercaseTokens());
47:       assertFalse(naiveBayesMultinomialText0.getUseStopList());
48:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
49:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
50:   }
51: }
RegularFileObject[/tmp/EvoSuite_82_1573726867122/weka/classifiers/bayes/NaiveBayesMultinomialText_82_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Nov 14 10:21:07 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_82_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_82_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.classifiers.bayes.net.search.local.K2",
95:       "weka.filters.UnsupervisedFilter",
96:       "weka.core.logging.Logger$Level",
97:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
98:       "weka.core.DenseInstance",
99:       "weka.core.stemmers.Stemmer",
100:       "org.pentaho.packageManagement.DefaultPackageManager",
101:       "org.bounce.net.DefaultAuthenticator",
102:       "weka.filters.SimpleFilter",
103:       "weka.filters.SimpleStreamFilter",
104:       "weka.estimators.IncrementalEstimator",
105:       "weka.estimators.Estimator$Builder",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.core.RelationalLocator",
108:       "weka.core.Utils",
109:       "weka.core.CustomDisplayStringProvider",
110:       "weka.core.tokenizers.Tokenizer",
111:       "weka.core.NormalizableDistance",
112:       "weka.core.NoSupportForMissingValuesException",
113:       "weka.classifiers.UpdateableClassifier",
114:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
115:       "weka.core.MultiInstanceCapabilitiesHandler",
116:       "weka.core.Copyable",
117:       "weka.core.Capabilities",
118:       "weka.core.BinarySparseInstance",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
120:       "weka.core.AttributeLocator",
121:       "weka.core.SerializedObject",
122:       "weka.clusterers.UpdateableClusterer",
123:       "weka.core.Summarizable",
124:       "weka.core.AdditionalMeasureProducer",
125:       "weka.core.neighboursearch.balltrees.BallNode",
126:       "org.pentaho.packageManagement.PackageManager$1",
127:       "weka.core.Drawable",
128:       "weka.core.CapabilitiesHandler",
129:       "weka.core.AbstractInstance",
130:       "weka.core.scripting.JythonObject",
131:       "weka.core.SelectedTag",
132:       "org.pentaho.packageManagement.DefaultPackage",
133:       "weka.classifiers.bayes.BayesNet",
134:       "weka.core.Version",
135:       "weka.filters.AllFilter",
136:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
137:       "weka.core.Tag",
138:       "weka.classifiers.AbstractClassifier",
139:       "weka.core.OptionHandler",
140:       "weka.core.WekaException",
141:       "weka.filters.StreamableFilter",
142:       "weka.core.Range",
143:       "weka.core.scripting.JythonSerializableObject",
144:       "weka.classifiers.Classifier",
145:       "weka.core.Capabilities$Capability",
146:       "weka.core.SparseInstance",
147:       "org.pentaho.packageManagement.PackageManager",
148:       "weka.estimators.PoissonEstimator",
149:       "weka.core.tokenizers.WordTokenizer",
150:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
151:       "weka.core.stemmers.SnowballStemmer",
152:       "weka.classifiers.Evaluation",
153:       "weka.core.WekaPackageManager",
154:       "weka.filters.SupervisedFilter",
155:       "weka.core.TechnicalInformationHandler",
156:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
157:       "weka.core.neighboursearch.LinearNNSearch",
158:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
159:       "weka.core.Option",
160:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
161:       "weka.filters.Sourcable",
162:       "weka.core.Attribute",
163:       "weka.core.Stopwords",
164:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
165:       "weka.core.UnassignedDatasetException",
166:       "weka.core.tokenizers.NGramTokenizer",
167:       "weka.core.RevisionUtils",
168:       "weka.core.Instance",
169:       "weka.estimators.Estimator",
170:       "weka.core.ProtectedProperties",
171:       "weka.core.StringLocator",
172:       "weka.classifiers.bayes.net.ADNode",
173:       "weka.core.AttributeStats",
174:       "weka.filters.MultiFilter",
175:       "weka.core.WeightedInstancesHandler",
176:       "weka.core.neighboursearch.NearestNeighbourSearch",
177:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
178:       "weka.core.EuclideanDistance",
179:       "weka.core.Instances",
180:       "weka.core.UnassignedClassException",
181:       "weka.classifiers.bayes.net.BIFReader",
182:       "weka.classifiers.bayes.net.ParentSet",
183:       "weka.core.UnsupportedAttributeTypeException",
184:       "weka.core.TechnicalInformation",
185:       "weka.classifiers.Sourcable",
186:       "weka.core.RevisionHandler",
187:       "weka.classifiers.evaluation.output.prediction.PlainText",
188:       "weka.core.xml.XMLSerialization",
189:       "weka.classifiers.xml.XMLClassifier",
190:       "weka.classifiers.lazy.IBk",
191:       "weka.filters.Filter",
192:       "weka.filters.supervised.attribute.Discretize"
193:     );
194:   } 
195: 
196:   private static void resetClasses() {
197:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_82_tmp__ESTest_scaffolding.class.getClassLoader()); 
198: 
199:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
200:       "weka.classifiers.AbstractClassifier",
201:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
202:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
203:       "weka.core.Capabilities$Capability",
204:       "weka.core.tokenizers.Tokenizer",
205:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
206:       "weka.core.tokenizers.WordTokenizer",
207:       "weka.core.stemmers.NullStemmer",
208:       "weka.classifiers.Evaluation",
209:       "weka.core.Utils",
210:       "weka.core.Option",
211:       "weka.core.stemmers.LovinsStemmer",
212:       "weka.core.stemmers.IteratedLovinsStemmer",
213:       "weka.core.SerializedObject",
214:       "weka.core.TechnicalInformation",
215:       "weka.core.TechnicalInformation$Type",
216:       "weka.core.TechnicalInformation$Field",
217:       "weka.core.RevisionUtils",
218:       "weka.core.Capabilities",
219:       "org.pentaho.packageManagement.PackageManager",
220:       "org.pentaho.packageManagement.DefaultPackageManager",
221:       "weka.core.Version",
222:       "weka.core.Environment",
223:       "weka.core.WekaPackageManager",
224:       "weka.attributeSelection.ASEvaluation",
225:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
226:       "weka.attributeSelection.PrincipalComponents",
227:       "weka.classifiers.misc.SerializedClassifier",
228:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
229:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
230:       "weka.core.Tag",
231:       "weka.classifiers.lazy.IBk",
232:       "weka.core.neighboursearch.NearestNeighbourSearch",
233:       "weka.core.neighboursearch.LinearNNSearch",
234:       "weka.core.NormalizableDistance",
235:       "weka.core.EuclideanDistance",
236:       "weka.core.Range",
237:       "weka.classifiers.CostMatrix",
238:       "weka.core.TestInstances",
239:       "weka.core.stemmers.SnowballStemmer",
240:       "weka.core.stemmers.Stemming",
241:       "weka.core.neighboursearch.CoverTree",
242:       "weka.core.AbstractInstance",
243:       "weka.core.SparseInstance",
244:       "weka.core.BinarySparseInstance",
245:       "weka.core.Instances",
246:       "weka.core.UnassignedDatasetException",
247:       "weka.core.Attribute",
248:       "weka.core.ProtectedProperties",
249:       "weka.core.neighboursearch.balltrees.BallNode",
250:       "weka.core.DenseInstance",
251:       "weka.attributeSelection.CorrelationAttributeEval",
252:       "weka.core.tokenizers.NGramTokenizer",
253:       "weka.classifiers.bayes.NaiveBayesMultinomial",
254:       "weka.core.tokenizers.AlphabeticTokenizer",
255:       "weka.classifiers.functions.supportVector.Kernel",
256:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
257:       "weka.classifiers.bayes.BayesNet",
258:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
259:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
260:       "weka.classifiers.bayes.net.search.local.K2",
261:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
262:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
263:       "weka.classifiers.SingleClassifierEnhancer",
264:       "weka.classifiers.misc.InputMappedClassifier",
265:       "weka.classifiers.rules.ZeroR",
266:       "weka.classifiers.RandomizableClassifier",
267:       "weka.classifiers.functions.SGDText",
268:       "weka.filters.Filter",
269:       "weka.filters.supervised.attribute.Discretize",
270:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
271:       "weka.classifiers.meta.MultiClassClassifier",
272:       "weka.classifiers.functions.Logistic",
273:       "weka.core.converters.ArffLoader$ArffReader",
274:       "weka.core.Stopwords",
275:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
276:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
277:       "weka.core.FindWithCapabilities",
278:       "weka.core.SingleIndex",
279:       "weka.classifiers.functions.SGD",
280:       "weka.classifiers.functions.supportVector.CachedKernel",
281:       "weka.classifiers.functions.supportVector.PolyKernel",
282:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
283:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
284:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
285:       "weka.classifiers.meta.CostSensitiveClassifier",
286:       "weka.core.neighboursearch.BallTree",
287:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
288:       "weka.core.neighboursearch.balltrees.BallSplitter",
289:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
290:       "weka.core.Check",
291:       "weka.core.CheckOptionHandler",
292:       "weka.classifiers.IteratedSingleClassifierEnhancer",
293:       "weka.classifiers.meta.AdditiveRegression",
294:       "weka.classifiers.meta.RegressionByDiscretization",
295:       "weka.filters.unsupervised.attribute.Discretize",
296:       "weka.classifiers.trees.J48",
297:       "weka.classifiers.trees.j48.ClassifierTree",
298:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
299:       "weka.core.WekaException",
300:       "weka.core.UnsupportedAttributeTypeException",
301:       "weka.attributeSelection.InfoGainAttributeEval",
302:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
303:       "weka.classifiers.trees.RandomForest",
304:       "weka.classifiers.trees.RandomTree",
305:       "weka.core.ClassDiscovery",
306:       "weka.classifiers.rules.PART",
307:       "weka.classifiers.rules.part.MakeDecList",
308:       "weka.classifiers.bayes.NaiveBayes",
309:       "weka.core.WekaEnumeration",
310:       "weka.core.Attribute$1",
311:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
312:       "weka.classifiers.meta.AdaBoostM1",
313:       "weka.classifiers.trees.DecisionStump",
314:       "weka.filters.SimpleFilter",
315:       "weka.filters.SimpleStreamFilter",
316:       "weka.filters.MultiFilter",
317:       "weka.filters.AllFilter",
318:       "weka.classifiers.trees.m5.M5Base",
319:       "weka.classifiers.rules.M5Rules",
320:       "weka.classifiers.functions.LinearRegression",
321:       "weka.estimators.Estimator",
322:       "weka.estimators.DiscreteEstimator",
323:       "weka.classifiers.trees.REPTree",
324:       "weka.core.neighboursearch.KDTree",
325:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
326:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
327:       "weka.classifiers.meta.CVParameterSelection",
328:       "weka.core.FastVector",
329:       "weka.classifiers.meta.AttributeSelectedClassifier",
330:       "weka.attributeSelection.CfsSubsetEval",
331:       "weka.attributeSelection.ASSearch",
332:       "weka.attributeSelection.BestFirst",
333:       "weka.classifiers.functions.SimpleLinearRegression",
334:       "weka.classifiers.bayes.net.BIFReader",
335:       "weka.estimators.NormalEstimator",
336:       "weka.classifiers.functions.SMOreg",
337:       "weka.classifiers.functions.supportVector.RegOptimizer",
338:       "weka.classifiers.functions.supportVector.RegSMO",
339:       "weka.classifiers.functions.supportVector.RegSMOImproved",
340:       "weka.classifiers.functions.SimpleLogistic",
341:       "weka.classifiers.MultipleClassifiersCombiner",
342:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
343:       "weka.classifiers.meta.Vote",
344:       "weka.core.SelectedTag",
345:       "weka.classifiers.trees.LMT",
346:       "weka.core.UnassignedClassException",
347:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
348:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
349:       "weka.classifiers.meta.Stacking",
350:       "weka.classifiers.lazy.LWL",
351:       "weka.estimators.PoissonEstimator",
352:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
353:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
354:       "weka.classifiers.meta.Bagging",
355:       "weka.core.Queue",
356:       "weka.core.AttributeLocator",
357:       "weka.core.StringLocator",
358:       "weka.core.RelationalLocator",
359:       "weka.core.ContingencyTables",
360:       "weka.core.Queue$QueueNode",
361:       "weka.classifiers.meta.RandomCommittee",
362:       "weka.classifiers.functions.supportVector.StringKernel",
363:       "weka.attributeSelection.OneRAttributeEval",
364:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
365:       "weka.classifiers.meta.ClassificationViaRegression",
366:       "weka.classifiers.trees.M5P",
367:       "weka.classifiers.functions.GaussianProcesses",
368:       "weka.classifiers.functions.VotedPerceptron",
369:       "weka.classifiers.rules.JRip",
370:       "weka.classifiers.meta.FilteredClassifier",
371:       "weka.filters.supervised.attribute.AttributeSelection",
372:       "weka.attributeSelection.AttributeSelection",
373:       "weka.attributeSelection.GreedyStepwise",
374:       "weka.classifiers.meta.MultiScheme",
375:       "weka.classifiers.rules.OneR",
376:       "weka.classifiers.functions.supportVector.RBFKernel",
377:       "weka.attributeSelection.ReliefFAttributeEval",
378:       "weka.classifiers.lazy.KStar",
379:       "weka.core.matrix.Matrix",
380:       "weka.classifiers.meta.LogitBoost",
381:       "weka.classifiers.functions.SMO",
382:       "weka.attributeSelection.WrapperSubsetEval",
383:       "weka.attributeSelection.GainRatioAttributeEval",
384:       "weka.core.AttributeStats",
385:       "weka.estimators.KernelEstimator",
386:       "weka.classifiers.rules.DecisionTable",
387:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
388:       "weka.classifiers.bayes.NaiveBayesUpdateable",
389:       "weka.classifiers.functions.supportVector.Puk",
390:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
391:       "weka.core.Statistics",
392:       "weka.classifiers.functions.MultilayerPerceptron",
393:       "weka.filters.unsupervised.attribute.NominalToBinary",
394:       "weka.classifiers.functions.neural.SigmoidUnit",
395:       "weka.classifiers.functions.neural.LinearUnit",
396:       "weka.core.converters.ConverterUtils$DataSource",
397:       "weka.core.converters.AbstractLoader",
398:       "weka.core.converters.AbstractFileLoader",
399:       "weka.core.converters.ArffLoader",
400:       "weka.gui.GenericPropertiesCreator",
401:       "weka.gui.GenericObjectEditor",
402:       "weka.core.converters.ConverterUtils",
403:       "weka.estimators.MahalanobisEstimator",
404:       "weka.experiment.Stats",
405:       "weka.core.ManhattanDistance",
406:       "weka.core.Javadoc",
407:       "weka.core.OptionHandlerJavadoc"
408:     );
409:   }
410: }

[MASTER] 10:21:07.155 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
naiveBayesMultinomialText0.m_stemmer = null;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.getStemmer();
String string0 = naiveBayesMultinomialText0.globalInfo();
assertEquals("Multinomial naive bayes for text data. Operates directly (and only) on String attributes. Other types of input attributes are accepted but ignored during training and classification", string0);

String[] stringArray0 = new String[3];
stringArray0[0] = "";
stringArray0[1] = "Multinomial naive bayes for text data. Operates directly (and only) on String attributes. Other types of input attributes are accepted but ignored during training and classification";
stringArray0[2] = "";
naiveBayesMultinomialText0.setOptions(stringArray0);
String string1 = naiveBayesMultinomialText0.normTipText();
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertEquals("The norm of the instances after normalization.", string1);
assertFalse(naiveBayesMultinomialText0.getLowercaseTokens());
assertFalse(naiveBayesMultinomialText0.getUseStopList());
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);


[MASTER] 10:21:10.108 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 10:21:10.314 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 10:21:10.359 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 10:21:10.360 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("123,10,-2565,-2276,-2101792503,6113,83,-1529,11", arrayList0, 111);
Attribute attribute0 = new Attribute("123,10,-2565,-2276,-2101792503,6113,83,-1529,11", instances0);
arrayList0.add(attribute0);
Instances instances1 = new Instances("@attribute", arrayList0, 2);
discretize0.setInputFormat(instances0);

[MASTER] 10:21:10.492 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 10:21:10.492 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 10:21:15.095 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 10:21:15.097 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("Sets the desired weight of instances per interval for equal-frequency binning.", arrayList0, 82);
Attribute attribute0 = new Attribute("Sets the desired weight of instances per interval for equal-frequency binning.", instances0, 10000);
arrayList0.add(attribute0);
Instances instances1 = new Instances(".bsi", arrayList0, 2);
discretize0.setInputFormat(instances1);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/mosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/mosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.Optimization
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13269
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13270
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:24:20.224 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:24:20.246 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:24:20.262 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:24:23.783 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 10:24:24.567 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 10:24:24.574 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2767
* Using seed 1013
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:24:29.001 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:24:29.009 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:24:29.010 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:24:29.065 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2499
* Using seed 1013
* Starting evolution
[MASTER] 10:24:31.519 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setMinNo(D)V: Line 500
[MASTER] 10:24:31.520 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setMinNo(D)V: Line 501
[MASTER] 10:24:31.520 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setSeed(J)V: Line 527
[MASTER] 10:24:31.520 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setSeed(J)V: Line 528
[MASTER] 10:24:31.520 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getSeed()J: Line 536
[MASTER] 10:24:31.520 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptimizations(I)V: Line 554
[MASTER] 10:24:31.520 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptimizations(I)V: Line 555
[MASTER] 10:24:31.520 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setDebug(Z)V: Line 581
[MASTER] 10:24:31.520 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setDebug(Z)V: Line 582
[MASTER] 10:24:31.527 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setDebug(Z)V: root-Branch
[MASTER] 10:24:31.528 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptimizations(I)V: root-Branch
[MASTER] 10:24:31.528 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setSeed(J)V: root-Branch
[MASTER] 10:24:31.528 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getSeed()J: root-Branch
[MASTER] 10:24:31.528 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setMinNo(D)V: root-Branch
[MASTER] 10:24:31.530 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 195: weka.classifiers.rules.JRip.setMinNo(D)V:500 - InsertUnaryOp Negation of m
[MASTER] 10:24:31.530 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 198: weka.classifiers.rules.JRip.setSeed(J)V:527 - ReplaceVariable s -> serialVersionUID
[MASTER] 10:24:31.530 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 199: weka.classifiers.rules.JRip.setSeed(J)V:527 - InsertUnaryOp Negation of s
[MASTER] 10:24:31.532 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 200: weka.classifiers.rules.JRip.getSeed()J:536 - ReplaceVariable m_Seed -> serialVersionUID
[MASTER] 10:24:31.532 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 201: weka.classifiers.rules.JRip.getSeed()J:536 - InsertUnaryOp Negation
[MASTER] 10:24:31.533 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 203: weka.classifiers.rules.JRip.setOptimizations(I)V:554 - InsertUnaryOp Negation of run
[MASTER] 10:24:31.533 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 204: weka.classifiers.rules.JRip.setOptimizations(I)V:554 - InsertUnaryOp IINC 1 run
[MASTER] 10:24:31.534 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 205: weka.classifiers.rules.JRip.setOptimizations(I)V:554 - InsertUnaryOp IINC -1 run
[MASTER] 10:24:31.537 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 210: weka.classifiers.rules.JRip.setDebug(Z)V:581 - InsertUnaryOp Negation of d
[MASTER] 10:24:31.537 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 211: weka.classifiers.rules.JRip.setDebug(Z)V:581 - InsertUnaryOp IINC 1 d
[MASTER] 10:24:31.538 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 212: weka.classifiers.rules.JRip.setDebug(Z)V:581 - InsertUnaryOp IINC -1 d
[MASTER] 10:24:31.547 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.getSeed()J:Zero
[MASTER] 10:24:31.548 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setMinNo(D)V
[MASTER] 10:24:31.550 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setOptimizations(I)V
[MASTER] 10:24:31.551 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setDebug(Z)V
[MASTER] 10:24:31.555 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setSeed(J)V
[MASTER] 10:24:31.556 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.getSeed()J
[MASTER] 10:24:31.556 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setMinNo(D)V
[MASTER] 10:24:31.556 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setOptimizations(I)V
[MASTER] 10:24:31.557 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setDebug(Z)V
[MASTER] 10:24:31.557 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setSeed(J)V
[MASTER] 10:24:31.557 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.getSeed()J
[MASTER] 10:24:31.557 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setSeed(J)V: root-Branch in context: weka.classifiers.rules.JRip:setSeed(J)V
[MASTER] 10:24:31.558 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setMinNo(D)V: root-Branch in context: weka.classifiers.rules.JRip:setMinNo(D)V
[MASTER] 10:24:31.558 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptimizations(I)V: root-Branch in context: weka.classifiers.rules.JRip:setOptimizations(I)V
[MASTER] 10:24:31.558 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setDebug(Z)V: root-Branch in context: weka.classifiers.rules.JRip:setDebug(Z)V
[MASTER] 10:24:31.558 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.getSeed()J: root-Branch in context: weka.classifiers.rules.JRip:getSeed()J
[MASTER] 10:24:32.363 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.getAttrValue()D: Line 723
[MASTER] 10:24:32.366 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;: Line 572
[MASTER] 10:24:32.381 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.getAttrValue()D: root-Branch
[MASTER] 10:24:32.381 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;: root-Branch
[MASTER] 10:24:32.393 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 209: weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;:572 - ReplaceConstant - Whether debug information is output to the console. -> 
[MASTER] 10:24:32.395 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 665: weka.classifiers.rules.JRip$Antd.getAttrValue()D:723 - ReplaceVariable value -> cover
[MASTER] 10:24:32.395 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 666: weka.classifiers.rules.JRip$Antd.getAttrValue()D:723 - ReplaceVariable value -> accu
[MASTER] 10:24:32.398 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 667: weka.classifiers.rules.JRip$Antd.getAttrValue()D:723 - ReplaceVariable value -> accuRate
[MASTER] 10:24:32.398 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 668: weka.classifiers.rules.JRip$Antd.getAttrValue()D:723 - ReplaceVariable value -> maxInfoGain
[MASTER] 10:24:32.399 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 669: weka.classifiers.rules.JRip$Antd.getAttrValue()D:723 - InsertUnaryOp Negation
[MASTER] 10:24:32.405 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 10:24:32.406 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;
[MASTER] 10:24:32.416 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.Antd.getAttrValue()D
[MASTER] 10:24:32.416 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;
[MASTER] 10:24:32.417 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.Antd.getAttrValue()D
[MASTER] 10:24:32.418 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$Antd.getAttrValue()D: root-Branch in context: weka.classifiers.rules.JRip$Antd:getAttrValue()D
[MASTER] 10:24:32.418 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.rules.JRip:debugTipText()Ljava/lang/String;
[MASTER] 10:24:34.307 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 10:24:47.687 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 10:25:44.136 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
[MASTER] 10:26:04.840 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.getSeed()J:Negative
[MASTER] 10:27:41.391 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 280s and 262 generations, 105952 statements, best individual has fitness: 12496.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 37%
* Total number of goals: 705
* Number of covered goals: 261
* Coverage analysis for criterion BRANCH
* Search finished after 280s and 128 generations, 94393 statements, best individual has fitness: 16704.0
* Coverage of criterion BRANCH: 27%
* Total number of goals: 416
* Number of covered goals: 111
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 55%
* Total number of goals: 993
* Number of covered goals: 547
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 31%
* Total number of goals: 93
* Number of covered goals: 29
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 110
* Generated 72 tests with total length 481
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 19 tests with total length 104
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/mosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
[MASTER] 10:30:26.375 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 10:30:26.635 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 10:30:26.829 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 10:30:26.829 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/mosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13276
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13274
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13273
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1367
* Using seed 1013
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:54:49.554 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:54:49.587 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:54:49.588 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:54:49.680 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2699
* Using seed 1013
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:55:11.575 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:55:11.590 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:55:11.592 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:55:12.728 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 10:55:13.935 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 10:55:13.936 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 10:55:16.877 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 10:55:16.958 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 10:55:16.971 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 10:55:16.971 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 10:55:16.972 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 10:55:16.973 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 10:55:16.974 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 10:55:16.975 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 10:55:16.976 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 10:55:17.153 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 10:55:17.180 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 3904
* Using seed 1013
* Starting evolution
[MASTER] 10:55:22.833 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 10:55:37.226 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 10:57:27.321 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.crossValidateModel(Lweka/classifiers/Classifier;Lweka/core/Instances;ILjava/util/Random;[Ljava/lang/Object;)V
* Search finished after 268s and 243 generations, 92635 statements, best individual has fitness: 2736.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 217
* Number of covered goals: 190
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 286
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 239
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 286
* Generated 78 tests with total length 205
* Resulting test suite's coverage: 75% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 270s and 118 generations, 64041 statements, best individual has fitness: 14656.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Resulting test suite's mutation score: 77%
* Compiling and checking tests
* Coverage of criterion LINE: 60%
* Total number of goals: 1378
* Number of covered goals: 827
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 45%
* Total number of goals: 809
* Number of covered goals: 368
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 88
* Number of covered goals: 88
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 62%
* Total number of goals: 424
* Number of covered goals: 262
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 23%
* Total number of goals: 278
* Number of covered goals: 64
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 103
* Number of covered goals: 102
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 44%
* Total number of goals: 809
* Number of covered goals: 360
* Generated 178 tests with total length 1744
* Resulting test suite's coverage: 54% (average coverage for all fitness functions)
* Generating assertions
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/mosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
* Search finished after 343s and 49 generations, 32817 statements, best individual has fitness: 2056.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 647
* Number of covered goals: 635
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 95%
* Total number of goals: 441
* Number of covered goals: 420
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 678
* Number of covered goals: 624
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 45%
* Total number of goals: 244
* Number of covered goals: 109
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 124
* Number of covered goals: 124
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 124
* Number of covered goals: 124
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 93%
* Total number of goals: 441
* Number of covered goals: 408
* Generated 209 tests with total length 1705
* Resulting test suite's coverage: 91% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 11:06:08.824 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6672666666666667% of time used, but only 85/209 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 25%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/mosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 11:08:05.118 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 8%
* Compiling and checking tests
[MASTER] 11:08:18.711 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 11:08:18.822 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 11:08:18.833 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 11:08:19.253 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 11:08:19.254 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 11:08:19.255 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/mosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
