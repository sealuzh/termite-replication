* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: org.jcvi.jillion.assembly.consed.phd.PhdBuilder
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: org.jcvi.jillion.core.Range
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 14212
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 14210
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 23:40:34.847 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 23:40:34.847 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 23:40:34.849 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 23:40:34.901 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:40:34.958 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:40:34.959 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 23:40:35.096 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 23:40:35.097 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 23:40:35.098 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 23:40:35.098 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 23:40:35.128 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 23:40:35.134 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 23:40:35.135 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 23:40:35.138 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 23:40:35.143 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.assembly.consed.phd.PhdBuilder
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Total number of test goals for MOSA: 232
* Using seed 1005
* Starting evolution
[MASTER] 23:40:36.852 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:40:36.964 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 23:40:36.965 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToDoubleFunction
[MASTER] 23:40:36.976 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToIntFunction
[MASTER] 23:40:36.984 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToLongFunction
[MASTER] 23:40:37.133 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:40:37.134 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.Range
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2577
* Using seed 1005
* Starting evolution
[MASTER] 23:41:16.655 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartIntLengthRange.equals(Ljava/lang/Object;)Z: Line 1499
[MASTER] 23:41:16.656 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartIntLengthRange.equals(Ljava/lang/Object;)Z: Line 1502
[MASTER] 23:41:16.656 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartIntLengthRange.equals(Ljava/lang/Object;)Z: Line 1505
[MASTER] 23:41:16.656 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartIntLengthRange.equals(Ljava/lang/Object;)Z: Line 1506
[MASTER] 23:41:16.677 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1086: org.jcvi.jillion.core.Range$UnsignedByteStartIntLengthRange.equals(Ljava/lang/Object;)Z:1499 - ReplaceComparisonOperator != -> ==
[MASTER] 23:41:16.677 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1088: org.jcvi.jillion.core.Range$UnsignedByteStartIntLengthRange.equals(Ljava/lang/Object;)Z:1502 - ReplaceComparisonOperator != null -> = null
[MASTER] 23:41:16.677 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1090: org.jcvi.jillion.core.Range$UnsignedByteStartIntLengthRange.equals(Ljava/lang/Object;)Z:1505 - ReplaceComparisonOperator == -> !=
[MASTER] 23:41:16.693 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedByteStartIntLengthRange.equals(Ljava/lang/Object;)Z: I4 Branch 88 IF_ACMPNE L1499 - true in context: 
[MASTER] 23:41:16.693 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedByteStartIntLengthRange.equals(Ljava/lang/Object;)Z: I12 Branch 89 IFNONNULL L1502 - true in context: 
[MASTER] 23:41:16.694 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedByteStartIntLengthRange.equals(Ljava/lang/Object;)Z: I23 Branch 90 IF_ACMPEQ L1505 - false in context: 
[MASTER] 23:41:21.494 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 620: org.jcvi.jillion.core.Range.getLength()J:971 - ReplaceArithmeticOperator - -> +
[MASTER] 23:41:21.494 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 622: org.jcvi.jillion.core.Range.getLength()J:971 - ReplaceArithmeticOperator - -> *
[MASTER] 23:41:21.494 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 627: org.jcvi.jillion.core.Range.getLength()J:971 - ReplaceArithmeticOperator + -> %
[MASTER] 23:41:24.561 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 214: org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;:521 - ReplaceComparisonOperator > -> >=
[MASTER] 23:42:13.869 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.equals(Ljava/lang/Object;)Z: Line 1758
[MASTER] 23:42:13.869 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.equals(Ljava/lang/Object;)Z: Line 1761
[MASTER] 23:42:13.869 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.equals(Ljava/lang/Object;)Z: Line 1762
[MASTER] 23:42:13.872 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1344: org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.equals(Ljava/lang/Object;)Z:1758 - ReplaceComparisonOperator != -> ==
[MASTER] 23:42:13.872 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1346: org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.equals(Ljava/lang/Object;)Z:1761 - ReplaceComparisonOperator != null -> = null
[MASTER] 23:42:13.874 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.equals(Ljava/lang/Object;)Z: I12 Branch 104 IFNONNULL L1761 - false in context: 
[MASTER] 23:42:13.874 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.equals(Ljava/lang/Object;)Z: I4 Branch 103 IF_ACMPNE L1758 - true in context: 
[MASTER] 23:42:24.301 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: I61 Branch 52 IFEQ L843 - true in context: org.jcvi.jillion.core.Range:complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;
[MASTER] 23:43:13.144 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 276: org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;:532 - ReplaceComparisonOperator > -> >=
* Search finished after 236s and 1172 generations, 170018 statements, best individual has fitness: 64.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 93
* Number of covered goals: 93
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 27
* Number of covered goals: 27
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 100%
* Total number of goals: 47
* Number of covered goals: 47
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 16
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 27
* Number of covered goals: 27
* Generated 27 tests with total length 113
* Resulting test suite's coverage: 97% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 14%
* Compiling and checking tests
[MASTER] 23:44:44.235 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Requested array size exceeds VM limit
[MASTER] 23:44:44.235 [logback-1] WARN  JUnitAnalyzer - Failing test:
 NucleotideSequence nucleotideSequence0 = mock(NucleotideSequence.class, new ViolatedAssumptionAnswer());
doReturn(2147483647L).when(nucleotideSequence0).getLength();
ArtificialPhd artificialPhd0 = ArtificialPhd.createNewbler454Phd("nwuGABp#", nucleotideSequence0, (QualitySequence) null);
PhdBuilder phdBuilder0 = new PhdBuilder(artificialPhd0);

* Writing JUnit test case 'PhdBuilder_ESTest' to /home/ubuntu/termite/mosa/tests/s1005/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
[MASTER] 23:46:43.694 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 293: org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;:535 - ReplaceComparisonOperator > -> >=
* Search finished after 379s and 91 generations, 31692 statements, best individual has fitness: 7864.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 69%
* Total number of goals: 632
* Number of covered goals: 439
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 72%
* Total number of goals: 426
* Number of covered goals: 307
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 53%
* Total number of goals: 802
* Number of covered goals: 423
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 77
* Number of covered goals: 39
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 37%
* Total number of goals: 107
* Number of covered goals: 40
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 37%
* Total number of goals: 107
* Number of covered goals: 40
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 71%
* Total number of goals: 426
* Number of covered goals: 304
* Generated 159 tests with total length 663
* Resulting test suite's coverage: 62% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 28%
* Compiling and checking tests
[MASTER] 23:49:41.094 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 23:49:41.094 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(9223372036854775807L);
Range range1 = range0.asRange();
List<Range> list0 = range1.complement(range0);
assertFalse(list0.isEmpty());
assertFalse(list0.contains(range0));


[MASTER] 23:49:41.149 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<-9223372036854775808> but was:<1>
[MASTER] 23:49:41.149 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.ofLength(9223372036854775807L);
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
long long0 = range0.getBegin(range_CoordinateSystem0);
assertEquals((-9223372036854775808L), long0);


[MASTER] 23:49:41.677 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1100> but was:<0>
[MASTER] 23:49:41.678 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.Builder range_Builder0 = new Range.Builder();
Range.Builder range_Builder1 = new Range.Builder(range_Builder0);
Range range0 = range_Builder1.build();
LinkedList<Range> linkedList0 = new LinkedList<Range>();
range0.complementFrom(linkedList0);
long long0 = range0.getLength();
assertEquals(1100L, long0);


[MASTER] 23:49:44.294 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 23:49:44.301 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(9223372036852919299L);
String string0 = range0.toString();
assertEquals("[ 9223372036852919299 .. 9223372036852919299 ]/0B", string0);

Range range1 = Range.of(9223372036852919299L);
List<Range> list0 = range0.complement(range1);
assertTrue(list0.contains(range0));


[MASTER] 23:49:44.504 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<2>
[MASTER] 23:49:44.505 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(6L);
Range range1 = Range.ofLength(149L);
List<Range> list0 = range1.split(6L);
long long0 = range1.getEnd();
assertEquals(148L, long0);

List<Range> list1 = range0.complementFrom(list0);
assertEquals(1, list1.size());

boolean boolean0 = range0.isEmpty();
assertFalse(boolean0);


[MASTER] 23:49:44.965 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected not same
[MASTER] 23:49:44.965 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range range0 = Range.of(range_CoordinateSystem0, 255L, 255L);
Range range1 = Range.of(range_CoordinateSystem0, 255L, 1357L);
Range range2 = range0.intersection(range1);
assertFalse(range1.equals((Object)range0));
assertNotSame(range1, range0);
assertNotSame(range2, range0);
assertTrue(range2.equals((Object)range0));


[MASTER] 23:49:46.039 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.ComparisonFailure: expected:<[ 32767 .. 3276[7] ]/0B> but was:<[ 32767 .. 3276[6] ]/0B>
[MASTER] 23:49:46.039 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Object object0 = new Object();
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range range0 = Range.of(range_CoordinateSystem0, 32767L, 32767L);
String string0 = range0.toString();
assertEquals("[ 32767 .. 32767 ]/0B", string0);


[MASTER] 23:49:46.241 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 23:49:46.241 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(992L, 2147483647L);
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range range1 = Range.of(range_CoordinateSystem0, 2147483647L, 2147483647L);
assertFalse(range1.isEmpty());

Range.of(992L);
long long0 = range0.getEnd(range_CoordinateSystem0);
assertEquals(2147483648L, long0);


[MASTER] 23:49:47.327 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<0>
[MASTER] 23:49:47.328 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.ofLength(9223372036852919288L);
long long0 = range0.getLength();
assertEquals(9223372036852919288L, long0);

List<Range> list0 = range0.complement(range0);
assertEquals(1, list0.size());

boolean boolean0 = range0.isEmpty();
assertFalse(boolean0);


[MASTER] 23:49:47.490 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.IndexOutOfBoundsException: given length -9223372036854775802 would make range [1962 - ? ] beyond max allowed end offset
[MASTER] 23:49:47.490 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
long long0 = (-9223372036854775801L);
Range.of(range_CoordinateSystem0, 1963L, (-9223372036854775801L));

[MASTER] 23:49:49.241 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 23:49:49.242 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of((-3453L), (-3453L));
Object object0 = new Object();
Range range1 = Range.of((-878L), (-878L));
boolean boolean0 = range0.equals(range1);
assertTrue(range0.isEmpty());
assertFalse(boolean0);


[MASTER] 23:49:49.782 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<0>
[MASTER] 23:49:49.782 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.ofLength(4294967295L);
range0.equals((Object) null);
List<Range> list0 = new LinkedList<Range>();
Range.of((-989L));
List<Range> list1 = range0.complement(range0);
assertFalse(list1.contains(range0));
assertEquals(1, list1.size());


[MASTER] 23:49:50.662 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 23:49:50.663 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.of(992L, 2147483647L);
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range range0 = Range.of(range_CoordinateSystem0, 2147483647L, 2147483647L);
Object object0 = new Object();
range0.equals("");
assertFalse(range0.isEmpty());


[MASTER] 23:49:52.767 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 23:49:52.768 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(9223372036852919279L);
String string0 = range0.toString();
assertEquals("[ 9223372036852919279 .. 9223372036852919279 ]/0B", string0);

Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range range1 = Range.parseRange("[ 9223372036852919279 .. 9223372036852919279 ]/0B", range_CoordinateSystem0);
boolean boolean0 = range1.equals(range0);
assertTrue(boolean0);
assertNotSame(range1, range0);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 7
* Writing JUnit test case 'Range_ESTest' to /home/ubuntu/termite/mosa/tests/s1005/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: org.jcvi.jillion.core.util.FileIterator
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 14215
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 23:54:00.773 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:54:01.103 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:54:01.104 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 23:54:01.147 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.util.FileIterator
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 424
* Using seed 1005
* Starting evolution
[MASTER] 23:54:13.449 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
[MASTER] 23:54:41.101 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.util.FileIterator.remove()V
* Search finished after 402s and 959 generations, 362049 statements, best individual has fitness: 608.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 107
* Number of covered goals: 102
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 99%
* Total number of goals: 67
* Number of covered goals: 66
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 98%
* Total number of goals: 53
* Number of covered goals: 52
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 74
* Number of covered goals: 40
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 28
* Number of covered goals: 14
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 28
* Number of covered goals: 14
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 90%
* Total number of goals: 67
* Number of covered goals: 60
* Generated 32 tests with total length 165
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 54%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'FileIterator_ESTest' to /home/ubuntu/termite/mosa/tests/s1005/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 14216
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 00:30:23.962 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 00:30:23.994 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 00:30:24.005 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 00:30:24.076 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 836
* Using seed 1005
* Starting evolution
[MASTER] 00:30:25.319 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 00:30:25.323 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 00:30:45.912 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 00:31:49.980 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 220s and 436 generations, 216441 statements, best individual has fitness: 376.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 131
* Number of covered goals: 130
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 97%
* Total number of goals: 74
* Number of covered goals: 72
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 46
* Number of covered goals: 46
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 99%
* Total number of goals: 469
* Number of covered goals: 464
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 63%
* Total number of goals: 52
* Number of covered goals: 33
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 83%
* Total number of goals: 18
* Number of covered goals: 15
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 83%
* Total number of goals: 18
* Number of covered goals: 15
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 81%
* Total number of goals: 74
* Number of covered goals: 60
* Generated 87 tests with total length 367
* Resulting test suite's coverage: 95% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 71%
* Compiling and checking tests
[MASTER] 00:34:57.813 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 00:34:57.813 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DefaultNucleotideCodec defaultNucleotideCodec0 = DefaultNucleotideCodec.INSTANCE;
byte[] byteArray0 = new byte[4];
byteArray0[0] = (byte)80;
byteArray0[1] = (byte) (-1);
byteArray0[2] = (byte) (-76);
byteArray0[3] = (byte)123;
defaultNucleotideCodec0.toString(byteArray0);

* Writing JUnit test case 'DefaultNucleotideCodec_ESTest' to /home/ubuntu/termite/mosa/tests/s1005/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
