* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 7488
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 7483
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 11:51:37.038 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 11:51:37.072 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 11:51:37.076 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 11:51:37.180 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 11:51:37.971 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 11:51:37.972 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 11:51:37.973 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 11:51:38.021 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 11:51:38.024 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 11:51:38.024 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Total number of test goals for MOSA: 2699
* Using seed 1014
* Starting evolution
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1412
* Using seed 1014
* Starting evolution
[MASTER] 11:52:36.374 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 11:52:36.374 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 11:52:54.020 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 11:53:49.142 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getTokenizer()Lweka/core/tokenizers/Tokenizer;:Null
* Search finished after 280s and 315 generations, 131755 statements, best individual has fitness: 1456.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 90%
* Total number of goals: 338
* Number of covered goals: 305
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 84%
* Total number of goals: 194
* Number of covered goals: 163
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 476
* Number of covered goals: 444
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 55%
* Total number of goals: 112
* Number of covered goals: 62
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 82%
* Total number of goals: 194
* Number of covered goals: 160
* Generated 81 tests with total length 551
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 371s and 49 generations, 33729 statements, best individual has fitness: 2120.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 647
* Number of covered goals: 635
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 441
* Number of covered goals: 423
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 678
* Number of covered goals: 621
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 45%
* Total number of goals: 244
* Number of covered goals: 109
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 124
* Number of covered goals: 123
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 124
* Number of covered goals: 123
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 91%
* Total number of goals: 441
* Number of covered goals: 402
* Generated 222 tests with total length 2418
* Resulting test suite's coverage: 90% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 58%
* Compiling and checking tests
[MASTER] 12:02:31.690 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_67_1573732951663/weka/classifiers/bayes/NaiveBayesMultinomialText_67_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_67_1573732951663/weka/classifiers/bayes/NaiveBayesMultinomialText_67_tmp__ESTest_scaffolding.java]]
[MASTER] 12:02:31.690 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 12:02:31.690 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 12:02:31.695 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 12:02:31.696 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_67_1573732951663/weka/classifiers/bayes/NaiveBayesMultinomialText_67_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Nov 14 12:02:31 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.testdata.EvoSuiteFile;
16: import org.evosuite.runtime.testdata.FileSystemHandling;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.core.Instances;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_67_tmp__ESTest extends NaiveBayesMultinomialText_67_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=2.5531257522061517
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
32:       naiveBayesMultinomialText0.m_tokenizer = null;
33:       naiveBayesMultinomialText0.getTokenizer();
34:       NaiveBayesMultinomialText.main((String[]) null);
35:       naiveBayesMultinomialText0.normTipText();
36:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
37:       naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
38:       naiveBayesMultinomialText0.m_wordFrequencies = true;
39:       try { 
40:         naiveBayesMultinomialText0.buildClassifier((Instances) null);
41:         fail("Expecting exception: NullPointerException");
42:       
43:       } catch(NullPointerException e) {
44:          //
45:          // no message in exception (getMessage() returned null)
46:          //
47:          verifyException("weka.core.Capabilities", e);
48:       }
49:   }
50: }
RegularFileObject[/tmp/EvoSuite_67_1573732951663/weka/classifiers/bayes/NaiveBayesMultinomialText_67_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Nov 14 12:02:31 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_67_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_67_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.classifiers.functions.supportVector.RBFKernel",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.classifiers.CostMatrix",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.ChebyshevDistance",
109:       "weka.core.neighboursearch.KDTree",
110:       "weka.core.stemmers.NullStemmer",
111:       "weka.core.EnvironmentHandler",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.classifiers.functions.SMOreg",
118:       "weka.core.NoSupportForMissingValuesException",
119:       "weka.classifiers.UpdateableClassifier",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
121:       "weka.core.MultiInstanceCapabilitiesHandler",
122:       "weka.core.Copyable",
123:       "weka.core.Capabilities",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
127:       "weka.classifiers.functions.supportVector.CachedKernel",
128:       "weka.core.SerializedObject",
129:       "weka.clusterers.UpdateableClusterer",
130:       "weka.core.Summarizable",
131:       "weka.core.AdditionalMeasureProducer",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.core.Drawable",
134:       "weka.core.matrix.Matrix",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "weka.classifiers.functions.supportVector.RegOptimizer",
142:       "org.pentaho.packageManagement.DefaultPackage",
143:       "weka.classifiers.misc.InputMappedClassifier",
144:       "weka.core.Version",
145:       "weka.core.Tag",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.filters.unsupervised.attribute.Center",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
151:       "weka.filters.StreamableFilter",
152:       "weka.core.Range",
153:       "weka.core.scripting.JythonSerializableObject",
154:       "weka.classifiers.Classifier",
155:       "weka.core.Capabilities$Capability",
156:       "weka.core.SparseInstance",
157:       "org.pentaho.packageManagement.PackageManager",
158:       "weka.attributeSelection.AttributeTransformer",
159:       "weka.core.tokenizers.WordTokenizer",
160:       "weka.classifiers.misc.SerializedClassifier",
161:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
162:       "weka.attributeSelection.PrincipalComponents",
163:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
164:       "weka.core.stemmers.SnowballStemmer",
165:       "weka.core.stemmers.LovinsStemmer",
166:       "weka.classifiers.Evaluation",
167:       "weka.classifiers.functions.supportVector.Kernel",
168:       "weka.core.WekaPackageManager",
169:       "weka.core.TechnicalInformationHandler",
170:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
171:       "weka.core.Option",
172:       "weka.classifiers.meta.CostSensitiveClassifier",
173:       "weka.core.neighboursearch.PerformanceStats",
174:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
175:       "weka.filters.Sourcable",
176:       "weka.core.Attribute",
177:       "weka.core.Stopwords",
178:       "weka.core.tokenizers.AlphabeticTokenizer",
179:       "weka.core.FastVector",
180:       "weka.classifiers.MultipleClassifiersCombiner",
181:       "weka.core.UnassignedDatasetException",
182:       "weka.classifiers.functions.supportVector.RegSMOImproved",
183:       "weka.classifiers.RandomizableClassifier",
184:       "weka.classifiers.SingleClassifierEnhancer",
185:       "weka.core.RevisionUtils",
186:       "weka.core.Instance",
187:       "weka.classifiers.functions.supportVector.RegSMO",
188:       "weka.classifiers.functions.supportVector.PolyKernel",
189:       "weka.core.ProtectedProperties",
190:       "weka.classifiers.meta.Vote",
191:       "weka.core.AttributeStats",
192:       "weka.core.WeightedInstancesHandler",
193:       "weka.core.neighboursearch.NearestNeighbourSearch",
194:       "weka.filters.unsupervised.attribute.Remove",
195:       "weka.core.Randomizable",
196:       "weka.core.EuclideanDistance",
197:       "weka.core.Instances",
198:       "weka.filters.unsupervised.attribute.Normalize",
199:       "weka.core.UnassignedClassException",
200:       "weka.classifiers.rules.ZeroR",
201:       "weka.filters.unsupervised.attribute.Standardize",
202:       "weka.core.stemmers.IteratedLovinsStemmer",
203:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
204:       "weka.core.TechnicalInformation",
205:       "weka.core.UnsupportedAttributeTypeException",
206:       "weka.classifiers.Sourcable",
207:       "weka.core.RevisionHandler",
208:       "weka.classifiers.evaluation.output.prediction.PlainText",
209:       "weka.core.neighboursearch.TreePerformanceStats",
210:       "weka.core.xml.XMLSerialization",
211:       "weka.classifiers.xml.XMLClassifier",
212:       "weka.filters.Filter"
213:     );
214:   } 
215: 
216:   private static void resetClasses() {
217:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_67_tmp__ESTest_scaffolding.class.getClassLoader()); 
218: 
219:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
220:       "weka.classifiers.AbstractClassifier",
221:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
222:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
223:       "weka.core.Capabilities$Capability",
224:       "weka.core.tokenizers.Tokenizer",
225:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
226:       "weka.core.tokenizers.WordTokenizer",
227:       "weka.core.stemmers.NullStemmer",
228:       "weka.core.Utils",
229:       "weka.classifiers.Evaluation",
230:       "weka.core.Option",
231:       "weka.core.RevisionUtils",
232:       "weka.filters.Filter",
233:       "weka.filters.supervised.attribute.Discretize",
234:       "weka.core.Range",
235:       "weka.core.Capabilities",
236:       "org.pentaho.packageManagement.PackageManager",
237:       "org.pentaho.packageManagement.DefaultPackageManager",
238:       "weka.core.Version",
239:       "weka.core.Environment",
240:       "weka.core.WekaPackageManager",
241:       "weka.core.tokenizers.NGramTokenizer",
242:       "weka.core.SerializedObject",
243:       "weka.classifiers.RandomizableClassifier",
244:       "weka.core.Tag",
245:       "weka.classifiers.functions.SGDText",
246:       "weka.core.neighboursearch.NearestNeighbourSearch",
247:       "weka.core.neighboursearch.KDTree",
248:       "weka.core.NormalizableDistance",
249:       "weka.core.EuclideanDistance",
250:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
251:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
252:       "weka.classifiers.SingleClassifierEnhancer",
253:       "weka.classifiers.misc.InputMappedClassifier",
254:       "weka.classifiers.rules.ZeroR",
255:       "weka.core.AbstractInstance",
256:       "weka.core.SparseInstance",
257:       "weka.core.BinarySparseInstance",
258:       "weka.core.Instances",
259:       "weka.core.converters.ArffLoader$ArffReader",
260:       "weka.core.UnassignedDatasetException",
261:       "weka.core.neighboursearch.CoverTree",
262:       "weka.core.neighboursearch.balltrees.BallNode",
263:       "weka.classifiers.misc.SerializedClassifier",
264:       "weka.core.Stopwords",
265:       "weka.attributeSelection.ASEvaluation",
266:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
267:       "weka.attributeSelection.PrincipalComponents",
268:       "weka.attributeSelection.AttributeSelection",
269:       "weka.core.TestInstances",
270:       "weka.core.DenseInstance",
271:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
272:       "weka.classifiers.meta.CostSensitiveClassifier",
273:       "weka.classifiers.CostMatrix",
274:       "weka.classifiers.bayes.NaiveBayes",
275:       "weka.core.neighboursearch.BallTree",
276:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
277:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
278:       "weka.core.neighboursearch.balltrees.BallSplitter",
279:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
280:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
281:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
282:       "weka.core.Attribute",
283:       "weka.core.ProtectedProperties",
284:       "weka.core.stemmers.LovinsStemmer",
285:       "weka.core.stemmers.Stemming",
286:       "weka.classifiers.lazy.IBk",
287:       "weka.core.neighboursearch.LinearNNSearch",
288:       "weka.core.SelectedTag",
289:       "weka.core.stemmers.SnowballStemmer",
290:       "weka.classifiers.functions.supportVector.Kernel",
291:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
292:       "weka.core.tokenizers.AlphabeticTokenizer",
293:       "weka.core.stemmers.IteratedLovinsStemmer",
294:       "weka.classifiers.bayes.BayesNet",
295:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
296:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
297:       "weka.classifiers.bayes.net.search.local.K2",
298:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
299:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
300:       "weka.classifiers.MultipleClassifiersCombiner",
301:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
302:       "weka.classifiers.meta.MultiScheme",
303:       "weka.classifiers.rules.OneR",
304:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
305:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
306:       "weka.classifiers.functions.supportVector.CachedKernel",
307:       "weka.classifiers.functions.supportVector.RBFKernel",
308:       "weka.core.matrix.Matrix",
309:       "weka.classifiers.functions.supportVector.Puk",
310:       "weka.classifiers.IteratedSingleClassifierEnhancer",
311:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
312:       "weka.classifiers.meta.LogitBoost",
313:       "weka.classifiers.trees.DecisionStump",
314:       "weka.classifiers.functions.VotedPerceptron",
315:       "weka.classifiers.functions.supportVector.PolyKernel",
316:       "weka.classifiers.trees.J48",
317:       "weka.classifiers.trees.j48.ClassifierTree",
318:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
319:       "weka.estimators.Estimator",
320:       "weka.estimators.PoissonEstimator",
321:       "weka.core.UnassignedClassException",
322:       "weka.core.neighboursearch.PerformanceStats",
323:       "weka.core.neighboursearch.TreePerformanceStats",
324:       "weka.classifiers.functions.GaussianProcesses",
325:       "weka.classifiers.bayes.NaiveBayesMultinomial",
326:       "weka.classifiers.functions.supportVector.StringKernel",
327:       "weka.core.WekaException",
328:       "weka.core.UnsupportedAttributeTypeException",
329:       "weka.classifiers.rules.PART",
330:       "weka.classifiers.rules.part.MakeDecList",
331:       "weka.classifiers.meta.RegressionByDiscretization",
332:       "weka.filters.unsupervised.attribute.Discretize",
333:       "weka.classifiers.lazy.LWL",
334:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
335:       "weka.core.WekaEnumeration",
336:       "weka.core.Attribute$1",
337:       "weka.classifiers.trees.RandomForest",
338:       "weka.classifiers.trees.RandomTree",
339:       "weka.attributeSelection.WrapperSubsetEval",
340:       "weka.classifiers.rules.JRip",
341:       "weka.core.TechnicalInformation",
342:       "weka.core.TechnicalInformation$Type",
343:       "weka.core.TechnicalInformation$Field",
344:       "weka.classifiers.meta.AdditiveRegression",
345:       "weka.classifiers.trees.REPTree",
346:       "weka.estimators.KernelEstimator",
347:       "weka.classifiers.functions.SGD",
348:       "weka.classifiers.bayes.net.BIFReader",
349:       "weka.classifiers.meta.MultiClassClassifier",
350:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
351:       "weka.classifiers.functions.Logistic",
352:       "weka.core.Check",
353:       "weka.core.CheckGOE",
354:       "weka.classifiers.rules.DecisionTable",
355:       "weka.attributeSelection.ASSearch",
356:       "weka.attributeSelection.BestFirst",
357:       "weka.classifiers.bayes.NaiveBayesUpdateable",
358:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
359:       "weka.classifiers.functions.SimpleLinearRegression",
360:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
361:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
362:       "weka.classifiers.meta.RandomCommittee",
363:       "weka.classifiers.functions.LinearRegression",
364:       "weka.classifiers.trees.m5.M5Base",
365:       "weka.classifiers.rules.M5Rules",
366:       "weka.classifiers.trees.LMT",
367:       "weka.core.FindWithCapabilities",
368:       "weka.core.SingleIndex",
369:       "weka.core.ClassDiscovery",
370:       "weka.filters.SimpleFilter",
371:       "weka.filters.SimpleStreamFilter",
372:       "weka.filters.MultiFilter",
373:       "weka.filters.AllFilter",
374:       "weka.classifiers.meta.CVParameterSelection",
375:       "weka.core.FastVector",
376:       "weka.core.ChebyshevDistance",
377:       "weka.classifiers.meta.AdaBoostM1",
378:       "weka.estimators.NormalEstimator",
379:       "weka.classifiers.meta.Bagging",
380:       "weka.classifiers.functions.SMOreg",
381:       "weka.classifiers.functions.supportVector.RegOptimizer",
382:       "weka.classifiers.functions.supportVector.RegSMO",
383:       "weka.classifiers.functions.supportVector.RegSMOImproved",
384:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
385:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
386:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
387:       "weka.classifiers.meta.Stacking",
388:       "weka.classifiers.meta.Vote",
389:       "weka.estimators.MahalanobisEstimator",
390:       "weka.classifiers.meta.FilteredClassifier",
391:       "weka.filters.supervised.attribute.AttributeSelection",
392:       "weka.attributeSelection.CfsSubsetEval",
393:       "weka.attributeSelection.GreedyStepwise",
394:       "weka.attributeSelection.InfoGainAttributeEval",
395:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
396:       "weka.attributeSelection.OneRAttributeEval",
397:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
398:       "weka.classifiers.lazy.KStar",
399:       "weka.classifiers.functions.SMO",
400:       "weka.estimators.DiscreteEstimator",
401:       "weka.classifiers.functions.SimpleLogistic",
402:       "weka.classifiers.meta.ClassificationViaRegression",
403:       "weka.classifiers.trees.M5P",
404:       "weka.attributeSelection.GainRatioAttributeEval",
405:       "weka.attributeSelection.CorrelationAttributeEval",
406:       "weka.classifiers.functions.MultilayerPerceptron",
407:       "weka.filters.unsupervised.attribute.NominalToBinary",
408:       "weka.classifiers.functions.neural.SigmoidUnit",
409:       "weka.classifiers.functions.neural.LinearUnit",
410:       "weka.core.AttributeStats",
411:       "weka.attributeSelection.ReliefFAttributeEval",
412:       "weka.classifiers.meta.AttributeSelectedClassifier",
413:       "weka.core.Queue",
414:       "weka.core.AttributeLocator",
415:       "weka.core.StringLocator",
416:       "weka.core.RelationalLocator",
417:       "weka.core.ContingencyTables",
418:       "weka.core.Queue$QueueNode",
419:       "weka.core.Javadoc",
420:       "weka.core.ClassCache",
421:       "weka.core.AllJavadoc",
422:       "weka.classifiers.functions.SGDText$Count",
423:       "weka.core.converters.ConverterUtils$DataSource",
424:       "weka.core.converters.AbstractLoader",
425:       "weka.core.converters.AbstractFileLoader",
426:       "weka.core.converters.ArffLoader",
427:       "weka.estimators.Estimator$Builder"
428:     );
429:   }
430: }

[MASTER] 12:02:31.696 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
naiveBayesMultinomialText0.m_tokenizer = null;
naiveBayesMultinomialText0.getTokenizer();
NaiveBayesMultinomialText.main((String[]) null);
naiveBayesMultinomialText0.normTipText();
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
naiveBayesMultinomialText0.m_wordFrequencies = true;
naiveBayesMultinomialText0.buildClassifier((Instances) null);

[MASTER] 12:02:35.199 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 12:02:35.527 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 12:02:35.684 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
[MASTER] 12:02:36.458 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/mosa/tests/s1014/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 12:03:28.153 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6672833333333333% of time used, but only 60/222 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 19%
* Compiling and checking tests
[MASTER] 12:05:11.811 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 7
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/mosa/tests/s1014/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.Optimization
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 7482
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 7485
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 7487
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Total number of test goals for MOSA: 1367
* Using seed 1014
* Starting evolution
[MASTER] 12:06:02.157 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 12:06:02.189 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 12:06:02.192 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 12:06:02.576 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 12:06:02.591 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 12:06:02.609 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1729
* Using seed 1014
* Starting evolution
[MASTER] 12:06:11.807 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.filters.unsupervised.attribute.Discretize.getUseEqualFrequency()Z: Line 600
[MASTER] 12:06:11.813 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 240: weka.filters.unsupervised.attribute.Discretize.getUseEqualFrequency()Z:600 - InsertUnaryOp Negation
[MASTER] 12:06:11.817 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.filters.unsupervised.attribute.Discretize.listOptions()Ljava/util/Enumeration;
[MASTER] 12:06:11.819 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.filters.unsupervised.attribute.Discretize.setMakeBinary(Z)V
[MASTER] 12:06:11.820 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.filters.unsupervised.attribute.Discretize.desiredWeightOfInstancesPerIntervalTipText()Ljava/lang/String;
[MASTER] 12:06:11.821 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.filters.unsupervised.attribute.Discretize.getUseEqualFrequency()Z
[MASTER] 12:06:11.824 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.filters.unsupervised.attribute.Discretize.getOptions()[Ljava/lang/String;
[MASTER] 12:06:11.829 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.filters.unsupervised.attribute.Discretize.listOptions()Ljava/util/Enumeration;
[MASTER] 12:06:11.833 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.filters.unsupervised.attribute.Discretize.setMakeBinary(Z)V
[MASTER] 12:06:11.838 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.filters.unsupervised.attribute.Discretize.desiredWeightOfInstancesPerIntervalTipText()Ljava/lang/String;
[MASTER] 12:06:11.846 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.filters.unsupervised.attribute.Discretize.getUseEqualFrequency()Z
[MASTER] 12:06:11.867 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.filters.unsupervised.attribute.Discretize.calculateCutPointsByEqualWidthBinning(I)V
[MASTER] 12:06:11.904 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.filters.unsupervised.attribute.Discretize.getOptions()[Ljava/lang/String;
[MASTER] 12:06:11.905 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.filters.unsupervised.attribute.Discretize.setMakeBinary(Z)V: root-Branch in context: weka.filters.unsupervised.attribute.Discretize:setMakeBinary(Z)V
[MASTER] 12:06:11.908 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.filters.unsupervised.attribute.Discretize.getUseEqualFrequency()Z: root-Branch in context: weka.filters.unsupervised.attribute.Discretize:getUseEqualFrequency()Z
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 12:06:18.743 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 12:06:18.767 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 12:06:18.768 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 12:06:18.798 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2499
* Using seed 1014
* Starting evolution
[MASTER] 12:06:23.689 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 12:06:49.005 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.filters.unsupervised.attribute.Discretize.getOptions()[Ljava/lang/String;: Line 308
[MASTER] 12:06:49.008 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.filters.unsupervised.attribute.Discretize.getOptions()[Ljava/lang/String;: I58 Branch 9 IFEQ L307 - false
[MASTER] 12:06:49.008 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 122: weka.filters.unsupervised.attribute.Discretize.getOptions()[Ljava/lang/String;:308 - ReplaceConstant - -F -> 
[MASTER] 12:06:49.011 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.filters.unsupervised.attribute.Discretize.getOptions()[Ljava/lang/String;: I58 Branch 9 IFEQ L307 - false in context: weka.filters.unsupervised.attribute.Discretize:getOptions()[Ljava/lang/String;
* Search finished after 229s and 369 generations, 109325 statements, best individual has fitness: 7888.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 45%
* Total number of goals: 370
* Number of covered goals: 166
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 81
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 42%
* Total number of goals: 713
* Number of covered goals: 298
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 47%
* Total number of goals: 72
* Number of covered goals: 34
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 45
* Number of covered goals: 44
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 81
* Generated 60 tests with total length 241
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 256s and 243 generations, 89682 statements, best individual has fitness: 2952.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 85%
* Total number of goals: 217
* Number of covered goals: 185
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 64%
* Total number of goals: 428
* Number of covered goals: 275
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 239
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 64%
* Total number of goals: 428
* Number of covered goals: 275
* Generated 74 tests with total length 195
* Resulting test suite's coverage: 73% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 251s and 128 generations, 101940 statements, best individual has fitness: 16712.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 18 tests with total length 80
* Resulting test suite's coverage: 16% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 19%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/mosa/tests/s1014/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 78%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/mosa/tests/s1014/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
[MASTER] 12:11:38.242 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 12:11:39.146 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/mosa/tests/s1014/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 7483
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 12:13:29.284 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 12:13:29.293 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 12:13:29.299 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 12:13:30.092 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 12:13:31.021 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 12:13:31.031 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 12:13:34.143 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 12:13:34.171 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 12:13:34.171 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 12:13:34.171 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 12:13:34.172 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 12:13:34.172 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 12:13:34.172 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 12:13:34.173 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 12:13:34.173 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 12:13:34.275 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 12:13:34.319 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 3904
* Using seed 1014
* Starting evolution
[MASTER] 12:13:39.493 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 12:14:08.270 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 12:14:38.248 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.SFPriorEntropy()D
[MASTER] 12:14:38.251 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.SFPriorEntropy()D
[MASTER] 12:16:05.568 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 12:17:25.574 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.num2ShortID(I[CI)Ljava/lang/String;
* Search finished after 270s and 118 generations, 59009 statements, best individual has fitness: 14048.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 62%
* Total number of goals: 1378
* Number of covered goals: 858
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 47%
* Total number of goals: 809
* Number of covered goals: 379
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 84
* Number of covered goals: 84
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 66%
* Total number of goals: 424
* Number of covered goals: 281
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 26%
* Total number of goals: 278
* Number of covered goals: 71
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 97%
* Total number of goals: 103
* Number of covered goals: 100
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 46%
* Total number of goals: 809
* Number of covered goals: 369
* Generated 182 tests with total length 1849
* Resulting test suite's coverage: 56% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 11%
[MASTER] 12:26:21.883 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
[MASTER] 12:26:40.648 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 12:26:40.765 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 12:26:40.780 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 12:26:41.356 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 12:26:41.356 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 12:26:41.363 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/mosa/tests/s1014/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 7491
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 13:03:02.754 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:03:02.791 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:03:02.793 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 13:03:05.970 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 13:03:07.103 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 13:03:07.104 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2767
* Using seed 1014
* Starting evolution
[MASTER] 13:04:16.987 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 245s and 262 generations, 97605 statements, best individual has fitness: 12424.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 37%
* Total number of goals: 705
* Number of covered goals: 261
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 28%
* Total number of goals: 416
* Number of covered goals: 116
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 56%
* Total number of goals: 993
* Number of covered goals: 556
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 30%
* Total number of goals: 93
* Number of covered goals: 28
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 28%
* Total number of goals: 416
* Number of covered goals: 115
* Generated 78 tests with total length 490
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 25%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/mosa/tests/s1014/107_weka/evosuite-tests
* Done!

* Computation finished
