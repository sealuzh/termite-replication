* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18384
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18387
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18386
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1367
* Using seed 1018
* Starting evolution
[MASTER] 17:23:20.127 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:23:20.187 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:23:20.207 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 17:23:20.631 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 17:23:20.672 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 17:23:20.673 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 17:23:20.845 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:23:20.884 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:23:20.888 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 17:23:20.957 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1729
* Using seed 1018
* Starting evolution
* Total number of test goals for MOSA: 2699
* Using seed 1018
* Starting evolution
* Search finished after 211s and 369 generations, 112640 statements, best individual has fitness: 6656.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 53%
* Total number of goals: 370
* Number of covered goals: 197
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 40%
* Total number of goals: 242
* Number of covered goals: 97
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 55%
* Total number of goals: 713
* Number of covered goals: 389
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 47%
* Total number of goals: 72
* Number of covered goals: 34
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 96%
* Total number of goals: 45
* Number of covered goals: 43
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 40%
* Total number of goals: 242
* Number of covered goals: 97
* Generated 70 tests with total length 307
* Resulting test suite's coverage: 52% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 247s and 243 generations, 99513 statements, best individual has fitness: 2704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 217
* Number of covered goals: 192
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 287
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 239
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 287
* Generated 81 tests with total length 213
* Resulting test suite's coverage: 75% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 253s and 49 generations, 32659 statements, best individual has fitness: 2008.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 647
* Number of covered goals: 632
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 95%
* Total number of goals: 441
* Number of covered goals: 421
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 26
* Number of covered goals: 26
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 678
* Number of covered goals: 626
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 45%
* Total number of goals: 244
* Number of covered goals: 111
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 124
* Number of covered goals: 124
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 124
* Number of covered goals: 123
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 93%
* Total number of goals: 441
* Number of covered goals: 412
* Generated 240 tests with total length 1880
* Resulting test suite's coverage: 91% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 80%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/mosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
[MASTER] 17:28:39.087 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 17:28:39.921 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 17:28:59.896 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 17:28:59.897 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
arrayList0.listIterator();
Instances instances0 = new Instances(" [options]", arrayList0, 2217);
arrayList0.listIterator();
Properties properties0 = new Properties();
ProtectedProperties protectedProperties0 = new ProtectedProperties(properties0);
Attribute attribute0 = new Attribute("JW:k+x$", instances0, protectedProperties0);
arrayList0.add(attribute0);
Discretize discretize0 = new Discretize();
discretize0.setInputFormat(instances0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/mosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 17:33:16.333 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6766916666666667% of time used, but only 108/240 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
* Permissions denied during test execution: 
[MASTER] 17:34:40.922 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/mosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18380
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 17:35:19.333 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 17:35:19.334 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 17:35:19.372 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 17:35:19.481 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:35:19.508 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:35:19.509 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1412
* Using seed 1018
* Starting evolution
[MASTER] 17:35:27.811 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 17:35:27.812 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 17:35:32.501 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getStemmer()Lweka/core/stemmers/Stemmer;
[MASTER] 17:35:32.503 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.reset()V
[MASTER] 17:35:32.503 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getStemmer()Lweka/core/stemmers/Stemmer;
[MASTER] 17:35:32.505 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.reset()V
[MASTER] 17:35:32.505 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.reset()V: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:reset()V
[MASTER] 17:35:32.933 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I3 Branch 48 IFNONNULL L828 - true
[MASTER] 17:35:32.947 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z:False
[MASTER] 17:35:32.948 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z
[MASTER] 17:35:32.948 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z
[MASTER] 17:35:32.949 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getUseWordFrequencies()Z
[MASTER] 17:35:32.949 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I3 Branch 48 IFNONNULL L828 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStopwords(Ljava/io/File;)V
[MASTER] 17:35:36.476 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I34 Branch 49 IFEQ L832 - true
[MASTER] 17:35:36.478 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I34 Branch 49 IFEQ L832 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStopwords(Ljava/io/File;)V
[MASTER] 17:35:48.141 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:Positive
[MASTER] 17:35:48.143 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D
[MASTER] 17:35:48.143 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D
[MASTER] 17:35:48.143 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getNorm()D
[MASTER] 17:38:33.228 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 299s and 315 generations, 117641 statements, best individual has fitness: 1504.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 90%
* Total number of goals: 338
* Number of covered goals: 303
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 84%
* Total number of goals: 194
* Number of covered goals: 162
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 476
* Number of covered goals: 442
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 55%
* Total number of goals: 112
* Number of covered goals: 62
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 82%
* Total number of goals: 194
* Number of covered goals: 159
* Generated 77 tests with total length 475
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 53%
* Compiling and checking tests
[MASTER] 17:44:06.790 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_69_1573753446675/weka/classifiers/bayes/NaiveBayesMultinomialText_69_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_69_1573753446675/weka/classifiers/bayes/NaiveBayesMultinomialText_69_tmp__ESTest_scaffolding.java]]
[MASTER] 17:44:06.790 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 17:44:06.791 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 17:44:06.795 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 17:44:06.797 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_69_1573753446675/weka/classifiers/bayes/NaiveBayesMultinomialText_69_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Nov 14 17:44:06 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: import weka.core.Instances;
16: import weka.core.TestInstances;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_69_tmp__ESTest extends NaiveBayesMultinomialText_69_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=1.9731190068697877
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       naiveBayesMultinomialText0.setPeriodicPruning(19);
29:       TestInstances testInstances0 = new TestInstances();
30:       testInstances0.setNumString(19);
31:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
32:       naiveBayesMultinomialText0.m_inputVector = null;
33:       Instances instances0 = testInstances0.generate(" ");
34:       naiveBayesMultinomialText0.buildClassifier(instances0);
35:       assertEquals(19, naiveBayesMultinomialText0.getPeriodicPruning());
36:   }
37: }
RegularFileObject[/tmp/EvoSuite_69_1573753446675/weka/classifiers/bayes/NaiveBayesMultinomialText_69_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Nov 14 17:44:06 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_69_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_69_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.classifiers.bayes.net.search.local.K2",
95:       "weka.filters.UnsupervisedFilter",
96:       "weka.core.logging.Logger$Level",
97:       "weka.core.neighboursearch.CoverTree$DistanceNode",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.core.stemmers.Stemmer",
101:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.core.neighboursearch.CoverTree$MyHeap",
105:       "weka.core.stemmers.NullStemmer",
106:       "weka.classifiers.functions.SGDText",
107:       "weka.core.Utils",
108:       "weka.core.CustomDisplayStringProvider",
109:       "weka.core.tokenizers.Tokenizer",
110:       "weka.core.NormalizableDistance",
111:       "weka.core.NoSupportForMissingValuesException",
112:       "weka.classifiers.UpdateableClassifier",
113:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
114:       "weka.core.MultiInstanceCapabilitiesHandler",
115:       "weka.core.Copyable",
116:       "weka.core.Capabilities",
117:       "weka.core.BinarySparseInstance",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
119:       "weka.core.SerializedObject",
120:       "weka.clusterers.UpdateableClusterer",
121:       "weka.core.Summarizable",
122:       "weka.core.AdditionalMeasureProducer",
123:       "org.pentaho.packageManagement.PackageManager$1",
124:       "weka.core.Drawable",
125:       "weka.core.matrix.Matrix",
126:       "weka.core.CapabilitiesHandler",
127:       "weka.core.AbstractInstance",
128:       "weka.core.SelectedTag",
129:       "org.pentaho.packageManagement.DefaultPackage",
130:       "weka.classifiers.bayes.BayesNet",
131:       "weka.classifiers.meta.AdditiveRegression",
132:       "weka.core.Version",
133:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
134:       "weka.core.Tag",
135:       "weka.classifiers.IteratedSingleClassifierEnhancer",
136:       "weka.core.neighboursearch.CoverTree",
137:       "weka.classifiers.AbstractClassifier",
138:       "weka.core.OptionHandler",
139:       "weka.core.WekaException",
140:       "weka.core.Range",
141:       "weka.classifiers.Classifier",
142:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
143:       "weka.core.Capabilities$Capability",
144:       "weka.core.SparseInstance",
145:       "org.pentaho.packageManagement.PackageManager",
146:       "weka.core.tokenizers.WordTokenizer",
147:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
148:       "weka.core.stemmers.SnowballStemmer",
149:       "weka.classifiers.Evaluation",
150:       "weka.classifiers.functions.supportVector.Kernel",
151:       "weka.core.WekaPackageManager",
152:       "weka.filters.SupervisedFilter",
153:       "weka.core.TechnicalInformationHandler",
154:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
155:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
156:       "weka.core.Option",
157:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
158:       "weka.core.neighboursearch.PerformanceStats",
159:       "weka.filters.Sourcable",
160:       "weka.core.Attribute",
161:       "weka.core.Stopwords",
162:       "weka.core.FastVector",
163:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
164:       "weka.core.UnassignedDatasetException",
165:       "weka.core.tokenizers.NGramTokenizer",
166:       "weka.classifiers.RandomizableClassifier",
167:       "weka.classifiers.SingleClassifierEnhancer",
168:       "weka.core.RevisionUtils",
169:       "weka.core.Instance",
170:       "weka.estimators.Estimator",
171:       "weka.core.ProtectedProperties",
172:       "weka.classifiers.bayes.net.ADNode",
173:       "weka.core.AttributeStats",
174:       "weka.core.WeightedInstancesHandler",
175:       "weka.core.neighboursearch.NearestNeighbourSearch",
176:       "weka.classifiers.trees.DecisionStump",
177:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
178:       "weka.core.neighboursearch.covertrees.Stack",
179:       "weka.core.Randomizable",
180:       "weka.core.EuclideanDistance",
181:       "weka.core.Instances",
182:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
183:       "weka.core.UnassignedClassException",
184:       "weka.classifiers.bayes.net.BIFReader",
185:       "weka.classifiers.bayes.net.ParentSet",
186:       "weka.classifiers.rules.ZeroR",
187:       "weka.core.TechnicalInformation",
188:       "weka.core.UnsupportedAttributeTypeException",
189:       "weka.classifiers.Sourcable",
190:       "weka.core.RevisionHandler",
191:       "weka.classifiers.evaluation.output.prediction.PlainText",
192:       "weka.core.neighboursearch.TreePerformanceStats",
193:       "weka.core.xml.XMLSerialization",
194:       "weka.classifiers.xml.XMLClassifier",
195:       "weka.filters.Filter",
196:       "weka.filters.supervised.attribute.Discretize"
197:     );
198:   } 
199: 
200:   private static void resetClasses() {
201:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_69_tmp__ESTest_scaffolding.class.getClassLoader()); 
202: 
203:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
204:       "weka.classifiers.AbstractClassifier",
205:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
206:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
207:       "weka.core.Capabilities$Capability",
208:       "weka.core.tokenizers.Tokenizer",
209:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
210:       "weka.core.tokenizers.WordTokenizer",
211:       "weka.core.stemmers.NullStemmer",
212:       "weka.classifiers.Evaluation",
213:       "weka.core.Utils",
214:       "weka.core.Option",
215:       "weka.core.Instances",
216:       "weka.core.converters.ArffLoader$ArffReader",
217:       "weka.core.AbstractInstance",
218:       "weka.core.SparseInstance",
219:       "weka.core.BinarySparseInstance",
220:       "weka.core.UnassignedDatasetException",
221:       "weka.classifiers.bayes.NaiveBayes",
222:       "weka.core.TechnicalInformation",
223:       "weka.core.TechnicalInformation$Type",
224:       "weka.core.TechnicalInformation$Field",
225:       "weka.core.Tag",
226:       "weka.classifiers.functions.SMO",
227:       "weka.classifiers.functions.supportVector.Kernel",
228:       "weka.classifiers.functions.supportVector.CachedKernel",
229:       "weka.classifiers.functions.supportVector.PolyKernel",
230:       "weka.core.SerializedObject",
231:       "weka.core.Capabilities",
232:       "org.pentaho.packageManagement.PackageManager",
233:       "org.pentaho.packageManagement.DefaultPackageManager",
234:       "weka.core.Version",
235:       "weka.core.Environment",
236:       "weka.core.WekaPackageManager",
237:       "weka.core.neighboursearch.NearestNeighbourSearch",
238:       "weka.core.neighboursearch.CoverTree",
239:       "weka.core.NormalizableDistance",
240:       "weka.core.EuclideanDistance",
241:       "weka.core.Range",
242:       "weka.classifiers.bayes.BayesNet",
243:       "weka.classifiers.bayes.net.BIFReader",
244:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
245:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
246:       "weka.classifiers.bayes.net.search.local.K2",
247:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
248:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
249:       "weka.core.RevisionUtils",
250:       "weka.core.TestInstances",
251:       "weka.core.tokenizers.NGramTokenizer",
252:       "weka.classifiers.RandomizableClassifier",
253:       "weka.classifiers.functions.SGDText",
254:       "weka.core.Attribute",
255:       "weka.core.ProtectedProperties",
256:       "weka.core.DenseInstance",
257:       "weka.core.neighboursearch.balltrees.BallNode",
258:       "weka.classifiers.lazy.IBk",
259:       "weka.core.neighboursearch.LinearNNSearch",
260:       "weka.core.neighboursearch.BallTree",
261:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
262:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
263:       "weka.core.neighboursearch.balltrees.BallSplitter",
264:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
265:       "weka.classifiers.SingleClassifierEnhancer",
266:       "weka.classifiers.misc.InputMappedClassifier",
267:       "weka.classifiers.rules.ZeroR",
268:       "weka.core.FindWithCapabilities",
269:       "weka.core.SingleIndex",
270:       "weka.core.stemmers.SnowballStemmer",
271:       "weka.classifiers.misc.SerializedClassifier",
272:       "weka.attributeSelection.ASEvaluation",
273:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
274:       "weka.attributeSelection.PrincipalComponents",
275:       "weka.classifiers.functions.LinearRegression",
276:       "weka.core.Stopwords",
277:       "weka.core.neighboursearch.KDTree",
278:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
279:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
280:       "weka.classifiers.bayes.NaiveBayesMultinomial",
281:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
282:       "weka.classifiers.functions.SimpleLogistic",
283:       "weka.core.tokenizers.AlphabeticTokenizer",
284:       "weka.filters.Filter",
285:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
286:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
287:       "weka.core.WekaException",
288:       "weka.core.UnsupportedAttributeTypeException",
289:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
290:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
291:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
292:       "weka.filters.supervised.attribute.Discretize",
293:       "weka.core.stemmers.LovinsStemmer",
294:       "weka.core.WekaEnumeration",
295:       "weka.core.Attribute$1",
296:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
297:       "weka.attributeSelection.AttributeSelection",
298:       "weka.filters.AllFilter",
299:       "weka.core.AttributeStats",
300:       "weka.core.ClassDiscovery",
301:       "weka.classifiers.functions.VotedPerceptron",
302:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
303:       "weka.classifiers.meta.CVParameterSelection",
304:       "weka.core.FastVector",
305:       "weka.attributeSelection.InfoGainAttributeEval",
306:       "weka.estimators.Estimator",
307:       "weka.estimators.KernelEstimator",
308:       "weka.core.UnassignedClassException",
309:       "weka.classifiers.CostMatrix",
310:       "weka.classifiers.meta.FilteredClassifier",
311:       "weka.filters.supervised.attribute.AttributeSelection",
312:       "weka.attributeSelection.CfsSubsetEval",
313:       "weka.attributeSelection.ASSearch",
314:       "weka.attributeSelection.GreedyStepwise",
315:       "weka.attributeSelection.BestFirst",
316:       "weka.classifiers.trees.J48",
317:       "weka.classifiers.rules.OneR",
318:       "weka.classifiers.meta.CostSensitiveClassifier",
319:       "weka.classifiers.meta.RegressionByDiscretization",
320:       "weka.filters.unsupervised.attribute.Discretize",
321:       "weka.classifiers.trees.j48.ClassifierTree",
322:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
323:       "weka.classifiers.trees.m5.M5Base",
324:       "weka.classifiers.rules.M5Rules",
325:       "weka.attributeSelection.OneRAttributeEval",
326:       "weka.classifiers.functions.SMOreg",
327:       "weka.classifiers.functions.supportVector.RegOptimizer",
328:       "weka.classifiers.functions.supportVector.RegSMO",
329:       "weka.classifiers.functions.supportVector.RegSMOImproved",
330:       "weka.classifiers.functions.SGD",
331:       "weka.estimators.NormalEstimator",
332:       "weka.classifiers.MultipleClassifiersCombiner",
333:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
334:       "weka.classifiers.meta.MultiScheme",
335:       "weka.filters.SimpleFilter",
336:       "weka.filters.SimpleStreamFilter",
337:       "weka.filters.MultiFilter",
338:       "weka.classifiers.trees.RandomTree",
339:       "weka.attributeSelection.CorrelationAttributeEval",
340:       "weka.classifiers.trees.RandomForest",
341:       "weka.classifiers.functions.GaussianProcesses",
342:       "weka.classifiers.IteratedSingleClassifierEnhancer",
343:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
344:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
345:       "weka.classifiers.meta.RandomCommittee",
346:       "weka.classifiers.functions.supportVector.StringKernel",
347:       "weka.classifiers.lazy.KStar",
348:       "weka.core.matrix.Matrix",
349:       "weka.classifiers.rules.JRip",
350:       "weka.core.stemmers.IteratedLovinsStemmer",
351:       "weka.core.SelectedTag",
352:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
353:       "weka.classifiers.functions.supportVector.RBFKernel",
354:       "weka.attributeSelection.ReliefFAttributeEval",
355:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
356:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
357:       "weka.classifiers.meta.Stacking",
358:       "weka.classifiers.lazy.LWL",
359:       "weka.classifiers.trees.DecisionStump",
360:       "weka.classifiers.functions.MultilayerPerceptron",
361:       "weka.filters.unsupervised.attribute.NominalToBinary",
362:       "weka.classifiers.functions.neural.SigmoidUnit",
363:       "weka.classifiers.functions.neural.LinearUnit",
364:       "weka.classifiers.rules.DecisionTable",
365:       "weka.core.MinkowskiDistance",
366:       "weka.estimators.MahalanobisEstimator",
367:       "weka.classifiers.meta.ClassificationViaRegression",
368:       "weka.classifiers.trees.M5P",
369:       "weka.classifiers.meta.Vote",
370:       "weka.classifiers.meta.MultiClassClassifier",
371:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
372:       "weka.classifiers.functions.Logistic",
373:       "weka.classifiers.functions.SimpleLinearRegression",
374:       "weka.classifiers.meta.AdditiveRegression",
375:       "weka.attributeSelection.GainRatioAttributeEval",
376:       "weka.classifiers.functions.supportVector.Puk",
377:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
378:       "weka.classifiers.meta.AdaBoostM1",
379:       "weka.estimators.PoissonEstimator",
380:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
381:       "weka.estimators.DiscreteEstimator",
382:       "weka.classifiers.rules.PART",
383:       "weka.classifiers.rules.part.MakeDecList",
384:       "weka.classifiers.meta.AttributeSelectedClassifier",
385:       "weka.classifiers.meta.LogitBoost",
386:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
387:       "weka.core.ManhattanDistance",
388:       "weka.attributeSelection.WrapperSubsetEval",
389:       "weka.classifiers.meta.Bagging",
390:       "weka.classifiers.trees.REPTree",
391:       "weka.core.converters.ConverterUtils$DataSource",
392:       "weka.core.converters.AbstractLoader",
393:       "weka.core.converters.AbstractFileLoader",
394:       "weka.core.converters.ArffLoader",
395:       "weka.core.ListOptions",
396:       "weka.core.Javadoc",
397:       "weka.core.OptionHandlerJavadoc",
398:       "weka.core.GlobalInfoJavadoc",
399:       "weka.core.Queue",
400:       "weka.core.AttributeLocator",
401:       "weka.core.StringLocator",
402:       "weka.core.RelationalLocator",
403:       "weka.core.ContingencyTables",
404:       "weka.core.Queue$QueueNode",
405:       "weka.experiment.Stats",
406:       "weka.classifiers.trees.LMT",
407:       "weka.classifiers.bayes.NaiveBayesUpdateable",
408:       "weka.core.stemmers.Stemming",
409:       "weka.classifiers.functions.neural.NeuralConnection",
410:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
411:       "weka.core.Check",
412:       "weka.core.CheckGOE",
413:       "weka.core.neighboursearch.PerformanceStats"
414:     );
415:   }
416: }

[MASTER] 17:44:06.797 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setPeriodicPruning(19);
TestInstances testInstances0 = new TestInstances();
testInstances0.setNumString(19);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.m_inputVector = null;
Instances instances0 = testInstances0.generate(" ");
naiveBayesMultinomialText0.buildClassifier(instances0);
assertEquals(19, naiveBayesMultinomialText0.getPeriodicPruning());


[MASTER] 17:44:10.083 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 17:44:11.480 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/mosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18382
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 17:58:00.314 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:58:00.339 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:58:00.343 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 17:58:00.352 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2499
* Using seed 1018
* Starting evolution
[MASTER] 17:58:04.576 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Search finished after 234s and 128 generations, 81355 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 19 tests with total length 115
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/mosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18383
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18387
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 18:20:38.579 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 18:20:38.594 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 18:20:38.598 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 18:20:42.043 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 18:20:43.040 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 18:20:43.051 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2767
* Using seed 1018
* Starting evolution
[MASTER] 18:20:48.078 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.<init>(Lweka/classifiers/rules/JRip;)V
[MASTER] 18:20:48.360 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NominalAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 18:20:59.192 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 18:20:59.199 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 18:20:59.200 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 18:21:00.188 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 18:21:01.491 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 18:21:01.492 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 18:21:04.214 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 18:21:04.253 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 18:21:04.253 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 18:21:04.253 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 18:21:04.254 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 18:21:04.255 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 18:21:04.255 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 18:21:04.256 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 18:21:04.257 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 18:21:04.312 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 18:21:04.326 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 3904
* Using seed 1018
* Starting evolution
[MASTER] 18:21:09.546 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 18:21:32.448 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 18:21:53.421 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 18:22:40.977 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: Line 1574
[MASTER] 18:22:40.977 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: Line 1614
[MASTER] 18:22:40.981 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: I3 Branch 165 IFNULL L1574 - false
[MASTER] 18:22:40.981 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: I6 Branch 166 IFEQ L1574 - true
[MASTER] 18:22:40.982 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 855: weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;:1574 - ReplaceComparisonOperator = null -> != null
[MASTER] 18:22:40.982 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 856: weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;:1574 - ReplaceComparisonOperator == -> -2
[MASTER] 18:22:40.983 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;:Null
[MASTER] 18:22:40.983 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;
[MASTER] 18:22:40.984 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;
[MASTER] 18:22:40.984 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: I6 Branch 166 IFEQ L1574 - true in context: 
[MASTER] 18:22:40.985 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: I3 Branch 165 IFNULL L1574 - false in context: 
* Search finished after 286s and 118 generations, 62978 statements, best individual has fitness: 14560.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 60%
* Total number of goals: 1378
* Number of covered goals: 830
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 46%
* Total number of goals: 809
* Number of covered goals: 372
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion WEAKMUTATION
* Search finished after 314s and 262 generations, 104661 statements, best individual has fitness: 12248.0
* Coverage of criterion WEAKMUTATION: 65%
* Total number of goals: 424
* Number of covered goals: 274
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 21%
* Total number of goals: 278
* Number of covered goals: 59
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 96%
* Total number of goals: 103
* Number of covered goals: 99
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 44%
* Total number of goals: 809
* Number of covered goals: 359
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 38%
* Total number of goals: 705
* Number of covered goals: 267
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 28%
* Total number of goals: 416
* Number of covered goals: 118
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 57%
* Total number of goals: 993
* Number of covered goals: 565
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 31%
* Total number of goals: 93
* Number of covered goals: 29
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 28%
* Total number of goals: 416
* Number of covered goals: 118
* Generated 78 tests with total length 518
* Resulting test suite's coverage: 45% (average coverage for all fitness functions)
* Generating assertions
* Generated 158 tests with total length 1504
* Resulting test suite's coverage: 54% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 23%
* Compiling and checking tests
[MASTER] 18:27:06.291 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 18:27:07.252 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/mosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 9%
* Compiling and checking tests
[MASTER] 18:32:32.728 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 18:32:33.086 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 18:32:33.086 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 18:32:34.615 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/mosa/tests/s1018/107_weka/evosuite-tests
* Done!

* Computation finished
