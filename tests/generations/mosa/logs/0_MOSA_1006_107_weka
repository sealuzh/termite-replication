* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 15876
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 15870
* Connecting to master process on port 15874
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 01:02:35.766 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 01:02:35.767 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 01:02:35.798 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 01:02:35.854 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:02:35.880 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:02:35.881 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 01:02:39.925 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:02:39.963 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:02:39.993 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1412
* Using seed 1006
* Starting evolution
[MASTER] 01:02:42.010 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 01:02:42.010 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 01:02:43.006 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 01:02:43.779 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 01:02:43.783 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 01:02:45.032 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.normalizeDocLengthTipText()Ljava/lang/String;: Line 714
[MASTER] 01:02:45.033 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.normalizeDocLengthTipText()Ljava/lang/String;: root-Branch
[MASTER] 01:02:45.040 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 288: weka.classifiers.bayes.NaiveBayesMultinomialText.normalizeDocLengthTipText()Ljava/lang/String;:714 - ReplaceConstant - If true then document length is normalized according to the settings for norm and lnorm -> 
[MASTER] 01:02:45.043 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.normalizeDocLengthTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 01:02:45.044 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V
[MASTER] 01:02:45.049 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.normalizeDocLengthTipText()Ljava/lang/String;
[MASTER] 01:02:45.049 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V
[MASTER] 01:02:45.050 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.normalizeDocLengthTipText()Ljava/lang/String;
[MASTER] 01:02:45.050 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.normalizeDocLengthTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:normalizeDocLengthTipText()Ljava/lang/String;
[MASTER] 01:02:45.050 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setLowercaseTokens(Z)V
[MASTER] 01:02:45.222 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V: Line 487
[MASTER] 01:02:45.222 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V: Line 488
[MASTER] 01:02:45.223 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z: Line 605
[MASTER] 01:02:45.223 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D: Line 780
[MASTER] 01:02:45.224 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 969
[MASTER] 01:02:45.224 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 973
[MASTER] 01:02:45.225 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 980
[MASTER] 01:02:45.225 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 984
[MASTER] 01:02:45.225 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 1001
[MASTER] 01:02:45.225 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 1002
[MASTER] 01:02:45.225 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 1004
[MASTER] 01:02:45.225 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 1005
[MASTER] 01:02:45.225 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 1006
[MASTER] 01:02:45.225 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 1007
[MASTER] 01:02:45.225 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 1008
[MASTER] 01:02:45.225 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 1009
[MASTER] 01:02:45.225 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 1016
[MASTER] 01:02:45.225 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 1017
[MASTER] 01:02:45.225 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 1019
[MASTER] 01:02:45.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 1020
[MASTER] 01:02:45.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 1021
[MASTER] 01:02:45.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 1022
[MASTER] 01:02:45.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 1024
[MASTER] 01:02:45.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1034
[MASTER] 01:02:45.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1036
[MASTER] 01:02:45.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1039
[MASTER] 01:02:45.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1040
[MASTER] 01:02:45.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1042
[MASTER] 01:02:45.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1045
[MASTER] 01:02:45.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1046
[MASTER] 01:02:45.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1047
[MASTER] 01:02:45.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1048
[MASTER] 01:02:45.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1050
[MASTER] 01:02:45.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1053
[MASTER] 01:02:45.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1057
[MASTER] 01:02:45.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1058
[MASTER] 01:02:45.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1059
[MASTER] 01:02:45.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1060
[MASTER] 01:02:45.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1062
[MASTER] 01:02:45.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1064
[MASTER] 01:02:45.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1065
[MASTER] 01:02:45.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1066
[MASTER] 01:02:45.227 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1067
[MASTER] 01:02:45.227 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1071
[MASTER] 01:02:45.227 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1074
[MASTER] 01:02:45.227 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;: Line 1144
[MASTER] 01:02:45.228 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z: root-Branch
[MASTER] 01:02:45.228 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D: root-Branch
[MASTER] 01:02:45.228 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;: root-Branch
[MASTER] 01:02:45.229 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V: I4 Branch 42 IFLE L487 - true
[MASTER] 01:02:45.229 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I26 Branch 51 IFLE L968 - false
[MASTER] 01:02:45.229 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I43 Branch 52 IFLE L972 - false
[MASTER] 01:02:45.229 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I67 Branch 53 IFLE L979 - false
[MASTER] 01:02:45.229 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I84 Branch 54 IFLE L983 - false
[MASTER] 01:02:45.229 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I153 Branch 56 IFNE L998 - true
[MASTER] 01:02:45.229 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I171 Branch 57 IFNE L1002 - true
[MASTER] 01:02:45.229 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I215 Branch 58 IFEQ L1007 - false
[MASTER] 01:02:45.229 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I236 Branch 59 IFNE L1013 - true
[MASTER] 01:02:45.229 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I252 Branch 60 IFNE L1017 - true
[MASTER] 01:02:45.229 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I296 Branch 61 IFEQ L1022 - true
[MASTER] 01:02:45.229 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I10 Branch 62 IFEQ L1036 - true
[MASTER] 01:02:45.229 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I57 Branch 63 IFEQ L1042 - true
[MASTER] 01:02:45.229 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I104 Branch 64 IFEQ L1047 - false
[MASTER] 01:02:45.230 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I115 Branch 65 IFEQ L1050 - true
[MASTER] 01:02:45.230 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I127 Branch 66 IFNE L1053 - true
[MASTER] 01:02:45.230 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I158 Branch 67 IFEQ L1059 - false
[MASTER] 01:02:45.230 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I186 Branch 68 IFNULL L1064 - false
[MASTER] 01:02:45.230 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I205 Branch 69 IFEQ L1067 - true
[MASTER] 01:02:45.246 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 191: weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V:487 - InsertUnaryOp Negation
[MASTER] 01:02:45.246 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 192: weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V:487 - InsertUnaryOp +1
[MASTER] 01:02:45.246 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 193: weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V:487 - InsertUnaryOp -1
[MASTER] 01:02:45.246 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 196: weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V:487 - ReplaceComparisonOperator <= -> <
[MASTER] 01:02:45.247 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 248: weka.classifiers.bayes.NaiveBayesMultinomialText.setUseWordFrequencies(Z)V:595 - ReplaceVariable u -> m_lowercaseTokens
[MASTER] 01:02:45.247 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 254: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z:605 - ReplaceVariable m_wordFrequencies -> m_lowercaseTokens
[MASTER] 01:02:45.247 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 255: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z:605 - InsertUnaryOp Negation
[MASTER] 01:02:45.247 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 264: weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z:635 - ReplaceVariable m_lowercaseTokens -> m_normalize
[MASTER] 01:02:45.247 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 265: weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z:635 - ReplaceVariable m_lowercaseTokens -> m_wordFrequencies
[MASTER] 01:02:45.247 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 266: weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z:635 - ReplaceVariable m_lowercaseTokens -> m_useStopList
[MASTER] 01:02:45.248 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 313: weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D:780 - ReplaceVariable m_lnorm -> m_norm
[MASTER] 01:02:45.248 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 314: weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D:780 - ReplaceVariable m_lnorm -> m_minWordP
[MASTER] 01:02:45.248 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 315: weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D:780 - ReplaceVariable m_lnorm -> m_t
[MASTER] 01:02:45.248 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 316: weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D:780 - ReplaceVariable m_lnorm -> m_leplace
[MASTER] 01:02:45.248 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 317: weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D:780 - InsertUnaryOp Negation
[MASTER] 01:02:45.248 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 334: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z:817 - ReplaceVariable m_useStopList -> m_lowercaseTokens
[MASTER] 01:02:45.249 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 385: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:968 - ReplaceComparisonOperator <= -> -1
[MASTER] 01:02:45.249 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 389: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:972 - ReplaceVariable minFreq -> pruneFreqS
[MASTER] 01:02:45.249 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 390: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:972 - ReplaceComparisonOperator <= -> -1
[MASTER] 01:02:45.249 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 393: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:973 - ReplaceVariable minFreq -> pruneFreqS
[MASTER] 01:02:45.249 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 396: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:979 - ReplaceVariable normFreqS -> minFreq
[MASTER] 01:02:45.249 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 397: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:979 - ReplaceVariable normFreqS -> pruneFreqS
[MASTER] 01:02:45.256 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 398: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:979 - ReplaceComparisonOperator <= -> -1
[MASTER] 01:02:45.256 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 401: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:980 - ReplaceVariable normFreqS -> minFreq
[MASTER] 01:02:45.256 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 402: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:980 - ReplaceVariable normFreqS -> pruneFreqS
[MASTER] 01:02:45.256 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 404: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:983 - ReplaceVariable lnormFreqS -> minFreq
[MASTER] 01:02:45.256 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 405: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:983 - ReplaceVariable lnormFreqS -> pruneFreqS
[MASTER] 01:02:45.256 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 406: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:983 - ReplaceVariable lnormFreqS -> normFreqS
[MASTER] 01:02:45.256 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 407: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:983 - ReplaceComparisonOperator <= -> -1
[MASTER] 01:02:45.256 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 410: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:984 - ReplaceVariable lnormFreqS -> minFreq
[MASTER] 01:02:45.256 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 411: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:984 - ReplaceVariable lnormFreqS -> pruneFreqS
[MASTER] 01:02:45.256 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 412: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:984 - ReplaceVariable lnormFreqS -> normFreqS
[MASTER] 01:02:45.256 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 416: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:991 - ReplaceVariable stopwordsS -> minFreq
[MASTER] 01:02:45.256 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 417: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:991 - ReplaceVariable stopwordsS -> pruneFreqS
[MASTER] 01:02:45.256 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 418: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:991 - ReplaceVariable stopwordsS -> normFreqS
[MASTER] 01:02:45.256 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 419: weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V:991 - ReplaceVariable stopwordsS -> lnormFreqS
[MASTER] 01:02:45.256 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 423: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1036 - ReplaceComparisonOperator == -> !=
[MASTER] 01:02:45.256 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 425: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1039 - ReplaceConstant - -P -> 
[MASTER] 01:02:45.257 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 426: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1040 - ReplaceConstant - -M -> 
[MASTER] 01:02:45.257 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 427: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1042 - ReplaceComparisonOperator == -> !=
[MASTER] 01:02:45.257 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 429: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1045 - ReplaceConstant - -norm -> 
[MASTER] 01:02:45.257 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 430: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1046 - ReplaceConstant - -lnorm -> 
[MASTER] 01:02:45.257 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 431: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1047 - ReplaceComparisonOperator == -> !=
[MASTER] 01:02:45.257 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 432: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1048 - ReplaceConstant - -lowercase -> 
[MASTER] 01:02:45.257 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 433: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1050 - ReplaceComparisonOperator == -> !=
[MASTER] 01:02:45.257 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 473: weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;:1144 - ReplaceConstant - $Revision: 9122 $ -> 
[MASTER] 01:02:45.258 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;:NonEmptyString
[MASTER] 01:02:45.258 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:NonEmptyArray
[MASTER] 01:02:45.272 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V
[MASTER] 01:02:45.273 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;
[MASTER] 01:02:45.273 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;
[MASTER] 01:02:45.273 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V
[MASTER] 01:02:45.274 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;
[MASTER] 01:02:45.274 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;
[MASTER] 01:02:45.274 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I67 Branch 53 IFLE L979 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setOptions([Ljava/lang/String;)V
[MASTER] 01:02:45.274 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I10 Branch 62 IFEQ L1036 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 01:02:45.274 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I43 Branch 52 IFLE L972 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setOptions([Ljava/lang/String;)V
[MASTER] 01:02:45.275 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I296 Branch 61 IFEQ L1022 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setOptions([Ljava/lang/String;)V
[MASTER] 01:02:45.275 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I104 Branch 64 IFEQ L1047 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 01:02:45.275 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I127 Branch 66 IFNE L1053 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 01:02:45.275 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I236 Branch 59 IFNE L1013 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setOptions([Ljava/lang/String;)V
[MASTER] 01:02:45.275 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I171 Branch 57 IFNE L1002 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setOptions([Ljava/lang/String;)V
[MASTER] 01:02:45.275 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I84 Branch 54 IFLE L983 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setOptions([Ljava/lang/String;)V
[MASTER] 01:02:45.275 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I57 Branch 63 IFEQ L1042 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 01:02:45.275 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I158 Branch 67 IFEQ L1059 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 01:02:45.275 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I26 Branch 51 IFLE L968 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setOptions([Ljava/lang/String;)V
[MASTER] 01:02:45.275 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I186 Branch 68 IFNULL L1064 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 01:02:45.275 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I153 Branch 56 IFNE L998 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setOptions([Ljava/lang/String;)V
[MASTER] 01:02:45.275 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I215 Branch 58 IFEQ L1007 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setOptions([Ljava/lang/String;)V
[MASTER] 01:02:45.275 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I115 Branch 65 IFEQ L1050 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 01:02:45.275 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I205 Branch 69 IFEQ L1067 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 01:02:45.275 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getRevision()Ljava/lang/String;
[MASTER] 01:02:45.275 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary()V: I4 Branch 42 IFLE L487 - true in context: 
[MASTER] 01:02:45.275 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I252 Branch 60 IFNE L1017 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setOptions([Ljava/lang/String;)V
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2767
* Using seed 1006
* Starting evolution
[MASTER] 01:02:51.719 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.<init>(Lweka/classifiers/rules/JRip;)V
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 01:03:04.070 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:03:04.074 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:03:04.077 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 01:03:04.666 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 01:03:05.356 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 01:03:05.358 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 01:03:07.942 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 01:03:07.979 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 01:03:07.979 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 01:03:07.980 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 01:03:07.980 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 01:03:07.981 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 01:03:07.981 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 01:03:07.982 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 01:03:07.982 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 01:03:08.059 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 01:03:08.070 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 3904
* Using seed 1006
* Starting evolution
[MASTER] 01:03:12.932 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 01:03:43.700 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 01:03:44.278 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.num2ShortID(I[CI)Ljava/lang/String;
[MASTER] 01:03:46.647 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 01:04:01.325 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 01:04:49.502 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: I6 Branch 166 IFEQ L1574 - true
[MASTER] 01:04:49.503 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 856: weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;:1574 - ReplaceComparisonOperator == -> -2
[MASTER] 01:04:49.505 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: I6 Branch 166 IFEQ L1574 - true in context: 
[MASTER] 01:05:33.773 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
[MASTER] 01:05:54.678 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 01:06:25.096 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: Line 1023
[MASTER] 01:06:25.097 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I296 Branch 61 IFEQ L1022 - false
[MASTER] 01:06:25.100 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions([Ljava/lang/String;)V: I296 Branch 61 IFEQ L1022 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setOptions([Ljava/lang/String;)V
* Search finished after 255s and 262 generations, 102625 statements, best individual has fitness: 12680.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 36%
* Total number of goals: 705
* Number of covered goals: 256
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 109
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 54%
* Total number of goals: 993
* Number of covered goals: 540
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 32%
* Total number of goals: 93
* Number of covered goals: 30
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 109
* Generated 75 tests with total length 534
* Resulting test suite's coverage: 43% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 01:07:13.897 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 264s and 118 generations, 62474 statements, best individual has fitness: 14928.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Search finished after 297s and 315 generations, 132023 statements, best individual has fitness: 1432.0
* Coverage of criterion LINE: 59%
* Total number of goals: 1378
* Number of covered goals: 817
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 44%
* Total number of goals: 809
* Number of covered goals: 357
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 68
* Number of covered goals: 68
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 63%
* Total number of goals: 424
* Number of covered goals: 269
* Coverage analysis for criterion OUTPUT
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion OUTPUT: 23%
* Total number of goals: 278
* Number of covered goals: 64
* Coverage analysis for criterion METHOD
* Coverage of criterion LINE: 91%
* Total number of goals: 338
* Number of covered goals: 307
* Coverage analysis for criterion BRANCH
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion BRANCH: 85%
* Total number of goals: 194
* Number of covered goals: 164
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 94%
* Total number of goals: 476
* Number of covered goals: 446
* Coverage analysis for criterion OUTPUT
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 103
* Number of covered goals: 101
* Coverage analysis for criterion CBRANCH
* Coverage of criterion OUTPUT: 47%
* Total number of goals: 112
* Number of covered goals: 53
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 82%
* Total number of goals: 194
* Number of covered goals: 160
* Coverage of criterion CBRANCH: 42%
* Total number of goals: 809
* Number of covered goals: 341
* Generated 81 tests with total length 494
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
* Generated 162 tests with total length 1667
* Resulting test suite's coverage: 53% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
[MASTER] 01:08:12.414 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 01:08:13.466 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 7
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/mosa/tests/s1006/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 57%
* Compiling and checking tests
[MASTER] 01:11:59.198 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_23_1573693919152/weka/classifiers/bayes/NaiveBayesMultinomialText_23_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_23_1573693919152/weka/classifiers/bayes/NaiveBayesMultinomialText_23_tmp__ESTest_scaffolding.java]]
[MASTER] 01:11:59.199 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:11:59.199 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:11:59.202 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 01:11:59.202 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 01:11:59.202 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 01:11:59.202 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 01:11:59.202 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 01:11:59.203 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_23_1573693919152/weka/classifiers/bayes/NaiveBayesMultinomialText_23_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Nov 14 01:11:59 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.Instances;
17: import weka.core.TestInstances;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_23_tmp__ESTest extends NaiveBayesMultinomialText_23_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=2.5624584298564903
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       naiveBayesMultinomialText0.m_t = (-1.0);
30:       naiveBayesMultinomialText0.getPeriodicPruning();
31:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
32:       naiveBayesMultinomialText0.m_minWordP = (-321.0);
33:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
34:       int int0 = naiveBayesMultinomialText0.m_periodicP;
35:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
36:       linkedHashMap0.putIfAbsent((Integer) null, linkedHashMap1);
37:       naiveBayesMultinomialText0.setPeriodicPruning(1278);
38:       naiveBayesMultinomialText0.minWordFrequencyTipText();
39:       Integer integer0 = new Integer(0);
40:       TestInstances testInstances0 = new TestInstances();
41:       Instances instances0 = testInstances0.generate("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value");
42:       naiveBayesMultinomialText0.buildClassifier(instances0);
43:       double double0 = naiveBayesMultinomialText0.getMinWordFrequency();
44:       assertEquals((-321.0), double0, 0.01);
45:   }
46: }
RegularFileObject[/tmp/EvoSuite_23_1573693919152/weka/classifiers/bayes/NaiveBayesMultinomialText_23_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Nov 14 01:11:59 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_23_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_23_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.bayes.net.search.local.K2",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.core.stemmers.Stemmer",
101:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.estimators.IncrementalEstimator",
105:       "weka.estimators.Estimator$Builder",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.classifiers.functions.SGDText",
108:       "weka.core.RelationalLocator",
109:       "weka.core.Utils",
110:       "weka.core.CustomDisplayStringProvider",
111:       "weka.core.tokenizers.Tokenizer",
112:       "weka.core.NormalizableDistance",
113:       "weka.classifiers.functions.SMOreg",
114:       "weka.core.NoSupportForMissingValuesException",
115:       "weka.classifiers.UpdateableClassifier",
116:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
117:       "weka.core.MultiInstanceCapabilitiesHandler",
118:       "weka.core.Copyable",
119:       "weka.core.Capabilities",
120:       "weka.core.AttributeLocator",
121:       "weka.core.BinarySparseInstance",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
123:       "weka.classifiers.functions.supportVector.CachedKernel",
124:       "weka.core.SerializedObject",
125:       "weka.clusterers.UpdateableClusterer",
126:       "weka.core.Summarizable",
127:       "weka.core.AdditionalMeasureProducer",
128:       "org.pentaho.packageManagement.PackageManager$1",
129:       "weka.core.OptionHandlerJavadoc",
130:       "weka.core.Drawable",
131:       "weka.core.matrix.Matrix",
132:       "weka.core.CapabilitiesHandler",
133:       "weka.core.AbstractInstance",
134:       "weka.core.scripting.JythonObject",
135:       "weka.classifiers.functions.supportVector.RegOptimizer",
136:       "weka.core.SelectedTag",
137:       "org.pentaho.packageManagement.DefaultPackage",
138:       "weka.classifiers.bayes.BayesNet",
139:       "weka.core.Version",
140:       "weka.filters.AllFilter",
141:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
142:       "weka.core.Tag",
143:       "weka.core.neighboursearch.CoverTree",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.core.OptionHandler",
146:       "weka.core.WekaException",
147:       "weka.core.Range",
148:       "weka.core.scripting.JythonSerializableObject",
149:       "weka.classifiers.Classifier",
150:       "weka.core.Capabilities$Capability",
151:       "weka.core.SparseInstance",
152:       "org.pentaho.packageManagement.PackageManager",
153:       "weka.estimators.PoissonEstimator",
154:       "weka.core.tokenizers.WordTokenizer",
155:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
156:       "weka.core.stemmers.LovinsStemmer",
157:       "weka.classifiers.Evaluation",
158:       "weka.classifiers.functions.supportVector.Kernel",
159:       "weka.core.WekaPackageManager",
160:       "weka.filters.SupervisedFilter",
161:       "weka.core.TechnicalInformationHandler",
162:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
163:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
164:       "weka.core.Option",
165:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
166:       "weka.core.neighboursearch.PerformanceStats",
167:       "weka.filters.Sourcable",
168:       "weka.core.Attribute",
169:       "weka.core.Stopwords",
170:       "weka.core.FastVector",
171:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
172:       "weka.core.tokenizers.NGramTokenizer",
173:       "weka.core.UnassignedDatasetException",
174:       "weka.classifiers.functions.supportVector.RegSMOImproved",
175:       "weka.classifiers.RandomizableClassifier",
176:       "weka.core.RevisionUtils",
177:       "weka.core.Instance",
178:       "weka.classifiers.functions.supportVector.RegSMO",
179:       "weka.classifiers.functions.supportVector.PolyKernel",
180:       "weka.estimators.Estimator",
181:       "weka.core.ProtectedProperties",
182:       "weka.core.StringLocator",
183:       "weka.classifiers.bayes.net.ADNode",
184:       "weka.core.AttributeStats",
185:       "weka.core.WeightedInstancesHandler",
186:       "weka.core.neighboursearch.NearestNeighbourSearch",
187:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
188:       "weka.core.Javadoc",
189:       "weka.core.Randomizable",
190:       "weka.core.EuclideanDistance",
191:       "weka.core.Instances",
192:       "weka.filters.unsupervised.attribute.Normalize",
193:       "weka.core.UnassignedClassException",
194:       "weka.classifiers.bayes.net.BIFReader",
195:       "weka.classifiers.bayes.net.ParentSet",
196:       "weka.core.stemmers.IteratedLovinsStemmer",
197:       "weka.filters.unsupervised.attribute.Standardize",
198:       "weka.core.TechnicalInformation",
199:       "weka.core.UnsupportedAttributeTypeException",
200:       "weka.classifiers.Sourcable",
201:       "weka.core.RevisionHandler",
202:       "weka.classifiers.evaluation.output.prediction.PlainText",
203:       "weka.core.xml.XMLSerialization",
204:       "weka.core.neighboursearch.TreePerformanceStats",
205:       "weka.classifiers.xml.XMLClassifier",
206:       "weka.filters.Filter",
207:       "weka.filters.supervised.attribute.Discretize"
208:     );
209:   } 
210: 
211:   private static void resetClasses() {
212:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_23_tmp__ESTest_scaffolding.class.getClassLoader()); 
213: 
214:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
215:       "weka.classifiers.AbstractClassifier",
216:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
218:       "weka.core.Capabilities$Capability",
219:       "weka.core.tokenizers.Tokenizer",
220:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
221:       "weka.core.tokenizers.WordTokenizer",
222:       "weka.core.stemmers.NullStemmer",
223:       "weka.core.Utils",
224:       "weka.attributeSelection.ASEvaluation",
225:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
226:       "weka.attributeSelection.PrincipalComponents",
227:       "weka.classifiers.Evaluation",
228:       "weka.core.Option",
229:       "weka.core.AbstractInstance",
230:       "weka.core.SparseInstance",
231:       "weka.core.UnassignedDatasetException",
232:       "weka.classifiers.bayes.NaiveBayes",
233:       "weka.core.Capabilities",
234:       "org.pentaho.packageManagement.PackageManager",
235:       "org.pentaho.packageManagement.DefaultPackageManager",
236:       "weka.core.Version",
237:       "weka.core.Environment",
238:       "weka.core.WekaPackageManager",
239:       "weka.classifiers.bayes.BayesNet",
240:       "weka.classifiers.bayes.net.BIFReader",
241:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
242:       "weka.core.Tag",
243:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
244:       "weka.classifiers.bayes.net.search.local.K2",
245:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
246:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
247:       "weka.classifiers.SingleClassifierEnhancer",
248:       "weka.classifiers.misc.InputMappedClassifier",
249:       "weka.classifiers.rules.ZeroR",
250:       "weka.core.neighboursearch.NearestNeighbourSearch",
251:       "weka.core.neighboursearch.KDTree",
252:       "weka.core.NormalizableDistance",
253:       "weka.core.EuclideanDistance",
254:       "weka.core.Range",
255:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
256:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
257:       "weka.core.DenseInstance",
258:       "weka.filters.Filter",
259:       "weka.filters.supervised.attribute.Discretize",
260:       "weka.core.BinarySparseInstance",
261:       "weka.core.SerializedObject",
262:       "weka.core.neighboursearch.CoverTree",
263:       "weka.core.neighboursearch.BallTree",
264:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
265:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
266:       "weka.core.neighboursearch.balltrees.BallSplitter",
267:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
268:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
269:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
270:       "weka.core.stemmers.LovinsStemmer",
271:       "weka.core.stemmers.IteratedLovinsStemmer",
272:       "weka.core.TechnicalInformation",
273:       "weka.core.TechnicalInformation$Type",
274:       "weka.core.TechnicalInformation$Field",
275:       "weka.classifiers.functions.supportVector.Kernel",
276:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
277:       "weka.core.Stopwords",
278:       "weka.core.RevisionUtils",
279:       "weka.classifiers.RandomizableClassifier",
280:       "weka.classifiers.functions.SGDText",
281:       "weka.core.Instances",
282:       "weka.core.TestInstances",
283:       "weka.classifiers.lazy.KStar",
284:       "weka.core.SelectedTag",
285:       "weka.core.Javadoc",
286:       "weka.core.OptionHandlerJavadoc",
287:       "weka.core.WekaException",
288:       "weka.core.stemmers.Stemming",
289:       "weka.core.converters.ArffLoader$ArffReader",
290:       "weka.classifiers.lazy.IBk",
291:       "weka.core.neighboursearch.LinearNNSearch",
292:       "weka.classifiers.bayes.NaiveBayesMultinomial",
293:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
294:       "weka.classifiers.meta.CostSensitiveClassifier",
295:       "weka.classifiers.CostMatrix",
296:       "weka.core.Attribute",
297:       "weka.core.ProtectedProperties",
298:       "weka.core.WekaEnumeration",
299:       "weka.core.Attribute$1",
300:       "weka.core.neighboursearch.balltrees.BallNode",
301:       "weka.classifiers.lazy.LWL",
302:       "weka.classifiers.trees.DecisionStump",
303:       "weka.core.tokenizers.NGramTokenizer",
304:       "weka.classifiers.trees.m5.M5Base",
305:       "weka.classifiers.rules.M5Rules",
306:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
307:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
308:       "weka.classifiers.trees.REPTree",
309:       "weka.core.stemmers.SnowballStemmer",
310:       "weka.core.FindWithCapabilities",
311:       "weka.core.SingleIndex",
312:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
313:       "weka.estimators.Estimator",
314:       "weka.estimators.NormalEstimator",
315:       "weka.classifiers.MultipleClassifiersCombiner",
316:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
317:       "weka.classifiers.meta.Vote",
318:       "weka.classifiers.misc.SerializedClassifier",
319:       "weka.classifiers.functions.LinearRegression",
320:       "weka.core.UnsupportedAttributeTypeException",
321:       "weka.attributeSelection.InfoGainAttributeEval",
322:       "weka.attributeSelection.GainRatioAttributeEval",
323:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
324:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
325:       "weka.classifiers.meta.Stacking",
326:       "weka.classifiers.functions.SMOreg",
327:       "weka.classifiers.functions.supportVector.RegOptimizer",
328:       "weka.classifiers.functions.supportVector.RegSMO",
329:       "weka.classifiers.functions.supportVector.RegSMOImproved",
330:       "weka.classifiers.functions.supportVector.CachedKernel",
331:       "weka.classifiers.functions.supportVector.PolyKernel",
332:       "weka.core.matrix.Matrix",
333:       "weka.classifiers.trees.RandomTree",
334:       "weka.core.tokenizers.AlphabeticTokenizer",
335:       "weka.attributeSelection.OneRAttributeEval",
336:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
337:       "weka.classifiers.IteratedSingleClassifierEnhancer",
338:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
339:       "weka.classifiers.meta.LogitBoost",
340:       "weka.classifiers.meta.RegressionByDiscretization",
341:       "weka.filters.unsupervised.attribute.Discretize",
342:       "weka.classifiers.trees.J48",
343:       "weka.classifiers.trees.j48.ClassifierTree",
344:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
345:       "weka.classifiers.rules.JRip",
346:       "weka.classifiers.rules.PART",
347:       "weka.classifiers.rules.part.MakeDecList",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.trees.RandomForest",
351:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
352:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
353:       "weka.classifiers.meta.Bagging",
354:       "weka.filters.AllFilter",
355:       "weka.attributeSelection.ReliefFAttributeEval",
356:       "weka.classifiers.functions.SGD",
357:       "weka.classifiers.functions.VotedPerceptron",
358:       "weka.attributeSelection.CfsSubsetEval",
359:       "weka.classifiers.meta.FilteredClassifier",
360:       "weka.filters.supervised.attribute.AttributeSelection",
361:       "weka.attributeSelection.AttributeSelection",
362:       "weka.attributeSelection.ASSearch",
363:       "weka.attributeSelection.GreedyStepwise",
364:       "weka.attributeSelection.BestFirst",
365:       "weka.classifiers.functions.MultilayerPerceptron",
366:       "weka.filters.unsupervised.attribute.NominalToBinary",
367:       "weka.classifiers.functions.neural.SigmoidUnit",
368:       "weka.classifiers.functions.neural.LinearUnit",
369:       "weka.classifiers.rules.DecisionTable",
370:       "weka.classifiers.rules.OneR",
371:       "weka.core.AttributeStats",
372:       "weka.experiment.Stats",
373:       "weka.filters.SimpleFilter",
374:       "weka.filters.SimpleStreamFilter",
375:       "weka.filters.MultiFilter",
376:       "weka.classifiers.trees.LMT",
377:       "weka.classifiers.meta.MultiScheme",
378:       "weka.estimators.DiscreteEstimator",
379:       "weka.classifiers.meta.RandomCommittee",
380:       "weka.estimators.PoissonEstimator",
381:       "weka.classifiers.functions.Logistic",
382:       "weka.classifiers.meta.AdaBoostM1",
383:       "weka.classifiers.meta.AttributeSelectedClassifier",
384:       "weka.classifiers.functions.supportVector.StringKernel",
385:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
386:       "weka.core.UnassignedClassException",
387:       "weka.attributeSelection.WrapperSubsetEval",
388:       "weka.classifiers.meta.AdditiveRegression",
389:       "weka.classifiers.meta.MultiClassClassifier",
390:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
391:       "weka.classifiers.functions.supportVector.Puk",
392:       "weka.classifiers.functions.GaussianProcesses",
393:       "weka.classifiers.functions.SimpleLogistic",
394:       "weka.classifiers.functions.SimpleLinearRegression",
395:       "weka.classifiers.functions.supportVector.RBFKernel",
396:       "weka.core.neighboursearch.PerformanceStats",
397:       "weka.estimators.KernelEstimator",
398:       "weka.attributeSelection.CorrelationAttributeEval",
399:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
400:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
401:       "weka.classifiers.functions.SMO",
402:       "weka.core.ChebyshevDistance",
403:       "weka.core.Queue",
404:       "weka.core.AttributeLocator",
405:       "weka.core.StringLocator",
406:       "weka.core.RelationalLocator",
407:       "weka.core.ContingencyTables",
408:       "weka.core.Queue$QueueNode",
409:       "weka.classifiers.meta.CVParameterSelection$CVParameter",
410:       "weka.classifiers.meta.RandomSubSpace",
411:       "weka.core.ClassDiscovery",
412:       "weka.classifiers.meta.ClassificationViaRegression",
413:       "weka.classifiers.trees.M5P",
414:       "weka.core.ListOptions",
415:       "weka.classifiers.bayes.NaiveBayesUpdateable",
416:       "weka.core.converters.ConverterUtils$DataSource",
417:       "weka.core.converters.AbstractLoader",
418:       "weka.core.converters.AbstractFileLoader",
419:       "weka.core.converters.ArffLoader",
420:       "weka.core.SerializationHelper",
421:       "weka.core.ClassCache",
422:       "weka.core.AllJavadoc",
423:       "weka.core.GlobalInfoJavadoc",
424:       "weka.core.neighboursearch.TreePerformanceStats",
425:       "weka.core.ManhattanDistance",
426:       "weka.estimators.MahalanobisEstimator",
427:       "weka.core.MinkowskiDistance",
428:       "weka.core.Check",
429:       "weka.core.CheckOptionHandler"
430:     );
431:   }
432: }

[MASTER] 01:11:59.204 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_t = (-1.0);
naiveBayesMultinomialText0.getPeriodicPruning();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_minWordP = (-321.0);
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
int int0 = naiveBayesMultinomialText0.m_periodicP;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.putIfAbsent((Integer) null, linkedHashMap1);
naiveBayesMultinomialText0.setPeriodicPruning(1278);
naiveBayesMultinomialText0.minWordFrequencyTipText();
Integer integer0 = new Integer(0);
TestInstances testInstances0 = new TestInstances();
Instances instances0 = testInstances0.generate("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value");
naiveBayesMultinomialText0.buildClassifier(instances0);
double double0 = naiveBayesMultinomialText0.getMinWordFrequency();
assertEquals((-321.0), double0, 0.01);


[MASTER] 01:11:59.490 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_31_1573693919464/weka/classifiers/bayes/NaiveBayesMultinomialText_31_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_31_1573693919464/weka/classifiers/bayes/NaiveBayesMultinomialText_31_tmp__ESTest_scaffolding.java]]
[MASTER] 01:11:59.490 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:11:59.490 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:11:59.491 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 01:11:59.491 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_31_1573693919464/weka/classifiers/bayes/NaiveBayesMultinomialText_31_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Nov 14 01:11:59 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.BinarySparseInstance;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_31_tmp__ESTest extends NaiveBayesMultinomialText_31_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=2.975102728219373
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       naiveBayesMultinomialText0.getPeriodicPruning();
30:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
31:       naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
32:       naiveBayesMultinomialText0.getPeriodicPruning();
33:       naiveBayesMultinomialText0.setDebug(true);
34:       naiveBayesMultinomialText0.setUseWordFrequencies(true);
35:       naiveBayesMultinomialText0.getPeriodicPruning();
36:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
37:       naiveBayesMultinomialText0.getUseWordFrequencies();
38:       naiveBayesMultinomialText0.getOptions();
39:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(1260);
40:       try { 
41:         naiveBayesMultinomialText0.updateClassifier(binarySparseInstance0);
42:         fail("Expecting exception: RuntimeException");
43:       
44:       } catch(RuntimeException e) {
45:          //
46:          // DenseInstance doesn't have access to a dataset!
47:          //
48:          verifyException("weka.core.AbstractInstance", e);
49:       }
50:   }
51: }
RegularFileObject[/tmp/EvoSuite_31_1573693919464/weka/classifiers/bayes/NaiveBayesMultinomialText_31_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Nov 14 01:11:59 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_31_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_31_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.bayes.net.search.local.K2",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.core.stemmers.Stemmer",
101:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.estimators.IncrementalEstimator",
105:       "weka.estimators.Estimator$Builder",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.classifiers.functions.SGDText",
108:       "weka.core.RelationalLocator",
109:       "weka.core.Utils",
110:       "weka.core.CustomDisplayStringProvider",
111:       "weka.core.tokenizers.Tokenizer",
112:       "weka.core.NormalizableDistance",
113:       "weka.classifiers.functions.SMOreg",
114:       "weka.core.NoSupportForMissingValuesException",
115:       "weka.classifiers.UpdateableClassifier",
116:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
117:       "weka.core.MultiInstanceCapabilitiesHandler",
118:       "weka.core.Copyable",
119:       "weka.core.Capabilities",
120:       "weka.core.AttributeLocator",
121:       "weka.core.BinarySparseInstance",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
123:       "weka.classifiers.functions.supportVector.CachedKernel",
124:       "weka.core.SerializedObject",
125:       "weka.clusterers.UpdateableClusterer",
126:       "weka.core.Summarizable",
127:       "weka.core.AdditionalMeasureProducer",
128:       "org.pentaho.packageManagement.PackageManager$1",
129:       "weka.core.OptionHandlerJavadoc",
130:       "weka.core.Drawable",
131:       "weka.core.matrix.Matrix",
132:       "weka.core.CapabilitiesHandler",
133:       "weka.core.AbstractInstance",
134:       "weka.core.scripting.JythonObject",
135:       "weka.classifiers.functions.supportVector.RegOptimizer",
136:       "weka.core.SelectedTag",
137:       "org.pentaho.packageManagement.DefaultPackage",
138:       "weka.classifiers.bayes.BayesNet",
139:       "weka.core.Version",
140:       "weka.filters.AllFilter",
141:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
142:       "weka.core.Tag",
143:       "weka.core.neighboursearch.CoverTree",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.core.OptionHandler",
146:       "weka.core.WekaException",
147:       "weka.core.Range",
148:       "weka.core.scripting.JythonSerializableObject",
149:       "weka.classifiers.Classifier",
150:       "weka.core.Capabilities$Capability",
151:       "weka.core.SparseInstance",
152:       "org.pentaho.packageManagement.PackageManager",
153:       "weka.estimators.PoissonEstimator",
154:       "weka.core.tokenizers.WordTokenizer",
155:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
156:       "weka.core.stemmers.LovinsStemmer",
157:       "weka.classifiers.Evaluation",
158:       "weka.classifiers.functions.supportVector.Kernel",
159:       "weka.core.WekaPackageManager",
160:       "weka.filters.SupervisedFilter",
161:       "weka.core.TechnicalInformationHandler",
162:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
163:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
164:       "weka.core.Option",
165:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
166:       "weka.core.neighboursearch.PerformanceStats",
167:       "weka.filters.Sourcable",
168:       "weka.core.Attribute",
169:       "weka.core.Stopwords",
170:       "weka.core.FastVector",
171:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
172:       "weka.core.tokenizers.NGramTokenizer",
173:       "weka.core.UnassignedDatasetException",
174:       "weka.classifiers.functions.supportVector.RegSMOImproved",
175:       "weka.classifiers.RandomizableClassifier",
176:       "weka.core.RevisionUtils",
177:       "weka.core.Instance",
178:       "weka.classifiers.functions.supportVector.RegSMO",
179:       "weka.classifiers.functions.supportVector.PolyKernel",
180:       "weka.estimators.Estimator",
181:       "weka.core.ProtectedProperties",
182:       "weka.core.StringLocator",
183:       "weka.classifiers.bayes.net.ADNode",
184:       "weka.core.AttributeStats",
185:       "weka.core.WeightedInstancesHandler",
186:       "weka.core.neighboursearch.NearestNeighbourSearch",
187:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
188:       "weka.core.Javadoc",
189:       "weka.core.Randomizable",
190:       "weka.core.EuclideanDistance",
191:       "weka.core.Instances",
192:       "weka.filters.unsupervised.attribute.Normalize",
193:       "weka.core.UnassignedClassException",
194:       "weka.classifiers.bayes.net.BIFReader",
195:       "weka.classifiers.bayes.net.ParentSet",
196:       "weka.core.stemmers.IteratedLovinsStemmer",
197:       "weka.filters.unsupervised.attribute.Standardize",
198:       "weka.core.TechnicalInformation",
199:       "weka.core.UnsupportedAttributeTypeException",
200:       "weka.classifiers.Sourcable",
201:       "weka.core.RevisionHandler",
202:       "weka.classifiers.evaluation.output.prediction.PlainText",
203:       "weka.core.xml.XMLSerialization",
204:       "weka.core.neighboursearch.TreePerformanceStats",
205:       "weka.classifiers.xml.XMLClassifier",
206:       "weka.filters.Filter",
207:       "weka.filters.supervised.attribute.Discretize"
208:     );
209:   } 
210: 
211:   private static void resetClasses() {
212:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_31_tmp__ESTest_scaffolding.class.getClassLoader()); 
213: 
214:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
215:       "weka.classifiers.AbstractClassifier",
216:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
218:       "weka.core.Capabilities$Capability",
219:       "weka.core.tokenizers.Tokenizer",
220:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
221:       "weka.core.tokenizers.WordTokenizer",
222:       "weka.core.stemmers.NullStemmer",
223:       "weka.core.Utils",
224:       "weka.attributeSelection.ASEvaluation",
225:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
226:       "weka.attributeSelection.PrincipalComponents",
227:       "weka.classifiers.Evaluation",
228:       "weka.core.Option",
229:       "weka.core.AbstractInstance",
230:       "weka.core.SparseInstance",
231:       "weka.core.UnassignedDatasetException",
232:       "weka.classifiers.bayes.NaiveBayes",
233:       "weka.core.Capabilities",
234:       "org.pentaho.packageManagement.PackageManager",
235:       "org.pentaho.packageManagement.DefaultPackageManager",
236:       "weka.core.Version",
237:       "weka.core.Environment",
238:       "weka.core.WekaPackageManager",
239:       "weka.classifiers.bayes.BayesNet",
240:       "weka.classifiers.bayes.net.BIFReader",
241:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
242:       "weka.core.Tag",
243:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
244:       "weka.classifiers.bayes.net.search.local.K2",
245:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
246:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
247:       "weka.classifiers.SingleClassifierEnhancer",
248:       "weka.classifiers.misc.InputMappedClassifier",
249:       "weka.classifiers.rules.ZeroR",
250:       "weka.core.neighboursearch.NearestNeighbourSearch",
251:       "weka.core.neighboursearch.KDTree",
252:       "weka.core.NormalizableDistance",
253:       "weka.core.EuclideanDistance",
254:       "weka.core.Range",
255:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
256:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
257:       "weka.core.DenseInstance",
258:       "weka.filters.Filter",
259:       "weka.filters.supervised.attribute.Discretize",
260:       "weka.core.BinarySparseInstance",
261:       "weka.core.SerializedObject",
262:       "weka.core.neighboursearch.CoverTree",
263:       "weka.core.neighboursearch.BallTree",
264:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
265:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
266:       "weka.core.neighboursearch.balltrees.BallSplitter",
267:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
268:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
269:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
270:       "weka.core.stemmers.LovinsStemmer",
271:       "weka.core.stemmers.IteratedLovinsStemmer",
272:       "weka.core.TechnicalInformation",
273:       "weka.core.TechnicalInformation$Type",
274:       "weka.core.TechnicalInformation$Field",
275:       "weka.classifiers.functions.supportVector.Kernel",
276:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
277:       "weka.core.Stopwords",
278:       "weka.core.RevisionUtils",
279:       "weka.classifiers.RandomizableClassifier",
280:       "weka.classifiers.functions.SGDText",
281:       "weka.core.Instances",
282:       "weka.core.TestInstances",
283:       "weka.classifiers.lazy.KStar",
284:       "weka.core.SelectedTag",
285:       "weka.core.Javadoc",
286:       "weka.core.OptionHandlerJavadoc",
287:       "weka.core.WekaException",
288:       "weka.core.stemmers.Stemming",
289:       "weka.core.converters.ArffLoader$ArffReader",
290:       "weka.classifiers.lazy.IBk",
291:       "weka.core.neighboursearch.LinearNNSearch",
292:       "weka.classifiers.bayes.NaiveBayesMultinomial",
293:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
294:       "weka.classifiers.meta.CostSensitiveClassifier",
295:       "weka.classifiers.CostMatrix",
296:       "weka.core.Attribute",
297:       "weka.core.ProtectedProperties",
298:       "weka.core.WekaEnumeration",
299:       "weka.core.Attribute$1",
300:       "weka.core.neighboursearch.balltrees.BallNode",
301:       "weka.classifiers.lazy.LWL",
302:       "weka.classifiers.trees.DecisionStump",
303:       "weka.core.tokenizers.NGramTokenizer",
304:       "weka.classifiers.trees.m5.M5Base",
305:       "weka.classifiers.rules.M5Rules",
306:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
307:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
308:       "weka.classifiers.trees.REPTree",
309:       "weka.core.stemmers.SnowballStemmer",
310:       "weka.core.FindWithCapabilities",
311:       "weka.core.SingleIndex",
312:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
313:       "weka.estimators.Estimator",
314:       "weka.estimators.NormalEstimator",
315:       "weka.classifiers.MultipleClassifiersCombiner",
316:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
317:       "weka.classifiers.meta.Vote",
318:       "weka.classifiers.misc.SerializedClassifier",
319:       "weka.classifiers.functions.LinearRegression",
320:       "weka.core.UnsupportedAttributeTypeException",
321:       "weka.attributeSelection.InfoGainAttributeEval",
322:       "weka.attributeSelection.GainRatioAttributeEval",
323:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
324:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
325:       "weka.classifiers.meta.Stacking",
326:       "weka.classifiers.functions.SMOreg",
327:       "weka.classifiers.functions.supportVector.RegOptimizer",
328:       "weka.classifiers.functions.supportVector.RegSMO",
329:       "weka.classifiers.functions.supportVector.RegSMOImproved",
330:       "weka.classifiers.functions.supportVector.CachedKernel",
331:       "weka.classifiers.functions.supportVector.PolyKernel",
332:       "weka.core.matrix.Matrix",
333:       "weka.classifiers.trees.RandomTree",
334:       "weka.core.tokenizers.AlphabeticTokenizer",
335:       "weka.attributeSelection.OneRAttributeEval",
336:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
337:       "weka.classifiers.IteratedSingleClassifierEnhancer",
338:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
339:       "weka.classifiers.meta.LogitBoost",
340:       "weka.classifiers.meta.RegressionByDiscretization",
341:       "weka.filters.unsupervised.attribute.Discretize",
342:       "weka.classifiers.trees.J48",
343:       "weka.classifiers.trees.j48.ClassifierTree",
344:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
345:       "weka.classifiers.rules.JRip",
346:       "weka.classifiers.rules.PART",
347:       "weka.classifiers.rules.part.MakeDecList",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.trees.RandomForest",
351:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
352:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
353:       "weka.classifiers.meta.Bagging",
354:       "weka.filters.AllFilter",
355:       "weka.attributeSelection.ReliefFAttributeEval",
356:       "weka.classifiers.functions.SGD",
357:       "weka.classifiers.functions.VotedPerceptron",
358:       "weka.attributeSelection.CfsSubsetEval",
359:       "weka.classifiers.meta.FilteredClassifier",
360:       "weka.filters.supervised.attribute.AttributeSelection",
361:       "weka.attributeSelection.AttributeSelection",
362:       "weka.attributeSelection.ASSearch",
363:       "weka.attributeSelection.GreedyStepwise",
364:       "weka.attributeSelection.BestFirst",
365:       "weka.classifiers.functions.MultilayerPerceptron",
366:       "weka.filters.unsupervised.attribute.NominalToBinary",
367:       "weka.classifiers.functions.neural.SigmoidUnit",
368:       "weka.classifiers.functions.neural.LinearUnit",
369:       "weka.classifiers.rules.DecisionTable",
370:       "weka.classifiers.rules.OneR",
371:       "weka.core.AttributeStats",
372:       "weka.experiment.Stats",
373:       "weka.filters.SimpleFilter",
374:       "weka.filters.SimpleStreamFilter",
375:       "weka.filters.MultiFilter",
376:       "weka.classifiers.trees.LMT",
377:       "weka.classifiers.meta.MultiScheme",
378:       "weka.estimators.DiscreteEstimator",
379:       "weka.classifiers.meta.RandomCommittee",
380:       "weka.estimators.PoissonEstimator",
381:       "weka.classifiers.functions.Logistic",
382:       "weka.classifiers.meta.AdaBoostM1",
383:       "weka.classifiers.meta.AttributeSelectedClassifier",
384:       "weka.classifiers.functions.supportVector.StringKernel",
385:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
386:       "weka.core.UnassignedClassException",
387:       "weka.attributeSelection.WrapperSubsetEval",
388:       "weka.classifiers.meta.AdditiveRegression",
389:       "weka.classifiers.meta.MultiClassClassifier",
390:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
391:       "weka.classifiers.functions.supportVector.Puk",
392:       "weka.classifiers.functions.GaussianProcesses",
393:       "weka.classifiers.functions.SimpleLogistic",
394:       "weka.classifiers.functions.SimpleLinearRegression",
395:       "weka.classifiers.functions.supportVector.RBFKernel",
396:       "weka.core.neighboursearch.PerformanceStats",
397:       "weka.estimators.KernelEstimator",
398:       "weka.attributeSelection.CorrelationAttributeEval",
399:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
400:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
401:       "weka.classifiers.functions.SMO",
402:       "weka.core.ChebyshevDistance",
403:       "weka.core.Queue",
404:       "weka.core.AttributeLocator",
405:       "weka.core.StringLocator",
406:       "weka.core.RelationalLocator",
407:       "weka.core.ContingencyTables",
408:       "weka.core.Queue$QueueNode",
409:       "weka.classifiers.meta.CVParameterSelection$CVParameter",
410:       "weka.classifiers.meta.RandomSubSpace",
411:       "weka.core.ClassDiscovery",
412:       "weka.classifiers.meta.ClassificationViaRegression",
413:       "weka.classifiers.trees.M5P",
414:       "weka.core.ListOptions",
415:       "weka.classifiers.bayes.NaiveBayesUpdateable",
416:       "weka.core.converters.ConverterUtils$DataSource",
417:       "weka.core.converters.AbstractLoader",
418:       "weka.core.converters.AbstractFileLoader",
419:       "weka.core.converters.ArffLoader",
420:       "weka.core.SerializationHelper",
421:       "weka.core.ClassCache",
422:       "weka.core.AllJavadoc",
423:       "weka.core.GlobalInfoJavadoc",
424:       "weka.core.neighboursearch.TreePerformanceStats",
425:       "weka.core.ManhattanDistance",
426:       "weka.estimators.MahalanobisEstimator",
427:       "weka.core.MinkowskiDistance",
428:       "weka.core.Check",
429:       "weka.core.CheckOptionHandler"
430:     );
431:   }
432: }

[MASTER] 01:11:59.492 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.getPeriodicPruning();
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
naiveBayesMultinomialText0.getPeriodicPruning();
naiveBayesMultinomialText0.setDebug(true);
naiveBayesMultinomialText0.setUseWordFrequencies(true);
naiveBayesMultinomialText0.getPeriodicPruning();
naiveBayesMultinomialText0.normalizeDocLengthTipText();
naiveBayesMultinomialText0.getUseWordFrequencies();
naiveBayesMultinomialText0.getOptions();
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(1260);
naiveBayesMultinomialText0.updateClassifier(binarySparseInstance0);

[MASTER] 01:11:59.883 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_42_1573693919850/weka/classifiers/bayes/NaiveBayesMultinomialText_42_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_42_1573693919850/weka/classifiers/bayes/NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding.java]]
[MASTER] 01:11:59.883 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:11:59.883 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:11:59.884 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 01:11:59.884 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 01:11:59.884 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 01:11:59.884 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 01:11:59.885 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_42_1573693919850/weka/classifiers/bayes/NaiveBayesMultinomialText_42_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Nov 14 01:11:59 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_42_tmp__ESTest extends NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=1.543056733112554
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       naiveBayesMultinomialText0.m_t = (-1.0);
28:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
29:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
30:       int int0 = naiveBayesMultinomialText0.m_periodicP;
31:       naiveBayesMultinomialText0.setPeriodicPruning(1278);
32:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
33:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = naiveBayesMultinomialText0.m_inputVector;
34:       naiveBayesMultinomialText0.pruneDictionary();
35:       assertEquals(1278, naiveBayesMultinomialText0.getPeriodicPruning());
36:   }
37: }
RegularFileObject[/tmp/EvoSuite_42_1573693919850/weka/classifiers/bayes/NaiveBayesMultinomialText_42_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Nov 14 01:11:59 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.bayes.net.search.local.K2",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.core.stemmers.Stemmer",
101:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.estimators.IncrementalEstimator",
105:       "weka.estimators.Estimator$Builder",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.classifiers.functions.SGDText",
108:       "weka.core.RelationalLocator",
109:       "weka.core.Utils",
110:       "weka.core.CustomDisplayStringProvider",
111:       "weka.core.tokenizers.Tokenizer",
112:       "weka.core.NormalizableDistance",
113:       "weka.classifiers.functions.SMOreg",
114:       "weka.core.NoSupportForMissingValuesException",
115:       "weka.classifiers.UpdateableClassifier",
116:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
117:       "weka.core.MultiInstanceCapabilitiesHandler",
118:       "weka.core.Copyable",
119:       "weka.core.Capabilities",
120:       "weka.core.AttributeLocator",
121:       "weka.core.BinarySparseInstance",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
123:       "weka.classifiers.functions.supportVector.CachedKernel",
124:       "weka.core.SerializedObject",
125:       "weka.clusterers.UpdateableClusterer",
126:       "weka.core.Summarizable",
127:       "weka.core.AdditionalMeasureProducer",
128:       "org.pentaho.packageManagement.PackageManager$1",
129:       "weka.core.OptionHandlerJavadoc",
130:       "weka.core.Drawable",
131:       "weka.core.matrix.Matrix",
132:       "weka.core.CapabilitiesHandler",
133:       "weka.core.AbstractInstance",
134:       "weka.core.scripting.JythonObject",
135:       "weka.classifiers.functions.supportVector.RegOptimizer",
136:       "weka.core.SelectedTag",
137:       "org.pentaho.packageManagement.DefaultPackage",
138:       "weka.classifiers.bayes.BayesNet",
139:       "weka.core.Version",
140:       "weka.filters.AllFilter",
141:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
142:       "weka.core.Tag",
143:       "weka.core.neighboursearch.CoverTree",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.core.OptionHandler",
146:       "weka.core.WekaException",
147:       "weka.core.Range",
148:       "weka.core.scripting.JythonSerializableObject",
149:       "weka.classifiers.Classifier",
150:       "weka.core.Capabilities$Capability",
151:       "weka.core.SparseInstance",
152:       "org.pentaho.packageManagement.PackageManager",
153:       "weka.estimators.PoissonEstimator",
154:       "weka.core.tokenizers.WordTokenizer",
155:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
156:       "weka.core.stemmers.LovinsStemmer",
157:       "weka.classifiers.Evaluation",
158:       "weka.classifiers.functions.supportVector.Kernel",
159:       "weka.core.WekaPackageManager",
160:       "weka.filters.SupervisedFilter",
161:       "weka.core.TechnicalInformationHandler",
162:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
163:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
164:       "weka.core.Option",
165:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
166:       "weka.core.neighboursearch.PerformanceStats",
167:       "weka.filters.Sourcable",
168:       "weka.core.Attribute",
169:       "weka.core.Stopwords",
170:       "weka.core.FastVector",
171:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
172:       "weka.core.tokenizers.NGramTokenizer",
173:       "weka.core.UnassignedDatasetException",
174:       "weka.classifiers.functions.supportVector.RegSMOImproved",
175:       "weka.classifiers.RandomizableClassifier",
176:       "weka.core.RevisionUtils",
177:       "weka.core.Instance",
178:       "weka.classifiers.functions.supportVector.RegSMO",
179:       "weka.classifiers.functions.supportVector.PolyKernel",
180:       "weka.estimators.Estimator",
181:       "weka.core.ProtectedProperties",
182:       "weka.core.StringLocator",
183:       "weka.classifiers.bayes.net.ADNode",
184:       "weka.core.AttributeStats",
185:       "weka.core.WeightedInstancesHandler",
186:       "weka.core.neighboursearch.NearestNeighbourSearch",
187:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
188:       "weka.core.Javadoc",
189:       "weka.core.Randomizable",
190:       "weka.core.EuclideanDistance",
191:       "weka.core.Instances",
192:       "weka.filters.unsupervised.attribute.Normalize",
193:       "weka.core.UnassignedClassException",
194:       "weka.classifiers.bayes.net.BIFReader",
195:       "weka.classifiers.bayes.net.ParentSet",
196:       "weka.core.stemmers.IteratedLovinsStemmer",
197:       "weka.filters.unsupervised.attribute.Standardize",
198:       "weka.core.TechnicalInformation",
199:       "weka.core.UnsupportedAttributeTypeException",
200:       "weka.classifiers.Sourcable",
201:       "weka.core.RevisionHandler",
202:       "weka.classifiers.evaluation.output.prediction.PlainText",
203:       "weka.core.xml.XMLSerialization",
204:       "weka.core.neighboursearch.TreePerformanceStats",
205:       "weka.classifiers.xml.XMLClassifier",
206:       "weka.filters.Filter",
207:       "weka.filters.supervised.attribute.Discretize"
208:     );
209:   } 
210: 
211:   private static void resetClasses() {
212:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_42_tmp__ESTest_scaffolding.class.getClassLoader()); 
213: 
214:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
215:       "weka.classifiers.AbstractClassifier",
216:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
218:       "weka.core.Capabilities$Capability",
219:       "weka.core.tokenizers.Tokenizer",
220:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
221:       "weka.core.tokenizers.WordTokenizer",
222:       "weka.core.stemmers.NullStemmer",
223:       "weka.core.Utils",
224:       "weka.attributeSelection.ASEvaluation",
225:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
226:       "weka.attributeSelection.PrincipalComponents",
227:       "weka.classifiers.Evaluation",
228:       "weka.core.Option",
229:       "weka.core.AbstractInstance",
230:       "weka.core.SparseInstance",
231:       "weka.core.UnassignedDatasetException",
232:       "weka.classifiers.bayes.NaiveBayes",
233:       "weka.core.Capabilities",
234:       "org.pentaho.packageManagement.PackageManager",
235:       "org.pentaho.packageManagement.DefaultPackageManager",
236:       "weka.core.Version",
237:       "weka.core.Environment",
238:       "weka.core.WekaPackageManager",
239:       "weka.classifiers.bayes.BayesNet",
240:       "weka.classifiers.bayes.net.BIFReader",
241:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
242:       "weka.core.Tag",
243:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
244:       "weka.classifiers.bayes.net.search.local.K2",
245:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
246:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
247:       "weka.classifiers.SingleClassifierEnhancer",
248:       "weka.classifiers.misc.InputMappedClassifier",
249:       "weka.classifiers.rules.ZeroR",
250:       "weka.core.neighboursearch.NearestNeighbourSearch",
251:       "weka.core.neighboursearch.KDTree",
252:       "weka.core.NormalizableDistance",
253:       "weka.core.EuclideanDistance",
254:       "weka.core.Range",
255:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
256:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
257:       "weka.core.DenseInstance",
258:       "weka.filters.Filter",
259:       "weka.filters.supervised.attribute.Discretize",
260:       "weka.core.BinarySparseInstance",
261:       "weka.core.SerializedObject",
262:       "weka.core.neighboursearch.CoverTree",
263:       "weka.core.neighboursearch.BallTree",
264:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
265:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
266:       "weka.core.neighboursearch.balltrees.BallSplitter",
267:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
268:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
269:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
270:       "weka.core.stemmers.LovinsStemmer",
271:       "weka.core.stemmers.IteratedLovinsStemmer",
272:       "weka.core.TechnicalInformation",
273:       "weka.core.TechnicalInformation$Type",
274:       "weka.core.TechnicalInformation$Field",
275:       "weka.classifiers.functions.supportVector.Kernel",
276:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
277:       "weka.core.Stopwords",
278:       "weka.core.RevisionUtils",
279:       "weka.classifiers.RandomizableClassifier",
280:       "weka.classifiers.functions.SGDText",
281:       "weka.core.Instances",
282:       "weka.core.TestInstances",
283:       "weka.classifiers.lazy.KStar",
284:       "weka.core.SelectedTag",
285:       "weka.core.Javadoc",
286:       "weka.core.OptionHandlerJavadoc",
287:       "weka.core.WekaException",
288:       "weka.core.stemmers.Stemming",
289:       "weka.core.converters.ArffLoader$ArffReader",
290:       "weka.classifiers.lazy.IBk",
291:       "weka.core.neighboursearch.LinearNNSearch",
292:       "weka.classifiers.bayes.NaiveBayesMultinomial",
293:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
294:       "weka.classifiers.meta.CostSensitiveClassifier",
295:       "weka.classifiers.CostMatrix",
296:       "weka.core.Attribute",
297:       "weka.core.ProtectedProperties",
298:       "weka.core.WekaEnumeration",
299:       "weka.core.Attribute$1",
300:       "weka.core.neighboursearch.balltrees.BallNode",
301:       "weka.classifiers.lazy.LWL",
302:       "weka.classifiers.trees.DecisionStump",
303:       "weka.core.tokenizers.NGramTokenizer",
304:       "weka.classifiers.trees.m5.M5Base",
305:       "weka.classifiers.rules.M5Rules",
306:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
307:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
308:       "weka.classifiers.trees.REPTree",
309:       "weka.core.stemmers.SnowballStemmer",
310:       "weka.core.FindWithCapabilities",
311:       "weka.core.SingleIndex",
312:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
313:       "weka.estimators.Estimator",
314:       "weka.estimators.NormalEstimator",
315:       "weka.classifiers.MultipleClassifiersCombiner",
316:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
317:       "weka.classifiers.meta.Vote",
318:       "weka.classifiers.misc.SerializedClassifier",
319:       "weka.classifiers.functions.LinearRegression",
320:       "weka.core.UnsupportedAttributeTypeException",
321:       "weka.attributeSelection.InfoGainAttributeEval",
322:       "weka.attributeSelection.GainRatioAttributeEval",
323:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
324:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
325:       "weka.classifiers.meta.Stacking",
326:       "weka.classifiers.functions.SMOreg",
327:       "weka.classifiers.functions.supportVector.RegOptimizer",
328:       "weka.classifiers.functions.supportVector.RegSMO",
329:       "weka.classifiers.functions.supportVector.RegSMOImproved",
330:       "weka.classifiers.functions.supportVector.CachedKernel",
331:       "weka.classifiers.functions.supportVector.PolyKernel",
332:       "weka.core.matrix.Matrix",
333:       "weka.classifiers.trees.RandomTree",
334:       "weka.core.tokenizers.AlphabeticTokenizer",
335:       "weka.attributeSelection.OneRAttributeEval",
336:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
337:       "weka.classifiers.IteratedSingleClassifierEnhancer",
338:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
339:       "weka.classifiers.meta.LogitBoost",
340:       "weka.classifiers.meta.RegressionByDiscretization",
341:       "weka.filters.unsupervised.attribute.Discretize",
342:       "weka.classifiers.trees.J48",
343:       "weka.classifiers.trees.j48.ClassifierTree",
344:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
345:       "weka.classifiers.rules.JRip",
346:       "weka.classifiers.rules.PART",
347:       "weka.classifiers.rules.part.MakeDecList",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.trees.RandomForest",
351:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
352:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
353:       "weka.classifiers.meta.Bagging",
354:       "weka.filters.AllFilter",
355:       "weka.attributeSelection.ReliefFAttributeEval",
356:       "weka.classifiers.functions.SGD",
357:       "weka.classifiers.functions.VotedPerceptron",
358:       "weka.attributeSelection.CfsSubsetEval",
359:       "weka.classifiers.meta.FilteredClassifier",
360:       "weka.filters.supervised.attribute.AttributeSelection",
361:       "weka.attributeSelection.AttributeSelection",
362:       "weka.attributeSelection.ASSearch",
363:       "weka.attributeSelection.GreedyStepwise",
364:       "weka.attributeSelection.BestFirst",
365:       "weka.classifiers.functions.MultilayerPerceptron",
366:       "weka.filters.unsupervised.attribute.NominalToBinary",
367:       "weka.classifiers.functions.neural.SigmoidUnit",
368:       "weka.classifiers.functions.neural.LinearUnit",
369:       "weka.classifiers.rules.DecisionTable",
370:       "weka.classifiers.rules.OneR",
371:       "weka.core.AttributeStats",
372:       "weka.experiment.Stats",
373:       "weka.filters.SimpleFilter",
374:       "weka.filters.SimpleStreamFilter",
375:       "weka.filters.MultiFilter",
376:       "weka.classifiers.trees.LMT",
377:       "weka.classifiers.meta.MultiScheme",
378:       "weka.estimators.DiscreteEstimator",
379:       "weka.classifiers.meta.RandomCommittee",
380:       "weka.estimators.PoissonEstimator",
381:       "weka.classifiers.functions.Logistic",
382:       "weka.classifiers.meta.AdaBoostM1",
383:       "weka.classifiers.meta.AttributeSelectedClassifier",
384:       "weka.classifiers.functions.supportVector.StringKernel",
385:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
386:       "weka.core.UnassignedClassException",
387:       "weka.attributeSelection.WrapperSubsetEval",
388:       "weka.classifiers.meta.AdditiveRegression",
389:       "weka.classifiers.meta.MultiClassClassifier",
390:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
391:       "weka.classifiers.functions.supportVector.Puk",
392:       "weka.classifiers.functions.GaussianProcesses",
393:       "weka.classifiers.functions.SimpleLogistic",
394:       "weka.classifiers.functions.SimpleLinearRegression",
395:       "weka.classifiers.functions.supportVector.RBFKernel",
396:       "weka.core.neighboursearch.PerformanceStats",
397:       "weka.estimators.KernelEstimator",
398:       "weka.attributeSelection.CorrelationAttributeEval",
399:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
400:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
401:       "weka.classifiers.functions.SMO",
402:       "weka.core.ChebyshevDistance",
403:       "weka.core.Queue",
404:       "weka.core.AttributeLocator",
405:       "weka.core.StringLocator",
406:       "weka.core.RelationalLocator",
407:       "weka.core.ContingencyTables",
408:       "weka.core.Queue$QueueNode",
409:       "weka.classifiers.meta.CVParameterSelection$CVParameter",
410:       "weka.classifiers.meta.RandomSubSpace",
411:       "weka.core.ClassDiscovery",
412:       "weka.classifiers.meta.ClassificationViaRegression",
413:       "weka.classifiers.trees.M5P",
414:       "weka.core.ListOptions",
415:       "weka.classifiers.bayes.NaiveBayesUpdateable",
416:       "weka.core.converters.ConverterUtils$DataSource",
417:       "weka.core.converters.AbstractLoader",
418:       "weka.core.converters.AbstractFileLoader",
419:       "weka.core.converters.ArffLoader",
420:       "weka.core.SerializationHelper",
421:       "weka.core.ClassCache",
422:       "weka.core.AllJavadoc",
423:       "weka.core.GlobalInfoJavadoc",
424:       "weka.core.neighboursearch.TreePerformanceStats",
425:       "weka.core.ManhattanDistance",
426:       "weka.estimators.MahalanobisEstimator",
427:       "weka.core.MinkowskiDistance",
428:       "weka.core.Check",
429:       "weka.core.CheckOptionHandler"
430:     );
431:   }
432: }

[MASTER] 01:11:59.885 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_t = (-1.0);
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
int int0 = naiveBayesMultinomialText0.m_periodicP;
naiveBayesMultinomialText0.setPeriodicPruning(1278);
naiveBayesMultinomialText0.normalizeDocLengthTipText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.pruneDictionary();
assertEquals(1278, naiveBayesMultinomialText0.getPeriodicPruning());


[MASTER] 01:12:00.236 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_51_1573693920195/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_51_1573693920195/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding.java]]
[MASTER] 01:12:00.237 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:12:00.237 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:12:00.237 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 01:12:00.237 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 01:12:00.237 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 01:12:00.237 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 01:12:00.238 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 01:12:00.239 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_51_1573693920195/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Nov 14 01:12:00 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_51_tmp__ESTest extends NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=1.543056733112554
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
28:       naiveBayesMultinomialText0.m_minWordP = (-1.0);
29:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
30:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
31:       linkedHashMap0.putIfAbsent((Integer) null, linkedHashMap1);
32:       naiveBayesMultinomialText0.setPeriodicPruning(17);
33:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
34:       naiveBayesMultinomialText0.pruneDictionary();
35:       assertEquals(17, naiveBayesMultinomialText0.getPeriodicPruning());
36:   }
37: }
RegularFileObject[/tmp/EvoSuite_51_1573693920195/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Nov 14 01:12:00 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.bayes.net.search.local.K2",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.core.stemmers.Stemmer",
101:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.estimators.IncrementalEstimator",
105:       "weka.estimators.Estimator$Builder",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.classifiers.functions.SGDText",
108:       "weka.core.RelationalLocator",
109:       "weka.core.Utils",
110:       "weka.core.CustomDisplayStringProvider",
111:       "weka.core.tokenizers.Tokenizer",
112:       "weka.core.NormalizableDistance",
113:       "weka.classifiers.functions.SMOreg",
114:       "weka.core.NoSupportForMissingValuesException",
115:       "weka.classifiers.UpdateableClassifier",
116:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
117:       "weka.core.MultiInstanceCapabilitiesHandler",
118:       "weka.core.Copyable",
119:       "weka.core.Capabilities",
120:       "weka.core.AttributeLocator",
121:       "weka.core.BinarySparseInstance",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
123:       "weka.classifiers.functions.supportVector.CachedKernel",
124:       "weka.core.SerializedObject",
125:       "weka.clusterers.UpdateableClusterer",
126:       "weka.core.Summarizable",
127:       "weka.core.AdditionalMeasureProducer",
128:       "org.pentaho.packageManagement.PackageManager$1",
129:       "weka.core.OptionHandlerJavadoc",
130:       "weka.core.Drawable",
131:       "weka.core.matrix.Matrix",
132:       "weka.core.CapabilitiesHandler",
133:       "weka.core.AbstractInstance",
134:       "weka.core.scripting.JythonObject",
135:       "weka.classifiers.functions.supportVector.RegOptimizer",
136:       "weka.core.SelectedTag",
137:       "org.pentaho.packageManagement.DefaultPackage",
138:       "weka.classifiers.bayes.BayesNet",
139:       "weka.core.Version",
140:       "weka.filters.AllFilter",
141:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
142:       "weka.core.Tag",
143:       "weka.core.neighboursearch.CoverTree",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.core.OptionHandler",
146:       "weka.core.WekaException",
147:       "weka.core.Range",
148:       "weka.core.scripting.JythonSerializableObject",
149:       "weka.classifiers.Classifier",
150:       "weka.core.Capabilities$Capability",
151:       "weka.core.SparseInstance",
152:       "org.pentaho.packageManagement.PackageManager",
153:       "weka.estimators.PoissonEstimator",
154:       "weka.core.tokenizers.WordTokenizer",
155:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
156:       "weka.core.stemmers.LovinsStemmer",
157:       "weka.classifiers.Evaluation",
158:       "weka.classifiers.functions.supportVector.Kernel",
159:       "weka.core.WekaPackageManager",
160:       "weka.filters.SupervisedFilter",
161:       "weka.core.TechnicalInformationHandler",
162:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
163:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
164:       "weka.core.Option",
165:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
166:       "weka.core.neighboursearch.PerformanceStats",
167:       "weka.filters.Sourcable",
168:       "weka.core.Attribute",
169:       "weka.core.Stopwords",
170:       "weka.core.FastVector",
171:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
172:       "weka.core.tokenizers.NGramTokenizer",
173:       "weka.core.UnassignedDatasetException",
174:       "weka.classifiers.functions.supportVector.RegSMOImproved",
175:       "weka.classifiers.RandomizableClassifier",
176:       "weka.core.RevisionUtils",
177:       "weka.core.Instance",
178:       "weka.classifiers.functions.supportVector.RegSMO",
179:       "weka.classifiers.functions.supportVector.PolyKernel",
180:       "weka.estimators.Estimator",
181:       "weka.core.ProtectedProperties",
182:       "weka.core.StringLocator",
183:       "weka.classifiers.bayes.net.ADNode",
184:       "weka.core.AttributeStats",
185:       "weka.core.WeightedInstancesHandler",
186:       "weka.core.neighboursearch.NearestNeighbourSearch",
187:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
188:       "weka.core.Javadoc",
189:       "weka.core.Randomizable",
190:       "weka.core.EuclideanDistance",
191:       "weka.core.Instances",
192:       "weka.filters.unsupervised.attribute.Normalize",
193:       "weka.core.UnassignedClassException",
194:       "weka.classifiers.bayes.net.BIFReader",
195:       "weka.classifiers.bayes.net.ParentSet",
196:       "weka.core.stemmers.IteratedLovinsStemmer",
197:       "weka.filters.unsupervised.attribute.Standardize",
198:       "weka.core.TechnicalInformation",
199:       "weka.core.UnsupportedAttributeTypeException",
200:       "weka.classifiers.Sourcable",
201:       "weka.core.RevisionHandler",
202:       "weka.classifiers.evaluation.output.prediction.PlainText",
203:       "weka.core.xml.XMLSerialization",
204:       "weka.core.neighboursearch.TreePerformanceStats",
205:       "weka.classifiers.xml.XMLClassifier",
206:       "weka.filters.Filter",
207:       "weka.filters.supervised.attribute.Discretize"
208:     );
209:   } 
210: 
211:   private static void resetClasses() {
212:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding.class.getClassLoader()); 
213: 
214:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
215:       "weka.classifiers.AbstractClassifier",
216:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
218:       "weka.core.Capabilities$Capability",
219:       "weka.core.tokenizers.Tokenizer",
220:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
221:       "weka.core.tokenizers.WordTokenizer",
222:       "weka.core.stemmers.NullStemmer",
223:       "weka.core.Utils",
224:       "weka.attributeSelection.ASEvaluation",
225:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
226:       "weka.attributeSelection.PrincipalComponents",
227:       "weka.classifiers.Evaluation",
228:       "weka.core.Option",
229:       "weka.core.AbstractInstance",
230:       "weka.core.SparseInstance",
231:       "weka.core.UnassignedDatasetException",
232:       "weka.classifiers.bayes.NaiveBayes",
233:       "weka.core.Capabilities",
234:       "org.pentaho.packageManagement.PackageManager",
235:       "org.pentaho.packageManagement.DefaultPackageManager",
236:       "weka.core.Version",
237:       "weka.core.Environment",
238:       "weka.core.WekaPackageManager",
239:       "weka.classifiers.bayes.BayesNet",
240:       "weka.classifiers.bayes.net.BIFReader",
241:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
242:       "weka.core.Tag",
243:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
244:       "weka.classifiers.bayes.net.search.local.K2",
245:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
246:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
247:       "weka.classifiers.SingleClassifierEnhancer",
248:       "weka.classifiers.misc.InputMappedClassifier",
249:       "weka.classifiers.rules.ZeroR",
250:       "weka.core.neighboursearch.NearestNeighbourSearch",
251:       "weka.core.neighboursearch.KDTree",
252:       "weka.core.NormalizableDistance",
253:       "weka.core.EuclideanDistance",
254:       "weka.core.Range",
255:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
256:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
257:       "weka.core.DenseInstance",
258:       "weka.filters.Filter",
259:       "weka.filters.supervised.attribute.Discretize",
260:       "weka.core.BinarySparseInstance",
261:       "weka.core.SerializedObject",
262:       "weka.core.neighboursearch.CoverTree",
263:       "weka.core.neighboursearch.BallTree",
264:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
265:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
266:       "weka.core.neighboursearch.balltrees.BallSplitter",
267:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
268:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
269:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
270:       "weka.core.stemmers.LovinsStemmer",
271:       "weka.core.stemmers.IteratedLovinsStemmer",
272:       "weka.core.TechnicalInformation",
273:       "weka.core.TechnicalInformation$Type",
274:       "weka.core.TechnicalInformation$Field",
275:       "weka.classifiers.functions.supportVector.Kernel",
276:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
277:       "weka.core.Stopwords",
278:       "weka.core.RevisionUtils",
279:       "weka.classifiers.RandomizableClassifier",
280:       "weka.classifiers.functions.SGDText",
281:       "weka.core.Instances",
282:       "weka.core.TestInstances",
283:       "weka.classifiers.lazy.KStar",
284:       "weka.core.SelectedTag",
285:       "weka.core.Javadoc",
286:       "weka.core.OptionHandlerJavadoc",
287:       "weka.core.WekaException",
288:       "weka.core.stemmers.Stemming",
289:       "weka.core.converters.ArffLoader$ArffReader",
290:       "weka.classifiers.lazy.IBk",
291:       "weka.core.neighboursearch.LinearNNSearch",
292:       "weka.classifiers.bayes.NaiveBayesMultinomial",
293:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
294:       "weka.classifiers.meta.CostSensitiveClassifier",
295:       "weka.classifiers.CostMatrix",
296:       "weka.core.Attribute",
297:       "weka.core.ProtectedProperties",
298:       "weka.core.WekaEnumeration",
299:       "weka.core.Attribute$1",
300:       "weka.core.neighboursearch.balltrees.BallNode",
301:       "weka.classifiers.lazy.LWL",
302:       "weka.classifiers.trees.DecisionStump",
303:       "weka.core.tokenizers.NGramTokenizer",
304:       "weka.classifiers.trees.m5.M5Base",
305:       "weka.classifiers.rules.M5Rules",
306:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
307:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
308:       "weka.classifiers.trees.REPTree",
309:       "weka.core.stemmers.SnowballStemmer",
310:       "weka.core.FindWithCapabilities",
311:       "weka.core.SingleIndex",
312:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
313:       "weka.estimators.Estimator",
314:       "weka.estimators.NormalEstimator",
315:       "weka.classifiers.MultipleClassifiersCombiner",
316:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
317:       "weka.classifiers.meta.Vote",
318:       "weka.classifiers.misc.SerializedClassifier",
319:       "weka.classifiers.functions.LinearRegression",
320:       "weka.core.UnsupportedAttributeTypeException",
321:       "weka.attributeSelection.InfoGainAttributeEval",
322:       "weka.attributeSelection.GainRatioAttributeEval",
323:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
324:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
325:       "weka.classifiers.meta.Stacking",
326:       "weka.classifiers.functions.SMOreg",
327:       "weka.classifiers.functions.supportVector.RegOptimizer",
328:       "weka.classifiers.functions.supportVector.RegSMO",
329:       "weka.classifiers.functions.supportVector.RegSMOImproved",
330:       "weka.classifiers.functions.supportVector.CachedKernel",
331:       "weka.classifiers.functions.supportVector.PolyKernel",
332:       "weka.core.matrix.Matrix",
333:       "weka.classifiers.trees.RandomTree",
334:       "weka.core.tokenizers.AlphabeticTokenizer",
335:       "weka.attributeSelection.OneRAttributeEval",
336:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
337:       "weka.classifiers.IteratedSingleClassifierEnhancer",
338:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
339:       "weka.classifiers.meta.LogitBoost",
340:       "weka.classifiers.meta.RegressionByDiscretization",
341:       "weka.filters.unsupervised.attribute.Discretize",
342:       "weka.classifiers.trees.J48",
343:       "weka.classifiers.trees.j48.ClassifierTree",
344:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
345:       "weka.classifiers.rules.JRip",
346:       "weka.classifiers.rules.PART",
347:       "weka.classifiers.rules.part.MakeDecList",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.trees.RandomForest",
351:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
352:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
353:       "weka.classifiers.meta.Bagging",
354:       "weka.filters.AllFilter",
355:       "weka.attributeSelection.ReliefFAttributeEval",
356:       "weka.classifiers.functions.SGD",
357:       "weka.classifiers.functions.VotedPerceptron",
358:       "weka.attributeSelection.CfsSubsetEval",
359:       "weka.classifiers.meta.FilteredClassifier",
360:       "weka.filters.supervised.attribute.AttributeSelection",
361:       "weka.attributeSelection.AttributeSelection",
362:       "weka.attributeSelection.ASSearch",
363:       "weka.attributeSelection.GreedyStepwise",
364:       "weka.attributeSelection.BestFirst",
365:       "weka.classifiers.functions.MultilayerPerceptron",
366:       "weka.filters.unsupervised.attribute.NominalToBinary",
367:       "weka.classifiers.functions.neural.SigmoidUnit",
368:       "weka.classifiers.functions.neural.LinearUnit",
369:       "weka.classifiers.rules.DecisionTable",
370:       "weka.classifiers.rules.OneR",
371:       "weka.core.AttributeStats",
372:       "weka.experiment.Stats",
373:       "weka.filters.SimpleFilter",
374:       "weka.filters.SimpleStreamFilter",
375:       "weka.filters.MultiFilter",
376:       "weka.classifiers.trees.LMT",
377:       "weka.classifiers.meta.MultiScheme",
378:       "weka.estimators.DiscreteEstimator",
379:       "weka.classifiers.meta.RandomCommittee",
380:       "weka.estimators.PoissonEstimator",
381:       "weka.classifiers.functions.Logistic",
382:       "weka.classifiers.meta.AdaBoostM1",
383:       "weka.classifiers.meta.AttributeSelectedClassifier",
384:       "weka.classifiers.functions.supportVector.StringKernel",
385:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
386:       "weka.core.UnassignedClassException",
387:       "weka.attributeSelection.WrapperSubsetEval",
388:       "weka.classifiers.meta.AdditiveRegression",
389:       "weka.classifiers.meta.MultiClassClassifier",
390:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
391:       "weka.classifiers.functions.supportVector.Puk",
392:       "weka.classifiers.functions.GaussianProcesses",
393:       "weka.classifiers.functions.SimpleLogistic",
394:       "weka.classifiers.functions.SimpleLinearRegression",
395:       "weka.classifiers.functions.supportVector.RBFKernel",
396:       "weka.core.neighboursearch.PerformanceStats",
397:       "weka.estimators.KernelEstimator",
398:       "weka.attributeSelection.CorrelationAttributeEval",
399:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
400:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
401:       "weka.classifiers.functions.SMO",
402:       "weka.core.ChebyshevDistance",
403:       "weka.core.Queue",
404:       "weka.core.AttributeLocator",
405:       "weka.core.StringLocator",
406:       "weka.core.RelationalLocator",
407:       "weka.core.ContingencyTables",
408:       "weka.core.Queue$QueueNode",
409:       "weka.classifiers.meta.CVParameterSelection$CVParameter",
410:       "weka.classifiers.meta.RandomSubSpace",
411:       "weka.core.ClassDiscovery",
412:       "weka.classifiers.meta.ClassificationViaRegression",
413:       "weka.classifiers.trees.M5P",
414:       "weka.core.ListOptions",
415:       "weka.classifiers.bayes.NaiveBayesUpdateable",
416:       "weka.core.converters.ConverterUtils$DataSource",
417:       "weka.core.converters.AbstractLoader",
418:       "weka.core.converters.AbstractFileLoader",
419:       "weka.core.converters.ArffLoader",
420:       "weka.core.SerializationHelper",
421:       "weka.core.ClassCache",
422:       "weka.core.AllJavadoc",
423:       "weka.core.GlobalInfoJavadoc",
424:       "weka.core.neighboursearch.TreePerformanceStats",
425:       "weka.core.ManhattanDistance",
426:       "weka.estimators.MahalanobisEstimator",
427:       "weka.core.MinkowskiDistance",
428:       "weka.core.Check",
429:       "weka.core.CheckOptionHandler"
430:     );
431:   }
432: }

[MASTER] 01:12:00.239 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_minWordP = (-1.0);
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.putIfAbsent((Integer) null, linkedHashMap1);
naiveBayesMultinomialText0.setPeriodicPruning(17);
naiveBayesMultinomialText0.normalizeDocLengthTipText();
naiveBayesMultinomialText0.pruneDictionary();
assertEquals(17, naiveBayesMultinomialText0.getPeriodicPruning());


[MASTER] 01:12:01.050 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_73_1573693921014/weka/classifiers/bayes/NaiveBayesMultinomialText_73_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_73_1573693921014/weka/classifiers/bayes/NaiveBayesMultinomialText_73_tmp__ESTest_scaffolding.java]]
[MASTER] 01:12:01.050 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:12:01.050 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:12:01.050 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 01:12:01.050 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 01:12:01.050 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 01:12:01.051 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 01:12:01.051 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 01:12:01.051 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_73_1573693921014/weka/classifiers/bayes/NaiveBayesMultinomialText_73_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Nov 14 01:12:01 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.classifiers.functions.SGDText;
17: import weka.core.Capabilities;
18: import weka.core.Instances;
19: import weka.core.TestInstances;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_73_tmp__ESTest extends NaiveBayesMultinomialText_73_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=2.5775404009954253
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
32:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
33:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
34:       linkedHashMap0.putIfAbsent((Integer) null, linkedHashMap1);
35:       naiveBayesMultinomialText0.setPeriodicPruning(17);
36:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
37:       SGDText sGDText0 = new SGDText();
38:       sGDText0.setSeed(2199);
39:       SGDText sGDText1 = new SGDText();
40:       Capabilities capabilities0 = sGDText1.getCapabilities();
41:       TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
42:       Instances instances0 = testInstances0.generate();
43:       naiveBayesMultinomialText0.buildClassifier(instances0);
44:       naiveBayesMultinomialText0.stopwordsTipText();
45:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
46:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
47:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
48:   }
49: }
RegularFileObject[/tmp/EvoSuite_73_1573693921014/weka/classifiers/bayes/NaiveBayesMultinomialText_73_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Nov 14 01:12:01 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_73_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_73_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.bayes.net.search.local.K2",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.core.stemmers.Stemmer",
101:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.estimators.IncrementalEstimator",
105:       "weka.estimators.Estimator$Builder",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.classifiers.functions.SGDText",
108:       "weka.core.RelationalLocator",
109:       "weka.core.Utils",
110:       "weka.core.CustomDisplayStringProvider",
111:       "weka.core.tokenizers.Tokenizer",
112:       "weka.core.NormalizableDistance",
113:       "weka.classifiers.functions.SMOreg",
114:       "weka.core.NoSupportForMissingValuesException",
115:       "weka.classifiers.UpdateableClassifier",
116:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
117:       "weka.core.MultiInstanceCapabilitiesHandler",
118:       "weka.core.Copyable",
119:       "weka.core.Capabilities",
120:       "weka.core.AttributeLocator",
121:       "weka.core.BinarySparseInstance",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
123:       "weka.classifiers.functions.supportVector.CachedKernel",
124:       "weka.core.SerializedObject",
125:       "weka.clusterers.UpdateableClusterer",
126:       "weka.core.Summarizable",
127:       "weka.core.AdditionalMeasureProducer",
128:       "org.pentaho.packageManagement.PackageManager$1",
129:       "weka.core.OptionHandlerJavadoc",
130:       "weka.core.Drawable",
131:       "weka.core.matrix.Matrix",
132:       "weka.core.CapabilitiesHandler",
133:       "weka.core.AbstractInstance",
134:       "weka.core.scripting.JythonObject",
135:       "weka.classifiers.functions.supportVector.RegOptimizer",
136:       "weka.core.SelectedTag",
137:       "org.pentaho.packageManagement.DefaultPackage",
138:       "weka.classifiers.bayes.BayesNet",
139:       "weka.core.Version",
140:       "weka.filters.AllFilter",
141:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
142:       "weka.core.Tag",
143:       "weka.core.neighboursearch.CoverTree",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.core.OptionHandler",
146:       "weka.core.WekaException",
147:       "weka.core.Range",
148:       "weka.core.scripting.JythonSerializableObject",
149:       "weka.classifiers.Classifier",
150:       "weka.core.Capabilities$Capability",
151:       "weka.core.SparseInstance",
152:       "org.pentaho.packageManagement.PackageManager",
153:       "weka.estimators.PoissonEstimator",
154:       "weka.core.tokenizers.WordTokenizer",
155:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
156:       "weka.core.stemmers.LovinsStemmer",
157:       "weka.classifiers.Evaluation",
158:       "weka.classifiers.functions.supportVector.Kernel",
159:       "weka.core.WekaPackageManager",
160:       "weka.filters.SupervisedFilter",
161:       "weka.core.TechnicalInformationHandler",
162:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
163:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
164:       "weka.core.Option",
165:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
166:       "weka.core.neighboursearch.PerformanceStats",
167:       "weka.filters.Sourcable",
168:       "weka.core.Attribute",
169:       "weka.core.Stopwords",
170:       "weka.core.FastVector",
171:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
172:       "weka.core.tokenizers.NGramTokenizer",
173:       "weka.core.UnassignedDatasetException",
174:       "weka.classifiers.functions.supportVector.RegSMOImproved",
175:       "weka.classifiers.RandomizableClassifier",
176:       "weka.core.RevisionUtils",
177:       "weka.core.Instance",
178:       "weka.classifiers.functions.supportVector.RegSMO",
179:       "weka.classifiers.functions.supportVector.PolyKernel",
180:       "weka.estimators.Estimator",
181:       "weka.core.ProtectedProperties",
182:       "weka.core.StringLocator",
183:       "weka.classifiers.bayes.net.ADNode",
184:       "weka.core.AttributeStats",
185:       "weka.core.WeightedInstancesHandler",
186:       "weka.core.neighboursearch.NearestNeighbourSearch",
187:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
188:       "weka.core.Javadoc",
189:       "weka.core.Randomizable",
190:       "weka.core.EuclideanDistance",
191:       "weka.core.Instances",
192:       "weka.filters.unsupervised.attribute.Normalize",
193:       "weka.core.UnassignedClassException",
194:       "weka.classifiers.bayes.net.BIFReader",
195:       "weka.classifiers.bayes.net.ParentSet",
196:       "weka.core.stemmers.IteratedLovinsStemmer",
197:       "weka.filters.unsupervised.attribute.Standardize",
198:       "weka.core.TechnicalInformation",
199:       "weka.core.UnsupportedAttributeTypeException",
200:       "weka.classifiers.Sourcable",
201:       "weka.core.RevisionHandler",
202:       "weka.classifiers.evaluation.output.prediction.PlainText",
203:       "weka.core.xml.XMLSerialization",
204:       "weka.core.neighboursearch.TreePerformanceStats",
205:       "weka.classifiers.xml.XMLClassifier",
206:       "weka.filters.Filter",
207:       "weka.filters.supervised.attribute.Discretize"
208:     );
209:   } 
210: 
211:   private static void resetClasses() {
212:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_73_tmp__ESTest_scaffolding.class.getClassLoader()); 
213: 
214:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
215:       "weka.classifiers.AbstractClassifier",
216:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
218:       "weka.core.Capabilities$Capability",
219:       "weka.core.tokenizers.Tokenizer",
220:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
221:       "weka.core.tokenizers.WordTokenizer",
222:       "weka.core.stemmers.NullStemmer",
223:       "weka.core.Utils",
224:       "weka.attributeSelection.ASEvaluation",
225:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
226:       "weka.attributeSelection.PrincipalComponents",
227:       "weka.classifiers.Evaluation",
228:       "weka.core.Option",
229:       "weka.core.AbstractInstance",
230:       "weka.core.SparseInstance",
231:       "weka.core.UnassignedDatasetException",
232:       "weka.classifiers.bayes.NaiveBayes",
233:       "weka.core.Capabilities",
234:       "org.pentaho.packageManagement.PackageManager",
235:       "org.pentaho.packageManagement.DefaultPackageManager",
236:       "weka.core.Version",
237:       "weka.core.Environment",
238:       "weka.core.WekaPackageManager",
239:       "weka.classifiers.bayes.BayesNet",
240:       "weka.classifiers.bayes.net.BIFReader",
241:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
242:       "weka.core.Tag",
243:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
244:       "weka.classifiers.bayes.net.search.local.K2",
245:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
246:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
247:       "weka.classifiers.SingleClassifierEnhancer",
248:       "weka.classifiers.misc.InputMappedClassifier",
249:       "weka.classifiers.rules.ZeroR",
250:       "weka.core.neighboursearch.NearestNeighbourSearch",
251:       "weka.core.neighboursearch.KDTree",
252:       "weka.core.NormalizableDistance",
253:       "weka.core.EuclideanDistance",
254:       "weka.core.Range",
255:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
256:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
257:       "weka.core.DenseInstance",
258:       "weka.filters.Filter",
259:       "weka.filters.supervised.attribute.Discretize",
260:       "weka.core.BinarySparseInstance",
261:       "weka.core.SerializedObject",
262:       "weka.core.neighboursearch.CoverTree",
263:       "weka.core.neighboursearch.BallTree",
264:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
265:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
266:       "weka.core.neighboursearch.balltrees.BallSplitter",
267:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
268:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
269:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
270:       "weka.core.stemmers.LovinsStemmer",
271:       "weka.core.stemmers.IteratedLovinsStemmer",
272:       "weka.core.TechnicalInformation",
273:       "weka.core.TechnicalInformation$Type",
274:       "weka.core.TechnicalInformation$Field",
275:       "weka.classifiers.functions.supportVector.Kernel",
276:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
277:       "weka.core.Stopwords",
278:       "weka.core.RevisionUtils",
279:       "weka.classifiers.RandomizableClassifier",
280:       "weka.classifiers.functions.SGDText",
281:       "weka.core.Instances",
282:       "weka.core.TestInstances",
283:       "weka.classifiers.lazy.KStar",
284:       "weka.core.SelectedTag",
285:       "weka.core.Javadoc",
286:       "weka.core.OptionHandlerJavadoc",
287:       "weka.core.WekaException",
288:       "weka.core.stemmers.Stemming",
289:       "weka.core.converters.ArffLoader$ArffReader",
290:       "weka.classifiers.lazy.IBk",
291:       "weka.core.neighboursearch.LinearNNSearch",
292:       "weka.classifiers.bayes.NaiveBayesMultinomial",
293:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
294:       "weka.classifiers.meta.CostSensitiveClassifier",
295:       "weka.classifiers.CostMatrix",
296:       "weka.core.Attribute",
297:       "weka.core.ProtectedProperties",
298:       "weka.core.WekaEnumeration",
299:       "weka.core.Attribute$1",
300:       "weka.core.neighboursearch.balltrees.BallNode",
301:       "weka.classifiers.lazy.LWL",
302:       "weka.classifiers.trees.DecisionStump",
303:       "weka.core.tokenizers.NGramTokenizer",
304:       "weka.classifiers.trees.m5.M5Base",
305:       "weka.classifiers.rules.M5Rules",
306:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
307:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
308:       "weka.classifiers.trees.REPTree",
309:       "weka.core.stemmers.SnowballStemmer",
310:       "weka.core.FindWithCapabilities",
311:       "weka.core.SingleIndex",
312:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
313:       "weka.estimators.Estimator",
314:       "weka.estimators.NormalEstimator",
315:       "weka.classifiers.MultipleClassifiersCombiner",
316:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
317:       "weka.classifiers.meta.Vote",
318:       "weka.classifiers.misc.SerializedClassifier",
319:       "weka.classifiers.functions.LinearRegression",
320:       "weka.core.UnsupportedAttributeTypeException",
321:       "weka.attributeSelection.InfoGainAttributeEval",
322:       "weka.attributeSelection.GainRatioAttributeEval",
323:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
324:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
325:       "weka.classifiers.meta.Stacking",
326:       "weka.classifiers.functions.SMOreg",
327:       "weka.classifiers.functions.supportVector.RegOptimizer",
328:       "weka.classifiers.functions.supportVector.RegSMO",
329:       "weka.classifiers.functions.supportVector.RegSMOImproved",
330:       "weka.classifiers.functions.supportVector.CachedKernel",
331:       "weka.classifiers.functions.supportVector.PolyKernel",
332:       "weka.core.matrix.Matrix",
333:       "weka.classifiers.trees.RandomTree",
334:       "weka.core.tokenizers.AlphabeticTokenizer",
335:       "weka.attributeSelection.OneRAttributeEval",
336:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
337:       "weka.classifiers.IteratedSingleClassifierEnhancer",
338:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
339:       "weka.classifiers.meta.LogitBoost",
340:       "weka.classifiers.meta.RegressionByDiscretization",
341:       "weka.filters.unsupervised.attribute.Discretize",
342:       "weka.classifiers.trees.J48",
343:       "weka.classifiers.trees.j48.ClassifierTree",
344:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
345:       "weka.classifiers.rules.JRip",
346:       "weka.classifiers.rules.PART",
347:       "weka.classifiers.rules.part.MakeDecList",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.trees.RandomForest",
351:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
352:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
353:       "weka.classifiers.meta.Bagging",
354:       "weka.filters.AllFilter",
355:       "weka.attributeSelection.ReliefFAttributeEval",
356:       "weka.classifiers.functions.SGD",
357:       "weka.classifiers.functions.VotedPerceptron",
358:       "weka.attributeSelection.CfsSubsetEval",
359:       "weka.classifiers.meta.FilteredClassifier",
360:       "weka.filters.supervised.attribute.AttributeSelection",
361:       "weka.attributeSelection.AttributeSelection",
362:       "weka.attributeSelection.ASSearch",
363:       "weka.attributeSelection.GreedyStepwise",
364:       "weka.attributeSelection.BestFirst",
365:       "weka.classifiers.functions.MultilayerPerceptron",
366:       "weka.filters.unsupervised.attribute.NominalToBinary",
367:       "weka.classifiers.functions.neural.SigmoidUnit",
368:       "weka.classifiers.functions.neural.LinearUnit",
369:       "weka.classifiers.rules.DecisionTable",
370:       "weka.classifiers.rules.OneR",
371:       "weka.core.AttributeStats",
372:       "weka.experiment.Stats",
373:       "weka.filters.SimpleFilter",
374:       "weka.filters.SimpleStreamFilter",
375:       "weka.filters.MultiFilter",
376:       "weka.classifiers.trees.LMT",
377:       "weka.classifiers.meta.MultiScheme",
378:       "weka.estimators.DiscreteEstimator",
379:       "weka.classifiers.meta.RandomCommittee",
380:       "weka.estimators.PoissonEstimator",
381:       "weka.classifiers.functions.Logistic",
382:       "weka.classifiers.meta.AdaBoostM1",
383:       "weka.classifiers.meta.AttributeSelectedClassifier",
384:       "weka.classifiers.functions.supportVector.StringKernel",
385:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
386:       "weka.core.UnassignedClassException",
387:       "weka.attributeSelection.WrapperSubsetEval",
388:       "weka.classifiers.meta.AdditiveRegression",
389:       "weka.classifiers.meta.MultiClassClassifier",
390:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
391:       "weka.classifiers.functions.supportVector.Puk",
392:       "weka.classifiers.functions.GaussianProcesses",
393:       "weka.classifiers.functions.SimpleLogistic",
394:       "weka.classifiers.functions.SimpleLinearRegression",
395:       "weka.classifiers.functions.supportVector.RBFKernel",
396:       "weka.core.neighboursearch.PerformanceStats",
397:       "weka.estimators.KernelEstimator",
398:       "weka.attributeSelection.CorrelationAttributeEval",
399:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
400:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
401:       "weka.classifiers.functions.SMO",
402:       "weka.core.ChebyshevDistance",
403:       "weka.core.Queue",
404:       "weka.core.AttributeLocator",
405:       "weka.core.StringLocator",
406:       "weka.core.RelationalLocator",
407:       "weka.core.ContingencyTables",
408:       "weka.core.Queue$QueueNode",
409:       "weka.classifiers.meta.CVParameterSelection$CVParameter",
410:       "weka.classifiers.meta.RandomSubSpace",
411:       "weka.core.ClassDiscovery",
412:       "weka.classifiers.meta.ClassificationViaRegression",
413:       "weka.classifiers.trees.M5P",
414:       "weka.core.ListOptions",
415:       "weka.classifiers.bayes.NaiveBayesUpdateable",
416:       "weka.core.converters.ConverterUtils$DataSource",
417:       "weka.core.converters.AbstractLoader",
418:       "weka.core.converters.AbstractFileLoader",
419:       "weka.core.converters.ArffLoader",
420:       "weka.core.SerializationHelper",
421:       "weka.core.ClassCache",
422:       "weka.core.AllJavadoc",
423:       "weka.core.GlobalInfoJavadoc",
424:       "weka.core.neighboursearch.TreePerformanceStats",
425:       "weka.core.ManhattanDistance",
426:       "weka.estimators.MahalanobisEstimator",
427:       "weka.core.MinkowskiDistance",
428:       "weka.core.Check",
429:       "weka.core.CheckOptionHandler"
430:     );
431:   }
432: }

[MASTER] 01:12:01.052 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.putIfAbsent((Integer) null, linkedHashMap1);
naiveBayesMultinomialText0.setPeriodicPruning(17);
naiveBayesMultinomialText0.normalizeDocLengthTipText();
SGDText sGDText0 = new SGDText();
sGDText0.setSeed(2199);
SGDText sGDText1 = new SGDText();
Capabilities capabilities0 = sGDText1.getCapabilities();
TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
Instances instances0 = testInstances0.generate();
naiveBayesMultinomialText0.buildClassifier(instances0);
naiveBayesMultinomialText0.stopwordsTipText();
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);


[MASTER] 01:12:01.094 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_74_1573693921053/weka/classifiers/bayes/NaiveBayesMultinomialText_74_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_74_1573693921053/weka/classifiers/bayes/NaiveBayesMultinomialText_74_tmp__ESTest_scaffolding.java]]
[MASTER] 01:12:01.094 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:12:01.094 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:12:01.094 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 01:12:01.094 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 01:12:01.094 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 01:12:01.094 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 01:12:01.094 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 01:12:01.095 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_74_1573693921053/weka/classifiers/bayes/NaiveBayesMultinomialText_74_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Nov 14 01:12:01 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.testdata.FileSystemHandling;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.classifiers.functions.SGDText;
18: import weka.core.Capabilities;
19: import weka.core.Instances;
20: import weka.core.TestInstances;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
23: public class NaiveBayesMultinomialText_74_tmp__ESTest extends NaiveBayesMultinomialText_74_tmp__ESTest_scaffolding {
24: 
25:   /**
26:   //Test case number: 0
27:   /*Coverage entropy=2.0445906539199985
28:   */
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
32:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
33:       naiveBayesMultinomialText0.m_minWordP = (-1.0);
34:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
35:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
36:       FileSystemHandling.shouldAllThrowIOExceptions();
37:       linkedHashMap0.putIfAbsent((Integer) null, linkedHashMap1);
38:       naiveBayesMultinomialText0.setPeriodicPruning(17);
39:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
40:       SGDText sGDText0 = new SGDText();
41:       sGDText0.setSeed(2199);
42:       Capabilities capabilities0 = sGDText0.getCapabilities();
43:       TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
44:       Instances instances0 = testInstances0.generate();
45:       naiveBayesMultinomialText0.buildClassifier(instances0);
46:       assertEquals(17, naiveBayesMultinomialText0.getPeriodicPruning());
47:   }
48: }
RegularFileObject[/tmp/EvoSuite_74_1573693921053/weka/classifiers/bayes/NaiveBayesMultinomialText_74_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Nov 14 01:12:01 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_74_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_74_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.bayes.net.search.local.K2",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.core.stemmers.Stemmer",
101:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.estimators.IncrementalEstimator",
105:       "weka.estimators.Estimator$Builder",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.classifiers.functions.SGDText",
108:       "weka.core.RelationalLocator",
109:       "weka.core.Utils",
110:       "weka.core.CustomDisplayStringProvider",
111:       "weka.core.tokenizers.Tokenizer",
112:       "weka.core.NormalizableDistance",
113:       "weka.classifiers.functions.SMOreg",
114:       "weka.core.NoSupportForMissingValuesException",
115:       "weka.classifiers.UpdateableClassifier",
116:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
117:       "weka.core.MultiInstanceCapabilitiesHandler",
118:       "weka.core.Copyable",
119:       "weka.core.Capabilities",
120:       "weka.core.AttributeLocator",
121:       "weka.core.BinarySparseInstance",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
123:       "weka.classifiers.functions.supportVector.CachedKernel",
124:       "weka.core.SerializedObject",
125:       "weka.clusterers.UpdateableClusterer",
126:       "weka.core.Summarizable",
127:       "weka.core.AdditionalMeasureProducer",
128:       "org.pentaho.packageManagement.PackageManager$1",
129:       "weka.core.OptionHandlerJavadoc",
130:       "weka.core.Drawable",
131:       "weka.core.matrix.Matrix",
132:       "weka.core.CapabilitiesHandler",
133:       "weka.core.AbstractInstance",
134:       "weka.core.scripting.JythonObject",
135:       "weka.classifiers.functions.supportVector.RegOptimizer",
136:       "weka.core.SelectedTag",
137:       "org.pentaho.packageManagement.DefaultPackage",
138:       "weka.classifiers.bayes.BayesNet",
139:       "weka.core.Version",
140:       "weka.filters.AllFilter",
141:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
142:       "weka.core.Tag",
143:       "weka.core.neighboursearch.CoverTree",
144:       "weka.classifiers.AbstractClassifier",
145:       "weka.core.OptionHandler",
146:       "weka.core.WekaException",
147:       "weka.core.Range",
148:       "weka.core.scripting.JythonSerializableObject",
149:       "weka.classifiers.Classifier",
150:       "weka.core.Capabilities$Capability",
151:       "weka.core.SparseInstance",
152:       "org.pentaho.packageManagement.PackageManager",
153:       "weka.estimators.PoissonEstimator",
154:       "weka.core.tokenizers.WordTokenizer",
155:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
156:       "weka.core.stemmers.LovinsStemmer",
157:       "weka.classifiers.Evaluation",
158:       "weka.classifiers.functions.supportVector.Kernel",
159:       "weka.core.WekaPackageManager",
160:       "weka.filters.SupervisedFilter",
161:       "weka.core.TechnicalInformationHandler",
162:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
163:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
164:       "weka.core.Option",
165:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
166:       "weka.core.neighboursearch.PerformanceStats",
167:       "weka.filters.Sourcable",
168:       "weka.core.Attribute",
169:       "weka.core.Stopwords",
170:       "weka.core.FastVector",
171:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
172:       "weka.core.tokenizers.NGramTokenizer",
173:       "weka.core.UnassignedDatasetException",
174:       "weka.classifiers.functions.supportVector.RegSMOImproved",
175:       "weka.classifiers.RandomizableClassifier",
176:       "weka.core.RevisionUtils",
177:       "weka.core.Instance",
178:       "weka.classifiers.functions.supportVector.RegSMO",
179:       "weka.classifiers.functions.supportVector.PolyKernel",
180:       "weka.estimators.Estimator",
181:       "weka.core.ProtectedProperties",
182:       "weka.core.StringLocator",
183:       "weka.classifiers.bayes.net.ADNode",
184:       "weka.core.AttributeStats",
185:       "weka.core.WeightedInstancesHandler",
186:       "weka.core.neighboursearch.NearestNeighbourSearch",
187:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
188:       "weka.core.Javadoc",
189:       "weka.core.Randomizable",
190:       "weka.core.EuclideanDistance",
191:       "weka.core.Instances",
192:       "weka.filters.unsupervised.attribute.Normalize",
193:       "weka.core.UnassignedClassException",
194:       "weka.classifiers.bayes.net.BIFReader",
195:       "weka.classifiers.bayes.net.ParentSet",
196:       "weka.core.stemmers.IteratedLovinsStemmer",
197:       "weka.filters.unsupervised.attribute.Standardize",
198:       "weka.core.TechnicalInformation",
199:       "weka.core.UnsupportedAttributeTypeException",
200:       "weka.classifiers.Sourcable",
201:       "weka.core.RevisionHandler",
202:       "weka.classifiers.evaluation.output.prediction.PlainText",
203:       "weka.core.xml.XMLSerialization",
204:       "weka.core.neighboursearch.TreePerformanceStats",
205:       "weka.classifiers.xml.XMLClassifier",
206:       "weka.filters.Filter",
207:       "weka.filters.supervised.attribute.Discretize"
208:     );
209:   } 
210: 
211:   private static void resetClasses() {
212:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_74_tmp__ESTest_scaffolding.class.getClassLoader()); 
213: 
214:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
215:       "weka.classifiers.AbstractClassifier",
216:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
218:       "weka.core.Capabilities$Capability",
219:       "weka.core.tokenizers.Tokenizer",
220:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
221:       "weka.core.tokenizers.WordTokenizer",
222:       "weka.core.stemmers.NullStemmer",
223:       "weka.core.Utils",
224:       "weka.attributeSelection.ASEvaluation",
225:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
226:       "weka.attributeSelection.PrincipalComponents",
227:       "weka.classifiers.Evaluation",
228:       "weka.core.Option",
229:       "weka.core.AbstractInstance",
230:       "weka.core.SparseInstance",
231:       "weka.core.UnassignedDatasetException",
232:       "weka.classifiers.bayes.NaiveBayes",
233:       "weka.core.Capabilities",
234:       "org.pentaho.packageManagement.PackageManager",
235:       "org.pentaho.packageManagement.DefaultPackageManager",
236:       "weka.core.Version",
237:       "weka.core.Environment",
238:       "weka.core.WekaPackageManager",
239:       "weka.classifiers.bayes.BayesNet",
240:       "weka.classifiers.bayes.net.BIFReader",
241:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
242:       "weka.core.Tag",
243:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
244:       "weka.classifiers.bayes.net.search.local.K2",
245:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
246:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
247:       "weka.classifiers.SingleClassifierEnhancer",
248:       "weka.classifiers.misc.InputMappedClassifier",
249:       "weka.classifiers.rules.ZeroR",
250:       "weka.core.neighboursearch.NearestNeighbourSearch",
251:       "weka.core.neighboursearch.KDTree",
252:       "weka.core.NormalizableDistance",
253:       "weka.core.EuclideanDistance",
254:       "weka.core.Range",
255:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
256:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
257:       "weka.core.DenseInstance",
258:       "weka.filters.Filter",
259:       "weka.filters.supervised.attribute.Discretize",
260:       "weka.core.BinarySparseInstance",
261:       "weka.core.SerializedObject",
262:       "weka.core.neighboursearch.CoverTree",
263:       "weka.core.neighboursearch.BallTree",
264:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
265:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
266:       "weka.core.neighboursearch.balltrees.BallSplitter",
267:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
268:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
269:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
270:       "weka.core.stemmers.LovinsStemmer",
271:       "weka.core.stemmers.IteratedLovinsStemmer",
272:       "weka.core.TechnicalInformation",
273:       "weka.core.TechnicalInformation$Type",
274:       "weka.core.TechnicalInformation$Field",
275:       "weka.classifiers.functions.supportVector.Kernel",
276:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
277:       "weka.core.Stopwords",
278:       "weka.core.RevisionUtils",
279:       "weka.classifiers.RandomizableClassifier",
280:       "weka.classifiers.functions.SGDText",
281:       "weka.core.Instances",
282:       "weka.core.TestInstances",
283:       "weka.classifiers.lazy.KStar",
284:       "weka.core.SelectedTag",
285:       "weka.core.Javadoc",
286:       "weka.core.OptionHandlerJavadoc",
287:       "weka.core.WekaException",
288:       "weka.core.stemmers.Stemming",
289:       "weka.core.converters.ArffLoader$ArffReader",
290:       "weka.classifiers.lazy.IBk",
291:       "weka.core.neighboursearch.LinearNNSearch",
292:       "weka.classifiers.bayes.NaiveBayesMultinomial",
293:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
294:       "weka.classifiers.meta.CostSensitiveClassifier",
295:       "weka.classifiers.CostMatrix",
296:       "weka.core.Attribute",
297:       "weka.core.ProtectedProperties",
298:       "weka.core.WekaEnumeration",
299:       "weka.core.Attribute$1",
300:       "weka.core.neighboursearch.balltrees.BallNode",
301:       "weka.classifiers.lazy.LWL",
302:       "weka.classifiers.trees.DecisionStump",
303:       "weka.core.tokenizers.NGramTokenizer",
304:       "weka.classifiers.trees.m5.M5Base",
305:       "weka.classifiers.rules.M5Rules",
306:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
307:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
308:       "weka.classifiers.trees.REPTree",
309:       "weka.core.stemmers.SnowballStemmer",
310:       "weka.core.FindWithCapabilities",
311:       "weka.core.SingleIndex",
312:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
313:       "weka.estimators.Estimator",
314:       "weka.estimators.NormalEstimator",
315:       "weka.classifiers.MultipleClassifiersCombiner",
316:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
317:       "weka.classifiers.meta.Vote",
318:       "weka.classifiers.misc.SerializedClassifier",
319:       "weka.classifiers.functions.LinearRegression",
320:       "weka.core.UnsupportedAttributeTypeException",
321:       "weka.attributeSelection.InfoGainAttributeEval",
322:       "weka.attributeSelection.GainRatioAttributeEval",
323:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
324:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
325:       "weka.classifiers.meta.Stacking",
326:       "weka.classifiers.functions.SMOreg",
327:       "weka.classifiers.functions.supportVector.RegOptimizer",
328:       "weka.classifiers.functions.supportVector.RegSMO",
329:       "weka.classifiers.functions.supportVector.RegSMOImproved",
330:       "weka.classifiers.functions.supportVector.CachedKernel",
331:       "weka.classifiers.functions.supportVector.PolyKernel",
332:       "weka.core.matrix.Matrix",
333:       "weka.classifiers.trees.RandomTree",
334:       "weka.core.tokenizers.AlphabeticTokenizer",
335:       "weka.attributeSelection.OneRAttributeEval",
336:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
337:       "weka.classifiers.IteratedSingleClassifierEnhancer",
338:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
339:       "weka.classifiers.meta.LogitBoost",
340:       "weka.classifiers.meta.RegressionByDiscretization",
341:       "weka.filters.unsupervised.attribute.Discretize",
342:       "weka.classifiers.trees.J48",
343:       "weka.classifiers.trees.j48.ClassifierTree",
344:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
345:       "weka.classifiers.rules.JRip",
346:       "weka.classifiers.rules.PART",
347:       "weka.classifiers.rules.part.MakeDecList",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.trees.RandomForest",
351:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
352:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
353:       "weka.classifiers.meta.Bagging",
354:       "weka.filters.AllFilter",
355:       "weka.attributeSelection.ReliefFAttributeEval",
356:       "weka.classifiers.functions.SGD",
357:       "weka.classifiers.functions.VotedPerceptron",
358:       "weka.attributeSelection.CfsSubsetEval",
359:       "weka.classifiers.meta.FilteredClassifier",
360:       "weka.filters.supervised.attribute.AttributeSelection",
361:       "weka.attributeSelection.AttributeSelection",
362:       "weka.attributeSelection.ASSearch",
363:       "weka.attributeSelection.GreedyStepwise",
364:       "weka.attributeSelection.BestFirst",
365:       "weka.classifiers.functions.MultilayerPerceptron",
366:       "weka.filters.unsupervised.attribute.NominalToBinary",
367:       "weka.classifiers.functions.neural.SigmoidUnit",
368:       "weka.classifiers.functions.neural.LinearUnit",
369:       "weka.classifiers.rules.DecisionTable",
370:       "weka.classifiers.rules.OneR",
371:       "weka.core.AttributeStats",
372:       "weka.experiment.Stats",
373:       "weka.filters.SimpleFilter",
374:       "weka.filters.SimpleStreamFilter",
375:       "weka.filters.MultiFilter",
376:       "weka.classifiers.trees.LMT",
377:       "weka.classifiers.meta.MultiScheme",
378:       "weka.estimators.DiscreteEstimator",
379:       "weka.classifiers.meta.RandomCommittee",
380:       "weka.estimators.PoissonEstimator",
381:       "weka.classifiers.functions.Logistic",
382:       "weka.classifiers.meta.AdaBoostM1",
383:       "weka.classifiers.meta.AttributeSelectedClassifier",
384:       "weka.classifiers.functions.supportVector.StringKernel",
385:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
386:       "weka.core.UnassignedClassException",
387:       "weka.attributeSelection.WrapperSubsetEval",
388:       "weka.classifiers.meta.AdditiveRegression",
389:       "weka.classifiers.meta.MultiClassClassifier",
390:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
391:       "weka.classifiers.functions.supportVector.Puk",
392:       "weka.classifiers.functions.GaussianProcesses",
393:       "weka.classifiers.functions.SimpleLogistic",
394:       "weka.classifiers.functions.SimpleLinearRegression",
395:       "weka.classifiers.functions.supportVector.RBFKernel",
396:       "weka.core.neighboursearch.PerformanceStats",
397:       "weka.estimators.KernelEstimator",
398:       "weka.attributeSelection.CorrelationAttributeEval",
399:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
400:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
401:       "weka.classifiers.functions.SMO",
402:       "weka.core.ChebyshevDistance",
403:       "weka.core.Queue",
404:       "weka.core.AttributeLocator",
405:       "weka.core.StringLocator",
406:       "weka.core.RelationalLocator",
407:       "weka.core.ContingencyTables",
408:       "weka.core.Queue$QueueNode",
409:       "weka.classifiers.meta.CVParameterSelection$CVParameter",
410:       "weka.classifiers.meta.RandomSubSpace",
411:       "weka.core.ClassDiscovery",
412:       "weka.classifiers.meta.ClassificationViaRegression",
413:       "weka.classifiers.trees.M5P",
414:       "weka.core.ListOptions",
415:       "weka.classifiers.bayes.NaiveBayesUpdateable",
416:       "weka.core.converters.ConverterUtils$DataSource",
417:       "weka.core.converters.AbstractLoader",
418:       "weka.core.converters.AbstractFileLoader",
419:       "weka.core.converters.ArffLoader",
420:       "weka.core.SerializationHelper",
421:       "weka.core.ClassCache",
422:       "weka.core.AllJavadoc",
423:       "weka.core.GlobalInfoJavadoc",
424:       "weka.core.neighboursearch.TreePerformanceStats",
425:       "weka.core.ManhattanDistance",
426:       "weka.estimators.MahalanobisEstimator",
427:       "weka.core.MinkowskiDistance",
428:       "weka.core.Check",
429:       "weka.core.CheckOptionHandler"
430:     );
431:   }
432: }

[MASTER] 01:12:01.096 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_minWordP = (-1.0);
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
FileSystemHandling.shouldAllThrowIOExceptions();
linkedHashMap0.putIfAbsent((Integer) null, linkedHashMap1);
naiveBayesMultinomialText0.setPeriodicPruning(17);
naiveBayesMultinomialText0.normalizeDocLengthTipText();
SGDText sGDText0 = new SGDText();
sGDText0.setSeed(2199);
Capabilities capabilities0 = sGDText0.getCapabilities();
TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
Instances instances0 = testInstances0.generate();
naiveBayesMultinomialText0.buildClassifier(instances0);
assertEquals(17, naiveBayesMultinomialText0.getPeriodicPruning());


[MASTER] 01:12:04.150 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 01:12:04.378 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 01:12:04.482 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
[MASTER] 01:12:05.347 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/mosa/tests/s1006/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 10%
* Compiling and checking tests
[MASTER] 01:15:07.591 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_83_1573694107548/weka/classifiers/Evaluation_83_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_83_1573694107548/weka/classifiers/Evaluation_83_tmp__ESTest_scaffolding.java]]
[MASTER] 01:15:07.591 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:15:07.591 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:15:07.595 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   variable double2
  location: class weka.classifiers.Evaluation_83_tmp__ESTest: 39
[MASTER] 01:15:07.597 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_83_1573694107548/weka/classifiers/Evaluation_83_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Nov 14 01:15:07 GMT 2019
4:  */
5: 
6: package weka.classifiers;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import org.evosuite.runtime.EvoRunner;
11: import org.evosuite.runtime.EvoRunnerParameters;
12: import org.junit.runner.RunWith;
13: import weka.classifiers.Evaluation;
14: import weka.core.Instances;
15: import weka.core.TestInstances;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class Evaluation_83_tmp__ESTest extends Evaluation_83_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=1.8836205643284467
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       TestInstances testInstances0 = new TestInstances();
27:       Instances instances0 = testInstances0.generate("9+T@])&K]^R6k3fpI");
28:       Evaluation evaluation0 = new Evaluation(instances0);
29:       testInstances0.generate(".arff");
30:       double double0 = evaluation0.m_Incorrect;
31:       String string0 = evaluation0.toClassDetailsString();
32:       assertEquals("=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall  F-Measure  MCC    ROC Area  PRC Area  Class\n                 0        0        0          0       0          0     ?         ?         class1\n                 0        0        0          0       0          0     ?         ?         class2\nWeighted Avg.  NaN      NaN      NaN        NaN     NaN        NaN    NaN       NaN    \n", string0);
33:       
34:       evaluation0.weightedRecall();
35:       Evaluation evaluation1 = new Evaluation(instances0);
36:       assertEquals(Double.NaN, evaluation1.unweightedMicroFmeasure(), 0.01);
37:       
38:       double double1 = evaluation0.m_WithClass;
39:       assertNotEquals(double1, double2, 0.01);
40:   }
41: }
RegularFileObject[/tmp/EvoSuite_83_1573694107548/weka/classifiers/Evaluation_83_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Nov 14 01:15:07 GMT 2019
5:  */
6: 
7: package weka.classifiers;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class Evaluation_83_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.Evaluation"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Evaluation_83_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.clusterers.AbstractClusterer",
91:       "weka.core.converters.TextDirectoryLoader",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.filters.UnsupervisedFilter",
95:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
96:       "weka.core.DenseInstance",
97:       "weka.core.converters.DatabaseConverter",
98:       "weka.classifiers.trees.J48",
99:       "weka.classifiers.functions.SimpleLinearRegression",
100:       "weka.classifiers.rules.DecisionTable$DummySubsetEvaluator",
101:       "org.pentaho.packageManagement.DefaultPackageManager",
102:       "weka.estimators.UnivariateIntervalEstimator",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.clusterers.NumberOfClustersRequestable",
105:       "weka.core.neighboursearch.KDTree",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.classifiers.functions.SGDText",
108:       "weka.core.CustomDisplayStringProvider",
109:       "weka.core.NormalizableDistance",
110:       "weka.classifiers.rules.Rule",
111:       "weka.clusterers.SimpleKMeans",
112:       "weka.core.TechnicalInformation$Type",
113:       "weka.core.Copyable",
114:       "weka.core.BinarySparseInstance",
115:       "weka.filters.supervised.attribute.NominalToBinary",
116:       "weka.core.SerializedObject",
117:       "weka.clusterers.UpdateableClusterer",
118:       "weka.core.AdditionalMeasureProducer",
119:       "weka.core.neighboursearch.balltrees.BallNode",
120:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
121:       "weka.classifiers.misc.InputMappedClassifier",
122:       "weka.experiment.ResultProducer",
123:       "weka.core.Version",
124:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
125:       "weka.classifiers.evaluation.NominalPrediction",
126:       "weka.classifiers.AbstractClassifier",
127:       "weka.core.converters.ArffLoader",
128:       "weka.filters.unsupervised.attribute.Center",
129:       "weka.core.FindWithCapabilities",
130:       "weka.classifiers.meta.Stacking",
131:       "weka.core.WekaException",
132:       "weka.filters.StreamableFilter",
133:       "weka.core.Attribute$1",
134:       "weka.core.PartitionGenerator",
135:       "weka.core.SparseInstance",
136:       "weka.classifiers.trees.j48.ClassifierSplitModel",
137:       "weka.attributeSelection.AttributeTransformer",
138:       "weka.core.tokenizers.WordTokenizer",
139:       "weka.classifiers.trees.j48.ClassifierTree",
140:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
141:       "weka.attributeSelection.PrincipalComponents",
142:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
143:       "weka.classifiers.trees.j48.PruneableClassifierTree",
144:       "weka.classifiers.Evaluation",
145:       "weka.core.converters.CSVLoader",
146:       "weka.classifiers.functions.supportVector.Kernel",
147:       "weka.classifiers.functions.SMO",
148:       "weka.classifiers.evaluation.ThresholdCurve",
149:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
150:       "weka.core.converters.FileSourcedConverter",
151:       "weka.core.converters.URLSourcedLoader",
152:       "weka.clusterers.Clusterer",
153:       "weka.core.neighboursearch.PerformanceStats",
154:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
155:       "weka.estimators.UnivariateKernelEstimator",
156:       "weka.core.UnassignedDatasetException",
157:       "weka.classifiers.RandomizableClassifier",
158:       "weka.core.RevisionUtils",
159:       "weka.core.converters.Loader",
160:       "weka.core.ProtectedProperties",
161:       "weka.estimators.Estimator",
162:       "weka.core.StringLocator",
163:       "weka.core.AttributeStats",
164:       "weka.classifiers.trees.DecisionStump",
165:       "weka.estimators.UnivariateQuantileEstimator",
166:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
167:       "weka.filters.unsupervised.attribute.Remove",
168:       "weka.core.Randomizable",
169:       "weka.classifiers.trees.j48.NoSplit",
170:       "weka.core.EuclideanDistance",
171:       "weka.core.Instances",
172:       "weka.core.converters.AbstractFileLoader",
173:       "weka.classifiers.bayes.NaiveBayesMultinomial",
174:       "weka.core.converters.ConverterUtils$DataSink",
175:       "weka.classifiers.bayes.net.ParentSet",
176:       "weka.core.converters.DatabaseConnection",
177:       "weka.core.UnsupportedAttributeTypeException",
178:       "weka.core.TechnicalInformation",
179:       "weka.core.RevisionHandler",
180:       "weka.experiment.Stats",
181:       "weka.core.converters.ConverterUtils$DataSource",
182:       "weka.classifiers.rules.OneR$OneRRule",
183:       "weka.classifiers.xml.XMLClassifier",
184:       "weka.filters.Filter",
185:       "weka.filters.supervised.attribute.Discretize",
186:       "weka.classifiers.rules.JRip$RipperRule",
187:       "weka.core.TestInstances",
188:       "weka.core.converters.ConverterUtils",
189:       "weka.core.DistanceFunction",
190:       "weka.attributeSelection.AttributeEvaluator",
191:       "org.pentaho.packageManagement.Package",
192:       "weka.attributeSelection.SubsetEvaluator",
193:       "weka.classifiers.rules.RuleStats",
194:       "weka.classifiers.CostMatrix",
195:       "weka.classifiers.evaluation.NumericPrediction",
196:       "weka.classifiers.bayes.net.search.local.K2",
197:       "weka.core.logging.Logger$Level",
198:       "weka.classifiers.rules.PART",
199:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
200:       "weka.attributeSelection.CfsSubsetEval",
201:       "weka.classifiers.functions.LinearRegression",
202:       "weka.core.stemmers.Stemmer",
203:       "weka.core.converters.IncrementalConverter",
204:       "weka.filters.supervised.attribute.ClassOrder",
205:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
206:       "weka.classifiers.meta.LogitBoost",
207:       "weka.core.EnvironmentHandler",
208:       "weka.classifiers.trees.j48.C45ModelSelection",
209:       "weka.core.RelationalLocator",
210:       "weka.core.Utils",
211:       "weka.core.tokenizers.Tokenizer",
212:       "weka.core.NoSupportForMissingValuesException",
213:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
214:       "weka.classifiers.UpdateableClassifier",
215:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
216:       "weka.core.MultiInstanceCapabilitiesHandler",
217:       "weka.core.Capabilities",
218:       "weka.core.AttributeLocator",
219:       "weka.classifiers.functions.supportVector.CachedKernel",
220:       "weka.classifiers.meta.RegressionByDiscretization",
221:       "weka.core.Summarizable",
222:       "weka.classifiers.trees.j48.ModelSelection",
223:       "weka.attributeSelection.BestFirst",
224:       "org.pentaho.packageManagement.PackageManager$1",
225:       "weka.core.Drawable",
226:       "weka.core.matrix.Matrix",
227:       "weka.classifiers.ConditionalDensityEstimator",
228:       "weka.core.SingleIndex",
229:       "weka.core.CapabilitiesHandler",
230:       "weka.classifiers.trees.REPTree",
231:       "weka.attributeSelection.ASEvaluation",
232:       "weka.core.AbstractInstance",
233:       "weka.core.scripting.JythonObject",
234:       "weka.core.SelectedTag",
235:       "org.pentaho.packageManagement.DefaultPackage",
236:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
237:       "weka.classifiers.bayes.BayesNet",
238:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
239:       "weka.classifiers.meta.AdditiveRegression",
240:       "weka.clusterers.RandomizableClusterer",
241:       "weka.classifiers.evaluation.Prediction",
242:       "weka.core.converters.AbstractLoader",
243:       "weka.filters.AllFilter",
244:       "weka.core.converters.BatchConverter",
245:       "weka.core.Tag",
246:       "weka.classifiers.IteratedSingleClassifierEnhancer",
247:       "weka.core.TechnicalInformationHandlerJavadoc",
248:       "weka.classifiers.trees.j48.BinC45ModelSelection",
249:       "weka.estimators.UnivariateDensityEstimator",
250:       "weka.core.OptionHandler",
251:       "weka.core.converters.MatlabLoader",
252:       "weka.classifiers.rules.JRip",
253:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
254:       "weka.core.Range",
255:       "weka.attributeSelection.WrapperSubsetEval",
256:       "weka.core.scripting.JythonSerializableObject",
257:       "weka.classifiers.Classifier",
258:       "weka.core.Capabilities$Capability",
259:       "org.pentaho.packageManagement.PackageManager",
260:       "weka.core.WekaEnumeration",
261:       "weka.classifiers.meta.Bagging",
262:       "weka.attributeSelection.ASSearch",
263:       "weka.core.WekaPackageManager",
264:       "weka.estimators.UnivariateEqualFrequencyHistogramEstimator",
265:       "weka.filters.SupervisedFilter",
266:       "weka.core.TechnicalInformationHandler",
267:       "weka.experiment.DatabaseUtils",
268:       "weka.classifiers.functions.SimpleLogistic",
269:       "weka.attributeSelection.StartSetHandler",
270:       "weka.classifiers.meta.CostSensitiveClassifier",
271:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
272:       "weka.core.Option",
273:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
274:       "weka.filters.Sourcable",
275:       "weka.core.Attribute",
276:       "weka.classifiers.rules.DecisionTable",
277:       "weka.core.FastVector",
278:       "weka.classifiers.MultipleClassifiersCombiner",
279:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
280:       "weka.core.BatchPredictor",
281:       "weka.classifiers.SingleClassifierEnhancer",
282:       "weka.core.Instance",
283:       "weka.classifiers.functions.supportVector.PolyKernel",
284:       "weka.classifiers.IntervalEstimator",
285:       "weka.core.Matchable",
286:       "weka.classifiers.bayes.net.ADNode",
287:       "weka.core.WeightedInstancesHandler",
288:       "weka.core.neighboursearch.NearestNeighbourSearch",
289:       "weka.classifiers.functions.GaussianProcesses",
290:       "weka.core.TechnicalInformation$Field",
291:       "weka.filters.unsupervised.attribute.Discretize",
292:       "weka.core.converters.DatabaseLoader",
293:       "weka.core.Javadoc",
294:       "weka.classifiers.functions.SGD",
295:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
296:       "weka.filters.unsupervised.attribute.Normalize",
297:       "weka.classifiers.rules.OneR",
298:       "weka.core.UnassignedClassException",
299:       "weka.classifiers.rules.ZeroR",
300:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
301:       "weka.filters.unsupervised.attribute.Standardize",
302:       "weka.classifiers.Sourcable",
303:       "weka.classifiers.evaluation.output.prediction.PlainText",
304:       "weka.core.xml.XMLSerialization",
305:       "weka.core.neighboursearch.TreePerformanceStats",
306:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer"
307:     );
308:   } 
309: 
310:   private static void resetClasses() {
311:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Evaluation_83_tmp__ESTest_scaffolding.class.getClassLoader()); 
312: 
313:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
314:       "weka.classifiers.Evaluation",
315:       "weka.core.pmml.PMMLFactory$ModelType",
316:       "weka.core.pmml.PMMLFactory$1",
317:       "weka.core.xml.KOML",
318:       "weka.core.Version",
319:       "weka.core.Utils",
320:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
321:       "weka.classifiers.evaluation.output.prediction.HTML",
322:       "weka.core.Instances",
323:       "weka.core.TestInstances",
324:       "weka.core.Attribute",
325:       "weka.core.ProtectedProperties",
326:       "weka.core.AbstractInstance",
327:       "weka.core.DenseInstance",
328:       "weka.attributeSelection.ASEvaluation",
329:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
330:       "weka.attributeSelection.PrincipalComponents",
331:       "weka.core.SparseInstance",
332:       "weka.core.FindWithCapabilities",
333:       "weka.core.Capabilities",
334:       "org.pentaho.packageManagement.PackageManager",
335:       "org.pentaho.packageManagement.DefaultPackageManager",
336:       "weka.core.Environment",
337:       "weka.core.WekaPackageManager",
338:       "weka.core.SingleIndex",
339:       "weka.core.converters.ArffLoader$ArffReader",
340:       "weka.core.converters.AbstractLoader",
341:       "weka.core.converters.AbstractFileLoader",
342:       "weka.core.converters.ArffLoader",
343:       "weka.core.converters.JSONLoader",
344:       "weka.classifiers.CostMatrix",
345:       "weka.core.converters.DatabaseLoader",
346:       "weka.experiment.DatabaseUtils",
347:       "weka.core.converters.DatabaseConnection",
348:       "weka.experiment.InstanceQuery",
349:       "weka.core.Option",
350:       "weka.classifiers.AbstractClassifier",
351:       "weka.core.Tag",
352:       "weka.classifiers.functions.GaussianProcesses",
353:       "weka.classifiers.functions.supportVector.Kernel",
354:       "weka.classifiers.functions.supportVector.CachedKernel",
355:       "weka.classifiers.functions.supportVector.PolyKernel",
356:       "weka.core.converters.CSVLoader",
357:       "weka.core.Range",
358:       "weka.core.converters.ConverterUtils$DataSource",
359:       "weka.core.xml.XMLDocument",
360:       "weka.core.xml.XMLInstances",
361:       "weka.core.converters.XRFFLoader",
362:       "weka.classifiers.bayes.BayesNet",
363:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
364:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
365:       "weka.classifiers.bayes.net.search.local.K2",
366:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
367:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
368:       "weka.core.converters.TextDirectoryLoader",
369:       "weka.core.WekaEnumeration",
370:       "weka.core.Attribute$1",
371:       "weka.core.converters.MatlabLoader",
372:       "weka.core.converters.SVMLightLoader",
373:       "weka.classifiers.MultipleClassifiersCombiner",
374:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
375:       "weka.classifiers.meta.Vote",
376:       "weka.classifiers.rules.ZeroR",
377:       "weka.gui.GenericPropertiesCreator",
378:       "weka.gui.GenericObjectEditor",
379:       "weka.core.converters.ConverterUtils",
380:       "weka.core.UnassignedClassException",
381:       "weka.filters.Filter",
382:       "weka.filters.AllFilter",
383:       "weka.core.BinarySparseInstance",
384:       "weka.clusterers.AbstractClusterer",
385:       "weka.clusterers.RandomizableClusterer",
386:       "weka.clusterers.SimpleKMeans",
387:       "weka.core.NormalizableDistance",
388:       "weka.core.EuclideanDistance",
389:       "weka.core.converters.LibSVMLoader",
390:       "weka.classifiers.SingleClassifierEnhancer",
391:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
392:       "weka.classifiers.meta.CostSensitiveClassifier",
393:       "weka.classifiers.misc.InputMappedClassifier",
394:       "weka.core.converters.C45Loader",
395:       "weka.core.UnassignedDatasetException",
396:       "weka.classifiers.rules.OneR",
397:       "weka.core.TechnicalInformation",
398:       "weka.core.TechnicalInformation$Type",
399:       "weka.core.TechnicalInformation$Field",
400:       "weka.core.Capabilities$Capability",
401:       "weka.core.neighboursearch.balltrees.BallNode",
402:       "weka.classifiers.lazy.IBk",
403:       "weka.core.neighboursearch.NearestNeighbourSearch",
404:       "weka.core.neighboursearch.LinearNNSearch",
405:       "weka.classifiers.functions.SimpleLogistic",
406:       "weka.classifiers.trees.DecisionStump",
407:       "weka.classifiers.functions.supportVector.RBFKernel",
408:       "weka.classifiers.trees.m5.M5Base",
409:       "weka.classifiers.trees.M5P",
410:       "weka.core.converters.SerializedInstancesLoader",
411:       "weka.classifiers.misc.SerializedClassifier",
412:       "weka.core.neighboursearch.CoverTree",
413:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
414:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
415:       "weka.classifiers.meta.Stacking",
416:       "weka.classifiers.IteratedSingleClassifierEnhancer",
417:       "weka.classifiers.meta.AdditiveRegression",
418:       "weka.classifiers.rules.M5Rules",
419:       "weka.core.SerializedObject",
420:       "weka.experiment.Stats",
421:       "weka.core.RevisionUtils",
422:       "weka.classifiers.functions.Logistic",
423:       "weka.classifiers.meta.RegressionByDiscretization",
424:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
425:       "weka.filters.unsupervised.attribute.Discretize",
426:       "weka.classifiers.trees.J48",
427:       "weka.classifiers.RandomizableClassifier",
428:       "weka.classifiers.functions.SGD",
429:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
430:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
431:       "weka.classifiers.meta.RandomSubSpace",
432:       "weka.classifiers.trees.REPTree",
433:       "weka.classifiers.meta.MultiClassClassifier",
434:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
435:       "weka.core.neighboursearch.KDTree",
436:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
437:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
438:       "weka.classifiers.evaluation.output.prediction.CSV",
439:       "weka.classifiers.functions.MultilayerPerceptron",
440:       "weka.core.FastVector",
441:       "weka.filters.unsupervised.attribute.NominalToBinary",
442:       "weka.classifiers.functions.neural.SigmoidUnit",
443:       "weka.classifiers.functions.neural.LinearUnit",
444:       "weka.classifiers.rules.PART",
445:       "weka.classifiers.rules.part.MakeDecList",
446:       "weka.classifiers.lazy.LWL",
447:       "weka.classifiers.meta.RandomCommittee",
448:       "weka.classifiers.trees.RandomTree",
449:       "weka.classifiers.functions.SimpleLinearRegression",
450:       "weka.classifiers.meta.FilteredClassifier",
451:       "weka.filters.supervised.attribute.AttributeSelection",
452:       "weka.attributeSelection.AttributeSelection",
453:       "weka.attributeSelection.CfsSubsetEval",
454:       "weka.attributeSelection.ASSearch",
455:       "weka.attributeSelection.GreedyStepwise",
456:       "weka.attributeSelection.BestFirst",
457:       "weka.filters.supervised.attribute.Discretize",
458:       "weka.classifiers.lazy.KStar",
459:       "weka.clusterers.SingleClustererEnhancer",
460:       "weka.clusterers.FilteredClusterer",
461:       "weka.classifiers.trees.LMT",
462:       "weka.core.Javadoc",
463:       "weka.core.TechnicalInformationHandlerJavadoc",
464:       "weka.classifiers.functions.supportVector.StringKernel",
465:       "weka.classifiers.evaluation.output.prediction.XML",
466:       "weka.classifiers.functions.VotedPerceptron",
467:       "weka.core.SelectedTag",
468:       "weka.clusterers.FarthestFirst",
469:       "weka.attributeSelection.InfoGainAttributeEval",
470:       "weka.classifiers.trees.RandomForest",
471:       "weka.classifiers.evaluation.output.prediction.Null",
472:       "weka.classifiers.functions.SGDText",
473:       "weka.core.tokenizers.Tokenizer",
474:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
475:       "weka.core.tokenizers.WordTokenizer",
476:       "weka.core.stemmers.NullStemmer",
477:       "weka.filters.SimpleFilter",
478:       "weka.filters.SimpleStreamFilter",
479:       "weka.filters.MultiFilter",
480:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
481:       "weka.classifiers.bayes.NaiveBayesMultinomial",
482:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
483:       "weka.classifiers.meta.MultiScheme",
484:       "weka.attributeSelection.GainRatioAttributeEval",
485:       "weka.classifiers.meta.ClassificationViaRegression",
486:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
487:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
488:       "weka.core.neighboursearch.balltrees.BallSplitter",
489:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
490:       "weka.estimators.UnivariateEqualFrequencyHistogramEstimator",
491:       "weka.estimators.Estimator",
492:       "weka.estimators.DiscreteEstimator",
493:       "weka.estimators.PoissonEstimator",
494:       "weka.classifiers.functions.LinearRegression",
495:       "weka.classifiers.rules.DecisionTable",
496:       "weka.classifiers.meta.AttributeSelectedClassifier",
497:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
498:       "weka.classifiers.rules.JRip",
499:       "weka.classifiers.bayes.NaiveBayes",
500:       "weka.classifiers.bayes.NaiveBayesUpdateable",
501:       "weka.attributeSelection.OneRAttributeEval",
502:       "weka.core.WekaException",
503:       "weka.core.UnsupportedAttributeTypeException",
504:       "weka.estimators.UnivariateKernelEstimator",
505:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
506:       "weka.classifiers.meta.LogitBoost",
507:       "weka.attributeSelection.WrapperSubsetEval",
508:       "weka.attributeSelection.ReliefFAttributeEval",
509:       "weka.core.neighboursearch.BallTree",
510:       "weka.classifiers.rules.OneR$OneRRule",
511:       "weka.classifiers.trees.j48.ClassifierTree",
512:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
513:       "weka.classifiers.functions.SMOreg",
514:       "weka.classifiers.functions.supportVector.RegOptimizer",
515:       "weka.classifiers.functions.supportVector.RegSMO",
516:       "weka.classifiers.functions.supportVector.RegSMOImproved",
517:       "weka.clusterers.Cobweb",
518:       "weka.classifiers.misc.InputMappedClassifierBeanInfo",
519:       "weka.classifiers.meta.AdaBoostM1",
520:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
521:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
522:       "weka.core.tokenizers.AlphabeticTokenizer",
523:       "weka.classifiers.meta.Bagging",
524:       "weka.classifiers.functions.supportVector.Puk",
525:       "weka.estimators.KernelEstimator",
526:       "weka.core.MinkowskiDistance",
527:       "weka.classifiers.functions.SMO",
528:       "weka.classifiers.meta.CVParameterSelection",
529:       "weka.classifiers.pmml.consumer.PMMLClassifier",
530:       "weka.classifiers.pmml.consumer.Regression",
531:       "weka.classifiers.pmml.consumer.Regression$Normalization",
532:       "weka.attributeSelection.CorrelationAttributeEval",
533:       "weka.core.tokenizers.NGramTokenizer",
534:       "weka.core.OptionHandlerJavadoc",
535:       "weka.classifiers.evaluation.output.prediction.PlainText",
536:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
537:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
538:       "weka.clusterers.AbstractDensityBasedClusterer",
539:       "weka.clusterers.MakeDensityBasedClusterer",
540:       "weka.classifiers.pmml.consumer.SupportVectorMachineModel",
541:       "weka.classifiers.pmml.consumer.NeuralNetwork$MiningFunction",
542:       "weka.classifiers.pmml.consumer.SupportVectorMachineModel$classificationMethod",
543:       "weka.classifiers.pmml.consumer.SupportVectorMachineModel$SVM_representation",
544:       "weka.core.pmml.VectorDictionary",
545:       "weka.classifiers.pmml.consumer.SupportVectorMachineModel$Kernel",
546:       "weka.classifiers.evaluation.NominalPrediction",
547:       "weka.classifiers.evaluation.Prediction",
548:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
549:       "weka.core.ListOptions",
550:       "weka.classifiers.pmml.consumer.GeneralRegression",
551:       "weka.classifiers.pmml.consumer.GeneralRegression$ModelType",
552:       "weka.classifiers.pmml.consumer.GeneralRegression$CumulativeLinkFunction",
553:       "weka.classifiers.pmml.consumer.GeneralRegression$LinkFunction",
554:       "weka.classifiers.pmml.consumer.GeneralRegression$Distribution",
555:       "weka.core.ChebyshevDistance",
556:       "weka.core.AttributeStats",
557:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
558:       "weka.classifiers.trees.j48.ModelSelection",
559:       "weka.classifiers.trees.j48.C45ModelSelection",
560:       "weka.classifiers.trees.j48.Distribution",
561:       "weka.classifiers.trees.j48.ClassifierSplitModel",
562:       "weka.classifiers.trees.j48.NoSplit",
563:       "weka.classifiers.trees.j48.SplitCriterion",
564:       "weka.classifiers.trees.j48.EntropyBasedSplitCrit",
565:       "weka.classifiers.trees.j48.InfoGainSplitCrit",
566:       "weka.classifiers.trees.j48.GainRatioSplitCrit",
567:       "weka.classifiers.trees.j48.C45Split",
568:       "weka.classifiers.trees.j48.Stats",
569:       "weka.core.Statistics",
570:       "weka.estimators.MahalanobisEstimator",
571:       "weka.classifiers.evaluation.ThresholdCurve",
572:       "weka.classifiers.evaluation.NumericPrediction"
573:     );
574:   }
575: }

[MASTER] 01:15:07.597 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
TestInstances testInstances0 = new TestInstances();
Instances instances0 = testInstances0.generate("9+T@])&K]^R6k3fpI");
Evaluation evaluation0 = new Evaluation(instances0);
testInstances0.generate(".arff");
double double0 = evaluation0.m_Incorrect;
String string0 = evaluation0.toClassDetailsString();
assertEquals("=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall  F-Measure  MCC    ROC Area  PRC Area  Class\n                 0        0        0          0       0          0     ?         ?         class1\n                 0        0        0          0       0          0     ?         ?         class2\nWeighted Avg.  NaN      NaN      NaN        NaN     NaN        NaN    NaN       NaN    \n", string0);

evaluation0.weightedRecall();
Evaluation evaluation1 = new Evaluation(instances0);
assertEquals(Double.NaN, evaluation1.unweightedMicroFmeasure(), 0.01);

double double1 = evaluation0.m_WithClass;
assertNotEquals(double1, double2, 0.01);


[MASTER] 01:15:11.119 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 01:15:11.544 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 01:15:11.544 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 01:15:13.259 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/mosa/tests/s1006/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 15876
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1367
* Using seed 1006
* Starting evolution
* Search finished after 261s and 243 generations, 104092 statements, best individual has fitness: 2736.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 217
* Number of covered goals: 190
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 286
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 239
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 286
* Generated 85 tests with total length 281
* Resulting test suite's coverage: 75% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 80%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/mosa/tests/s1006/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 15872
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 01:58:36.177 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:58:36.181 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:58:36.182 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 01:58:36.490 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 01:58:36.515 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 01:58:36.517 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1729
* Using seed 1006
* Starting evolution
* Search finished after 217s and 369 generations, 110984 statements, best individual has fitness: 7912.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 45%
* Total number of goals: 370
* Number of covered goals: 166
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 81
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 42%
* Total number of goals: 713
* Number of covered goals: 298
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 72
* Number of covered goals: 32
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 96%
* Total number of goals: 45
* Number of covered goals: 43
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 33%
* Total number of goals: 242
* Number of covered goals: 81
* Generated 64 tests with total length 212
* Resulting test suite's coverage: 43% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
[MASTER] 02:03:50.303 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 02:03:50.775 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/mosa/tests/s1006/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 15872
* Connecting to master process on port 15875
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 02:09:52.808 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 02:09:52.815 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 02:09:52.815 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 02:09:52.911 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2699
* Using seed 1006
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 02:10:04.397 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 02:10:04.403 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 02:10:04.409 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 02:10:04.417 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2499
* Using seed 1006
* Starting evolution
[MASTER] 02:10:08.329 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Search finished after 259s and 128 generations, 83128 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 19 tests with total length 88
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/mosa/tests/s1006/107_weka/evosuite-tests
* Done!

* Computation finished
* Search finished after 300s and 49 generations, 31470 statements, best individual has fitness: 2144.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 96%
* Total number of goals: 647
* Number of covered goals: 620
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 95%
* Total number of goals: 441
* Number of covered goals: 420
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 25
* Number of covered goals: 25
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 678
* Number of covered goals: 625
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 46%
* Total number of goals: 244
* Number of covered goals: 113
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 124
* Number of covered goals: 124
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 124
* Number of covered goals: 124
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 92%
* Total number of goals: 441
* Number of covered goals: 407
* Generated 224 tests with total length 2026
* Resulting test suite's coverage: 90% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 02:20:37.801 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6784395833333333% of time used, but only 90/224 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 21%
* Compiling and checking tests
[MASTER] 02:22:01.117 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/mosa/tests/s1006/107_weka/evosuite-tests
* Done!

* Computation finished
