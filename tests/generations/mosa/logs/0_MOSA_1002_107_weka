* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2244
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2247
* Connecting to master process on port 2248
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2250
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Total number of test goals for MOSA: 1367
* Using seed 1002
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 20:25:27.775 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 20:25:27.802 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 20:25:27.803 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 20:25:27.984 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 20:25:28.014 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 20:25:28.049 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 20:25:28.092 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 20:25:28.365 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 20:25:28.386 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 20:25:28.391 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2699
* Using seed 1002
* Starting evolution
* Total number of test goals for MOSA: 1729
* Using seed 1002
* Starting evolution
[MASTER] 20:25:38.353 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: Line 389
[MASTER] 20:25:38.359 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: Line 391
[MASTER] 20:25:38.359 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: Line 392
[MASTER] 20:25:38.360 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: Line 394
[MASTER] 20:25:38.360 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: Line 395
[MASTER] 20:25:38.360 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: Line 397
[MASTER] 20:25:38.360 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: Line 398
[MASTER] 20:25:38.360 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: Line 400
[MASTER] 20:25:38.360 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: Line 401
[MASTER] 20:25:38.360 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: Line 403
[MASTER] 20:25:38.360 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: Line 404
[MASTER] 20:25:38.360 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: Line 406
[MASTER] 20:25:38.360 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: Line 407
[MASTER] 20:25:38.360 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: Line 409
[MASTER] 20:25:38.360 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: Line 410
[MASTER] 20:25:38.360 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: Line 412
[MASTER] 20:25:38.361 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: Line 413
[MASTER] 20:25:38.361 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: Line 415
[MASTER] 20:25:38.361 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: Line 418
[MASTER] 20:25:38.361 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: Line 421
[MASTER] 20:25:38.361 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: Line 424
[MASTER] 20:25:38.361 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: Line 427
[MASTER] 20:25:38.361 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: Line 428
[MASTER] 20:25:38.361 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: Line 430
[MASTER] 20:25:38.361 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: Line 431
[MASTER] 20:25:38.361 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: Line 433
[MASTER] 20:25:38.361 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: Line 436
[MASTER] 20:25:38.370 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getMeanWidth()I: Line 761
[MASTER] 20:25:38.370 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getStdDevWidth()I: Line 799
[MASTER] 20:25:38.370 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.getSignificanceWidth()I: Line 837
[MASTER] 20:25:38.417 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 119: weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;:391 - ReplaceConstant - -mean-prec -> 
[MASTER] 20:25:38.417 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 124: weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;:394 - ReplaceConstant - -stddev-prec -> 
[MASTER] 20:25:38.417 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 129: weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;:397 - ReplaceConstant - -col-name-width -> 
[MASTER] 20:25:38.417 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 134: weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;:400 - ReplaceConstant - -row-name-width -> 
[MASTER] 20:25:38.417 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 139: weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;:403 - ReplaceConstant - -mean-width -> 
[MASTER] 20:25:38.417 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 144: weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;:406 - ReplaceConstant - -stddev-width -> 
[MASTER] 20:25:38.427 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.experiment.ResultMatrix.setMeanPrec(I)V
[MASTER] 20:25:38.428 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.experiment.ResultMatrix.getShowAverage()Z
[MASTER] 20:25:38.429 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.experiment.ResultMatrix.printRowNamesTipText()Ljava/lang/String;
[MASTER] 20:25:38.439 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.experiment.ResultMatrix.getRowCount()I
[MASTER] 20:25:38.440 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.experiment.ResultMatrix.toStringHeader()Ljava/lang/String;
[MASTER] 20:25:38.440 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.experiment.ResultMatrix.clearRanking()V
[MASTER] 20:25:38.441 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;
[MASTER] 20:25:38.441 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;
[MASTER] 20:25:38.441 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.experiment.ResultMatrix.setMeanPrec(I)V
[MASTER] 20:25:38.453 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.experiment.ResultMatrix.getShowAverage()Z
[MASTER] 20:25:38.454 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.experiment.ResultMatrix.printRowNamesTipText()Ljava/lang/String;
[MASTER] 20:25:38.454 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.experiment.ResultMatrix.getRowCount()I
[MASTER] 20:25:38.464 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.experiment.ResultMatrix.toStringHeader()Ljava/lang/String;
[MASTER] 20:25:38.464 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.experiment.ResultMatrix.clearRanking()V
[MASTER] 20:25:38.464 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;
[MASTER] 20:25:38.464 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.experiment.ResultMatrix.toArray()[[Ljava/lang/String;
[MASTER] 20:25:38.468 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: I203 Branch 12 IFEQ L424 - true in context: weka.experiment.ResultMatrix:getOptions()[Ljava/lang/String;
[MASTER] 20:25:38.470 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: I192 Branch 11 IFEQ L421 - true in context: weka.experiment.ResultMatrix:getOptions()[Ljava/lang/String;
[MASTER] 20:25:38.470 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: I181 Branch 10 IFEQ L418 - true in context: weka.experiment.ResultMatrix:getOptions()[Ljava/lang/String;
[MASTER] 20:25:38.470 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: I236 Branch 15 IFEQ L433 - true in context: weka.experiment.ResultMatrix:getOptions()[Ljava/lang/String;
[MASTER] 20:25:38.483 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: I214 Branch 13 IFEQ L427 - false in context: weka.experiment.ResultMatrix:getOptions()[Ljava/lang/String;
[MASTER] 20:25:38.483 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: I225 Branch 14 IFEQ L430 - false in context: weka.experiment.ResultMatrix:getOptions()[Ljava/lang/String;
[MASTER] 20:25:38.484 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;: I170 Branch 9 IFEQ L415 - true in context: weka.experiment.ResultMatrix:getOptions()[Ljava/lang/String;
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 20:25:52.974 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 20:25:52.986 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 20:25:52.996 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 20:25:54.115 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 20:25:55.461 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 20:25:55.463 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 20:25:59.223 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 20:25:59.274 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 20:25:59.275 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 20:25:59.276 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 20:25:59.277 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 20:25:59.278 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 20:25:59.279 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 20:25:59.280 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 20:25:59.281 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 20:25:59.361 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 20:25:59.386 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 3904
* Using seed 1002
* Starting evolution
[MASTER] 20:26:31.022 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 20:27:00.801 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 20:29:09.583 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.num2ShortID(I[CI)Ljava/lang/String;: I13 Branch 357 IFLT L3651 - true
[MASTER] 20:29:09.594 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 10486: weka.classifiers.Evaluation.num2ShortID(I[CI)Ljava/lang/String;:3651 - ReplaceComparisonOperator < -> -2
[MASTER] 20:29:09.601 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.num2ShortID(I[CI)Ljava/lang/String;: I13 Branch 357 IFLT L3651 - true in context: 
[MASTER] 20:29:38.173 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 262s and 369 generations, 135804 statements, best individual has fitness: 3880.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 72%
* Total number of goals: 370
* Number of covered goals: 268
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 62%
* Total number of goals: 242
* Number of covered goals: 151
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 32
* Number of covered goals: 32
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 76%
* Total number of goals: 713
* Number of covered goals: 545
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 72
* Number of covered goals: 39
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 62%
* Total number of goals: 242
* Number of covered goals: 151
* Generated 91 tests with total length 569
* Resulting test suite's coverage: 72% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 272s and 243 generations, 99599 statements, best individual has fitness: 2632.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 217
* Number of covered goals: 190
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 68%
* Total number of goals: 428
* Number of covered goals: 293
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 239
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 68%
* Total number of goals: 428
* Number of covered goals: 292
* Generated 77 tests with total length 203
* Resulting test suite's coverage: 76% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 264s and 118 generations, 67764 statements, best individual has fitness: 15112.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 58%
* Total number of goals: 1378
* Number of covered goals: 797
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 44%
* Total number of goals: 809
* Number of covered goals: 355
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 63
* Number of covered goals: 63
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 62%
* Total number of goals: 424
* Number of covered goals: 262
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 22%
* Total number of goals: 278
* Number of covered goals: 62
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 103
* Number of covered goals: 101
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 43%
* Total number of goals: 809
* Number of covered goals: 347
* Generated 155 tests with total length 1554
* Resulting test suite's coverage: 52% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 76%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/mosa/tests/s1002/107_weka/evosuite-tests
* Done!

* Computation finished
* Search finished after 335s and 49 generations, 30068 statements, best individual has fitness: 2008.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 647
* Number of covered goals: 634
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 441
* Number of covered goals: 423
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 678
* Number of covered goals: 619
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 47%
* Total number of goals: 244
* Number of covered goals: 114
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 124
* Number of covered goals: 124
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 124
* Number of covered goals: 123
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 93%
* Total number of goals: 441
* Number of covered goals: 411
* Generated 227 tests with total length 1814
* Resulting test suite's coverage: 91% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 31%
* Compiling and checking tests
[MASTER] 20:33:16.111 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 20:33:17.052 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 20:33:42.888 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 20:33:42.889 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("JQ.Oo:`Lj", arrayList0, 568);
Attribute attribute0 = new Attribute("JQ.Oo:`Lj", instances0);
arrayList0.add(attribute0);
Instances instances1 = new Instances(".bsi", arrayList0, 2);
instances0.setClass(attribute0);
Discretize discretize0 = new Discretize("relational");
discretize0.setInputFormat(instances0);

[MASTER] 20:33:47.997 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 20:33:47.998 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("JQ.Oo:`Lj", arrayList0, 579);
Attribute attribute0 = new Attribute("JQ.Oo:`Lj", instances0);
arrayList0.add(attribute0);
Instances instances1 = new Instances(".bsi", arrayList0, 2);
instances0.setClass(attribute0);
Discretize discretize0 = new Discretize();
discretize0.setInputFormat(instances0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/mosa/tests/s1002/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 20:36:44.171 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6687270833333333% of time used, but only 76/227 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/mosa/tests/s1002/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 9%
[MASTER] 20:38:38.168 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
[MASTER] 20:38:47.629 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 20:38:48.268 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 20:38:48.268 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 20:38:49.877 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/mosa/tests/s1002/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2244
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2249
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:01:16.103 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:01:16.150 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:01:16.160 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:01:19.673 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:01:20.435 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 21:01:20.452 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 21:01:21.609 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:01:21.624 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:01:21.643 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:01:21.647 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2499
* Using seed 1002
* Starting evolution
* Total number of test goals for MOSA: 2767
* Using seed 1002
* Starting evolution
[MASTER] 21:01:25.574 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 754
[MASTER] 21:01:25.574 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 755
[MASTER] 21:01:25.574 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 756
[MASTER] 21:01:25.574 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 757
[MASTER] 21:01:25.574 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.getRevision()Ljava/lang/String;: Line 937
[MASTER] 21:01:25.574 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 699
[MASTER] 21:01:25.574 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 700
[MASTER] 21:01:25.574 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 701
[MASTER] 21:01:25.574 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 702
[MASTER] 21:01:25.574 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 703
[MASTER] 21:01:25.575 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 704
[MASTER] 21:01:25.575 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 705
[MASTER] 21:01:25.575 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: Line 706
[MASTER] 21:01:25.575 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setCheckErrorRate(Z)V: Line 609
[MASTER] 21:01:25.575 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setCheckErrorRate(Z)V: Line 610
[MASTER] 21:01:25.586 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.toString()Ljava/lang/String;: Line 2027
[MASTER] 21:01:25.586 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.toString()Ljava/lang/String;: Line 2028
[MASTER] 21:01:25.587 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.getRevision()Ljava/lang/String;: root-Branch
[MASTER] 21:01:25.587 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: root-Branch
[MASTER] 21:01:25.588 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: root-Branch
[MASTER] 21:01:25.588 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setCheckErrorRate(Z)V: root-Branch
[MASTER] 21:01:25.588 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.toString()Ljava/lang/String;: I4 Branch 105 IFNONNULL L2027 - false
[MASTER] 21:01:25.589 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 215: weka.classifiers.rules.JRip.setCheckErrorRate(Z)V:609 - InsertUnaryOp Negation of d
[MASTER] 21:01:25.589 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 216: weka.classifiers.rules.JRip.setCheckErrorRate(Z)V:609 - InsertUnaryOp IINC 1 d
[MASTER] 21:01:25.589 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 217: weka.classifiers.rules.JRip.setCheckErrorRate(Z)V:609 - InsertUnaryOp IINC -1 d
[MASTER] 21:01:25.590 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 378: weka.classifiers.rules.JRip.toString()Ljava/lang/String;:2027 - ReplaceComparisonOperator != null -> = null
[MASTER] 21:01:25.590 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 379: weka.classifiers.rules.JRip.toString()Ljava/lang/String;:2028 - ReplaceConstant - JRIP: No model built yet. -> 
[MASTER] 21:01:25.591 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 646: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:700 - ReplaceVariable a -> att
[MASTER] 21:01:25.591 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 647: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:701 - ReplaceConstant - NaN -> 0.0
[MASTER] 21:01:25.591 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 648: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:701 - ReplaceConstant - NaN -> 1.0
[MASTER] 21:01:25.591 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 649: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:701 - ReplaceConstant - NaN -> -1.0
[MASTER] 21:01:25.591 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 650: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:701 - ReplaceConstant - NaN -> NaN
[MASTER] 21:01:25.591 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 651: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:702 - ReplaceConstant - 0.0 -> 1.0
[MASTER] 21:01:25.591 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 652: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:702 - ReplaceConstant - 0.0 -> -1.0
[MASTER] 21:01:25.591 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 653: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:703 - ReplaceConstant - NaN -> 0.0
[MASTER] 21:01:25.591 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 654: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:703 - ReplaceConstant - NaN -> 1.0
[MASTER] 21:01:25.591 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 655: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:703 - ReplaceConstant - NaN -> -1.0
[MASTER] 21:01:25.591 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 656: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:703 - ReplaceConstant - NaN -> NaN
[MASTER] 21:01:25.591 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 657: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:704 - ReplaceConstant - NaN -> 0.0
[MASTER] 21:01:25.591 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 658: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:704 - ReplaceConstant - NaN -> 1.0
[MASTER] 21:01:25.591 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 659: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:704 - ReplaceConstant - NaN -> -1.0
[MASTER] 21:01:25.591 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 660: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:704 - ReplaceConstant - NaN -> NaN
[MASTER] 21:01:25.591 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 661: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:705 - ReplaceConstant - NaN -> 0.0
[MASTER] 21:01:25.591 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 662: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:705 - ReplaceConstant - NaN -> 1.0
[MASTER] 21:01:25.591 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 663: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:705 - ReplaceConstant - NaN -> -1.0
[MASTER] 21:01:25.591 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 664: weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:705 - ReplaceConstant - NaN -> NaN
[MASTER] 21:01:25.592 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 691: weka.classifiers.rules.JRip$NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:756 - ReplaceConstant - NaN -> 0.0
[MASTER] 21:01:25.592 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 692: weka.classifiers.rules.JRip$NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:756 - ReplaceConstant - NaN -> 1.0
[MASTER] 21:01:25.592 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 693: weka.classifiers.rules.JRip$NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:756 - ReplaceConstant - NaN -> -1.0
[MASTER] 21:01:25.592 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 694: weka.classifiers.rules.JRip$NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V:756 - ReplaceConstant - NaN -> NaN
[MASTER] 21:01:25.594 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 884: weka.classifiers.rules.JRip$NumericAntd.getRevision()Ljava/lang/String;:937 - ReplaceConstant - $Revision: 8118 $ -> 
[MASTER] 21:01:25.594 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.listOptions()Ljava/util/Enumeration;:NonNull
[MASTER] 21:01:25.594 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.toString()Ljava/lang/String;:NonEmptyString
[MASTER] 21:01:25.594 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.listOptions()Ljava/util/Enumeration;
[MASTER] 21:01:25.595 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setCheckErrorRate(Z)V
[MASTER] 21:01:25.595 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.toString()Ljava/lang/String;
[MASTER] 21:01:25.595 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
[MASTER] 21:01:25.595 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NumericAntd.getRevision()Ljava/lang/String;
[MASTER] 21:01:25.595 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.listOptions()Ljava/util/Enumeration;
[MASTER] 21:01:25.596 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setCheckErrorRate(Z)V
[MASTER] 21:01:25.596 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.toString()Ljava/lang/String;
[MASTER] 21:01:25.596 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
[MASTER] 21:01:25.596 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.NumericAntd.getRevision()Ljava/lang/String;
[MASTER] 21:01:25.596 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$NumericAntd.getRevision()Ljava/lang/String;: root-Branch in context: 
[MASTER] 21:01:25.597 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.toString()Ljava/lang/String;: I4 Branch 105 IFNONNULL L2027 - false in context: weka.classifiers.rules.JRip:toString()Ljava/lang/String;
[MASTER] 21:01:25.597 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$Antd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: root-Branch in context: weka.classifiers.rules.JRip$Antd:<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
[MASTER] 21:01:25.597 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.listOptions()Ljava/util/Enumeration;: root-Branch in context: weka.classifiers.rules.JRip:listOptions()Ljava/util/Enumeration;
[MASTER] 21:01:25.597 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V: root-Branch in context: weka.classifiers.rules.JRip$NumericAntd:<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
[MASTER] 21:01:25.597 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setCheckErrorRate(Z)V: root-Branch in context: weka.classifiers.rules.JRip:setCheckErrorRate(Z)V
[MASTER] 21:01:27.684 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 21:01:32.238 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.copy()Ljava/lang/Object;: Line 774
[MASTER] 21:01:32.239 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.copy()Ljava/lang/Object;: Line 775
[MASTER] 21:01:32.239 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.copy()Ljava/lang/Object;: Line 776
[MASTER] 21:01:32.239 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.copy()Ljava/lang/Object;: Line 777
[MASTER] 21:01:32.240 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.getAttr()Lweka/core/Attribute;: Line 722
[MASTER] 21:01:32.244 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.copy()Ljava/lang/Object;: root-Branch
[MASTER] 21:01:32.255 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.getAttr()Lweka/core/Attribute;: root-Branch
[MASTER] 21:01:32.259 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 701: weka.classifiers.rules.JRip$NumericAntd.copy()Ljava/lang/Object;:775 - ReplaceVariable na -> this
[MASTER] 21:01:32.263 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 702: weka.classifiers.rules.JRip$NumericAntd.copy()Ljava/lang/Object;:775 - ReplaceVariable value -> cover
[MASTER] 21:01:32.263 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 703: weka.classifiers.rules.JRip$NumericAntd.copy()Ljava/lang/Object;:775 - ReplaceVariable value -> accu
[MASTER] 21:01:32.263 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 704: weka.classifiers.rules.JRip$NumericAntd.copy()Ljava/lang/Object;:775 - ReplaceVariable value -> accuRate
[MASTER] 21:01:32.264 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 705: weka.classifiers.rules.JRip$NumericAntd.copy()Ljava/lang/Object;:775 - ReplaceVariable value -> maxInfoGain
[MASTER] 21:01:32.264 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 706: weka.classifiers.rules.JRip$NumericAntd.copy()Ljava/lang/Object;:775 - InsertUnaryOp Negation
[MASTER] 21:01:32.264 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 707: weka.classifiers.rules.JRip$NumericAntd.copy()Ljava/lang/Object;:776 - ReplaceVariable na -> this
[MASTER] 21:01:32.264 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 708: weka.classifiers.rules.JRip$NumericAntd.copy()Ljava/lang/Object;:776 - ReplaceVariable splitPoint -> cover
[MASTER] 21:01:32.264 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 709: weka.classifiers.rules.JRip$NumericAntd.copy()Ljava/lang/Object;:776 - ReplaceVariable splitPoint -> accu
[MASTER] 21:01:32.264 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 710: weka.classifiers.rules.JRip$NumericAntd.copy()Ljava/lang/Object;:776 - ReplaceVariable splitPoint -> value
[MASTER] 21:01:32.264 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 711: weka.classifiers.rules.JRip$NumericAntd.copy()Ljava/lang/Object;:776 - ReplaceVariable splitPoint -> accuRate
[MASTER] 21:01:32.264 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 712: weka.classifiers.rules.JRip$NumericAntd.copy()Ljava/lang/Object;:776 - ReplaceVariable splitPoint -> maxInfoGain
[MASTER] 21:01:32.264 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 713: weka.classifiers.rules.JRip$NumericAntd.copy()Ljava/lang/Object;:776 - InsertUnaryOp Negation
[MASTER] 21:01:32.264 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 714: weka.classifiers.rules.JRip$NumericAntd.copy()Ljava/lang/Object;:777 - ReplaceVariable na -> this
[MASTER] 21:01:32.267 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.Antd.copy()Ljava/lang/Object;
[MASTER] 21:01:32.276 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.Antd.copy()Ljava/lang/Object;
[MASTER] 21:01:32.277 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$NumericAntd.copy()Ljava/lang/Object;: root-Branch in context: 
[MASTER] 21:01:58.883 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 240s and 262 generations, 107179 statements, best individual has fitness: 12176.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 38%
* Total number of goals: 705
* Number of covered goals: 269
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 29%
* Total number of goals: 416
* Number of covered goals: 119
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 58%
* Total number of goals: 993
* Number of covered goals: 578
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 30%
* Total number of goals: 93
* Number of covered goals: 28
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 27%
* Total number of goals: 416
* Number of covered goals: 113
* Generated 81 tests with total length 492
* Resulting test suite's coverage: 45% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 254s and 128 generations, 81835 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 19 tests with total length 82
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/mosa/tests/s1002/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 23%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 7
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/mosa/tests/s1002/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2248
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:11:18.335 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 21:11:18.335 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 21:11:18.337 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 21:11:18.482 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:11:18.486 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:11:18.511 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1412
* Using seed 1002
* Starting evolution
[MASTER] 21:11:27.348 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 21:11:27.348 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 21:11:30.471 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: Line 625
[MASTER] 21:11:30.471 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: Line 626
[MASTER] 21:11:30.472 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: root-Branch
[MASTER] 21:11:30.473 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 257: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - ReplaceVariable l -> m_normalize
[MASTER] 21:11:30.473 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 261: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - InsertUnaryOp Negation of l
[MASTER] 21:11:30.473 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 262: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - InsertUnaryOp IINC 1 l
[MASTER] 21:11:30.473 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 263: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - InsertUnaryOp IINC -1 l
[MASTER] 21:11:30.474 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V
[MASTER] 21:11:30.474 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V
[MASTER] 21:11:30.474 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setLowercaseTokens(Z)V
[MASTER] 21:13:35.028 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 21:15:41.151 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D:Zero
* Search finished after 284s and 315 generations, 132173 statements, best individual has fitness: 1472.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 90%
* Total number of goals: 338
* Number of covered goals: 305
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 83%
* Total number of goals: 194
* Number of covered goals: 161
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 476
* Number of covered goals: 442
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 112
* Number of covered goals: 60
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 49
* Number of covered goals: 48
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 49
* Number of covered goals: 48
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 81%
* Total number of goals: 194
* Number of covered goals: 158
* Generated 71 tests with total length 565
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 57%
* Compiling and checking tests
[MASTER] 21:21:12.229 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_3_1573680072166/weka/classifiers/bayes/NaiveBayesMultinomialText_3_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_3_1573680072166/weka/classifiers/bayes/NaiveBayesMultinomialText_3_tmp__ESTest_scaffolding.java]]
[MASTER] 21:21:12.229 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 21:21:12.229 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 21:21:12.233 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 21:21:12.233 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_3_1573680072166/weka/classifiers/bayes/NaiveBayesMultinomialText_3_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Nov 13 21:21:12 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_3_tmp__ESTest extends NaiveBayesMultinomialText_3_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=1.0931471805599453
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
28:       boolean boolean0 = naiveBayesMultinomialText0.getNormalizeDocLength();
29:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
30:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
31:       assertFalse(boolean0);
32:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
33:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
34:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
35:   }
36: }
RegularFileObject[/tmp/EvoSuite_3_1573680072166/weka/classifiers/bayes/NaiveBayesMultinomialText_3_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Nov 13 21:21:12 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_3_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_3_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.core.stemmers.NullStemmer",
105:       "weka.classifiers.functions.SGDText",
106:       "weka.core.Utils",
107:       "weka.core.CustomDisplayStringProvider",
108:       "weka.core.tokenizers.Tokenizer",
109:       "weka.core.NormalizableDistance",
110:       "weka.classifiers.functions.SMOreg",
111:       "weka.core.NoSupportForMissingValuesException",
112:       "weka.classifiers.UpdateableClassifier",
113:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
114:       "weka.core.MultiInstanceCapabilitiesHandler",
115:       "weka.core.Copyable",
116:       "weka.core.Capabilities",
117:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
119:       "weka.core.BinarySparseInstance",
120:       "weka.classifiers.functions.supportVector.CachedKernel",
121:       "weka.core.SerializedObject",
122:       "weka.clusterers.UpdateableClusterer",
123:       "weka.core.Summarizable",
124:       "weka.core.AdditionalMeasureProducer",
125:       "weka.core.neighboursearch.balltrees.BallNode",
126:       "org.pentaho.packageManagement.PackageManager$1",
127:       "weka.core.Drawable",
128:       "weka.core.CapabilitiesHandler",
129:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
130:       "weka.attributeSelection.ASEvaluation",
131:       "weka.core.AbstractInstance",
132:       "weka.core.SelectedTag",
133:       "weka.classifiers.functions.supportVector.RegOptimizer",
134:       "org.pentaho.packageManagement.DefaultPackage",
135:       "weka.core.neighboursearch.balltrees.BallSplitter",
136:       "weka.core.Version",
137:       "weka.core.Tag",
138:       "weka.core.ManhattanDistance",
139:       "weka.classifiers.AbstractClassifier",
140:       "weka.filters.unsupervised.attribute.Center",
141:       "weka.core.OptionHandler",
142:       "weka.core.WekaException",
143:       "weka.filters.StreamableFilter",
144:       "weka.core.Range",
145:       "weka.core.Attribute$1",
146:       "weka.classifiers.Classifier",
147:       "weka.core.Capabilities$Capability",
148:       "weka.core.SparseInstance",
149:       "org.pentaho.packageManagement.PackageManager",
150:       "weka.core.WekaEnumeration",
151:       "weka.attributeSelection.AttributeTransformer",
152:       "weka.core.tokenizers.WordTokenizer",
153:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
154:       "weka.attributeSelection.PrincipalComponents",
155:       "weka.core.stemmers.SnowballStemmer",
156:       "weka.core.stemmers.LovinsStemmer",
157:       "weka.classifiers.Evaluation",
158:       "weka.classifiers.functions.supportVector.Kernel",
159:       "weka.core.WekaPackageManager",
160:       "weka.core.TechnicalInformationHandler",
161:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
162:       "weka.core.Option",
163:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
164:       "weka.core.neighboursearch.PerformanceStats",
165:       "weka.filters.Sourcable",
166:       "weka.core.Attribute",
167:       "weka.core.Stopwords",
168:       "weka.core.tokenizers.AlphabeticTokenizer",
169:       "weka.core.FastVector",
170:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
171:       "weka.core.UnassignedDatasetException",
172:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
173:       "weka.classifiers.functions.supportVector.RegSMOImproved",
174:       "weka.classifiers.RandomizableClassifier",
175:       "weka.core.RevisionUtils",
176:       "weka.core.Instance",
177:       "weka.classifiers.functions.supportVector.RegSMO",
178:       "weka.classifiers.functions.supportVector.PolyKernel",
179:       "weka.core.ProtectedProperties",
180:       "weka.core.AttributeStats",
181:       "weka.core.WeightedInstancesHandler",
182:       "weka.core.neighboursearch.NearestNeighbourSearch",
183:       "weka.filters.unsupervised.attribute.Remove",
184:       "weka.core.Randomizable",
185:       "weka.core.EuclideanDistance",
186:       "weka.core.Instances",
187:       "weka.filters.unsupervised.attribute.Normalize",
188:       "weka.core.UnassignedClassException",
189:       "weka.filters.unsupervised.attribute.Standardize",
190:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
191:       "weka.core.TechnicalInformation",
192:       "weka.core.UnsupportedAttributeTypeException",
193:       "weka.classifiers.Sourcable",
194:       "weka.core.RevisionHandler",
195:       "weka.classifiers.evaluation.output.prediction.PlainText",
196:       "weka.core.neighboursearch.TreePerformanceStats",
197:       "weka.core.xml.XMLSerialization",
198:       "weka.classifiers.xml.XMLClassifier",
199:       "weka.filters.Filter"
200:     );
201:   } 
202: 
203:   private static void resetClasses() {
204:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_3_tmp__ESTest_scaffolding.class.getClassLoader()); 
205: 
206:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
207:       "weka.classifiers.AbstractClassifier",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
210:       "weka.core.Capabilities$Capability",
211:       "weka.core.tokenizers.Tokenizer",
212:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
213:       "weka.core.tokenizers.WordTokenizer",
214:       "weka.core.stemmers.NullStemmer",
215:       "weka.core.NormalizableDistance",
216:       "weka.core.ChebyshevDistance",
217:       "weka.core.Range",
218:       "weka.core.AbstractInstance",
219:       "weka.core.SparseInstance",
220:       "weka.core.BinarySparseInstance",
221:       "weka.core.RevisionUtils",
222:       "weka.classifiers.misc.SerializedClassifier",
223:       "weka.core.Utils",
224:       "weka.core.tokenizers.NGramTokenizer",
225:       "weka.core.Option",
226:       "weka.core.neighboursearch.balltrees.BallNode",
227:       "weka.core.UnassignedDatasetException",
228:       "weka.classifiers.Evaluation",
229:       "weka.core.DenseInstance",
230:       "weka.core.stemmers.LovinsStemmer",
231:       "weka.classifiers.SingleClassifierEnhancer",
232:       "weka.classifiers.misc.InputMappedClassifier",
233:       "weka.classifiers.rules.ZeroR",
234:       "weka.core.SerializedObject",
235:       "weka.classifiers.bayes.BayesNet",
236:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
237:       "weka.core.Tag",
238:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
239:       "weka.classifiers.bayes.net.search.local.K2",
240:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
241:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
242:       "weka.core.Capabilities",
243:       "org.pentaho.packageManagement.PackageManager",
244:       "org.pentaho.packageManagement.DefaultPackageManager",
245:       "weka.core.Version",
246:       "weka.core.Environment",
247:       "weka.core.WekaPackageManager",
248:       "weka.core.stemmers.Stemming",
249:       "weka.core.Instances",
250:       "weka.classifiers.RandomizableClassifier",
251:       "weka.classifiers.functions.SGDText",
252:       "weka.core.tokenizers.AlphabeticTokenizer",
253:       "weka.core.neighboursearch.NearestNeighbourSearch",
254:       "weka.core.neighboursearch.KDTree",
255:       "weka.core.EuclideanDistance",
256:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
257:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
258:       "weka.core.TechnicalInformation",
259:       "weka.core.TechnicalInformation$Type",
260:       "weka.core.TechnicalInformation$Field",
261:       "weka.attributeSelection.ASEvaluation",
262:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
263:       "weka.attributeSelection.PrincipalComponents",
264:       "weka.core.TestInstances",
265:       "weka.core.Attribute",
266:       "weka.core.ProtectedProperties",
267:       "weka.core.WekaEnumeration",
268:       "weka.core.Attribute$1",
269:       "weka.core.stemmers.SnowballStemmer",
270:       "weka.core.neighboursearch.LinearNNSearch",
271:       "weka.attributeSelection.GainRatioAttributeEval",
272:       "weka.attributeSelection.AttributeSelection",
273:       "weka.core.Stopwords",
274:       "weka.core.ListOptions",
275:       "weka.core.neighboursearch.CoverTree",
276:       "weka.core.WekaException",
277:       "weka.core.Check",
278:       "weka.core.CheckOptionHandler",
279:       "weka.classifiers.bayes.net.BIFReader",
280:       "weka.classifiers.bayes.NaiveBayesMultinomial",
281:       "weka.core.SelectedTag",
282:       "weka.classifiers.CostMatrix",
283:       "weka.core.neighboursearch.BallTree",
284:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
285:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
286:       "weka.core.neighboursearch.balltrees.BallSplitter",
287:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
288:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
289:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
290:       "weka.classifiers.bayes.NaiveBayes",
291:       "weka.attributeSelection.InfoGainAttributeEval",
292:       "weka.core.Javadoc",
293:       "weka.core.ClassDiscovery",
294:       "weka.core.ClassCache",
295:       "weka.core.AllJavadoc",
296:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
297:       "weka.classifiers.meta.CostSensitiveClassifier",
298:       "weka.classifiers.MultipleClassifiersCombiner",
299:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
300:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
301:       "weka.classifiers.meta.Stacking",
302:       "weka.core.UnsupportedAttributeTypeException",
303:       "weka.core.converters.ArffLoader$ArffReader",
304:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
305:       "weka.classifiers.meta.Vote",
306:       "weka.core.TechnicalInformationHandlerJavadoc",
307:       "weka.core.stemmers.IteratedLovinsStemmer",
308:       "weka.filters.Filter",
309:       "weka.filters.supervised.attribute.Discretize",
310:       "weka.classifiers.functions.supportVector.Kernel",
311:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
312:       "weka.attributeSelection.CfsSubsetEval",
313:       "weka.filters.SimpleFilter",
314:       "weka.filters.SimpleStreamFilter",
315:       "weka.filters.MultiFilter",
316:       "weka.filters.AllFilter",
317:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
318:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
319:       "weka.classifiers.trees.m5.M5Base",
320:       "weka.classifiers.rules.M5Rules",
321:       "weka.classifiers.functions.LinearRegression",
322:       "weka.classifiers.meta.CVParameterSelection",
323:       "weka.core.FastVector",
324:       "weka.core.matrix.Matrix",
325:       "weka.estimators.Estimator",
326:       "weka.estimators.KernelEstimator",
327:       "weka.classifiers.functions.GaussianProcesses",
328:       "weka.classifiers.functions.supportVector.CachedKernel",
329:       "weka.classifiers.functions.supportVector.PolyKernel",
330:       "weka.classifiers.functions.supportVector.StringKernel",
331:       "weka.core.FindWithCapabilities",
332:       "weka.core.SingleIndex",
333:       "weka.estimators.NormalEstimator",
334:       "weka.core.UnassignedClassException",
335:       "weka.classifiers.trees.RandomForest",
336:       "weka.classifiers.trees.RandomTree",
337:       "weka.attributeSelection.WrapperSubsetEval",
338:       "weka.core.AttributeStats",
339:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
340:       "weka.classifiers.trees.J48",
341:       "weka.classifiers.trees.j48.ClassifierTree",
342:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
343:       "weka.classifiers.functions.SMO",
344:       "weka.classifiers.lazy.IBk",
345:       "weka.classifiers.functions.VotedPerceptron",
346:       "weka.classifiers.IteratedSingleClassifierEnhancer",
347:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
348:       "weka.classifiers.meta.AdaBoostM1",
349:       "weka.classifiers.trees.DecisionStump",
350:       "weka.classifiers.functions.supportVector.RBFKernel",
351:       "weka.classifiers.meta.LogitBoost",
352:       "weka.classifiers.meta.RegressionByDiscretization",
353:       "weka.filters.unsupervised.attribute.Discretize",
354:       "weka.classifiers.trees.LMT",
355:       "weka.classifiers.lazy.KStar",
356:       "weka.classifiers.trees.REPTree",
357:       "weka.classifiers.meta.FilteredClassifier",
358:       "weka.filters.supervised.attribute.AttributeSelection",
359:       "weka.attributeSelection.ASSearch",
360:       "weka.attributeSelection.GreedyStepwise",
361:       "weka.attributeSelection.BestFirst",
362:       "weka.classifiers.rules.PART",
363:       "weka.classifiers.rules.part.MakeDecList",
364:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
365:       "weka.classifiers.rules.OneR",
366:       "weka.classifiers.meta.MultiScheme",
367:       "weka.classifiers.rules.DecisionTable",
368:       "weka.attributeSelection.OneRAttributeEval",
369:       "weka.core.ManhattanDistance",
370:       "weka.classifiers.functions.MultilayerPerceptron",
371:       "weka.filters.unsupervised.attribute.NominalToBinary",
372:       "weka.classifiers.functions.neural.SigmoidUnit",
373:       "weka.classifiers.functions.neural.LinearUnit",
374:       "weka.classifiers.functions.SGD",
375:       "weka.classifiers.functions.supportVector.Puk",
376:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
377:       "weka.classifiers.lazy.LWL",
378:       "weka.classifiers.functions.SimpleLinearRegression",
379:       "weka.attributeSelection.ReliefFAttributeEval",
380:       "weka.classifiers.meta.MultiClassClassifier",
381:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
382:       "weka.classifiers.functions.Logistic",
383:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
384:       "weka.estimators.MahalanobisEstimator",
385:       "weka.core.Queue",
386:       "weka.core.AttributeLocator",
387:       "weka.core.StringLocator",
388:       "weka.core.RelationalLocator",
389:       "weka.core.Queue$QueueNode",
390:       "weka.filters.unsupervised.attribute.Remove",
391:       "weka.filters.unsupervised.attribute.Standardize",
392:       "weka.core.Matrix",
393:       "weka.core.matrix.EigenvalueDecomposition",
394:       "weka.classifiers.meta.AdditiveRegression",
395:       "weka.estimators.PoissonEstimator",
396:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
397:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
398:       "weka.classifiers.meta.RandomCommittee",
399:       "weka.classifiers.functions.SimpleLogistic",
400:       "weka.attributeSelection.CorrelationAttributeEval",
401:       "weka.classifiers.meta.Bagging",
402:       "weka.classifiers.bayes.NaiveBayesUpdateable",
403:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
404:       "weka.classifiers.rules.JRip",
405:       "weka.classifiers.meta.AttributeSelectedClassifier",
406:       "weka.classifiers.functions.SMOreg",
407:       "weka.classifiers.functions.supportVector.RegOptimizer",
408:       "weka.classifiers.functions.supportVector.RegSMO",
409:       "weka.classifiers.functions.supportVector.RegSMOImproved",
410:       "weka.classifiers.meta.ClassificationViaRegression",
411:       "weka.classifiers.trees.M5P",
412:       "weka.estimators.DiscreteEstimator",
413:       "weka.core.OptionHandlerJavadoc",
414:       "weka.classifiers.rules.OneR$OneRRule",
415:       "weka.core.neighboursearch.PerformanceStats"
416:     );
417:   }
418: }

[MASTER] 21:21:12.234 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
boolean boolean0 = naiveBayesMultinomialText0.getNormalizeDocLength();
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertFalse(boolean0);
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);


[MASTER] 21:21:12.805 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_14_1573680072764/weka/classifiers/bayes/NaiveBayesMultinomialText_14_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_14_1573680072764/weka/classifiers/bayes/NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding.java]]
[MASTER] 21:21:12.805 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 21:21:12.805 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 21:21:12.805 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 21:21:12.806 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_14_1573680072764/weka/classifiers/bayes/NaiveBayesMultinomialText_14_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Nov 13 21:21:12 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.classifiers.functions.SGDText;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_14_tmp__ESTest extends NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=3.3999529794096968
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
29:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
30:       naiveBayesMultinomialText0.setOptions(stringArray0);
31:       naiveBayesMultinomialText0.tokenizerTipText();
32:       naiveBayesMultinomialText0.setNorm(0.0);
33:       naiveBayesMultinomialText0.globalInfo();
34:       naiveBayesMultinomialText0.pruneDictionary();
35:       SGDText sGDText0 = new SGDText();
36:       sGDText0.setPeriodicPruning((-3560));
37:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
38:       naiveBayesMultinomialText1.getTokenizer();
39:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
40:       double double0 = naiveBayesMultinomialText0.getNorm();
41:       assertEquals(0.0, double0, 0.01);
42:   }
43: }
RegularFileObject[/tmp/EvoSuite_14_1573680072764/weka/classifiers/bayes/NaiveBayesMultinomialText_14_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Nov 13 21:21:12 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.core.stemmers.NullStemmer",
105:       "weka.classifiers.functions.SGDText",
106:       "weka.core.Utils",
107:       "weka.core.CustomDisplayStringProvider",
108:       "weka.core.tokenizers.Tokenizer",
109:       "weka.core.NormalizableDistance",
110:       "weka.classifiers.functions.SMOreg",
111:       "weka.core.NoSupportForMissingValuesException",
112:       "weka.classifiers.UpdateableClassifier",
113:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
114:       "weka.core.MultiInstanceCapabilitiesHandler",
115:       "weka.core.Copyable",
116:       "weka.core.Capabilities",
117:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
119:       "weka.core.BinarySparseInstance",
120:       "weka.classifiers.functions.supportVector.CachedKernel",
121:       "weka.core.SerializedObject",
122:       "weka.clusterers.UpdateableClusterer",
123:       "weka.core.Summarizable",
124:       "weka.core.AdditionalMeasureProducer",
125:       "weka.core.neighboursearch.balltrees.BallNode",
126:       "org.pentaho.packageManagement.PackageManager$1",
127:       "weka.core.Drawable",
128:       "weka.core.CapabilitiesHandler",
129:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
130:       "weka.attributeSelection.ASEvaluation",
131:       "weka.core.AbstractInstance",
132:       "weka.core.SelectedTag",
133:       "weka.classifiers.functions.supportVector.RegOptimizer",
134:       "org.pentaho.packageManagement.DefaultPackage",
135:       "weka.core.neighboursearch.balltrees.BallSplitter",
136:       "weka.core.Version",
137:       "weka.core.Tag",
138:       "weka.core.ManhattanDistance",
139:       "weka.classifiers.AbstractClassifier",
140:       "weka.filters.unsupervised.attribute.Center",
141:       "weka.core.OptionHandler",
142:       "weka.core.WekaException",
143:       "weka.filters.StreamableFilter",
144:       "weka.core.Range",
145:       "weka.core.Attribute$1",
146:       "weka.classifiers.Classifier",
147:       "weka.core.Capabilities$Capability",
148:       "weka.core.SparseInstance",
149:       "org.pentaho.packageManagement.PackageManager",
150:       "weka.core.WekaEnumeration",
151:       "weka.attributeSelection.AttributeTransformer",
152:       "weka.core.tokenizers.WordTokenizer",
153:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
154:       "weka.attributeSelection.PrincipalComponents",
155:       "weka.core.stemmers.SnowballStemmer",
156:       "weka.core.stemmers.LovinsStemmer",
157:       "weka.classifiers.Evaluation",
158:       "weka.classifiers.functions.supportVector.Kernel",
159:       "weka.core.WekaPackageManager",
160:       "weka.core.TechnicalInformationHandler",
161:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
162:       "weka.core.Option",
163:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
164:       "weka.core.neighboursearch.PerformanceStats",
165:       "weka.filters.Sourcable",
166:       "weka.core.Attribute",
167:       "weka.core.Stopwords",
168:       "weka.core.tokenizers.AlphabeticTokenizer",
169:       "weka.core.FastVector",
170:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
171:       "weka.core.UnassignedDatasetException",
172:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
173:       "weka.classifiers.functions.supportVector.RegSMOImproved",
174:       "weka.classifiers.RandomizableClassifier",
175:       "weka.core.RevisionUtils",
176:       "weka.core.Instance",
177:       "weka.classifiers.functions.supportVector.RegSMO",
178:       "weka.classifiers.functions.supportVector.PolyKernel",
179:       "weka.core.ProtectedProperties",
180:       "weka.core.AttributeStats",
181:       "weka.core.WeightedInstancesHandler",
182:       "weka.core.neighboursearch.NearestNeighbourSearch",
183:       "weka.filters.unsupervised.attribute.Remove",
184:       "weka.core.Randomizable",
185:       "weka.core.EuclideanDistance",
186:       "weka.core.Instances",
187:       "weka.filters.unsupervised.attribute.Normalize",
188:       "weka.core.UnassignedClassException",
189:       "weka.filters.unsupervised.attribute.Standardize",
190:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
191:       "weka.core.TechnicalInformation",
192:       "weka.core.UnsupportedAttributeTypeException",
193:       "weka.classifiers.Sourcable",
194:       "weka.core.RevisionHandler",
195:       "weka.classifiers.evaluation.output.prediction.PlainText",
196:       "weka.core.neighboursearch.TreePerformanceStats",
197:       "weka.core.xml.XMLSerialization",
198:       "weka.classifiers.xml.XMLClassifier",
199:       "weka.filters.Filter"
200:     );
201:   } 
202: 
203:   private static void resetClasses() {
204:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding.class.getClassLoader()); 
205: 
206:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
207:       "weka.classifiers.AbstractClassifier",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
210:       "weka.core.Capabilities$Capability",
211:       "weka.core.tokenizers.Tokenizer",
212:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
213:       "weka.core.tokenizers.WordTokenizer",
214:       "weka.core.stemmers.NullStemmer",
215:       "weka.core.NormalizableDistance",
216:       "weka.core.ChebyshevDistance",
217:       "weka.core.Range",
218:       "weka.core.AbstractInstance",
219:       "weka.core.SparseInstance",
220:       "weka.core.BinarySparseInstance",
221:       "weka.core.RevisionUtils",
222:       "weka.classifiers.misc.SerializedClassifier",
223:       "weka.core.Utils",
224:       "weka.core.tokenizers.NGramTokenizer",
225:       "weka.core.Option",
226:       "weka.core.neighboursearch.balltrees.BallNode",
227:       "weka.core.UnassignedDatasetException",
228:       "weka.classifiers.Evaluation",
229:       "weka.core.DenseInstance",
230:       "weka.core.stemmers.LovinsStemmer",
231:       "weka.classifiers.SingleClassifierEnhancer",
232:       "weka.classifiers.misc.InputMappedClassifier",
233:       "weka.classifiers.rules.ZeroR",
234:       "weka.core.SerializedObject",
235:       "weka.classifiers.bayes.BayesNet",
236:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
237:       "weka.core.Tag",
238:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
239:       "weka.classifiers.bayes.net.search.local.K2",
240:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
241:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
242:       "weka.core.Capabilities",
243:       "org.pentaho.packageManagement.PackageManager",
244:       "org.pentaho.packageManagement.DefaultPackageManager",
245:       "weka.core.Version",
246:       "weka.core.Environment",
247:       "weka.core.WekaPackageManager",
248:       "weka.core.stemmers.Stemming",
249:       "weka.core.Instances",
250:       "weka.classifiers.RandomizableClassifier",
251:       "weka.classifiers.functions.SGDText",
252:       "weka.core.tokenizers.AlphabeticTokenizer",
253:       "weka.core.neighboursearch.NearestNeighbourSearch",
254:       "weka.core.neighboursearch.KDTree",
255:       "weka.core.EuclideanDistance",
256:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
257:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
258:       "weka.core.TechnicalInformation",
259:       "weka.core.TechnicalInformation$Type",
260:       "weka.core.TechnicalInformation$Field",
261:       "weka.attributeSelection.ASEvaluation",
262:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
263:       "weka.attributeSelection.PrincipalComponents",
264:       "weka.core.TestInstances",
265:       "weka.core.Attribute",
266:       "weka.core.ProtectedProperties",
267:       "weka.core.WekaEnumeration",
268:       "weka.core.Attribute$1",
269:       "weka.core.stemmers.SnowballStemmer",
270:       "weka.core.neighboursearch.LinearNNSearch",
271:       "weka.attributeSelection.GainRatioAttributeEval",
272:       "weka.attributeSelection.AttributeSelection",
273:       "weka.core.Stopwords",
274:       "weka.core.ListOptions",
275:       "weka.core.neighboursearch.CoverTree",
276:       "weka.core.WekaException",
277:       "weka.core.Check",
278:       "weka.core.CheckOptionHandler",
279:       "weka.classifiers.bayes.net.BIFReader",
280:       "weka.classifiers.bayes.NaiveBayesMultinomial",
281:       "weka.core.SelectedTag",
282:       "weka.classifiers.CostMatrix",
283:       "weka.core.neighboursearch.BallTree",
284:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
285:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
286:       "weka.core.neighboursearch.balltrees.BallSplitter",
287:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
288:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
289:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
290:       "weka.classifiers.bayes.NaiveBayes",
291:       "weka.attributeSelection.InfoGainAttributeEval",
292:       "weka.core.Javadoc",
293:       "weka.core.ClassDiscovery",
294:       "weka.core.ClassCache",
295:       "weka.core.AllJavadoc",
296:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
297:       "weka.classifiers.meta.CostSensitiveClassifier",
298:       "weka.classifiers.MultipleClassifiersCombiner",
299:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
300:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
301:       "weka.classifiers.meta.Stacking",
302:       "weka.core.UnsupportedAttributeTypeException",
303:       "weka.core.converters.ArffLoader$ArffReader",
304:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
305:       "weka.classifiers.meta.Vote",
306:       "weka.core.TechnicalInformationHandlerJavadoc",
307:       "weka.core.stemmers.IteratedLovinsStemmer",
308:       "weka.filters.Filter",
309:       "weka.filters.supervised.attribute.Discretize",
310:       "weka.classifiers.functions.supportVector.Kernel",
311:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
312:       "weka.attributeSelection.CfsSubsetEval",
313:       "weka.filters.SimpleFilter",
314:       "weka.filters.SimpleStreamFilter",
315:       "weka.filters.MultiFilter",
316:       "weka.filters.AllFilter",
317:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
318:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
319:       "weka.classifiers.trees.m5.M5Base",
320:       "weka.classifiers.rules.M5Rules",
321:       "weka.classifiers.functions.LinearRegression",
322:       "weka.classifiers.meta.CVParameterSelection",
323:       "weka.core.FastVector",
324:       "weka.core.matrix.Matrix",
325:       "weka.estimators.Estimator",
326:       "weka.estimators.KernelEstimator",
327:       "weka.classifiers.functions.GaussianProcesses",
328:       "weka.classifiers.functions.supportVector.CachedKernel",
329:       "weka.classifiers.functions.supportVector.PolyKernel",
330:       "weka.classifiers.functions.supportVector.StringKernel",
331:       "weka.core.FindWithCapabilities",
332:       "weka.core.SingleIndex",
333:       "weka.estimators.NormalEstimator",
334:       "weka.core.UnassignedClassException",
335:       "weka.classifiers.trees.RandomForest",
336:       "weka.classifiers.trees.RandomTree",
337:       "weka.attributeSelection.WrapperSubsetEval",
338:       "weka.core.AttributeStats",
339:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
340:       "weka.classifiers.trees.J48",
341:       "weka.classifiers.trees.j48.ClassifierTree",
342:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
343:       "weka.classifiers.functions.SMO",
344:       "weka.classifiers.lazy.IBk",
345:       "weka.classifiers.functions.VotedPerceptron",
346:       "weka.classifiers.IteratedSingleClassifierEnhancer",
347:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
348:       "weka.classifiers.meta.AdaBoostM1",
349:       "weka.classifiers.trees.DecisionStump",
350:       "weka.classifiers.functions.supportVector.RBFKernel",
351:       "weka.classifiers.meta.LogitBoost",
352:       "weka.classifiers.meta.RegressionByDiscretization",
353:       "weka.filters.unsupervised.attribute.Discretize",
354:       "weka.classifiers.trees.LMT",
355:       "weka.classifiers.lazy.KStar",
356:       "weka.classifiers.trees.REPTree",
357:       "weka.classifiers.meta.FilteredClassifier",
358:       "weka.filters.supervised.attribute.AttributeSelection",
359:       "weka.attributeSelection.ASSearch",
360:       "weka.attributeSelection.GreedyStepwise",
361:       "weka.attributeSelection.BestFirst",
362:       "weka.classifiers.rules.PART",
363:       "weka.classifiers.rules.part.MakeDecList",
364:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
365:       "weka.classifiers.rules.OneR",
366:       "weka.classifiers.meta.MultiScheme",
367:       "weka.classifiers.rules.DecisionTable",
368:       "weka.attributeSelection.OneRAttributeEval",
369:       "weka.core.ManhattanDistance",
370:       "weka.classifiers.functions.MultilayerPerceptron",
371:       "weka.filters.unsupervised.attribute.NominalToBinary",
372:       "weka.classifiers.functions.neural.SigmoidUnit",
373:       "weka.classifiers.functions.neural.LinearUnit",
374:       "weka.classifiers.functions.SGD",
375:       "weka.classifiers.functions.supportVector.Puk",
376:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
377:       "weka.classifiers.lazy.LWL",
378:       "weka.classifiers.functions.SimpleLinearRegression",
379:       "weka.attributeSelection.ReliefFAttributeEval",
380:       "weka.classifiers.meta.MultiClassClassifier",
381:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
382:       "weka.classifiers.functions.Logistic",
383:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
384:       "weka.estimators.MahalanobisEstimator",
385:       "weka.core.Queue",
386:       "weka.core.AttributeLocator",
387:       "weka.core.StringLocator",
388:       "weka.core.RelationalLocator",
389:       "weka.core.Queue$QueueNode",
390:       "weka.filters.unsupervised.attribute.Remove",
391:       "weka.filters.unsupervised.attribute.Standardize",
392:       "weka.core.Matrix",
393:       "weka.core.matrix.EigenvalueDecomposition",
394:       "weka.classifiers.meta.AdditiveRegression",
395:       "weka.estimators.PoissonEstimator",
396:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
397:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
398:       "weka.classifiers.meta.RandomCommittee",
399:       "weka.classifiers.functions.SimpleLogistic",
400:       "weka.attributeSelection.CorrelationAttributeEval",
401:       "weka.classifiers.meta.Bagging",
402:       "weka.classifiers.bayes.NaiveBayesUpdateable",
403:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
404:       "weka.classifiers.rules.JRip",
405:       "weka.classifiers.meta.AttributeSelectedClassifier",
406:       "weka.classifiers.functions.SMOreg",
407:       "weka.classifiers.functions.supportVector.RegOptimizer",
408:       "weka.classifiers.functions.supportVector.RegSMO",
409:       "weka.classifiers.functions.supportVector.RegSMOImproved",
410:       "weka.classifiers.meta.ClassificationViaRegression",
411:       "weka.classifiers.trees.M5P",
412:       "weka.estimators.DiscreteEstimator",
413:       "weka.core.OptionHandlerJavadoc",
414:       "weka.classifiers.rules.OneR$OneRRule",
415:       "weka.core.neighboursearch.PerformanceStats"
416:     );
417:   }
418: }

[MASTER] 21:21:12.807 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText0.tokenizerTipText();
naiveBayesMultinomialText0.setNorm(0.0);
naiveBayesMultinomialText0.globalInfo();
naiveBayesMultinomialText0.pruneDictionary();
SGDText sGDText0 = new SGDText();
sGDText0.setPeriodicPruning((-3560));
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.getTokenizer();
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
double double0 = naiveBayesMultinomialText0.getNorm();
assertEquals(0.0, double0, 0.01);


[MASTER] 21:21:14.386 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_51_1573680074342/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_51_1573680074342/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding.java]]
[MASTER] 21:21:14.386 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 21:21:14.386 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 21:21:14.387 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 21:21:14.387 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_51_1573680074342/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Nov 13 21:21:14 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.BinarySparseInstance;
17: import weka.core.Capabilities;
18: import weka.core.Instances;
19: import weka.core.TestInstances;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_51_tmp__ESTest extends NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=2.4441919359968938
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
32:       Capabilities capabilities0 = naiveBayesMultinomialText0.getCapabilities();
33:       TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
34:       Instances instances0 = testInstances0.generate();
35:       naiveBayesMultinomialText0.buildClassifier(instances0);
36:       assertEquals(0, capabilities0.getMinimumNumberInstances());
37:       
38:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-1.0), (int[]) null, (-1));
39:       double[] doubleArray0 = naiveBayesMultinomialText0.distributionForInstance(binarySparseInstance0);
40:       assertArrayEquals(new double[] {0.3750000000000001, 0.16666666666666669, 0.29166666666666663, 0.16666666666666669}, doubleArray0, 0.01);
41:       
42:       double double0 = naiveBayesMultinomialText0.getLNorm();
43:       assertEquals(2.0, double0, 0.01);
44:       
45:       naiveBayesMultinomialText0.useStopListTipText();
46:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
47:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
48:   }
49: }
RegularFileObject[/tmp/EvoSuite_51_1573680074342/weka/classifiers/bayes/NaiveBayesMultinomialText_51_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Nov 13 21:21:14 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.core.stemmers.NullStemmer",
105:       "weka.classifiers.functions.SGDText",
106:       "weka.core.Utils",
107:       "weka.core.CustomDisplayStringProvider",
108:       "weka.core.tokenizers.Tokenizer",
109:       "weka.core.NormalizableDistance",
110:       "weka.classifiers.functions.SMOreg",
111:       "weka.core.NoSupportForMissingValuesException",
112:       "weka.classifiers.UpdateableClassifier",
113:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
114:       "weka.core.MultiInstanceCapabilitiesHandler",
115:       "weka.core.Copyable",
116:       "weka.core.Capabilities",
117:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
119:       "weka.core.BinarySparseInstance",
120:       "weka.classifiers.functions.supportVector.CachedKernel",
121:       "weka.core.SerializedObject",
122:       "weka.clusterers.UpdateableClusterer",
123:       "weka.core.Summarizable",
124:       "weka.core.AdditionalMeasureProducer",
125:       "weka.core.neighboursearch.balltrees.BallNode",
126:       "org.pentaho.packageManagement.PackageManager$1",
127:       "weka.core.Drawable",
128:       "weka.core.CapabilitiesHandler",
129:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
130:       "weka.attributeSelection.ASEvaluation",
131:       "weka.core.AbstractInstance",
132:       "weka.core.SelectedTag",
133:       "weka.classifiers.functions.supportVector.RegOptimizer",
134:       "org.pentaho.packageManagement.DefaultPackage",
135:       "weka.core.neighboursearch.balltrees.BallSplitter",
136:       "weka.core.Version",
137:       "weka.core.Tag",
138:       "weka.core.ManhattanDistance",
139:       "weka.classifiers.AbstractClassifier",
140:       "weka.filters.unsupervised.attribute.Center",
141:       "weka.core.OptionHandler",
142:       "weka.core.WekaException",
143:       "weka.filters.StreamableFilter",
144:       "weka.core.Range",
145:       "weka.core.Attribute$1",
146:       "weka.classifiers.Classifier",
147:       "weka.core.Capabilities$Capability",
148:       "weka.core.SparseInstance",
149:       "org.pentaho.packageManagement.PackageManager",
150:       "weka.core.WekaEnumeration",
151:       "weka.attributeSelection.AttributeTransformer",
152:       "weka.core.tokenizers.WordTokenizer",
153:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
154:       "weka.attributeSelection.PrincipalComponents",
155:       "weka.core.stemmers.SnowballStemmer",
156:       "weka.core.stemmers.LovinsStemmer",
157:       "weka.classifiers.Evaluation",
158:       "weka.classifiers.functions.supportVector.Kernel",
159:       "weka.core.WekaPackageManager",
160:       "weka.core.TechnicalInformationHandler",
161:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
162:       "weka.core.Option",
163:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
164:       "weka.core.neighboursearch.PerformanceStats",
165:       "weka.filters.Sourcable",
166:       "weka.core.Attribute",
167:       "weka.core.Stopwords",
168:       "weka.core.tokenizers.AlphabeticTokenizer",
169:       "weka.core.FastVector",
170:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
171:       "weka.core.UnassignedDatasetException",
172:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
173:       "weka.classifiers.functions.supportVector.RegSMOImproved",
174:       "weka.classifiers.RandomizableClassifier",
175:       "weka.core.RevisionUtils",
176:       "weka.core.Instance",
177:       "weka.classifiers.functions.supportVector.RegSMO",
178:       "weka.classifiers.functions.supportVector.PolyKernel",
179:       "weka.core.ProtectedProperties",
180:       "weka.core.AttributeStats",
181:       "weka.core.WeightedInstancesHandler",
182:       "weka.core.neighboursearch.NearestNeighbourSearch",
183:       "weka.filters.unsupervised.attribute.Remove",
184:       "weka.core.Randomizable",
185:       "weka.core.EuclideanDistance",
186:       "weka.core.Instances",
187:       "weka.filters.unsupervised.attribute.Normalize",
188:       "weka.core.UnassignedClassException",
189:       "weka.filters.unsupervised.attribute.Standardize",
190:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
191:       "weka.core.TechnicalInformation",
192:       "weka.core.UnsupportedAttributeTypeException",
193:       "weka.classifiers.Sourcable",
194:       "weka.core.RevisionHandler",
195:       "weka.classifiers.evaluation.output.prediction.PlainText",
196:       "weka.core.neighboursearch.TreePerformanceStats",
197:       "weka.core.xml.XMLSerialization",
198:       "weka.classifiers.xml.XMLClassifier",
199:       "weka.filters.Filter"
200:     );
201:   } 
202: 
203:   private static void resetClasses() {
204:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_51_tmp__ESTest_scaffolding.class.getClassLoader()); 
205: 
206:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
207:       "weka.classifiers.AbstractClassifier",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
210:       "weka.core.Capabilities$Capability",
211:       "weka.core.tokenizers.Tokenizer",
212:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
213:       "weka.core.tokenizers.WordTokenizer",
214:       "weka.core.stemmers.NullStemmer",
215:       "weka.core.NormalizableDistance",
216:       "weka.core.ChebyshevDistance",
217:       "weka.core.Range",
218:       "weka.core.AbstractInstance",
219:       "weka.core.SparseInstance",
220:       "weka.core.BinarySparseInstance",
221:       "weka.core.RevisionUtils",
222:       "weka.classifiers.misc.SerializedClassifier",
223:       "weka.core.Utils",
224:       "weka.core.tokenizers.NGramTokenizer",
225:       "weka.core.Option",
226:       "weka.core.neighboursearch.balltrees.BallNode",
227:       "weka.core.UnassignedDatasetException",
228:       "weka.classifiers.Evaluation",
229:       "weka.core.DenseInstance",
230:       "weka.core.stemmers.LovinsStemmer",
231:       "weka.classifiers.SingleClassifierEnhancer",
232:       "weka.classifiers.misc.InputMappedClassifier",
233:       "weka.classifiers.rules.ZeroR",
234:       "weka.core.SerializedObject",
235:       "weka.classifiers.bayes.BayesNet",
236:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
237:       "weka.core.Tag",
238:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
239:       "weka.classifiers.bayes.net.search.local.K2",
240:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
241:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
242:       "weka.core.Capabilities",
243:       "org.pentaho.packageManagement.PackageManager",
244:       "org.pentaho.packageManagement.DefaultPackageManager",
245:       "weka.core.Version",
246:       "weka.core.Environment",
247:       "weka.core.WekaPackageManager",
248:       "weka.core.stemmers.Stemming",
249:       "weka.core.Instances",
250:       "weka.classifiers.RandomizableClassifier",
251:       "weka.classifiers.functions.SGDText",
252:       "weka.core.tokenizers.AlphabeticTokenizer",
253:       "weka.core.neighboursearch.NearestNeighbourSearch",
254:       "weka.core.neighboursearch.KDTree",
255:       "weka.core.EuclideanDistance",
256:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
257:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
258:       "weka.core.TechnicalInformation",
259:       "weka.core.TechnicalInformation$Type",
260:       "weka.core.TechnicalInformation$Field",
261:       "weka.attributeSelection.ASEvaluation",
262:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
263:       "weka.attributeSelection.PrincipalComponents",
264:       "weka.core.TestInstances",
265:       "weka.core.Attribute",
266:       "weka.core.ProtectedProperties",
267:       "weka.core.WekaEnumeration",
268:       "weka.core.Attribute$1",
269:       "weka.core.stemmers.SnowballStemmer",
270:       "weka.core.neighboursearch.LinearNNSearch",
271:       "weka.attributeSelection.GainRatioAttributeEval",
272:       "weka.attributeSelection.AttributeSelection",
273:       "weka.core.Stopwords",
274:       "weka.core.ListOptions",
275:       "weka.core.neighboursearch.CoverTree",
276:       "weka.core.WekaException",
277:       "weka.core.Check",
278:       "weka.core.CheckOptionHandler",
279:       "weka.classifiers.bayes.net.BIFReader",
280:       "weka.classifiers.bayes.NaiveBayesMultinomial",
281:       "weka.core.SelectedTag",
282:       "weka.classifiers.CostMatrix",
283:       "weka.core.neighboursearch.BallTree",
284:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
285:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
286:       "weka.core.neighboursearch.balltrees.BallSplitter",
287:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
288:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
289:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
290:       "weka.classifiers.bayes.NaiveBayes",
291:       "weka.attributeSelection.InfoGainAttributeEval",
292:       "weka.core.Javadoc",
293:       "weka.core.ClassDiscovery",
294:       "weka.core.ClassCache",
295:       "weka.core.AllJavadoc",
296:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
297:       "weka.classifiers.meta.CostSensitiveClassifier",
298:       "weka.classifiers.MultipleClassifiersCombiner",
299:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
300:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
301:       "weka.classifiers.meta.Stacking",
302:       "weka.core.UnsupportedAttributeTypeException",
303:       "weka.core.converters.ArffLoader$ArffReader",
304:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
305:       "weka.classifiers.meta.Vote",
306:       "weka.core.TechnicalInformationHandlerJavadoc",
307:       "weka.core.stemmers.IteratedLovinsStemmer",
308:       "weka.filters.Filter",
309:       "weka.filters.supervised.attribute.Discretize",
310:       "weka.classifiers.functions.supportVector.Kernel",
311:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
312:       "weka.attributeSelection.CfsSubsetEval",
313:       "weka.filters.SimpleFilter",
314:       "weka.filters.SimpleStreamFilter",
315:       "weka.filters.MultiFilter",
316:       "weka.filters.AllFilter",
317:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
318:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
319:       "weka.classifiers.trees.m5.M5Base",
320:       "weka.classifiers.rules.M5Rules",
321:       "weka.classifiers.functions.LinearRegression",
322:       "weka.classifiers.meta.CVParameterSelection",
323:       "weka.core.FastVector",
324:       "weka.core.matrix.Matrix",
325:       "weka.estimators.Estimator",
326:       "weka.estimators.KernelEstimator",
327:       "weka.classifiers.functions.GaussianProcesses",
328:       "weka.classifiers.functions.supportVector.CachedKernel",
329:       "weka.classifiers.functions.supportVector.PolyKernel",
330:       "weka.classifiers.functions.supportVector.StringKernel",
331:       "weka.core.FindWithCapabilities",
332:       "weka.core.SingleIndex",
333:       "weka.estimators.NormalEstimator",
334:       "weka.core.UnassignedClassException",
335:       "weka.classifiers.trees.RandomForest",
336:       "weka.classifiers.trees.RandomTree",
337:       "weka.attributeSelection.WrapperSubsetEval",
338:       "weka.core.AttributeStats",
339:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
340:       "weka.classifiers.trees.J48",
341:       "weka.classifiers.trees.j48.ClassifierTree",
342:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
343:       "weka.classifiers.functions.SMO",
344:       "weka.classifiers.lazy.IBk",
345:       "weka.classifiers.functions.VotedPerceptron",
346:       "weka.classifiers.IteratedSingleClassifierEnhancer",
347:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
348:       "weka.classifiers.meta.AdaBoostM1",
349:       "weka.classifiers.trees.DecisionStump",
350:       "weka.classifiers.functions.supportVector.RBFKernel",
351:       "weka.classifiers.meta.LogitBoost",
352:       "weka.classifiers.meta.RegressionByDiscretization",
353:       "weka.filters.unsupervised.attribute.Discretize",
354:       "weka.classifiers.trees.LMT",
355:       "weka.classifiers.lazy.KStar",
356:       "weka.classifiers.trees.REPTree",
357:       "weka.classifiers.meta.FilteredClassifier",
358:       "weka.filters.supervised.attribute.AttributeSelection",
359:       "weka.attributeSelection.ASSearch",
360:       "weka.attributeSelection.GreedyStepwise",
361:       "weka.attributeSelection.BestFirst",
362:       "weka.classifiers.rules.PART",
363:       "weka.classifiers.rules.part.MakeDecList",
364:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
365:       "weka.classifiers.rules.OneR",
366:       "weka.classifiers.meta.MultiScheme",
367:       "weka.classifiers.rules.DecisionTable",
368:       "weka.attributeSelection.OneRAttributeEval",
369:       "weka.core.ManhattanDistance",
370:       "weka.classifiers.functions.MultilayerPerceptron",
371:       "weka.filters.unsupervised.attribute.NominalToBinary",
372:       "weka.classifiers.functions.neural.SigmoidUnit",
373:       "weka.classifiers.functions.neural.LinearUnit",
374:       "weka.classifiers.functions.SGD",
375:       "weka.classifiers.functions.supportVector.Puk",
376:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
377:       "weka.classifiers.lazy.LWL",
378:       "weka.classifiers.functions.SimpleLinearRegression",
379:       "weka.attributeSelection.ReliefFAttributeEval",
380:       "weka.classifiers.meta.MultiClassClassifier",
381:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
382:       "weka.classifiers.functions.Logistic",
383:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
384:       "weka.estimators.MahalanobisEstimator",
385:       "weka.core.Queue",
386:       "weka.core.AttributeLocator",
387:       "weka.core.StringLocator",
388:       "weka.core.RelationalLocator",
389:       "weka.core.Queue$QueueNode",
390:       "weka.filters.unsupervised.attribute.Remove",
391:       "weka.filters.unsupervised.attribute.Standardize",
392:       "weka.core.Matrix",
393:       "weka.core.matrix.EigenvalueDecomposition",
394:       "weka.classifiers.meta.AdditiveRegression",
395:       "weka.estimators.PoissonEstimator",
396:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
397:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
398:       "weka.classifiers.meta.RandomCommittee",
399:       "weka.classifiers.functions.SimpleLogistic",
400:       "weka.attributeSelection.CorrelationAttributeEval",
401:       "weka.classifiers.meta.Bagging",
402:       "weka.classifiers.bayes.NaiveBayesUpdateable",
403:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
404:       "weka.classifiers.rules.JRip",
405:       "weka.classifiers.meta.AttributeSelectedClassifier",
406:       "weka.classifiers.functions.SMOreg",
407:       "weka.classifiers.functions.supportVector.RegOptimizer",
408:       "weka.classifiers.functions.supportVector.RegSMO",
409:       "weka.classifiers.functions.supportVector.RegSMOImproved",
410:       "weka.classifiers.meta.ClassificationViaRegression",
411:       "weka.classifiers.trees.M5P",
412:       "weka.estimators.DiscreteEstimator",
413:       "weka.core.OptionHandlerJavadoc",
414:       "weka.classifiers.rules.OneR$OneRRule",
415:       "weka.core.neighboursearch.PerformanceStats"
416:     );
417:   }
418: }

[MASTER] 21:21:14.388 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
Capabilities capabilities0 = naiveBayesMultinomialText0.getCapabilities();
TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
Instances instances0 = testInstances0.generate();
naiveBayesMultinomialText0.buildClassifier(instances0);
assertEquals(0, capabilities0.getMinimumNumberInstances());

BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-1.0), (int[]) null, (-1));
double[] doubleArray0 = naiveBayesMultinomialText0.distributionForInstance(binarySparseInstance0);
assertArrayEquals(new double[] {0.3750000000000001, 0.16666666666666669, 0.29166666666666663, 0.16666666666666669}, doubleArray0, 0.01);

double double0 = naiveBayesMultinomialText0.getLNorm();
assertEquals(2.0, double0, 0.01);

naiveBayesMultinomialText0.useStopListTipText();
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);


[MASTER] 21:21:14.474 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_53_1573680074437/weka/classifiers/bayes/NaiveBayesMultinomialText_53_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_53_1573680074437/weka/classifiers/bayes/NaiveBayesMultinomialText_53_tmp__ESTest_scaffolding.java]]
[MASTER] 21:21:14.474 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 21:21:14.474 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 21:21:14.475 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 21:21:14.476 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_53_1573680074437/weka/classifiers/bayes/NaiveBayesMultinomialText_53_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Nov 13 21:21:14 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.BinarySparseInstance;
17: import weka.core.Instances;
18: import weka.core.TestInstances;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_53_tmp__ESTest extends NaiveBayesMultinomialText_53_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=2.409560646477439
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
31:       TestInstances testInstances0 = new TestInstances();
32:       double[] doubleArray0 = new double[0];
33:       naiveBayesMultinomialText0.m_probOfClass = doubleArray0;
34:       Instances instances0 = testInstances0.generate();
35:       naiveBayesMultinomialText0.buildClassifier(instances0);
36:       naiveBayesMultinomialText0.setPeriodicPruning((-2));
37:       naiveBayesMultinomialText0.m_wordFrequencies = true;
38:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-2), (int[]) null, (-1));
39:       naiveBayesMultinomialText0.distributionForInstance(binarySparseInstance0);
40:       double double0 = naiveBayesMultinomialText0.getLNorm();
41:       assertEquals((-2), naiveBayesMultinomialText0.getPeriodicPruning());
42:       assertEquals(2.0, double0, 0.01);
43:   }
44: }
RegularFileObject[/tmp/EvoSuite_53_1573680074437/weka/classifiers/bayes/NaiveBayesMultinomialText_53_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Nov 13 21:21:14 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_53_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_53_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.core.logging.Logger$Level",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.core.stemmers.NullStemmer",
105:       "weka.classifiers.functions.SGDText",
106:       "weka.core.Utils",
107:       "weka.core.CustomDisplayStringProvider",
108:       "weka.core.tokenizers.Tokenizer",
109:       "weka.core.NormalizableDistance",
110:       "weka.classifiers.functions.SMOreg",
111:       "weka.core.NoSupportForMissingValuesException",
112:       "weka.classifiers.UpdateableClassifier",
113:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
114:       "weka.core.MultiInstanceCapabilitiesHandler",
115:       "weka.core.Copyable",
116:       "weka.core.Capabilities",
117:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
119:       "weka.core.BinarySparseInstance",
120:       "weka.classifiers.functions.supportVector.CachedKernel",
121:       "weka.core.SerializedObject",
122:       "weka.clusterers.UpdateableClusterer",
123:       "weka.core.Summarizable",
124:       "weka.core.AdditionalMeasureProducer",
125:       "weka.core.neighboursearch.balltrees.BallNode",
126:       "org.pentaho.packageManagement.PackageManager$1",
127:       "weka.core.Drawable",
128:       "weka.core.CapabilitiesHandler",
129:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
130:       "weka.attributeSelection.ASEvaluation",
131:       "weka.core.AbstractInstance",
132:       "weka.core.SelectedTag",
133:       "weka.classifiers.functions.supportVector.RegOptimizer",
134:       "org.pentaho.packageManagement.DefaultPackage",
135:       "weka.core.neighboursearch.balltrees.BallSplitter",
136:       "weka.core.Version",
137:       "weka.core.Tag",
138:       "weka.core.ManhattanDistance",
139:       "weka.classifiers.AbstractClassifier",
140:       "weka.filters.unsupervised.attribute.Center",
141:       "weka.core.OptionHandler",
142:       "weka.core.WekaException",
143:       "weka.filters.StreamableFilter",
144:       "weka.core.Range",
145:       "weka.core.Attribute$1",
146:       "weka.classifiers.Classifier",
147:       "weka.core.Capabilities$Capability",
148:       "weka.core.SparseInstance",
149:       "org.pentaho.packageManagement.PackageManager",
150:       "weka.core.WekaEnumeration",
151:       "weka.attributeSelection.AttributeTransformer",
152:       "weka.core.tokenizers.WordTokenizer",
153:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
154:       "weka.attributeSelection.PrincipalComponents",
155:       "weka.core.stemmers.SnowballStemmer",
156:       "weka.core.stemmers.LovinsStemmer",
157:       "weka.classifiers.Evaluation",
158:       "weka.classifiers.functions.supportVector.Kernel",
159:       "weka.core.WekaPackageManager",
160:       "weka.core.TechnicalInformationHandler",
161:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
162:       "weka.core.Option",
163:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
164:       "weka.core.neighboursearch.PerformanceStats",
165:       "weka.filters.Sourcable",
166:       "weka.core.Attribute",
167:       "weka.core.Stopwords",
168:       "weka.core.tokenizers.AlphabeticTokenizer",
169:       "weka.core.FastVector",
170:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
171:       "weka.core.UnassignedDatasetException",
172:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
173:       "weka.classifiers.functions.supportVector.RegSMOImproved",
174:       "weka.classifiers.RandomizableClassifier",
175:       "weka.core.RevisionUtils",
176:       "weka.core.Instance",
177:       "weka.classifiers.functions.supportVector.RegSMO",
178:       "weka.classifiers.functions.supportVector.PolyKernel",
179:       "weka.core.ProtectedProperties",
180:       "weka.core.AttributeStats",
181:       "weka.core.WeightedInstancesHandler",
182:       "weka.core.neighboursearch.NearestNeighbourSearch",
183:       "weka.filters.unsupervised.attribute.Remove",
184:       "weka.core.Randomizable",
185:       "weka.core.EuclideanDistance",
186:       "weka.core.Instances",
187:       "weka.filters.unsupervised.attribute.Normalize",
188:       "weka.core.UnassignedClassException",
189:       "weka.filters.unsupervised.attribute.Standardize",
190:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
191:       "weka.core.TechnicalInformation",
192:       "weka.core.UnsupportedAttributeTypeException",
193:       "weka.classifiers.Sourcable",
194:       "weka.core.RevisionHandler",
195:       "weka.classifiers.evaluation.output.prediction.PlainText",
196:       "weka.core.neighboursearch.TreePerformanceStats",
197:       "weka.core.xml.XMLSerialization",
198:       "weka.classifiers.xml.XMLClassifier",
199:       "weka.filters.Filter"
200:     );
201:   } 
202: 
203:   private static void resetClasses() {
204:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_53_tmp__ESTest_scaffolding.class.getClassLoader()); 
205: 
206:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
207:       "weka.classifiers.AbstractClassifier",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
210:       "weka.core.Capabilities$Capability",
211:       "weka.core.tokenizers.Tokenizer",
212:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
213:       "weka.core.tokenizers.WordTokenizer",
214:       "weka.core.stemmers.NullStemmer",
215:       "weka.core.NormalizableDistance",
216:       "weka.core.ChebyshevDistance",
217:       "weka.core.Range",
218:       "weka.core.AbstractInstance",
219:       "weka.core.SparseInstance",
220:       "weka.core.BinarySparseInstance",
221:       "weka.core.RevisionUtils",
222:       "weka.classifiers.misc.SerializedClassifier",
223:       "weka.core.Utils",
224:       "weka.core.tokenizers.NGramTokenizer",
225:       "weka.core.Option",
226:       "weka.core.neighboursearch.balltrees.BallNode",
227:       "weka.core.UnassignedDatasetException",
228:       "weka.classifiers.Evaluation",
229:       "weka.core.DenseInstance",
230:       "weka.core.stemmers.LovinsStemmer",
231:       "weka.classifiers.SingleClassifierEnhancer",
232:       "weka.classifiers.misc.InputMappedClassifier",
233:       "weka.classifiers.rules.ZeroR",
234:       "weka.core.SerializedObject",
235:       "weka.classifiers.bayes.BayesNet",
236:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
237:       "weka.core.Tag",
238:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
239:       "weka.classifiers.bayes.net.search.local.K2",
240:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
241:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
242:       "weka.core.Capabilities",
243:       "org.pentaho.packageManagement.PackageManager",
244:       "org.pentaho.packageManagement.DefaultPackageManager",
245:       "weka.core.Version",
246:       "weka.core.Environment",
247:       "weka.core.WekaPackageManager",
248:       "weka.core.stemmers.Stemming",
249:       "weka.core.Instances",
250:       "weka.classifiers.RandomizableClassifier",
251:       "weka.classifiers.functions.SGDText",
252:       "weka.core.tokenizers.AlphabeticTokenizer",
253:       "weka.core.neighboursearch.NearestNeighbourSearch",
254:       "weka.core.neighboursearch.KDTree",
255:       "weka.core.EuclideanDistance",
256:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
257:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
258:       "weka.core.TechnicalInformation",
259:       "weka.core.TechnicalInformation$Type",
260:       "weka.core.TechnicalInformation$Field",
261:       "weka.attributeSelection.ASEvaluation",
262:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
263:       "weka.attributeSelection.PrincipalComponents",
264:       "weka.core.TestInstances",
265:       "weka.core.Attribute",
266:       "weka.core.ProtectedProperties",
267:       "weka.core.WekaEnumeration",
268:       "weka.core.Attribute$1",
269:       "weka.core.stemmers.SnowballStemmer",
270:       "weka.core.neighboursearch.LinearNNSearch",
271:       "weka.attributeSelection.GainRatioAttributeEval",
272:       "weka.attributeSelection.AttributeSelection",
273:       "weka.core.Stopwords",
274:       "weka.core.ListOptions",
275:       "weka.core.neighboursearch.CoverTree",
276:       "weka.core.WekaException",
277:       "weka.core.Check",
278:       "weka.core.CheckOptionHandler",
279:       "weka.classifiers.bayes.net.BIFReader",
280:       "weka.classifiers.bayes.NaiveBayesMultinomial",
281:       "weka.core.SelectedTag",
282:       "weka.classifiers.CostMatrix",
283:       "weka.core.neighboursearch.BallTree",
284:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
285:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
286:       "weka.core.neighboursearch.balltrees.BallSplitter",
287:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
288:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
289:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
290:       "weka.classifiers.bayes.NaiveBayes",
291:       "weka.attributeSelection.InfoGainAttributeEval",
292:       "weka.core.Javadoc",
293:       "weka.core.ClassDiscovery",
294:       "weka.core.ClassCache",
295:       "weka.core.AllJavadoc",
296:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
297:       "weka.classifiers.meta.CostSensitiveClassifier",
298:       "weka.classifiers.MultipleClassifiersCombiner",
299:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
300:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
301:       "weka.classifiers.meta.Stacking",
302:       "weka.core.UnsupportedAttributeTypeException",
303:       "weka.core.converters.ArffLoader$ArffReader",
304:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
305:       "weka.classifiers.meta.Vote",
306:       "weka.core.TechnicalInformationHandlerJavadoc",
307:       "weka.core.stemmers.IteratedLovinsStemmer",
308:       "weka.filters.Filter",
309:       "weka.filters.supervised.attribute.Discretize",
310:       "weka.classifiers.functions.supportVector.Kernel",
311:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
312:       "weka.attributeSelection.CfsSubsetEval",
313:       "weka.filters.SimpleFilter",
314:       "weka.filters.SimpleStreamFilter",
315:       "weka.filters.MultiFilter",
316:       "weka.filters.AllFilter",
317:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
318:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
319:       "weka.classifiers.trees.m5.M5Base",
320:       "weka.classifiers.rules.M5Rules",
321:       "weka.classifiers.functions.LinearRegression",
322:       "weka.classifiers.meta.CVParameterSelection",
323:       "weka.core.FastVector",
324:       "weka.core.matrix.Matrix",
325:       "weka.estimators.Estimator",
326:       "weka.estimators.KernelEstimator",
327:       "weka.classifiers.functions.GaussianProcesses",
328:       "weka.classifiers.functions.supportVector.CachedKernel",
329:       "weka.classifiers.functions.supportVector.PolyKernel",
330:       "weka.classifiers.functions.supportVector.StringKernel",
331:       "weka.core.FindWithCapabilities",
332:       "weka.core.SingleIndex",
333:       "weka.estimators.NormalEstimator",
334:       "weka.core.UnassignedClassException",
335:       "weka.classifiers.trees.RandomForest",
336:       "weka.classifiers.trees.RandomTree",
337:       "weka.attributeSelection.WrapperSubsetEval",
338:       "weka.core.AttributeStats",
339:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
340:       "weka.classifiers.trees.J48",
341:       "weka.classifiers.trees.j48.ClassifierTree",
342:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
343:       "weka.classifiers.functions.SMO",
344:       "weka.classifiers.lazy.IBk",
345:       "weka.classifiers.functions.VotedPerceptron",
346:       "weka.classifiers.IteratedSingleClassifierEnhancer",
347:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
348:       "weka.classifiers.meta.AdaBoostM1",
349:       "weka.classifiers.trees.DecisionStump",
350:       "weka.classifiers.functions.supportVector.RBFKernel",
351:       "weka.classifiers.meta.LogitBoost",
352:       "weka.classifiers.meta.RegressionByDiscretization",
353:       "weka.filters.unsupervised.attribute.Discretize",
354:       "weka.classifiers.trees.LMT",
355:       "weka.classifiers.lazy.KStar",
356:       "weka.classifiers.trees.REPTree",
357:       "weka.classifiers.meta.FilteredClassifier",
358:       "weka.filters.supervised.attribute.AttributeSelection",
359:       "weka.attributeSelection.ASSearch",
360:       "weka.attributeSelection.GreedyStepwise",
361:       "weka.attributeSelection.BestFirst",
362:       "weka.classifiers.rules.PART",
363:       "weka.classifiers.rules.part.MakeDecList",
364:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
365:       "weka.classifiers.rules.OneR",
366:       "weka.classifiers.meta.MultiScheme",
367:       "weka.classifiers.rules.DecisionTable",
368:       "weka.attributeSelection.OneRAttributeEval",
369:       "weka.core.ManhattanDistance",
370:       "weka.classifiers.functions.MultilayerPerceptron",
371:       "weka.filters.unsupervised.attribute.NominalToBinary",
372:       "weka.classifiers.functions.neural.SigmoidUnit",
373:       "weka.classifiers.functions.neural.LinearUnit",
374:       "weka.classifiers.functions.SGD",
375:       "weka.classifiers.functions.supportVector.Puk",
376:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
377:       "weka.classifiers.lazy.LWL",
378:       "weka.classifiers.functions.SimpleLinearRegression",
379:       "weka.attributeSelection.ReliefFAttributeEval",
380:       "weka.classifiers.meta.MultiClassClassifier",
381:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
382:       "weka.classifiers.functions.Logistic",
383:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
384:       "weka.estimators.MahalanobisEstimator",
385:       "weka.core.Queue",
386:       "weka.core.AttributeLocator",
387:       "weka.core.StringLocator",
388:       "weka.core.RelationalLocator",
389:       "weka.core.Queue$QueueNode",
390:       "weka.filters.unsupervised.attribute.Remove",
391:       "weka.filters.unsupervised.attribute.Standardize",
392:       "weka.core.Matrix",
393:       "weka.core.matrix.EigenvalueDecomposition",
394:       "weka.classifiers.meta.AdditiveRegression",
395:       "weka.estimators.PoissonEstimator",
396:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
397:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
398:       "weka.classifiers.meta.RandomCommittee",
399:       "weka.classifiers.functions.SimpleLogistic",
400:       "weka.attributeSelection.CorrelationAttributeEval",
401:       "weka.classifiers.meta.Bagging",
402:       "weka.classifiers.bayes.NaiveBayesUpdateable",
403:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
404:       "weka.classifiers.rules.JRip",
405:       "weka.classifiers.meta.AttributeSelectedClassifier",
406:       "weka.classifiers.functions.SMOreg",
407:       "weka.classifiers.functions.supportVector.RegOptimizer",
408:       "weka.classifiers.functions.supportVector.RegSMO",
409:       "weka.classifiers.functions.supportVector.RegSMOImproved",
410:       "weka.classifiers.meta.ClassificationViaRegression",
411:       "weka.classifiers.trees.M5P",
412:       "weka.estimators.DiscreteEstimator",
413:       "weka.core.OptionHandlerJavadoc",
414:       "weka.classifiers.rules.OneR$OneRRule",
415:       "weka.core.neighboursearch.PerformanceStats"
416:     );
417:   }
418: }

[MASTER] 21:21:14.477 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
TestInstances testInstances0 = new TestInstances();
double[] doubleArray0 = new double[0];
naiveBayesMultinomialText0.m_probOfClass = doubleArray0;
Instances instances0 = testInstances0.generate();
naiveBayesMultinomialText0.buildClassifier(instances0);
naiveBayesMultinomialText0.setPeriodicPruning((-2));
naiveBayesMultinomialText0.m_wordFrequencies = true;
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-2), (int[]) null, (-1));
naiveBayesMultinomialText0.distributionForInstance(binarySparseInstance0);
double double0 = naiveBayesMultinomialText0.getLNorm();
assertEquals((-2), naiveBayesMultinomialText0.getPeriodicPruning());
assertEquals(2.0, double0, 0.01);


[MASTER] 21:21:18.345 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 21:21:18.483 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/mosa/tests/s1002/107_weka/evosuite-tests
* Done!

* Computation finished
