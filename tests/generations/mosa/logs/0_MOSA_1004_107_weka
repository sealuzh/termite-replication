* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10002
* Connecting to master process on port 10005
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 22:41:43.204 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:41:43.247 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:41:43.260 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:41:43.621 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 22:41:43.626 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 22:41:43.652 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 22:41:43.869 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:41:43.886 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:41:43.887 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:41:44.053 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1729
* Using seed 1004
* Starting evolution
* Total number of test goals for MOSA: 2699
* Using seed 1004
* Starting evolution
[MASTER] 22:43:55.501 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
[MASTER] 22:45:29.992 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 22:45:53.776 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 260s and 369 generations, 148645 statements, best individual has fitness: 4032.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 72%
* Total number of goals: 370
* Number of covered goals: 265
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 61%
* Total number of goals: 242
* Number of covered goals: 148
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 31
* Number of covered goals: 31
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 75%
* Total number of goals: 713
* Number of covered goals: 535
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 56%
* Total number of goals: 72
* Number of covered goals: 40
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 61%
* Total number of goals: 242
* Number of covered goals: 148
* Generated 77 tests with total length 535
* Resulting test suite's coverage: 71% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 287s and 49 generations, 30863 statements, best individual has fitness: 1888.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 647
* Number of covered goals: 634
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 441
* Number of covered goals: 425
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 678
* Number of covered goals: 630
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 46%
* Total number of goals: 244
* Number of covered goals: 112
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 124
* Number of covered goals: 124
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 124
* Number of covered goals: 124
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 94%
* Total number of goals: 441
* Number of covered goals: 416
* Generated 223 tests with total length 2044
* Resulting test suite's coverage: 91% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 26%
* Compiling and checking tests
[MASTER] 22:49:47.090 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 22:49:47.118 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 22:49:47.250 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 22:49:47.250 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 22:50:08.120 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 22:50:08.122 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 21;
Attribute attribute0 = new Attribute("KS@uLpSv:bM", "Y", 21);
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
arrayList0.add(attribute0);
Instances instances0 = new Instances("date", arrayList0, 1);
Attribute attribute1 = new Attribute("(xfb 7ij uK", instances0);
arrayList0.add(attribute1);
Discretize discretize0 = new Discretize();
discretize0.m_FindNumBins = true;
discretize0.setInputFormat(instances0);

[MASTER] 22:50:14.060 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 22:50:14.062 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("]", arrayList0, 0);
Attribute attribute0 = new Attribute("Can't ignore class when changing the number of attributes!", instances0, 15);
arrayList0.add(attribute0);
Instances instances1 = new Instances("]", arrayList0, 2);
Discretize discretize0 = new Discretize();
discretize0.setInputFormat(instances1);

[MASTER] 22:50:14.799 [logback-1] WARN  ClassResetter - java.lang.reflect.InvocationTargetException, caused by: java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 22:50:14.800 [logback-1] WARN  ClassResetter - java.lang.reflect.InvocationTargetException, caused by: java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/mosa/tests/s1004/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 22:52:13.149 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.67385% of time used, but only 87/223 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 20%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/mosa/tests/s1004/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.Optimization
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10008
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10004
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10005
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 22:54:14.267 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:54:14.299 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:54:14.332 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:54:17.315 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 22:54:18.180 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 22:54:18.188 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2767
* Using seed 1004
* Starting evolution
[MASTER] 22:54:20.383 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:54:20.415 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:54:20.424 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:54:20.454 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2499
* Using seed 1004
* Starting evolution
[MASTER] 22:54:25.326 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 376
[MASTER] 22:54:25.326 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 377
[MASTER] 22:54:25.326 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 380
[MASTER] 22:54:25.326 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 382
[MASTER] 22:54:25.326 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 383
[MASTER] 22:54:25.326 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 386
[MASTER] 22:54:25.326 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 388
[MASTER] 22:54:25.326 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 389
[MASTER] 22:54:25.326 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 392
[MASTER] 22:54:25.326 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 394
[MASTER] 22:54:25.326 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 395
[MASTER] 22:54:25.326 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 398
[MASTER] 22:54:25.326 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 400
[MASTER] 22:54:25.327 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 401
[MASTER] 22:54:25.328 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 402
[MASTER] 22:54:25.328 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: Line 403
[MASTER] 22:54:25.340 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I10 Branch 1 IFEQ L377 - true
[MASTER] 22:54:25.340 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I33 Branch 2 IFEQ L383 - true
[MASTER] 22:54:25.340 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I56 Branch 3 IFEQ L389 - true
[MASTER] 22:54:25.340 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I79 Branch 4 IFEQ L395 - true
[MASTER] 22:54:25.343 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I105 Branch 5 IFNE L401 - false
[MASTER] 22:54:25.344 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I118 Branch 6 IFNE L402 - false
[MASTER] 22:54:25.344 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 47: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:376 - ReplaceConstant - 70 -> 0
[MASTER] 22:54:25.344 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 48: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:376 - ReplaceConstant - 70 -> 1
[MASTER] 22:54:25.344 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 49: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:376 - ReplaceConstant - 70 -> -1
[MASTER] 22:54:25.344 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 50: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:376 - ReplaceConstant - 70 -> 69
[MASTER] 22:54:25.344 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 51: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:376 - ReplaceConstant - 70 -> 71
[MASTER] 22:54:25.344 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 52: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:377 - ReplaceComparisonOperator == -> -2
[MASTER] 22:54:25.344 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 55: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:380 - ReplaceConstant - 3 -> 0
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 56: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:380 - ReplaceConstant - 3 -> 1
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 57: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:380 - ReplaceConstant - 3 -> -1
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 58: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:380 - ReplaceConstant - 3 -> 2
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 59: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:380 - ReplaceConstant - 3 -> 4
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 60: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:382 - ReplaceConstant - 78 -> 0
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 61: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:382 - ReplaceConstant - 78 -> 1
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 62: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:382 - ReplaceConstant - 78 -> -1
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 63: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:382 - ReplaceConstant - 78 -> 77
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 64: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:382 - ReplaceConstant - 78 -> 79
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 66: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:383 - ReplaceComparisonOperator == -> -2
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 70: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:386 - ReplaceConstant - 2.0 -> 0.0
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 71: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:386 - ReplaceConstant - 2.0 -> 1.0
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 72: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:386 - ReplaceConstant - 2.0 -> -1.0
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 73: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:386 - ReplaceConstant - 2.0 -> 3.0
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 74: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:388 - ReplaceConstant - 83 -> 0
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 75: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:388 - ReplaceConstant - 83 -> 1
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 76: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:388 - ReplaceConstant - 83 -> -1
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 77: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:388 - ReplaceConstant - 83 -> 82
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 78: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:388 - ReplaceConstant - 83 -> 84
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 81: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:389 - ReplaceComparisonOperator == -> -2
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 86: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:392 - ReplaceConstant - 1 -> 0
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 87: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:392 - ReplaceConstant - 1 -> -1
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 88: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:392 - ReplaceConstant - 1 -> 2
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 89: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:394 - ReplaceConstant - 79 -> 0
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 90: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:394 - ReplaceConstant - 79 -> 1
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 91: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:394 - ReplaceConstant - 79 -> -1
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 92: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:394 - ReplaceConstant - 79 -> 78
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 93: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:394 - ReplaceConstant - 79 -> 80
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 97: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:395 - ReplaceComparisonOperator == -> -2
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 103: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:398 - ReplaceConstant - 2 -> 0
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 104: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:398 - ReplaceConstant - 2 -> 1
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 105: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:398 - ReplaceConstant - 2 -> -1
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 106: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:398 - ReplaceConstant - 2 -> 3
[MASTER] 22:54:25.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 107: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:400 - ReplaceConstant - 68 -> 0
[MASTER] 22:54:25.346 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 108: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:400 - ReplaceConstant - 68 -> 1
[MASTER] 22:54:25.346 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 109: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:400 - ReplaceConstant - 68 -> -1
[MASTER] 22:54:25.346 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 110: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:400 - ReplaceConstant - 68 -> 67
[MASTER] 22:54:25.346 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 111: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:400 - ReplaceConstant - 68 -> 69
[MASTER] 22:54:25.346 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 112: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:401 - ReplaceConstant - 69 -> 0
[MASTER] 22:54:25.346 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 113: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:401 - ReplaceConstant - 69 -> 1
[MASTER] 22:54:25.346 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 114: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:401 - ReplaceConstant - 69 -> -1
[MASTER] 22:54:25.346 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 115: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:401 - ReplaceConstant - 69 -> 68
[MASTER] 22:54:25.346 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 116: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:401 - ReplaceConstant - 69 -> 70
[MASTER] 22:54:25.346 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 117: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:401 - ReplaceComparisonOperator != -> ==
[MASTER] 22:54:25.346 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 118: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:401 - ReplaceConstant - 1 -> 0
[MASTER] 22:54:25.346 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 120: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:402 - ReplaceConstant - 80 -> 0
[MASTER] 22:54:25.346 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 121: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:402 - ReplaceConstant - 80 -> 1
[MASTER] 22:54:25.346 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 122: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:402 - ReplaceConstant - 80 -> -1
[MASTER] 22:54:25.346 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 123: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:402 - ReplaceConstant - 80 -> 79
[MASTER] 22:54:25.346 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 124: weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V:402 - ReplaceConstant - 80 -> 81
[MASTER] 22:54:25.356 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V
[MASTER] 22:54:25.377 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V
[MASTER] 22:54:25.381 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I79 Branch 4 IFEQ L395 - true in context: weka.classifiers.rules.JRip:setOptions([Ljava/lang/String;)V
[MASTER] 22:54:25.382 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I33 Branch 2 IFEQ L383 - true in context: weka.classifiers.rules.JRip:setOptions([Ljava/lang/String;)V
[MASTER] 22:54:25.382 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I118 Branch 6 IFNE L402 - false in context: weka.classifiers.rules.JRip:setOptions([Ljava/lang/String;)V
[MASTER] 22:54:25.382 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I56 Branch 3 IFEQ L389 - true in context: weka.classifiers.rules.JRip:setOptions([Ljava/lang/String;)V
[MASTER] 22:54:25.382 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I10 Branch 1 IFEQ L377 - true in context: weka.classifiers.rules.JRip:setOptions([Ljava/lang/String;)V
[MASTER] 22:54:25.382 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptions([Ljava/lang/String;)V: I105 Branch 5 IFNE L401 - false in context: weka.classifiers.rules.JRip:setOptions([Ljava/lang/String;)V
[MASTER] 22:54:25.460 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 22:54:36.694 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:54:36.698 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:54:36.699 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:54:38.068 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 22:54:39.607 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 22:54:39.610 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 22:54:41.763 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 22:54:41.802 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 22:54:41.802 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 22:54:41.803 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 22:54:41.804 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 22:54:41.804 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 22:54:41.804 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 22:54:41.806 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 22:54:41.807 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 22:54:41.903 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 22:54:41.919 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 3904
* Using seed 1004
* Starting evolution
[MASTER] 22:54:47.911 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 22:54:48.279 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;: Line 599
[MASTER] 22:54:48.281 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;: root-Branch
[MASTER] 22:54:48.282 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 214: weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;:599 - ReplaceConstant - Whether check for error rate >= 1/2 is included in stopping criterion. -> 
[MASTER] 22:54:48.284 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 22:54:48.284 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;
[MASTER] 22:54:48.284 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;
[MASTER] 22:54:48.285 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.rules.JRip:checkErrorRateTipText()Ljava/lang/String;
[MASTER] 22:56:26.740 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: Line 1588
[MASTER] 22:56:26.741 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: Line 1591
[MASTER] 22:56:26.741 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: Line 1592
[MASTER] 22:56:26.741 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: Line 1597
[MASTER] 22:56:26.741 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: Line 1598
[MASTER] 22:56:26.741 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: Line 1601
[MASTER] 22:56:26.741 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: Line 1602
[MASTER] 22:56:47.598 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 22:57:07.495 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;_java.lang.OutOfMemoryError_IMPLICIT
* Search finished after 286s and 262 generations, 110916 statements, best individual has fitness: 11904.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 38%
* Total number of goals: 705
* Number of covered goals: 271
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 29%
* Total number of goals: 416
* Number of covered goals: 122
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 60%
* Total number of goals: 993
* Number of covered goals: 598
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 29%
* Total number of goals: 93
* Number of covered goals: 27
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 29%
* Total number of goals: 416
* Number of covered goals: 122
* Generated 76 tests with total length 535
* Resulting test suite's coverage: 46% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 22:59:11.883 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.evaluateModelOnce(Lweka/classifiers/Classifier;Lweka/core/Instance;)D
* Search finished after 293s and 128 generations, 91353 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 20 tests with total length 117
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/mosa/tests/s1004/107_weka/evosuite-tests
* Done!

* Computation finished
* Search finished after 314s and 118 generations, 67615 statements, best individual has fitness: 15040.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 59%
* Total number of goals: 1378
* Number of covered goals: 807
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 43%
* Total number of goals: 809
* Number of covered goals: 351
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 99%
* Total number of goals: 75
* Number of covered goals: 74
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 62%
* Total number of goals: 424
* Number of covered goals: 264
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 23%
* Total number of goals: 278
* Number of covered goals: 65
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 97%
* Total number of goals: 103
* Number of covered goals: 100
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 43%
* Total number of goals: 809
* Number of covered goals: 348
* Generated 170 tests with total length 1724
* Resulting test suite's coverage: 53% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 24%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/mosa/tests/s1004/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 8%
[MASTER] 23:08:09.392 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
[MASTER] 23:08:19.536 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 23:08:19.831 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 23:08:19.832 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 23:08:21.535 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 23:08:21.550 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 23:08:21.955 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/mosa/tests/s1004/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10002
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10004
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1367
* Using seed 1004
* Starting evolution
[MASTER] 23:29:53.506 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 23:29:53.507 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 23:29:53.515 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 23:29:53.658 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:29:53.660 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:29:53.662 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1412
* Using seed 1004
* Starting evolution
[MASTER] 23:30:04.279 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V: Line 657
[MASTER] 23:30:04.279 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V: Line 658
[MASTER] 23:30:04.280 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.stopwordsTipText()Ljava/lang/String;: Line 853
[MASTER] 23:30:04.280 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.stopwordsTipText()Ljava/lang/String;: root-Branch
[MASTER] 23:30:04.280 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V: root-Branch
[MASTER] 23:30:04.283 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 270: weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V:657 - InsertUnaryOp Negation of p
[MASTER] 23:30:04.283 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 271: weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V:657 - InsertUnaryOp IINC 1 p
[MASTER] 23:30:04.283 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 272: weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V:657 - InsertUnaryOp IINC -1 p
[MASTER] 23:30:04.283 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 345: weka.classifiers.bayes.NaiveBayesMultinomialText.stopwordsTipText()Ljava/lang/String;:853 - ReplaceConstant - The file containing the stopwords (if this is a directory then the default ones are used). -> 
[MASTER] 23:30:04.285 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.stopwordsTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 23:30:04.285 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V
[MASTER] 23:30:04.288 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.stopwordsTipText()Ljava/lang/String;
[MASTER] 23:30:04.288 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V
[MASTER] 23:30:04.288 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.stopwordsTipText()Ljava/lang/String;
[MASTER] 23:30:04.288 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.stopwordsTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:stopwordsTipText()Ljava/lang/String;
[MASTER] 23:30:04.289 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setPeriodicPruning(I)V
[MASTER] 23:30:49.853 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 23:30:49.853 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 23:31:03.665 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 275s and 243 generations, 88719 statements, best individual has fitness: 2800.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 217
* Number of covered goals: 191
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 281
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 240
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 281
* Generated 80 tests with total length 206
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 271s and 315 generations, 129074 statements, best individual has fitness: 896.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 338
* Number of covered goals: 331
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 92%
* Total number of goals: 194
* Number of covered goals: 178
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 96%
* Total number of goals: 476
* Number of covered goals: 457
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 112
* Number of covered goals: 60
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 91%
* Total number of goals: 194
* Number of covered goals: 176
* Generated 88 tests with total length 526
* Resulting test suite's coverage: 92% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 80%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/mosa/tests/s1004/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 58%
* Compiling and checking tests
[MASTER] 23:38:40.677 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_84_1573688320649/weka/classifiers/bayes/NaiveBayesMultinomialText_84_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_84_1573688320649/weka/classifiers/bayes/NaiveBayesMultinomialText_84_tmp__ESTest_scaffolding.java]]
[MASTER] 23:38:40.677 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:38:40.677 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:38:40.681 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 23:38:40.682 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 23:38:40.682 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 23:38:40.684 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_84_1573688320649/weka/classifiers/bayes/NaiveBayesMultinomialText_84_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Nov 13 23:38:40 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.io.File;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_84_tmp__ESTest extends NaiveBayesMultinomialText_84_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=2.015255863586861
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       PrecomputedKernelMatrixKernel precomputedKernelMatrixKernel0 = new PrecomputedKernelMatrixKernel();
30:       precomputedKernelMatrixKernel0.toString();
31:       File file0 = precomputedKernelMatrixKernel0.getKernelMatrixFile();
32:       naiveBayesMultinomialText0.setStopwords(file0);
33:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
34:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
35:       naiveBayesMultinomialText0.setPeriodicPruning((-1115));
36:       naiveBayesMultinomialText0.getPeriodicPruning();
37:       naiveBayesMultinomialText0.getStopwords();
38:       assertEquals((-1115), naiveBayesMultinomialText0.getPeriodicPruning());
39:   }
40: }
RegularFileObject[/tmp/EvoSuite_84_1573688320649/weka/classifiers/bayes/NaiveBayesMultinomialText_84_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Nov 13 23:38:40 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_84_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_84_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.core.stemmers.Stemmer",
101:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.core.stemmers.NullStemmer",
105:       "weka.core.RelationalLocator",
106:       "weka.core.Utils",
107:       "weka.core.CustomDisplayStringProvider",
108:       "weka.core.tokenizers.Tokenizer",
109:       "weka.core.NormalizableDistance",
110:       "weka.core.NoSupportForMissingValuesException",
111:       "weka.classifiers.UpdateableClassifier",
112:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
113:       "weka.core.MultiInstanceCapabilitiesHandler",
114:       "weka.core.Copyable",
115:       "weka.core.Capabilities",
116:       "weka.core.BinarySparseInstance",
117:       "weka.core.AttributeLocator",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
119:       "weka.classifiers.functions.supportVector.CachedKernel",
120:       "weka.core.SerializedObject",
121:       "weka.clusterers.UpdateableClusterer",
122:       "weka.core.Summarizable",
123:       "weka.core.AdditionalMeasureProducer",
124:       "weka.core.neighboursearch.balltrees.BallNode",
125:       "org.pentaho.packageManagement.PackageManager$1",
126:       "weka.core.matrix.Matrix",
127:       "weka.classifiers.ConditionalDensityEstimator",
128:       "weka.core.CapabilitiesHandler",
129:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
130:       "weka.attributeSelection.ASEvaluation",
131:       "weka.core.AbstractInstance",
132:       "weka.core.scripting.JythonObject",
133:       "weka.core.SelectedTag",
134:       "org.pentaho.packageManagement.DefaultPackage",
135:       "weka.core.Version",
136:       "weka.core.Tag",
137:       "weka.classifiers.AbstractClassifier",
138:       "weka.filters.unsupervised.attribute.Center",
139:       "weka.core.FindWithCapabilities",
140:       "weka.core.OptionHandler",
141:       "weka.core.WekaException",
142:       "weka.filters.StreamableFilter",
143:       "weka.core.Range",
144:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
145:       "weka.core.scripting.JythonSerializableObject",
146:       "weka.classifiers.Classifier",
147:       "weka.core.Capabilities$Capability",
148:       "weka.core.SparseInstance",
149:       "org.pentaho.packageManagement.PackageManager",
150:       "weka.attributeSelection.AttributeTransformer",
151:       "weka.core.tokenizers.WordTokenizer",
152:       "weka.classifiers.misc.SerializedClassifier",
153:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
154:       "weka.attributeSelection.PrincipalComponents",
155:       "weka.core.stemmers.SnowballStemmer",
156:       "weka.classifiers.Evaluation",
157:       "weka.classifiers.functions.supportVector.Kernel",
158:       "weka.core.WekaPackageManager",
159:       "weka.filters.SupervisedFilter",
160:       "weka.core.TechnicalInformationHandler",
161:       "weka.core.neighboursearch.LinearNNSearch",
162:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
163:       "weka.core.Option",
164:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
165:       "weka.core.neighboursearch.PerformanceStats",
166:       "weka.filters.Sourcable",
167:       "weka.core.Attribute",
168:       "weka.core.Stopwords",
169:       "weka.core.FastVector",
170:       "weka.core.UnassignedDatasetException",
171:       "weka.core.RevisionUtils",
172:       "weka.core.Instance",
173:       "weka.classifiers.functions.supportVector.PolyKernel",
174:       "weka.core.ProtectedProperties",
175:       "weka.classifiers.IntervalEstimator",
176:       "weka.core.StringLocator",
177:       "weka.core.AttributeStats",
178:       "weka.core.WeightedInstancesHandler",
179:       "weka.core.neighboursearch.NearestNeighbourSearch",
180:       "weka.classifiers.trees.DecisionStump",
181:       "weka.classifiers.functions.GaussianProcesses",
182:       "weka.filters.unsupervised.attribute.Remove",
183:       "weka.core.EuclideanDistance",
184:       "weka.core.Instances",
185:       "weka.filters.unsupervised.attribute.Normalize",
186:       "weka.core.UnassignedClassException",
187:       "weka.filters.unsupervised.attribute.Standardize",
188:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
189:       "weka.core.TechnicalInformation",
190:       "weka.core.UnsupportedAttributeTypeException",
191:       "weka.classifiers.Sourcable",
192:       "weka.core.RevisionHandler",
193:       "weka.classifiers.evaluation.output.prediction.PlainText",
194:       "weka.core.xml.XMLSerialization",
195:       "weka.classifiers.xml.XMLClassifier",
196:       "weka.filters.Filter",
197:       "weka.filters.supervised.attribute.Discretize"
198:     );
199:   } 
200: 
201:   private static void resetClasses() {
202:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_84_tmp__ESTest_scaffolding.class.getClassLoader()); 
203: 
204:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
205:       "weka.classifiers.AbstractClassifier",
206:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
207:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
208:       "weka.core.Capabilities$Capability",
209:       "weka.core.tokenizers.Tokenizer",
210:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
211:       "weka.core.tokenizers.WordTokenizer",
212:       "weka.core.stemmers.NullStemmer",
213:       "weka.core.RevisionUtils",
214:       "weka.core.Option",
215:       "weka.core.Utils",
216:       "weka.classifiers.Evaluation",
217:       "weka.classifiers.bayes.NaiveBayes",
218:       "weka.core.Tag",
219:       "weka.classifiers.lazy.IBk",
220:       "weka.core.neighboursearch.NearestNeighbourSearch",
221:       "weka.core.neighboursearch.LinearNNSearch",
222:       "weka.core.NormalizableDistance",
223:       "weka.core.EuclideanDistance",
224:       "weka.core.Range",
225:       "weka.attributeSelection.ASEvaluation",
226:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
227:       "weka.attributeSelection.PrincipalComponents",
228:       "weka.core.stemmers.LovinsStemmer",
229:       "weka.core.stemmers.IteratedLovinsStemmer",
230:       "weka.core.TechnicalInformation",
231:       "weka.core.TechnicalInformation$Type",
232:       "weka.core.TechnicalInformation$Field",
233:       "weka.core.SerializedObject",
234:       "weka.core.Capabilities",
235:       "org.pentaho.packageManagement.PackageManager",
236:       "org.pentaho.packageManagement.DefaultPackageManager",
237:       "weka.core.Version",
238:       "weka.core.Environment",
239:       "weka.core.WekaPackageManager",
240:       "weka.classifiers.misc.SerializedClassifier",
241:       "weka.core.AbstractInstance",
242:       "weka.core.DenseInstance",
243:       "weka.core.neighboursearch.KDTree",
244:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
245:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
246:       "weka.core.SparseInstance",
247:       "weka.core.BinarySparseInstance",
248:       "weka.core.UnassignedDatasetException",
249:       "weka.core.tokenizers.NGramTokenizer",
250:       "weka.core.neighboursearch.CoverTree",
251:       "weka.core.Instances",
252:       "weka.core.neighboursearch.balltrees.BallNode",
253:       "weka.core.Stopwords",
254:       "weka.classifiers.functions.VotedPerceptron",
255:       "weka.core.neighboursearch.BallTree",
256:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
257:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
258:       "weka.core.neighboursearch.balltrees.BallSplitter",
259:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
260:       "weka.filters.Filter",
261:       "weka.filters.supervised.attribute.Discretize",
262:       "weka.core.TestInstances",
263:       "weka.classifiers.RandomizableClassifier",
264:       "weka.classifiers.functions.SGDText",
265:       "weka.classifiers.SingleClassifierEnhancer",
266:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
267:       "weka.classifiers.meta.CostSensitiveClassifier",
268:       "weka.classifiers.rules.ZeroR",
269:       "weka.classifiers.CostMatrix",
270:       "weka.classifiers.bayes.BayesNet",
271:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
272:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
273:       "weka.classifiers.bayes.net.search.local.K2",
274:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
275:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
276:       "weka.classifiers.misc.InputMappedClassifier",
277:       "weka.estimators.Estimator",
278:       "weka.estimators.KernelEstimator",
279:       "weka.core.Attribute",
280:       "weka.core.ProtectedProperties",
281:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
282:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
283:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
284:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
285:       "weka.classifiers.trees.DecisionStump",
286:       "weka.classifiers.IteratedSingleClassifierEnhancer",
287:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
288:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
289:       "weka.classifiers.meta.Bagging",
290:       "weka.classifiers.trees.REPTree",
291:       "weka.attributeSelection.GainRatioAttributeEval",
292:       "weka.attributeSelection.CfsSubsetEval",
293:       "weka.classifiers.rules.JRip",
294:       "weka.core.stemmers.SnowballStemmer",
295:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
296:       "weka.core.converters.ArffLoader$ArffReader",
297:       "weka.core.WekaEnumeration",
298:       "weka.core.Attribute$1",
299:       "weka.core.neighboursearch.PerformanceStats",
300:       "weka.core.neighboursearch.TreePerformanceStats",
301:       "weka.classifiers.meta.AdditiveRegression",
302:       "weka.core.WekaException",
303:       "weka.classifiers.trees.m5.M5Base",
304:       "weka.classifiers.rules.M5Rules",
305:       "weka.classifiers.functions.supportVector.Kernel",
306:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
307:       "weka.classifiers.bayes.NaiveBayesMultinomial",
308:       "weka.classifiers.trees.J48",
309:       "weka.classifiers.trees.j48.ClassifierTree",
310:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
311:       "weka.attributeSelection.ReliefFAttributeEval",
312:       "weka.estimators.DiscreteEstimator",
313:       "weka.attributeSelection.InfoGainAttributeEval",
314:       "weka.core.UnsupportedAttributeTypeException",
315:       "weka.classifiers.meta.AttributeSelectedClassifier",
316:       "weka.attributeSelection.ASSearch",
317:       "weka.attributeSelection.BestFirst",
318:       "weka.classifiers.lazy.LWL",
319:       "weka.core.tokenizers.AlphabeticTokenizer",
320:       "weka.filters.SimpleFilter",
321:       "weka.filters.SimpleStreamFilter",
322:       "weka.filters.MultiFilter",
323:       "weka.filters.AllFilter",
324:       "weka.estimators.NormalEstimator",
325:       "weka.classifiers.rules.OneR",
326:       "weka.classifiers.functions.GaussianProcesses",
327:       "weka.classifiers.functions.supportVector.CachedKernel",
328:       "weka.classifiers.functions.supportVector.PolyKernel",
329:       "weka.classifiers.functions.SMOreg",
330:       "weka.classifiers.functions.supportVector.RegOptimizer",
331:       "weka.classifiers.functions.supportVector.RegSMO",
332:       "weka.classifiers.functions.supportVector.RegSMOImproved",
333:       "weka.core.SelectedTag",
334:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
335:       "weka.core.FindWithCapabilities",
336:       "weka.core.SingleIndex",
337:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
338:       "weka.classifiers.meta.AdaBoostM1",
339:       "weka.core.ClassDiscovery",
340:       "weka.classifiers.rules.DecisionTable",
341:       "weka.classifiers.functions.SimpleLinearRegression",
342:       "weka.classifiers.bayes.NaiveBayesUpdateable",
343:       "weka.core.Queue",
344:       "weka.core.AttributeLocator",
345:       "weka.core.StringLocator",
346:       "weka.core.RelationalLocator",
347:       "weka.core.ContingencyTables",
348:       "weka.core.FastVector",
349:       "weka.core.Queue$QueueNode",
350:       "weka.attributeSelection.CorrelationAttributeEval",
351:       "weka.attributeSelection.WrapperSubsetEval",
352:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
353:       "weka.classifiers.lazy.KStar",
354:       "weka.core.ManhattanDistance",
355:       "weka.core.Check",
356:       "weka.core.CheckOptionHandler",
357:       "weka.core.UnassignedClassException",
358:       "weka.attributeSelection.AttributeSelection",
359:       "weka.classifiers.meta.FilteredClassifier",
360:       "weka.filters.supervised.attribute.AttributeSelection",
361:       "weka.attributeSelection.GreedyStepwise",
362:       "weka.classifiers.meta.RandomCommittee",
363:       "weka.classifiers.trees.RandomTree",
364:       "weka.attributeSelection.OneRAttributeEval",
365:       "weka.classifiers.functions.SimpleLogistic",
366:       "weka.classifiers.meta.ClassificationViaRegression",
367:       "weka.classifiers.trees.M5P",
368:       "weka.classifiers.functions.LinearRegression",
369:       "weka.classifiers.MultipleClassifiersCombiner",
370:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
371:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
372:       "weka.classifiers.meta.Stacking",
373:       "weka.classifiers.functions.SGD",
374:       "weka.core.AttributeStats",
375:       "weka.experiment.Stats",
376:       "weka.classifiers.trees.LMT",
377:       "weka.classifiers.rules.PART",
378:       "weka.classifiers.rules.part.MakeDecList",
379:       "weka.classifiers.trees.RandomForest",
380:       "weka.estimators.MahalanobisEstimator",
381:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
382:       "weka.classifiers.bayes.net.BIFReader",
383:       "weka.classifiers.functions.MultilayerPerceptron",
384:       "weka.filters.unsupervised.attribute.NominalToBinary",
385:       "weka.classifiers.functions.neural.SigmoidUnit",
386:       "weka.classifiers.functions.neural.LinearUnit",
387:       "weka.core.matrix.Matrix",
388:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
389:       "weka.classifiers.meta.MultiScheme",
390:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
391:       "weka.classifiers.meta.Vote",
392:       "weka.classifiers.meta.LogitBoost",
393:       "weka.classifiers.functions.Logistic",
394:       "weka.classifiers.meta.MultiClassClassifier",
395:       "weka.estimators.PoissonEstimator",
396:       "weka.classifiers.functions.SMO",
397:       "weka.classifiers.meta.RegressionByDiscretization",
398:       "weka.filters.unsupervised.attribute.Discretize",
399:       "weka.classifiers.functions.supportVector.RBFKernel",
400:       "weka.core.SerializationHelper",
401:       "weka.classifiers.meta.CVParameterSelection",
402:       "weka.core.stemmers.Stemming",
403:       "weka.classifiers.functions.supportVector.Puk",
404:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
405:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
406:       "weka.classifiers.functions.neural.NeuralConnection",
407:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
408:       "weka.classifiers.functions.supportVector.StringKernel",
409:       "weka.core.neighboursearch.covertrees.Stack",
410:       "weka.core.neighboursearch.CoverTree$DistanceNode",
411:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
412:       "weka.core.neighboursearch.CoverTree$MyHeap",
413:       "weka.core.neighboursearch.CoverTree$MyHeapElement",
414:       "weka.core.ChebyshevDistance",
415:       "weka.core.ListOptions"
416:     );
417:   }
418: }

[MASTER] 23:38:40.685 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
PrecomputedKernelMatrixKernel precomputedKernelMatrixKernel0 = new PrecomputedKernelMatrixKernel();
precomputedKernelMatrixKernel0.toString();
File file0 = precomputedKernelMatrixKernel0.getKernelMatrixFile();
naiveBayesMultinomialText0.setStopwords(file0);
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
naiveBayesMultinomialText0.setPeriodicPruning((-1115));
naiveBayesMultinomialText0.getPeriodicPruning();
naiveBayesMultinomialText0.getStopwords();
assertEquals((-1115), naiveBayesMultinomialText0.getPeriodicPruning());


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/mosa/tests/s1004/107_weka/evosuite-tests
* Done!

* Computation finished
