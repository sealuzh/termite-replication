* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: org.jcvi.jillion.core.Range
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 7357
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 04:53:44.894 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:53:44.930 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 04:53:44.965 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToDoubleFunction
[MASTER] 04:53:44.972 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToIntFunction
[MASTER] 04:53:44.982 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToLongFunction
[MASTER] 04:53:45.137 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:53:45.138 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.Range
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2577
* Using seed 1009
* Starting evolution
[MASTER] 04:53:53.574 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$Builder.<init>(Lorg/jcvi/jillion/core/Range$Builder;)V: Line 2355
[MASTER] 04:53:53.575 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$Builder.<init>(Lorg/jcvi/jillion/core/Range$Builder;)V: Line 2356
[MASTER] 04:53:53.575 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$Builder.<init>(JJ)V: Line 2373
[MASTER] 04:53:53.576 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$Builder.<init>(JJ)V: Line 2374
[MASTER] 04:53:53.576 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$Builder.<init>(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)V: Line 2391
[MASTER] 04:53:53.576 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$Builder.<init>(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)V: Line 2392
[MASTER] 04:53:53.576 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$Builder.<init>(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)V: Line 2395
[MASTER] 04:53:53.576 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$Builder.<init>(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)V: Line 2396
[MASTER] 04:53:53.576 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$Builder.<init>(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)V: Line 2397
[MASTER] 04:53:53.576 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$Builder.<init>(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)V: Line 2398
[MASTER] 04:53:53.576 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$Builder.<init>(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)V: Line 2400
[MASTER] 04:53:53.576 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$Builder.assertValidCoordinates(JJ)V: Line 2402
[MASTER] 04:53:53.576 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$Builder.assertValidCoordinates(JJ)V: Line 2403
[MASTER] 04:53:53.576 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$Builder.assertValidCoordinates(JJ)V: Line 2406
[MASTER] 04:53:53.576 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$Builder.contractBegin(J)Lorg/jcvi/jillion/core/Range$Builder;: Line 2473
[MASTER] 04:53:53.576 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$Builder.contractBegin(J)Lorg/jcvi/jillion/core/Range$Builder;: Line 2474
[MASTER] 04:53:53.576 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$Builder.contractBegin(J)Lorg/jcvi/jillion/core/Range$Builder;: Line 2475
[MASTER] 04:53:53.576 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$Builder.contractBegin(J)Lorg/jcvi/jillion/core/Range$Builder;: Line 2476
[MASTER] 04:53:53.576 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$Builder.copy()Lorg/jcvi/jillion/core/Range$Builder;: Line 2535
[MASTER] 04:53:53.579 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$CoordinateSystem.getStart(J)J: Line 379
[MASTER] 04:53:53.579 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$CoordinateSystem.getEnd(J)J: Line 386
[MASTER] 04:53:53.585 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1973: org.jcvi.jillion.core.Range$Builder.<init>(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)V:2392 - ReplaceComparisonOperator != null -> = null
[MASTER] 04:53:53.586 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1987: org.jcvi.jillion.core.Range$Builder.assertValidCoordinates(JJ)V:2402 - ReplaceArithmeticOperator - -> +
[MASTER] 04:53:53.586 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1988: org.jcvi.jillion.core.Range$Builder.assertValidCoordinates(JJ)V:2402 - ReplaceArithmeticOperator - -> %
[MASTER] 04:53:53.586 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1989: org.jcvi.jillion.core.Range$Builder.assertValidCoordinates(JJ)V:2402 - ReplaceArithmeticOperator - -> *
[MASTER] 04:53:53.586 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1990: org.jcvi.jillion.core.Range$Builder.assertValidCoordinates(JJ)V:2402 - ReplaceArithmeticOperator - -> /
[MASTER] 04:53:53.586 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1994: org.jcvi.jillion.core.Range$Builder.assertValidCoordinates(JJ)V:2402 - ReplaceArithmeticOperator + -> %
[MASTER] 04:53:53.586 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1995: org.jcvi.jillion.core.Range$Builder.assertValidCoordinates(JJ)V:2402 - ReplaceArithmeticOperator + -> -
[MASTER] 04:53:53.586 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1996: org.jcvi.jillion.core.Range$Builder.assertValidCoordinates(JJ)V:2402 - ReplaceArithmeticOperator + -> *
[MASTER] 04:53:53.586 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1997: org.jcvi.jillion.core.Range$Builder.assertValidCoordinates(JJ)V:2402 - ReplaceArithmeticOperator + -> /
[MASTER] 04:53:53.586 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2004: org.jcvi.jillion.core.Range$Builder.assertValidCoordinates(JJ)V:2403 - ReplaceComparisonOperator >= -> ==
[MASTER] 04:53:53.587 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2040: org.jcvi.jillion.core.Range$Builder.contractBegin(J)Lorg/jcvi/jillion/core/Range$Builder;:2473 - ReplaceArithmeticOperator + -> %
[MASTER] 04:53:53.587 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2041: org.jcvi.jillion.core.Range$Builder.contractBegin(J)Lorg/jcvi/jillion/core/Range$Builder;:2473 - ReplaceArithmeticOperator + -> -
[MASTER] 04:53:53.587 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2042: org.jcvi.jillion.core.Range$Builder.contractBegin(J)Lorg/jcvi/jillion/core/Range$Builder;:2473 - ReplaceArithmeticOperator + -> *
[MASTER] 04:53:53.587 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2043: org.jcvi.jillion.core.Range$Builder.contractBegin(J)Lorg/jcvi/jillion/core/Range$Builder;:2473 - ReplaceArithmeticOperator + -> /
[MASTER] 04:53:53.587 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2188: org.jcvi.jillion.core.Range$CoordinateSystem.getStart(J)J:379 - ReplaceArithmeticOperator + -> %
[MASTER] 04:53:53.588 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2191: org.jcvi.jillion.core.Range$CoordinateSystem.getStart(J)J:379 - ReplaceArithmeticOperator + -> /
[MASTER] 04:53:53.588 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2194: org.jcvi.jillion.core.Range$CoordinateSystem.getEnd(J)J:386 - ReplaceArithmeticOperator + -> %
[MASTER] 04:53:53.588 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2197: org.jcvi.jillion.core.Range$CoordinateSystem.getEnd(J)J:386 - ReplaceArithmeticOperator + -> /
[MASTER] 04:53:53.588 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jcvi.jillion.core.Range.complementFrom(Ljava/util/Collection;)Ljava/util/List;
[MASTER] 04:53:53.589 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jcvi.jillion.core.Range.toString()Ljava/lang/String;
[MASTER] 04:53:53.589 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jcvi.jillion.core.Range.Builder.<init>(JJ)V
[MASTER] 04:53:53.589 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jcvi.jillion.core.Range.Builder.contractBegin(J)Lorg/jcvi/jillion/core/Range$Builder;
[MASTER] 04:53:53.589 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jcvi.jillion.core.Range.Builder.copy()Lorg/jcvi/jillion/core/Range$Builder;
[MASTER] 04:53:53.590 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jcvi.jillion.core.Range.Builder.shift(J)Lorg/jcvi/jillion/core/Range$Builder;
[MASTER] 04:53:53.611 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.complementFrom(Ljava/util/Collection;)Ljava/util/List;
[MASTER] 04:53:53.612 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.toString()Ljava/lang/String;
[MASTER] 04:53:53.612 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.Builder.<init>(JJ)V
[MASTER] 04:53:53.612 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.Builder.contractBegin(J)Lorg/jcvi/jillion/core/Range$Builder;
[MASTER] 04:53:53.613 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.Builder.copy()Lorg/jcvi/jillion/core/Range$Builder;
[MASTER] 04:53:53.613 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.Builder.shift(J)Lorg/jcvi/jillion/core/Range$Builder;
[MASTER] 04:53:53.619 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$Builder.<init>(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)V: I7 Branch 144 IFNONNULL L2392 - true in context: org.jcvi.jillion.core.Range$Builder:<init>(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)V
[MASTER] 04:53:53.619 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$Builder.contractBegin(J)Lorg/jcvi/jillion/core/Range$Builder;: root-Branch in context: 
[MASTER] 04:53:53.619 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$Builder.<init>(JJ)V: root-Branch in context: org.jcvi.jillion.core.Range$Builder:<init>(JJ)V
[MASTER] 04:53:53.619 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$Builder.assertValidCoordinates(JJ)V: I13 Branch 145 IFGE L2403 - true in context: 
[MASTER] 04:53:53.628 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$Builder.copy()Lorg/jcvi/jillion/core/Range$Builder;: root-Branch in context: 
[MASTER] 04:53:53.629 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$Builder.shift(J)Lorg/jcvi/jillion/core/Range$Builder;: root-Branch in context: org.jcvi.jillion.core.Range$Builder:shift(J)Lorg/jcvi/jillion/core/Range$Builder;
[MASTER] 04:53:53.629 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$CoordinateSystem.getStart(J)J: root-Branch in context: 
[MASTER] 04:53:53.630 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.toString()Ljava/lang/String;: root-Branch in context: org.jcvi.jillion.core.Range:toString()Ljava/lang/String;
[MASTER] 04:53:53.631 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$CoordinateSystem.getEnd(J)J: root-Branch in context: 
[MASTER] 04:55:05.622 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.equals(Ljava/lang/Object;)Z: Line 1581
[MASTER] 04:55:05.623 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.equals(Ljava/lang/Object;)Z: Line 1584
[MASTER] 04:55:05.623 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.equals(Ljava/lang/Object;)Z: Line 1587
[MASTER] 04:55:05.623 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.equals(Ljava/lang/Object;)Z: Line 1588
[MASTER] 04:55:05.625 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 569: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:951 - ReplaceComparisonOperator >= -> ==
[MASTER] 04:55:05.626 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1180: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.equals(Ljava/lang/Object;)Z:1581 - ReplaceComparisonOperator != -> ==
[MASTER] 04:55:05.626 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1182: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.equals(Ljava/lang/Object;)Z:1584 - ReplaceComparisonOperator != null -> = null
[MASTER] 04:55:05.626 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1184: org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.equals(Ljava/lang/Object;)Z:1587 - ReplaceComparisonOperator == -> !=
[MASTER] 04:55:05.629 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.equals(Ljava/lang/Object;)Z: I4 Branch 93 IF_ACMPNE L1581 - true in context: 
[MASTER] 04:55:05.629 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.equals(Ljava/lang/Object;)Z: I12 Branch 94 IFNONNULL L1584 - true in context: 
[MASTER] 04:55:05.630 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.equals(Ljava/lang/Object;)Z: I23 Branch 95 IF_ACMPEQ L1587 - false in context: 
[MASTER] 04:56:48.809 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 565: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:947 - ReplaceComparisonOperator >= -> >
[MASTER] 04:57:04.041 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 327: org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;:541 - ReplaceComparisonOperator > -> >=
* Search finished after 213s and 91 generations, 39133 statements, best individual has fitness: 7752.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 70%
* Total number of goals: 632
* Number of covered goals: 442
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 73%
* Total number of goals: 426
* Number of covered goals: 311
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 53%
* Total number of goals: 802
* Number of covered goals: 428
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 77
* Number of covered goals: 39
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 37%
* Total number of goals: 107
* Number of covered goals: 40
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 37%
* Total number of goals: 107
* Number of covered goals: 40
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 72%
* Total number of goals: 426
* Number of covered goals: 307
* Generated 165 tests with total length 935
* Resulting test suite's coverage: 63% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 31%
* Compiling and checking tests
[MASTER] 05:01:21.793 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 05:01:21.793 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.Builder range_Builder0 = new Range.Builder();
Range range0 = range_Builder0.build();
range_Builder0.contractBegin((-511L));
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range range1 = Range.of(range_CoordinateSystem0, (-1252L), 1965L);
assertFalse(range1.isEmpty());

Range range2 = range0.asRange();
assertFalse(range2.isEmpty());


[MASTER] 05:01:22.770 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 05:01:22.770 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(9223372036854775807L, 9223372036854775807L);
List<Range> list0 = range0.complement(range0);
assertTrue(list0.contains(range0));


[MASTER] 05:01:23.465 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<0>
[MASTER] 05:01:23.465 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.ofLength(2147483647L);
List<Range> list0 = range0.split(2147483647L);
List<Range> list1 = range0.complementFrom(list0);
assertFalse(list1.equals((Object)list0));
assertEquals(1, list0.size());
assertEquals(1, list1.size());
assertTrue(list0.contains(range0));


[MASTER] 05:01:24.398 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<0>
[MASTER] 05:01:24.398 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(9223372036854775807L, 9223372036854775807L);
Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
List<Range> list0 = range0.split(9223372036854775807L);
List<Range> list1 = range0.complementFrom(list0);
assertFalse(list1.contains(range0));
assertEquals(1, list1.size());


[MASTER] 05:01:24.518 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 05:01:24.519 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range range0 = Range.of(range_CoordinateSystem0, 4294967295L, 4294967295L);
Long long0 = new Long(4294967295L);
Range range1 = Range.of(4294967295L);
List<Range> list0 = range1.complement(range0);
assertTrue(range1.equals((Object)range0));
assertEquals(1, list0.size());
assertNotSame(range1, range0);


[MASTER] 05:01:25.611 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 05:01:25.611 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.ofLength(255L);
Range range1 = Range.of(9223372036854775807L);
boolean boolean0 = range0.endsBefore(range1);
assertTrue(boolean0);

Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
String string0 = range1.toString(range_CoordinateSystem0);
assertEquals("[ 9223372036854775807 .. 9223372036854775807 ]/0B", string0);

Range range2 = Range.parseRange("[ 9223372036854775807 .. 9223372036854775807 ]/0B");
List<Range> list0 = range1.complement(range2);
assertFalse(list0.contains(range1));
assertSame(range2, range1);
assertFalse(list0.isEmpty());


[MASTER] 05:01:27.974 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.IndexOutOfBoundsException: given length -9223372036854775785 would make range [1103 - ? ] beyond max allowed end offset
[MASTER] 05:01:27.974 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.of(1103L, (-9223372036854775785L));

[MASTER] 05:01:29.773 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<2> but was:<1>
[MASTER] 05:01:29.774 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(491L, 491L);
Range range1 = Range.of(491L, 65580L);
List<Range> list0 = range1.split(4024L);
List<Range> list1 = range0.complementFrom(list0);
assertEquals(17, list0.size());
assertEquals(2, list1.size());


[MASTER] 05:01:30.288 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 05:01:30.289 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range range0 = Range.of(range_CoordinateSystem0, (-181L), (-181L));
boolean boolean0 = range0.equals(range_CoordinateSystem0);
assertFalse(boolean0);

range0.getEnd(range_CoordinateSystem0);
Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.RESIDUE_BASED;
range0.getEnd(range_CoordinateSystem1);
Range range1 = Range.of(range_CoordinateSystem1, (-181L), (-181L));
range1.iterator();
Range range2 = Range.of((-181L));
Range.Builder range_Builder0 = new Range.Builder((-1280L), (-1280L));
Range range3 = range_Builder0.build();
range3.intersects(range0);
assertFalse(range3.isEmpty());

range0.getBegin(range_CoordinateSystem0);
String string0 = range0.toString(range_CoordinateSystem0);
assertTrue(range0.equals((Object)range2));
assertTrue(range0.isEmpty());
assertEquals("[ -181 .. -181 ]/SB", string0);
assertNotSame(range0, range2);


[MASTER] 05:01:30.662 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<4294967295> but was:<0>
[MASTER] 05:01:30.664 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(9223372036854775807L);
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
long long0 = range0.getEnd(range_CoordinateSystem0);
assertEquals((-9223372036854775808L), long0);

Range range1 = Range.ofLength(9223372036854775807L);
boolean boolean0 = range0.startsBefore(range1);
assertFalse(boolean0);

Object object0 = new Object();
Object object1 = new Object();
Range range2 = Range.ofLength(9223372036854775807L);
range2.equals((Object) null);
Range.ofLength(9223372036854775807L);
Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.SPACE_BASED;
long long1 = range1.getBegin(range_CoordinateSystem1);
assertEquals(4294967295L, long1);


[MASTER] 05:01:31.636 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 05:01:31.636 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of((-9223372036854775784L));
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range range1 = Range.of(range_CoordinateSystem0, (-9223372036854775784L), (-9223372036854775784L));
Object object0 = new Object();
boolean boolean0 = range0.isEmpty();
boolean boolean1 = range0.equals(range1);
assertFalse(boolean1 == boolean0);

Object object1 = new Object();
boolean boolean2 = range0.equals(object0);
assertFalse(boolean2);

Range range2 = Range.of((-9223372036854775784L));
assertNotSame(range2, range1);
assertSame(range2, range0);


[MASTER] 05:01:31.791 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 05:01:31.791 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.ofLength(5786L);
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range range1 = Range.of(range_CoordinateSystem0, 5786L, 5786L);
Long long0 = new Long(5786L);
Object object0 = new Object();
range1.equals(range_CoordinateSystem0);
List<Range> list0 = range0.complement(range1);
assertFalse(range1.isEmpty());
assertFalse(range0.isEmpty());
assertFalse(list0.contains(range1));


[MASTER] 05:01:34.377 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 05:01:34.378 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range range0 = Range.of(range_CoordinateSystem0, 4294967295L, 4294967295L);
Object object0 = new Object();
boolean boolean0 = range0.isEmpty();
assertFalse(boolean0);

range0.equals(object0);
Range range1 = Range.of((-648L), (-648L));
range0.complement(range1);
Range.Comparators range_Comparators0 = Range.Comparators.SHORTEST_TO_LONGEST;
Range range2 = Range.of(4294967295L);
assertNotSame(range2, range0);
assertTrue(range2.equals((Object)range0));


[MASTER] 05:01:34.669 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<0>
[MASTER] 05:01:34.669 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(491L, 491L);
Range range1 = Range.of(491L, 65580L);
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
range1.toString();
String string0 = range1.toString(range_CoordinateSystem0);
assertEquals("[ 491 .. 65580 ]/0B", string0);

Range range2 = Range.of(491L, 65580L);
Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.SPACE_BASED;
Range range3 = Range.parseRange("[ 491 .. 65580 ]/0B", range_CoordinateSystem1);
List<Range> list0 = range3.complement(range1);
assertEquals(1, list0.size());
assertFalse(list0.contains(range0));

boolean boolean0 = range3.equals(range0);
assertTrue(range3.equals((Object)range2));
assertFalse(boolean0);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'Range_ESTest' to /home/ubuntu/termite/mosa/tests/s1009/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: org.jcvi.jillion.assembly.consed.phd.PhdBuilder
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 7354
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 05:58:26.570 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 05:58:26.574 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 05:58:26.578 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 05:58:26.712 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 05:58:26.752 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 05:58:26.763 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 05:58:27.058 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 05:58:27.115 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 05:58:27.117 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 05:58:27.118 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 05:58:27.126 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 05:58:27.127 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 05:58:27.139 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 05:58:27.150 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 05:58:27.170 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.assembly.consed.phd.PhdBuilder
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 232
* Using seed 1009
* Starting evolution
* Search finished after 238s and 1172 generations, 178277 statements, best individual has fitness: 64.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 93
* Number of covered goals: 93
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 27
* Number of covered goals: 27
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 100%
* Total number of goals: 47
* Number of covered goals: 47
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 16
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 27
* Number of covered goals: 27
* Generated 26 tests with total length 109
* Resulting test suite's coverage: 97% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 13%
* Compiling and checking tests
* Writing JUnit test case 'PhdBuilder_ESTest' to /home/ubuntu/termite/mosa/tests/s1009/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: org.jcvi.jillion.core.util.FileIterator
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 7352
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 7355
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 06:09:31.971 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:09:32.234 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:09:32.235 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 06:09:32.242 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.util.FileIterator
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 424
* Using seed 1009
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 06:09:34.022 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:09:34.027 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:09:34.028 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 06:09:34.125 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 836
* Using seed 1009
* Starting evolution
[MASTER] 06:09:39.533 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 06:09:43.609 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 06:09:43.609 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 06:12:22.689 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
[MASTER] 06:12:49.294 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 226s and 436 generations, 258798 statements, best individual has fitness: 336.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 131
* Number of covered goals: 130
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 99%
* Total number of goals: 74
* Number of covered goals: 73
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 47
* Number of covered goals: 47
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 99%
* Total number of goals: 469
* Number of covered goals: 466
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 65%
* Total number of goals: 52
* Number of covered goals: 34
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 83%
* Total number of goals: 18
* Number of covered goals: 15
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 83%
* Total number of goals: 18
* Number of covered goals: 15
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 82%
* Total number of goals: 74
* Number of covered goals: 61
* Generated 91 tests with total length 417
* Resulting test suite's coverage: 95% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 73%
* Compiling and checking tests
[MASTER] 06:14:02.032 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 06:14:02.032 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DefaultNucleotideCodec defaultNucleotideCodec0 = DefaultNucleotideCodec.INSTANCE;
byte[] byteArray0 = new byte[4];
byteArray0[0] = (byte)89;
byteArray0[1] = (byte)6;
byteArray0[2] = (byte)1;
byteArray0[3] = (byte)85;
defaultNucleotideCodec0.toString(byteArray0);

* Writing JUnit test case 'DefaultNucleotideCodec_ESTest' to /home/ubuntu/termite/mosa/tests/s1009/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* Search finished after 308s and 959 generations, 263188 statements, best individual has fitness: 616.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 107
* Number of covered goals: 102
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 99%
* Total number of goals: 67
* Number of covered goals: 66
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 98%
* Total number of goals: 53
* Number of covered goals: 52
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 74
* Number of covered goals: 38
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 28
* Number of covered goals: 14
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 28
* Number of covered goals: 14
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 93%
* Total number of goals: 67
* Number of covered goals: 62
* Generated 31 tests with total length 164
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 54%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing JUnit test case 'FileIterator_ESTest' to /home/ubuntu/termite/mosa/tests/s1009/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
