* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: org.jcvi.jillion.core.Range
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 21006
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 02:08:58.515 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 02:08:58.652 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 02:08:58.654 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToDoubleFunction
[MASTER] 02:08:58.654 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToIntFunction
[MASTER] 02:08:58.683 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToLongFunction
[MASTER] 02:08:58.815 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 02:08:58.831 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.Range
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2577
* Using seed 1025
* Starting evolution
[MASTER] 02:09:06.415 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$Builder.<init>(Lorg/jcvi/jillion/core/Range$Builder;)V: Line 2355
[MASTER] 02:09:06.415 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$Builder.<init>(Lorg/jcvi/jillion/core/Range$Builder;)V: Line 2356
[MASTER] 02:09:06.416 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$Builder.contractBegin(J)Lorg/jcvi/jillion/core/Range$Builder;: Line 2473
[MASTER] 02:09:06.416 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$Builder.contractBegin(J)Lorg/jcvi/jillion/core/Range$Builder;: Line 2474
[MASTER] 02:09:06.416 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$Builder.contractBegin(J)Lorg/jcvi/jillion/core/Range$Builder;: Line 2475
[MASTER] 02:09:06.416 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$Builder.contractBegin(J)Lorg/jcvi/jillion/core/Range$Builder;: Line 2476
[MASTER] 02:09:06.416 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$Builder.expandBegin(J)Lorg/jcvi/jillion/core/Range$Builder;: Line 2510
[MASTER] 02:09:06.417 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$Builder.expandBegin(J)Lorg/jcvi/jillion/core/Range$Builder;: Line 2511
[MASTER] 02:09:06.417 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$Builder.copy()Lorg/jcvi/jillion/core/Range$Builder;: Line 2535
[MASTER] 02:09:06.419 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.getEnd(Lorg/jcvi/jillion/core/Range$CoordinateSystem;)J: Line 719
[MASTER] 02:09:06.419 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.getEnd(Lorg/jcvi/jillion/core/Range$CoordinateSystem;)J: Line 722
[MASTER] 02:09:06.421 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: Line 831
[MASTER] 02:09:06.421 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: Line 832
[MASTER] 02:09:06.421 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: Line 835
[MASTER] 02:09:06.421 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: Line 836
[MASTER] 02:09:06.421 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: Line 837
[MASTER] 02:09:06.421 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: Line 838
[MASTER] 02:09:06.421 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: Line 843
[MASTER] 02:09:06.422 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: Line 844
[MASTER] 02:09:06.422 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: Line 845
[MASTER] 02:09:06.422 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: Line 846
[MASTER] 02:09:06.422 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: Line 852
[MASTER] 02:09:06.422 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.asRange()Lorg/jcvi/jillion/core/Range;: Line 981
[MASTER] 02:09:06.425 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$RangeIterator.hasNext()Z: Line 1000
[MASTER] 02:09:06.425 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$RangeIterator.hasNext()Z: Line 1009
[MASTER] 02:09:06.425 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$RangeIterator.next()Ljava/lang/Long;: Line 1015
[MASTER] 02:09:06.483 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 391: org.jcvi.jillion.core.Range.getEnd(Lorg/jcvi/jillion/core/Range$CoordinateSystem;)J:719 - ReplaceComparisonOperator != null -> = null
[MASTER] 02:09:06.483 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 439: org.jcvi.jillion.core.Range.intersection(Lorg/jcvi/jillion/core/Range;)Lorg/jcvi/jillion/core/Range;:809 - ReplaceArithmeticOperator - -> %
[MASTER] 02:09:06.483 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 467: org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;:832 - ReplaceComparisonOperator == -> !=
[MASTER] 02:09:06.483 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 478: org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;:836 - ReplaceComparisonOperator == -> >=
[MASTER] 02:09:06.483 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 485: org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;:837 - ReplaceArithmeticOperator - -> +
[MASTER] 02:09:06.483 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 486: org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;:837 - ReplaceArithmeticOperator - -> %
[MASTER] 02:09:06.483 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 487: org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;:837 - ReplaceArithmeticOperator - -> *
[MASTER] 02:09:06.483 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 488: org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;:837 - ReplaceArithmeticOperator - -> /
[MASTER] 02:09:06.483 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 492: org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;:838 - ReplaceComparisonOperator != -> ==
[MASTER] 02:09:06.483 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 505: org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;:843 - ReplaceComparisonOperator == -> <=
[MASTER] 02:09:06.483 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 511: org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;:844 - ReplaceArithmeticOperator + -> %
[MASTER] 02:09:06.483 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 512: org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;:844 - ReplaceArithmeticOperator + -> -
[MASTER] 02:09:06.483 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 513: org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;:844 - ReplaceArithmeticOperator + -> *
[MASTER] 02:09:06.483 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 514: org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;:844 - ReplaceArithmeticOperator + -> /
[MASTER] 02:09:06.483 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 518: org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;:845 - ReplaceComparisonOperator != -> ==
[MASTER] 02:09:06.484 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 542: org.jcvi.jillion.core.Range.endsBefore(Lorg/jcvi/jillion/core/Range;)Z:898 - ReplaceComparisonOperator >= -> >
[MASTER] 02:09:06.486 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2040: org.jcvi.jillion.core.Range$Builder.contractBegin(J)Lorg/jcvi/jillion/core/Range$Builder;:2473 - ReplaceArithmeticOperator + -> %
[MASTER] 02:09:06.486 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2041: org.jcvi.jillion.core.Range$Builder.contractBegin(J)Lorg/jcvi/jillion/core/Range$Builder;:2473 - ReplaceArithmeticOperator + -> -
[MASTER] 02:09:06.486 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2042: org.jcvi.jillion.core.Range$Builder.contractBegin(J)Lorg/jcvi/jillion/core/Range$Builder;:2473 - ReplaceArithmeticOperator + -> *
[MASTER] 02:09:06.486 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2043: org.jcvi.jillion.core.Range$Builder.contractBegin(J)Lorg/jcvi/jillion/core/Range$Builder;:2473 - ReplaceArithmeticOperator + -> /
[MASTER] 02:09:06.486 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2067: org.jcvi.jillion.core.Range$Builder.expandBegin(J)Lorg/jcvi/jillion/core/Range$Builder;:2510 - ReplaceArithmeticOperator - -> +
[MASTER] 02:09:06.486 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2068: org.jcvi.jillion.core.Range$Builder.expandBegin(J)Lorg/jcvi/jillion/core/Range$Builder;:2510 - ReplaceArithmeticOperator - -> %
[MASTER] 02:09:06.486 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2069: org.jcvi.jillion.core.Range$Builder.expandBegin(J)Lorg/jcvi/jillion/core/Range$Builder;:2510 - ReplaceArithmeticOperator - -> *
[MASTER] 02:09:06.486 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2070: org.jcvi.jillion.core.Range$Builder.expandBegin(J)Lorg/jcvi/jillion/core/Range$Builder;:2510 - ReplaceArithmeticOperator - -> /
[MASTER] 02:09:06.487 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2207: org.jcvi.jillion.core.Range$RangeIterator.hasNext()Z:1000 - ReplaceComparisonOperator != -> >
[MASTER] 02:09:06.487 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2218: org.jcvi.jillion.core.Range$RangeIterator.hasNext()Z:1009 - ReplaceComparisonOperator > -> !=
[MASTER] 02:09:06.487 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2226: org.jcvi.jillion.core.Range$RangeIterator.next()Ljava/lang/Long;:1015 - ReplaceArithmeticOperator + -> %
[MASTER] 02:09:06.487 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2227: org.jcvi.jillion.core.Range$RangeIterator.next()Ljava/lang/Long;:1015 - ReplaceArithmeticOperator + -> -
[MASTER] 02:09:06.487 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2228: org.jcvi.jillion.core.Range$RangeIterator.next()Ljava/lang/Long;:1015 - ReplaceArithmeticOperator + -> *
[MASTER] 02:09:06.487 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2229: org.jcvi.jillion.core.Range$RangeIterator.next()Ljava/lang/Long;:1015 - ReplaceArithmeticOperator + -> /
[MASTER] 02:09:06.508 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jcvi.jillion.core.Range.getEnd(Lorg/jcvi/jillion/core/Range$CoordinateSystem;)J
[MASTER] 02:09:06.514 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jcvi.jillion.core.Range.asRange()Lorg/jcvi/jillion/core/Range;
[MASTER] 02:09:06.515 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;
[MASTER] 02:09:06.515 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jcvi.jillion.core.Range.toString()Ljava/lang/String;
[MASTER] 02:09:06.515 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jcvi.jillion.core.Range.Builder.<init>(JJ)V
[MASTER] 02:09:06.516 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jcvi.jillion.core.Range.Builder.contractBegin(J)Lorg/jcvi/jillion/core/Range$Builder;
[MASTER] 02:09:06.516 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jcvi.jillion.core.Range.Builder.expandBegin(J)Lorg/jcvi/jillion/core/Range$Builder;
[MASTER] 02:09:06.516 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jcvi.jillion.core.Range.Builder.copy()Lorg/jcvi/jillion/core/Range$Builder;
[MASTER] 02:09:06.597 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.getEnd(Lorg/jcvi/jillion/core/Range$CoordinateSystem;)J
[MASTER] 02:09:06.598 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.asRange()Lorg/jcvi/jillion/core/Range;
[MASTER] 02:09:06.598 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;
[MASTER] 02:09:06.599 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.toString()Ljava/lang/String;
[MASTER] 02:09:06.599 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.Builder.<init>(JJ)V
[MASTER] 02:09:06.600 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.Builder.contractBegin(J)Lorg/jcvi/jillion/core/Range$Builder;
[MASTER] 02:09:06.601 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.Builder.expandBegin(J)Lorg/jcvi/jillion/core/Range$Builder;
[MASTER] 02:09:06.601 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.Builder.copy()Lorg/jcvi/jillion/core/Range$Builder;
[MASTER] 02:09:06.637 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: I33 Branch 50 IFEQ L836 - false in context: org.jcvi.jillion.core.Range:complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;
[MASTER] 02:09:06.638 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$Builder.contractBegin(J)Lorg/jcvi/jillion/core/Range$Builder;: root-Branch in context: 
[MASTER] 02:09:06.638 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$RangeIterator.hasNext()Z: I28 Branch 155 IFGT L1009 - false in context: 
[MASTER] 02:09:06.638 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$Builder.expandBegin(J)Lorg/jcvi/jillion/core/Range$Builder;: root-Branch in context: 
[MASTER] 02:09:06.638 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$Builder.<init>(JJ)V: root-Branch in context: org.jcvi.jillion.core.Range$Builder:<init>(JJ)V
[MASTER] 02:09:06.638 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$Builder.copy()Lorg/jcvi/jillion/core/Range$Builder;: root-Branch in context: 
[MASTER] 02:09:06.638 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.asRange()Lorg/jcvi/jillion/core/Range;: root-Branch in context: org.jcvi.jillion.core.Range:asRange()Lorg/jcvi/jillion/core/Range;
[MASTER] 02:09:06.638 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.getEnd(Lorg/jcvi/jillion/core/Range$CoordinateSystem;)J: I3 Branch 36 IFNONNULL L719 - true in context: org.jcvi.jillion.core.Range:getEnd(Lorg/jcvi/jillion/core/Range$CoordinateSystem;)J
[MASTER] 02:09:06.638 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: I48 Branch 51 IFNE L838 - true in context: org.jcvi.jillion.core.Range:complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;
[MASTER] 02:09:06.639 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$RangeIterator.hasNext()Z: I6 Branch 153 IFNE L1000 - true in context: 
[MASTER] 02:09:06.639 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.endsBefore(Lorg/jcvi/jillion/core/Range;)Z: I31 Branch 58 IFGE L898 - true in context: org.jcvi.jillion.core.Range:endsBefore(Lorg/jcvi/jillion/core/Range;)Z
[MASTER] 02:09:06.639 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$RangeIterator.next()Ljava/lang/Long;: root-Branch in context: 
[MASTER] 02:09:06.639 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: I10 Branch 49 IFEQ L832 - true in context: org.jcvi.jillion.core.Range:complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;
[MASTER] 02:09:06.639 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: I76 Branch 53 IFNE L845 - false in context: org.jcvi.jillion.core.Range:complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;
[MASTER] 02:09:06.639 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: I61 Branch 52 IFEQ L843 - false in context: org.jcvi.jillion.core.Range:complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;
[MASTER] 02:09:31.099 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$IntRange.equals(Ljava/lang/Object;)Z: Line 1172
[MASTER] 02:09:31.100 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$IntRange.equals(Ljava/lang/Object;)Z: Line 1173
[MASTER] 02:09:31.100 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$IntRange.equals(Ljava/lang/Object;)Z: Line 1174
[MASTER] 02:09:31.102 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 214: org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;:521 - ReplaceComparisonOperator > -> >=
[MASTER] 02:09:31.102 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 418: org.jcvi.jillion.core.Range.intersects(Lorg/jcvi/jillion/core/Range;)Z:781 - ReplaceComparisonOperator > -> >=
[MASTER] 02:09:31.102 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 422: org.jcvi.jillion.core.Range.intersects(Lorg/jcvi/jillion/core/Range;)Z:781 - ReplaceComparisonOperator < -> <=
[MASTER] 02:09:31.103 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 839: org.jcvi.jillion.core.Range$IntRange.equals(Ljava/lang/Object;)Z:1173 - ReplaceComparisonOperator == -> >=
[MASTER] 02:09:31.108 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$IntRange.equals(Ljava/lang/Object;)Z: I39 Branch 76 IF_ICMPEQ L1173 - false in context: 
[MASTER] 02:09:31.108 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$IntRange.equals(Ljava/lang/Object;)Z: I23 Branch 75 IF_ACMPEQ L1169 - true in context: 
[MASTER] 02:09:37.142 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 315: org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;:540 - ReplaceComparisonOperator > -> !=
[MASTER] 02:09:37.151 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.parseRange(Ljava/lang/String;)Lorg/jcvi/jillion/core/Range;
[MASTER] 02:09:43.413 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 569: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:951 - ReplaceComparisonOperator >= -> ==
[MASTER] 02:09:43.414 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2126: org.jcvi.jillion.core.Range$Builder.build()Lorg/jcvi/jillion/core/Range;:2555 - ReplaceComparisonOperator >= -> >
[MASTER] 02:09:59.738 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jcvi.jillion.core.Range.iterator()Ljava/util/Iterator;
[MASTER] 02:09:59.739 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.Range.iterator()Ljava/util/Iterator;
[MASTER] 02:10:02.751 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.equals(Ljava/lang/Object;)Z: Line 1585
[MASTER] 02:10:02.756 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.equals(Ljava/lang/Object;)Z: I12 Branch 94 IFNONNULL L1584 - false in context: 
* Search finished after 229s and 91 generations, 36386 statements, best individual has fitness: 7720.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 70%
* Total number of goals: 632
* Number of covered goals: 443
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 73%
* Total number of goals: 426
* Number of covered goals: 311
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 54%
* Total number of goals: 802
* Number of covered goals: 431
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 77
* Number of covered goals: 39
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 37%
* Total number of goals: 107
* Number of covered goals: 40
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 37%
* Total number of goals: 107
* Number of covered goals: 40
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 72%
* Total number of goals: 426
* Number of covered goals: 308
* Generated 169 tests with total length 794
* Resulting test suite's coverage: 63% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 30%
* Compiling and checking tests
[MASTER] 02:16:55.876 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<0>
[MASTER] 02:16:55.877 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(9223372036854775674L, 9223372036854775674L);
List<Range> list0 = range0.complement(range0);
assertFalse(list0.contains(range0));
assertEquals(1, list0.size());


[MASTER] 02:16:55.955 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 02:16:55.955 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.ofLength(0L);
Range range1 = Range.of(0L);
List<Range> list0 = range0.complement(range1);
assertTrue(list0.contains(range0));
assertFalse(range0.isEmpty());
assertFalse(list0.contains(range1));


[MASTER] 02:16:57.339 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<0>
[MASTER] 02:16:57.339 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of((-29L));
Range.Builder range_Builder0 = new Range.Builder(range0);
range_Builder0.copy();
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range.of(range_CoordinateSystem0, (-29L), (-29L));
Range.Builder range_Builder1 = new Range.Builder(range_Builder0);
Range range1 = range_Builder0.build();
List<Range> list0 = range0.complement(range1);
assertEquals(1, list0.size());
assertFalse(list0.contains(range0));
assertSame(range1, range0);


[MASTER] 02:16:58.644 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.IndexOutOfBoundsException: given length -9223372036854775798 would make range [347 - ? ] beyond max allowed end offset
[MASTER] 02:16:58.644 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.of(347L, (-9223372036854775798L));

[MASTER] 02:17:00.446 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IndexOutOfBoundsException
[MASTER] 02:17:00.447 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.ofLength(9223372036854775141L);
Range.of(9223372036854775141L);
range0.split(9223372036854775141L);

[MASTER] 02:17:00.902 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 02:17:00.903 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.ofLength(9223372036854775127L);
Range range1 = Range.of(9223372036854775127L);
range0.equals(range1);
List<Range> list0 = range1.complement(range0);
List<Range> list1 = range1.complementFrom(list0);
assertTrue(list1.contains(range1));
assertFalse(range0.isEmpty());


[MASTER] 02:17:01.163 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<0>
[MASTER] 02:17:01.163 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(9223372036854775667L);
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
String string0 = range0.toString(range_CoordinateSystem0);
assertEquals("[ 9223372036854775667 .. 9223372036854775668 ]/SB", string0);

Range.CoordinateSystem.values();
Long.getLong("", 3371L);
Range range1 = Range.parseRange("[ 9223372036854775667 .. 9223372036854775668 ]/SB");
List<Range> list0 = range0.complement(range1);
assertFalse(list0.contains(range0));
assertEquals(1, list0.size());

long long0 = range0.getBegin(range_CoordinateSystem0);
assertEquals(9223372036854775667L, long0);


[MASTER] 02:17:01.677 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 02:17:01.677 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range range0 = Range.of(range_CoordinateSystem0, 1L, 1L);
Range range1 = Range.of(1L);
List<Range> list0 = range1.complement(range0);
assertFalse(list0.contains(range1));
assertTrue(list0.contains(range0));


[MASTER] 02:17:01.792 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 02:17:01.792 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(9223372036854775127L, 9223372036854775127L);
Range range1 = Range.of(9223372036854775127L);
List<Range> list0 = range1.complement(range0);
assertTrue(list0.contains(range0));


[MASTER] 02:17:06.531 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 02:17:06.532 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(2147483647L);
Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
range0.forEach(consumer0);
Range range1 = Range.of(2147483647L);
range1.equals(range0);
Range.Builder range_Builder0 = new Range.Builder((-1L), (-1L));
range_Builder0.shift((-323L));
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range.Builder range_Builder1 = new Range.Builder(range_CoordinateSystem0, 2147483647L, 2147483647L);
Range range2 = range_Builder1.build();
String string0 = range1.toString();
assertTrue(range1.equals((Object)range2));
assertEquals("[ 2147483647 .. 2147483647 ]/0B", string0);
assertNotSame(range1, range2);


[MASTER] 02:17:07.486 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 02:17:07.486 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
Range range0 = Range.of(range_CoordinateSystem0, 43L, 43L);
range0.equals(range_CoordinateSystem0);
Range range1 = Range.of(43L);
Range range2 = Range.ofLength(43L);
boolean boolean0 = range1.equals(range2);
assertTrue(boolean0);

Range range3 = Range.of(43L, 43L);
assertNotSame(range3, range0);
assertTrue(range3.equals((Object)range0));


[MASTER] 02:17:08.526 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IndexOutOfBoundsException
[MASTER] 02:17:08.526 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.ofLength(9223372036854775127L);
Object object0 = new Object();
range0.equals(object0);
Object object1 = new Object();
range0.equals((Object) null);
range0.split(9223372036854775127L);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'Range_ESTest' to /home/ubuntu/termite/mosa/tests/s1025/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 21009
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 02:32:09.320 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 02:32:09.354 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 02:32:09.355 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 02:32:09.460 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 836
* Using seed 1025
* Starting evolution
[MASTER] 02:32:10.780 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 02:32:10.781 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 02:33:05.295 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 251s and 436 generations, 263154 statements, best individual has fitness: 336.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 131
* Number of covered goals: 130
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 99%
* Total number of goals: 74
* Number of covered goals: 73
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 48
* Number of covered goals: 48
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 99%
* Total number of goals: 469
* Number of covered goals: 466
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 65%
* Total number of goals: 52
* Number of covered goals: 34
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 83%
* Total number of goals: 18
* Number of covered goals: 15
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 83%
* Total number of goals: 18
* Number of covered goals: 15
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 82%
* Total number of goals: 74
* Number of covered goals: 61
* Generated 93 tests with total length 431
* Resulting test suite's coverage: 95% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 71%
* Compiling and checking tests
[MASTER] 02:37:13.485 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 02:37:13.485 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DefaultNucleotideCodec defaultNucleotideCodec0 = DefaultNucleotideCodec.INSTANCE;
byte[] byteArray0 = new byte[4];
byteArray0[0] = (byte)63;
byteArray0[1] = (byte)110;
byteArray0[2] = (byte)0;
byteArray0[3] = (byte) (-115);
defaultNucleotideCodec0.toString(byteArray0);

* Writing JUnit test case 'DefaultNucleotideCodec_ESTest' to /home/ubuntu/termite/mosa/tests/s1025/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: org.jcvi.jillion.core.util.FileIterator
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 21001
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 02:49:20.342 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 02:49:20.630 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 02:49:20.631 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 02:49:20.688 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.util.FileIterator
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 424
* Using seed 1025
* Starting evolution
* Search finished after 324s and 959 generations, 280132 statements, best individual has fitness: 584.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 107
* Number of covered goals: 102
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 99%
* Total number of goals: 67
* Number of covered goals: 66
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 98%
* Total number of goals: 53
* Number of covered goals: 52
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 57%
* Total number of goals: 74
* Number of covered goals: 42
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 28
* Number of covered goals: 14
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 28
* Number of covered goals: 14
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 93%
* Total number of goals: 67
* Number of covered goals: 62
* Generated 36 tests with total length 227
* Resulting test suite's coverage: 83% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 54%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'FileIterator_ESTest' to /home/ubuntu/termite/mosa/tests/s1025/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: org.jcvi.jillion.assembly.consed.phd.PhdBuilder
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 21003
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 03:19:48.147 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 03:19:48.148 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 03:19:48.153 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 03:19:48.347 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 03:19:48.407 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 03:19:48.408 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 03:19:48.790 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 03:19:48.791 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 03:19:48.810 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 03:19:48.814 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 03:19:48.828 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 03:19:48.839 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 03:19:48.845 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 03:19:48.847 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 03:19:48.864 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.assembly.consed.phd.PhdBuilder
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 232
* Using seed 1025
* Starting evolution
[MASTER] 03:23:11.755 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
* Search finished after 230s and 1172 generations, 178593 statements, best individual has fitness: 64.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 93
* Number of covered goals: 93
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 27
* Number of covered goals: 27
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 100%
* Total number of goals: 47
* Number of covered goals: 47
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 16
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 27
* Number of covered goals: 27
* Generated 28 tests with total length 145
* Resulting test suite's coverage: 97% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
* Writing JUnit test case 'PhdBuilder_ESTest' to /home/ubuntu/termite/mosa/tests/s1025/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
