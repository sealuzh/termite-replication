* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14211
* Connecting to master process on port 14213
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 23:40:40.959 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 23:40:40.967 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 23:40:40.969 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 23:40:41.106 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:40:41.175 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:40:41.176 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1412
* Using seed 1005
* Starting evolution
[MASTER] 23:40:54.964 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: Line 1084
[MASTER] 23:40:54.964 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: Line 1085
[MASTER] 23:40:54.965 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: I4 Branch 70 IFNONNULL L1084 - false
[MASTER] 23:40:54.966 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 252: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z:605 - ReplaceVariable m_wordFrequencies -> m_normalize
[MASTER] 23:40:54.966 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 435: weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;:1084 - ReplaceComparisonOperator != null -> = null
[MASTER] 23:40:54.967 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 436: weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;:1085 - ReplaceConstant - NaiveBayesMultinomialText: No model built yet.
 -> 
[MASTER] 23:40:54.967 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;:NonEmptyString
[MASTER] 23:40:54.967 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;
[MASTER] 23:40:54.968 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;
[MASTER] 23:40:54.968 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: I4 Branch 70 IFNONNULL L1084 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:toString()Ljava/lang/String;
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 23:41:04.934 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:41:04.938 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:41:04.940 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 23:41:05.594 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 23:41:07.585 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 23:41:07.590 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 23:41:10.731 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 23:41:10.770 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 23:41:10.771 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 23:41:10.771 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 23:41:10.772 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 23:41:10.772 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 23:41:10.772 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 23:41:10.774 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 23:41:10.774 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 23:41:10.851 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 23:41:10.871 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
[MASTER] 23:41:11.286 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 23:41:11.286 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 3904
* Using seed 1005
* Starting evolution
[MASTER] 23:41:17.913 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 23:41:47.039 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 23:42:05.964 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: I3 Branch 165 IFNULL L1574 - true
[MASTER] 23:42:06.013 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: I3 Branch 165 IFNULL L1574 - true in context: 
[MASTER] 23:42:15.997 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 242s and 118 generations, 62510 statements, best individual has fitness: 14920.0
[MASTER] 23:45:19.744 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 59%
* Total number of goals: 1378
* Number of covered goals: 815
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 44%
* Total number of goals: 809
* Number of covered goals: 360
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 70
* Number of covered goals: 70
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 62%
* Total number of goals: 424
* Number of covered goals: 265
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 21%
* Total number of goals: 278
* Number of covered goals: 58
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 103
* Number of covered goals: 101
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 44%
* Total number of goals: 809
* Number of covered goals: 352
* Generated 155 tests with total length 1418
* Resulting test suite's coverage: 53% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 294s and 315 generations, 123155 statements, best individual has fitness: 1504.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 90%
* Total number of goals: 338
* Number of covered goals: 304
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 83%
* Total number of goals: 194
* Number of covered goals: 161
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 476
* Number of covered goals: 445
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 112
* Number of covered goals: 60
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 81%
* Total number of goals: 194
* Number of covered goals: 158
* Generated 79 tests with total length 523
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 60%
* Compiling and checking tests
[MASTER] 23:50:31.669 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_21_1573689031616/weka/classifiers/bayes/NaiveBayesMultinomialText_21_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_21_1573689031616/weka/classifiers/bayes/NaiveBayesMultinomialText_21_tmp__ESTest_scaffolding.java]]
[MASTER] 23:50:31.669 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:50:31.669 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 23:50:31.674 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 23:50:31.674 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 23:50:31.675 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_21_1573689031616/weka/classifiers/bayes/NaiveBayesMultinomialText_21_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Nov 13 23:50:31 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Locale;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.SparseInstance;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_21_tmp__ESTest extends NaiveBayesMultinomialText_21_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=1.830738805564335
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
29:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
30:       naiveBayesMultinomialText0.getCapabilities();
31:       linkedHashMap0.entrySet();
32:       naiveBayesMultinomialText0.setLowercaseTokens(true);
33:       double[] doubleArray0 = new double[16];
34:       doubleArray0[0] = 0.0;
35:       Locale.getISOLanguages();
36:       doubleArray0[1] = 2271.8608890835;
37:       naiveBayesMultinomialText0.getLowercaseTokens();
38:       SparseInstance sparseInstance0 = new SparseInstance(2271.8608890835, doubleArray0);
39:       assertEquals(16, sparseInstance0.numAttributes());
40:   }
41: }
RegularFileObject[/tmp/EvoSuite_21_1573689031616/weka/classifiers/bayes/NaiveBayesMultinomialText_21_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Nov 13 23:50:31 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_21_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_21_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.core.ConjugateGradientOptimization",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.classifiers.meta.MultiClassClassifier$RandomCode",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.classifiers.functions.SGDText",
109:       "weka.classifiers.functions.Logistic",
110:       "weka.core.RelationalLocator",
111:       "weka.core.Utils",
112:       "weka.core.tokenizers.Tokenizer",
113:       "weka.filters.unsupervised.instance.RemoveWithValues",
114:       "weka.core.NoSupportForMissingValuesException",
115:       "weka.classifiers.UpdateableClassifier",
116:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
117:       "weka.core.MultiInstanceCapabilitiesHandler",
118:       "weka.classifiers.meta.MultiClassClassifier$ExhaustiveCode",
119:       "weka.core.Copyable",
120:       "weka.core.Capabilities",
121:       "weka.core.BinarySparseInstance",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
123:       "weka.core.AttributeLocator",
124:       "weka.core.SerializedObject",
125:       "weka.clusterers.UpdateableClusterer",
126:       "weka.core.Summarizable",
127:       "org.pentaho.packageManagement.PackageManager$1",
128:       "weka.classifiers.meta.MultiClassClassifier",
129:       "weka.core.Drawable",
130:       "weka.core.Optimization",
131:       "weka.core.matrix.Matrix",
132:       "weka.core.CapabilitiesHandler",
133:       "weka.attributeSelection.ASEvaluation",
134:       "weka.core.AbstractInstance",
135:       "weka.core.scripting.JythonObject",
136:       "weka.core.SelectedTag",
137:       "org.pentaho.packageManagement.DefaultPackage",
138:       "weka.core.Version",
139:       "weka.classifiers.meta.MultiClassClassifier$Code",
140:       "weka.filters.unsupervised.attribute.RemoveUseless",
141:       "weka.core.Tag",
142:       "weka.classifiers.AbstractClassifier",
143:       "weka.filters.unsupervised.attribute.Center",
144:       "weka.core.OptionHandler",
145:       "weka.core.WekaException",
146:       "weka.filters.StreamableFilter",
147:       "weka.core.scripting.JythonSerializableObject",
148:       "weka.classifiers.Classifier",
149:       "weka.core.Capabilities$Capability",
150:       "weka.core.SparseInstance",
151:       "org.pentaho.packageManagement.PackageManager",
152:       "weka.attributeSelection.AttributeTransformer",
153:       "weka.core.tokenizers.WordTokenizer",
154:       "weka.classifiers.misc.SerializedClassifier",
155:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
156:       "weka.attributeSelection.PrincipalComponents",
157:       "weka.core.stemmers.SnowballStemmer",
158:       "weka.core.stemmers.LovinsStemmer",
159:       "weka.classifiers.Evaluation",
160:       "weka.classifiers.functions.supportVector.Kernel",
161:       "weka.core.WekaPackageManager",
162:       "weka.core.TechnicalInformationHandler",
163:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
164:       "weka.core.Option",
165:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
166:       "weka.filters.Sourcable",
167:       "weka.classifiers.meta.MultiClassClassifier$StandardCode",
168:       "weka.core.Attribute",
169:       "weka.core.Stopwords",
170:       "weka.core.tokenizers.AlphabeticTokenizer",
171:       "weka.core.FastVector",
172:       "weka.core.UnassignedDatasetException",
173:       "weka.classifiers.RandomizableClassifier",
174:       "weka.classifiers.SingleClassifierEnhancer",
175:       "weka.core.RevisionUtils",
176:       "weka.core.Instance",
177:       "weka.core.ProtectedProperties",
178:       "weka.core.StringLocator",
179:       "weka.core.AttributeStats",
180:       "weka.core.WeightedInstancesHandler",
181:       "weka.filters.unsupervised.attribute.Remove",
182:       "weka.core.Randomizable",
183:       "weka.core.Instances",
184:       "weka.core.UnassignedClassException",
185:       "weka.classifiers.rules.ZeroR",
186:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
187:       "weka.filters.unsupervised.attribute.Standardize",
188:       "weka.core.UnsupportedAttributeTypeException",
189:       "weka.core.TechnicalInformation",
190:       "weka.classifiers.Sourcable",
191:       "weka.classifiers.functions.Logistic$OptEngCG",
192:       "weka.classifiers.functions.Logistic$OptEng",
193:       "weka.core.RevisionHandler",
194:       "weka.classifiers.evaluation.output.prediction.PlainText",
195:       "weka.core.xml.XMLSerialization",
196:       "weka.filters.unsupervised.attribute.MakeIndicator",
197:       "weka.classifiers.xml.XMLClassifier",
198:       "weka.filters.Filter"
199:     );
200:   } 
201: 
202:   private static void resetClasses() {
203:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_21_tmp__ESTest_scaffolding.class.getClassLoader()); 
204: 
205:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
206:       "weka.classifiers.AbstractClassifier",
207:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
209:       "weka.core.Capabilities$Capability",
210:       "weka.core.tokenizers.Tokenizer",
211:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
212:       "weka.core.tokenizers.WordTokenizer",
213:       "weka.core.stemmers.NullStemmer",
214:       "weka.core.Stopwords",
215:       "weka.core.Utils",
216:       "weka.core.neighboursearch.NearestNeighbourSearch",
217:       "weka.core.neighboursearch.LinearNNSearch",
218:       "weka.core.NormalizableDistance",
219:       "weka.core.EuclideanDistance",
220:       "weka.core.Range",
221:       "weka.core.AbstractInstance",
222:       "weka.core.SparseInstance",
223:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
224:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
225:       "weka.core.SerializedObject",
226:       "weka.core.BinarySparseInstance",
227:       "weka.core.DenseInstance",
228:       "weka.core.UnassignedDatasetException",
229:       "weka.classifiers.RandomizableClassifier",
230:       "weka.core.Tag",
231:       "weka.classifiers.functions.SGDText",
232:       "weka.core.Option",
233:       "weka.core.RevisionUtils",
234:       "weka.classifiers.SingleClassifierEnhancer",
235:       "weka.classifiers.IteratedSingleClassifierEnhancer",
236:       "weka.classifiers.meta.AdditiveRegression",
237:       "weka.classifiers.trees.DecisionStump",
238:       "weka.classifiers.rules.ZeroR",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.TestInstances",
246:       "weka.classifiers.Evaluation",
247:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
248:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
249:       "weka.core.neighboursearch.balltrees.BallNode",
250:       "weka.core.stemmers.SnowballStemmer",
251:       "weka.attributeSelection.ASEvaluation",
252:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
253:       "weka.attributeSelection.PrincipalComponents",
254:       "weka.core.stemmers.LovinsStemmer",
255:       "weka.core.stemmers.IteratedLovinsStemmer",
256:       "weka.core.neighboursearch.KDTree",
257:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
258:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
259:       "weka.classifiers.misc.InputMappedClassifier",
260:       "weka.filters.Filter",
261:       "weka.filters.supervised.attribute.Discretize",
262:       "weka.classifiers.bayes.NaiveBayes",
263:       "weka.core.TechnicalInformation",
264:       "weka.core.TechnicalInformation$Type",
265:       "weka.core.TechnicalInformation$Field",
266:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
267:       "weka.classifiers.misc.SerializedClassifier",
268:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
269:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
270:       "weka.core.Attribute",
271:       "weka.core.ProtectedProperties",
272:       "weka.core.Instances",
273:       "weka.core.WekaException",
274:       "weka.core.UnsupportedAttributeTypeException",
275:       "weka.classifiers.bayes.BayesNet",
276:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
277:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
278:       "weka.classifiers.bayes.net.search.local.K2",
279:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
280:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
281:       "weka.core.neighboursearch.BallTree",
282:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
283:       "weka.core.neighboursearch.balltrees.BallSplitter",
284:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
285:       "weka.classifiers.bayes.NaiveBayesUpdateable",
286:       "weka.core.stemmers.Stemming",
287:       "weka.attributeSelection.WrapperSubsetEval",
288:       "weka.core.neighboursearch.CoverTree",
289:       "weka.filters.SimpleFilter",
290:       "weka.filters.SimpleStreamFilter",
291:       "weka.filters.MultiFilter",
292:       "weka.filters.AllFilter",
293:       "weka.classifiers.CostMatrix",
294:       "weka.estimators.Estimator",
295:       "weka.estimators.NormalEstimator",
296:       "weka.classifiers.rules.DecisionTable",
297:       "weka.attributeSelection.ASSearch",
298:       "weka.attributeSelection.BestFirst",
299:       "weka.classifiers.meta.FilteredClassifier",
300:       "weka.filters.supervised.attribute.AttributeSelection",
301:       "weka.attributeSelection.AttributeSelection",
302:       "weka.attributeSelection.CfsSubsetEval",
303:       "weka.attributeSelection.GreedyStepwise",
304:       "weka.classifiers.trees.J48",
305:       "weka.classifiers.MultipleClassifiersCombiner",
306:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
307:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
308:       "weka.classifiers.meta.Stacking",
309:       "weka.core.tokenizers.AlphabeticTokenizer",
310:       "weka.classifiers.meta.AttributeSelectedClassifier",
311:       "weka.estimators.PoissonEstimator",
312:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
313:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
314:       "weka.classifiers.meta.Bagging",
315:       "weka.classifiers.trees.REPTree",
316:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
317:       "weka.classifiers.meta.CostSensitiveClassifier",
318:       "weka.classifiers.functions.VotedPerceptron",
319:       "weka.core.converters.ArffLoader$ArffReader",
320:       "weka.classifiers.bayes.net.BIFReader",
321:       "weka.core.AttributeStats",
322:       "weka.classifiers.functions.SMOreg",
323:       "weka.classifiers.functions.supportVector.RegOptimizer",
324:       "weka.classifiers.functions.supportVector.RegSMO",
325:       "weka.classifiers.functions.supportVector.RegSMOImproved",
326:       "weka.classifiers.functions.supportVector.Kernel",
327:       "weka.classifiers.functions.supportVector.CachedKernel",
328:       "weka.classifiers.functions.supportVector.PolyKernel",
329:       "weka.attributeSelection.InfoGainAttributeEval",
330:       "weka.core.FindWithCapabilities",
331:       "weka.core.SingleIndex",
332:       "weka.classifiers.lazy.LWL",
333:       "weka.classifiers.functions.LinearRegression",
334:       "weka.classifiers.rules.PART",
335:       "weka.classifiers.rules.part.MakeDecList",
336:       "weka.core.matrix.Matrix",
337:       "weka.classifiers.meta.CVParameterSelection",
338:       "weka.core.FastVector",
339:       "weka.attributeSelection.ReliefFAttributeEval",
340:       "weka.attributeSelection.OneRAttributeEval",
341:       "weka.classifiers.meta.RegressionByDiscretization",
342:       "weka.filters.unsupervised.attribute.Discretize",
343:       "weka.classifiers.trees.j48.ClassifierTree",
344:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
345:       "weka.attributeSelection.GainRatioAttributeEval",
346:       "weka.core.ClassDiscovery",
347:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
348:       "weka.classifiers.trees.RandomForest",
349:       "weka.classifiers.trees.RandomTree",
350:       "weka.classifiers.lazy.IBk",
351:       "weka.classifiers.functions.SimpleLogistic",
352:       "weka.classifiers.bayes.NaiveBayesMultinomial",
353:       "weka.classifiers.functions.SimpleLinearRegression",
354:       "weka.classifiers.meta.MultiClassClassifier",
355:       "weka.classifiers.functions.Logistic",
356:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
357:       "weka.classifiers.meta.LogitBoost",
358:       "weka.classifiers.functions.supportVector.Puk",
359:       "weka.estimators.DiscreteEstimator",
360:       "weka.core.tokenizers.NGramTokenizer",
361:       "weka.classifiers.functions.supportVector.RBFKernel",
362:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
363:       "weka.core.MinkowskiDistance",
364:       "weka.core.UnassignedClassException",
365:       "weka.core.Javadoc",
366:       "weka.core.GlobalInfoJavadoc",
367:       "weka.classifiers.functions.SGD",
368:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
369:       "weka.classifiers.trees.LMT",
370:       "weka.core.Check",
371:       "weka.core.CheckGOE",
372:       "weka.core.SelectedTag",
373:       "weka.classifiers.trees.m5.M5Base",
374:       "weka.classifiers.rules.M5Rules",
375:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
376:       "weka.classifiers.rules.OneR",
377:       "weka.classifiers.rules.JRip",
378:       "weka.core.WekaEnumeration",
379:       "weka.core.Attribute$1",
380:       "weka.classifiers.meta.ClassificationViaRegression",
381:       "weka.classifiers.trees.M5P",
382:       "weka.classifiers.functions.supportVector.StringKernel",
383:       "weka.classifiers.functions.SMO",
384:       "weka.attributeSelection.CorrelationAttributeEval",
385:       "weka.estimators.KernelEstimator",
386:       "weka.classifiers.functions.GaussianProcesses",
387:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
388:       "weka.classifiers.meta.Vote",
389:       "weka.classifiers.functions.MultilayerPerceptron",
390:       "weka.filters.unsupervised.attribute.NominalToBinary",
391:       "weka.classifiers.functions.neural.SigmoidUnit",
392:       "weka.classifiers.functions.neural.LinearUnit",
393:       "weka.classifiers.meta.MultiScheme",
394:       "weka.classifiers.meta.RandomCommittee",
395:       "weka.classifiers.meta.RandomSubSpace",
396:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
397:       "weka.core.ListOptions",
398:       "weka.classifiers.meta.AdaBoostM1",
399:       "weka.classifiers.lazy.KStar",
400:       "weka.estimators.MahalanobisEstimator",
401:       "weka.core.ClassCache",
402:       "weka.core.AllJavadoc",
403:       "weka.core.TechnicalInformationHandlerJavadoc",
404:       "weka.experiment.Stats",
405:       "weka.core.ManhattanDistance"
406:     );
407:   }
408: }

[MASTER] 23:50:31.676 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.getCapabilities();
linkedHashMap0.entrySet();
naiveBayesMultinomialText0.setLowercaseTokens(true);
double[] doubleArray0 = new double[16];
doubleArray0[0] = 0.0;
Locale.getISOLanguages();
doubleArray0[1] = 2271.8608890835;
naiveBayesMultinomialText0.getLowercaseTokens();
SparseInstance sparseInstance0 = new SparseInstance(2271.8608890835, doubleArray0);
assertEquals(16, sparseInstance0.numAttributes());


[MASTER] 23:50:37.001 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 23:50:37.091 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/mosa/tests/s1005/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 9%
* Compiling and checking tests
[MASTER] 23:53:00.663 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 23:53:00.758 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 23:53:00.971 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 23:53:00.971 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 23:53:02.469 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 23:53:02.647 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/mosa/tests/s1005/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14214
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 23:54:12.697 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:54:12.730 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:54:12.742 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 23:54:14.579 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 23:54:15.094 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 23:54:15.123 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2767
* Using seed 1005
* Starting evolution
[MASTER] 23:55:10.939 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.getMinNo()D:Negative
* Search finished after 254s and 262 generations, 110538 statements, best individual has fitness: 12608.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 36%
* Total number of goals: 705
* Number of covered goals: 252
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 109
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 56%
* Total number of goals: 993
* Number of covered goals: 553
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 31%
* Total number of goals: 93
* Number of covered goals: 29
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 416
* Number of covered goals: 109
* Generated 68 tests with total length 498
* Resulting test suite's coverage: 43% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 23%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/mosa/tests/s1005/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14216
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14215
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 00:17:30.424 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 00:17:30.452 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 00:17:30.461 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 00:17:30.752 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 00:17:30.756 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 00:17:30.758 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Total number of test goals for MOSA: 1729
* Using seed 1005
* Starting evolution
[MASTER] 00:17:33.240 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 00:17:33.280 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 00:17:33.281 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 00:17:33.422 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2699
* Using seed 1005
* Starting evolution
[MASTER] 00:19:52.721 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 00:20:38.432 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 261s and 369 generations, 133079 statements, best individual has fitness: 4280.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 72%
* Total number of goals: 370
* Number of covered goals: 266
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 60%
* Total number of goals: 242
* Number of covered goals: 146
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 28
* Number of covered goals: 28
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 71%
* Total number of goals: 713
* Number of covered goals: 509
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 56%
* Total number of goals: 72
* Number of covered goals: 40
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 60%
* Total number of goals: 242
* Number of covered goals: 146
* Generated 80 tests with total length 508
* Resulting test suite's coverage: 70% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 320s and 49 generations, 30889 statements, best individual has fitness: 2056.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 647
* Number of covered goals: 635
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 95%
* Total number of goals: 441
* Number of covered goals: 421
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 678
* Number of covered goals: 616
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 45%
* Total number of goals: 244
* Number of covered goals: 111
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 124
* Number of covered goals: 124
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 124
* Number of covered goals: 124
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 94%
* Total number of goals: 441
* Number of covered goals: 413
* Generated 221 tests with total length 1866
* Resulting test suite's coverage: 91% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 31%
* Compiling and checking tests
[MASTER] 00:25:11.385 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 00:25:12.335 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 00:25:38.095 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 00:25:38.096 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Attribute attribute0 = new Attribute("");
arrayList0.add(attribute0);
Instances instances0 = new Instances("@end", arrayList0, 3);
discretize0.setInputFormat(instances0);
Attribute attribute1 = new Attribute("0q,9ef", instances0);
arrayList0.add(attribute1);
Instances instances1 = new Instances("QudbVf O?G'./^5)", arrayList0, 1);
discretize0.setInputFormat(instances0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/mosa/tests/s1005/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 00:28:30.983 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6683041666666667% of time used, but only 89/221 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 23%
* Compiling and checking tests
[MASTER] 00:29:56.279 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/mosa/tests/s1005/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.Optimization
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14212
* Connecting to master process on port 14213
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1367
* Using seed 1005
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 00:46:40.213 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 00:46:40.219 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 00:46:40.219 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 00:46:40.252 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2499
* Using seed 1005
* Starting evolution
[MASTER] 00:46:44.237 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Search finished after 250s and 128 generations, 88744 statements, best individual has fitness: 16712.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 19 tests with total length 84
* Resulting test suite's coverage: 16% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/mosa/tests/s1005/107_weka/evosuite-tests
* Done!

* Computation finished
* Search finished after 293s and 243 generations, 112227 statements, best individual has fitness: 2664.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 217
* Number of covered goals: 191
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 68%
* Total number of goals: 428
* Number of covered goals: 290
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 240
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 68%
* Total number of goals: 428
* Number of covered goals: 289
* Generated 71 tests with total length 215
* Resulting test suite's coverage: 76% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 77%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/mosa/tests/s1005/107_weka/evosuite-tests
* Done!

* Computation finished
