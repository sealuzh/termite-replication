* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 12626
* Connecting to master process on port 12630
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 13:23:56.173 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:23:56.213 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:23:56.213 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 13:23:56.290 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2699
* Using seed 1015
* Starting evolution
[MASTER] 13:24:02.125 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 194
[MASTER] 13:24:02.134 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 70
[MASTER] 13:24:02.134 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 73
[MASTER] 13:24:02.134 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 76
[MASTER] 13:24:02.134 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 79
[MASTER] 13:24:02.134 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 82
[MASTER] 13:24:02.134 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 85
[MASTER] 13:24:02.134 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 88
[MASTER] 13:24:02.134 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 91
[MASTER] 13:24:02.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 94
[MASTER] 13:24:02.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 97
[MASTER] 13:24:02.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 100
[MASTER] 13:24:02.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 103
[MASTER] 13:24:02.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 106
[MASTER] 13:24:02.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 152
[MASTER] 13:24:02.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 155
[MASTER] 13:24:02.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 158
[MASTER] 13:24:02.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 161
[MASTER] 13:24:02.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 164
[MASTER] 13:24:02.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 167
[MASTER] 13:24:02.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 170
[MASTER] 13:24:02.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 173
[MASTER] 13:24:02.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 176
[MASTER] 13:24:02.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 179
[MASTER] 13:24:02.135 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(II)V: Line 195
[MASTER] 13:24:02.139 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 70
[MASTER] 13:24:02.139 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 73
[MASTER] 13:24:02.139 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 76
[MASTER] 13:24:02.139 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 79
[MASTER] 13:24:02.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 82
[MASTER] 13:24:02.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 85
[MASTER] 13:24:02.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 88
[MASTER] 13:24:02.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 91
[MASTER] 13:24:02.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 94
[MASTER] 13:24:02.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 97
[MASTER] 13:24:02.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 100
[MASTER] 13:24:02.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 103
[MASTER] 13:24:02.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 106
[MASTER] 13:24:02.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 152
[MASTER] 13:24:02.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 155
[MASTER] 13:24:02.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 158
[MASTER] 13:24:02.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 161
[MASTER] 13:24:02.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 164
[MASTER] 13:24:02.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 167
[MASTER] 13:24:02.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 170
[MASTER] 13:24:02.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 173
[MASTER] 13:24:02.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 176
[MASTER] 13:24:02.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.<init>(Lweka/experiment/ResultMatrix;)V: Line 179
[MASTER] 13:24:02.153 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setSize(II)V: Line 566
[MASTER] 13:24:02.153 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setSize(II)V: Line 567
[MASTER] 13:24:02.153 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setSize(II)V: Line 568
[MASTER] 13:24:02.153 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setSize(II)V: Line 569
[MASTER] 13:24:02.153 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setSize(II)V: Line 570
[MASTER] 13:24:02.153 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setSize(II)V: Line 571
[MASTER] 13:24:02.153 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setSize(II)V: Line 572
[MASTER] 13:24:02.153 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setSize(II)V: Line 573
[MASTER] 13:24:02.153 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setSize(II)V: Line 574
[MASTER] 13:24:02.153 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setSize(II)V: Line 575
[MASTER] 13:24:02.154 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setSize(II)V: Line 578
[MASTER] 13:24:02.154 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setSize(II)V: Line 579
[MASTER] 13:24:02.154 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.experiment.ResultMatrix.setSize(II)V: Line 580
[MASTER] 13:24:02.235 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 485: weka.experiment.ResultMatrix.setSize(II)V:578 - ReplaceConstant - 0 -> 1
[MASTER] 13:24:02.235 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 503: weka.experiment.ResultMatrix.setSize(II)V:578 - ReplaceComparisonOperator >= -> -1
[MASTER] 13:24:02.236 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 506: weka.experiment.ResultMatrix.setSize(II)V:579 - ReplaceConstant - 0 -> 1
[MASTER] 13:24:02.236 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 542: weka.experiment.ResultMatrix.setSize(II)V:579 - ReplaceComparisonOperator >= -> -1
[MASTER] 13:24:02.236 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 543: weka.experiment.ResultMatrix.setSize(II)V:579 - ReplaceComparisonOperator >= -> >
[MASTER] 13:24:02.236 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 580: weka.experiment.ResultMatrix.setSize(II)V:580 - ReplaceConstant - NaN -> 0.0
[MASTER] 13:24:02.236 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 581: weka.experiment.ResultMatrix.setSize(II)V:580 - ReplaceConstant - NaN -> 1.0
[MASTER] 13:24:02.236 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 582: weka.experiment.ResultMatrix.setSize(II)V:580 - ReplaceConstant - NaN -> -1.0
[MASTER] 13:24:02.236 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 583: weka.experiment.ResultMatrix.setSize(II)V:580 - ReplaceConstant - NaN -> NaN
[MASTER] 13:24:02.273 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.experiment.ResultMatrix.setMeanPrec(I)V
[MASTER] 13:24:02.274 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.experiment.ResultMatrix.setStdDevPrec(I)V
[MASTER] 13:24:02.307 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.experiment.ResultMatrix.stdDevPrecTipText()Ljava/lang/String;
[MASTER] 13:24:02.314 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.experiment.ResultMatrix.setStdDevWidth(I)V
[MASTER] 13:24:02.323 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.experiment.ResultMatrix.setShowAverage(Z)V
[MASTER] 13:24:02.323 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.experiment.ResultMatrix.getDefaultShowAverage()Z
[MASTER] 13:24:02.324 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.experiment.ResultMatrix.setPrintRowNames(Z)V
[MASTER] 13:24:02.325 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.experiment.ResultMatrix.getDefaultEnumerateColNames()Z
[MASTER] 13:24:02.325 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.experiment.ResultMatrix.getDefaultEnumerateRowNames()Z
[MASTER] 13:24:02.353 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.experiment.ResultMatrix.trimString(Ljava/lang/String;I)Ljava/lang/String;
[MASTER] 13:24:02.353 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.experiment.ResultMatrix.padString(Ljava/lang/String;I)Ljava/lang/String;
[MASTER] 13:24:02.353 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.experiment.ResultMatrix.isRowName(I)Z
[MASTER] 13:24:02.391 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.experiment.ResultMatrix.setRanking([[I)V
[MASTER] 13:24:02.393 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.experiment.ResultMatrix.setMeanPrec(I)V
[MASTER] 13:24:02.393 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.experiment.ResultMatrix.setStdDevPrec(I)V
[MASTER] 13:24:02.394 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.experiment.ResultMatrix.stdDevPrecTipText()Ljava/lang/String;
[MASTER] 13:24:02.395 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.experiment.ResultMatrix.setStdDevWidth(I)V
[MASTER] 13:24:02.413 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.experiment.ResultMatrix.setShowAverage(Z)V
[MASTER] 13:24:02.414 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.experiment.ResultMatrix.getDefaultShowAverage()Z
[MASTER] 13:24:02.415 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.experiment.ResultMatrix.setPrintRowNames(Z)V
[MASTER] 13:24:02.416 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.experiment.ResultMatrix.getDefaultEnumerateColNames()Z
[MASTER] 13:24:02.433 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.experiment.ResultMatrix.getDefaultEnumerateRowNames()Z
[MASTER] 13:24:02.454 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.experiment.ResultMatrix.trimString(Ljava/lang/String;I)Ljava/lang/String;
[MASTER] 13:24:02.454 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.experiment.ResultMatrix.padString(Ljava/lang/String;I)Ljava/lang/String;
[MASTER] 13:24:02.455 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.experiment.ResultMatrix.isRowName(I)Z
[MASTER] 13:24:02.496 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.experiment.ResultMatrix.setRanking([[I)V
[MASTER] 13:24:02.532 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.experiment.ResultMatrix.<init>(II)V: root-Branch in context: weka.experiment.ResultMatrix:<init>(II)V
[MASTER] 13:24:05.592 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.experiment.ResultMatrix.getStdDevWidth()I
[MASTER] 13:24:05.592 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.experiment.ResultMatrix.isAverage(I)Z
[MASTER] 13:24:05.593 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;
[MASTER] 13:24:05.593 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.experiment.ResultMatrix.getStdDevWidth()I
[MASTER] 13:24:05.593 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.experiment.ResultMatrix.isAverage(I)Z
[MASTER] 13:24:05.593 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.experiment.ResultMatrix.getOptions()[Ljava/lang/String;
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 13:24:21.282 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:24:21.288 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:24:21.296 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 13:24:22.041 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 13:24:23.357 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 13:24:23.359 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 13:24:26.321 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 13:24:26.372 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 13:24:26.373 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 13:24:26.373 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 13:24:26.374 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 13:24:26.375 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 13:24:26.375 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 13:24:26.377 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 13:24:26.378 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 13:24:26.485 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 13:24:26.508 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 3904
* Using seed 1015
* Starting evolution
[MASTER] 13:24:37.224 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 13:24:44.224 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: Line 1614
[MASTER] 13:24:44.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: I6 Branch 166 IFEQ L1574 - true
[MASTER] 13:24:44.227 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 856: weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;:1574 - ReplaceComparisonOperator == -> -2
[MASTER] 13:24:44.228 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;:Null
[MASTER] 13:24:44.229 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;
[MASTER] 13:24:44.229 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: I6 Branch 166 IFEQ L1574 - true in context: 
[MASTER] 13:25:44.082 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.precision(I)D
[MASTER] 13:25:44.084 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.precision(I)D
[MASTER] 13:25:51.082 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 13:26:22.651 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 296s and 49 generations, 31586 statements, best individual has fitness: 2352.0
* Search finished after 274s and 118 generations, 52377 statements, best individual has fitness: 13840.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 96%
* Total number of goals: 647
* Number of covered goals: 620
* Coverage analysis for criterion BRANCH
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion BRANCH: 94%
* Total number of goals: 441
* Number of covered goals: 413
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 678
* Number of covered goals: 619
* Coverage analysis for criterion OUTPUT
* Coverage of criterion LINE: 63%
* Total number of goals: 1378
* Number of covered goals: 870
* Coverage analysis for criterion BRANCH
* Coverage of criterion OUTPUT: 46%
* Total number of goals: 244
* Number of covered goals: 112
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 124
* Number of covered goals: 124
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion BRANCH: 48%
* Total number of goals: 809
* Number of covered goals: 390
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 124
* Number of covered goals: 124
* Coverage analysis for criterion CBRANCH
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 75
* Number of covered goals: 75
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion CBRANCH: 90%
* Total number of goals: 441
* Number of covered goals: 395
* Coverage of criterion WEAKMUTATION: 69%
* Total number of goals: 424
* Number of covered goals: 291
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 24%
* Total number of goals: 278
* Number of covered goals: 68
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 97%
* Total number of goals: 103
* Number of covered goals: 100
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 45%
* Total number of goals: 809
* Number of covered goals: 366
* Generated 211 tests with total length 1772
* Resulting test suite's coverage: 89% (average coverage for all fitness functions)
* Generating assertions
* Generated 157 tests with total length 1443
* Resulting test suite's coverage: 57% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 13:34:59.082 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.71935% of time used, but only 86/211 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 19%
* Compiling and checking tests
* Resulting test suite's mutation score: 10%
* Compiling and checking tests
[MASTER] 13:35:55.509 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 13:35:55.906 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 13:35:55.906 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 13:35:57.704 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 13:35:57.718 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 13:35:58.168 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
[MASTER] 13:36:25.022 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/mosa/tests/s1015/107_weka/evosuite-tests
* Done!

* Computation finished
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/mosa/tests/s1015/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.Optimization
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 12624
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 12623
* Connecting to master process on port 12627
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 12629
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1367
* Using seed 1015
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 13:37:02.019 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 13:37:02.019 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 13:37:02.020 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 13:37:02.097 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:37:02.127 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:37:02.130 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 13:37:05.891 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:37:05.914 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:37:05.915 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 13:37:09.817 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Total number of test goals for MOSA: 1412
* Using seed 1015
* Starting evolution
[MASTER] 13:37:10.789 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 13:37:10.790 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Total number of test goals for MOSA: 2767
* Using seed 1015
* Starting evolution
[MASTER] 13:37:14.033 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:37:14.038 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:37:14.044 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 13:37:14.050 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2499
* Using seed 1015
* Starting evolution
[MASTER] 13:37:16.539 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V: Line 657
[MASTER] 13:37:16.540 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V: Line 658
[MASTER] 13:37:16.544 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 270: weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V:657 - InsertUnaryOp Negation of p
[MASTER] 13:37:16.544 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 271: weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V:657 - InsertUnaryOp IINC 1 p
[MASTER] 13:37:16.544 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 272: weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V:657 - InsertUnaryOp IINC -1 p
[MASTER] 13:37:16.546 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.distributionForInstance(Lweka/core/Instance;)[D
[MASTER] 13:37:16.546 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V
[MASTER] 13:37:16.546 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D
[MASTER] 13:37:16.546 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V
[MASTER] 13:37:16.546 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setNorm(D)V
[MASTER] 13:37:16.547 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.listOptions()Ljava/util/Enumeration;
[MASTER] 13:37:16.547 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.distributionForInstance(Lweka/core/Instance;)[D
[MASTER] 13:37:16.548 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V
[MASTER] 13:37:16.548 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D
[MASTER] 13:37:16.549 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V
[MASTER] 13:37:16.549 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setNorm(D)V
[MASTER] 13:37:16.549 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.listOptions()Ljava/util/Enumeration;
[MASTER] 13:37:16.549 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getMinWordFrequency()D
[MASTER] 13:37:16.549 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setPeriodicPruning(I)V
[MASTER] 13:37:16.549 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setNormalizeDocLength(Z)V
[MASTER] 13:37:19.419 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 13:37:34.763 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 13:37:52.608 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 264: weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z:635 - ReplaceVariable m_lowercaseTokens -> m_normalize
[MASTER] 13:38:08.518 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 13:38:16.871 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 13:38:16.871 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 13:39:47.504 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 261s and 315 generations, 126331 statements, best individual has fitness: 1688.0
* Search finished after 256s and 128 generations, 77941 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 89%
* Total number of goals: 338
* Number of covered goals: 300
* Coverage analysis for criterion BRANCH
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion BRANCH: 83%
* Total number of goals: 194
* Number of covered goals: 161
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 89%
* Total number of goals: 476
* Number of covered goals: 425
* Coverage analysis for criterion OUTPUT
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 112
* Number of covered goals: 61
* Coverage analysis for criterion METHOD
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 81%
* Total number of goals: 194
* Number of covered goals: 158
* Generated 21 tests with total length 123
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Generated 74 tests with total length 554
* Resulting test suite's coverage: 85% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
* Search finished after 284s and 243 generations, 88455 statements, best individual has fitness: 2912.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 217
* Number of covered goals: 189
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 281
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 88%
* Total number of goals: 260
* Number of covered goals: 228
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 66%
* Total number of goals: 428
* Number of covered goals: 281
* Generated 83 tests with total length 207
* Resulting test suite's coverage: 73% (average coverage for all fitness functions)
* Generating assertions
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/mosa/tests/s1015/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 76%
* Compiling and checking tests
* Search finished after 310s and 262 generations, 107890 statements, best individual has fitness: 13144.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 34%
* Total number of goals: 705
* Number of covered goals: 238
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 25%
* Total number of goals: 416
* Number of covered goals: 106
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 51%
* Total number of goals: 993
* Number of covered goals: 508
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 29%
* Total number of goals: 93
* Number of covered goals: 27
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 25%
* Total number of goals: 416
* Number of covered goals: 106
* Generated 72 tests with total length 489
* Resulting test suite's coverage: 41% (average coverage for all fitness functions)
* Generating assertions
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/mosa/tests/s1015/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 23%
* Compiling and checking tests
[MASTER] 13:43:41.330 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 13:43:42.192 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/mosa/tests/s1015/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 54%
* Compiling and checking tests
[MASTER] 13:46:07.040 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_18_1573739166989/weka/classifiers/bayes/NaiveBayesMultinomialText_18_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_18_1573739166989/weka/classifiers/bayes/NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding.java]]
[MASTER] 13:46:07.056 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 13:46:07.056 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 13:46:07.060 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 13:46:07.060 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 13:46:07.061 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_18_1573739166989/weka/classifiers/bayes/NaiveBayesMultinomialText_18_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Nov 14 13:46:06 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: import weka.classifiers.functions.SGDText;
16: import weka.core.stemmers.Stemmer;
17: import weka.core.tokenizers.NGramTokenizer;
18: import weka.core.tokenizers.Tokenizer;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_18_tmp__ESTest extends NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=3.3583728781904854
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
31:       naiveBayesMultinomialText0.setUseStopList(false);
32:       NGramTokenizer nGramTokenizer0 = new NGramTokenizer();
33:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
34:       String string0 = naiveBayesMultinomialText1.normalizeDocLengthTipText();
35:       assertEquals("If true then document length is normalized according to the settings for norm and lnorm", string0);
36:       
37:       SGDText sGDText0 = new SGDText();
38:       Tokenizer.runTokenizer(nGramTokenizer0, stringArray0);
39:       naiveBayesMultinomialText0.setTokenizer(nGramTokenizer0);
40:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
41:       String string1 = naiveBayesMultinomialText1.minWordFrequencyTipText();
42:       assertEquals("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value", string1);
43:       
44:       naiveBayesMultinomialText0.setOptions(stringArray0);
45:       boolean boolean0 = naiveBayesMultinomialText0.getNormalizeDocLength();
46:       assertFalse(naiveBayesMultinomialText0.getUseStopList());
47:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
48:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
49:       assertFalse(naiveBayesMultinomialText0.getLowercaseTokens());
50:       assertFalse(boolean0);
51:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
52:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
53:       
54:       Stemmer stemmer0 = naiveBayesMultinomialText1.getStemmer();
55:       naiveBayesMultinomialText1.setStemmer(stemmer0);
56:       assertEquals(0, naiveBayesMultinomialText1.getPeriodicPruning());
57:   }
58: }
RegularFileObject[/tmp/EvoSuite_18_1573739166989/weka/classifiers/bayes/NaiveBayesMultinomialText_18_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Nov 14 13:46:06 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:     org.evosuite.runtime.util.SystemInUtil.getInstance().initForTestCase(); 
60:   } 
61: 
62:   @After 
63:   public void doneWithTestCase(){ 
64:     threadStopper.killAndJoinClientThreads();
65:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
66:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
67:     resetClasses(); 
68:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
69:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
70:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
71:   } 
72: 
73:   public static void setSystemProperties() {
74:  
75:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
76:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
77:     java.lang.System.setProperty("java.awt.headless", "true"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:     java.lang.System.setProperty("user.country", "US"); 
80:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
81:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
82:     java.lang.System.setProperty("user.language", "en"); 
83:     java.lang.System.setProperty("user.name", "ubuntu"); 
84:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
85:   }
86: 
87:   private static void initializeClasses() {
88:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding.class.getClassLoader() ,
89:       "weka.core.Environment",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "weka.classifiers.AbstractClassifier",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.OptionHandler",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.core.WekaException",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.scripting.JythonSerializableObject",
100:       "weka.classifiers.Classifier",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.Capabilities$Capability",
103:       "weka.core.SparseInstance",
104:       "weka.core.DenseInstance",
105:       "org.pentaho.packageManagement.PackageManager",
106:       "weka.estimators.PoissonEstimator",
107:       "weka.core.stemmers.Stemmer",
108:       "weka.classifiers.functions.SimpleLinearRegression",
109:       "weka.core.tokenizers.WordTokenizer",
110:       "weka.classifiers.misc.SerializedClassifier",
111:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
112:       "org.pentaho.packageManagement.DefaultPackageManager",
113:       "weka.core.stemmers.SnowballStemmer",
114:       "weka.core.stemmers.LovinsStemmer",
115:       "weka.classifiers.Evaluation",
116:       "weka.classifiers.functions.supportVector.Kernel",
117:       "weka.core.WekaPackageManager",
118:       "org.bounce.net.DefaultAuthenticator",
119:       "weka.core.TechnicalInformationHandler",
120:       "weka.estimators.IncrementalEstimator",
121:       "weka.estimators.Estimator$Builder",
122:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
123:       "weka.core.Option",
124:       "weka.core.stemmers.NullStemmer",
125:       "weka.classifiers.functions.SGDText",
126:       "weka.core.Utils",
127:       "weka.core.tokenizers.Tokenizer",
128:       "weka.core.Attribute",
129:       "weka.core.NoSupportForMissingValuesException",
130:       "weka.core.Stopwords",
131:       "weka.classifiers.UpdateableClassifier",
132:       "weka.core.tokenizers.AlphabeticTokenizer",
133:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
134:       "weka.core.TechnicalInformation$Type",
135:       "weka.core.FastVector",
136:       "weka.core.MultiInstanceCapabilitiesHandler",
137:       "weka.core.Copyable",
138:       "weka.core.Capabilities",
139:       "weka.core.BinarySparseInstance",
140:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
141:       "weka.core.tokenizers.NGramTokenizer",
142:       "weka.core.UnassignedDatasetException",
143:       "weka.classifiers.RandomizableClassifier",
144:       "weka.core.SerializedObject",
145:       "weka.clusterers.UpdateableClusterer",
146:       "weka.core.Summarizable",
147:       "weka.core.RevisionUtils",
148:       "weka.core.neighboursearch.balltrees.BallNode",
149:       "org.pentaho.packageManagement.PackageManager$1",
150:       "weka.core.Instance",
151:       "weka.estimators.Estimator",
152:       "weka.core.Drawable",
153:       "weka.core.ProtectedProperties",
154:       "weka.core.matrix.Matrix",
155:       "weka.core.AttributeStats",
156:       "weka.core.WeightedInstancesHandler",
157:       "weka.core.CapabilitiesHandler",
158:       "weka.core.TechnicalInformation$Field",
159:       "weka.core.Randomizable",
160:       "weka.core.AbstractInstance",
161:       "weka.core.Instances",
162:       "weka.core.scripting.JythonObject",
163:       "weka.core.SelectedTag",
164:       "org.pentaho.packageManagement.DefaultPackage",
165:       "weka.core.UnassignedClassException",
166:       "weka.core.Version",
167:       "weka.core.TechnicalInformation",
168:       "weka.core.UnsupportedAttributeTypeException",
169:       "weka.classifiers.Sourcable",
170:       "weka.core.RevisionHandler",
171:       "weka.classifiers.evaluation.output.prediction.PlainText",
172:       "weka.core.xml.XMLSerialization",
173:       "weka.classifiers.xml.XMLClassifier",
174:       "weka.core.Tag"
175:     );
176:   } 
177: 
178:   private static void resetClasses() {
179:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding.class.getClassLoader()); 
180: 
181:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
182:       "weka.classifiers.AbstractClassifier",
183:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
184:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
185:       "weka.core.Capabilities$Capability",
186:       "weka.core.tokenizers.Tokenizer",
187:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
188:       "weka.core.tokenizers.WordTokenizer",
189:       "weka.core.stemmers.NullStemmer",
190:       "weka.classifiers.Evaluation",
191:       "weka.core.Utils",
192:       "weka.core.Option",
193:       "weka.core.AbstractInstance",
194:       "weka.core.SparseInstance",
195:       "weka.classifiers.functions.supportVector.Kernel",
196:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
197:       "weka.core.BinarySparseInstance",
198:       "weka.core.UnassignedDatasetException",
199:       "weka.core.RevisionUtils",
200:       "weka.core.neighboursearch.NearestNeighbourSearch",
201:       "weka.core.neighboursearch.CoverTree",
202:       "weka.core.NormalizableDistance",
203:       "weka.core.EuclideanDistance",
204:       "weka.core.Range",
205:       "weka.core.Capabilities",
206:       "org.pentaho.packageManagement.PackageManager",
207:       "org.pentaho.packageManagement.DefaultPackageManager",
208:       "weka.core.Version",
209:       "weka.core.Environment",
210:       "weka.core.WekaPackageManager",
211:       "weka.core.neighboursearch.BallTree",
212:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
213:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
214:       "weka.core.neighboursearch.balltrees.BallSplitter",
215:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
216:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
217:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
218:       "weka.attributeSelection.ASEvaluation",
219:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
220:       "weka.attributeSelection.PrincipalComponents",
221:       "weka.classifiers.RandomizableClassifier",
222:       "weka.core.Tag",
223:       "weka.classifiers.functions.SGDText",
224:       "weka.classifiers.misc.SerializedClassifier",
225:       "weka.filters.Filter",
226:       "weka.filters.supervised.attribute.Discretize",
227:       "weka.classifiers.functions.SMO",
228:       "weka.classifiers.functions.supportVector.CachedKernel",
229:       "weka.classifiers.functions.supportVector.PolyKernel",
230:       "weka.core.SerializedObject",
231:       "weka.core.Instances",
232:       "weka.core.tokenizers.NGramTokenizer",
233:       "weka.classifiers.SingleClassifierEnhancer",
234:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
235:       "weka.classifiers.meta.CostSensitiveClassifier",
236:       "weka.classifiers.rules.ZeroR",
237:       "weka.classifiers.CostMatrix",
238:       "weka.core.stemmers.SnowballStemmer",
239:       "weka.core.DenseInstance",
240:       "weka.core.neighboursearch.balltrees.BallNode",
241:       "weka.core.TestInstances",
242:       "weka.core.Attribute",
243:       "weka.core.ProtectedProperties",
244:       "weka.core.tokenizers.AlphabeticTokenizer",
245:       "weka.core.neighboursearch.LinearNNSearch",
246:       "weka.core.stemmers.LovinsStemmer",
247:       "weka.core.stemmers.IteratedLovinsStemmer",
248:       "weka.classifiers.misc.InputMappedClassifier",
249:       "weka.core.converters.ArffLoader$ArffReader",
250:       "weka.core.Stopwords",
251:       "weka.classifiers.bayes.BayesNet",
252:       "weka.classifiers.bayes.net.BIFReader",
253:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
254:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
255:       "weka.classifiers.bayes.net.search.local.K2",
256:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
257:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
258:       "weka.classifiers.lazy.IBk",
259:       "weka.classifiers.MultipleClassifiersCombiner",
260:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
261:       "weka.classifiers.meta.Vote",
262:       "weka.classifiers.functions.VotedPerceptron",
263:       "weka.classifiers.bayes.NaiveBayesMultinomial",
264:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
265:       "weka.attributeSelection.OneRAttributeEval",
266:       "weka.classifiers.rules.DecisionTable",
267:       "weka.attributeSelection.ASSearch",
268:       "weka.attributeSelection.BestFirst",
269:       "weka.classifiers.trees.J48",
270:       "weka.classifiers.trees.RandomForest",
271:       "weka.classifiers.trees.RandomTree",
272:       "weka.core.FindWithCapabilities",
273:       "weka.core.SingleIndex",
274:       "weka.attributeSelection.AttributeSelection",
275:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
276:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
277:       "weka.classifiers.trees.m5.M5Base",
278:       "weka.classifiers.rules.M5Rules",
279:       "weka.classifiers.functions.LinearRegression",
280:       "weka.core.neighboursearch.KDTree",
281:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
282:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
283:       "weka.classifiers.bayes.NaiveBayes",
284:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
285:       "weka.filters.AllFilter",
286:       "weka.classifiers.meta.FilteredClassifier",
287:       "weka.filters.supervised.attribute.AttributeSelection",
288:       "weka.attributeSelection.CfsSubsetEval",
289:       "weka.attributeSelection.GreedyStepwise",
290:       "weka.classifiers.rules.PART",
291:       "weka.core.stemmers.Stemming",
292:       "weka.core.SelectedTag",
293:       "weka.core.WekaEnumeration",
294:       "weka.core.Attribute$1",
295:       "weka.core.MinkowskiDistance",
296:       "weka.core.TechnicalInformation",
297:       "weka.core.TechnicalInformation$Type",
298:       "weka.core.TechnicalInformation$Field",
299:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
300:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
301:       "weka.classifiers.meta.Stacking",
302:       "weka.classifiers.trees.LMT",
303:       "weka.classifiers.functions.GaussianProcesses",
304:       "weka.core.Check",
305:       "weka.core.CheckGOE",
306:       "weka.classifiers.trees.j48.ClassifierTree",
307:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
308:       "weka.classifiers.functions.SGD",
309:       "weka.filters.SimpleFilter",
310:       "weka.filters.SimpleStreamFilter",
311:       "weka.filters.MultiFilter",
312:       "weka.core.ClassDiscovery",
313:       "weka.classifiers.IteratedSingleClassifierEnhancer",
314:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
315:       "weka.classifiers.meta.AdaBoostM1",
316:       "weka.classifiers.trees.DecisionStump",
317:       "weka.classifiers.lazy.KStar",
318:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
319:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
320:       "weka.classifiers.meta.RandomCommittee",
321:       "weka.classifiers.meta.AttributeSelectedClassifier",
322:       "weka.attributeSelection.GainRatioAttributeEval",
323:       "weka.classifiers.meta.CVParameterSelection",
324:       "weka.core.FastVector",
325:       "weka.core.WekaException",
326:       "weka.core.UnsupportedAttributeTypeException",
327:       "weka.classifiers.bayes.NaiveBayesUpdateable",
328:       "weka.classifiers.meta.ClassificationViaRegression",
329:       "weka.classifiers.trees.M5P",
330:       "weka.estimators.Estimator",
331:       "weka.estimators.KernelEstimator",
332:       "weka.core.UnassignedClassException",
333:       "weka.classifiers.functions.SimpleLinearRegression",
334:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
335:       "weka.classifiers.rules.JRip",
336:       "weka.classifiers.meta.AdditiveRegression",
337:       "weka.classifiers.functions.supportVector.Puk",
338:       "weka.classifiers.rules.part.MakeDecList",
339:       "weka.estimators.NormalEstimator",
340:       "weka.attributeSelection.ReliefFAttributeEval",
341:       "weka.classifiers.meta.MultiClassClassifier",
342:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
343:       "weka.classifiers.functions.Logistic",
344:       "weka.estimators.PoissonEstimator",
345:       "weka.classifiers.meta.RegressionByDiscretization",
346:       "weka.filters.unsupervised.attribute.Discretize",
347:       "weka.classifiers.meta.RandomSubSpace",
348:       "weka.classifiers.trees.REPTree",
349:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
350:       "weka.estimators.DiscreteEstimator",
351:       "weka.attributeSelection.InfoGainAttributeEval",
352:       "weka.attributeSelection.CorrelationAttributeEval",
353:       "weka.classifiers.lazy.LWL",
354:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
355:       "weka.classifiers.functions.supportVector.RBFKernel",
356:       "weka.classifiers.functions.SMOreg",
357:       "weka.classifiers.functions.supportVector.RegOptimizer",
358:       "weka.classifiers.functions.supportVector.RegSMO",
359:       "weka.classifiers.functions.supportVector.RegSMOImproved",
360:       "weka.classifiers.meta.Bagging",
361:       "weka.classifiers.meta.LogitBoost",
362:       "weka.classifiers.functions.SimpleLogistic",
363:       "weka.classifiers.functions.MultilayerPerceptron",
364:       "weka.filters.unsupervised.attribute.NominalToBinary",
365:       "weka.classifiers.functions.neural.SigmoidUnit",
366:       "weka.classifiers.functions.neural.LinearUnit",
367:       "weka.core.AttributeStats",
368:       "weka.core.SerializationHelper",
369:       "weka.classifiers.rules.OneR",
370:       "weka.attributeSelection.WrapperSubsetEval",
371:       "weka.core.matrix.Matrix",
372:       "weka.estimators.MahalanobisEstimator",
373:       "weka.classifiers.functions.supportVector.StringKernel",
374:       "weka.classifiers.meta.MultiScheme",
375:       "weka.core.converters.ConverterUtils$DataSource",
376:       "weka.core.converters.AbstractLoader",
377:       "weka.core.converters.AbstractFileLoader",
378:       "weka.core.converters.ArffLoader",
379:       "weka.classifiers.functions.neural.NeuralConnection",
380:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
381:       "weka.classifiers.bayes.net.ParentSet",
382:       "weka.estimators.UnivariateEqualFrequencyHistogramEstimator",
383:       "weka.core.neighboursearch.PerformanceStats"
384:     );
385:   }
386: }

[MASTER] 13:46:07.062 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.setUseStopList(false);
NGramTokenizer nGramTokenizer0 = new NGramTokenizer();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
String string0 = naiveBayesMultinomialText1.normalizeDocLengthTipText();
assertEquals("If true then document length is normalized according to the settings for norm and lnorm", string0);

SGDText sGDText0 = new SGDText();
Tokenizer.runTokenizer(nGramTokenizer0, stringArray0);
naiveBayesMultinomialText0.setTokenizer(nGramTokenizer0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
String string1 = naiveBayesMultinomialText1.minWordFrequencyTipText();
assertEquals("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value", string1);

naiveBayesMultinomialText0.setOptions(stringArray0);
boolean boolean0 = naiveBayesMultinomialText0.getNormalizeDocLength();
assertFalse(naiveBayesMultinomialText0.getUseStopList());
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getLowercaseTokens());
assertFalse(boolean0);
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());

Stemmer stemmer0 = naiveBayesMultinomialText1.getStemmer();
naiveBayesMultinomialText1.setStemmer(stemmer0);
assertEquals(0, naiveBayesMultinomialText1.getPeriodicPruning());


[MASTER] 13:46:07.665 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_35_1573739167636/weka/classifiers/bayes/NaiveBayesMultinomialText_35_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_35_1573739167636/weka/classifiers/bayes/NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding.java]]
[MASTER] 13:46:07.665 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 13:46:07.665 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 13:46:07.665 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 13:46:07.665 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 13:46:07.666 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_35_1573739167636/weka/classifiers/bayes/NaiveBayesMultinomialText_35_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Nov 14 13:46:07 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.tokenizers.NGramTokenizer;
17: import weka.core.tokenizers.Tokenizer;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_35_tmp__ESTest extends NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=2.1341286000959614
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       NGramTokenizer nGramTokenizer0 = new NGramTokenizer();
30:       String[] stringArray0 = new String[2];
31:       stringArray0[0] = "-M";
32:       stringArray0[1] = "-M";
33:       Tokenizer.runTokenizer(nGramTokenizer0, stringArray0);
34:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
35:       naiveBayesMultinomialText1.setTokenizer(nGramTokenizer0);
36:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
37:       naiveBayesMultinomialText0.minWordFrequencyTipText();
38:       try { 
39:         naiveBayesMultinomialText0.setOptions(stringArray0);
40:         fail("Expecting exception: NumberFormatException");
41:       
42:       } catch(NumberFormatException e) {
43:       }
44:   }
45: }
RegularFileObject[/tmp/EvoSuite_35_1573739167636/weka/classifiers/bayes/NaiveBayesMultinomialText_35_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Nov 14 13:46:07 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:     org.evosuite.runtime.util.SystemInUtil.getInstance().initForTestCase(); 
60:   } 
61: 
62:   @After 
63:   public void doneWithTestCase(){ 
64:     threadStopper.killAndJoinClientThreads();
65:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
66:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
67:     resetClasses(); 
68:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
69:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
70:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
71:   } 
72: 
73:   public static void setSystemProperties() {
74:  
75:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
76:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
77:     java.lang.System.setProperty("java.awt.headless", "true"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:     java.lang.System.setProperty("user.country", "US"); 
80:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
81:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
82:     java.lang.System.setProperty("user.language", "en"); 
83:     java.lang.System.setProperty("user.name", "ubuntu"); 
84:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
85:   }
86: 
87:   private static void initializeClasses() {
88:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding.class.getClassLoader() ,
89:       "weka.core.Environment",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "weka.classifiers.AbstractClassifier",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.OptionHandler",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.core.WekaException",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.scripting.JythonSerializableObject",
100:       "weka.classifiers.Classifier",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.Capabilities$Capability",
103:       "weka.core.SparseInstance",
104:       "weka.core.DenseInstance",
105:       "org.pentaho.packageManagement.PackageManager",
106:       "weka.estimators.PoissonEstimator",
107:       "weka.core.stemmers.Stemmer",
108:       "weka.classifiers.functions.SimpleLinearRegression",
109:       "weka.core.tokenizers.WordTokenizer",
110:       "weka.classifiers.misc.SerializedClassifier",
111:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
112:       "org.pentaho.packageManagement.DefaultPackageManager",
113:       "weka.core.stemmers.SnowballStemmer",
114:       "weka.core.stemmers.LovinsStemmer",
115:       "weka.classifiers.Evaluation",
116:       "weka.classifiers.functions.supportVector.Kernel",
117:       "weka.core.WekaPackageManager",
118:       "org.bounce.net.DefaultAuthenticator",
119:       "weka.core.TechnicalInformationHandler",
120:       "weka.estimators.IncrementalEstimator",
121:       "weka.estimators.Estimator$Builder",
122:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
123:       "weka.core.Option",
124:       "weka.core.stemmers.NullStemmer",
125:       "weka.classifiers.functions.SGDText",
126:       "weka.core.Utils",
127:       "weka.core.tokenizers.Tokenizer",
128:       "weka.core.Attribute",
129:       "weka.core.NoSupportForMissingValuesException",
130:       "weka.core.Stopwords",
131:       "weka.classifiers.UpdateableClassifier",
132:       "weka.core.tokenizers.AlphabeticTokenizer",
133:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
134:       "weka.core.TechnicalInformation$Type",
135:       "weka.core.FastVector",
136:       "weka.core.MultiInstanceCapabilitiesHandler",
137:       "weka.core.Copyable",
138:       "weka.core.Capabilities",
139:       "weka.core.BinarySparseInstance",
140:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
141:       "weka.core.tokenizers.NGramTokenizer",
142:       "weka.core.UnassignedDatasetException",
143:       "weka.classifiers.RandomizableClassifier",
144:       "weka.core.SerializedObject",
145:       "weka.clusterers.UpdateableClusterer",
146:       "weka.core.Summarizable",
147:       "weka.core.RevisionUtils",
148:       "weka.core.neighboursearch.balltrees.BallNode",
149:       "org.pentaho.packageManagement.PackageManager$1",
150:       "weka.core.Instance",
151:       "weka.estimators.Estimator",
152:       "weka.core.Drawable",
153:       "weka.core.ProtectedProperties",
154:       "weka.core.matrix.Matrix",
155:       "weka.core.AttributeStats",
156:       "weka.core.WeightedInstancesHandler",
157:       "weka.core.CapabilitiesHandler",
158:       "weka.core.TechnicalInformation$Field",
159:       "weka.core.Randomizable",
160:       "weka.core.AbstractInstance",
161:       "weka.core.Instances",
162:       "weka.core.scripting.JythonObject",
163:       "weka.core.SelectedTag",
164:       "org.pentaho.packageManagement.DefaultPackage",
165:       "weka.core.UnassignedClassException",
166:       "weka.core.Version",
167:       "weka.core.TechnicalInformation",
168:       "weka.core.UnsupportedAttributeTypeException",
169:       "weka.classifiers.Sourcable",
170:       "weka.core.RevisionHandler",
171:       "weka.classifiers.evaluation.output.prediction.PlainText",
172:       "weka.core.xml.XMLSerialization",
173:       "weka.classifiers.xml.XMLClassifier",
174:       "weka.core.Tag"
175:     );
176:   } 
177: 
178:   private static void resetClasses() {
179:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding.class.getClassLoader()); 
180: 
181:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
182:       "weka.classifiers.AbstractClassifier",
183:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
184:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
185:       "weka.core.Capabilities$Capability",
186:       "weka.core.tokenizers.Tokenizer",
187:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
188:       "weka.core.tokenizers.WordTokenizer",
189:       "weka.core.stemmers.NullStemmer",
190:       "weka.classifiers.Evaluation",
191:       "weka.core.Utils",
192:       "weka.core.Option",
193:       "weka.core.AbstractInstance",
194:       "weka.core.SparseInstance",
195:       "weka.classifiers.functions.supportVector.Kernel",
196:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
197:       "weka.core.BinarySparseInstance",
198:       "weka.core.UnassignedDatasetException",
199:       "weka.core.RevisionUtils",
200:       "weka.core.neighboursearch.NearestNeighbourSearch",
201:       "weka.core.neighboursearch.CoverTree",
202:       "weka.core.NormalizableDistance",
203:       "weka.core.EuclideanDistance",
204:       "weka.core.Range",
205:       "weka.core.Capabilities",
206:       "org.pentaho.packageManagement.PackageManager",
207:       "org.pentaho.packageManagement.DefaultPackageManager",
208:       "weka.core.Version",
209:       "weka.core.Environment",
210:       "weka.core.WekaPackageManager",
211:       "weka.core.neighboursearch.BallTree",
212:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
213:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
214:       "weka.core.neighboursearch.balltrees.BallSplitter",
215:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
216:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
217:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
218:       "weka.attributeSelection.ASEvaluation",
219:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
220:       "weka.attributeSelection.PrincipalComponents",
221:       "weka.classifiers.RandomizableClassifier",
222:       "weka.core.Tag",
223:       "weka.classifiers.functions.SGDText",
224:       "weka.classifiers.misc.SerializedClassifier",
225:       "weka.filters.Filter",
226:       "weka.filters.supervised.attribute.Discretize",
227:       "weka.classifiers.functions.SMO",
228:       "weka.classifiers.functions.supportVector.CachedKernel",
229:       "weka.classifiers.functions.supportVector.PolyKernel",
230:       "weka.core.SerializedObject",
231:       "weka.core.Instances",
232:       "weka.core.tokenizers.NGramTokenizer",
233:       "weka.classifiers.SingleClassifierEnhancer",
234:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
235:       "weka.classifiers.meta.CostSensitiveClassifier",
236:       "weka.classifiers.rules.ZeroR",
237:       "weka.classifiers.CostMatrix",
238:       "weka.core.stemmers.SnowballStemmer",
239:       "weka.core.DenseInstance",
240:       "weka.core.neighboursearch.balltrees.BallNode",
241:       "weka.core.TestInstances",
242:       "weka.core.Attribute",
243:       "weka.core.ProtectedProperties",
244:       "weka.core.tokenizers.AlphabeticTokenizer",
245:       "weka.core.neighboursearch.LinearNNSearch",
246:       "weka.core.stemmers.LovinsStemmer",
247:       "weka.core.stemmers.IteratedLovinsStemmer",
248:       "weka.classifiers.misc.InputMappedClassifier",
249:       "weka.core.converters.ArffLoader$ArffReader",
250:       "weka.core.Stopwords",
251:       "weka.classifiers.bayes.BayesNet",
252:       "weka.classifiers.bayes.net.BIFReader",
253:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
254:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
255:       "weka.classifiers.bayes.net.search.local.K2",
256:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
257:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
258:       "weka.classifiers.lazy.IBk",
259:       "weka.classifiers.MultipleClassifiersCombiner",
260:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
261:       "weka.classifiers.meta.Vote",
262:       "weka.classifiers.functions.VotedPerceptron",
263:       "weka.classifiers.bayes.NaiveBayesMultinomial",
264:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
265:       "weka.attributeSelection.OneRAttributeEval",
266:       "weka.classifiers.rules.DecisionTable",
267:       "weka.attributeSelection.ASSearch",
268:       "weka.attributeSelection.BestFirst",
269:       "weka.classifiers.trees.J48",
270:       "weka.classifiers.trees.RandomForest",
271:       "weka.classifiers.trees.RandomTree",
272:       "weka.core.FindWithCapabilities",
273:       "weka.core.SingleIndex",
274:       "weka.attributeSelection.AttributeSelection",
275:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
276:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
277:       "weka.classifiers.trees.m5.M5Base",
278:       "weka.classifiers.rules.M5Rules",
279:       "weka.classifiers.functions.LinearRegression",
280:       "weka.core.neighboursearch.KDTree",
281:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
282:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
283:       "weka.classifiers.bayes.NaiveBayes",
284:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
285:       "weka.filters.AllFilter",
286:       "weka.classifiers.meta.FilteredClassifier",
287:       "weka.filters.supervised.attribute.AttributeSelection",
288:       "weka.attributeSelection.CfsSubsetEval",
289:       "weka.attributeSelection.GreedyStepwise",
290:       "weka.classifiers.rules.PART",
291:       "weka.core.stemmers.Stemming",
292:       "weka.core.SelectedTag",
293:       "weka.core.WekaEnumeration",
294:       "weka.core.Attribute$1",
295:       "weka.core.MinkowskiDistance",
296:       "weka.core.TechnicalInformation",
297:       "weka.core.TechnicalInformation$Type",
298:       "weka.core.TechnicalInformation$Field",
299:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
300:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
301:       "weka.classifiers.meta.Stacking",
302:       "weka.classifiers.trees.LMT",
303:       "weka.classifiers.functions.GaussianProcesses",
304:       "weka.core.Check",
305:       "weka.core.CheckGOE",
306:       "weka.classifiers.trees.j48.ClassifierTree",
307:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
308:       "weka.classifiers.functions.SGD",
309:       "weka.filters.SimpleFilter",
310:       "weka.filters.SimpleStreamFilter",
311:       "weka.filters.MultiFilter",
312:       "weka.core.ClassDiscovery",
313:       "weka.classifiers.IteratedSingleClassifierEnhancer",
314:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
315:       "weka.classifiers.meta.AdaBoostM1",
316:       "weka.classifiers.trees.DecisionStump",
317:       "weka.classifiers.lazy.KStar",
318:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
319:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
320:       "weka.classifiers.meta.RandomCommittee",
321:       "weka.classifiers.meta.AttributeSelectedClassifier",
322:       "weka.attributeSelection.GainRatioAttributeEval",
323:       "weka.classifiers.meta.CVParameterSelection",
324:       "weka.core.FastVector",
325:       "weka.core.WekaException",
326:       "weka.core.UnsupportedAttributeTypeException",
327:       "weka.classifiers.bayes.NaiveBayesUpdateable",
328:       "weka.classifiers.meta.ClassificationViaRegression",
329:       "weka.classifiers.trees.M5P",
330:       "weka.estimators.Estimator",
331:       "weka.estimators.KernelEstimator",
332:       "weka.core.UnassignedClassException",
333:       "weka.classifiers.functions.SimpleLinearRegression",
334:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
335:       "weka.classifiers.rules.JRip",
336:       "weka.classifiers.meta.AdditiveRegression",
337:       "weka.classifiers.functions.supportVector.Puk",
338:       "weka.classifiers.rules.part.MakeDecList",
339:       "weka.estimators.NormalEstimator",
340:       "weka.attributeSelection.ReliefFAttributeEval",
341:       "weka.classifiers.meta.MultiClassClassifier",
342:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
343:       "weka.classifiers.functions.Logistic",
344:       "weka.estimators.PoissonEstimator",
345:       "weka.classifiers.meta.RegressionByDiscretization",
346:       "weka.filters.unsupervised.attribute.Discretize",
347:       "weka.classifiers.meta.RandomSubSpace",
348:       "weka.classifiers.trees.REPTree",
349:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
350:       "weka.estimators.DiscreteEstimator",
351:       "weka.attributeSelection.InfoGainAttributeEval",
352:       "weka.attributeSelection.CorrelationAttributeEval",
353:       "weka.classifiers.lazy.LWL",
354:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
355:       "weka.classifiers.functions.supportVector.RBFKernel",
356:       "weka.classifiers.functions.SMOreg",
357:       "weka.classifiers.functions.supportVector.RegOptimizer",
358:       "weka.classifiers.functions.supportVector.RegSMO",
359:       "weka.classifiers.functions.supportVector.RegSMOImproved",
360:       "weka.classifiers.meta.Bagging",
361:       "weka.classifiers.meta.LogitBoost",
362:       "weka.classifiers.functions.SimpleLogistic",
363:       "weka.classifiers.functions.MultilayerPerceptron",
364:       "weka.filters.unsupervised.attribute.NominalToBinary",
365:       "weka.classifiers.functions.neural.SigmoidUnit",
366:       "weka.classifiers.functions.neural.LinearUnit",
367:       "weka.core.AttributeStats",
368:       "weka.core.SerializationHelper",
369:       "weka.classifiers.rules.OneR",
370:       "weka.attributeSelection.WrapperSubsetEval",
371:       "weka.core.matrix.Matrix",
372:       "weka.estimators.MahalanobisEstimator",
373:       "weka.classifiers.functions.supportVector.StringKernel",
374:       "weka.classifiers.meta.MultiScheme",
375:       "weka.core.converters.ConverterUtils$DataSource",
376:       "weka.core.converters.AbstractLoader",
377:       "weka.core.converters.AbstractFileLoader",
378:       "weka.core.converters.ArffLoader",
379:       "weka.classifiers.functions.neural.NeuralConnection",
380:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
381:       "weka.classifiers.bayes.net.ParentSet",
382:       "weka.estimators.UnivariateEqualFrequencyHistogramEstimator",
383:       "weka.core.neighboursearch.PerformanceStats"
384:     );
385:   }
386: }

[MASTER] 13:46:07.666 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
NGramTokenizer nGramTokenizer0 = new NGramTokenizer();
String[] stringArray0 = new String[2];
stringArray0[0] = "-M";
stringArray0[1] = "-M";
Tokenizer.runTokenizer(nGramTokenizer0, stringArray0);
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.setTokenizer(nGramTokenizer0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.minWordFrequencyTipText();
naiveBayesMultinomialText0.setOptions(stringArray0);

[MASTER] 13:46:08.439 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_57_1573739168412/weka/classifiers/bayes/NaiveBayesMultinomialText_57_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_57_1573739168412/weka/classifiers/bayes/NaiveBayesMultinomialText_57_tmp__ESTest_scaffolding.java]]
[MASTER] 13:46:08.439 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 13:46:08.439 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 13:46:08.440 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 13:46:08.440 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_57_1573739168412/weka/classifiers/bayes/NaiveBayesMultinomialText_57_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Nov 14 13:46:08 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.System;
14: import org.evosuite.runtime.testdata.EvoSuiteFile;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.AbstractClassifier;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.core.stemmers.LovinsStemmer;
20: import weka.core.stemmers.Stemmer;
21: import weka.core.tokenizers.AlphabeticTokenizer;
22: import weka.core.tokenizers.Tokenizer;
23: 
24: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
25: public class NaiveBayesMultinomialText_57_tmp__ESTest extends NaiveBayesMultinomialText_57_tmp__ESTest_scaffolding {
26: 
27:   /**
28:   //Test case number: 0
29:   /*Coverage entropy=3.3883632335180063
30:   */
31:   @Test(timeout = 4000)
32:   public void test0()  throws Throwable  {
33:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
34:       FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
35:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
36:       LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
37:       naiveBayesMultinomialText0.m_stemmer = (Stemmer) lovinsStemmer0;
38:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
39:       naiveBayesMultinomialText0.m_inputVector = null;
40:       naiveBayesMultinomialText0.getLowercaseTokens();
41:       AbstractClassifier.makeCopies(naiveBayesMultinomialText0, 1);
42:       naiveBayesMultinomialText0.useStopListTipText();
43:       NaiveBayesMultinomialText.main(stringArray0);
44:       lovinsStemmer0.getTechnicalInformation();
45:       naiveBayesMultinomialText0.m_norm = (double) 0L;
46:       AlphabeticTokenizer alphabeticTokenizer0 = new AlphabeticTokenizer();
47:       naiveBayesMultinomialText0.m_tokenizer = (Tokenizer) alphabeticTokenizer0;
48:       alphabeticTokenizer0.listOptions();
49:       String[] stringArray1 = alphabeticTokenizer0.getOptions();
50:       String[] stringArray2 = Tokenizer.tokenize(naiveBayesMultinomialText0.m_tokenizer, stringArray1);
51:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
52:       
53:       naiveBayesMultinomialText0.m_minWordP = (double) 0L;
54:       System.setCurrentTimeMillis(0L);
55:       naiveBayesMultinomialText0.getMinWordFrequency();
56:       naiveBayesMultinomialText0.listOptions();
57:       naiveBayesMultinomialText0.getMinWordFrequency();
58:       naiveBayesMultinomialText0.getLNorm();
59:       naiveBayesMultinomialText0.normTipText();
60:       naiveBayesMultinomialText0.setOptions(stringArray2);
61:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
62:   }
63: }
RegularFileObject[/tmp/EvoSuite_57_1573739168412/weka/classifiers/bayes/NaiveBayesMultinomialText_57_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Nov 14 13:46:08 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_57_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:     org.evosuite.runtime.util.SystemInUtil.getInstance().initForTestCase(); 
60:   } 
61: 
62:   @After 
63:   public void doneWithTestCase(){ 
64:     threadStopper.killAndJoinClientThreads();
65:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
66:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
67:     resetClasses(); 
68:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
69:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
70:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
71:   } 
72: 
73:   public static void setSystemProperties() {
74:  
75:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
76:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
77:     java.lang.System.setProperty("java.awt.headless", "true"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:     java.lang.System.setProperty("user.country", "US"); 
80:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
81:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
82:     java.lang.System.setProperty("user.language", "en"); 
83:     java.lang.System.setProperty("user.name", "ubuntu"); 
84:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
85:   }
86: 
87:   private static void initializeClasses() {
88:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_57_tmp__ESTest_scaffolding.class.getClassLoader() ,
89:       "weka.core.Environment",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "weka.classifiers.AbstractClassifier",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.OptionHandler",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.core.WekaException",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.scripting.JythonSerializableObject",
100:       "weka.classifiers.Classifier",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.Capabilities$Capability",
103:       "weka.core.SparseInstance",
104:       "weka.core.DenseInstance",
105:       "org.pentaho.packageManagement.PackageManager",
106:       "weka.estimators.PoissonEstimator",
107:       "weka.core.stemmers.Stemmer",
108:       "weka.classifiers.functions.SimpleLinearRegression",
109:       "weka.core.tokenizers.WordTokenizer",
110:       "weka.classifiers.misc.SerializedClassifier",
111:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
112:       "org.pentaho.packageManagement.DefaultPackageManager",
113:       "weka.core.stemmers.SnowballStemmer",
114:       "weka.core.stemmers.LovinsStemmer",
115:       "weka.classifiers.Evaluation",
116:       "weka.classifiers.functions.supportVector.Kernel",
117:       "weka.core.WekaPackageManager",
118:       "org.bounce.net.DefaultAuthenticator",
119:       "weka.core.TechnicalInformationHandler",
120:       "weka.estimators.IncrementalEstimator",
121:       "weka.estimators.Estimator$Builder",
122:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
123:       "weka.core.Option",
124:       "weka.core.stemmers.NullStemmer",
125:       "weka.classifiers.functions.SGDText",
126:       "weka.core.Utils",
127:       "weka.core.tokenizers.Tokenizer",
128:       "weka.core.Attribute",
129:       "weka.core.NoSupportForMissingValuesException",
130:       "weka.core.Stopwords",
131:       "weka.classifiers.UpdateableClassifier",
132:       "weka.core.tokenizers.AlphabeticTokenizer",
133:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
134:       "weka.core.TechnicalInformation$Type",
135:       "weka.core.FastVector",
136:       "weka.core.MultiInstanceCapabilitiesHandler",
137:       "weka.core.Copyable",
138:       "weka.core.Capabilities",
139:       "weka.core.BinarySparseInstance",
140:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
141:       "weka.core.tokenizers.NGramTokenizer",
142:       "weka.core.UnassignedDatasetException",
143:       "weka.classifiers.RandomizableClassifier",
144:       "weka.core.SerializedObject",
145:       "weka.clusterers.UpdateableClusterer",
146:       "weka.core.Summarizable",
147:       "weka.core.RevisionUtils",
148:       "weka.core.neighboursearch.balltrees.BallNode",
149:       "org.pentaho.packageManagement.PackageManager$1",
150:       "weka.core.Instance",
151:       "weka.estimators.Estimator",
152:       "weka.core.Drawable",
153:       "weka.core.ProtectedProperties",
154:       "weka.core.matrix.Matrix",
155:       "weka.core.AttributeStats",
156:       "weka.core.WeightedInstancesHandler",
157:       "weka.core.CapabilitiesHandler",
158:       "weka.core.TechnicalInformation$Field",
159:       "weka.core.Randomizable",
160:       "weka.core.AbstractInstance",
161:       "weka.core.Instances",
162:       "weka.core.scripting.JythonObject",
163:       "weka.core.SelectedTag",
164:       "org.pentaho.packageManagement.DefaultPackage",
165:       "weka.core.UnassignedClassException",
166:       "weka.core.Version",
167:       "weka.core.TechnicalInformation",
168:       "weka.core.UnsupportedAttributeTypeException",
169:       "weka.classifiers.Sourcable",
170:       "weka.core.RevisionHandler",
171:       "weka.classifiers.evaluation.output.prediction.PlainText",
172:       "weka.core.xml.XMLSerialization",
173:       "weka.classifiers.xml.XMLClassifier",
174:       "weka.core.Tag"
175:     );
176:   } 
177: 
178:   private static void resetClasses() {
179:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_57_tmp__ESTest_scaffolding.class.getClassLoader()); 
180: 
181:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
182:       "weka.classifiers.AbstractClassifier",
183:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
184:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
185:       "weka.core.Capabilities$Capability",
186:       "weka.core.tokenizers.Tokenizer",
187:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
188:       "weka.core.tokenizers.WordTokenizer",
189:       "weka.core.stemmers.NullStemmer",
190:       "weka.classifiers.Evaluation",
191:       "weka.core.Utils",
192:       "weka.core.Option",
193:       "weka.core.AbstractInstance",
194:       "weka.core.SparseInstance",
195:       "weka.classifiers.functions.supportVector.Kernel",
196:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
197:       "weka.core.BinarySparseInstance",
198:       "weka.core.UnassignedDatasetException",
199:       "weka.core.RevisionUtils",
200:       "weka.core.neighboursearch.NearestNeighbourSearch",
201:       "weka.core.neighboursearch.CoverTree",
202:       "weka.core.NormalizableDistance",
203:       "weka.core.EuclideanDistance",
204:       "weka.core.Range",
205:       "weka.core.Capabilities",
206:       "org.pentaho.packageManagement.PackageManager",
207:       "org.pentaho.packageManagement.DefaultPackageManager",
208:       "weka.core.Version",
209:       "weka.core.Environment",
210:       "weka.core.WekaPackageManager",
211:       "weka.core.neighboursearch.BallTree",
212:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
213:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
214:       "weka.core.neighboursearch.balltrees.BallSplitter",
215:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
216:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
217:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
218:       "weka.attributeSelection.ASEvaluation",
219:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
220:       "weka.attributeSelection.PrincipalComponents",
221:       "weka.classifiers.RandomizableClassifier",
222:       "weka.core.Tag",
223:       "weka.classifiers.functions.SGDText",
224:       "weka.classifiers.misc.SerializedClassifier",
225:       "weka.filters.Filter",
226:       "weka.filters.supervised.attribute.Discretize",
227:       "weka.classifiers.functions.SMO",
228:       "weka.classifiers.functions.supportVector.CachedKernel",
229:       "weka.classifiers.functions.supportVector.PolyKernel",
230:       "weka.core.SerializedObject",
231:       "weka.core.Instances",
232:       "weka.core.tokenizers.NGramTokenizer",
233:       "weka.classifiers.SingleClassifierEnhancer",
234:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
235:       "weka.classifiers.meta.CostSensitiveClassifier",
236:       "weka.classifiers.rules.ZeroR",
237:       "weka.classifiers.CostMatrix",
238:       "weka.core.stemmers.SnowballStemmer",
239:       "weka.core.DenseInstance",
240:       "weka.core.neighboursearch.balltrees.BallNode",
241:       "weka.core.TestInstances",
242:       "weka.core.Attribute",
243:       "weka.core.ProtectedProperties",
244:       "weka.core.tokenizers.AlphabeticTokenizer",
245:       "weka.core.neighboursearch.LinearNNSearch",
246:       "weka.core.stemmers.LovinsStemmer",
247:       "weka.core.stemmers.IteratedLovinsStemmer",
248:       "weka.classifiers.misc.InputMappedClassifier",
249:       "weka.core.converters.ArffLoader$ArffReader",
250:       "weka.core.Stopwords",
251:       "weka.classifiers.bayes.BayesNet",
252:       "weka.classifiers.bayes.net.BIFReader",
253:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
254:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
255:       "weka.classifiers.bayes.net.search.local.K2",
256:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
257:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
258:       "weka.classifiers.lazy.IBk",
259:       "weka.classifiers.MultipleClassifiersCombiner",
260:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
261:       "weka.classifiers.meta.Vote",
262:       "weka.classifiers.functions.VotedPerceptron",
263:       "weka.classifiers.bayes.NaiveBayesMultinomial",
264:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
265:       "weka.attributeSelection.OneRAttributeEval",
266:       "weka.classifiers.rules.DecisionTable",
267:       "weka.attributeSelection.ASSearch",
268:       "weka.attributeSelection.BestFirst",
269:       "weka.classifiers.trees.J48",
270:       "weka.classifiers.trees.RandomForest",
271:       "weka.classifiers.trees.RandomTree",
272:       "weka.core.FindWithCapabilities",
273:       "weka.core.SingleIndex",
274:       "weka.attributeSelection.AttributeSelection",
275:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
276:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
277:       "weka.classifiers.trees.m5.M5Base",
278:       "weka.classifiers.rules.M5Rules",
279:       "weka.classifiers.functions.LinearRegression",
280:       "weka.core.neighboursearch.KDTree",
281:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
282:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
283:       "weka.classifiers.bayes.NaiveBayes",
284:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
285:       "weka.filters.AllFilter",
286:       "weka.classifiers.meta.FilteredClassifier",
287:       "weka.filters.supervised.attribute.AttributeSelection",
288:       "weka.attributeSelection.CfsSubsetEval",
289:       "weka.attributeSelection.GreedyStepwise",
290:       "weka.classifiers.rules.PART",
291:       "weka.core.stemmers.Stemming",
292:       "weka.core.SelectedTag",
293:       "weka.core.WekaEnumeration",
294:       "weka.core.Attribute$1",
295:       "weka.core.MinkowskiDistance",
296:       "weka.core.TechnicalInformation",
297:       "weka.core.TechnicalInformation$Type",
298:       "weka.core.TechnicalInformation$Field",
299:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
300:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
301:       "weka.classifiers.meta.Stacking",
302:       "weka.classifiers.trees.LMT",
303:       "weka.classifiers.functions.GaussianProcesses",
304:       "weka.core.Check",
305:       "weka.core.CheckGOE",
306:       "weka.classifiers.trees.j48.ClassifierTree",
307:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
308:       "weka.classifiers.functions.SGD",
309:       "weka.filters.SimpleFilter",
310:       "weka.filters.SimpleStreamFilter",
311:       "weka.filters.MultiFilter",
312:       "weka.core.ClassDiscovery",
313:       "weka.classifiers.IteratedSingleClassifierEnhancer",
314:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
315:       "weka.classifiers.meta.AdaBoostM1",
316:       "weka.classifiers.trees.DecisionStump",
317:       "weka.classifiers.lazy.KStar",
318:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
319:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
320:       "weka.classifiers.meta.RandomCommittee",
321:       "weka.classifiers.meta.AttributeSelectedClassifier",
322:       "weka.attributeSelection.GainRatioAttributeEval",
323:       "weka.classifiers.meta.CVParameterSelection",
324:       "weka.core.FastVector",
325:       "weka.core.WekaException",
326:       "weka.core.UnsupportedAttributeTypeException",
327:       "weka.classifiers.bayes.NaiveBayesUpdateable",
328:       "weka.classifiers.meta.ClassificationViaRegression",
329:       "weka.classifiers.trees.M5P",
330:       "weka.estimators.Estimator",
331:       "weka.estimators.KernelEstimator",
332:       "weka.core.UnassignedClassException",
333:       "weka.classifiers.functions.SimpleLinearRegression",
334:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
335:       "weka.classifiers.rules.JRip",
336:       "weka.classifiers.meta.AdditiveRegression",
337:       "weka.classifiers.functions.supportVector.Puk",
338:       "weka.classifiers.rules.part.MakeDecList",
339:       "weka.estimators.NormalEstimator",
340:       "weka.attributeSelection.ReliefFAttributeEval",
341:       "weka.classifiers.meta.MultiClassClassifier",
342:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
343:       "weka.classifiers.functions.Logistic",
344:       "weka.estimators.PoissonEstimator",
345:       "weka.classifiers.meta.RegressionByDiscretization",
346:       "weka.filters.unsupervised.attribute.Discretize",
347:       "weka.classifiers.meta.RandomSubSpace",
348:       "weka.classifiers.trees.REPTree",
349:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
350:       "weka.estimators.DiscreteEstimator",
351:       "weka.attributeSelection.InfoGainAttributeEval",
352:       "weka.attributeSelection.CorrelationAttributeEval",
353:       "weka.classifiers.lazy.LWL",
354:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
355:       "weka.classifiers.functions.supportVector.RBFKernel",
356:       "weka.classifiers.functions.SMOreg",
357:       "weka.classifiers.functions.supportVector.RegOptimizer",
358:       "weka.classifiers.functions.supportVector.RegSMO",
359:       "weka.classifiers.functions.supportVector.RegSMOImproved",
360:       "weka.classifiers.meta.Bagging",
361:       "weka.classifiers.meta.LogitBoost",
362:       "weka.classifiers.functions.SimpleLogistic",
363:       "weka.classifiers.functions.MultilayerPerceptron",
364:       "weka.filters.unsupervised.attribute.NominalToBinary",
365:       "weka.classifiers.functions.neural.SigmoidUnit",
366:       "weka.classifiers.functions.neural.LinearUnit",
367:       "weka.core.AttributeStats",
368:       "weka.core.SerializationHelper",
369:       "weka.classifiers.rules.OneR",
370:       "weka.attributeSelection.WrapperSubsetEval",
371:       "weka.core.matrix.Matrix",
372:       "weka.estimators.MahalanobisEstimator",
373:       "weka.classifiers.functions.supportVector.StringKernel",
374:       "weka.classifiers.meta.MultiScheme",
375:       "weka.core.converters.ConverterUtils$DataSource",
376:       "weka.core.converters.AbstractLoader",
377:       "weka.core.converters.AbstractFileLoader",
378:       "weka.core.converters.ArffLoader",
379:       "weka.classifiers.functions.neural.NeuralConnection",
380:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
381:       "weka.classifiers.bayes.net.ParentSet",
382:       "weka.estimators.UnivariateEqualFrequencyHistogramEstimator",
383:       "weka.core.neighboursearch.PerformanceStats"
384:     );
385:   }
386: }

[MASTER] 13:46:08.441 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
naiveBayesMultinomialText0.m_stemmer = (Stemmer) lovinsStemmer0;
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.m_inputVector = null;
naiveBayesMultinomialText0.getLowercaseTokens();
AbstractClassifier.makeCopies(naiveBayesMultinomialText0, 1);
naiveBayesMultinomialText0.useStopListTipText();
NaiveBayesMultinomialText.main(stringArray0);
lovinsStemmer0.getTechnicalInformation();
naiveBayesMultinomialText0.m_norm = (double) 0L;
AlphabeticTokenizer alphabeticTokenizer0 = new AlphabeticTokenizer();
naiveBayesMultinomialText0.m_tokenizer = (Tokenizer) alphabeticTokenizer0;
alphabeticTokenizer0.listOptions();
String[] stringArray1 = alphabeticTokenizer0.getOptions();
String[] stringArray2 = Tokenizer.tokenize(naiveBayesMultinomialText0.m_tokenizer, stringArray1);
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);

naiveBayesMultinomialText0.m_minWordP = (double) 0L;
System.setCurrentTimeMillis(0L);
naiveBayesMultinomialText0.getMinWordFrequency();
naiveBayesMultinomialText0.listOptions();
naiveBayesMultinomialText0.getMinWordFrequency();
naiveBayesMultinomialText0.getLNorm();
naiveBayesMultinomialText0.normTipText();
naiveBayesMultinomialText0.setOptions(stringArray2);
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);


[MASTER] 13:46:08.972 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_70_1573739168943/weka/classifiers/bayes/NaiveBayesMultinomialText_70_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_70_1573739168943/weka/classifiers/bayes/NaiveBayesMultinomialText_70_tmp__ESTest_scaffolding.java]]
[MASTER] 13:46:08.972 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 13:46:08.972 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 13:46:08.972 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 13:46:08.972 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 13:46:08.972 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 13:46:08.973 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_70_1573739168943/weka/classifiers/bayes/NaiveBayesMultinomialText_70_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Nov 14 13:46:08 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.mock.java.io.MockFile;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_70_tmp__ESTest extends NaiveBayesMultinomialText_70_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=1.543056733112554
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       MockFile mockFile0 = new MockFile("%!VY7OwdD,1YqhxJi");
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
30:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
31:       naiveBayesMultinomialText0.setPeriodicPruning(39);
32:       naiveBayesMultinomialText0.useStopListTipText();
33:       naiveBayesMultinomialText0.pruneDictionary();
34:       assertEquals(39, naiveBayesMultinomialText0.getPeriodicPruning());
35:   }
36: }
RegularFileObject[/tmp/EvoSuite_70_1573739168943/weka/classifiers/bayes/NaiveBayesMultinomialText_70_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Nov 14 13:46:08 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_70_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:     org.evosuite.runtime.util.SystemInUtil.getInstance().initForTestCase(); 
60:   } 
61: 
62:   @After 
63:   public void doneWithTestCase(){ 
64:     threadStopper.killAndJoinClientThreads();
65:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
66:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
67:     resetClasses(); 
68:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
69:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
70:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
71:   } 
72: 
73:   public static void setSystemProperties() {
74:  
75:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
76:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
77:     java.lang.System.setProperty("java.awt.headless", "true"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:     java.lang.System.setProperty("user.country", "US"); 
80:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
81:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
82:     java.lang.System.setProperty("user.language", "en"); 
83:     java.lang.System.setProperty("user.name", "ubuntu"); 
84:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
85:   }
86: 
87:   private static void initializeClasses() {
88:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_70_tmp__ESTest_scaffolding.class.getClassLoader() ,
89:       "weka.core.Environment",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "weka.classifiers.AbstractClassifier",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.OptionHandler",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.core.WekaException",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.scripting.JythonSerializableObject",
100:       "weka.classifiers.Classifier",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.Capabilities$Capability",
103:       "weka.core.SparseInstance",
104:       "weka.core.DenseInstance",
105:       "org.pentaho.packageManagement.PackageManager",
106:       "weka.estimators.PoissonEstimator",
107:       "weka.core.stemmers.Stemmer",
108:       "weka.classifiers.functions.SimpleLinearRegression",
109:       "weka.core.tokenizers.WordTokenizer",
110:       "weka.classifiers.misc.SerializedClassifier",
111:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
112:       "org.pentaho.packageManagement.DefaultPackageManager",
113:       "weka.core.stemmers.SnowballStemmer",
114:       "weka.core.stemmers.LovinsStemmer",
115:       "weka.classifiers.Evaluation",
116:       "weka.classifiers.functions.supportVector.Kernel",
117:       "weka.core.WekaPackageManager",
118:       "org.bounce.net.DefaultAuthenticator",
119:       "weka.core.TechnicalInformationHandler",
120:       "weka.estimators.IncrementalEstimator",
121:       "weka.estimators.Estimator$Builder",
122:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
123:       "weka.core.Option",
124:       "weka.core.stemmers.NullStemmer",
125:       "weka.classifiers.functions.SGDText",
126:       "weka.core.Utils",
127:       "weka.core.tokenizers.Tokenizer",
128:       "weka.core.Attribute",
129:       "weka.core.NoSupportForMissingValuesException",
130:       "weka.core.Stopwords",
131:       "weka.classifiers.UpdateableClassifier",
132:       "weka.core.tokenizers.AlphabeticTokenizer",
133:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
134:       "weka.core.TechnicalInformation$Type",
135:       "weka.core.FastVector",
136:       "weka.core.MultiInstanceCapabilitiesHandler",
137:       "weka.core.Copyable",
138:       "weka.core.Capabilities",
139:       "weka.core.BinarySparseInstance",
140:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
141:       "weka.core.tokenizers.NGramTokenizer",
142:       "weka.core.UnassignedDatasetException",
143:       "weka.classifiers.RandomizableClassifier",
144:       "weka.core.SerializedObject",
145:       "weka.clusterers.UpdateableClusterer",
146:       "weka.core.Summarizable",
147:       "weka.core.RevisionUtils",
148:       "weka.core.neighboursearch.balltrees.BallNode",
149:       "org.pentaho.packageManagement.PackageManager$1",
150:       "weka.core.Instance",
151:       "weka.estimators.Estimator",
152:       "weka.core.Drawable",
153:       "weka.core.ProtectedProperties",
154:       "weka.core.matrix.Matrix",
155:       "weka.core.AttributeStats",
156:       "weka.core.WeightedInstancesHandler",
157:       "weka.core.CapabilitiesHandler",
158:       "weka.core.TechnicalInformation$Field",
159:       "weka.core.Randomizable",
160:       "weka.core.AbstractInstance",
161:       "weka.core.Instances",
162:       "weka.core.scripting.JythonObject",
163:       "weka.core.SelectedTag",
164:       "org.pentaho.packageManagement.DefaultPackage",
165:       "weka.core.UnassignedClassException",
166:       "weka.core.Version",
167:       "weka.core.TechnicalInformation",
168:       "weka.core.UnsupportedAttributeTypeException",
169:       "weka.classifiers.Sourcable",
170:       "weka.core.RevisionHandler",
171:       "weka.classifiers.evaluation.output.prediction.PlainText",
172:       "weka.core.xml.XMLSerialization",
173:       "weka.classifiers.xml.XMLClassifier",
174:       "weka.core.Tag"
175:     );
176:   } 
177: 
178:   private static void resetClasses() {
179:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_70_tmp__ESTest_scaffolding.class.getClassLoader()); 
180: 
181:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
182:       "weka.classifiers.AbstractClassifier",
183:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
184:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
185:       "weka.core.Capabilities$Capability",
186:       "weka.core.tokenizers.Tokenizer",
187:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
188:       "weka.core.tokenizers.WordTokenizer",
189:       "weka.core.stemmers.NullStemmer",
190:       "weka.classifiers.Evaluation",
191:       "weka.core.Utils",
192:       "weka.core.Option",
193:       "weka.core.AbstractInstance",
194:       "weka.core.SparseInstance",
195:       "weka.classifiers.functions.supportVector.Kernel",
196:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
197:       "weka.core.BinarySparseInstance",
198:       "weka.core.UnassignedDatasetException",
199:       "weka.core.RevisionUtils",
200:       "weka.core.neighboursearch.NearestNeighbourSearch",
201:       "weka.core.neighboursearch.CoverTree",
202:       "weka.core.NormalizableDistance",
203:       "weka.core.EuclideanDistance",
204:       "weka.core.Range",
205:       "weka.core.Capabilities",
206:       "org.pentaho.packageManagement.PackageManager",
207:       "org.pentaho.packageManagement.DefaultPackageManager",
208:       "weka.core.Version",
209:       "weka.core.Environment",
210:       "weka.core.WekaPackageManager",
211:       "weka.core.neighboursearch.BallTree",
212:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
213:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
214:       "weka.core.neighboursearch.balltrees.BallSplitter",
215:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
216:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
217:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
218:       "weka.attributeSelection.ASEvaluation",
219:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
220:       "weka.attributeSelection.PrincipalComponents",
221:       "weka.classifiers.RandomizableClassifier",
222:       "weka.core.Tag",
223:       "weka.classifiers.functions.SGDText",
224:       "weka.classifiers.misc.SerializedClassifier",
225:       "weka.filters.Filter",
226:       "weka.filters.supervised.attribute.Discretize",
227:       "weka.classifiers.functions.SMO",
228:       "weka.classifiers.functions.supportVector.CachedKernel",
229:       "weka.classifiers.functions.supportVector.PolyKernel",
230:       "weka.core.SerializedObject",
231:       "weka.core.Instances",
232:       "weka.core.tokenizers.NGramTokenizer",
233:       "weka.classifiers.SingleClassifierEnhancer",
234:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
235:       "weka.classifiers.meta.CostSensitiveClassifier",
236:       "weka.classifiers.rules.ZeroR",
237:       "weka.classifiers.CostMatrix",
238:       "weka.core.stemmers.SnowballStemmer",
239:       "weka.core.DenseInstance",
240:       "weka.core.neighboursearch.balltrees.BallNode",
241:       "weka.core.TestInstances",
242:       "weka.core.Attribute",
243:       "weka.core.ProtectedProperties",
244:       "weka.core.tokenizers.AlphabeticTokenizer",
245:       "weka.core.neighboursearch.LinearNNSearch",
246:       "weka.core.stemmers.LovinsStemmer",
247:       "weka.core.stemmers.IteratedLovinsStemmer",
248:       "weka.classifiers.misc.InputMappedClassifier",
249:       "weka.core.converters.ArffLoader$ArffReader",
250:       "weka.core.Stopwords",
251:       "weka.classifiers.bayes.BayesNet",
252:       "weka.classifiers.bayes.net.BIFReader",
253:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
254:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
255:       "weka.classifiers.bayes.net.search.local.K2",
256:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
257:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
258:       "weka.classifiers.lazy.IBk",
259:       "weka.classifiers.MultipleClassifiersCombiner",
260:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
261:       "weka.classifiers.meta.Vote",
262:       "weka.classifiers.functions.VotedPerceptron",
263:       "weka.classifiers.bayes.NaiveBayesMultinomial",
264:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
265:       "weka.attributeSelection.OneRAttributeEval",
266:       "weka.classifiers.rules.DecisionTable",
267:       "weka.attributeSelection.ASSearch",
268:       "weka.attributeSelection.BestFirst",
269:       "weka.classifiers.trees.J48",
270:       "weka.classifiers.trees.RandomForest",
271:       "weka.classifiers.trees.RandomTree",
272:       "weka.core.FindWithCapabilities",
273:       "weka.core.SingleIndex",
274:       "weka.attributeSelection.AttributeSelection",
275:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
276:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
277:       "weka.classifiers.trees.m5.M5Base",
278:       "weka.classifiers.rules.M5Rules",
279:       "weka.classifiers.functions.LinearRegression",
280:       "weka.core.neighboursearch.KDTree",
281:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
282:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
283:       "weka.classifiers.bayes.NaiveBayes",
284:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
285:       "weka.filters.AllFilter",
286:       "weka.classifiers.meta.FilteredClassifier",
287:       "weka.filters.supervised.attribute.AttributeSelection",
288:       "weka.attributeSelection.CfsSubsetEval",
289:       "weka.attributeSelection.GreedyStepwise",
290:       "weka.classifiers.rules.PART",
291:       "weka.core.stemmers.Stemming",
292:       "weka.core.SelectedTag",
293:       "weka.core.WekaEnumeration",
294:       "weka.core.Attribute$1",
295:       "weka.core.MinkowskiDistance",
296:       "weka.core.TechnicalInformation",
297:       "weka.core.TechnicalInformation$Type",
298:       "weka.core.TechnicalInformation$Field",
299:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
300:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
301:       "weka.classifiers.meta.Stacking",
302:       "weka.classifiers.trees.LMT",
303:       "weka.classifiers.functions.GaussianProcesses",
304:       "weka.core.Check",
305:       "weka.core.CheckGOE",
306:       "weka.classifiers.trees.j48.ClassifierTree",
307:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
308:       "weka.classifiers.functions.SGD",
309:       "weka.filters.SimpleFilter",
310:       "weka.filters.SimpleStreamFilter",
311:       "weka.filters.MultiFilter",
312:       "weka.core.ClassDiscovery",
313:       "weka.classifiers.IteratedSingleClassifierEnhancer",
314:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
315:       "weka.classifiers.meta.AdaBoostM1",
316:       "weka.classifiers.trees.DecisionStump",
317:       "weka.classifiers.lazy.KStar",
318:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
319:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
320:       "weka.classifiers.meta.RandomCommittee",
321:       "weka.classifiers.meta.AttributeSelectedClassifier",
322:       "weka.attributeSelection.GainRatioAttributeEval",
323:       "weka.classifiers.meta.CVParameterSelection",
324:       "weka.core.FastVector",
325:       "weka.core.WekaException",
326:       "weka.core.UnsupportedAttributeTypeException",
327:       "weka.classifiers.bayes.NaiveBayesUpdateable",
328:       "weka.classifiers.meta.ClassificationViaRegression",
329:       "weka.classifiers.trees.M5P",
330:       "weka.estimators.Estimator",
331:       "weka.estimators.KernelEstimator",
332:       "weka.core.UnassignedClassException",
333:       "weka.classifiers.functions.SimpleLinearRegression",
334:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
335:       "weka.classifiers.rules.JRip",
336:       "weka.classifiers.meta.AdditiveRegression",
337:       "weka.classifiers.functions.supportVector.Puk",
338:       "weka.classifiers.rules.part.MakeDecList",
339:       "weka.estimators.NormalEstimator",
340:       "weka.attributeSelection.ReliefFAttributeEval",
341:       "weka.classifiers.meta.MultiClassClassifier",
342:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
343:       "weka.classifiers.functions.Logistic",
344:       "weka.estimators.PoissonEstimator",
345:       "weka.classifiers.meta.RegressionByDiscretization",
346:       "weka.filters.unsupervised.attribute.Discretize",
347:       "weka.classifiers.meta.RandomSubSpace",
348:       "weka.classifiers.trees.REPTree",
349:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
350:       "weka.estimators.DiscreteEstimator",
351:       "weka.attributeSelection.InfoGainAttributeEval",
352:       "weka.attributeSelection.CorrelationAttributeEval",
353:       "weka.classifiers.lazy.LWL",
354:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
355:       "weka.classifiers.functions.supportVector.RBFKernel",
356:       "weka.classifiers.functions.SMOreg",
357:       "weka.classifiers.functions.supportVector.RegOptimizer",
358:       "weka.classifiers.functions.supportVector.RegSMO",
359:       "weka.classifiers.functions.supportVector.RegSMOImproved",
360:       "weka.classifiers.meta.Bagging",
361:       "weka.classifiers.meta.LogitBoost",
362:       "weka.classifiers.functions.SimpleLogistic",
363:       "weka.classifiers.functions.MultilayerPerceptron",
364:       "weka.filters.unsupervised.attribute.NominalToBinary",
365:       "weka.classifiers.functions.neural.SigmoidUnit",
366:       "weka.classifiers.functions.neural.LinearUnit",
367:       "weka.core.AttributeStats",
368:       "weka.core.SerializationHelper",
369:       "weka.classifiers.rules.OneR",
370:       "weka.attributeSelection.WrapperSubsetEval",
371:       "weka.core.matrix.Matrix",
372:       "weka.estimators.MahalanobisEstimator",
373:       "weka.classifiers.functions.supportVector.StringKernel",
374:       "weka.classifiers.meta.MultiScheme",
375:       "weka.core.converters.ConverterUtils$DataSource",
376:       "weka.core.converters.AbstractLoader",
377:       "weka.core.converters.AbstractFileLoader",
378:       "weka.core.converters.ArffLoader",
379:       "weka.classifiers.functions.neural.NeuralConnection",
380:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
381:       "weka.classifiers.bayes.net.ParentSet",
382:       "weka.estimators.UnivariateEqualFrequencyHistogramEstimator",
383:       "weka.core.neighboursearch.PerformanceStats"
384:     );
385:   }
386: }

[MASTER] 13:46:08.973 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
MockFile mockFile0 = new MockFile("%!VY7OwdD,1YqhxJi");
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
naiveBayesMultinomialText0.setPeriodicPruning(39);
naiveBayesMultinomialText0.useStopListTipText();
naiveBayesMultinomialText0.pruneDictionary();
assertEquals(39, naiveBayesMultinomialText0.getPeriodicPruning());


[MASTER] 13:46:09.030 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_72_1573739169006/weka/classifiers/bayes/NaiveBayesMultinomialText_72_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_72_1573739169006/weka/classifiers/bayes/NaiveBayesMultinomialText_72_tmp__ESTest_scaffolding.java]]
[MASTER] 13:46:09.030 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 13:46:09.030 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 13:46:09.030 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 13:46:09.030 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 13:46:09.030 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 13:46:09.030 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 13:46:09.030 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 13:46:09.031 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_72_1573739169006/weka/classifiers/bayes/NaiveBayesMultinomialText_72_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Nov 14 13:46:09 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.stemmers.SnowballStemmer;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_72_tmp__ESTest extends NaiveBayesMultinomialText_72_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=1.5531577432135641
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       SnowballStemmer snowballStemmer0 = new SnowballStemmer("ENC3g{6dPggeZU");
30:       naiveBayesMultinomialText0.setStemmer(snowballStemmer0);
31:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
32:       Integer integer0 = new Integer(39);
33:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = naiveBayesMultinomialText0.m_inputVector;
34:       linkedHashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
35:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
36:       naiveBayesMultinomialText0.setPeriodicPruning(39);
37:       naiveBayesMultinomialText0.useStopListTipText();
38:       // Undeclared exception!
39:       try { 
40:         naiveBayesMultinomialText0.pruneDictionary();
41:         fail("Expecting exception: NullPointerException");
42:       
43:       } catch(NullPointerException e) {
44:          //
45:          // no message in exception (getMessage() returned null)
46:          //
47:       }
48:   }
49: }
RegularFileObject[/tmp/EvoSuite_72_1573739169006/weka/classifiers/bayes/NaiveBayesMultinomialText_72_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Nov 14 13:46:09 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_72_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:     org.evosuite.runtime.util.SystemInUtil.getInstance().initForTestCase(); 
60:   } 
61: 
62:   @After 
63:   public void doneWithTestCase(){ 
64:     threadStopper.killAndJoinClientThreads();
65:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
66:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
67:     resetClasses(); 
68:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
69:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
70:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
71:   } 
72: 
73:   public static void setSystemProperties() {
74:  
75:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
76:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
77:     java.lang.System.setProperty("java.awt.headless", "true"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:     java.lang.System.setProperty("user.country", "US"); 
80:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
81:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
82:     java.lang.System.setProperty("user.language", "en"); 
83:     java.lang.System.setProperty("user.name", "ubuntu"); 
84:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
85:   }
86: 
87:   private static void initializeClasses() {
88:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_72_tmp__ESTest_scaffolding.class.getClassLoader() ,
89:       "weka.core.Environment",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "weka.classifiers.AbstractClassifier",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.OptionHandler",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.core.WekaException",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.scripting.JythonSerializableObject",
100:       "weka.classifiers.Classifier",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.Capabilities$Capability",
103:       "weka.core.SparseInstance",
104:       "weka.core.DenseInstance",
105:       "org.pentaho.packageManagement.PackageManager",
106:       "weka.estimators.PoissonEstimator",
107:       "weka.core.stemmers.Stemmer",
108:       "weka.classifiers.functions.SimpleLinearRegression",
109:       "weka.core.tokenizers.WordTokenizer",
110:       "weka.classifiers.misc.SerializedClassifier",
111:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
112:       "org.pentaho.packageManagement.DefaultPackageManager",
113:       "weka.core.stemmers.SnowballStemmer",
114:       "weka.core.stemmers.LovinsStemmer",
115:       "weka.classifiers.Evaluation",
116:       "weka.classifiers.functions.supportVector.Kernel",
117:       "weka.core.WekaPackageManager",
118:       "org.bounce.net.DefaultAuthenticator",
119:       "weka.core.TechnicalInformationHandler",
120:       "weka.estimators.IncrementalEstimator",
121:       "weka.estimators.Estimator$Builder",
122:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
123:       "weka.core.Option",
124:       "weka.core.stemmers.NullStemmer",
125:       "weka.classifiers.functions.SGDText",
126:       "weka.core.Utils",
127:       "weka.core.tokenizers.Tokenizer",
128:       "weka.core.Attribute",
129:       "weka.core.NoSupportForMissingValuesException",
130:       "weka.core.Stopwords",
131:       "weka.classifiers.UpdateableClassifier",
132:       "weka.core.tokenizers.AlphabeticTokenizer",
133:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
134:       "weka.core.TechnicalInformation$Type",
135:       "weka.core.FastVector",
136:       "weka.core.MultiInstanceCapabilitiesHandler",
137:       "weka.core.Copyable",
138:       "weka.core.Capabilities",
139:       "weka.core.BinarySparseInstance",
140:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
141:       "weka.core.tokenizers.NGramTokenizer",
142:       "weka.core.UnassignedDatasetException",
143:       "weka.classifiers.RandomizableClassifier",
144:       "weka.core.SerializedObject",
145:       "weka.clusterers.UpdateableClusterer",
146:       "weka.core.Summarizable",
147:       "weka.core.RevisionUtils",
148:       "weka.core.neighboursearch.balltrees.BallNode",
149:       "org.pentaho.packageManagement.PackageManager$1",
150:       "weka.core.Instance",
151:       "weka.estimators.Estimator",
152:       "weka.core.Drawable",
153:       "weka.core.ProtectedProperties",
154:       "weka.core.matrix.Matrix",
155:       "weka.core.AttributeStats",
156:       "weka.core.WeightedInstancesHandler",
157:       "weka.core.CapabilitiesHandler",
158:       "weka.core.TechnicalInformation$Field",
159:       "weka.core.Randomizable",
160:       "weka.core.AbstractInstance",
161:       "weka.core.Instances",
162:       "weka.core.scripting.JythonObject",
163:       "weka.core.SelectedTag",
164:       "org.pentaho.packageManagement.DefaultPackage",
165:       "weka.core.UnassignedClassException",
166:       "weka.core.Version",
167:       "weka.core.TechnicalInformation",
168:       "weka.core.UnsupportedAttributeTypeException",
169:       "weka.classifiers.Sourcable",
170:       "weka.core.RevisionHandler",
171:       "weka.classifiers.evaluation.output.prediction.PlainText",
172:       "weka.core.xml.XMLSerialization",
173:       "weka.classifiers.xml.XMLClassifier",
174:       "weka.core.Tag"
175:     );
176:   } 
177: 
178:   private static void resetClasses() {
179:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_72_tmp__ESTest_scaffolding.class.getClassLoader()); 
180: 
181:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
182:       "weka.classifiers.AbstractClassifier",
183:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
184:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
185:       "weka.core.Capabilities$Capability",
186:       "weka.core.tokenizers.Tokenizer",
187:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
188:       "weka.core.tokenizers.WordTokenizer",
189:       "weka.core.stemmers.NullStemmer",
190:       "weka.classifiers.Evaluation",
191:       "weka.core.Utils",
192:       "weka.core.Option",
193:       "weka.core.AbstractInstance",
194:       "weka.core.SparseInstance",
195:       "weka.classifiers.functions.supportVector.Kernel",
196:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
197:       "weka.core.BinarySparseInstance",
198:       "weka.core.UnassignedDatasetException",
199:       "weka.core.RevisionUtils",
200:       "weka.core.neighboursearch.NearestNeighbourSearch",
201:       "weka.core.neighboursearch.CoverTree",
202:       "weka.core.NormalizableDistance",
203:       "weka.core.EuclideanDistance",
204:       "weka.core.Range",
205:       "weka.core.Capabilities",
206:       "org.pentaho.packageManagement.PackageManager",
207:       "org.pentaho.packageManagement.DefaultPackageManager",
208:       "weka.core.Version",
209:       "weka.core.Environment",
210:       "weka.core.WekaPackageManager",
211:       "weka.core.neighboursearch.BallTree",
212:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
213:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
214:       "weka.core.neighboursearch.balltrees.BallSplitter",
215:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
216:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
217:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
218:       "weka.attributeSelection.ASEvaluation",
219:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
220:       "weka.attributeSelection.PrincipalComponents",
221:       "weka.classifiers.RandomizableClassifier",
222:       "weka.core.Tag",
223:       "weka.classifiers.functions.SGDText",
224:       "weka.classifiers.misc.SerializedClassifier",
225:       "weka.filters.Filter",
226:       "weka.filters.supervised.attribute.Discretize",
227:       "weka.classifiers.functions.SMO",
228:       "weka.classifiers.functions.supportVector.CachedKernel",
229:       "weka.classifiers.functions.supportVector.PolyKernel",
230:       "weka.core.SerializedObject",
231:       "weka.core.Instances",
232:       "weka.core.tokenizers.NGramTokenizer",
233:       "weka.classifiers.SingleClassifierEnhancer",
234:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
235:       "weka.classifiers.meta.CostSensitiveClassifier",
236:       "weka.classifiers.rules.ZeroR",
237:       "weka.classifiers.CostMatrix",
238:       "weka.core.stemmers.SnowballStemmer",
239:       "weka.core.DenseInstance",
240:       "weka.core.neighboursearch.balltrees.BallNode",
241:       "weka.core.TestInstances",
242:       "weka.core.Attribute",
243:       "weka.core.ProtectedProperties",
244:       "weka.core.tokenizers.AlphabeticTokenizer",
245:       "weka.core.neighboursearch.LinearNNSearch",
246:       "weka.core.stemmers.LovinsStemmer",
247:       "weka.core.stemmers.IteratedLovinsStemmer",
248:       "weka.classifiers.misc.InputMappedClassifier",
249:       "weka.core.converters.ArffLoader$ArffReader",
250:       "weka.core.Stopwords",
251:       "weka.classifiers.bayes.BayesNet",
252:       "weka.classifiers.bayes.net.BIFReader",
253:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
254:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
255:       "weka.classifiers.bayes.net.search.local.K2",
256:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
257:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
258:       "weka.classifiers.lazy.IBk",
259:       "weka.classifiers.MultipleClassifiersCombiner",
260:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
261:       "weka.classifiers.meta.Vote",
262:       "weka.classifiers.functions.VotedPerceptron",
263:       "weka.classifiers.bayes.NaiveBayesMultinomial",
264:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
265:       "weka.attributeSelection.OneRAttributeEval",
266:       "weka.classifiers.rules.DecisionTable",
267:       "weka.attributeSelection.ASSearch",
268:       "weka.attributeSelection.BestFirst",
269:       "weka.classifiers.trees.J48",
270:       "weka.classifiers.trees.RandomForest",
271:       "weka.classifiers.trees.RandomTree",
272:       "weka.core.FindWithCapabilities",
273:       "weka.core.SingleIndex",
274:       "weka.attributeSelection.AttributeSelection",
275:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
276:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
277:       "weka.classifiers.trees.m5.M5Base",
278:       "weka.classifiers.rules.M5Rules",
279:       "weka.classifiers.functions.LinearRegression",
280:       "weka.core.neighboursearch.KDTree",
281:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
282:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
283:       "weka.classifiers.bayes.NaiveBayes",
284:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
285:       "weka.filters.AllFilter",
286:       "weka.classifiers.meta.FilteredClassifier",
287:       "weka.filters.supervised.attribute.AttributeSelection",
288:       "weka.attributeSelection.CfsSubsetEval",
289:       "weka.attributeSelection.GreedyStepwise",
290:       "weka.classifiers.rules.PART",
291:       "weka.core.stemmers.Stemming",
292:       "weka.core.SelectedTag",
293:       "weka.core.WekaEnumeration",
294:       "weka.core.Attribute$1",
295:       "weka.core.MinkowskiDistance",
296:       "weka.core.TechnicalInformation",
297:       "weka.core.TechnicalInformation$Type",
298:       "weka.core.TechnicalInformation$Field",
299:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
300:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
301:       "weka.classifiers.meta.Stacking",
302:       "weka.classifiers.trees.LMT",
303:       "weka.classifiers.functions.GaussianProcesses",
304:       "weka.core.Check",
305:       "weka.core.CheckGOE",
306:       "weka.classifiers.trees.j48.ClassifierTree",
307:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
308:       "weka.classifiers.functions.SGD",
309:       "weka.filters.SimpleFilter",
310:       "weka.filters.SimpleStreamFilter",
311:       "weka.filters.MultiFilter",
312:       "weka.core.ClassDiscovery",
313:       "weka.classifiers.IteratedSingleClassifierEnhancer",
314:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
315:       "weka.classifiers.meta.AdaBoostM1",
316:       "weka.classifiers.trees.DecisionStump",
317:       "weka.classifiers.lazy.KStar",
318:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
319:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
320:       "weka.classifiers.meta.RandomCommittee",
321:       "weka.classifiers.meta.AttributeSelectedClassifier",
322:       "weka.attributeSelection.GainRatioAttributeEval",
323:       "weka.classifiers.meta.CVParameterSelection",
324:       "weka.core.FastVector",
325:       "weka.core.WekaException",
326:       "weka.core.UnsupportedAttributeTypeException",
327:       "weka.classifiers.bayes.NaiveBayesUpdateable",
328:       "weka.classifiers.meta.ClassificationViaRegression",
329:       "weka.classifiers.trees.M5P",
330:       "weka.estimators.Estimator",
331:       "weka.estimators.KernelEstimator",
332:       "weka.core.UnassignedClassException",
333:       "weka.classifiers.functions.SimpleLinearRegression",
334:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
335:       "weka.classifiers.rules.JRip",
336:       "weka.classifiers.meta.AdditiveRegression",
337:       "weka.classifiers.functions.supportVector.Puk",
338:       "weka.classifiers.rules.part.MakeDecList",
339:       "weka.estimators.NormalEstimator",
340:       "weka.attributeSelection.ReliefFAttributeEval",
341:       "weka.classifiers.meta.MultiClassClassifier",
342:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
343:       "weka.classifiers.functions.Logistic",
344:       "weka.estimators.PoissonEstimator",
345:       "weka.classifiers.meta.RegressionByDiscretization",
346:       "weka.filters.unsupervised.attribute.Discretize",
347:       "weka.classifiers.meta.RandomSubSpace",
348:       "weka.classifiers.trees.REPTree",
349:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
350:       "weka.estimators.DiscreteEstimator",
351:       "weka.attributeSelection.InfoGainAttributeEval",
352:       "weka.attributeSelection.CorrelationAttributeEval",
353:       "weka.classifiers.lazy.LWL",
354:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
355:       "weka.classifiers.functions.supportVector.RBFKernel",
356:       "weka.classifiers.functions.SMOreg",
357:       "weka.classifiers.functions.supportVector.RegOptimizer",
358:       "weka.classifiers.functions.supportVector.RegSMO",
359:       "weka.classifiers.functions.supportVector.RegSMOImproved",
360:       "weka.classifiers.meta.Bagging",
361:       "weka.classifiers.meta.LogitBoost",
362:       "weka.classifiers.functions.SimpleLogistic",
363:       "weka.classifiers.functions.MultilayerPerceptron",
364:       "weka.filters.unsupervised.attribute.NominalToBinary",
365:       "weka.classifiers.functions.neural.SigmoidUnit",
366:       "weka.classifiers.functions.neural.LinearUnit",
367:       "weka.core.AttributeStats",
368:       "weka.core.SerializationHelper",
369:       "weka.classifiers.rules.OneR",
370:       "weka.attributeSelection.WrapperSubsetEval",
371:       "weka.core.matrix.Matrix",
372:       "weka.estimators.MahalanobisEstimator",
373:       "weka.classifiers.functions.supportVector.StringKernel",
374:       "weka.classifiers.meta.MultiScheme",
375:       "weka.core.converters.ConverterUtils$DataSource",
376:       "weka.core.converters.AbstractLoader",
377:       "weka.core.converters.AbstractFileLoader",
378:       "weka.core.converters.ArffLoader",
379:       "weka.classifiers.functions.neural.NeuralConnection",
380:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
381:       "weka.classifiers.bayes.net.ParentSet",
382:       "weka.estimators.UnivariateEqualFrequencyHistogramEstimator",
383:       "weka.core.neighboursearch.PerformanceStats"
384:     );
385:   }
386: }

[MASTER] 13:46:09.032 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
SnowballStemmer snowballStemmer0 = new SnowballStemmer("ENC3g{6dPggeZU");
naiveBayesMultinomialText0.setStemmer(snowballStemmer0);
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer0 = new Integer(39);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = naiveBayesMultinomialText0.m_inputVector;
linkedHashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
naiveBayesMultinomialText0.setPeriodicPruning(39);
naiveBayesMultinomialText0.useStopListTipText();
naiveBayesMultinomialText0.pruneDictionary();

[MASTER] 13:46:11.707 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 13:46:12.709 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/mosa/tests/s1015/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 12625
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 13:47:17.387 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:47:17.398 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:47:17.400 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 13:47:17.556 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 13:47:17.560 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 13:47:17.561 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1729
* Using seed 1015
* Starting evolution
[MASTER] 13:48:21.267 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.filters.unsupervised.attribute.Discretize.getOptions()[Ljava/lang/String;: Line 299
[MASTER] 13:48:21.270 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.filters.unsupervised.attribute.Discretize.getOptions()[Ljava/lang/String;: I19 Branch 6 IF_ICMPGE L298 - false
[MASTER] 13:48:21.271 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 109: weka.filters.unsupervised.attribute.Discretize.getOptions()[Ljava/lang/String;:298 - ReplaceComparisonOperator >= -> -1
[MASTER] 13:48:21.271 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 114: weka.filters.unsupervised.attribute.Discretize.getOptions()[Ljava/lang/String;:299 - InsertUnaryOp Negation of i
[MASTER] 13:48:21.271 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 115: weka.filters.unsupervised.attribute.Discretize.getOptions()[Ljava/lang/String;:299 - InsertUnaryOp IINC 1 i
[MASTER] 13:48:21.271 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 116: weka.filters.unsupervised.attribute.Discretize.getOptions()[Ljava/lang/String;:299 - InsertUnaryOp IINC -1 i
[MASTER] 13:48:21.276 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.filters.unsupervised.attribute.Discretize.getOptions()[Ljava/lang/String;: I19 Branch 6 IF_ICMPGE L298 - false in context: weka.filters.unsupervised.attribute.Discretize:getOptions()[Ljava/lang/String;
* Search finished after 266s and 369 generations, 118976 statements, best individual has fitness: 4296.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 71%
* Total number of goals: 370
* Number of covered goals: 263
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 58%
* Total number of goals: 242
* Number of covered goals: 140
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 32
* Number of covered goals: 32
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 74%
* Total number of goals: 713
* Number of covered goals: 525
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 72
* Number of covered goals: 37
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 58%
* Total number of goals: 242
* Number of covered goals: 140
* Generated 79 tests with total length 472
* Resulting test suite's coverage: 70% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 26%
* Compiling and checking tests
[MASTER] 13:54:52.293 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 13:54:52.792 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 13:55:10.600 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 13:55:10.602 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize("SumSq");
discretize0.listOptions();
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("MAVt)9Cl", arrayList0, 3559);
Instances instances1 = new Instances(instances0, 3559, (-1717986916));
Attribute attribute0 = new Attribute(").\n", instances1, (-2686));
arrayList0.add(attribute0);
Instances instances2 = new Instances((String) null, arrayList0, 522);
discretize0.setInputFormat(instances2);

[MASTER] 13:55:17.376 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 13:55:17.377 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Discretize discretize0 = new Discretize();
Attribute attribute0 = new Attribute("31,-1240,3966,-2073432484,80,-1677,!257,-2028178997", "31,-1240,3966,-2073432484,80,-1677,!257,-2028178997");
discretize0.m_FindNumBins = true;
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
arrayList0.add(attribute0);
Instances instances0 = new Instances("real", arrayList0, 0);
Properties properties0 = new Properties();
ProtectedProperties protectedProperties0 = new ProtectedProperties(properties0);
Attribute attribute1 = new Attribute("mTnzD{s@kYE", instances0, protectedProperties0);
arrayList0.add(attribute1);
Instances instances1 = new Instances("date", arrayList0, 0);
discretize0.setInputFormat(instances1);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/mosa/tests/s1015/107_weka/evosuite-tests
* Done!

* Computation finished
