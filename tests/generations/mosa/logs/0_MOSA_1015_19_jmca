* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 12624
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 13:24:04.863 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:24:04.901 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:24:04.901 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 13:24:04.916 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 4855
* Using seed 1015
* Starting evolution
[MASTER] 13:24:20.860 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager.setDebugStream(Ljava/io/PrintStream;)V: Line 10
[MASTER] 13:24:20.863 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager.setDebugStream(Ljava/io/PrintStream;)V: root-Branch
[MASTER] 13:24:20.878 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager.setDebugStream(Ljava/io/PrintStream;)V
[MASTER] 13:24:20.878 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager.setDebugStream(Ljava/io/PrintStream;)V
[MASTER] 13:24:20.880 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager.setDebugStream(Ljava/io/PrintStream;)V: root-Branch in context: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager:setDebugStream(Ljava/io/PrintStream;)V
* Search finished after 276s and 71 generations, 43991 statements, best individual has fitness: 16952.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 52%
* Total number of goals: 981
* Number of covered goals: 508
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 59%
* Total number of goals: 1707
* Number of covered goals: 1001
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 46%
* Total number of goals: 434
* Number of covered goals: 200
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 4
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 91%
* Total number of goals: 11
* Number of covered goals: 10
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 91%
* Total number of goals: 11
* Number of covered goals: 10
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 59%
* Total number of goals: 1707
* Number of covered goals: 1000
* Generated 134 tests with total length 1111
* Resulting test suite's coverage: 56% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 20%
* Compiling and checking tests
[MASTER] 13:31:02.948 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<2> but was:<1>
[MASTER] 13:31:02.949 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("F5R*Voi.oH;Bt \"ow");
stringReader0.markSupported();
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
stringReader0.read();
Token token0 = new Token();
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
javaParserTokenManager0.getNextToken();
JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
javaParserTokenManager1.getNextToken();
javaParserTokenManager1.jjFillToken();
assertEquals(2, javaCharStream0.bufpos);
assertEquals(3, javaCharStream0.getColumn());


[MASTER] 13:31:03.869 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<7> but was:<5>
[MASTER] 13:31:03.869 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("pa,2FRe~}g+|vo}?vD");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
Token token0 = javaParserTokenManager0.getNextToken();
javaParserTokenManager0.getNextToken();
Token token1 = javaParserTokenManager0.getNextToken();
javaParserTokenManager0.SkipLexicalActions(token0);
javaParserTokenManager0.SkipLexicalActions(token1);
assertEquals(4, javaCharStream0.getBeginColumn());
assertEquals(7, javaCharStream0.getColumn());


[MASTER] 13:31:04.628 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<3>
[MASTER] 13:31:04.628 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("aX(j2AVh\"9ff_zz");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
javaCharStream0.inBuf = (-3071);
int int0 = JavaParserConstants.CASE;
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
Token token0 = new Token();
javaParserTokenManager0.getNextToken();
javaParserTokenManager0.getNextToken();
javaParserTokenManager0.getNextToken();
javaParserTokenManager0.getNextToken();
assertEquals(0, javaCharStream0.bufpos);
assertEquals(15, javaCharStream0.getBeginColumn());


[MASTER] 13:31:04.737 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<0>
[MASTER] 13:31:04.739 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("F5R*Voi.oH;Bt \"ow");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
char[] charArray0 = new char[5];
stringReader0.read(charArray0);
stringReader0.read(charArray0);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
javaParserTokenManager0.curLexState = (-1);
stringReader0.reset();
javaParserTokenManager0.getNextToken();
JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
Token token0 = javaParserTokenManager1.getNextToken();
assertEquals(1, javaCharStream0.bufpos);
assertEquals(74, token0.kind);


[MASTER] 13:31:05.250 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<4> but was:<1>
[MASTER] 13:31:05.250 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Token.GTToken token_GTToken0 = new Token.GTToken();
StringReader stringReader0 = new StringReader("44ZKc&1pC)Ge~7f&?X");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1476), 0);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
javaParserTokenManager0.getNextToken();
Token token0 = javaParserTokenManager0.jjFillToken();
assertEquals(4, javaCharStream0.bufpos);
assertEquals(74, token0.kind);


[MASTER] 13:31:05.314 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<2> but was:<1>
[MASTER] 13:31:05.314 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("4Q=z~qwPan*");
char[] charArray0 = new char[0];
stringReader0.read(charArray0);
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 449, 3710, 449);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
javaParserTokenManager0.getNextToken();
javaParserTokenManager0.getNextToken();
assertEquals(2, javaCharStream0.bufpos);
assertEquals(3712, javaCharStream0.getColumn());


[MASTER] 13:31:06.422 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<6> but was:<4>
[MASTER] 13:31:06.422 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("F7d*3oi.oH;BM \"o\"");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
Token token0 = javaParserTokenManager0.getNextToken();
javaParserTokenManager0.SkipLexicalActions(token0);
javaParserTokenManager0.getNextToken();
javaParserTokenManager0.getNextToken();
assertEquals(6, javaCharStream0.bufpos);
assertEquals(7, javaCharStream0.getColumn());


[MASTER] 13:31:06.609 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<5> but was:<1>
[MASTER] 13:31:06.610 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("aX(j2AVh\"9ff_zz");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
javaCharStream0.inBuf = (-3071);
int int0 = JavaParserConstants.CASE;
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
Token token0 = new Token();
javaParserTokenManager0.getNextToken();
javaParserTokenManager0.getNextToken();
javaParserTokenManager0.jjround = (-702);
javaParserTokenManager0.getNextToken();
javaParserTokenManager0.jjFillToken();
assertEquals(5, javaCharStream0.bufpos);
assertEquals(15, javaCharStream0.getEndColumn());


[MASTER] 13:31:06.803 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<4> but was:<1>
[MASTER] 13:31:06.804 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("pa,2FRe~}g+|vo}?vD");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
stringReader0.read();
javaParserTokenManager0.getNextToken();
javaParserTokenManager0.getNextToken();
javaParserTokenManager0.getNextToken();
Token token0 = javaParserTokenManager0.getNextToken();
javaParserTokenManager0.TokenLexicalActions(token0);
assertEquals(4, javaCharStream0.bufpos);
assertEquals(7, javaCharStream0.getColumn());


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing JUnit test case 'JavaParserTokenManager_ESTest' to /home/ubuntu/termite/mosa/tests/s1015/19_jmca/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.SimpleNode
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 12625
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 13:36:56.997 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:36:57.049 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:36:57.057 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 13:36:57.622 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.SimpleNode
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 360
* Using seed 1015
* Starting evolution
[MASTER] 13:37:10.877 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was com.soops.CEN4010.JMCA.JParser.SimpleNode.dump(Ljava/lang/String;Ljava/io/Writer;)V: Line 155
[MASTER] 13:37:10.879 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch com.soops.CEN4010.JMCA.JParser.SimpleNode.dump(Ljava/lang/String;Ljava/io/Writer;)V: I231 Branch 26 IFNULL L154 - false in context: com.soops.CEN4010.JMCA.JParser.SimpleNode:dump(Ljava/lang/String;Ljava/io/Writer;)V
* Search finished after 241s and 256 generations, 110895 statements, best individual has fitness: 184.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 62
* Number of covered goals: 61
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 99%
* Total number of goals: 67
* Number of covered goals: 66
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 89%
* Total number of goals: 121
* Number of covered goals: 108
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 59%
* Total number of goals: 17
* Number of covered goals: 10
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 99%
* Total number of goals: 67
* Number of covered goals: 66
* Generated 44 tests with total length 216
* Resulting test suite's coverage: 94% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 90%
* Compiling and checking tests
[MASTER] 13:44:18.449 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test26 -> class java.lang.StackOverflowError: null
[MASTER] 13:44:18.451 [logback-1] WARN  JUnitAnalyzer - Failing test:
 SimpleNode simpleNode0 = new SimpleNode(3);
StringWriter stringWriter0 = new StringWriter();
String string0 = "|puLn";
Node[] nodeArray0 = new Node[3];
nodeArray0[0] = (Node) simpleNode0;
nodeArray0[1] = (Node) simpleNode0;
nodeArray0[2] = (Node) simpleNode0;
simpleNode0.children = nodeArray0;
simpleNode0.setIdentifier("|puLn");
simpleNode0.dump(string0, stringWriter0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'SimpleNode_ESTest' to /home/ubuntu/termite/mosa/tests/s1015/19_jmca/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.JavaCharStream
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 12623
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.JavaCharStream
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1743
* Using seed 1015
* Starting evolution
[MASTER] 13:58:22.893 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] com.soops.CEN4010.JMCA.JParser.JavaCharStream.ReInit(Ljava/io/InputStream;)V
[MASTER] 13:58:48.341 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] com.soops.CEN4010.JMCA.JParser.JavaCharStream.getColumn()I
[MASTER] 14:02:13.782 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 685: com.soops.CEN4010.JMCA.JParser.JavaCharStream.AdjustBuffSize()V:192 - ReplaceComparisonOperator != -> <
* Search finished after 280s and 69 generations, 35832 statements, best individual has fitness: 504.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 92%
* Total number of goals: 239
* Number of covered goals: 221
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 94%
* Total number of goals: 216
* Number of covered goals: 203
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 98%
* Total number of goals: 974
* Number of covered goals: 957
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 92%
* Total number of goals: 36
* Number of covered goals: 33
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 31
* Number of covered goals: 31
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 31
* Number of covered goals: 31
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 94%
* Total number of goals: 216
* Number of covered goals: 203
* Generated 173 tests with total length 943
* Resulting test suite's coverage: 96% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 47%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'JavaCharStream_ESTest' to /home/ubuntu/termite/mosa/tests/s1015/19_jmca/evosuite-tests
* Done!

* Computation finished
