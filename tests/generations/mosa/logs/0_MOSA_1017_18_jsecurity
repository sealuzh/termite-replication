* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: org.jsecurity.authc.UsernamePasswordToken
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/18_jsecurity/evosuite-files/evosuite.properties
* Connecting to master process on port 10121
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class org.jsecurity.authc.UsernamePasswordToken
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 213
* Using seed 1017
* Starting evolution
* Search finished after 299s and 2263 generations, 846363 statements, best individual has fitness: 56.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 54
* Number of covered goals: 54
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 29
* Number of covered goals: 29
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100% (no goals)
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 83%
* Total number of goals: 36
* Number of covered goals: 30
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 29
* Number of covered goals: 29
* Generated 34 tests with total length 78
* Resulting test suite's coverage: 97% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 64%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing JUnit test case 'UsernamePasswordToken_ESTest' to /home/ubuntu/termite/mosa/tests/s1017/18_jsecurity/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: org.jsecurity.web.DefaultWebSecurityManager
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/18_jsecurity/evosuite-files/evosuite.properties
* Connecting to master process on port 10124
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 17:12:24.671 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:12:24.764 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:12:24.767 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 17:12:25.338 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class org.jsecurity.web.DefaultWebSecurityManager
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 468
* Using seed 1017
* Starting evolution
* Search finished after 209s and 141 generations, 29382 statements, best individual has fitness: 976.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 77%
* Total number of goals: 97
* Number of covered goals: 75
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 67%
* Total number of goals: 67
* Number of covered goals: 45
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 79%
* Total number of goals: 162
* Number of covered goals: 128
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 38%
* Total number of goals: 29
* Number of covered goals: 11
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 66%
* Total number of goals: 67
* Number of covered goals: 44
* Generated 32 tests with total length 118
* Resulting test suite's coverage: 75% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 35%
* Compiling and checking tests
[MASTER] 17:16:23.455 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalStateException: No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
[MASTER] 17:16:23.455 [logback-1] WARN  JUnitAnalyzer - Failing test:
 SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager(simpleAccountRealm0);
Subject subject0 = defaultWebSecurityManager0.getSubject();
defaultWebSecurityManager0.bind(subject0, (ServletRequest) null, (ServletResponse) null);
boolean boolean0 = defaultWebSecurityManager0.isAuthenticated((Session) null, (ServletRequest) null, (ServletResponse) null);
assertTrue(defaultWebSecurityManager0.isHttpSessionMode());
assertFalse(boolean0);


[MASTER] 17:16:23.991 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalStateException: No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
[MASTER] 17:16:23.992 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
doReturn((String) null).when(servletRequest0).getRemoteHost();
ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
defaultWebSecurityManager0.getPrincipals((Session) null, servletRequestWrapper0, servletResponseWrapper0);
defaultWebSecurityManager0.createSubject((PrincipalCollection) null, true, (Session) null, (ServletRequest) servletRequestWrapper0, (ServletResponse) servletResponseWrapper0);
defaultWebSecurityManager0.getSubject();
defaultWebSecurityManager0.createSubject();

* Writing JUnit test case 'DefaultWebSecurityManager_ESTest' to /home/ubuntu/termite/mosa/tests/s1017/18_jsecurity/evosuite-tests
* Done!

* Computation finished
