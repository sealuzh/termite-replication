* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: com.lts.application.international.MessageFormatter
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/78_caloriecount/evosuite-files/evosuite.properties
* Connecting to master process on port 21351
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 06:51:09.327 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:51:09.551 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:51:09.552 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 06:51:10.387 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 06:51:11.186 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 06:51:11.195 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class com.lts.application.international.MessageFormatter
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 482
* Using seed 1010
* Starting evolution
[MASTER] 06:51:30.024 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: com.lts.application.international.MessageFormatter.buildList([Ljava/lang/Object;)Ljava/util/List;:NonNull:java.util.List:isEmpty()Z:True
[MASTER] 06:51:30.024 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: com.lts.application.international.MessageFormatter.buildList([Ljava/lang/Object;)Ljava/util/List;:NonNull:java.util.List:size()I:Zero
[MASTER] 06:51:48.241 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 06:52:11.301 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
[MASTER] 06:54:16.794 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 250s and 651 generations, 157439 statements, best individual has fitness: 576.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 91%
* Total number of goals: 130
* Number of covered goals: 118
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 88%
* Total number of goals: 52
* Number of covered goals: 46
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 94%
* Total number of goals: 150
* Number of covered goals: 141
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 38%
* Total number of goals: 50
* Number of covered goals: 19
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 96%
* Total number of goals: 24
* Number of covered goals: 23
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 88%
* Total number of goals: 52
* Number of covered goals: 46
* Generated 43 tests with total length 170
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 28%
* Compiling and checking tests
* Writing JUnit test case 'MessageFormatter_ESTest' to /home/ubuntu/termite/mosa/tests/s1010/78_caloriecount/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: com.lts.io.ArchiveScanner
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/78_caloriecount/evosuite-files/evosuite.properties
* Connecting to master process on port 21352
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 07:14:25.887 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 07:14:25.902 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 07:14:26.004 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 07:14:26.565 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 07:14:27.404 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 07:14:27.413 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class com.lts.io.ArchiveScanner
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 380
* Using seed 1010
* Starting evolution
[MASTER] 07:15:15.083 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
* Search finished after 292s and 899 generations, 267002 statements, best individual has fitness: 312.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 67
* Number of covered goals: 58
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 87%
* Total number of goals: 45
* Number of covered goals: 39
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 202
* Number of covered goals: 186
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 80%
* Total number of goals: 5
* Number of covered goals: 4
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 87%
* Total number of goals: 45
* Number of covered goals: 39
* Generated 46 tests with total length 315
* Resulting test suite's coverage: 90% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 56%
* Compiling and checking tests
[MASTER] 07:19:42.946 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 07:19:42.946 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ImprovedFile improvedFile0 = new ImprovedFile(".ear");
ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
boolean boolean0 = archiveScanner0.isArchive(improvedFile0);
assertFalse(boolean0);


[MASTER] 07:19:43.118 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<2>
[MASTER] 07:19:43.118 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ImprovedFile improvedFile0 = new ImprovedFile(".JAR", ".JAR");
ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
int int0 = archiveScanner0.toFileType(improvedFile0);
assertEquals(0, int0);


[MASTER] 07:19:43.232 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<2> but was:<0>
[MASTER] 07:19:43.232 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ImprovedFile improvedFile0 = new ImprovedFile("fy4J,RHJ|Po:", "fy4J,RHJ|Po:");
ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
int int0 = archiveScanner0.toFileType(improvedFile0);
assertEquals(2, int0);


[MASTER] 07:19:43.348 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 07:19:43.348 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ImprovedFile improvedFile0 = new ImprovedFile("fy4J,RHJ|Po:", "fy4J,RHJ|Po:");
ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
boolean boolean0 = archiveScanner0.isArchive(improvedFile0);
assertTrue(boolean0);


[MASTER] 07:19:48.035 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 07:19:48.036 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ImprovedFile improvedFile0 = new ImprovedFile("n8?Nt<v8je~Ka=Q", "n8?Nt<v8je~Ka=Q");
ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
archiveScanner0.basedir = (File) improvedFile0;
archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
String[] stringArray0 = new String[0];
Vector<String> vector0 = new Vector<String>(1, 2147483645);
archiveScanner0.filesNotIncluded = vector0;
archiveScanner0.excludes = stringArray0;
vector0.add("n8?Nt<v8je~Ka=Q");
improvedFile0.createTempDir();
String string0 = ".zip";
archiveScanner0.processFile("/Delete");

[MASTER] 07:19:49.184 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<2> but was:<0>
[MASTER] 07:19:49.185 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ImprovedFile improvedFile0 = new ImprovedFile("n8?Nt<8je~Ka=Q", "n8?Nt<8je~Ka=Q");
ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
String[] stringArray0 = new String[0];
Vector<InputStream> vector0 = new Vector<InputStream>();
archiveScanner0.filesIncluded = vector0;
archiveScanner0.excludes = stringArray0;
archiveScanner0.processFile(".ZIP");
int int0 = archiveScanner0.toFileType(improvedFile0);
assertEquals(2, int0);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing JUnit test case 'ArchiveScanner_ESTest' to /home/ubuntu/termite/mosa/tests/s1010/78_caloriecount/evosuite-tests
* Done!

* Computation finished
