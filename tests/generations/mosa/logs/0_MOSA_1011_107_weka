* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 5945
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 07:31:41.576 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 07:31:41.584 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 07:31:41.588 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 07:31:41.728 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 07:31:41.734 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 07:31:41.746 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1412
* Using seed 1011
* Starting evolution
[MASTER] 07:32:09.499 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 07:32:09.499 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 07:32:12.547 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 170: weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizeInstance(Lweka/core/Instance;Z)V:406 - ReplaceComparisonOperator >= -> ==
[MASTER] 07:33:22.008 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 265s and 315 generations, 129285 statements, best individual has fitness: 1448.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 93%
* Total number of goals: 338
* Number of covered goals: 313
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 87%
* Total number of goals: 194
* Number of covered goals: 168
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 26
* Number of covered goals: 26
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 89%
* Total number of goals: 476
* Number of covered goals: 424
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 55%
* Total number of goals: 112
* Number of covered goals: 62
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 86%
* Total number of goals: 194
* Number of covered goals: 167
* Generated 86 tests with total length 596
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 58%
* Compiling and checking tests
[MASTER] 07:40:53.199 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_84_1573717253166/weka/classifiers/bayes/NaiveBayesMultinomialText_84_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_84_1573717253166/weka/classifiers/bayes/NaiveBayesMultinomialText_84_tmp__ESTest_scaffolding.java]]
[MASTER] 07:40:53.199 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 07:40:53.199 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 07:40:53.204 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 07:40:53.204 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 07:40:53.204 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 07:40:53.205 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_84_1573717253166/weka/classifiers/bayes/NaiveBayesMultinomialText_84_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Nov 14 07:40:53 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_84_tmp__ESTest extends NaiveBayesMultinomialText_84_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=1.1217186091313738
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
29:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
30:       naiveBayesMultinomialText0.setPeriodicPruning(2193);
31:       naiveBayesMultinomialText0.pruneDictionary();
32:       assertEquals(2193, naiveBayesMultinomialText0.getPeriodicPruning());
33:   }
34: }
RegularFileObject[/tmp/EvoSuite_84_1573717253166/weka/classifiers/bayes/NaiveBayesMultinomialText_84_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Nov 14 07:40:53 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_84_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_84_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.CostMatrix",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.core.stemmers.Stemmer",
101:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.estimators.IncrementalEstimator",
105:       "weka.estimators.Estimator$Builder",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.core.Utils",
108:       "weka.core.CustomDisplayStringProvider",
109:       "weka.core.tokenizers.Tokenizer",
110:       "weka.core.NormalizableDistance",
111:       "weka.core.NoSupportForMissingValuesException",
112:       "weka.classifiers.UpdateableClassifier",
113:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
114:       "weka.core.MultiInstanceCapabilitiesHandler",
115:       "weka.core.Copyable",
116:       "weka.core.Capabilities",
117:       "weka.core.BinarySparseInstance",
118:       "weka.filters.supervised.attribute.NominalToBinary",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
120:       "weka.core.SerializedObject",
121:       "weka.clusterers.UpdateableClusterer",
122:       "weka.core.Summarizable",
123:       "weka.core.AdditionalMeasureProducer",
124:       "weka.core.neighboursearch.balltrees.BallNode",
125:       "org.pentaho.packageManagement.PackageManager$1",
126:       "weka.core.Drawable",
127:       "weka.core.CapabilitiesHandler",
128:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
129:       "weka.core.AbstractInstance",
130:       "weka.core.scripting.JythonObject",
131:       "weka.core.SelectedTag",
132:       "org.pentaho.packageManagement.DefaultPackage",
133:       "weka.core.Version",
134:       "weka.core.Tag",
135:       "weka.classifiers.AbstractClassifier",
136:       "weka.core.OptionHandler",
137:       "weka.core.WekaException",
138:       "weka.core.Range",
139:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
140:       "weka.core.scripting.JythonSerializableObject",
141:       "weka.classifiers.Classifier",
142:       "weka.core.Capabilities$Capability",
143:       "weka.core.SparseInstance",
144:       "org.pentaho.packageManagement.PackageManager",
145:       "weka.estimators.PoissonEstimator",
146:       "weka.core.tokenizers.WordTokenizer",
147:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
148:       "weka.core.stemmers.SnowballStemmer",
149:       "weka.core.stemmers.LovinsStemmer",
150:       "weka.classifiers.Evaluation",
151:       "weka.core.WekaPackageManager",
152:       "weka.filters.SupervisedFilter",
153:       "weka.core.TechnicalInformationHandler",
154:       "weka.core.neighboursearch.LinearNNSearch",
155:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
156:       "weka.core.Option",
157:       "weka.classifiers.meta.CostSensitiveClassifier",
158:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
159:       "weka.core.neighboursearch.PerformanceStats",
160:       "weka.filters.Sourcable",
161:       "weka.core.Attribute",
162:       "weka.core.Stopwords",
163:       "weka.core.UnassignedDatasetException",
164:       "weka.core.tokenizers.NGramTokenizer",
165:       "weka.classifiers.RandomizableClassifier",
166:       "weka.classifiers.SingleClassifierEnhancer",
167:       "weka.core.RevisionUtils",
168:       "weka.core.Instance",
169:       "weka.estimators.Estimator",
170:       "weka.core.ProtectedProperties",
171:       "weka.core.AttributeStats",
172:       "weka.core.WeightedInstancesHandler",
173:       "weka.core.neighboursearch.NearestNeighbourSearch",
174:       "weka.core.Randomizable",
175:       "weka.classifiers.functions.SGD",
176:       "weka.core.EuclideanDistance",
177:       "weka.core.Instances",
178:       "weka.filters.unsupervised.attribute.Normalize",
179:       "weka.classifiers.bayes.NaiveBayesMultinomial",
180:       "weka.core.UnassignedClassException",
181:       "weka.classifiers.rules.ZeroR",
182:       "weka.core.stemmers.Stemming",
183:       "weka.core.TechnicalInformation",
184:       "weka.core.UnsupportedAttributeTypeException",
185:       "weka.classifiers.Sourcable",
186:       "weka.core.RevisionHandler",
187:       "weka.classifiers.evaluation.output.prediction.PlainText",
188:       "weka.core.xml.XMLSerialization",
189:       "weka.classifiers.xml.XMLClassifier",
190:       "weka.filters.Filter"
191:     );
192:   } 
193: 
194:   private static void resetClasses() {
195:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_84_tmp__ESTest_scaffolding.class.getClassLoader()); 
196: 
197:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
198:       "weka.classifiers.AbstractClassifier",
199:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
200:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
201:       "weka.core.Capabilities$Capability",
202:       "weka.core.tokenizers.Tokenizer",
203:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
204:       "weka.core.tokenizers.WordTokenizer",
205:       "weka.core.stemmers.NullStemmer",
206:       "weka.core.Utils",
207:       "weka.core.Capabilities",
208:       "org.pentaho.packageManagement.PackageManager",
209:       "org.pentaho.packageManagement.DefaultPackageManager",
210:       "weka.core.Version",
211:       "weka.core.Environment",
212:       "weka.core.WekaPackageManager",
213:       "weka.classifiers.Evaluation",
214:       "weka.core.Option",
215:       "weka.classifiers.RandomizableClassifier",
216:       "weka.core.Tag",
217:       "weka.classifiers.functions.SGDText",
218:       "weka.core.AbstractInstance",
219:       "weka.core.SparseInstance",
220:       "weka.core.BinarySparseInstance",
221:       "weka.core.neighboursearch.balltrees.BallNode",
222:       "weka.classifiers.bayes.NaiveBayesMultinomial",
223:       "weka.attributeSelection.ASEvaluation",
224:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
225:       "weka.attributeSelection.PrincipalComponents",
226:       "weka.core.UnassignedDatasetException",
227:       "weka.classifiers.trees.REPTree",
228:       "weka.core.neighboursearch.NearestNeighbourSearch",
229:       "weka.core.neighboursearch.KDTree",
230:       "weka.core.NormalizableDistance",
231:       "weka.core.EuclideanDistance",
232:       "weka.core.Range",
233:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
234:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
235:       "weka.classifiers.bayes.NaiveBayes",
236:       "weka.core.SerializedObject",
237:       "weka.core.stemmers.LovinsStemmer",
238:       "weka.core.stemmers.IteratedLovinsStemmer",
239:       "weka.core.neighboursearch.CoverTree",
240:       "weka.core.Instances",
241:       "weka.core.stemmers.SnowballStemmer",
242:       "weka.core.stemmers.Stemming",
243:       "weka.core.TestInstances",
244:       "weka.core.Attribute",
245:       "weka.core.ProtectedProperties",
246:       "weka.core.DenseInstance",
247:       "weka.core.neighboursearch.BallTree",
248:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
249:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
250:       "weka.core.neighboursearch.balltrees.BallSplitter",
251:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
252:       "weka.core.FindWithCapabilities",
253:       "weka.core.SingleIndex",
254:       "weka.core.ClassDiscovery",
255:       "weka.core.RevisionUtils",
256:       "weka.core.tokenizers.NGramTokenizer",
257:       "weka.filters.Filter",
258:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
259:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
260:       "weka.core.neighboursearch.LinearNNSearch",
261:       "weka.classifiers.misc.SerializedClassifier",
262:       "weka.classifiers.SingleClassifierEnhancer",
263:       "weka.classifiers.misc.InputMappedClassifier",
264:       "weka.classifiers.rules.ZeroR",
265:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
266:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
267:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
268:       "weka.core.Stopwords",
269:       "weka.filters.supervised.attribute.Discretize",
270:       "weka.classifiers.IteratedSingleClassifierEnhancer",
271:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
272:       "weka.classifiers.meta.AdaBoostM1",
273:       "weka.classifiers.trees.DecisionStump",
274:       "weka.classifiers.lazy.LWL",
275:       "weka.core.TechnicalInformation",
276:       "weka.core.TechnicalInformation$Type",
277:       "weka.core.TechnicalInformation$Field",
278:       "weka.attributeSelection.AttributeSelection",
279:       "weka.classifiers.lazy.IBk",
280:       "weka.core.tokenizers.AlphabeticTokenizer",
281:       "weka.classifiers.bayes.BayesNet",
282:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
283:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
284:       "weka.classifiers.bayes.net.search.local.K2",
285:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
286:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
287:       "weka.classifiers.meta.FilteredClassifier",
288:       "weka.filters.supervised.attribute.AttributeSelection",
289:       "weka.attributeSelection.CfsSubsetEval",
290:       "weka.attributeSelection.ASSearch",
291:       "weka.attributeSelection.GreedyStepwise",
292:       "weka.attributeSelection.BestFirst",
293:       "weka.classifiers.trees.J48",
294:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
295:       "weka.classifiers.functions.MultilayerPerceptron",
296:       "weka.core.FastVector",
297:       "weka.filters.unsupervised.attribute.NominalToBinary",
298:       "weka.classifiers.functions.neural.SigmoidUnit",
299:       "weka.classifiers.functions.neural.LinearUnit",
300:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
301:       "weka.filters.SimpleFilter",
302:       "weka.filters.SimpleStreamFilter",
303:       "weka.filters.MultiFilter",
304:       "weka.filters.AllFilter",
305:       "weka.classifiers.functions.supportVector.Kernel",
306:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
307:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
308:       "weka.classifiers.meta.CostSensitiveClassifier",
309:       "weka.classifiers.CostMatrix",
310:       "weka.core.WekaException",
311:       "weka.core.converters.ArffLoader$ArffReader",
312:       "weka.classifiers.trees.m5.M5Base",
313:       "weka.classifiers.rules.M5Rules",
314:       "weka.classifiers.functions.LinearRegression",
315:       "weka.core.UnsupportedAttributeTypeException",
316:       "weka.classifiers.functions.GaussianProcesses",
317:       "weka.classifiers.functions.supportVector.CachedKernel",
318:       "weka.classifiers.functions.supportVector.PolyKernel",
319:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
320:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
321:       "weka.classifiers.meta.RandomCommittee",
322:       "weka.classifiers.trees.RandomTree",
323:       "weka.estimators.Estimator",
324:       "weka.estimators.PoissonEstimator",
325:       "weka.core.UnassignedClassException",
326:       "weka.classifiers.MultipleClassifiersCombiner",
327:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
328:       "weka.classifiers.meta.MultiScheme",
329:       "weka.classifiers.meta.CVParameterSelection",
330:       "weka.classifiers.trees.RandomForest",
331:       "weka.classifiers.functions.supportVector.RBFKernel",
332:       "weka.classifiers.bayes.net.BIFReader",
333:       "weka.classifiers.meta.RegressionByDiscretization",
334:       "weka.filters.unsupervised.attribute.Discretize",
335:       "weka.classifiers.trees.j48.ClassifierTree",
336:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
337:       "weka.estimators.KernelEstimator",
338:       "weka.classifiers.functions.SMOreg",
339:       "weka.classifiers.functions.supportVector.RegOptimizer",
340:       "weka.classifiers.functions.supportVector.RegSMO",
341:       "weka.classifiers.functions.supportVector.RegSMOImproved",
342:       "weka.classifiers.meta.AdditiveRegression",
343:       "weka.estimators.NormalEstimator",
344:       "weka.attributeSelection.WrapperSubsetEval",
345:       "weka.classifiers.meta.Bagging",
346:       "weka.classifiers.meta.Vote",
347:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
348:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
349:       "weka.classifiers.meta.Stacking",
350:       "weka.classifiers.rules.DecisionTable",
351:       "weka.classifiers.rules.JRip",
352:       "weka.classifiers.bayes.NaiveBayesUpdateable",
353:       "weka.attributeSelection.OneRAttributeEval",
354:       "weka.classifiers.lazy.KStar",
355:       "weka.core.converters.ConverterUtils$DataSource",
356:       "weka.core.converters.AbstractLoader",
357:       "weka.core.converters.AbstractFileLoader",
358:       "weka.core.converters.ArffLoader",
359:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
360:       "weka.classifiers.functions.supportVector.StringKernel",
361:       "weka.classifiers.functions.SMO",
362:       "weka.classifiers.meta.AttributeSelectedClassifier",
363:       "weka.attributeSelection.InfoGainAttributeEval",
364:       "weka.attributeSelection.GainRatioAttributeEval",
365:       "weka.classifiers.trees.LMT",
366:       "weka.classifiers.rules.OneR",
367:       "weka.estimators.DiscreteEstimator",
368:       "weka.core.WekaEnumeration",
369:       "weka.core.Attribute$1",
370:       "weka.classifiers.functions.Logistic",
371:       "weka.classifiers.meta.ClassificationViaRegression",
372:       "weka.classifiers.trees.M5P",
373:       "weka.classifiers.functions.supportVector.Puk",
374:       "weka.attributeSelection.CorrelationAttributeEval",
375:       "weka.classifiers.functions.SimpleLogistic",
376:       "weka.classifiers.functions.SGD",
377:       "weka.core.Javadoc",
378:       "weka.core.GlobalInfoJavadoc",
379:       "weka.classifiers.rules.PART",
380:       "weka.classifiers.rules.part.MakeDecList",
381:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
382:       "weka.core.matrix.Matrix",
383:       "weka.estimators.MahalanobisEstimator",
384:       "weka.core.Check",
385:       "weka.core.CheckOptionHandler",
386:       "weka.classifiers.meta.MultiClassClassifier",
387:       "weka.classifiers.meta.LogitBoost",
388:       "weka.classifiers.functions.VotedPerceptron",
389:       "weka.core.ListOptions",
390:       "weka.core.AttributeStats",
391:       "weka.experiment.Stats",
392:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
393:       "weka.attributeSelection.ReliefFAttributeEval",
394:       "weka.classifiers.functions.SimpleLinearRegression",
395:       "weka.core.OptionHandlerJavadoc",
396:       "weka.core.ChebyshevDistance",
397:       "weka.core.neighboursearch.PerformanceStats",
398:       "weka.core.MinkowskiDistance"
399:     );
400:   }
401: }

[MASTER] 07:40:53.205 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
naiveBayesMultinomialText0.setPeriodicPruning(2193);
naiveBayesMultinomialText0.pruneDictionary();
assertEquals(2193, naiveBayesMultinomialText0.getPeriodicPruning());


[MASTER] 07:40:53.254 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_85_1573717253206/weka/classifiers/bayes/NaiveBayesMultinomialText_85_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_85_1573717253206/weka/classifiers/bayes/NaiveBayesMultinomialText_85_tmp__ESTest_scaffolding.java]]
[MASTER] 07:40:53.254 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 07:40:53.254 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 07:40:53.254 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 07:40:53.255 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 07:40:53.255 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 07:40:53.255 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 07:40:53.255 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 07:40:53.256 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_85_1573717253206/weka/classifiers/bayes/NaiveBayesMultinomialText_85_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Nov 14 07:40:53 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import java.util.LinkedHashMap;
13: import java.util.Map;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.AbstractClassifier;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_85_tmp__ESTest extends NaiveBayesMultinomialText_85_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=1.6868977693384444
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
31:       Integer integer0 = new Integer((-2953));
32:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
33:       hashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
34:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
35:       String[] stringArray0 = new String[4];
36:       stringArray0[0] = "j=dex)OtA6=`%Cl I";
37:       stringArray0[1] = "P";
38:       stringArray0[2] = "";
39:       stringArray0[3] = "5qCU*'NwmE2";
40:       AbstractClassifier.runClassifier(naiveBayesMultinomialText0, stringArray0);
41:       naiveBayesMultinomialText0.setPeriodicPruning(2166);
42:       // Undeclared exception!
43:       try { 
44:         naiveBayesMultinomialText0.pruneDictionary();
45:         fail("Expecting exception: NullPointerException");
46:       
47:       } catch(NullPointerException e) {
48:          //
49:          // no message in exception (getMessage() returned null)
50:          //
51:          verifyException("weka.classifiers.bayes.NaiveBayesMultinomialText", e);
52:       }
53:   }
54: }
RegularFileObject[/tmp/EvoSuite_85_1573717253206/weka/classifiers/bayes/NaiveBayesMultinomialText_85_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Nov 14 07:40:53 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_85_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_85_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.classifiers.CostMatrix",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.core.stemmers.Stemmer",
101:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.estimators.IncrementalEstimator",
105:       "weka.estimators.Estimator$Builder",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.core.Utils",
108:       "weka.core.CustomDisplayStringProvider",
109:       "weka.core.tokenizers.Tokenizer",
110:       "weka.core.NormalizableDistance",
111:       "weka.core.NoSupportForMissingValuesException",
112:       "weka.classifiers.UpdateableClassifier",
113:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
114:       "weka.core.MultiInstanceCapabilitiesHandler",
115:       "weka.core.Copyable",
116:       "weka.core.Capabilities",
117:       "weka.core.BinarySparseInstance",
118:       "weka.filters.supervised.attribute.NominalToBinary",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
120:       "weka.core.SerializedObject",
121:       "weka.clusterers.UpdateableClusterer",
122:       "weka.core.Summarizable",
123:       "weka.core.AdditionalMeasureProducer",
124:       "weka.core.neighboursearch.balltrees.BallNode",
125:       "org.pentaho.packageManagement.PackageManager$1",
126:       "weka.core.Drawable",
127:       "weka.core.CapabilitiesHandler",
128:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
129:       "weka.core.AbstractInstance",
130:       "weka.core.scripting.JythonObject",
131:       "weka.core.SelectedTag",
132:       "org.pentaho.packageManagement.DefaultPackage",
133:       "weka.core.Version",
134:       "weka.core.Tag",
135:       "weka.classifiers.AbstractClassifier",
136:       "weka.core.OptionHandler",
137:       "weka.core.WekaException",
138:       "weka.core.Range",
139:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
140:       "weka.core.scripting.JythonSerializableObject",
141:       "weka.classifiers.Classifier",
142:       "weka.core.Capabilities$Capability",
143:       "weka.core.SparseInstance",
144:       "org.pentaho.packageManagement.PackageManager",
145:       "weka.estimators.PoissonEstimator",
146:       "weka.core.tokenizers.WordTokenizer",
147:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
148:       "weka.core.stemmers.SnowballStemmer",
149:       "weka.core.stemmers.LovinsStemmer",
150:       "weka.classifiers.Evaluation",
151:       "weka.core.WekaPackageManager",
152:       "weka.filters.SupervisedFilter",
153:       "weka.core.TechnicalInformationHandler",
154:       "weka.core.neighboursearch.LinearNNSearch",
155:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
156:       "weka.core.Option",
157:       "weka.classifiers.meta.CostSensitiveClassifier",
158:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
159:       "weka.core.neighboursearch.PerformanceStats",
160:       "weka.filters.Sourcable",
161:       "weka.core.Attribute",
162:       "weka.core.Stopwords",
163:       "weka.core.UnassignedDatasetException",
164:       "weka.core.tokenizers.NGramTokenizer",
165:       "weka.classifiers.RandomizableClassifier",
166:       "weka.classifiers.SingleClassifierEnhancer",
167:       "weka.core.RevisionUtils",
168:       "weka.core.Instance",
169:       "weka.estimators.Estimator",
170:       "weka.core.ProtectedProperties",
171:       "weka.core.AttributeStats",
172:       "weka.core.WeightedInstancesHandler",
173:       "weka.core.neighboursearch.NearestNeighbourSearch",
174:       "weka.core.Randomizable",
175:       "weka.classifiers.functions.SGD",
176:       "weka.core.EuclideanDistance",
177:       "weka.core.Instances",
178:       "weka.filters.unsupervised.attribute.Normalize",
179:       "weka.classifiers.bayes.NaiveBayesMultinomial",
180:       "weka.core.UnassignedClassException",
181:       "weka.classifiers.rules.ZeroR",
182:       "weka.core.stemmers.Stemming",
183:       "weka.core.TechnicalInformation",
184:       "weka.core.UnsupportedAttributeTypeException",
185:       "weka.classifiers.Sourcable",
186:       "weka.core.RevisionHandler",
187:       "weka.classifiers.evaluation.output.prediction.PlainText",
188:       "weka.core.xml.XMLSerialization",
189:       "weka.classifiers.xml.XMLClassifier",
190:       "weka.filters.Filter"
191:     );
192:   } 
193: 
194:   private static void resetClasses() {
195:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_85_tmp__ESTest_scaffolding.class.getClassLoader()); 
196: 
197:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
198:       "weka.classifiers.AbstractClassifier",
199:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
200:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
201:       "weka.core.Capabilities$Capability",
202:       "weka.core.tokenizers.Tokenizer",
203:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
204:       "weka.core.tokenizers.WordTokenizer",
205:       "weka.core.stemmers.NullStemmer",
206:       "weka.core.Utils",
207:       "weka.core.Capabilities",
208:       "org.pentaho.packageManagement.PackageManager",
209:       "org.pentaho.packageManagement.DefaultPackageManager",
210:       "weka.core.Version",
211:       "weka.core.Environment",
212:       "weka.core.WekaPackageManager",
213:       "weka.classifiers.Evaluation",
214:       "weka.core.Option",
215:       "weka.classifiers.RandomizableClassifier",
216:       "weka.core.Tag",
217:       "weka.classifiers.functions.SGDText",
218:       "weka.core.AbstractInstance",
219:       "weka.core.SparseInstance",
220:       "weka.core.BinarySparseInstance",
221:       "weka.core.neighboursearch.balltrees.BallNode",
222:       "weka.classifiers.bayes.NaiveBayesMultinomial",
223:       "weka.attributeSelection.ASEvaluation",
224:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
225:       "weka.attributeSelection.PrincipalComponents",
226:       "weka.core.UnassignedDatasetException",
227:       "weka.classifiers.trees.REPTree",
228:       "weka.core.neighboursearch.NearestNeighbourSearch",
229:       "weka.core.neighboursearch.KDTree",
230:       "weka.core.NormalizableDistance",
231:       "weka.core.EuclideanDistance",
232:       "weka.core.Range",
233:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
234:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
235:       "weka.classifiers.bayes.NaiveBayes",
236:       "weka.core.SerializedObject",
237:       "weka.core.stemmers.LovinsStemmer",
238:       "weka.core.stemmers.IteratedLovinsStemmer",
239:       "weka.core.neighboursearch.CoverTree",
240:       "weka.core.Instances",
241:       "weka.core.stemmers.SnowballStemmer",
242:       "weka.core.stemmers.Stemming",
243:       "weka.core.TestInstances",
244:       "weka.core.Attribute",
245:       "weka.core.ProtectedProperties",
246:       "weka.core.DenseInstance",
247:       "weka.core.neighboursearch.BallTree",
248:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
249:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
250:       "weka.core.neighboursearch.balltrees.BallSplitter",
251:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
252:       "weka.core.FindWithCapabilities",
253:       "weka.core.SingleIndex",
254:       "weka.core.ClassDiscovery",
255:       "weka.core.RevisionUtils",
256:       "weka.core.tokenizers.NGramTokenizer",
257:       "weka.filters.Filter",
258:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
259:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
260:       "weka.core.neighboursearch.LinearNNSearch",
261:       "weka.classifiers.misc.SerializedClassifier",
262:       "weka.classifiers.SingleClassifierEnhancer",
263:       "weka.classifiers.misc.InputMappedClassifier",
264:       "weka.classifiers.rules.ZeroR",
265:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
266:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
267:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
268:       "weka.core.Stopwords",
269:       "weka.filters.supervised.attribute.Discretize",
270:       "weka.classifiers.IteratedSingleClassifierEnhancer",
271:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
272:       "weka.classifiers.meta.AdaBoostM1",
273:       "weka.classifiers.trees.DecisionStump",
274:       "weka.classifiers.lazy.LWL",
275:       "weka.core.TechnicalInformation",
276:       "weka.core.TechnicalInformation$Type",
277:       "weka.core.TechnicalInformation$Field",
278:       "weka.attributeSelection.AttributeSelection",
279:       "weka.classifiers.lazy.IBk",
280:       "weka.core.tokenizers.AlphabeticTokenizer",
281:       "weka.classifiers.bayes.BayesNet",
282:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
283:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
284:       "weka.classifiers.bayes.net.search.local.K2",
285:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
286:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
287:       "weka.classifiers.meta.FilteredClassifier",
288:       "weka.filters.supervised.attribute.AttributeSelection",
289:       "weka.attributeSelection.CfsSubsetEval",
290:       "weka.attributeSelection.ASSearch",
291:       "weka.attributeSelection.GreedyStepwise",
292:       "weka.attributeSelection.BestFirst",
293:       "weka.classifiers.trees.J48",
294:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
295:       "weka.classifiers.functions.MultilayerPerceptron",
296:       "weka.core.FastVector",
297:       "weka.filters.unsupervised.attribute.NominalToBinary",
298:       "weka.classifiers.functions.neural.SigmoidUnit",
299:       "weka.classifiers.functions.neural.LinearUnit",
300:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
301:       "weka.filters.SimpleFilter",
302:       "weka.filters.SimpleStreamFilter",
303:       "weka.filters.MultiFilter",
304:       "weka.filters.AllFilter",
305:       "weka.classifiers.functions.supportVector.Kernel",
306:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
307:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
308:       "weka.classifiers.meta.CostSensitiveClassifier",
309:       "weka.classifiers.CostMatrix",
310:       "weka.core.WekaException",
311:       "weka.core.converters.ArffLoader$ArffReader",
312:       "weka.classifiers.trees.m5.M5Base",
313:       "weka.classifiers.rules.M5Rules",
314:       "weka.classifiers.functions.LinearRegression",
315:       "weka.core.UnsupportedAttributeTypeException",
316:       "weka.classifiers.functions.GaussianProcesses",
317:       "weka.classifiers.functions.supportVector.CachedKernel",
318:       "weka.classifiers.functions.supportVector.PolyKernel",
319:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
320:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
321:       "weka.classifiers.meta.RandomCommittee",
322:       "weka.classifiers.trees.RandomTree",
323:       "weka.estimators.Estimator",
324:       "weka.estimators.PoissonEstimator",
325:       "weka.core.UnassignedClassException",
326:       "weka.classifiers.MultipleClassifiersCombiner",
327:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
328:       "weka.classifiers.meta.MultiScheme",
329:       "weka.classifiers.meta.CVParameterSelection",
330:       "weka.classifiers.trees.RandomForest",
331:       "weka.classifiers.functions.supportVector.RBFKernel",
332:       "weka.classifiers.bayes.net.BIFReader",
333:       "weka.classifiers.meta.RegressionByDiscretization",
334:       "weka.filters.unsupervised.attribute.Discretize",
335:       "weka.classifiers.trees.j48.ClassifierTree",
336:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
337:       "weka.estimators.KernelEstimator",
338:       "weka.classifiers.functions.SMOreg",
339:       "weka.classifiers.functions.supportVector.RegOptimizer",
340:       "weka.classifiers.functions.supportVector.RegSMO",
341:       "weka.classifiers.functions.supportVector.RegSMOImproved",
342:       "weka.classifiers.meta.AdditiveRegression",
343:       "weka.estimators.NormalEstimator",
344:       "weka.attributeSelection.WrapperSubsetEval",
345:       "weka.classifiers.meta.Bagging",
346:       "weka.classifiers.meta.Vote",
347:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
348:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
349:       "weka.classifiers.meta.Stacking",
350:       "weka.classifiers.rules.DecisionTable",
351:       "weka.classifiers.rules.JRip",
352:       "weka.classifiers.bayes.NaiveBayesUpdateable",
353:       "weka.attributeSelection.OneRAttributeEval",
354:       "weka.classifiers.lazy.KStar",
355:       "weka.core.converters.ConverterUtils$DataSource",
356:       "weka.core.converters.AbstractLoader",
357:       "weka.core.converters.AbstractFileLoader",
358:       "weka.core.converters.ArffLoader",
359:       "weka.attributeSelection.SymmetricalUncertAttributeEval",
360:       "weka.classifiers.functions.supportVector.StringKernel",
361:       "weka.classifiers.functions.SMO",
362:       "weka.classifiers.meta.AttributeSelectedClassifier",
363:       "weka.attributeSelection.InfoGainAttributeEval",
364:       "weka.attributeSelection.GainRatioAttributeEval",
365:       "weka.classifiers.trees.LMT",
366:       "weka.classifiers.rules.OneR",
367:       "weka.estimators.DiscreteEstimator",
368:       "weka.core.WekaEnumeration",
369:       "weka.core.Attribute$1",
370:       "weka.classifiers.functions.Logistic",
371:       "weka.classifiers.meta.ClassificationViaRegression",
372:       "weka.classifiers.trees.M5P",
373:       "weka.classifiers.functions.supportVector.Puk",
374:       "weka.attributeSelection.CorrelationAttributeEval",
375:       "weka.classifiers.functions.SimpleLogistic",
376:       "weka.classifiers.functions.SGD",
377:       "weka.core.Javadoc",
378:       "weka.core.GlobalInfoJavadoc",
379:       "weka.classifiers.rules.PART",
380:       "weka.classifiers.rules.part.MakeDecList",
381:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
382:       "weka.core.matrix.Matrix",
383:       "weka.estimators.MahalanobisEstimator",
384:       "weka.core.Check",
385:       "weka.core.CheckOptionHandler",
386:       "weka.classifiers.meta.MultiClassClassifier",
387:       "weka.classifiers.meta.LogitBoost",
388:       "weka.classifiers.functions.VotedPerceptron",
389:       "weka.core.ListOptions",
390:       "weka.core.AttributeStats",
391:       "weka.experiment.Stats",
392:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
393:       "weka.attributeSelection.ReliefFAttributeEval",
394:       "weka.classifiers.functions.SimpleLinearRegression",
395:       "weka.core.OptionHandlerJavadoc",
396:       "weka.core.ChebyshevDistance",
397:       "weka.core.neighboursearch.PerformanceStats",
398:       "weka.core.MinkowskiDistance"
399:     );
400:   }
401: }

[MASTER] 07:40:53.256 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer0 = new Integer((-2953));
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
hashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
String[] stringArray0 = new String[4];
stringArray0[0] = "j=dex)OtA6=`%Cl I";
stringArray0[1] = "P";
stringArray0[2] = "";
stringArray0[3] = "5qCU*'NwmE2";
AbstractClassifier.runClassifier(naiveBayesMultinomialText0, stringArray0);
naiveBayesMultinomialText0.setPeriodicPruning(2166);
naiveBayesMultinomialText0.pruneDictionary();

[MASTER] 07:40:56.296 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 07:40:57.883 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/mosa/tests/s1011/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 5949
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 5946
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 07:42:15.369 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 07:42:15.381 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 07:42:15.382 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 07:42:15.397 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2499
* Using seed 1011
* Starting evolution
[MASTER] 07:42:16.930 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 07:42:25.510 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 07:42:25.515 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 07:42:25.517 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 07:42:26.193 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 07:42:27.300 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 07:42:27.309 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 07:42:29.950 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 07:42:30.026 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 07:42:30.026 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 07:42:30.027 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 07:42:30.028 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 07:42:30.028 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 07:42:30.029 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 07:42:30.030 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 07:42:30.032 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 07:42:30.131 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 07:42:30.141 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 3904
* Using seed 1011
* Starting evolution
[MASTER] 07:42:34.522 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 07:43:14.588 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 241s and 118 generations, 68445 statements, best individual has fitness: 16016.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 56%
* Total number of goals: 1378
* Number of covered goals: 775
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 40%
* Total number of goals: 809
* Number of covered goals: 325
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 59
* Number of covered goals: 59
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 59%
* Total number of goals: 424
* Number of covered goals: 249
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 22%
* Total number of goals: 278
* Number of covered goals: 61
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 103
* Number of covered goals: 103
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 103
* Number of covered goals: 101
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 38%
* Total number of goals: 809
* Number of covered goals: 304
* Search finished after 273s and 128 generations, 83027 statements, best individual has fitness: 16712.0
* Generated 148 tests with total length 1556
* Resulting test suite's coverage: 49% (average coverage for all fitness functions)
* Generating assertions
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 18 tests with total length 100
* Resulting test suite's coverage: 16% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 19%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/mosa/tests/s1011/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 07:54:50.519 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 6%
* Compiling and checking tests
[MASTER] 07:55:00.844 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 07:55:01.160 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 07:55:01.160 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 07:55:02.974 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 07:55:02.985 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 07:55:03.476 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/mosa/tests/s1011/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 5942
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 5947
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 08:05:33.152 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 08:05:33.168 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 08:05:33.172 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 08:05:33.274 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Total number of test goals for MOSA: 2699
* Using seed 1011
* Starting evolution
[MASTER] 08:05:39.301 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 08:05:39.329 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 08:05:39.330 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 08:05:42.610 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 08:05:43.592 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 08:05:43.608 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 2767
* Using seed 1011
* Starting evolution
[MASTER] 08:09:45.844 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 265s and 262 generations, 93789 statements, best individual has fitness: 13448.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 33%
* Total number of goals: 705
* Number of covered goals: 230
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 24%
* Total number of goals: 416
* Number of covered goals: 100
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 49%
* Total number of goals: 993
* Number of covered goals: 491
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 29%
* Total number of goals: 93
* Number of covered goals: 27
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 24%
* Total number of goals: 416
* Number of covered goals: 100
* Generated 66 tests with total length 468
* Resulting test suite's coverage: 40% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 345s and 49 generations, 36040 statements, best individual has fitness: 2152.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 97%
* Total number of goals: 647
* Number of covered goals: 625
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 95%
* Total number of goals: 441
* Number of covered goals: 417
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 28
* Number of covered goals: 28
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 678
* Number of covered goals: 622
* Coverage analysis for criterion OUTPUT
* Resulting test suite's mutation score: 19%
* Coverage of criterion OUTPUT: 46%
* Total number of goals: 244
* Number of covered goals: 112
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 124
* Number of covered goals: 124
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 124
* Number of covered goals: 124
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 93%
* Total number of goals: 441
* Number of covered goals: 408
* Compiling and checking tests
* Generated 237 tests with total length 2359
* Resulting test suite's coverage: 90% (average coverage for all fitness functions)
* Generating assertions
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/mosa/tests/s1011/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 08:17:00.583 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6680395833333334% of time used, but only 85/237 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
* Permissions denied during test execution: 
[MASTER] 08:18:38.656 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/mosa/tests/s1011/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 5945
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 5947
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 08:31:22.419 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 08:31:22.425 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 08:31:22.460 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Total number of test goals for MOSA: 1367
* Using seed 1011
* Starting evolution
[MASTER] 08:31:22.703 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 08:31:22.737 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 08:31:22.759 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1729
* Using seed 1011
* Starting evolution
* Search finished after 251s and 369 generations, 117877 statements, best individual has fitness: 4368.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 71%
* Total number of goals: 370
* Number of covered goals: 262
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 56%
* Total number of goals: 242
* Number of covered goals: 136
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 29
* Number of covered goals: 29
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 73%
* Total number of goals: 713
* Number of covered goals: 523
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 53%
* Total number of goals: 72
* Number of covered goals: 38
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 56%
* Total number of goals: 242
* Number of covered goals: 136
* Generated 75 tests with total length 450
* Resulting test suite's coverage: 69% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 303s and 243 generations, 92813 statements, best individual has fitness: 2656.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 217
* Number of covered goals: 191
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 68%
* Total number of goals: 428
* Number of covered goals: 290
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 260
* Number of covered goals: 240
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 68%
* Total number of goals: 428
* Number of covered goals: 290
* Generated 72 tests with total length 217
* Resulting test suite's coverage: 76% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 76%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/mosa/tests/s1011/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 25%
* Compiling and checking tests
[MASTER] 08:38:47.378 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 08:38:48.376 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 08:39:09.147 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:39:09.150 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
Instances instances0 = new Instances("kp>&'*f Laz)]Fo=", arrayList0, 19);
Attribute attribute0 = new Attribute("kp>&'*f Laz)]Fo=", instances0);
arrayList0.add(attribute0);
Instances instances1 = new Instances("kp>&'*f Laz)]Fo=", arrayList0, 19);
Instances instances2 = new Instances("]P;", arrayList0, 19);
Discretize discretize0 = new Discretize();
discretize0.setInputFormat(instances2);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/mosa/tests/s1011/107_weka/evosuite-tests
* Done!

* Computation finished
