* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: macaw.businessLayer.Variable
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/69_lhamacaw/evosuite-files/evosuite.properties
* Connecting to master process on port 8336
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 00:32:23.264 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 00:32:23.266 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 00:32:23.267 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 00:32:23.339 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 00:32:23.371 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 00:32:23.372 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 00:32:23.373 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 00:32:23.373 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 00:32:23.374 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 00:32:23.374 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 00:32:23.375 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 00:32:23.377 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 00:32:23.393 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 00:32:23.465 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 00:32:23.488 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class macaw.businessLayer.Variable
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 1501
* Using seed 1024
* Starting evolution
[MASTER] 00:32:31.138 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 212: macaw.businessLayer.Variable.setColumnEnd(Ljava/lang/String;)V:435 - ReplaceVariable columnEnd -> columnEnd
[MASTER] 00:32:31.138 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 213: macaw.businessLayer.Variable.setColumnEnd(Ljava/lang/String;)V:435 - ReplaceVariable columnEnd -> notes
[MASTER] 00:32:31.138 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 214: macaw.businessLayer.Variable.setColumnEnd(Ljava/lang/String;)V:435 - ReplaceVariable columnEnd -> form
[MASTER] 00:32:31.138 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 215: macaw.businessLayer.Variable.setColumnEnd(Ljava/lang/String;)V:435 - ReplaceVariable columnEnd -> codeBookNumber
[MASTER] 00:32:31.138 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 216: macaw.businessLayer.Variable.setColumnEnd(Ljava/lang/String;)V:435 - ReplaceVariable columnEnd -> columnStart
[MASTER] 00:32:31.138 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 217: macaw.businessLayer.Variable.setColumnEnd(Ljava/lang/String;)V:435 - ReplaceVariable columnEnd -> questionNumber
[MASTER] 00:32:31.138 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 255: macaw.businessLayer.Variable.setForm(Ljava/lang/String;)V:502 - ReplaceVariable form -> columnEnd
[MASTER] 00:32:31.138 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 256: macaw.businessLayer.Variable.setForm(Ljava/lang/String;)V:502 - ReplaceVariable form -> notes
[MASTER] 00:32:31.138 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 257: macaw.businessLayer.Variable.setForm(Ljava/lang/String;)V:502 - ReplaceVariable form -> form
[MASTER] 00:32:31.138 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 258: macaw.businessLayer.Variable.setForm(Ljava/lang/String;)V:502 - ReplaceVariable form -> codeBookNumber
[MASTER] 00:32:31.138 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 259: macaw.businessLayer.Variable.setForm(Ljava/lang/String;)V:502 - ReplaceVariable form -> columnStart
[MASTER] 00:32:31.138 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 260: macaw.businessLayer.Variable.setForm(Ljava/lang/String;)V:502 - ReplaceVariable form -> questionNumber
[MASTER] 00:32:31.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: macaw.businessLayer.Variable.getAlternativeVariable()Lmacaw/businessLayer/Variable;:Null
[MASTER] 00:32:31.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] macaw.businessLayer.Variable.setCleaningStatus(Ljava/lang/String;)V
[MASTER] 00:32:31.140 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] macaw.businessLayer.Variable.setColumnEnd(Ljava/lang/String;)V
[MASTER] 00:32:31.141 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] macaw.businessLayer.Variable.getAlternativeVariable()Lmacaw/businessLayer/Variable;
[MASTER] 00:32:31.141 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] macaw.businessLayer.Variable.setCleaningStatus(Ljava/lang/String;)V
[MASTER] 00:32:31.142 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] macaw.businessLayer.Variable.setColumnEnd(Ljava/lang/String;)V
[MASTER] 00:32:31.142 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] macaw.businessLayer.Variable.getAlternativeVariable()Lmacaw/businessLayer/Variable;
[MASTER] 00:32:31.142 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch macaw.businessLayer.Variable.getAlternativeVariable()Lmacaw/businessLayer/Variable;: root-Branch in context: macaw.businessLayer.Variable:getAlternativeVariable()Lmacaw/businessLayer/Variable;
[MASTER] 00:32:31.142 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch macaw.businessLayer.Variable.setColumnEnd(Ljava/lang/String;)V: root-Branch in context: macaw.businessLayer.Variable:setColumnEnd(Ljava/lang/String;)V
[MASTER] 00:32:31.142 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch macaw.businessLayer.Variable.setCleaningStatus(Ljava/lang/String;)V: root-Branch in context: macaw.businessLayer.Variable:setCleaningStatus(Ljava/lang/String;)V
[MASTER] 00:33:08.311 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 43: macaw.businessLayer.Variable.getLabel()Ljava/lang/String;:174 - ReplaceVariable label -> columnStart
[MASTER] 00:34:17.464 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 293s and 388 generations, 130720 statements, best individual has fitness: 480.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 97%
* Total number of goals: 412
* Number of covered goals: 400
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 98%
* Total number of goals: 153
* Number of covered goals: 150
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 98%
* Total number of goals: 533
* Number of covered goals: 522
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 73%
* Total number of goals: 116
* Number of covered goals: 85
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 67
* Number of covered goals: 67
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 67
* Number of covered goals: 67
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 98%
* Total number of goals: 153
* Number of covered goals: 150
* Generated 158 tests with total length 874
* Resulting test suite's coverage: 96% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 78%
* Compiling and checking tests
[MASTER] 00:42:02.634 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:02.634 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
ValueLabel valueLabel0 = new ValueLabel();
rawVariable0.addValueLabel(valueLabel0);
RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
assertEquals("Unknown", rawVariable1.getCleaningStatus());
assertFalse(rawVariable1.isNewRecord());
assertFalse(rawVariable1.isCoded());
assertEquals("Unknown", rawVariable1.getCategory());
assertEquals("Unknown", rawVariable1.getAvailability());
assertEquals("0", rawVariable1.getDisplayItemIdentifier());


[MASTER] 00:42:02.871 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:02.871 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.codeBookNumber = null;
RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
assertEquals("Unknown", rawVariable1.getAvailability());
assertEquals("Unknown", rawVariable1.getCleaningStatus());
assertFalse(rawVariable1.isCoded());
assertFalse(rawVariable1.isNewRecord());
assertFalse(rawVariable1.isCleaned());
assertEquals("Unknown", rawVariable1.getCategory());
assertEquals(0, rawVariable1.getIdentifier());


[MASTER] 00:42:03.119 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:03.120 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setCleaningStatus("U,orDm$.R_'Dl}{\"");
rawVariable0.getFilePath();
assertEquals("U,orDm$.R_'Dl}{\"", rawVariable0.getCleaningStatus());


[MASTER] 00:42:03.536 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:03.538 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setCoded(false);
RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
assertEquals("Unknown", rawVariable1.getAvailability());
assertFalse(rawVariable1.isNewRecord());
assertFalse(rawVariable0.isCoded());
assertEquals("Unknown", rawVariable1.getCategory());
assertEquals("Unknown", rawVariable1.getCleaningStatus());
assertEquals(0, rawVariable1.getIdentifier());
assertFalse(rawVariable1.isCleaned());


[MASTER] 00:42:03.663 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:03.664 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setForm("FxzD{S7l8~'a2");
User user0 = new User();
Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
assertEquals("FxzD{S7l8~'a2", rawVariable0.getForm());
assertEquals("Unknown", rawVariable0.getCleaningStatus());


[MASTER] 00:42:03.828 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:03.828 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
User user0 = new User();
ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
assertFalse(rawVariable1.isCleaned());
assertEquals("Unknown", rawVariable0.getCleaningStatus());
assertEquals("0", rawVariable1.getDisplayItemIdentifier());
assertEquals("Unknown", rawVariable1.getCategory());
assertEquals("Unknown", rawVariable1.getAvailability());
assertEquals(0, arrayList0.size());


[MASTER] 00:42:03.880 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:03.880 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
Variable.detectFieldChanges((User) null, rawVariable0, rawVariable0);

[MASTER] 00:42:04.167 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:04.168 [logback-1] WARN  JUnitAnalyzer - Failing test:
 User user0 = new User();
DerivedVariable derivedVariable0 = new DerivedVariable();
derivedVariable0.setColumnStart("Z7sdc3gi'>");
ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
assertEquals("Z7sdc3gi'>", derivedVariable0.getColumnStart());
assertTrue(arrayList0.isEmpty());


[MASTER] 00:42:04.415 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:04.415 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DerivedVariable derivedVariable0 = new DerivedVariable();
ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
derivedVariable0.setSupportingDocuments(arrayList0);
DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
ArrayList<String> arrayList1 = Variable.validateFields(derivedVariable1);
assertEquals("Unknown", derivedVariable1.getCategory());
assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
assertFalse(derivedVariable1.isNewRecord());
assertFalse(derivedVariable1.isCoded());
assertEquals(1, arrayList1.size());
assertEquals("Unknown", derivedVariable1.getCleaningStatus());
assertFalse(derivedVariable1.isCleaned());


[MASTER] 00:42:04.478 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:04.478 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DerivedVariable derivedVariable0 = new DerivedVariable();
derivedVariable0.setFilePath("");
DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
assertEquals("Unknown", derivedVariable1.getAvailability());
assertFalse(derivedVariable1.isCoded());
assertEquals("Unknown", derivedVariable1.getCleaningStatus());
assertFalse(derivedVariable1.isCleaned());
assertEquals("Unknown", derivedVariable1.getCategory());
assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
assertFalse(derivedVariable1.isNewRecord());


[MASTER] 00:42:04.621 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:04.621 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setIsNewRecord(true);
rawVariable0.clone();
assertTrue(rawVariable0.isNewRecord());


[MASTER] 00:42:04.763 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:04.763 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
assertEquals("Unknown", rawVariable1.getCleaningStatus());
assertFalse(rawVariable1.isCoded());
assertFalse(rawVariable1.isNewRecord());
assertEquals("Unknown", rawVariable1.getAvailability());
assertEquals(0, rawVariable1.getIdentifier());
assertEquals("Unknown", rawVariable1.getCategory());

ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
assertEquals(1, arrayList0.size());

rawVariable0.isCleaned();
assertEquals("Unknown", rawVariable0.getAvailability());


[MASTER] 00:42:04.823 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:04.823 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setIdentifier((-2021161078));
rawVariable0.getFilePath();
assertEquals((-2021161078), rawVariable0.getIdentifier());


[MASTER] 00:42:04.884 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:04.884 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DerivedVariable derivedVariable0 = new DerivedVariable();
derivedVariable0.setAlias("UNABLE_TO_GET_CATEGORY_IDENTIFIER");
derivedVariable0.getColumnStart();
assertEquals("UNABLE_TO_GET_CATEGORY_IDENTIFIER", derivedVariable0.getAlias());


[MASTER] 00:42:05.005 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:05.006 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DerivedVariable derivedVariable0 = new DerivedVariable();
String string0 = derivedVariable0.getDisplayItemIdentifier();
assertFalse(derivedVariable0.isCleaned());
assertFalse(derivedVariable0.isNewRecord());
assertFalse(derivedVariable0.isCoded());
assertEquals("0", string0);


[MASTER] 00:42:05.193 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:05.194 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DerivedVariable derivedVariable0 = new DerivedVariable();
ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
SupportingDocument supportingDocument0 = new SupportingDocument();
arrayList0.add(supportingDocument0);
derivedVariable0.removeSupportingDocuments(arrayList0);

[MASTER] 00:42:05.303 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:05.303 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
User user0 = new User("UNABLE_TO_CREATE_DERIVED_VARIABLE", "UNABLE_TO_CREATE_DERIVED_VARIABLE");
ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
assertEquals("Unknown", rawVariable0.getCategory());
assertEquals("0", rawVariable0.getDisplayItemIdentifier());
assertFalse(rawVariable0.isNewRecord());
assertEquals("Unknown", rawVariable0.getAvailability());
assertTrue(arrayList0.isEmpty());
assertEquals("Unknown", rawVariable0.getCleaningStatus());


[MASTER] 00:42:05.356 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:05.356 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setName("+aDGI");
rawVariable0.clone();
assertEquals("+aDGI", rawVariable0.getDisplayName());


[MASTER] 00:42:05.689 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:05.690 [logback-1] WARN  JUnitAnalyzer - Failing test:
 OntologyTerm ontologyTerm0 = new OntologyTerm();
RawVariable rawVariable0 = new RawVariable();
Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, rawVariable0);

[MASTER] 00:42:05.810 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:05.810 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setCategory("UNABLE_TO_DISASSOCIATE_SOURCE_VARIABLE");
RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
assertEquals("UNABLE_TO_DISASSOCIATE_SOURCE_VARIABLE", rawVariable1.getCategory());
assertEquals("Unknown", rawVariable1.getCleaningStatus());
assertEquals("Unknown", rawVariable1.getAvailability());
assertEquals("0", rawVariable1.getDisplayItemIdentifier());
assertFalse(rawVariable1.isNewRecord());


[MASTER] 00:42:05.935 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:05.935 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setLabel("qx1r68f)E5m>B[)@Xp");
User user0 = new User();
rawVariable0.setName("qx1r68f)E5m>B[)@Xp");
RawVariable rawVariable1 = new RawVariable();
rawVariable0.createVariableSummary();
assertEquals("qx1r68f)E5m>B[)@Xp", rawVariable0.getDisplayName());


[MASTER] 00:42:06.045 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:06.045 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DerivedVariable derivedVariable0 = new DerivedVariable();
derivedVariable0.columnEnd = "[u1~ue/A\"eI{(qw$";
VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
assertEquals("", variableSummary0.getYear());
assertEquals("", variableSummary0.getDisplayName());
assertEquals(0, variableSummary0.getIdentifier());
assertEquals("", variableSummary0.getLabel());

ArrayList<DerivedVariable> arrayList0 = new ArrayList<DerivedVariable>();
ArrayList<Variable> arrayList1 = new ArrayList<Variable>(arrayList0);
derivedVariable0.addSourceVariables(arrayList1);
assertFalse(derivedVariable0.isCleaned());
assertFalse(derivedVariable0.isCoded());
assertFalse(derivedVariable0.isNewRecord());


[MASTER] 00:42:06.108 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:06.109 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setLabel("K");
assertEquals("K", rawVariable0.getLabel());

RawVariable rawVariable1 = new RawVariable();
rawVariable1.columnStart = "9lrse";
VariableSummary variableSummary0 = rawVariable1.createVariableSummary();
assertEquals("", variableSummary0.getDisplayName());


[MASTER] 00:42:06.367 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:06.367 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
SupportingDocument supportingDocument0 = new SupportingDocument();
rawVariable0.addSupportingDocument(supportingDocument0);
RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
assertEquals("Unknown", rawVariable1.getCategory());
assertFalse(rawVariable1.isNewRecord());
assertEquals("0", rawVariable1.getDisplayItemIdentifier());
assertEquals("Unknown", rawVariable1.getCleaningStatus());
assertEquals("Unknown", rawVariable1.getAvailability());
assertFalse(rawVariable1.isCoded());
assertFalse(rawVariable1.isCleaned());


[MASTER] 00:42:06.628 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:06.628 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
Variable.validateFields((Variable) null);

[MASTER] 00:42:06.780 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:06.781 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DerivedVariable derivedVariable0 = new DerivedVariable();
derivedVariable0.setCodeBookNumber(":/o]'w&]");
derivedVariable0.createVariableSummary();
RawVariable rawVariable0 = new RawVariable();
derivedVariable0.cloneAttributes(rawVariable0);
assertEquals(":/o]'w&]", rawVariable0.getCodeBookNumber());
assertEquals("Unknown", rawVariable0.getAvailability());


[MASTER] 00:42:06.951 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:06.951 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.removeOntologyTerm((OntologyTerm) null);

[MASTER] 00:42:07.077 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:07.078 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.notes = null;
String string0 = rawVariable0.getName();
assertNotNull(string0);

String string1 = rawVariable0.getNotes();
assertFalse(rawVariable0.isNewRecord());
assertFalse(rawVariable0.isCoded());
assertFalse(rawVariable0.isCleaned());
assertNull(string1);
assertEquals("0", rawVariable0.getDisplayItemIdentifier());


[MASTER] 00:42:07.445 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:07.446 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.columnStart = "variable.isCoded.label";
RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
assertEquals("", rawVariable1.getCleaningDescription());
assertEquals("", rawVariable1.getLabel());
assertFalse(rawVariable1.isNewRecord());
assertEquals("", rawVariable1.getFilePath());
assertEquals("", rawVariable1.getAlias());
assertEquals("", rawVariable1.getCodeBookNumber());
assertEquals("", rawVariable1.getColumnEnd());
assertEquals("", rawVariable1.getYear());
assertEquals("Unknown", rawVariable1.getCleaningStatus());
assertEquals(0, rawVariable1.getIdentifier());
assertFalse(rawVariable1.isCoded());
assertEquals("Unknown", rawVariable1.getAvailability());
assertEquals("variable.isCoded.label", rawVariable1.getColumnStart());
assertEquals("Unknown", rawVariable1.getCategory());
assertEquals("", rawVariable1.getName());

rawVariable0.getQuestionNumber();
assertEquals("0", rawVariable0.getDisplayItemIdentifier());


[MASTER] 00:42:07.519 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:07.519 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DerivedVariable derivedVariable0 = new DerivedVariable();
derivedVariable0.notes = "variable.alternativeVariable.label";
String string0 = derivedVariable0.getForm();
assertEquals("", string0);

String string1 = derivedVariable0.getQuestionNumber();
assertEquals("", string1);
assertFalse(derivedVariable0.isCleaned());
assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
assertFalse(derivedVariable0.isCoded());
assertFalse(derivedVariable0.isNewRecord());


[MASTER] 00:42:08.119 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:08.119 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setForm("variable.alternativeVariable.label");
SupportingDocument supportingDocument0 = new SupportingDocument();
rawVariable0.getFilePath();
assertEquals("variable.alternativeVariable.label", rawVariable0.getForm());


[MASTER] 00:42:08.392 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:08.392 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
OntologyTerm ontologyTerm0 = new OntologyTerm();
rawVariable0.addOntologyTerm(ontologyTerm0);
boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
assertFalse(rawVariable0.isCleaned());
assertEquals(0, rawVariable0.getIdentifier());
assertFalse(rawVariable0.isCoded());
assertTrue(boolean0);
assertFalse(rawVariable0.isNewRecord());


[MASTER] 00:42:08.457 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:08.458 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.addSupportingDocument((SupportingDocument) null);
rawVariable0.createVariableSummary();
SupportingDocument supportingDocument0 = new SupportingDocument();
rawVariable0.clone();

[MASTER] 00:42:08.554 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:08.555 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setColumnStart((String) null);
rawVariable0.getFilePath();
DerivedVariable derivedVariable0 = new DerivedVariable();
derivedVariable0.removeSourceVariables((ArrayList<Variable>) null);

[MASTER] 00:42:08.602 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:08.602 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
OntologyTerm ontologyTerm0 = new OntologyTerm();
rawVariable0.addOntologyTerm(ontologyTerm0);
rawVariable0.addOntologyTerm(ontologyTerm0);
OntologyTerm ontologyTerm1 = new OntologyTerm();
rawVariable0.updateOntologyTerm(ontologyTerm1);
assertFalse(rawVariable0.isCleaned());
assertFalse(rawVariable0.isNewRecord());
assertFalse(rawVariable0.isCoded());
assertEquals("0", rawVariable0.getDisplayItemIdentifier());


[MASTER] 00:42:08.675 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:08.675 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
DerivedVariable derivedVariable0 = new DerivedVariable();
rawVariable0.setAlternativeVariable(derivedVariable0);
RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
assertEquals("Unknown", rawVariable1.getCleaningStatus());
assertEquals("Unknown", rawVariable1.getAvailability());
assertFalse(rawVariable1.isNewRecord());
assertEquals(0, rawVariable1.getIdentifier());
assertEquals("Unknown", rawVariable1.getCategory());
assertFalse(rawVariable1.isCoded());


[MASTER] 00:42:08.792 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:08.792 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DerivedVariable derivedVariable0 = new DerivedVariable();
derivedVariable0.columnStart = "UNABLE_TO_GET_ORIGINAL_ALIAS_FILE_PATH";
derivedVariable0.getColumnStart();
LinkedList<DerivedVariable> linkedList0 = new LinkedList<DerivedVariable>();
ArrayList<Variable> arrayList0 = new ArrayList<Variable>(linkedList0);
derivedVariable0.setSourceVariables(arrayList0);
assertEquals("UNABLE_TO_GET_ORIGINAL_ALIAS_FILE_PATH", derivedVariable0.getColumnStart());


[MASTER] 00:42:09.213 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:09.213 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setCodeBookNumber("r");
rawVariable0.setName("r");
rawVariable0.getCleaningDescription();
assertEquals("r", rawVariable0.getCodeBookNumber());


[MASTER] 00:42:09.281 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:09.281 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setLabel("x");
User user0 = new User();
rawVariable0.codeBookNumber = "x";
RawVariable rawVariable1 = new RawVariable();
RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
assertEquals("x", rawVariable0.getCodeBookNumber());
assertEquals("x", rawVariable0.getLabel());


[MASTER] 00:42:09.341 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:09.341 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setColumnEnd("K");
RawVariable rawVariable1 = new RawVariable();
User user0 = new User();
RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
rawVariable0.getCleaningStatus();
assertEquals("K", rawVariable0.getColumnEnd());


[MASTER] 00:42:09.465 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:09.465 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DerivedVariable derivedVariable0 = new DerivedVariable();
derivedVariable0.setNotes("Q=*\"^4Q;|eaOz;%]\",&");
derivedVariable0.getCleaningDescription();
assertEquals("Q=*\"^4Q;|eaOz;%]\",&", derivedVariable0.getNotes());


[MASTER] 00:42:09.650 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:09.651 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
DerivedVariable derivedVariable0 = new DerivedVariable();
rawVariable0.setAlternativeVariable(derivedVariable0);
User user0 = new User();
MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
assertFalse(derivedVariable0.isCleaned());
assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
assertNotNull(macawChangeEvent0);
assertFalse(derivedVariable0.isCoded());
assertFalse(derivedVariable0.isNewRecord());
assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());


[MASTER] 00:42:09.708 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:09.708 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setIdentifier(158);
User user0 = new User();
Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
rawVariable0.getSupportingDocuments();
assertEquals("158", rawVariable0.getDisplayItemIdentifier());


[MASTER] 00:42:09.845 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:09.845 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setIdentifier(1109);
rawVariable0.clone();
rawVariable0.createVariableSummary();
assertEquals("1109", rawVariable0.getDisplayItemIdentifier());


[MASTER] 00:42:09.910 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:09.910 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
SupportingDocument supportingDocument0 = new SupportingDocument();
rawVariable0.addSupportingDocument(supportingDocument0);
SupportingDocument supportingDocument1 = new SupportingDocument();
boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
assertFalse(rawVariable0.isCoded());
assertFalse(rawVariable0.isCleaned());
assertTrue(boolean0);
assertFalse(rawVariable0.isNewRecord());
assertEquals("0", rawVariable0.getDisplayItemIdentifier());


[MASTER] 00:42:10.244 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:10.244 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setCleaned(true);
RawVariable rawVariable1 = new RawVariable();
User user0 = new User();
ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
assertTrue(rawVariable0.isCleaned());
assertFalse(arrayList0.isEmpty());


[MASTER] 00:42:10.340 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:10.340 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setCleaned(true);
User user0 = new User();
RawVariable rawVariable1 = new RawVariable();
Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
assertFalse(rawVariable1.isCleaned());
assertTrue(rawVariable0.isCleaned());


[MASTER] 00:42:10.403 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:10.403 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setAlternativeVariable(rawVariable0);
User user0 = new User();
MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
Variable variable0 = rawVariable0.getAlternativeVariable();
assertEquals(0, variable0.getIdentifier());
assertFalse(variable0.isNewRecord());
assertFalse(variable0.isCleaned());
assertFalse(variable0.isCoded());


[MASTER] 00:42:10.832 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:10.832 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DerivedVariable derivedVariable0 = new DerivedVariable();
derivedVariable0.setIdentifier((-1182));
DerivedVariable derivedVariable1 = new DerivedVariable();
derivedVariable0.createVariableSummary();
assertEquals((-1182), derivedVariable0.getIdentifier());

ArrayList<OntologyTerm> arrayList0 = derivedVariable1.getOntologyTerms();
derivedVariable1.removeOntologyTerms(arrayList0);
assertFalse(derivedVariable1.isCoded());


[MASTER] 00:42:11.413 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:11.413 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
SupportingDocument supportingDocument0 = new SupportingDocument();
supportingDocument0.setIdentifier((-4267));
rawVariable0.addSupportingDocument(supportingDocument0);
SupportingDocument supportingDocument1 = new SupportingDocument();
boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
assertFalse(rawVariable0.isCleaned());
assertFalse(rawVariable0.isCoded());
assertEquals(0, rawVariable0.getIdentifier());
assertFalse(boolean0);
assertFalse(rawVariable0.isNewRecord());


[MASTER] 00:42:11.593 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:11.593 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DerivedVariable derivedVariable0 = new DerivedVariable();
User user0 = new User("Er~0DHML", "Er~0DHML");
DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
derivedVariable0.setIdentifier(84);
derivedVariable0.setNotes((String) null);
derivedVariable0.questionNumber = "aQ?.yF<$L&9B~P;R";
SupportingDocument supportingDocument0 = new SupportingDocument();
supportingDocument0.setIsNewRecord(true);
derivedVariable0.addSupportingDocument(supportingDocument0);
derivedVariable0.getAlias();
derivedVariable0.containsSupportingDocument(supportingDocument0);
derivedVariable0.getIdentifier();
derivedVariable0.containsSupportingDocument(supportingDocument0);
ArrayList<RawVariable> arrayList0 = new ArrayList<RawVariable>();
ArrayList<Variable> arrayList1 = new ArrayList<Variable>(arrayList0);
derivedVariable0.removeSourceVariables(arrayList1);
assertEquals("aQ?.yF<$L&9B~P;R", derivedVariable0.getQuestionNumber());


[MASTER] 00:42:11.648 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:11.648 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.questionNumber = "variable.alternativeVariable.label";
ValueLabel valueLabel0 = new ValueLabel();
valueLabel0.getDisplayName();
ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
OntologyTerm ontologyTerm0 = new OntologyTerm();
String string0 = "R5+,J rR$_wuuuT\"$";
ontologyTerm0.setDescription("R5+,J rR$_wuuuT\"$");
arrayList0.add(ontologyTerm0);
arrayList0.add(ontologyTerm0);
rawVariable0.setForm((String) null);
rawVariable0.addOntologyTerms(arrayList0);
rawVariable0.clone();
rawVariable0.isCoded();
rawVariable0.getForm();
rawVariable0.getSupportingDocuments();
DerivedVariable derivedVariable0 = new DerivedVariable();
DerivedVariable.validateFields(derivedVariable0);

[MASTER] 00:42:11.710 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:11.711 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
OntologyTerm ontologyTerm0 = new OntologyTerm();
rawVariable0.setYear("lqank");
rawVariable0.addOntologyTerm(ontologyTerm0);
rawVariable0.updateOntologyTerm(ontologyTerm0);
DerivedVariable derivedVariable0 = new DerivedVariable();
ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
arrayList0.add((Variable) derivedVariable0);
derivedVariable0.setSourceVariables(arrayList0);
rawVariable0.getYear();
assertEquals("lqank", rawVariable0.getYear());


[MASTER] 00:42:11.774 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:11.774 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DerivedVariable derivedVariable0 = new DerivedVariable();
derivedVariable0.setForm("");
derivedVariable0.setQuestionNumber("variable.name.label");
derivedVariable0.getQuestionNumber();
derivedVariable0.getColumnEnd();
derivedVariable0.getName();
assertEquals("variable.name.label", derivedVariable0.getQuestionNumber());


[MASTER] 00:42:11.840 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:11.841 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setLabel("T");
User user0 = new User();
RawVariable rawVariable1 = new RawVariable();
RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
assertEquals("T", rawVariable0.getLabel());
assertFalse(rawVariable0.isCoded());


[MASTER] 00:42:12.028 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:12.029 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setLabel("T");
User user0 = new User();
RawVariable rawVariable1 = new RawVariable();
rawVariable1.setAlias("T");
ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
assertEquals("T", rawVariable0.getLabel());
assertEquals(2, arrayList0.size());


[MASTER] 00:42:12.362 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:12.362 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setName("p");
User user0 = new User();
RawVariable rawVariable1 = new RawVariable();
rawVariable1.setCategory("p");
RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
assertEquals("p", rawVariable1.getCategory());
assertEquals("p", rawVariable0.getName());


[MASTER] 00:42:12.566 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:12.566 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
OntologyTerm ontologyTerm0 = new OntologyTerm();
ontologyTerm0.setIdentifier(660);
rawVariable0.addOntologyTerm(ontologyTerm0);
OntologyTerm ontologyTerm1 = new OntologyTerm();
rawVariable0.updateOntologyTerm(ontologyTerm1);
assertFalse(rawVariable0.isCoded());
assertFalse(rawVariable0.isNewRecord());
assertEquals(0, rawVariable0.getIdentifier());
assertFalse(rawVariable0.isCleaned());


[MASTER] 00:42:13.048 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.048 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
OntologyTerm ontologyTerm0 = new OntologyTerm();
ontologyTerm0.setTerm("variable.questionNumber.label");
rawVariable0.addOntologyTerm(ontologyTerm0);
OntologyTerm ontologyTerm1 = new OntologyTerm();
ontologyTerm1.setIdentifier((-2073432485));
boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
assertFalse(boolean0);

rawVariable0.getValueLabels();
assertFalse(rawVariable0.isNewRecord());
assertFalse(rawVariable0.isCleaned());
assertFalse(rawVariable0.isCoded());
assertEquals(0, rawVariable0.getIdentifier());


[MASTER] 00:42:13.895 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test51 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.895 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DerivedVariable derivedVariable0 = new DerivedVariable();
derivedVariable0.questionNumber = null;
derivedVariable0.notes = null;
VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
assertEquals(0, variableSummary0.getIdentifier());

ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
assertFalse(derivedVariable0.isCleaned());
assertEquals(1, arrayList0.size());
assertFalse(derivedVariable0.isNewRecord());
assertFalse(derivedVariable0.isCoded());
assertEquals("Unknown", derivedVariable0.getAvailability());


[MASTER] 00:42:13.908 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test52 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.908 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
User user0 = new User();
rawVariable0.setName("r");
RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
assertEquals("r", rawVariable0.getDisplayName());
assertEquals("Unknown", rawVariable0.getCategory());


[MASTER] 00:42:13.909 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test50 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.909 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
DerivedVariable derivedVariable0 = new DerivedVariable();
derivedVariable0.notes = "2~\"3L";
derivedVariable0.getNotes();
boolean boolean0 = derivedVariable0.isCoded();
assertEquals("2~\"3L", derivedVariable0.getNotes());
assertFalse(boolean0);


[MASTER] 00:42:13.909 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test55 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.909 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setNotes("USER");
Variable.validateFields(rawVariable0);
rawVariable0.getLabel();
assertEquals("USER", rawVariable0.getNotes());


[MASTER] 00:42:13.909 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test56 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.910 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.codeBookNumber = "dJ_kMpNK";
String string0 = rawVariable0.getFilePath();
assertFalse(rawVariable0.isCleaned());
assertFalse(rawVariable0.isCoded());
assertEquals("", string0);
assertEquals("0", rawVariable0.getDisplayItemIdentifier());
assertFalse(rawVariable0.isNewRecord());


[MASTER] 00:42:13.910 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test53 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.911 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setName("r");
User user0 = new User();
RawVariable rawVariable1 = new RawVariable();
ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
assertEquals("r", rawVariable0.getName());
assertEquals(1, arrayList0.size());


[MASTER] 00:42:13.911 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test58 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.911 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setNotes("s\"iVU19VgOl");
rawVariable0.getFilePath();
rawVariable0.isCleaned();
int int0 = rawVariable0.getIdentifier();
assertEquals("s\"iVU19VgOl", rawVariable0.getNotes());
assertEquals(0, int0);


[MASTER] 00:42:13.911 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test40 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.911 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
OntologyTerm ontologyTerm0 = new OntologyTerm();
rawVariable0.addOntologyTerm(ontologyTerm0);
rawVariable0.updateOntologyTerm(ontologyTerm0);
rawVariable0.getOntologyTerms();
assertFalse(rawVariable0.isCleaned());
assertEquals("0", rawVariable0.getDisplayItemIdentifier());
assertFalse(rawVariable0.isNewRecord());
assertFalse(rawVariable0.isCoded());


[MASTER] 00:42:13.911 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test41 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.912 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.notes = "lZn]F_DS~t9a";
User user0 = new User();
Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
assertEquals("lZn]F_DS~t9a", rawVariable0.getNotes());
assertEquals("", rawVariable0.getYear());


[MASTER] 00:42:13.912 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test44 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.912 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
OntologyTerm ontologyTerm0 = new OntologyTerm();
rawVariable0.addOntologyTerm(ontologyTerm0);
OntologyTerm ontologyTerm1 = new OntologyTerm();
rawVariable0.updateOntologyTerm(ontologyTerm1);
assertFalse(rawVariable0.isCleaned());
assertEquals(0, rawVariable0.getIdentifier());
assertFalse(rawVariable0.isCoded());
assertFalse(rawVariable0.isNewRecord());


[MASTER] 00:42:13.912 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test45 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.912 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setCleaningDescription("jgT*+");
rawVariable0.getCleaningDescription();
rawVariable0.getAlternativeVariable();
assertEquals("jgT*+", rawVariable0.getCleaningDescription());


[MASTER] 00:42:13.912 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test42 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.913 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setForm("H'Iff$l=f]Ue");
rawVariable0.getSupportingDocuments();
rawVariable0.getCleaningDescription();
assertEquals("H'Iff$l=f]Ue", rawVariable0.getForm());


[MASTER] 00:42:13.913 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test43 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.913 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setLabel("supportingDocument.fileName.saveChanges");
RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
rawVariable1.cloneAttributes(rawVariable0);
assertEquals("supportingDocument.fileName.saveChanges", rawVariable0.getLabel());
assertEquals("Unknown", rawVariable0.getAvailability());


[MASTER] 00:42:13.913 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test48 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.913 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DerivedVariable derivedVariable0 = new DerivedVariable();
derivedVariable0.setCleaningDescription("U,orDm$.R_'Dl}{\"");
derivedVariable0.clone();
assertEquals("U,orDm$.R_'Dl}{\"", derivedVariable0.getCleaningDescription());


[MASTER] 00:42:13.913 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test49 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.914 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DerivedVariable derivedVariable0 = new DerivedVariable();
ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
derivedVariable0.setForm("? cl2cz*?^");
arrayList0.add((Variable) derivedVariable0);
arrayList0.add((Variable) derivedVariable0);
arrayList0.add((Variable) derivedVariable0);
DerivedVariable derivedVariable1 = new DerivedVariable();
derivedVariable0.addSourceVariables(arrayList0);
derivedVariable0.addSourceVariables(arrayList0);
arrayList0.add((Variable) derivedVariable1);
arrayList0.add((Variable) derivedVariable1);
derivedVariable0.getCodeBookNumber();
derivedVariable0.getForm();
derivedVariable0.getAvailability();
derivedVariable0.removeSourceVariables(arrayList0);
assertEquals("? cl2cz*?^", derivedVariable0.getForm());

derivedVariable1.getOntologyTerms();
assertFalse(derivedVariable1.isCoded());


[MASTER] 00:42:13.914 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test46 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.914 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setColumnStart("w+emS");
User user0 = new User();
DerivedVariable derivedVariable0 = new DerivedVariable();
Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
assertEquals("w+emS", rawVariable0.getColumnStart());


[MASTER] 00:42:13.914 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test47 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.915 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
OntologyTerm ontologyTerm0 = new OntologyTerm();
rawVariable0.addOntologyTerm((OntologyTerm) null);
rawVariable0.containsOntologyTerm(ontologyTerm0);

[MASTER] 00:42:13.915 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test70 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.915 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setLabel("x");
User user0 = new User("x", "x");
RawVariable rawVariable1 = new RawVariable();
rawVariable1.setName("x");
RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
rawVariable0.clone();
assertEquals("x", rawVariable0.getLabel());


[MASTER] 00:42:13.915 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test73 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.915 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
OntologyTerm ontologyTerm0 = new OntologyTerm();
rawVariable0.addOntologyTerm(ontologyTerm0);

[MASTER] 00:42:13.915 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test74 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.917 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DerivedVariable derivedVariable0 = new DerivedVariable();
SupportingDocument supportingDocument0 = new SupportingDocument();
derivedVariable0.addSupportingDocument(supportingDocument0);
RawVariable rawVariable0 = new RawVariable();
rawVariable0.setCoded(true);
ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
OntologyTerm ontologyTerm0 = new OntologyTerm();
ontologyTerm0.clone();
ontologyTerm0.getDisplayName();
arrayList0.add(ontologyTerm0);
derivedVariable0.setOntologyTerms(arrayList0);
rawVariable0.setCategory("variable.codeBookNumber.label");
derivedVariable0.setCleaningDescription("(aRK8>1-U 3z(>e7~");
User user0 = new User();
Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
user0.setUserID("-LHA");
derivedVariable0.addSourceVariable(rawVariable0);
derivedVariable0.setCleaningDescription("j&ybN4Z>G:U4ep&a*=");
user0.setFirstName("j&ybN4Z>G:U4ep&a*=");
derivedVariable0.hasSameDisplayName(rawVariable0);
Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
derivedVariable0.containsSourceVariable(rawVariable0);
derivedVariable0.getName();
derivedVariable0.getCleaningDescription();
rawVariable0.isCoded();
rawVariable0.getCleaningStatus();
SupportingDocument supportingDocument1 = new SupportingDocument();
supportingDocument1.clone();
supportingDocument1.setIsNewRecord(false);
rawVariable0.containsSupportingDocument(supportingDocument1);
rawVariable0.isNewRecord();
rawVariable0.getColumnEnd();
rawVariable0.getName();
rawVariable0.getCategory();
DerivedVariable.validateFields(derivedVariable0);

[MASTER] 00:42:13.917 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test71 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.918 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DerivedVariable derivedVariable0 = new DerivedVariable();
RawVariable rawVariable0 = new RawVariable();
ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
arrayList0.add("variable.saveChanges.valueChanged");
rawVariable0.codeBookNumber = null;
derivedVariable0.hasSameDisplayName(rawVariable0);
ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
rawVariable0.form = null;
arrayList1.add((Variable) derivedVariable0);
derivedVariable0.setSourceVariables(arrayList1);
arrayList0.stream();
rawVariable0.getCodeBookNumber();
ArrayList<SupportingDocument> arrayList2 = rawVariable0.getSupportingDocuments();
arrayList2.removeAll(arrayList0);
arrayList1.add((Variable) rawVariable0);
arrayList1.iterator();
SupportingDocument supportingDocument0 = new SupportingDocument();
Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
supportingDocument0.clone();
supportingDocument0.getDisplayName();
supportingDocument0.getDisplayName();
arrayList2.sort(comparator0);
arrayList2.add(supportingDocument0);
derivedVariable0.addSourceVariables(arrayList1);
derivedVariable0.setSupportingDocuments(arrayList2);
DerivedVariable.validateFields(derivedVariable0);

[MASTER] 00:42:13.918 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test72 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.918 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.codeBookNumber = "UNABLE_TO_FILTER_SUPPORTING_DOCUMENTS";
rawVariable0.setName("Z");
Variable.validateFields(rawVariable0);
rawVariable0.getName();
assertEquals("Z", rawVariable0.getName());


[MASTER] 00:42:13.918 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test77 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.919 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test63 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.919 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
SupportingDocument supportingDocument0 = new SupportingDocument();
SupportingDocument supportingDocument1 = new SupportingDocument();
rawVariable0.addSupportingDocument(supportingDocument1);
SupportingDocument supportingDocument2 = new SupportingDocument();
supportingDocument2.setIdentifier((-5115));
boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument2);
assertFalse(rawVariable0.isCleaned());
assertFalse(rawVariable0.isCoded());
assertFalse(rawVariable0.isNewRecord());
assertEquals("0", rawVariable0.getDisplayItemIdentifier());
assertFalse(boolean0);


[MASTER] 00:42:13.919 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test60 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.919 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
User user0 = new User();
rawVariable0.setIdentifier((-960));
Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
rawVariable0.getName();
assertEquals((-960), rawVariable0.getIdentifier());


[MASTER] 00:42:13.919 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test61 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.919 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setCodeBookNumber("s=`.AE");
rawVariable0.setAlternativeVariable(rawVariable0);
rawVariable0.setCleaned(true);
Variable.validateFields(rawVariable0);
rawVariable0.getName();
rawVariable0.getAlternativeVariable();
assertEquals("s=`.AE", rawVariable0.getCodeBookNumber());


[MASTER] 00:42:13.920 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test66 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.920 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setName("/");
User user0 = new User("/", "/");
RawVariable rawVariable1 = new RawVariable();
rawVariable1.setYear("/");
Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
assertEquals("/", rawVariable0.getDisplayName());
assertEquals("/", rawVariable1.getYear());


[MASTER] 00:42:13.920 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test68 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.920 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setLabel("user.firstName.saveChanges");
rawVariable0.setForm((String) null);
rawVariable0.setLabel((String) null);
rawVariable0.getLabel();
rawVariable0.clone();
DerivedVariable derivedVariable0 = new DerivedVariable();
derivedVariable0.setColumnEnd("E8");
ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
User user0 = new User();
Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
SupportingDocument supportingDocument0 = new SupportingDocument();
supportingDocument0.setDescription("user.firstName.saveChanges");
arrayList0.add(supportingDocument0);
derivedVariable0.setCategory((String) null);
derivedVariable0.addSupportingDocuments(arrayList0);
derivedVariable0.setLabel("INVALID_ALIAS_FILE_PATH");
derivedVariable0.clone();
derivedVariable0.getColumnEnd();
rawVariable0.getCategory();
User user1 = new User("vr>'f", "9h&_/F9}JZVCr^");
RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable0);

[MASTER] 00:42:13.921 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test69 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.921 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
assertFalse(rawVariable0.isCleaned());

rawVariable0.setCleaned(true);
OntologyTerm ontologyTerm0 = new OntologyTerm();
ontologyTerm0.setIdentifier(587);
OntologyTerm ontologyTerm1 = new OntologyTerm();
rawVariable0.addOntologyTerm(ontologyTerm1);
boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
assertTrue(rawVariable0.isCleaned());
assertFalse(boolean0);


[MASTER] 00:42:13.921 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test91 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.921 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test92 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.921 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test94 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.921 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test97 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.921 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test98 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.922 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test15 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.922 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);

[MASTER] 00:42:13.922 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test16 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.922 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setColumnEnd("general.error.blankField");
User user0 = new User();
Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
assertEquals("general.error.blankField", rawVariable0.getColumnEnd());
assertEquals("Unknown", rawVariable0.getAvailability());


[MASTER] 00:42:13.922 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test13 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.922 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
rawVariable0.addSupportingDocuments(arrayList0);
rawVariable0.getDisplayName();
assertEquals("0", rawVariable0.getDisplayItemIdentifier());
assertFalse(rawVariable0.isCleaned());
assertFalse(rawVariable0.isNewRecord());
assertFalse(rawVariable0.isCoded());


[MASTER] 00:42:13.922 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test14 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.922 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
rawVariable0.setValueLabels(arrayList0);
RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
assertFalse(rawVariable1.isNewRecord());
assertEquals("Unknown", rawVariable1.getAvailability());
assertFalse(rawVariable1.isCoded());
assertFalse(rawVariable1.isCleaned());
assertEquals("Unknown", rawVariable1.getCleaningStatus());
assertEquals(0, rawVariable1.getIdentifier());
assertEquals("Unknown", rawVariable1.getCategory());


[MASTER] 00:42:13.923 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test17 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.923 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
rawVariable0.setOntologyTerms(arrayList0);
rawVariable0.getColumnStart();
assertFalse(rawVariable0.isCoded());
assertEquals("0", rawVariable0.getDisplayItemIdentifier());
assertFalse(rawVariable0.isCleaned());
assertFalse(rawVariable0.isNewRecord());


[MASTER] 00:42:13.923 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test18 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.923 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setAvailability(".f)5aX7/U");
rawVariable0.getCleaningDescription();
assertEquals(".f)5aX7/U", rawVariable0.getAvailability());


[MASTER] 00:42:13.923 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test80 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.923 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test85 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.923 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test82 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.923 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test83 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.923 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test00 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.924 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
OntologyTerm ontologyTerm0 = new OntologyTerm();
arrayList0.add(ontologyTerm0);
rawVariable0.removeOntologyTerms(arrayList0);

[MASTER] 00:42:13.924 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test88 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.924 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test01 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.924 [logback-1] WARN  JUnitAnalyzer - Failing test:
 OntologyTerm ontologyTerm0 = new OntologyTerm();
DerivedVariable derivedVariable0 = new DerivedVariable();
derivedVariable0.getNotes();
assertFalse(derivedVariable0.isCleaned());
assertEquals(0, derivedVariable0.getIdentifier());
assertFalse(derivedVariable0.isCoded());
assertFalse(derivedVariable0.isNewRecord());


[MASTER] 00:42:13.924 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test26 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.924 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DerivedVariable derivedVariable0 = new DerivedVariable();
derivedVariable0.columnEnd = null;
DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
assertFalse(derivedVariable1.isCoded());
assertFalse(derivedVariable1.isNewRecord());
assertEquals("Unknown", derivedVariable1.getCleaningStatus());
assertEquals("Unknown", derivedVariable1.getCategory());
assertEquals("Unknown", derivedVariable1.getAvailability());
assertEquals("0", derivedVariable1.getDisplayItemIdentifier());

String string0 = derivedVariable0.getAlias();
assertNotNull(string0);
assertFalse(derivedVariable0.isCleaned());


[MASTER] 00:42:13.924 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test27 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.924 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.questionNumber = "general.fieldValue.unknown";
String string0 = rawVariable0.getCodeBookNumber();
assertFalse(rawVariable0.isCleaned());
assertEquals("0", rawVariable0.getDisplayItemIdentifier());
assertEquals("", string0);
assertFalse(rawVariable0.isNewRecord());
assertFalse(rawVariable0.isCoded());


[MASTER] 00:42:13.925 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test28 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.925 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setForm("variable.isCleaned.saveChanges.changedToNotClean");
rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);

[MASTER] 00:42:13.925 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test29 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:13.925 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DerivedVariable derivedVariable0 = new DerivedVariable();
derivedVariable0.cloneAttributes((Variable) null);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
[MASTER] 00:42:14.474 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test52 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.474 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DerivedVariable derivedVariable0 = new DerivedVariable();
derivedVariable0.setYear("x=h#e;0qXH~'vv^");
derivedVariable0.clone();
assertEquals("x=h#e;0qXH~'vv^", derivedVariable0.getYear());


[MASTER] 00:42:14.474 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test50 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.474 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DerivedVariable derivedVariable0 = new DerivedVariable();
derivedVariable0.setCodeBookNumber("variable.availability.label");
derivedVariable0.getDisplayName();
assertEquals("variable.availability.label", derivedVariable0.getCodeBookNumber());


[MASTER] 00:42:14.474 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test19 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.474 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setNotes("r");
rawVariable0.setName("r");
User user0 = new User();
RawVariable rawVariable1 = new RawVariable();
Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
assertEquals("r", rawVariable0.getDisplayName());
assertEquals("r", rawVariable0.getNotes());


[MASTER] 00:42:14.474 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test17 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.474 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
DerivedVariable derivedVariable0 = new DerivedVariable();
rawVariable0.setAlternativeVariable(derivedVariable0);
User user0 = new User();
MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
assertFalse(rawVariable0.isCoded());
assertFalse(rawVariable0.isNewRecord());
assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
assertFalse(rawVariable0.isCleaned());
assertNotNull(macawChangeEvent0);


[MASTER] 00:42:14.474 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test18 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.474 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
assertFalse(rawVariable0.isCleaned());

rawVariable0.setCleaned(true);
OntologyTerm ontologyTerm0 = new OntologyTerm();
Variable.validateFields(rawVariable0);
boolean boolean0 = rawVariable0.isCleaned();
assertTrue(boolean0);


[MASTER] 00:42:14.474 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test11 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.474 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setAvailability("UNABLE_TO_GET_ONTOLOGY_TERMS");
User user0 = new User();
RawVariable rawVariable1 = new RawVariable();
RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
assertEquals("UNABLE_TO_GET_ONTOLOGY_TERMS", rawVariable0.getAvailability());
assertEquals("Unknown", rawVariable0.getCleaningStatus());


[MASTER] 00:42:14.474 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test55 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.474 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test53 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.474 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test15 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.474 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
User user0 = new User();
MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
assertFalse(rawVariable0.isNewRecord());
assertFalse(rawVariable0.isCoded());
assertFalse(rawVariable0.isCleaned());
assertNull(macawChangeEvent0);
assertEquals("0", rawVariable0.getDisplayItemIdentifier());


[MASTER] 00:42:14.474 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test16 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.474 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setName("/");
User user0 = new User("/", "/");
RawVariable rawVariable1 = new RawVariable();
rawVariable1.form = "/";
Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
assertEquals("/", rawVariable1.getForm());
assertEquals("/", rawVariable0.getName());


[MASTER] 00:42:14.474 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test41 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.474 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.getYear();
assertEquals("0", rawVariable0.getDisplayItemIdentifier());
assertFalse(rawVariable0.isNewRecord());
assertFalse(rawVariable0.isCleaned());
assertFalse(rawVariable0.isCoded());


[MASTER] 00:42:14.474 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test08 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.474 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setLabel("T");
User user0 = new User();
RawVariable rawVariable1 = new RawVariable();
RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
assertEquals("T", rawVariable0.getLabel());
assertEquals("Unknown", rawVariable0.getAvailability());


[MASTER] 00:42:14.474 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test09 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.475 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setAlternativeVariable(rawVariable0);
User user0 = new User();
Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
rawVariable0.clone();

[MASTER] 00:42:14.475 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test06 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.475 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setLabel("K");
rawVariable0.setName("K");
User user0 = new User("K", "K");
RawVariable rawVariable1 = new RawVariable();
RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
assertEquals("K", rawVariable0.getName());
assertEquals("K", rawVariable0.getLabel());


[MASTER] 00:42:14.475 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test07 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.475 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setLabel("K");
User user0 = new User();
RawVariable rawVariable1 = new RawVariable();
SupportingDocument supportingDocument0 = new SupportingDocument();
supportingDocument0.setTitle("V/r(I D");
rawVariable0.containsSupportingDocument(supportingDocument0);
rawVariable0.getLabel();
assertEquals("K", rawVariable0.getLabel());

boolean boolean0 = rawVariable1.containsSupportingDocument(supportingDocument0);
assertFalse(boolean0);


[MASTER] 00:42:14.475 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test00 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.475 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setIsNewRecord(true);
RawVariable rawVariable1 = new RawVariable();
rawVariable1.setAlternativeVariable(rawVariable0);
assertTrue(rawVariable0.isNewRecord());

rawVariable1.getAlternativeVariable();
assertFalse(rawVariable1.isNewRecord());


[MASTER] 00:42:14.475 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test44 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.475 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
rawVariable0.addOntologyTerms(arrayList0);
rawVariable0.getFilePath();
assertFalse(rawVariable0.isNewRecord());
assertFalse(rawVariable0.isCleaned());
assertFalse(rawVariable0.isCoded());
assertEquals(0, rawVariable0.getIdentifier());


[MASTER] 00:42:14.475 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test01 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.475 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
SupportingDocument supportingDocument0 = new SupportingDocument();
rawVariable0.addSupportingDocument(supportingDocument0);

[MASTER] 00:42:14.475 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test42 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.475 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setYear(")5,/");
rawVariable0.getFilePath();
assertEquals(")5,/", rawVariable0.getYear());


[MASTER] 00:42:14.475 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test43 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.475 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test04 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.475 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
User user0 = new User();
RawVariable rawVariable1 = new RawVariable();
rawVariable1.setName("d [H/S|8i_P");
ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
assertEquals("d [H/S|8i_P", rawVariable1.getDisplayName());
assertEquals(1, arrayList0.size());


[MASTER] 00:42:14.475 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test48 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.475 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test05 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.475 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
ValueLabel valueLabel0 = new ValueLabel();
rawVariable0.addValueLabel(valueLabel0);
rawVariable0.getValueLabels();
rawVariable0.getLabel();
assertEquals("0", rawVariable0.getDisplayItemIdentifier());
assertFalse(rawVariable0.isCleaned());
assertFalse(rawVariable0.isNewRecord());
assertFalse(rawVariable0.isCoded());


[MASTER] 00:42:14.475 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test49 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.475 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test02 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.475 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setLabel("K");
User user0 = new User();
RawVariable rawVariable1 = new RawVariable();
rawVariable1.setCleaningStatus("K");
RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
assertEquals("K", rawVariable1.getCleaningStatus());
assertEquals("Unknown", rawVariable0.getCategory());


[MASTER] 00:42:14.475 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test46 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.475 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test03 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.475 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setAlternativeVariable(rawVariable0);
User user0 = new User();
User user1 = new User("variable.availability.label", "variable.availability.label");
MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, rawVariable0, (Variable) null);
assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"blank\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
assertNotNull(macawChangeEvent0);
assertFalse(rawVariable0.isCleaned());
assertFalse(rawVariable0.isCoded());
assertFalse(rawVariable0.isNewRecord());
assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());


[MASTER] 00:42:14.475 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test47 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.475 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test30 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.475 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DerivedVariable derivedVariable0 = new DerivedVariable();
RawVariable rawVariable0 = new RawVariable();
rawVariable0.notes = ">";
String string0 = rawVariable0.getCodeBookNumber();
assertFalse(rawVariable0.isCleaned());
assertFalse(rawVariable0.isCoded());
assertEquals("", string0);
assertFalse(rawVariable0.isNewRecord());
assertEquals("0", rawVariable0.getDisplayItemIdentifier());


[MASTER] 00:42:14.475 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test39 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.475 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test33 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.476 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setColumnStart("variable.columnStart.label");
rawVariable0.clone();
assertEquals("variable.columnStart.label", rawVariable0.getColumnStart());


[MASTER] 00:42:14.476 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test34 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.476 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setColumnEnd("VNFIO:N");
rawVariable0.clone();
assertEquals("VNFIO:N", rawVariable0.getColumnEnd());


[MASTER] 00:42:14.476 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test31 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.476 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DerivedVariable derivedVariable0 = new DerivedVariable();
derivedVariable0.setQuestionNumber("variable.cleaningDescription.label");
derivedVariable0.getCategory();
assertEquals("variable.cleaningDescription.label", derivedVariable0.getQuestionNumber());


[MASTER] 00:42:14.476 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test38 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.476 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test36 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.476 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test28 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.476 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setQuestionNumber("=n3wd}eb3'c");
rawVariable0.setCodeBookNumber("valueLabel.label.saveChanges");
Variable.validateFields(rawVariable0);
rawVariable0.getAlias();
rawVariable0.getCodeBookNumber();
assertEquals("valueLabel.label.saveChanges", rawVariable0.getCodeBookNumber());


[MASTER] 00:42:14.476 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test29 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.476 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);

[MASTER] 00:42:14.476 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test22 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.476 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
RawVariable rawVariable1 = new RawVariable();
rawVariable1.setFilePath("UNABLE_TO_GET_CATEGORY_IDENTIFIER");
boolean boolean0 = rawVariable1.isCoded();
assertEquals("UNABLE_TO_GET_CATEGORY_IDENTIFIER", rawVariable1.getFilePath());
assertFalse(boolean0);


[MASTER] 00:42:14.476 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test23 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.476 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setIdentifier((-1));
ValueLabel valueLabel0 = new ValueLabel();
User user0 = new User("lha.mrc.ac.uk:LHA", "lha.mrc.ac.uk:LHA");
ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel0);
valueLabel0.setLabel("}`");
valueLabel0.setIdentifier(1219);
valueLabel0.setLabel("user.affiliation.label");
valueLabel0.setValue("user.affiliation.label");
rawVariable0.setIsNewRecord(false);
ValueLabel.validateFields((ValueLabel) null);
rawVariable0.removeValueLabel(valueLabel0);
rawVariable0.clone();
rawVariable0.getIdentifier();
rawVariable0.setName("user.affiliation.label");
rawVariable0.getDisplayName();
rawVariable0.addValueLabel((ValueLabel) null);
assertEquals("-1", rawVariable0.getDisplayItemIdentifier());


[MASTER] 00:42:14.476 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test20 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.476 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setName("/");
User user0 = new User("/", "/");
RawVariable rawVariable1 = new RawVariable();
rawVariable1.setCoded(true);
Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
rawVariable0.getOntologyTerms();
assertEquals("/", rawVariable0.getName());


[MASTER] 00:42:14.476 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test26 -> class java.lang.OutOfMemoryError: unable to create new native thread
[MASTER] 00:42:14.476 [logback-1] WARN  JUnitAnalyzer - Failing test:
 RawVariable rawVariable0 = new RawVariable();
rawVariable0.setCleaningDescription((String) null);
rawVariable0.getFilePath();
assertFalse(rawVariable0.isNewRecord());
assertFalse(rawVariable0.isCleaned());
assertFalse(rawVariable0.isCoded());
assertEquals(0, rawVariable0.getIdentifier());


* Writing JUnit test case 'Variable_ESTest' to /home/ubuntu/termite/mosa/tests/s1024/69_lhamacaw/evosuite-tests
* Done!

* Computation finished
[MASTER] 00:42:14.668 [Thread-3] ERROR ExternalProcessHandler - Exception while reading output of client process. Stream closed
* EvoSuite 1.0.6
* Configuration: MOSA
* Going to generate test cases for class: macaw.businessLayer.SupportingDocument
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/69_lhamacaw/evosuite-files/evosuite.properties
* Connecting to master process on port 8336
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 01:28:51.434 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 01:28:51.450 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 01:28:51.466 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 01:28:51.466 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 01:28:51.474 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 01:28:51.484 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 01:28:51.485 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 01:28:51.531 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 01:28:51.536 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 01:28:51.717 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 01:28:51.718 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 01:28:51.721 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 01:28:51.754 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:28:51.759 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:28:51.768 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class macaw.businessLayer.SupportingDocument
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for MOSA: 383
* Using seed 1024
* Starting evolution
* Search finished after 297s and 1101 generations, 788286 statements, best individual has fitness: 88.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 104
* Number of covered goals: 104
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 38
* Number of covered goals: 38
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 129
* Number of covered goals: 125
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 79%
* Total number of goals: 34
* Number of covered goals: 27
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 38
* Number of covered goals: 38
* Generated 37 tests with total length 132
* Resulting test suite's coverage: 97% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 47%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'SupportingDocument_ESTest' to /home/ubuntu/termite/mosa/tests/s1024/69_lhamacaw/evosuite-tests
* Done!

* Computation finished
