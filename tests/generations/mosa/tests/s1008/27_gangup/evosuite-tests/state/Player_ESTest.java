/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 14 04:05:54 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      Player player0 = new Player(2, (String) null, (String) null, 2);
      player0.setZ((-3300.484F));
      float float0 = player0.getZ();
      assertEquals((-3300.484F), float0, 0.01F);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.1239058144637433
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player((-1069), "", "", (-1069));
      Player player1 = new Player(1754, "", 115);
      player0.isJoinOK(player1, false);
      player1.setY((-732.19F));
      player0.setMoney(2658.27F);
      player1.setConnected(false);
      player0.isDead();
      player0.getZ();
      player1.pack();
      player1.getIP();
      player1.getY();
      int int0 = player0.type();
      assertEquals(2658.27F, player0.getMoney(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.3234094224875887
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(5, "c", "c", 0);
      player0.setX((-2261.442F));
      player0.setDead();
      player0.id = 5;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.setDead((long) 0);
      player0.type();
      byte[] byteArray0 = player0.pack();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "c");
      Player player1 = new Player(4919, ".*[.]class$", ";q3X7q`[W8Em}A", 0);
      player0.setJoinOK(player1, false);
      System.setCurrentTimeMillis((short)4919);
      player0.reset(true);
      System.setCurrentTimeMillis(0);
      player0.getZ();
      player1.getX();
      player0.getX();
      player1.type();
      System.setCurrentTimeMillis(5);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player1.unpack(dataInputStream0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-92);
      byteArray0[5] = (byte) (-120);
      byteArray0[6] = (byte) (-90);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player(1181, ">r;p`29V^/y|.", "state.Party", (-2359), 0);
      player0.getSubparty();
      player0.boss = null;
      player0.pack();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      player0.reset(true);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      player0.unpack(dataInputStream0);
      player0.getStrength();
      player0.getY();
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      Player player1 = new Player((short)4919, (String) null, (String) null, (short)4919);
      player1.getName();
      assertEquals(4919, player1.getPictureId());
      
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      Player player2 = new Player((short)4919);
      boolean boolean0 = player0.isJoinOK(player2, false);
      assertEquals("0.0.0.0", player2.getIP());
      assertFalse(boolean0);
      assertEquals("Player4919", player2.toString());
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertEquals(0L, player2.getTimeOfDeath());
      assertFalse(player2.isDead());
      assertEquals(1, player2.getStrength());
      assertTrue(player2.isConnected());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(653, (String) null, (String) null, 653);
      player0.getIP();
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(10, "ko", (String) null, 10, 10);
      player0.toString();
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10, player0.getStrength());
      assertEquals(10, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, false);
      assertTrue(player0.isConnected());
      
      player0.setConnected(false);
      player0.isConnected();
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertFalse(player0.isConnected());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, ">JDflXfoTL:F", ">JDflXfoTL:F", (short)4919, (-2083));
      player0.remove(player1);
      player0.pack();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      
      int int0 = player1.gangStrength();
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals((-2083), int0);
      assertFalse(player1.isDead());
      assertEquals(4919, player1.getPictureId());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player();
      player0.setMoney((-1.0F));
      player0.setConnected(false);
      Player player1 = new Player(1916, " mc", 1916);
      player0.isJoinOK(player1, false);
      Player player2 = new Player(2046);
      player2.pack();
      player1.pack();
      float float0 = player0.getMoney();
      assertEquals((-1.0F), float0, 0.01F);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player((-29393), "gui.ModuleBrowserDialog$ModuleFilter", (-29393));
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player();
      player0.setMoney(0.2F);
      Player player1 = new Player((short)4919);
      player0.pack();
      player0.getMoney();
      System.setCurrentTimeMillis((-3583L));
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(2, "omK[m4;UFZo", 2);
      player0.setDead();
      player0.isDead();
      player0.pack();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.853253087436612
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(5, "Player.unpack(): *** WARNING *** data is not of proper type!", (-18860));
      Player player1 = new Player((byte)3, "Player.unpack(): *** WARNING *** data is not of proper type!", "Player.unpack(): *** WARNING *** data is not of proper type!", 5, (byte)0);
      Player player2 = new Player();
      player2.setDead(3346L);
      assertTrue(player2.isDead());
      
      player1.gangStrength();
      Player player3 = new Player(207);
      player3.pack();
      boolean boolean0 = player0.isJoinOK(player3, false);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ(1.0F);
      player0.setJoinOK(player0, false);
      float float0 = player0.getZ();
      assertEquals(1.0F, float0, 0.01F);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2935), 2544);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919);
      player1.setJoinOK(player0, false);
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals(0, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(player1.isConnected());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertTrue(boolean0);
      assertEquals("Player4919", player1.getName());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, false);
      boolean boolean0 = player0.isConnected();
      boolean boolean1 = player0.isJoinOK(player0, true);
      assertFalse(boolean1 == boolean0);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player-1", player0.toString());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, "", "", (short)4919, (short)4919);
      player1.getName();
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertTrue(player1.isConnected());
      assertFalse(player1.isDead());
      assertEquals(4919, player1.getStrength());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(boolean0);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(4919, player1.getPictureId());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.789071579480532
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player((-1), "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", (-1));
      Party party0 = new Party();
      party0.next = (Party) player0;
      player0.remove(party0);
      party0.getSubparty();
      party0.add(player0);
      party0.remove(player0);
      party0.id = 0;
      player0.setDead((-1864L));
      player0.setY((-1));
      player0.setDead();
      player0.add(party0);
      player0.setX(1417.3F);
      player0.setX(1417.3F);
      player0.setDead((long) (-1), true);
      player0.getTimeOfDeath();
      player0.setDead((long) (-1));
      player0.setDead((long) (-1), true);
      player0.setY(1417.3F);
      player0.setConnected(true);
      assertEquals(1417.3F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player((-29376), "RG33u1cq+Cs", "RG33u1cq+Cs", (-29376), (-29376));
      int int0 = player0.getStrength();
      assertEquals((-29376), player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-29376), int0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.26147761112867
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(874, (String) null, "J>Cd:o..NG<\"C79", 0);
      player0.reset(false);
      player0.setConnected(true);
      player0.boss = null;
      player0.setX(0.0F);
      player0.reset(false);
      player0.isConnected();
      player0.setDead((long) 0);
      player0.getX();
      player0.setDead();
      player0.getStrength();
      player0.getSubparty();
      Player player1 = new Player((-1167), ".*[.]class$", (String) null, (short)4919);
      player1.prev = null;
      player1.remove(player0);
      player0.isJoinOK(player1, false);
      player1.type();
      player0.getZ();
      File file0 = MockFile.createTempFile("J>Cd:o..NG<\"C79", "module.ModuleBrowserDialog$ModuleFilter");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockFileOutputStream0, 5);
      DataOutputStream dataOutputStream0 = new DataOutputStream(bufferedOutputStream0);
      player0.pack(dataOutputStream0);
      assertTrue(player0.isDead());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, true);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(byteArrayOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(objectOutputStream0);
      player0.pack(dataOutputStream0);
      boolean boolean0 = player0.isJoinOK(player0, true);
      assertTrue(boolean0);
      
      float float0 = player0.getZ();
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(2, "", "", 469, 2);
      int int0 = player0.gangStrength();
      assertEquals(2, int0);
      
      player0.pack();
      assertEquals(469, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.6376398674083723
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(4919, "", "", 309, 4919);
      Party party0 = new Party();
      player0.head = party0;
      player0.pack();
      player0.toString();
      player0.getZ();
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player((-29376), "", "", 2570, (-29376));
      player0.getIP();
      Player player1 = new Player((short)4919, (String) null, "", 2625);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertFalse(boolean0);
      assertEquals(2625, player1.getPictureId());
      assertEquals((-29376), player0.getStrength());
      
      Player player2 = new Player((-310));
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertFalse(player2.isDead());
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals(0L, player2.getTimeOfDeath());
      assertEquals(1, player2.getStrength());
      assertEquals("Player-310", player2.toString());
      assertEquals(0, player2.getPictureId());
      assertTrue(player2.isConnected());
      assertEquals("0.0.0.0", player2.getIP());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.1271454652812123
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(2, "omK[m4;UFZo", 2);
      player0.setDead();
      Player player1 = new Player();
      player1.setJoinOK(player0, false);
      Player player2 = new Player((short)4919, "omK[m4;UFZo", "8j4sx+#}Jsv pS1_+c", (-2776));
      player0.isConnected();
      player2.setMoney(0.2F);
      player0.setConnected(true);
      player1.isJoinOK(player0, true);
      player2.getZ();
      player0.setDead((-2174L), false);
      player2.getPictureId();
      assertEquals(0.2F, player2.getMoney(), 0.01F);
      
      boolean boolean0 = player1.isConnected();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player();
      player0.setX((-1249.4F));
      player0.setY(675.0F);
      player0.getY();
      float float0 = player0.getZ();
      assertEquals((-1249.4F), player0.getX(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(1900, (String) null, 1900);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(false);
      player0.pack();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(2, "omK[m4;UFZo", 2);
      player0.setDead();
      player0.getTimeOfDeath();
      player0.type();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      
      Player player1 = new Player(2, "omK[m4;UFZo", (String) null, (byte)69, (short)4919);
      assertEquals(0L, player1.getTimeOfDeath());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player();
      long long0 = player0.getTimeOfDeath();
      assertEquals(0L, long0);
      
      int int0 = player0.type();
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.getName());
      assertEquals(5, int0);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player();
      String string0 = player0.getName();
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player-1", string0);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0.0F);
      String string0 = player0.getIP();
      assertEquals("0.0.0.0", string0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player();
      float float0 = player0.getY();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.getName());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(true);
      player0.pack();
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals("Player-1", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)22;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      Player player0 = new Player();
      player0.unpack(dataInputStream0);
      assertEquals(4, byteArrayInputStream0.available());
      
      player0.pack();
      assertEquals("Player-1", player0.toString());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player();
      String string0 = player0.toString();
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", string0);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      int int0 = player0.type();
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(5, int0);
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setY(0.0F);
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player0", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player();
      float float0 = player0.getMoney();
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.getName());
      assertEquals(0.0F, float0, 0.01F);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player(0);
      assertFalse(player0.isDead());
      
      player0.setDead((long) 0, false);
      assertTrue(player0.isDead());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player();
      player0.isDead();
      Player player1 = new Player((short)4919, "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", "gWs(Z8P8r>.s", (short)4919, (short)4919);
      player1.setMoney(0.0F);
      player0.setDead((long) (short)4919, false);
      assertEquals(4919L, player0.getTimeOfDeath());
      
      int int0 = player1.getPictureId();
      assertEquals(4919, int0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ(687.4F);
      player0.pack();
      assertEquals(687.4F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party((short)4919);
      party0.id = 0;
      int int0 = player0.getPictureId();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, int0);
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player();
      player0.setMoney(2175.0F);
      float float0 = player0.getZ();
      assertEquals(2175.0F, player0.getMoney(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player();
      int int0 = player0.getStrength();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(1, int0);
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player((-3382));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals("Player-3382", player0.getName());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player((-29393), "gui.ModuleBrowserDialog$ModuleFilter", (-29393));
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(1, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      float float0 = player0.getX();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Player player0 = new Player();
      int int0 = player0.gangStrength();
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, int0);
      assertEquals("Player-1", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
  }
}
