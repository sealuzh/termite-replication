/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 14 21:26:56 GMT 2019
 */

package weka.filters.unsupervised.attribute;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;
import weka.core.Attribute;
import weka.core.BinarySparseInstance;
import weka.core.DenseInstance;
import weka.core.Instance;
import weka.core.Instances;
import weka.core.SparseInstance;
import weka.filters.AllFilter;
import weka.filters.Filter;
import weka.filters.unsupervised.attribute.Discretize;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Discretize_ESTest extends Discretize_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.908238329122374
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)62;
      byteArray0[3] = (byte)67;
      byteArray0[4] = (byte)114;
      byteArray0[5] = (byte) (-37);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      String string0 = "";
      Discretize discretize0 = new Discretize("");
      Filter.runFilter(discretize0, (String[]) null);
      discretize0.m_FindNumBins = true;
      discretize0.getAttributeIndices();
      discretize0.getBins();
      AllFilter allFilter0 = new AllFilter();
      Instances instances0 = null;
      try { 
        Filter.useFilter((Instances) null, discretize0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.834234557034891
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      assertEquals(10, discretize0.getBins());
      
      Attribute attribute0 = new Attribute((String) null);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      discretize0.m_NumBins = 1;
      Instances instances0 = new Instances("numeric", arrayList0, 0);
      discretize0.setInputFormat(instances0);
      discretize0.batchFinished();
      boolean boolean0 = discretize0.batchFinished();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.748058988887039
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("_pD");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      discretize0.setDesiredWeightOfInstancesPerInterval(2);
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("real", arrayList0, 0);
      ArrayList<SparseInstance> arrayList1 = new ArrayList<SparseInstance>();
      instances0.addAll((Collection<? extends Instance>) arrayList1);
      discretize0.setInputFormat(instances0);
      discretize0.getBinRangesString(20);
      discretize0.getDesiredWeightOfInstancesPerInterval();
      discretize0.getRevision();
      assertEquals(2.0, discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.5743378653255435
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute((String) null, (String) null);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      discretize0.m_FindNumBins = true;
      Instances instances0 = new Instances("relational", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      discretize0.setAttributeIndices(" Ft");
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Range", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)118;
      byteArray0[2] = (byte)7;
      byteArray0[3] = (byte)37;
      byteArray0[4] = (byte)95;
      byteArray0[5] = (byte)30;
      byteArray0[6] = (byte) (-123);
      byteArray0[7] = (byte) (-101);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Discretize discretize0 = new Discretize();
      discretize0.binsTipText();
      discretize0.m_DiscretizeCols = null;
      discretize0.getBinRangesString((-195225787));
      discretize0.getCapabilities();
      discretize0.setOutputFormat();
      // Undeclared exception!
      try { 
        discretize0.getAttributeIndices();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.6195259631210703
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("ENzST@P7ko7");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      discretize0.setBins(0);
      arrayList0.clone();
      discretize0.setDesiredWeightOfInstancesPerInterval(2);
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("date", arrayList0, 4);
      discretize0.setInputFormat(instances0);
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualFrequencyBinning(Integer.MAX_VALUE);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.9567057704495756
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute((String) null, (String) null);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      discretize0.setInvertSelection(true);
      arrayList0.add(attribute0);
      discretize0.m_UseEqualFrequency = true;
      discretize0.m_FindNumBins = true;
      Instances instances0 = new Instances("relational", arrayList0, 1);
      try { 
        discretize0.setInputFormat(instances0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bin number optimization in conjunction with equal-frequency binning not implemented.
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.308293844984404
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute((String) null, (String) null);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      discretize0.setDesiredWeightOfInstancesPerInterval(0);
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("date", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualFrequencyBinning(1043);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.6401461330725327
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("ENzST@P7ko7");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.clone();
      discretize0.setDesiredWeightOfInstancesPerInterval(2);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "real";
      stringArray0[1] = "position";
      stringArray0[2] = "@end";
      stringArray0[3] = "-B";
      try { 
        discretize0.setOptions(stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No value given for -B option.
         //
         verifyException("weka.core.Utils", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("EzST@7koR");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      discretize0.setDesiredWeightOfInstancesPerInterval(2);
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("date", arrayList0, 4);
      discretize0.setInputFormat(instances0);
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualFrequencyBinning(2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.381818103817425
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute((String) null);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("relational", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      discretize0.calculateCutPoints();
      DenseInstance denseInstance0 = new DenseInstance(3);
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output instance format defined
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.426644787932954
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("yVXI=@HYmZzD");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("AECOhx8", arrayList0, 6);
      Attribute attribute1 = new Attribute("real", instances0, 1795);
      instances0.setClass(attribute1);
      discretize0.setInputFormat(instances0);
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class index: 1795
         //
         verifyException("weka.core.Instances", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.820588230835343
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      double[][] doubleArray0 = new double[12][8];
      discretize0.setUseEqualFrequency(true);
      discretize0.m_CutPoints = doubleArray0;
      discretize0.getBinRangesString(3);
      boolean boolean0 = discretize0.getUseEqualFrequency();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      assertFalse(discretize0.getFindNumBins());
      
      discretize0.setFindNumBins(true);
      discretize0.getBinRangesString(3);
      boolean boolean0 = discretize0.getFindNumBins();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.9378135424538416
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("G6'W|k<f-Q>`u ");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("real", arrayList0, 13);
      discretize0.setInputFormat(instances0);
      discretize0.batchFinished();
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualWidthBinning(1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.0161202765633703
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("1806,533,-2612", "1806,533,-2612");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("numeric", arrayList0, 3);
      discretize0.setInputFormat(instances0);
      DenseInstance denseInstance0 = new DenseInstance(0);
      discretize0.batchFinished();
      // Undeclared exception!
      try { 
        discretize0.convertInstance(denseInstance0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.790389971042826
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Attribute attribute0 = new Attribute("    result = new Instance(1.0, values);\n", linkedList0, 6);
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("[JujOt7lhq", arrayList0, 4);
      discretize0.setInputFormat(instances0);
      DenseInstance denseInstance0 = new DenseInstance(3);
      boolean boolean0 = discretize0.batchFinished();
      assertFalse(boolean0);
      
      discretize0.convertInstance(denseInstance0);
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.0161949887263177
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute((String) null);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      discretize0.m_NumBins = (-1535);
      ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
      discretize0.m_FindNumBins = true;
      Instances instances0 = new Instances("relational", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      discretize0.batchFinished();
      discretize0.setInputFormat(instances0);
      discretize0.makeBinaryTipText();
      assertTrue(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.571831599661383
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute((String) null);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
      discretize0.m_FindNumBins = true;
      Instances instances0 = new Instances("relational", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      arrayList0.add(attribute0);
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.core.Range", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.7914739818829344
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute((String) null);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("relational", arrayList0, 0);
      boolean boolean0 = discretize0.setInputFormat(instances0);
      DenseInstance denseInstance0 = new DenseInstance(2);
      boolean boolean1 = discretize0.batchFinished();
      assertTrue(boolean1 == boolean0);
      
      discretize0.calculateCutPointsByEqualFrequencyBinning(0);
      assertEquals(10, discretize0.getBins());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setInvertSelection(true);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      discretize0.getInvertSelection();
      ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
      assertEquals(0, arrayList1.size());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      assertFalse(discretize0.getUseBinNumbers());
      
      discretize0.setUseBinNumbers(true);
      discretize0.getOptions();
      assertTrue(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.971558425985957
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute(":Qj^eGtna:_");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("date", arrayList0, 3);
      discretize0.setInputFormat(instances0);
      discretize0.batchFinished();
      // Undeclared exception!
      try { 
        discretize0.findNumBins(4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.8862673658216265
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("Can't normalize array. Sum is zero.");
      attribute0.addRelation((Instances) null);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      int[] intArray0 = new int[0];
      discretize0.setAttributeIndicesArray(intArray0);
      Instances instances0 = new Instances("@end", arrayList0, 0);
      boolean boolean0 = discretize0.setInputFormat(instances0);
      assertFalse(boolean0);
      
      DenseInstance denseInstance0 = new DenseInstance(84);
      discretize0.batchFinished();
      discretize0.convertInstance(denseInstance0);
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertTrue(discretize0.isNewBatch());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getUseEqualFrequency());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.967760398593298
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute((String) null);
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("real", arrayList0, 2);
      discretize0.setInvertSelection(true);
      discretize0.setInputFormat(instances0);
      discretize0.batchFinished();
      System.setCurrentTimeMillis(1);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.790389971042826
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("Value of \"position\": ");
      SystemInUtil.addInputLine("@attribute");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("Value of \"position\": ", arrayList0, 0);
      instances0.setClass(attribute0);
      boolean boolean0 = discretize0.setInputFormat(instances0);
      assertFalse(boolean0);
      
      DenseInstance denseInstance0 = new DenseInstance(3);
      discretize0.batchFinished();
      discretize0.convertInstance(denseInstance0);
      assertFalse(discretize0.getFindNumBins());
      assertTrue(discretize0.isNewBatch());
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.7914739818829344
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("an't normlize array. Sum is zero.");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      arrayList0.sort((Comparator<? super Attribute>) null);
      Instances instances0 = new Instances("numeric", arrayList0, 2);
      discretize0.setInputFormat(instances0);
      discretize0.batchFinished();
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 0;
      // Undeclared exception!
      try { 
        discretize0.input((Instance) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.8876911911657177
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute((String) null);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("relational", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      DenseInstance denseInstance0 = new DenseInstance(1);
      discretize0.batchFinished();
      discretize0.convertInstance(denseInstance0);
      discretize0.globalInfo();
      boolean boolean0 = discretize0.input(denseInstance0);
      assertFalse(discretize0.isNewBatch());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.832348950498121
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("   */\n");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      arrayList0.sort((Comparator<? super Attribute>) null);
      Instances instances0 = new Instances("vH*GA&l>]", arrayList0, 68);
      discretize0.setInputFormat(instances0);
      discretize0.input((Instance) null);
      discretize0.getOptions();
      boolean boolean0 = discretize0.input((Instance) null);
      assertFalse(discretize0.isNewBatch());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.864952979389372
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute((String) null);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("@attribute", arrayList0, 0);
      discretize0.setInputFormat(instances0);
      DenseInstance denseInstance0 = new DenseInstance(3);
      boolean boolean0 = discretize0.batchFinished();
      discretize0.convertInstance(denseInstance0);
      boolean boolean1 = discretize0.batchFinished();
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertTrue(discretize0.isNewBatch());
      assertFalse(boolean1 == boolean0);
      assertEquals(10, discretize0.getBins());
      assertTrue(boolean1);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.998526449546372
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("1806,533,-2612", "1806,533,-2612");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("numeric", arrayList0, 3);
      discretize0.setInputFormat(instances0);
      discretize0.batchFinished();
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualFrequencyBinning((-2836));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2836
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.5006362672431495
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute((String) null, (String) null);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      discretize0.m_FindNumBins = true;
      Instances instances0 = new Instances("relational", arrayList0, 1);
      arrayList0.add(attribute0);
      discretize0.setInputFormat(instances0);
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attribute names are not unique! Causes: 'null' 
         //
         verifyException("weka.core.Instances", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.7909571860173013
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("ENzST@P7ko7");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("date", arrayList0, 4);
      discretize0.setInputFormat(instances0);
      discretize0.batchFinished();
      DenseInstance denseInstance0 = new DenseInstance(1118);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(denseInstance0);
      discretize0.convertInstance(binarySparseInstance0);
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
      assertTrue(discretize0.isNewBatch());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.7909571860173013
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute((String) null);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("real", arrayList0, 2);
      boolean boolean0 = discretize0.setInputFormat(instances0);
      assertFalse(boolean0);
      
      discretize0.batchFinished();
      String string0 = discretize0.getBinRangesString(0);
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, discretize0.getBins());
      assertEquals("All", string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.7909571860173013
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("Can't normalize array. Sum is zero.");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("@end", arrayList0, 0);
      discretize0.setInputFormat(instances0);
      discretize0.batchFinished();
      // Undeclared exception!
      try { 
        discretize0.convertInstance((Instance) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "r");
      Discretize discretize0 = new Discretize("r");
      discretize0.m_IgnoreClass = true;
      String[] stringArray0 = discretize0.getOptions();
      assertEquals(7, stringArray0.length);
      
      double double0 = discretize0.getDesiredWeightOfInstancesPerInterval();
      assertEquals((-1.0), double0, 0.01);
      assertEquals(10, discretize0.getBins());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.991819630354153
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("Cin't nor=alize arr0y. Sumhs zero.");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      arrayList0.sort((Comparator<? super Attribute>) null);
      Instances instances0 = new Instances("numeric", arrayList0, 2);
      discretize0.setInputFormat(instances0);
      discretize0.batchFinished();
      discretize0.calculateCutPointsByEqualWidthBinning(0);
      discretize0.makeBinaryTipText();
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, discretize0.getBins());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      double[][] doubleArray0 = new double[19][8];
      discretize0.m_MakeBinary = true;
      boolean boolean0 = discretize0.getMakeBinary();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      double[][] doubleArray0 = new double[19][8];
      double[] doubleArray1 = new double[3];
      doubleArray0[0] = doubleArray1;
      discretize0.m_MakeBinary = true;
      doubleArray0[1] = doubleArray1;
      doubleArray0[3] = doubleArray1;
      discretize0.getCapabilities();
      assertTrue(discretize0.getMakeBinary());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("Can't normalize array. Sum is zero.");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      arrayList0.sort((Comparator<? super Attribute>) null);
      Instances instances0 = new Instances("integer", arrayList0, 0);
      discretize0.setInputFormat(instances0);
      discretize0.input((Instance) null);
      discretize0.globalInfo();
      assertFalse(discretize0.isNewBatch());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.924955966899063
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute((String) null);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      discretize0.m_FindNumBins = true;
      Instances instances0 = new Instances("relational", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      discretize0.batchFinished();
      discretize0.calculateCutPoints();
      assertTrue(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.024766524365071
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute(":Qj^eGtna:_");
      discretize0.setMakeBinary(true);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("date", arrayList0, 3);
      try { 
        discretize0.setInputFormat(instances0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // weka.filters.unsupervised.attribute.Discretize: Class attribute not set!
         //
         verifyException("weka.core.Capabilities", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.m_MakeBinary = true;
      discretize0.getOptions();
      assertTrue(discretize0.getMakeBinary());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.m_MakeBinary = true;
      try { 
        discretize0.setInputFormat((Instances) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setIgnoreClass(true);
      discretize0.m_MakeBinary = true;
      try { 
        discretize0.setInputFormat((Instances) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't ignore class when changing the number of attributes!
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.5719579500515657
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-Q";
      stringArray0[1] = "07C0r2-uWX@KV.5\"";
      stringArray0[2] = "-B";
      stringArray0[3] = "Number of folds must be greater than 1";
      stringArray0[4] = "";
      stringArray0[5] = "position";
      try { 
        discretize0.setOptions(stringArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"Number of folds must be greater than 1\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("Can't normalize array. Sum is zero.");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("relational", arrayList0, 1);
      discretize0.setInputFormat(instances0);
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualFrequencyBinning(2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      Attribute attribute0 = new Attribute("Can't normalize array. Sum is zero.");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      arrayList0.sort((Comparator<? super Attribute>) null);
      Instances instances0 = new Instances("numeric", arrayList0, 2);
      discretize0.setInputFormat(instances0);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(3);
      // Undeclared exception!
      try { 
        discretize0.input(binarySparseInstance0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Instance has no dataset assigned!!
         //
         verifyException("weka.core.RelationalLocator", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.6163875428420864
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setInvertSelection(true);
      String[] stringArray0 = discretize0.getOptions();
      assertEquals(7, stringArray0.length);
      
      discretize0.setOutputFormat();
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, discretize0.getBins());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.885074759977858
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      assertFalse(discretize0.getMakeBinary());
      
      Attribute attribute0 = new Attribute("ENzST@P7ko7");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("date", arrayList0, 4);
      boolean boolean0 = discretize0.setInputFormat(instances0);
      assertFalse(boolean0);
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getFindNumBins());
      
      discretize0.setOptions((String[]) null);
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5190725895733266
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      double[][] doubleArray0 = new double[12][8];
      discretize0.m_CutPoints = doubleArray0;
      discretize0.getBinRangesString(3);
      // Undeclared exception!
      try { 
        discretize0.setOutputFormat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      double[][] doubleArray0 = new double[27][8];
      discretize0.m_CutPoints = doubleArray0;
      // Undeclared exception!
      try { 
        discretize0.getBinRangesString((-38));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -38
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setOutputFormat();
      double[][] doubleArray0 = new double[12][8];
      discretize0.m_CutPoints = doubleArray0;
      // Undeclared exception!
      try { 
        discretize0.getCutPoints(1389);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1389
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      double[][] doubleArray0 = new double[18][8];
      discretize0.m_CutPoints = doubleArray0;
      String string0 = discretize0.getBinRangesString(0);
      assertEquals("(-inf-0],(0-0],(0-0],(0-0],(0-0],(0-0],(0-0],(0-0],(0-inf)", string0);
      
      discretize0.getCutPoints(0);
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.881766240540306
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      assertFalse(discretize0.getFindNumBins());
      
      discretize0.setFindNumBins(true);
      discretize0.getOptions();
      discretize0.getCapabilities();
      assertTrue(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-";
      stringArray0[1] = "Class name:";
      stringArray0[2] = "|";
      try { 
        discretize0.setOptions(stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String[] stringArray0 = new String[1];
      try { 
        discretize0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Utils", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String string0 = discretize0.attributeIndicesTipText();
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals("Specify range of attributes to act on. This is a comma separated list of attribute indices, with \"first\" and \"last\" valid values. Specify an inclusive range with \"-\". E.g: \"first-3,5,6-10,last\".", string0);
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getMakeBinary());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String string0 = discretize0.desiredWeightOfInstancesPerIntervalTipText();
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getFindNumBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals("Sets the desired weight of instances per interval for equal-frequency binning.", string0);
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getUseEqualFrequency());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.m_NumBins = (-2013265917);
      int int0 = discretize0.getBins();
      assertEquals((-2013265917), int0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String string0 = discretize0.useEqualFrequencyTipText();
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getMakeBinary());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getFindNumBins());
      assertEquals(10, discretize0.getBins());
      assertEquals("If set to true, equal-frequency binning will be used instead of equal-width binning.", string0);
      assertFalse(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String string0 = discretize0.findNumBinsTipText();
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, discretize0.getBins());
      assertEquals("Optimize number of equal-width bins using leave-one-out. Doesn't work for equal-frequency binning", string0);
      assertFalse(discretize0.getMakeBinary());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.321585437079472
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String[] stringArray0 = discretize0.getOptions();
      discretize0.setOptions(stringArray0);
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals(6, stringArray0.length);
      assertFalse(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      assertFalse(discretize0.getUseBinNumbers());
      
      discretize0.setUseBinNumbers(true);
      discretize0.setOutputFormat();
      boolean boolean0 = discretize0.getUseBinNumbers();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      boolean boolean0 = discretize0.getUseBinNumbers();
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals(10, discretize0.getBins());
      assertFalse(boolean0);
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.6151104036339126
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setMakeBinary(false);
      String[] stringArray0 = discretize0.getOptions();
      assertEquals(6, stringArray0.length);
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("22X", arrayList0, 82);
      try { 
        discretize0.setInputFormat(instances0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // weka.filters.unsupervised.attribute.Discretize: No attributes!
         //
         verifyException("weka.core.Capabilities", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.8872569749260304
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      assertFalse(discretize0.getUseEqualFrequency());
      
      double[][] doubleArray0 = new double[26][8];
      discretize0.setUseEqualFrequency(true);
      discretize0.m_CutPoints = doubleArray0;
      discretize0.getBinRangesString(6);
      discretize0.getOptions();
      assertTrue(discretize0.getUseEqualFrequency());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.findNumBins((-3217));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.input((Instance) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Discretize discretize0 = null;
      try {
        discretize0 = new Discretize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Range", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      boolean boolean0 = discretize0.getUseEqualFrequency();
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getFindNumBins());
      assertFalse(boolean0);
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      double double0 = discretize0.getDesiredWeightOfInstancesPerInterval();
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals((-1.0), double0, 0.01);
      assertFalse(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.5102170934221872
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Discretize discretize0 = new Discretize("");
      String[] stringArray0 = discretize0.getOptions();
      assertEquals(4, stringArray0.length);
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.getCutPoints((-252));
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getMakeBinary());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      int int0 = discretize0.getBins();
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getFindNumBins());
      assertEquals(10, int0);
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      boolean boolean0 = discretize0.getFindNumBins();
      assertFalse(discretize0.getMakeBinary());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals(10, discretize0.getBins());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      try { 
        discretize0.setInputFormat((Instances) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setUseEqualFrequency(false);
      boolean boolean0 = discretize0.getMakeBinary();
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(boolean0);
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals(10, discretize0.getBins());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String string0 = discretize0.useBinNumbersTipText();
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals(10, discretize0.getBins());
      assertEquals("Use bin numbers (eg BXofY) rather than ranges for for discretized attributes", string0);
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.getInvertSelection();
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualWidthBinning(82);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.listOptions();
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Discretize discretize0 = new Discretize("");
      discretize0.setDesiredWeightOfInstancesPerInterval((-3299.905617));
      assertEquals((-3299.905617), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String string0 = discretize0.getAttributeIndices();
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getFindNumBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals("first-last", string0);
      assertFalse(discretize0.getUseEqualFrequency());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.setAttributeIndices((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String string0 = discretize0.invertSelectionTipText();
      assertEquals("Set attribute selection mode. If false, only selected (numeric) attributes in the range will be discretized; if true, only non-selected attributes will be discretized.", string0);
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getFindNumBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setOptions((String[]) null);
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getMakeBinary());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.calculateCutPoints();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      String[] stringArray0 = new String[0];
      Discretize.main(stringArray0);
      assertEquals(0, stringArray0.length);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.setAttributeIndicesArray((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Range", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      Discretize discretize0 = new Discretize("07C0r2-uWX@KV.5\"");
      int[] intArray0 = new int[0];
      discretize0.setAttributeIndicesArray(intArray0);
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getFindNumBins());
  }
}
