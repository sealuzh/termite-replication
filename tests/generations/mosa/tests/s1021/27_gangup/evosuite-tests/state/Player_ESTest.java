/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 14 21:36:42 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.5675233659061063
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(2560, "MbsOMu7iU]'Ie", "MbsOMu7iU]'Ie", 2560);
      player0.pack();
      Player player1 = new Player(4, "MbsOMu7iU]'Ie", "MbsOMu7iU]'Ie", (short)4919);
      player1.pack();
      player1.setJoinOK(player0, false);
      player1.setConnected(false);
      player0.isJoinOK(player1, false);
      System.setCurrentTimeMillis((short)4919);
      player0.gangStrength();
      player1.pack();
      player1.isJoinOK(player0, false);
      System.setCurrentTimeMillis(1392409296345L);
      player1.pack();
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertTrue(player0.isConnected());
      assertFalse(player1.isConnected());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.530371357724608
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player1.pack();
      Player player2 = new Player((short)4919);
      player2.setJoinOK(player0, true);
      player0.pack();
      player1.pack();
      player0.setZ(798);
      System.setCurrentTimeMillis(1392409296320L);
      player1.pack();
      player2.isJoinOK(player0, true);
      assertEquals(798.0F, player0.getZ(), 0.01F);
      
      player2.pack();
      assertEquals("Player4919", player2.getName());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(25856, "&A{d", "zF", (-841), 25856);
      player0.setZ(0.1F);
      player0.getZ();
      player0.pack();
      assertEquals(0.1F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.186383112867369
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player((-1));
      Player player1 = new Player((-909), (String) null, (String) null, (short)4919, (short)4919);
      player0.boss = (Party) player1;
      Player player2 = new Player();
      player0.setZ((short)4919);
      player0.getSubparty();
      player2.next = (Party) player0;
      player0.getSubparty();
      player0.boss = (Party) player2;
      player0.setJoinOK(player2, false);
      player0.setZ((-1));
      player0.setDead((-1147L));
      player0.id = (int) (short)4919;
      player2.pack();
      player2.setZ((-1201.0938F));
      player2.setDead((-1147L), true);
      player0.type();
      System.setCurrentTimeMillis(5);
      player0.getZ();
      player2.gangStrength();
      boolean boolean0 = player0.isJoinOK(player2, false);
      assertEquals((-1201.0938F), player2.getZ(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player((-1456), " ", "1GdtTI<", (-1456));
      player0.setX(0.0F);
      player0.setX((-1456));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.close();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      player0.unpack(dataInputStream0);
      player0.id = 3;
      player0.setDead((long) (-1456), true);
      player0.type();
      player0.pack();
      player0.getTimeOfDeath();
      System.setCurrentTimeMillis(1392409281320L);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.107694069091043
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player(2716, ",D &<>mYD", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", 2304, 2716);
      player0.setJoinOK(player1, true);
      player1.pack();
      Player player2 = new Player(5, "K+", (String) null, 2716, (short)4919);
      Player player3 = new Player();
      player3.isJoinOK(player0, true);
      player0.remove(player2);
      Player player4 = new Player(710);
      player3.pack();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".z=.");
      player2.toString();
      Player player5 = new Player((short)4919, "K+", (String) null, 2716);
      player0.gangStrength();
      Player player6 = new Player();
      player5.setY(0.2F);
      player5.isJoinOK(player3, false);
      player2.isJoinOK(player3, false);
      float float0 = player5.getY();
      assertEquals(0.2F, float0, 0.01F);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player();
      player0.setY((-2937.9907F));
      float float0 = player0.getY();
      assertEquals((-2937.9907F), float0, 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.301608716407634
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919);
      player1.setJoinOK(player0, true);
      player1.pack();
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertFalse(boolean0);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals("Player4919", player1.toString());
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
      assertEquals(0, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.1262368167947456
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(10, "vu\"~", "", 10, 10);
      player0.pack();
      player0.getStrength();
      player0.setX(0.0F);
      Player player1 = new Player(10);
      player1.setDead(1392409296320L, true);
      player1.setDead(1392409296320L, true);
      player0.setMoney(1410.136F);
      Player player2 = new Player();
      player1.next = (Party) player2;
      player1.boss = (Party) player0;
      player0.isJoinOK(player1, true);
      player1.type();
      player0.getMoney();
      player1.pack();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      try { 
        dataInputStream0.readShort();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.9417429777213613
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals("Player-1", player1.toString());
      assertEquals(0, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(player1.isConnected());
      assertFalse(player1.isDead());
      assertTrue(boolean0);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(3396);
      Party party0 = new Party((-3920));
      player0.add(party0);
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919);
      player1.add(player0);
      player1.pack();
      int int0 = player1.gangStrength();
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(2, int0);
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(0, player1.getPictureId());
      assertEquals("Player4919", player1.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.1757412430371352
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player();
      PipedInputStream pipedInputStream0 = new PipedInputStream(772);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      sequenceInputStream0.markSupported();
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      player0.unpack(dataInputStream0);
      player0.getZ();
      Party party0 = new Party((short)4919);
      player0.head = party0;
      player0.getZ();
      Player player1 = new Player();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.isJoinOK(player1, false);
      player0.setDead((long) (short)4919);
      player0.getTimeOfDeath();
      player1.type();
      player1.getY();
      player1.setMoney(0.0F);
      player0.setMoney((-2224.0F));
      Player player2 = new Player((-24606), "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 1200, 1919);
      player0.isJoinOK(player2, false);
      player2.gangStrength();
      System.setCurrentTimeMillis((-2976L));
      player2.gangStrength();
      player2.gangStrength();
      player0.getMoney();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-100);
      byteArray0[1] = (byte) (-120);
      byteArray0[2] = (byte)1;
      byteArray0[4] = (byte)96;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      System.setCurrentTimeMillis((short)4919);
      System.setCurrentTimeMillis(1919);
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      Player player1 = new Player((short)4919, "=7'D)&L9zKifnH+4", "=7'D)&L9zKifnH+4", (short)4919);
      long long0 = player0.getTimeOfDeath();
      assertEquals(1392409281320L, long0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)84;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-107), 261);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.359848211078123
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setZ(0);
      player0.getPictureId();
      player0.gangStrength();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player1 = new Player((-1), "]B", "state.Player", (-1), (-1));
      player1.setDead();
      player0.prev = (Party) player1;
      player0.reset(false);
      player0.setConnected(true);
      player0.getZ();
      player1.getIP();
      player1.setX(0);
      player1.setX((-1));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      byteArrayOutputStream0.close();
      byteArrayOutputStream0.write(0);
      player1.pack();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player1.pack(dataOutputStream0);
      float float0 = player1.getX();
      assertEquals((-1.0F), float0, 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player((-14863), "", "", 254);
      player0.getName();
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(254, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.7518685126965625
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player((-7242), ".*[.]class$", ".*[.]class$", (-187), 0);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      int int0 = player0.gangStrength();
      assertEquals(0, int0);
      
      Player player1 = new Player((-730));
      player0.isJoinOK(player1, true);
      assertEquals((-187), player0.getPictureId());
      
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      Player player2 = new Player();
      player2.pack();
      long long0 = player1.getTimeOfDeath();
      assertEquals(0L, long0);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player-730", player1.getName());
      assertEquals(0, player1.getPictureId());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertTrue(player1.isConnected());
      assertEquals(1, player1.getStrength());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(1788, "#_|7SG<BXxB7so=}", "#_|7SG<BXxB7so=}", 1788, (-1017));
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte)5;
      byteArray0[5] = (byte)76;
      byteArray0[6] = (byte) (-39);
      byteArray0[7] = (byte) (-60);
      byteArray0[8] = (byte) (-121);
      player0.unpack(byteArray0);
      player0.getStrength();
      assertTrue(player0.isConnected());
      
      player0.setConnected(false);
      boolean boolean0 = player0.isConnected();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player(10);
      int int0 = player0.gangStrength();
      assertEquals(0, player0.getPictureId());
      assertEquals(1, int0);
      assertEquals("Player10", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
      
      Player player1 = new Player(10, (String) null, (String) null, 0);
      player1.getName();
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0, player1.getPictureId());
      assertFalse(player1.isDead());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = null;
      Player player0 = new Player((-1619), (String) null, (String) null, 0, (-7242));
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)127;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      FileSystemHandling.shouldAllThrowIOExceptions();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      player0.getIP();
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.4153064443868852
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setZ(0);
      player0.setX(0);
      player0.getPictureId();
      player0.gangStrength();
      Player player1 = new Player((-1), "]B", "state.Player", (-1), (-1));
      player1.setDead();
      player0.prev = (Party) player1;
      player0.reset(false);
      player0.setConnected(true);
      player0.getZ();
      player1.getIP();
      player1.setX(0);
      player1.setX((-1));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-81);
      byteArray0[1] = (byte) (-81);
      byteArray0[2] = (byte) (-81);
      byteArray0[3] = (byte) (-81);
      byteArray0[4] = (byte) (-81);
      player0.unpack(byteArray0);
      player1.getY();
      assertEquals(1392409281320L, player1.getTimeOfDeath());
      
      float float0 = player0.getX();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player();
      player0.getSubparty();
      float float0 = Player.MOVE_DISTANCE;
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      Player player1 = new Player((-2361), "", "", (byte)0);
      player1.getIP();
      player0.setDead();
      player1.isDead();
      int int0 = player0.type();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(5, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player((-1511), "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", (-1511), (-1511));
      int int0 = player0.gangStrength();
      assertEquals((-1511), int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-1511), player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(3680, (String) null, (String) null, 3680);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = false;
      Player player1 = null;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      System.setCurrentTimeMillis((-117L));
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player((-4951), "5", "5", 0, (-4951));
      Party party0 = new Party((-236));
      player0.boss = party0;
      player0.getStrength();
      int int0 = player0.getStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals((-4951), int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(0);
      player0.getIP();
      Party party0 = player0.head;
      player0.boss = null;
      player0.setY(0);
      player0.getSubparty();
      player0.setConnected(false);
      player0.setDead((long) 0);
      player0.setZ(0);
      player0.getIP();
      player0.isDead();
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(0, "", "", 242, 3547);
      Party party0 = player0.gangBoss();
      party0.boss = (Party) player0;
      player0.remove(party0);
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      Player player1 = new Player(2);
      player0.setJoinOK(player1, true);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(0, player1.getPictureId());
      assertEquals("Player2", player1.getName());
      assertEquals(1, player1.getStrength());
      
      long long0 = player0.getTimeOfDeath();
      assertEquals(0L, long0);
      
      player0.toString();
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(3547, player0.getStrength());
      assertEquals(242, player0.getPictureId());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player();
      player0.toString();
      player0.gangStrength();
      Player player1 = new Player(1);
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player();
      String string0 = player0.getName();
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("Player-1", string0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player(50, "", "", (-1), 0);
      int int0 = Packable.GAME_EVENT;
      player0.getStrength();
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player();
      int int0 = player0.getStrength();
      assertEquals(1, int0);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      Player player1 = new Player((short)4919);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player1.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(14242);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(byteArrayOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(29, byteArrayOutputStream0.size());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.022794924510636
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setZ(0);
      player0.setX(0);
      player0.getPictureId();
      player0.gangStrength();
      player0.setDead();
      player0.prev = (Party) player0;
      assertTrue(player0.isDead());
      
      player0.reset(true);
      player0.setConnected(true);
      player0.getZ();
      player0.getIP();
      player0.setX(0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      byteArrayOutputStream0.write(0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals("\u0000\u00137\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0007Player0", byteArrayOutputStream0.toString());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player((-1084), "Bp Kf551N;u7", "+p~`t:L-IHys", (-1084));
      Player player1 = new Player(5, "+p~`t:L-IHys", "+p~`t:L-IHys", (-397), 5);
      player0.setJoinOK(player1, true);
      player0.getPictureId();
      player0.setMoney((-1084));
      assertEquals((-1084.0F), player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(false);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.getName());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player(0, "", "AHC!ued", 4, 93);
      player0.getPictureId();
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player((-187), "XubY_(JS+rJ1_'B*", 392);
      String string0 = player0.getIP();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(392, player0.getPictureId());
      assertEquals("0.0.0.0", string0);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(true);
      player0.pack();
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player();
      float float0 = player0.getX();
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.getName());
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player();
      player0.setConnected(true);
      player0.pack();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ((-1.0F));
      float float0 = player0.getMoney();
      assertEquals((-1.0F), player0.getZ(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = player0.isConnected();
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.getName());
      assertTrue(boolean0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 5, 5);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(1, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      byte[] byteArray0 = player1.pack();
      player1.unpack(byteArray0);
      assertEquals(0.0F, player1.getZ(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertTrue(player1.isConnected());
      assertEquals(1, player1.getStrength());
      assertEquals("Player-1", player1.toString());
      assertEquals(0, player1.getPictureId());
      assertEquals((-1), player1.getId());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player((-1564), "):M_-{m^I;{'E``C", "):M_-{m^I;{'E``C", (-1564));
      byte[] byteArray0 = new byte[2];
      player0.unpack(byteArray0);
      player0.reset(false);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-1564), player0.getPictureId());
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
  }
}
