/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 13 19:53:32 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.7586383842625644
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCoded(true);
      rawVariable0.setIdentifier((-2028598554));
      rawVariable0.notes = null;
      rawVariable0.getNotes();
      Variable.validateFields(rawVariable0);
      rawVariable0.clone();
      rawVariable0.createVariableSummary();
      assertEquals("-2028598554", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.7914234446919735
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add((OntologyTerm) null);
      rawVariable0.removeSupportingDocument((SupportingDocument) null);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.setAvailability("5.Yb]o}&i(2j");
      rawVariable0.setCodeBookNumber((String) null);
      rawVariable0.addSupportingDocuments(arrayList1);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.getCodeBookNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList2);
      derivedVariable0.removeSourceVariable(rawVariable0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.columnEnd = null;
      arrayList0.add(supportingDocument0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      String string0 = derivedVariable0.getColumnEnd();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertNull(string0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm((OntologyTerm) null);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.setAlias("variab;e.availabilit_.label");
      derivedVariable0.setCleaningDescription("variab;e.availabilit_.label");
      derivedVariable0.setCleaned(true);
      derivedVariable0.getIdentifier();
      System.setCurrentTimeMillis(1L);
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getIdentifier();
      derivedVariable0.getIdentifier();
      derivedVariable0.getLabel();
      boolean boolean0 = derivedVariable0.isCleaned();
      assertEquals("variab;e.availabilit_.label", derivedVariable0.getAlias());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.219464930068532
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      derivedVariable0.setName((String) null);
      derivedVariable0.getName();
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.7475650720932867
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCoded(false);
      rawVariable0.setCleaningDescription((String) null);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.setColumnEnd("MIQY@");
      User user0 = new User("MIQY@", "Z,|2[");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      derivedVariable0.removeOntologyTerms(arrayList1);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setLabel("variable.name.label");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      rawVariable0.setCategory("Z,|2[");
      rawVariable0.getCleaningStatus();
      rawVariable0.getCleaningDescription();
      rawVariable0.getCategory();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      rawVariable0.clone();
      derivedVariable0.cloneAttributes(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setColumnStart("");
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable1.getValueLabels();
      rawVariable1.isCleaned();
      assertEquals("variable.name.label", rawVariable1.getLabel());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.281440279691212
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      derivedVariable0.setIdentifier((-1791654986));
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getNotes();
      assertEquals("-1791654986", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel(":");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertEquals(":", derivedVariable0.getLabel());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.setIdentifier(2001);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.createVariableSummary();
      assertEquals("2001", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.1457228029945123
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1908874351));
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setDescription("variable.saveChanges.valueChanged");
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm1);
      derivedVariable0.setForm("/q7g(T%!#L:U.PXer/");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setForm("variable.saveChanges.valueChanged");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable1.removeSupportingDocuments(arrayList0);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      assertEquals("/q7g(T%!#L:U.PXer/", derivedVariable0.getForm());
      
      derivedVariable1.createVariableSummary();
      derivedVariable1.getCategory();
      String string0 = derivedVariable1.getCategory();
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.7259398298425874
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm((String) null);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setAlias("WrbaGR+jZf[b8s/NSJ");
      derivedVariable0.addSourceVariables(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("iUqT,jOp]j;Oaf )>");
      derivedVariable0.removeSourceVariable(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-2058005160));
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList1);
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.getCleaningStatus();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("Unknown");
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable0.setNotes("Unknown");
      rawVariable0.getForm();
      rawVariable0.getColumnEnd();
      derivedVariable0.getSourceVariables();
      derivedVariable0.getName();
      derivedVariable0.getDisplayName();
      rawVariable0.getForm();
      rawVariable0.getLabel();
      User user0 = new User("xAHcS(.!@s'h+q?N", "4F\"[:~i_PyDjW");
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.486430429216676
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = null;
      arrayList0.add((OntologyTerm) null);
      rawVariable0.addOntologyTerms(arrayList0);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.6696385396532256
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "x,dNwrL}+P6*a";
      derivedVariable0.setCleaningStatus("I*Q`");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      ontologyTerm0.setOntologyName("~36rWz");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.clone();
      derivedVariable0.notes = "3QMIY@";
      derivedVariable0.getDisplayName();
      derivedVariable0.clone();
      derivedVariable0.getColumnStart();
      assertEquals("x,dNwrL}+P6*a", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.9663881312694826
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable1.setOntologyTerms(arrayList0);
      derivedVariable1.setIdentifier(2390);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable1.removeValueLabel(valueLabel0);
      derivedVariable1.setYear("variable.cleaningDescription.label");
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.form = "variable.cleaningDescription.label";
      derivedVariable0.notes = "p>]V)#;";
      derivedVariable0.setColumnStart("UNABLE_TO_CREATE_VALUE_LABELS");
      derivedVariable0.createVariableSummary();
      derivedVariable0.isNewRecord();
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getAlternativeVariable();
      derivedVariable0.getValueLabels();
      assertEquals("UNABLE_TO_CREATE_VALUE_LABELS", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.1488608757772574
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      derivedVariable0.setIdentifier(944);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getDisplayName();
      assertEquals(944, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.620959571408677
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "UNABLE_TO_CREATE_RAW_VARIABLE";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(0, ontologyTerm0);
      User user0 = new User("[p5)Z\"M", "[p5)Z\"M");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.getNotes();
      assertEquals("UNABLE_TO_CREATE_RAW_VARIABLE", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.087347025715612
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      Integer[] integerArray0 = new Integer[4];
      int int0 = 93;
      Integer integer0 = new Integer(93);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(int0);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer(int0);
      integerArray0[2] = integer2;
      Integer integer3 = new Integer((-2267));
      integerArray0[3] = integer3;
      arrayList0.toArray(integerArray0);
      derivedVariable0.addSourceVariables(arrayList0);
      User user0 = new User("aAxVJWOA_;@bHU+~I", "aAxVJWOA_;@bHU+~I");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setCodeBookNumber("variable.cleaningStatus.label");
      derivedVariable0.setFilePath((String) null);
      derivedVariable0.getDisplayName();
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getCleaningStatus();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getOntologyTerms();
      System.setCurrentTimeMillis(0L);
      derivedVariable0.createVariableSummary();
      derivedVariable0.getFilePath();
      assertEquals("variable.cleaningStatus.label", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.923313392158839
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.addOntologyTerms(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-1762));
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.setNotes("U5gvVwVDg9");
      derivedVariable0.getLabel();
      rawVariable0.getNotes();
      derivedVariable0.getSupportingDocuments();
      rawVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.getOntologyTerms();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.getDisplayName();
      rawVariable0.getIdentifier();
      rawVariable0.getColumnStart();
      derivedVariable0.isNewRecord();
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertEquals("-1762", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.6211158458265547
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.setName("grYX8p$mD");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getDisplayName();
      assertEquals("grYX8p$mD", derivedVariable0.getName());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.4410832744684536
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = null;
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      User user1 = new User("rz.Kt:d%[A;.0[p!", "rz.Kt:d%[A;.0[p!");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.746976092441772
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("DUPLICATE_USER");
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setColumnStart((String) null);
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertEquals("DUPLICATE_USER", derivedVariable0.getDisplayName());
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.7586383842625644
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber((String) null);
      derivedVariable0.getQuestionNumber();
      derivedVariable0.codeBookNumber = "TF";
      derivedVariable0.clone();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getLabel();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("XXB/$P<e+R");
      derivedVariable1.removeSourceVariable(derivedVariable0);
      supportingDocument0.setDocumentCode((String) null);
      supportingDocument0.setIdentifier(1588);
      // Undeclared exception!
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setAvailability("");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.684989220951399
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("I");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.getName();
      assertEquals("I", derivedVariable0.getName());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus("I");
      derivedVariable0.setName("I");
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("I", derivedVariable0.getCleaningStatus());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("dsk#u");
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.getLabel();
      assertEquals("dsk#u", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.8983072082517496
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.clone();
      derivedVariable0.getCategory();
      derivedVariable0.getDisplayName();
      User user0 = new User();
      rawVariable0.setIdentifier(1);
      User.detectFieldChanges(user0, user0, user0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      arrayList0.clear();
      arrayList0.clone();
      derivedVariable1.setSourceVariables(arrayList0);
      derivedVariable1.isCleaned();
      rawVariable0.isCleaned();
      rawVariable0.getIdentifier();
      derivedVariable1.clone();
      rawVariable0.getAvailability();
      assertEquals("1", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName(":");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlias("/|9:$ &mj0S)");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals(":", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.059615150468091
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = ":";
      User user0 = new User(":", ":");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      derivedVariable0.getQuestionNumber();
      assertEquals(":", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.7096612729848757
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("3+#__uyE~UNk.f");
      derivedVariable0.setName("V");
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("V", derivedVariable0.getDisplayName());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.6260602536649986
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier((-820));
      arrayList0.add(supportingDocument1);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean0);
      
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.8055124628724255
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel(":");
      User user0 = new User();
      derivedVariable0.setAvailability(":");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals(":", derivedVariable0.getLabel());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.7096612729848757
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("o:");
      User user0 = new User();
      derivedVariable0.setLabel("o:");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("o:", derivedVariable0.getLabel());
      assertEquals("o:", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("Ua(~,+W");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("Ua(~,+W", "Ua(~,+W");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("Ua(~,+W", derivedVariable0.getLabel());
      assertFalse(arrayList0.isEmpty());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.4381098652423896
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.codeBookNumber = ":";
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals(":", derivedVariable1.getCodeBookNumber());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("DUPLICATE_CATEGORY");
      derivedVariable0.setName("I");
      User user0 = new User("I", "I");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.getYear();
      assertEquals("I", derivedVariable0.getName());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.3643764676852554
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("");
      rawVariable0.setCleaned(true);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("~");
      derivedVariable0.setYear("~");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("~", derivedVariable0.getLabel());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.282360045759959
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User("blank", "blank");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertFalse(rawVariable1.isCleaned());
      assertTrue(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.383522442827672
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User("r*|AL;RM/}aAv}j", "r*|AL;RM/}aAv}j");
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertTrue(rawVariable0.isCleaned());
      assertFalse(rawVariable1.isCleaned());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setAlias("user.phone.label");
      arrayList0.add(supportingDocument0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getAlias();
      assertEquals("user.phone.label", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.5897573946900736
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes(rawVariable0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.805248087459339
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("n]q?/+Rv");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.getValueLabels();
      assertEquals("n]q?/+Rv", derivedVariable0.getName());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.485215761775983
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("I");
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      Variable.validateFields(derivedVariable0);
      assertEquals("I", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("c#)NXv]S(;Jb/Mu;}:");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("c#)NXv]S(;Jb/Mu;}:", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      Variable variable0 = derivedVariable0.getAlternativeVariable();
      assertFalse(variable0.isCleaned());
      assertEquals("0", variable0.getDisplayItemIdentifier());
      assertFalse(variable0.isCoded());
      assertFalse(variable0.isNewRecord());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setCoded(true);
      derivedVariable0.createVariableSummary();
      derivedVariable0.getAvailability();
      derivedVariable0.isCoded();
      derivedVariable0.isCoded();
      int int0 = 0;
      ArrayList<DerivedVariable> arrayList0 = new ArrayList<DerivedVariable>();
      // Undeclared exception!
      try { 
        arrayList0.subList((-3585), (-3585));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // fromIndex = -3585
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "user.lastName.label";
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getLabel());
      assertEquals("", variableSummary0.getDisplayName());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertEquals("", variableSummary0.getYear());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("A");
      derivedVariable0.setLabel("A");
      derivedVariable0.createVariableSummary();
      assertEquals("A", derivedVariable0.getDisplayName());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = null;
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.0946736836590305
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.6211158458265547
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "variable.isCoded.label";
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("variable.isCoded.label", rawVariable0.getColumnEnd());
      
      derivedVariable0.getLabel();
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.4381098652423896
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "gh!";
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("gh!", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getForm());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.6846842034128904
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel(":");
      User user0 = new User();
      derivedVariable0.setColumnEnd(":");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getColumnEnd();
      assertEquals(":", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1971631324));
      arrayList0.add(0, ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.columnEnd = "X'^`y";
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable1.containsOntologyTerm(ontologyTerm1);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      Variable.validateFields(derivedVariable1);
      derivedVariable1.getColumnStart();
      derivedVariable1.hasSameDisplayName(derivedVariable0);
      derivedVariable0.getCleaningDescription();
      derivedVariable1.removeSourceVariables(arrayList1);
      derivedVariable0.removeSourceVariables(arrayList1);
      derivedVariable0.getColumnEnd();
      assertEquals("X'^`y", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("~");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("~", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=4.1849424462399245
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      DerivedVariable derivedVariable2 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable2.isNewRecord());
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertEquals("Unknown", derivedVariable2.getCategory());
      assertEquals(0, derivedVariable2.getIdentifier());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      System.setCurrentTimeMillis((-3056L));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(0, ontologyTerm0);
      derivedVariable1.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.addSourceVariable(derivedVariable1);
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "variable.isCoded.label";
      String string0 = derivedVariable0.getAlias();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "variable.codeBookNumber.label";
      String string0 = rawVariable0.getYear();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", string0);
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.6260602536649986
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel(":");
      User user0 = new User();
      derivedVariable0.setCategory(":");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals(":", derivedVariable0.getLabel());
      assertEquals(":", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.4466856169199285
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, (Variable) null);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"blank\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      
      String string0 = derivedVariable0.getCategory();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", string0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(0, ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(0, ontologyTerm0);
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      int int0 = derivedVariable0.getIdentifier();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, int0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(0, ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.5272886853327274
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      derivedVariable0.getSupportingDocuments();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, (Variable) null);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.9654211895134472
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("KCy _SF");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("KCy _SF", derivedVariable0.getColumnEnd());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      boolean boolean0 = rawVariable0.isCoded();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(boolean0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "user.city.label";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getForm();
      assertEquals("user.city.label", derivedVariable0.getForm());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(rawVariable0.isCleaned());
      assertNotNull(macawChangeEvent0);
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.9971515848932915
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("Pt>Q %1${@");
      rawVariable0.getLabel();
      assertEquals("Pt>Q %1${@", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("c?Ou");
      derivedVariable0.getNotes();
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getDisplayName();
      assertEquals("c?Ou", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("SUfd)`#?(P");
      rawVariable0.getAlias();
      assertEquals("SUfd)`#?(P", rawVariable0.getNotes());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("user.email.saveChanges");
      derivedVariable0.getFilePath();
      assertEquals("user.email.saveChanges", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.6731033352984412
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.getFilePath();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.668619868083795
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.getOntologyTerms();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.6256902943605223
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.6195847459083694
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.624728496322497
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "`PAxbk&qD6Trl:P(jp";
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      rawVariable0.createVariableSummary();
      assertEquals("`PAxbk&qD6Trl:P(jp", rawVariable0.getCodeBookNumber());
      
      boolean boolean0 = derivedVariable0.isCleaned();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.5806560020475704
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      rawVariable0.form = "s4z(";
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getYear());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("s4z(", rawVariable1.getForm());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("", rawVariable1.getColumnStart());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "variable.isCoded.label";
      String string0 = derivedVariable0.getFilePath();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(false);
      String string0 = rawVariable0.getDisplayItemIdentifier();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", string0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.5806560020475704
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = null;
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isCoded());
      
      rawVariable0.getLabel();
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("KphKV68h<5#]!\"");
      rawVariable0.clone();
      rawVariable0.getCleaningStatus();
      assertEquals("KphKV68h<5#]!\"", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("<=2E+4u>=o=L5(%X(");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("<=2E+4u>=o=L5(%X(", rawVariable0.getQuestionNumber());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName(":");
      User user0 = new User();
      derivedVariable0.cloneAttributes(derivedVariable0);
      assertEquals(":", derivedVariable0.getName());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.383705091229498
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("lan-<1");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("lan-<1", derivedVariable0.getNotes());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("variable.codeBookNumber.label");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("l");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("l", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("(*7(fd?_");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("(*7(fd?_", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "general.fieldValue.unknown";
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("general.fieldValue.unknown", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = null;
      String string0 = derivedVariable0.getYear();
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertNotNull(string0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.6256902943605223
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber(":");
      derivedVariable0.setLabel(":");
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals(":", derivedVariable0.getQuestionNumber());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("variable.saveChanges.valueChanged");
      derivedVariable0.setName("variable.saveChanges.valueChanged");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("variable.saveChanges.valueChanged", derivedVariable0.getDisplayName());
      assertEquals("variable.saveChanges.valueChanged", derivedVariable0.getForm());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.6851309643957646
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel(":");
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = ":";
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals(":", rawVariable0.getColumnStart());
      assertEquals(":", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      String string0 = derivedVariable0.getDisplayItemIdentifier();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", string0);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getOntologyTerms();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add((OntologyTerm) null);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.getFilePath();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("variable.isCoded.label");
      rawVariable0.getForm();
      assertEquals("variable.isCoded.label", rawVariable0.getYear());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getAlternativeVariable();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("rP%,=rauWA~k4");
      derivedVariable0.getDisplayName();
      assertEquals("rP%,=rauWA~k4", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("user.addressLine2.saveChanges");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("gh!");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd((String) null);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add((SupportingDocument) null);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.setCodeBookNumber("supportingocumenttite.sveChanges");
      derivedVariable0.getSupportingDocuments();
      assertEquals("supportingocumenttite.sveChanges", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.getAlias();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "UNABLE_TO_GET_ALIAS_FILE_PATH_NAME";
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("UNABLE_TO_GET_ALIAS_FILE_PATH_NAME", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "wJ]C}NX/0oTvE$>,";
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("wJ]C}NX/0oTvE$>,", derivedVariable0.getForm());
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getQuestionNumber();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("variable.label.label");
      derivedVariable0.setFilePath("");
      ArrayList<ValueLabel> arrayList0 = null;
      derivedVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.clone();
      valueLabel0.hasSameDisplayName(valueLabel1);
      // Undeclared exception!
      try { 
        derivedVariable0.addValueLabel(valueLabel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setFilePath("M27u7^{");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addValueLabel((ValueLabel) null);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.getCodeBookNumber();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }
}
