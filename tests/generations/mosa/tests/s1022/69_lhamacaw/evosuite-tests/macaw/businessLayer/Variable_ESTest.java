/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 14 22:26:25 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.968657571598781
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      User user0 = new User("blank", "UNABLE_TO_GET_ORIGINAL_VALUE_LABEL");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier((-397));
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(boolean0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertTrue(arrayList0.isEmpty());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.0702134528255645
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("variable.availability.label");
      rawVariable0.notes = "macaw.system.MacawMessages";
      RawVariable.validateFields(rawVariable0);
      User user0 = new User();
      User.detectFieldChanges(user0, user0, user0);
      user0.setPassword("t=J$^U4 QobF]G7IS");
      user0.setCounty("variable.availability.label");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      user0.setLastName("variable.availability.label");
      rawVariable0.setAvailability((String) null);
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      rawVariable0.setNotes("t=J$^U4 QobF]G7IS");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getCleaningDescription();
      rawVariable0.getAvailability();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      user0.setPassword("variable.name.label");
      // Undeclared exception!
      try { 
        Variable.validateFields(rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.8447254503803396
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "=?X{ILE'+QV=";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addSourceVariable(derivedVariable0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable1.setSupportingDocuments(arrayList0);
      derivedVariable0.containsSourceVariable(derivedVariable1);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>(750);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.parallelStream();
      arrayList1.add(ontologyTerm0);
      derivedVariable1.setOntologyTerms(arrayList1);
      derivedVariable0.setLabel("  X2s");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      derivedVariable0.setName((String) null);
      User user0 = new User("vu&Zv", "/=nKuS~Eeqj`_e Gh/");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable1);
      derivedVariable0.getDisplayName();
      derivedVariable0.getAvailability();
      derivedVariable0.setLabel("vu&Zv");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(750);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getCleaningStatus();
      derivedVariable1.getAlias();
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      rawVariable0.getCodeBookNumber();
      derivedVariable1.containsSourceVariable(rawVariable0);
      derivedVariable0.setSourceVariables(arrayList2);
      rawVariable0.getAlias();
      // Undeclared exception!
      try { 
        derivedVariable0.hasSameDisplayName(derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.863451426183029
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear((String) null);
      rawVariable0.questionNumber = null;
      rawVariable0.getAlias();
      rawVariable0.getQuestionNumber();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      User user0 = new User((String) null, "general.fieldValue.unknown");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.8583078513547457
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getColumnEnd();
      derivedVariable0.columnEnd = null;
      derivedVariable0.setFilePath("iy59P");
      derivedVariable0.getColumnEnd();
      derivedVariable0.getSupportingDocuments();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getCleaningStatus();
      derivedVariable0.getForm();
      User user0 = new User("cD:Ye", "");
      user0.setAddressLine1("Unknown");
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerm(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.6846842034128904
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals(0, arrayList0.size());
      
      rawVariable0.getSupportingDocuments();
      rawVariable0.getForm();
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7039917864324616
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-4229));
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.5169179621962994
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      User user0 = new User();
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocument(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.404011652717737
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability((String) null);
      rawVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.setAlias("5&a-E>sb#Zw");
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getAlias();
      assertEquals("5&a-E>sb#Zw", rawVariable0.getAlias());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.6260602536649986
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(2782);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.8090728800161613
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      User user0 = new User();
      user0.setUserID("user.addressLine2.label");
      user0.setIdentifier((-1936817303));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeValueLabel((ValueLabel) null);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setLabel((String) null);
      derivedVariable0.getOntologyTerms();
      derivedVariable0.columnEnd = "UNABLE_TO_UPDATE_DERIVED_VARIABLE";
      derivedVariable0.clone();
      derivedVariable0.getLabel();
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getCleaningDescription();
      System.setCurrentTimeMillis((-1408L));
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.columnStart = null;
      String string0 = rawVariable0.getColumnStart();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertNull(string0);
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.722973226438147
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setCleaned(true);
      rawVariable0.setCleaningDescription(";+\"t,MA)");
      rawVariable0.questionNumber = ";+\"t,MA)";
      Variable.validateFields(rawVariable0);
      rawVariable0.getQuestionNumber();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.getCleaningDescription();
      derivedVariable0.containsSourceVariable(rawVariable0);
      assertEquals(";+\"t,MA)", rawVariable0.getQuestionNumber());
      assertTrue(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user0.setAddressLine2((String) null);
      derivedVariable0.setCoded(true);
      Variable.detectFieldChanges(user0, rawVariable1, derivedVariable0);
      assertTrue(derivedVariable0.isCoded());
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=4.023572155255401
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "variable.availability.label";
      derivedVariable0.getYear();
      derivedVariable0.getColumnStart();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      Variable.validateFields(rawVariable0);
      derivedVariable0.getLabel();
      rawVariable0.setColumnStart("variable.availability.label");
      rawVariable0.questionNumber = "variable.availability.label";
      derivedVariable0.getAvailability();
      rawVariable0.getColumnStart();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) rawVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.clone();
      derivedVariable0.getQuestionNumber();
      rawVariable0.getCodeBookNumber();
      derivedVariable0.setQuestionNumber("'`Q`g3>aPXRu0");
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.getValueLabels();
      rawVariable0.getColumnStart();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("[sw-,.]*");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getColumnEnd();
      assertEquals("variable.availability.label", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.9075029231794893
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      assertFalse(derivedVariable0.isCoded());
      
      derivedVariable0.setCoded(true);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      derivedVariable0.addOntologyTerms(arrayList1);
      derivedVariable0.getColumnStart();
      derivedVariable0.isCoded();
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getSourceVariables();
      derivedVariable0.clone();
      User user0 = new User("rBb$sG<GyrN", "D_I!bE5[F(OEEp2G#I");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getCleaningStatus();
      derivedVariable0.getForm();
      assertTrue(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.6846842034128904
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("o");
      rawVariable0.setYear("o");
      User user0 = new User("P7HqXStd6QE\"E3", "INVALID_ADMINISTRATOR");
      user0.setPostCode("P7HqXStd6QE\"E3");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getYear();
      assertEquals("o", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory((String) null);
      rawVariable0.getYear();
      String string0 = rawVariable0.getCategory();
      assertNull(string0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.282360045759959
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertFalse(rawVariable1.isCleaned());
      assertTrue(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isCleaned());
      
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      boolean boolean0 = rawVariable0.isCleaned();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.383522442827672
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertTrue(rawVariable0.isCleaned());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.2085716838811678
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(891);
      User user0 = new User("|.s?1>p:", "|.s?1>p:");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getColumnStart();
      assertEquals("891", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("~");
      derivedVariable0.setCleaningStatus("~");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("~", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("H");
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getName();
      assertEquals("H", rawVariable0.getName());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      Variable variable0 = rawVariable0.getAlternativeVariable();
      assertFalse(variable0.isCoded());
      assertFalse(variable0.isNewRecord());
      assertFalse(variable0.isCleaned());
      assertEquals("0", variable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"blank\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.614587722538201
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      arrayList0.add(valueLabel0);
      rawVariable0.setValueLabels(arrayList0);
      assertFalse(rawVariable0.isCleaned());
      
      rawVariable0.setCleaned(true);
      ArrayList<String> arrayList1 = Variable.validateFields(rawVariable0);
      assertTrue(rawVariable0.isCleaned());
      assertFalse(arrayList1.isEmpty());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.codeBookNumber = "x[EP";
      ArrayList<String> arrayList0 = new ArrayList<String>();
      rawVariable0.getColumnEnd();
      rawVariable0.getCodeBookNumber();
      assertEquals("x[EP", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier(3037);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(boolean0);
      
      derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertTrue(boolean0);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.405123999770017
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.setFilePath((String) null);
      String string0 = rawVariable0.getFilePath();
      assertNull(string0);
      
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertNotNull(macawChangeEvent0);
      
      String string1 = rawVariable0.getCleaningStatus();
      assertEquals("Unknown", string1);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAvailability("o");
      rawVariable0.setName("o");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("o", rawVariable0.getName());
      assertEquals("o", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("Sl[(Q?dh9AIje8<D");
      derivedVariable0.getLabel();
      assertEquals("Sl[(Q?dh9AIje8<D", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.4381098652423896
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("variable.saveChanges.valueChanged");
      rawVariable0.setCleaned(true);
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("variable.saveChanges.valueChanged", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.6765518215297917
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("=@");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("=@");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("=@", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertTrue(boolean0);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("=@");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("=@");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("=@", derivedVariable0.getLabel());
      assertEquals("=@", rawVariable0.getName());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("~");
      derivedVariable0.setLabel("~");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("~", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("UNABLE_TO_CREATE_DATABASE");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.columnStart = "UNABLE_TO_CREATE_DATABASE";
      derivedVariable0.setColumnEnd("r}n|db64<+dRjN");
      derivedVariable0.setForm("oL::");
      derivedVariable0.getNotes();
      derivedVariable1.getName();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertEquals("UNABLE_TO_CREATE_DATABASE", derivedVariable0.getNotes());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.468304338894584
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "{It=I0M>/?ZjK^NiFq";
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setValueLabels(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setName("Rz7e1!*");
      rawVariable0.setQuestionNumber("Rz7e1!*");
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes(derivedVariable0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel(".");
      User user0 = new User(".", ".");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals(".", derivedVariable0.getLabel());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("=3SLU$hah#SXeP.O");
      User user0 = new User();
      User user1 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("=3SLU$hah#SXeP.O", rawVariable0.getAlias());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("=@");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("=@", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.146102255087602
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-1211));
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("-1211", rawVariable0.getDisplayItemIdentifier());
      assertEquals((-1211), macawChangeEvent0.getChangedObjectIdentifier());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("~");
      rawVariable0.columnStart = null;
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("~", derivedVariable0.getLabel());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.2240585736572336
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("=@");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("=@");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("=@", derivedVariable0.getForm());
      assertEquals("=@", rawVariable0.getName());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.4381098652423896
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "-";
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("-", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getNotes());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=4.1594966054792355
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      rawVariable0.columnStart = null;
      rawVariable0.setName("_];xSSbc\"");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      User user1 = new User();
      Variable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      assertEquals("_];xSSbc\"", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("Unknown", rawVariable0.getAvailability());
      
      rawVariable0.setAvailability("");
      rawVariable0.getFilePath();
      Variable.validateFields(rawVariable0);
      rawVariable0.getSupportingDocuments();
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes((String) null);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      String string0 = derivedVariable0.getNotes();
      assertFalse(derivedVariable0.isCleaned());
      assertNull(string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("}wHTwf1(-}`t9aY|%5x");
      derivedVariable0.getDisplayName();
      assertEquals("}wHTwf1(-}`t9aY|%5x", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.6260602536649986
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.673199461415907
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCategory("fXD*l");
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable0.createVariableSummary();
      rawVariable0.cloneAttributes(rawVariable1);
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.5909928649421685
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.6820748660026672
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("%(uspL%Y!\"t~8tv7");
      rawVariable0.getCleaningDescription();
      assertEquals("%(uspL%Y!\"t~8tv7", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, (Variable) null);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertNull(macawChangeEvent0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart((String) null);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      
      rawVariable0.getFilePath();
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber(",mAcew -\"S");
      rawVariable0.getFilePath();
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals(",mAcew -\"S", rawVariable0.getCodeBookNumber());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.9971515848932915
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.707883557241649
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier((-683));
      derivedVariable0.columnStart = "";
      derivedVariable0.createVariableSummary();
      derivedVariable0.clone();
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getColumnStart();
      derivedVariable0.isCleaned();
      assertEquals("-683", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setName("o");
      derivedVariable0.setQuestionNumber("o");
      User user0 = new User("o", "o");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("o", rawVariable0.getDisplayName());
      assertEquals("o", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("macaw.businessLayer.DerivedVariable");
      rawVariable0.getCodeBookNumber();
      assertEquals("macaw.businessLayer.DerivedVariable", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.5173540953639257
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.columnEnd = "Unknown";
      User.detectFieldChanges(user0, user0, user0);
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("Unknown", rawVariable0.getColumnEnd());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setColumnEnd("variable.label.label");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("variable.label.label", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getLabel());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      assertEquals(1, arrayList0.size());
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.6256902943605223
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.4986122886681095
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      rawVariable0.getSupportingDocuments();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "yjD8)%JV";
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getLabel());
      assertEquals("", variableSummary0.getDisplayName());
      assertEquals(0, variableSummary0.getIdentifier());
      
      String string0 = derivedVariable0.getCategory();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", string0);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("UNABLE_TO_GET_ALL_ONTOLOGY_TERMS");
      rawVariable0.createVariableSummary();
      assertEquals("UNABLE_TO_GET_ALL_ONTOLOGY_TERMS", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.setFilePath("variable.alias.label");
      rawVariable0.getFilePath();
      assertEquals("variable.alias.label", rawVariable0.getFilePath());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.6845198108434345
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.setNotes("?o[f9.dL6'K1lM&");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("?o[f9.dL6'K1lM&", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("`{C~V");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("`{C~V", rawVariable0.getAlias());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "IJ=pJx%a#cPC J_/";
      Variable.validateFields(rawVariable0);
      rawVariable0.getColumnEnd();
      assertEquals("IJ=pJx%a#cPC J_/", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.5384983413378794
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes(");");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals(");", derivedVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      rawVariable0.getOntologyTerms();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.8950245421559813
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("buPh<^mxC>8Flc");
      rawVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable0.createVariableSummary();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCategory();
      derivedVariable0.setAvailability("Unknown");
      derivedVariable0.setCategory("Unknown");
      derivedVariable0.getDisplayName();
      derivedVariable0.setYear("PJ\"6gg[}-[?E&8(~`");
      User user0 = new User();
      user0.setStatus("PJ\"6gg[}-[?E&8(~`");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable1);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable1.createVariableSummary();
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      
      derivedVariable0.isNewRecord();
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.789071579480532
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("variable.saveChanges.valueChanged", "l ");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertFalse(derivedVariable0.isNewRecord());
      
      derivedVariable0.setIsNewRecord(true);
      Variable.validateFields(derivedVariable0);
      derivedVariable0.isNewRecord();
      derivedVariable0.createVariableSummary();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      user0.setPostCode("variable.saveChanges.valueChanged");
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      user0.setPhone("W>>/wMh]V|S3<I,");
      derivedVariable0.getName();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertTrue(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.5272886853327274
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.6209093416512177
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(1684);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.createVariableSummary();
      rawVariable0.clone();
      assertEquals("1684", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("=x?(l");
      rawVariable0.form = "variable.codeBookNumber.label";
      rawVariable0.getForm();
      assertEquals("variable.codeBookNumber.label", rawVariable0.getForm());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("]Jp=!y?ySJA?2=^/V0R");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("]Jp=!y?ySJA?2=^/V0R", rawVariable0.getQuestionNumber());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "x,2sVP'29cMK";
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("x,2sVP'29cMK", rawVariable0.getForm());
      assertEquals("", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription(" tPDQ[)o[@czBy!>)");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals(" tPDQ[)o[@czBy!>)", rawVariable0.getCleaningDescription());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.614587722538201
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("NN4Y!y>@b[d");
      rawVariable0.setCleaned(true);
      rawVariable0.createVariableSummary();
      Variable.validateFields(rawVariable0);
      rawVariable0.getCategory();
      assertEquals("NN4Y!y>@b[d", rawVariable0.getYear());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.6845198108434345
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "r7\"P_I.5f";
      rawVariable0.setName("UNABLE_TO_GET_ONTOLOGY_TERM_IDENTIFIER");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.createVariableSummary();
      assertEquals("r7\"P_I.5f", rawVariable0.getNotes());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.49649273994102
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("variable.cleaningStatus.label");
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      rawVariable0.createVariableSummary();
      assertEquals("variable.cleaningStatus.label", rawVariable0.getLabel());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.7462151539509665
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setName("G");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      rawVariable0.createVariableSummary();
      assertEquals("G", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.5353865202004258
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes(";z4px{'i5s}");
      derivedVariable0.setCategory("BPAat\"eT>{,/J");
      derivedVariable0.clone();
      assertEquals("BPAat\"eT>{,/J", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=3.5353865202004258
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("A)8]mIfN");
      derivedVariable0.setCleaningDescription("A)8]mIfN");
      derivedVariable0.clone();
      assertEquals("A)8]mIfN", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("[iirN{*R");
      Variable.validateFields(rawVariable0);
      rawVariable0.getYear();
      assertEquals("[iirN{*R", rawVariable0.getForm());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setYear("Rz7e1!*");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("Rz7e1!*", rawVariable0.getYear());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("B-TA;~0]6Y}/M{N/");
      rawVariable0.clone();
      assertEquals("B-TA;~0]6Y}/M{N/", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.5353865202004258
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setName("L@");
      User user0 = new User();
      rawVariable1.clone();
      assertEquals("L@", rawVariable1.getDisplayName());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.9971515848932915
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertFalse(rawVariable0.isCoded());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("variable.columnStart.label");
      rawVariable0.clone();
      assertEquals("variable.columnStart.label", rawVariable0.getYear());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.getNotes();
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.getForm();
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable1.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.getName();
      rawVariable1.setName("");
      rawVariable0.setIdentifier((-1));
      rawVariable0.setCodeBookNumber("");
      int int0 = rawVariable0.getIdentifier();
      assertEquals("-1", rawVariable0.getDisplayItemIdentifier());
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("");
      derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "|,Rce^S]E(";
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      derivedVariable0.addSourceVariable(derivedVariable1);
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("", derivedVariable1.getLabel());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("|,Rce^S]E(", derivedVariable1.getForm());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getColumnEnd());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("o4'mL-EgZo");
      derivedVariable0.getQuestionNumber();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "variable.category.label";
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", variableSummary0.getLabel());
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getDisplayName());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, variableSummary0.getIdentifier());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getAlternativeVariable();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.setIdentifier(182);
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.getIdentifier();
      derivedVariable0.getCleaningStatus();
      derivedVariable0.setAvailability("Unknown");
      derivedVariable0.removeSourceVariables(arrayList1);
      assertEquals(182, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes(".E%~a37y[mDt2");
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertEquals(".E%~a37y[mDt2", derivedVariable0.getNotes());
      assertFalse(arrayList0.isEmpty());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.setOntologyTerms(arrayList0);
      boolean boolean0 = derivedVariable0.isCleaned();
      assertFalse(boolean0);
      
      String string0 = derivedVariable0.getCleaningStatus();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", string0);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("MacawProperties");
      boolean boolean0 = rawVariable0.isCoded();
      assertEquals("MacawProperties", rawVariable0.getColumnEnd());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier((-1620990683));
      Variable.validateFields(derivedVariable0);
      assertEquals((-1620990683), derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber(";#>OgPUTT)w1ivb");
      derivedVariable0.clone();
      assertEquals(";#>OgPUTT)w1ivb", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "oeE40@I";
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("oeE40@I", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("2e'GBB)u5W");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("2e'GBB)u5W", derivedVariable0.getLabel());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("=@");
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals("=@", rawVariable0.getDisplayName());
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("variable.availability.label");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("variable.availability.label", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      int int0 = derivedVariable0.getIdentifier();
      assertEquals(0, int0);
      
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.addSupportingDocuments(arrayList0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }
}
