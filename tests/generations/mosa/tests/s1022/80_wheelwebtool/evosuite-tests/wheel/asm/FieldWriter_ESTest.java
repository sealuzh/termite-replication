/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 14 22:24:23 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.8659992569610426
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(76);
      classWriter0.index = (-2986);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", "");
      ByteVector byteVector0 = new ByteVector(76);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5320130067116113
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "7)+rI";
      ClassWriter classWriter0 = new ClassWriter(2975);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 59, "7)+rI", "", "", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      byteVector0.length = (-65);
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("", true);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.343193896232072
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "4UT!b5Pag_&\"AZ";
      stringArray0[3] = "";
      classWriter0.visit(49, 49, "", "", "4UT!b5Pag_&\"AZ", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-637), "", "", "", (Object) null);
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putInt((-637));
      ByteVector byteVector2 = byteVector1.put11(131072, 967);
      fieldWriter0.put(byteVector2);
      assertSame(byteVector2, byteVector0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0832409930999294
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(43);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "QKP", "QKP", (String) null, (Object) null);
      Attribute attribute0 = new Attribute("QKP");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50);
      String[] stringArray0 = new String[0];
      classWriter0.visit(50, 50, "*YcMb+R_g`zr]wX0[q((", "*YcMb+R_g`zr]wX0[q((", "*YcMb+R_g`zr]wX0[q((", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-274), "*YcMb+R_g`zr]wX0[q((", "*YcMb+R_g`zr]wX0[q((", "*YcMb+R_g`zr]wX0[q((", "*YcMb+R_g`zr]wX0[q((");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(61);
      String[] stringArray0 = new String[0];
      classWriter0.visit(61, 61, "*YcMb+R_g`zr]wX0[q((", "*YcMb+R_g`zr]wX0[q((", "*YcMb+R_g`zr]wX0[q((", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-274), "*YcMb+R_g`zr]wX0[q((", "*YcMb+R_g`zr]wX0[q((", "*YcMb+R_g`zr]wX0[q((", "*YcMb+R_g`zr]wX0[q((");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0829081047004716
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(60);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "v", "v", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(70);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "7)+rI", "7)+rI", "7)+rI", "7)+rI");
      fieldWriter0.visitAnnotation("7)+rI", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(43);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "L8oculVa[ialeT]ble", "L8oculVa[ialeT]ble", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector(2);
      byteVector0.length = 43;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "7)+rI", "7)+rI", "7)+rI", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4, "<", "<", "<", "<");
      fieldWriter0.visitAnnotation("<", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "L).calariableTable", "L).calariableTable", "L).calariableTable", "L).calariableTable");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-17));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "SigTature", "SigTature", "SigTature", "SigTature");
      fieldWriter0.visitAnnotation("SigTature", false);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3), "J>VZW6D~e", "J>VZW6D~e", "J>VZW6D~e", "J>VZW6D~e");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "7)+rI", "7)+rI", "7)+rI", "7)+rI");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(60);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "7)+rI", "7)+rI", "7)+rI", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(70);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "7)+rI", "7)+rI", "7)+rI", "7)+rI");
      fieldWriter0.visitAnnotation("7)+rI", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "qbY", "qbY", "qbY", "qbY");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(19);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, ":ie*rUIO", ":ie*rUIO", ":ie*rUIO", ":ie*rUIO");
      Attribute attribute0 = new Attribute(":ie*rUIO");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(60);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "7)+rI", "7)+rI", "7)+rI", "7)+rI");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-28));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", "");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-28), "", "", "", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.2885387096069334
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(45);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "LocalVariableTable", "LocalVariableTable", (String) null, (Object) null);
      fieldWriter0.getSize();
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(196);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 340, "dn&P*l8a", "dn&P*l8a", "dn&P*l8a", (Object) null);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 131072, "dn&P*l8a", "]$8k%OUdS'aP~", "]$8k%OUdS'aP~", (Object) null);
      fieldWriter1.visitEnd();
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, (-752), "yK0G!.vV?/*g=@D~l_", "yK0G!.vV?/*g=@D~l_", "yK0G!.vV?/*g=@D~l_", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(60);
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 60, ";&7Li+g4z OK%176o", ";&7Li+g4z OK%176o", ";&7Li+g4z OK%176o", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@68f69444
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }
}
