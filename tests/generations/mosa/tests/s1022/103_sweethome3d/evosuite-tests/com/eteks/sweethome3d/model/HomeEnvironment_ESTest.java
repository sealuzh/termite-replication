/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 14 23:00:13 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.193764486816496
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.getVideoCameraPath();
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment1.setVideoQuality(0);
      homeEnvironment2.setAllLevelsVisible(false);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment1.getSubpartSizeUnderLight();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("P,}{lr/4_u(\"X(W", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy0);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "P,}{lr/4_u(\"X(W", object1, object2);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy1);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.DRAWING_MODE;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment1.getVideoHeight();
      System.setCurrentTimeMillis(0L);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment1.clone();
      assertEquals(0, homeEnvironment1.getVideoWidth());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(18, (HomeTexture) null, 18, 18, 18);
      homeEnvironment0.setPhotoHeight((-2138));
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.getVideoFrameRate();
      HomeEnvironment.Property.values();
      System.setCurrentTimeMillis(18);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(13427964);
      homeEnvironment0.setVideoQuality(13427964);
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals(13427964, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(728, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      homeEnvironment0.getSkyTexture();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("$VALUES", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getSkyColor();
      System.setCurrentTimeMillis(0);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("", temporaryURLContent0, 4, 0.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(4, homeTexture0, 4, homeTexture0, 4, 4);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getSkyTexture();
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(4.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(4, homeEnvironment1.getLightColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(4, homeEnvironment1.getSkyColor());
      assertEquals(4, homeEnvironment1.getGroundColor());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 0, 0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(0, homeEnvironment0.getLightColor());
      assertEquals(0, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0, int0);
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-967));
      homeEnvironment0.getVideoWidth();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor((-246));
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals((-246), int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.clone();
      int int0 = homeEnvironment1.getLightColor();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.047707978151193
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, uRLContent0, 0, (-3782.9946F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, (-2380), 2.0F);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setSkyColor((-2380));
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getPhotoWidth();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      homeEnvironment0.setWallsAlpha((-83.1F));
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setSubpartSizeUnderLight(0);
      homeEnvironment0.setPhotoHeight((-1380));
      homeEnvironment0.setPhotoQuality((-1380));
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getLightColor();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("9qK$e7iu");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.9qK$e7iu
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-1421));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getPhotoHeight();
      assertEquals((-1421), int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.clone();
      System.setCurrentTimeMillis(904L);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-2552), (HomeTexture) null, (-2552), (HomeTexture) null, 0, 0);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      assertEquals(25, homeEnvironment2.getVideoFrameRate());
      assertTrue(homeEnvironment2.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment2.getCeillingLightColor());
      assertEquals(300, homeEnvironment2.getPhotoHeight());
      assertEquals(0.0F, homeEnvironment2.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment2.getPhotoWidth());
      assertEquals(240, homeEnvironment2.getVideoHeight());
      assertNotSame(homeEnvironment2, homeEnvironment1);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.0850162128140806
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(14);
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setLightColor(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setWallsAlpha((-1.0F));
      homeEnvironment1.setVideoFrameRate(3);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment1.getCeillingLightColor();
      homeEnvironment1.getSkyTexture();
      homeEnvironment0.getSkyTexture();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (Content) null, 3060.697F, 0.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2146728059), homeTexture0, (-2146728059), (-2146728059), (-2146728059));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getPhotoAspectRatio();
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertEquals((-2146728059), homeEnvironment0.getLightColor());
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertEquals((-2146728059), homeEnvironment0.getGroundColor());
      assertNotNull(homeTexture1);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-2146728059), homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-2.14672806E9F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight((-2218.0F));
      homeEnvironment0.clone();
      assertEquals((-2218.0F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-2487));
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals((-2487), int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth((-5402));
      homeEnvironment0.clone();
      assertEquals((-5402), homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor((-802));
      homeEnvironment0.clone();
      assertEquals((-802), homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor((-2840));
      homeEnvironment0.getVideoFrameRate();
      int int0 = homeEnvironment0.getSkyColor();
      assertEquals((-2840), int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.1239058144637433
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, uRLContent0, 0, (-3782.9946F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, (-2380), 2.0F);
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setSkyColor((-2380));
      homeEnvironment0.getGroundTexture();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getPhotoWidth();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      homeEnvironment0.setWallsAlpha((-83.1F));
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setSubpartSizeUnderLight(0);
      homeEnvironment0.setPhotoHeight((-1380));
      homeEnvironment0.setPhotoQuality(320);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getLightColor();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("9qK$e7iu");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.9qK$e7iu
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth((-2252));
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals((-2252), int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(17);
      homeEnvironment0.clone();
      assertEquals(17, homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-2146548606));
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals((-2146548606), int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.9590057536726886
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setWallsAlpha(2738.0F);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setPhotoQuality((-482));
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment1.getVideoAspectRatio();
      homeEnvironment1.getWallsAlpha();
      homeEnvironment1.getSkyTexture();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setVideoQuality((-2146232498));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getVideoQuality();
      assertEquals((-2146232498), int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(13427964);
      homeEnvironment0.getDrawingMode();
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0, int0);
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(605);
      homeEnvironment0.clone();
      assertEquals(605, homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight((-1715.41F));
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals((-1715.41F), float0, 0.01F);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.isObserverCameraElevationAdjusted();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality((-1608));
      homeEnvironment0.clone();
      assertEquals((-1608), homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha((-2509.3F));
      homeEnvironment0.clone();
      assertEquals((-2509.3F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      CatalogTexture catalogTexture0 = new CatalogTexture("vUZQ;|VzgnZH", (Content) null, 928.2F, 928.2F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(300);
      Random.setNextRandom(380);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(400);
      homeEnvironment0.getVideoAspectRatio();
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-23));
      homeEnvironment0.clone();
      assertEquals((-17), homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      CatalogTexture catalogTexture0 = new CatalogTexture("PkKfr`9W+$X", (Content) null, 15.016363F, 15.016363F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.getVideoCameraPath();
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(5);
      homeEnvironment0.setVideoFrameRate(5);
      assertEquals(5, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-3897));
      homeEnvironment0.clone();
      assertEquals((-3897), homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.9649066497880012
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Unsupported aspect ratio ");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setVideoWidth((-1717));
      homeEnvironment1.setVideoQuality(3098);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("U.FA/N/T|G+]L", propertyChangeListenerProxy0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setWallsAlpha(1267.97F);
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.setPhotoWidth(3098);
      assertEquals(1267.97F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(13684944);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setWallsAlpha((-2276.0F));
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment1.setPhotoQuality(12);
      homeEnvironment1.getVideoAspectRatio();
      float float0 = homeEnvironment1.getWallsAlpha();
      assertEquals((-2276.0F), float0, 0.01F);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("", temporaryURLContent0, 4, 1211.2919F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(4, homeTexture0, 4, homeTexture0, 4, 4);
      homeEnvironment0.getSkyTexture();
      assertEquals(4, homeEnvironment0.getSkyColor());
      assertEquals(4.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(4, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(4, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("", "@0$;O&u~)!G", (Content) null, (-176), (-176), "@0$;O&u~)!G");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-176), homeTexture0, (-176), homeTexture0, (-176), (-176));
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals(25, int0);
      
      homeEnvironment0.getSkyTexture();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-176.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals((-176), homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-176), homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-176), homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(2141500684);
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals(2141500684, homeEnvironment0.getLightColor());
      assertEquals(300, int0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.1731248118492754
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.getVideoCameraPath();
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment1.setVideoQuality(0);
      homeEnvironment2.setAllLevelsVisible(true);
      HomeEnvironment homeEnvironment3 = new HomeEnvironment();
      homeEnvironment3.setPhotoWidth(0);
      homeEnvironment1.getSubpartSizeUnderLight();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.DRAWING_MODE;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment3.setWallsAlpha(4826.083F);
      assertEquals(4826.083F, homeEnvironment3.getWallsAlpha(), 0.01F);
      
      int int0 = homeEnvironment1.getVideoHeight();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor((-2236));
      homeEnvironment0.clone();
      assertEquals((-2236), homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.156606376293304
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(1);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setWallsAlpha(2075.1F);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setVideoQuality((-3567));
      homeEnvironment0.setWallsAlpha(1880.59F);
      homeEnvironment0.clone();
      boolean boolean0 = homeEnvironment0.isAllLevelsVisible();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality((-2652));
      homeEnvironment0.clone();
      assertEquals((-2652), homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(2147483646);
      homeEnvironment0.clone();
      assertEquals(2147483646, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      
      homeEnvironment0.setGroundColor(13427964);
      homeEnvironment0.clone();
      assertEquals(13427964, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(0.0F);
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(11053224, int0);
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(13684944, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor((-2278));
      int int0 = homeEnvironment0.getLightColor();
      assertEquals((-2278), int0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.9410699503727398
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(1586);
      homeEnvironment0.setCeillingLightColor(1586);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSubpartSizeUnderLight(1586);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment1.setSubpartSizeUnderLight(1586);
      homeEnvironment2.getVideoCameraPath();
      homeEnvironment2.getPhotoWidth();
      homeEnvironment0.setPhotoWidth(867);
      homeEnvironment2.getSubpartSizeUnderLight();
      homeEnvironment0.setWallsAlpha(1586.0F);
      assertEquals(1586.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.clone();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.4543773953841663
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(1586);
      homeEnvironment0.setCeillingLightColor(1586);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSubpartSizeUnderLight(1586);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment1.setSubpartSizeUnderLight(1586);
      List<Camera> list0 = homeEnvironment2.getVideoCameraPath();
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment1.setVideoQuality(0);
      homeEnvironment2.setAllLevelsVisible(false);
      homeEnvironment1.setWallsAlpha(2294.28F);
      homeEnvironment1.getVideoWidth();
      homeEnvironment1.isObserverCameraElevationAdjusted();
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(list0, "", object0, homeEnvironment2);
      homeEnvironment1.getGroundTexture();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment2.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment2.getVideoAspectRatio();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode1 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode1);
      homeEnvironment2.setPhotoQuality(0);
      homeEnvironment0.getDrawingMode();
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(1586, homeEnvironment0.getCeillingLightColor());
      assertEquals(11053224, int0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(13427964);
      assertEquals(10070973, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(320);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(13684944);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0, int0);
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality((-2145805663));
      int int0 = homeEnvironment0.getLightColor();
      assertEquals((-2145805663), homeEnvironment0.getPhotoQuality());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      
      homeEnvironment0.setPhotoHeight(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getSkyColor();
      assertEquals(0, homeEnvironment0.getPhotoHeight());
      assertEquals(13427964, int0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.clone();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(2146130476);
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(2146130476, homeEnvironment0.getVideoQuality());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setGroundColor(1364);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setPhotoWidth(867);
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.setWallsAlpha(1.0F);
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(1.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(240, int0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getPhotoAspectRatio();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(2080768710);
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(3055);
      homeEnvironment0.clone();
      assertEquals(3055, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      List<Camera> list0 = new LinkedList<Camera>();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.getSkyTexture();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2926), (HomeTexture) null, (-2926), (HomeTexture) null, (-2926), (-2926));
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals((-2926), homeEnvironment0.getGroundColor());
      assertEquals((-2926), homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0, int0);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-2926), homeEnvironment0.getSkyColor());
      assertEquals((-2926.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.clone();
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.clone();
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(2075.1F);
      homeEnvironment0.clone();
      assertEquals(2075.1F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha((-1715.41F));
      homeEnvironment0.getGroundTexture();
      assertEquals((-1715.41F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.clone();
      assertEquals(213, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      float float0 = homeEnvironment0.getWallsAlpha();
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(5);
      homeEnvironment0.clone();
      assertEquals(5, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3548), (HomeTexture) null, (-3548), (-3548), (-3548));
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, int0);
      assertEquals((-3548.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals((-3548), homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-3548), homeEnvironment0.getLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-3548), homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (String) null, uRLContent0, (-3432), (-3432), (String) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3432), homeTexture0, (-3432), (-3432), (-969.831F));
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-3432), homeEnvironment0.getGroundColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-3432), homeEnvironment0.getLightColor());
      assertEquals((-3432), homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-969.831F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertNotNull(homeTexture1);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      CatalogTexture catalogTexture0 = new CatalogTexture("", (String) null, (Content) null, 0L, (-4892.761F), "~K#%s!}~)>9T}NViR3");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-4053), homeTexture0, 1008, 2185, (-4053));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getVideoCameraPath();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.getVideoAspectRatio();
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (Content) null, 1.3333334F, 1327);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1327, homeTexture0, 1327, homeTexture0, 1327, (-656.064F));
      homeEnvironment0.getGroundTexture();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-656.064F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(1327, homeEnvironment0.getLightColor());
      assertEquals(1327, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(1327, homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getSkyTexture();
      assertEquals(HomeEnvironment.DrawingMode.OUTLINE, homeEnvironment0.getDrawingMode());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(11053224);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor((-1833));
      homeEnvironment0.clone();
      assertEquals((-1833), homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(0);
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals(0, homeEnvironment0.getPhotoQuality());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0, int0);
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(320, int0);
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(15);
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(15, homeEnvironment0.getPhotoQuality());
      assertEquals(11053224, int0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      
      homeEnvironment0.setSkyColor(13684944);
      homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment0.getSkyColor());
  }
}
