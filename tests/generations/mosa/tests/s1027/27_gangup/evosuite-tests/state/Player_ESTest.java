/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 05:06:29 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party();
      player0.add(party0);
      player0.setY(0.0F);
      player0.setX((-2236.9912F));
      boolean boolean0 = false;
      player0.setConnected(false);
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.788299378708331
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player((-1882));
      Party party0 = player0.gangBoss();
      party0.id = (int) (short)4919;
      player0.prev = party0;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      player0.setX(0.0F);
      party0.getSubparty();
      player0.setY((-4171.76F));
      player0.type();
      player0.getX();
      player0.type();
      player0.getX();
      Player player1 = new Player();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "state.Player");
      player1.setDead();
      player0.isJoinOK(player1, true);
      player1.getX();
      player1.setY((-1393.2582F));
      player0.isJoinOK(player1, false);
      float float0 = player1.getX();
      assertEquals((-1393.2582F), player1.getY(), 0.01F);
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.0567526361500623
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(4, "", 1);
      player0.setDead((long) 1);
      player0.setZ((-2290.8F));
      player0.getX();
      Player player1 = new Player(1);
      player1.pack();
      player1.next = (Party) player0;
      player0.setX(0.1F);
      player0.isJoinOK(player1, false);
      player0.pack();
      player0.isJoinOK(player1, false);
      player0.remove(player1);
      player1.pack();
      player0.getZ();
      player0.getZ();
      player0.type();
      player1.setY((-2290.8F));
      player1.type();
      System.setCurrentTimeMillis((-1L));
      Player player2 = new Player((-3108), "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", (-2704));
      player1.isJoinOK(player2, false);
      player0.pack();
      System.setCurrentTimeMillis(3825L);
      player2.getX();
      player2.isJoinOK(player0, false);
      player0.pack();
      assertEquals((-2290.8F), player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.129253408046631
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(27203, "QF.>Kr.`lGqz\"%8]e$", 1274);
      byte[] byteArray0 = player0.pack();
      player0.getZ();
      Party party0 = new Party();
      player0.boss = party0;
      player0.getZ();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player0.setZ(0.0F);
      player0.getZ();
      player0.setZ(4567.0F);
      player0.setDead();
      party0.add(player0);
      player0.pack();
      player0.getZ();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "n\"Hxo");
      player0.type();
      party0.remove(player0);
      player0.getX();
      player0.pack();
      player0.getZ();
      System.setCurrentTimeMillis((-1181L));
      System.setCurrentTimeMillis((short)4919);
      Player player1 = new Player((-1), "&m5mp-'(V0d?k7", "QF.>Kr.`lGqz\"%8]e$", (-1), 2);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.4673973094161257
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player((-1359), "itu[]vCbAK#_", "joIzD}}h 8F]4", (-1359), 4);
      player0.pack();
      player0.gangStrength();
      player0.setMoney((-1359));
      Player player1 = new Player();
      player1.add(player0);
      player0.setY(823);
      player1.setX((-1630.8F));
      player1.setConnected(true);
      player1.gangStrength();
      player0.setJoinOK(player1, true);
      player0.getStrength();
      player0.getTimeOfDeath();
      player1.isJoinOK(player0, true);
      player0.getIP();
      System.setCurrentTimeMillis(10L);
      player1.toString();
      float float0 = player0.getMoney();
      assertEquals(823.0F, player0.getY(), 0.01F);
      assertEquals((-1359.0F), float0, 0.01F);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player((-8617), "", "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", (-27), (-27));
      player0.getIP();
      System.setCurrentTimeMillis((-27));
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      
      Player player1 = new Player((-30), (String) null, (String) null, (short)4919);
      player1.toString();
      assertFalse(player1.isDead());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
      assertEquals(4919, player1.getPictureId());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.1040026700508068
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(823, "joIzD}}h 8F]4", "itu[]vCbAK#_", 823, 0);
      player0.pack();
      player0.gangStrength();
      Player player1 = new Player(823, "qzVXe", "qzVXe", (-580), 1148);
      player1.setDead(0L);
      player1.gangStrength();
      player1.setMoney(0);
      player0.add(player1);
      player0.setY((-1370.4F));
      player1.setX(10.0F);
      player1.id = 1;
      player0.id = 1;
      player0.pack();
      player1.getMoney();
      float float0 = player0.getY();
      assertEquals((-1370.4F), float0, 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.171659610384074
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player();
      player0.setX(1.0F);
      player0.setConnected(true);
      player0.gangStrength();
      player0.gangStrength();
      Player player1 = new Player((short)4919, "", "", 10);
      player0.setJoinOK(player1, true);
      player1.getStrength();
      player1.getTimeOfDeath();
      player1.isJoinOK(player0, false);
      assertEquals(1.0F, player0.getX(), 0.01F);
      
      player1.pack();
      player1.toString();
      assertEquals(1, player1.getStrength());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.023907271562916
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player((-1359), "joIzD}}h 8F]4", (-1359));
      player0.setX((-1359));
      Player player1 = new Player(3167, "itu[]vCbAK#_", "gui.ModuleBrowserDialog$ModuleFilter", 3167);
      player0.setConnected(true);
      player1.next = (Party) player0;
      player1.gangStrength();
      player0.setJoinOK(player1, false);
      player0.getStrength();
      player0.getTimeOfDeath();
      player1.pack();
      float float0 = player0.getX();
      assertEquals((-1359.0F), float0, 0.01F);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.236203913672499
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.6401461330725327
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(823, "qzVXe", "qzVXe", 823, 1148);
      player0.setY(0.0F);
      player0.setDead(0L);
      player0.gangStrength();
      player0.setY(1.0F);
      float float0 = player0.getY();
      assertEquals(1.0F, float0, 0.01F);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.0289251927098695
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(823, "joIzD}}h 8F]4", "u[]vCbAK#_", 823, 823);
      byte[] byteArray0 = player0.pack();
      player0.gangStrength();
      Player player1 = new Player(823, "qzVXe", "qzVXe", (-580), 1148);
      Player player2 = new Player(823, "Player.unpack(): *** WARNING *** data is not of proper type!", "u[]vCbAK#_", (short)4919, 2560);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 2560);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      player2.unpack(dataInputStream0);
      player2.setMoney((short)4919);
      assertEquals(823, player2.getPictureId());
      
      player0.isDead();
      player1.type();
      int int0 = player1.getStrength();
      assertEquals(1148, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.0497978423100225
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      player0.setY(1486.1F);
      player0.setDead();
      player0.setMoney(1486.1F);
      player0.pack();
      player0.setDead(1L, true);
      player0.setZ(0.0F);
      player0.getStrength();
      player0.getName();
      float float0 = player0.getMoney();
      assertEquals(1486.1F, float0, 0.01F);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(1, "s@TN{y,:KCklqp", "Player.unpack(): *** WARNING *** data is not of proper type!", 1, 10);
      player0.setY(2);
      assertEquals(2.0F, player0.getY(), 0.01F);
      
      Player player1 = new Player(456, (String) null, "", 0);
      player1.getIP();
      assertEquals(0, player1.getPictureId());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.6902535776209735
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player1.setJoinOK(player0, true);
      player0.setDead();
      player0.setConnected(true);
      player0.getTimeOfDeath();
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(5, "", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", (-3025), (-3025));
      int int0 = player0.getStrength();
      assertEquals((-3025), int0);
      
      Player player1 = new Player((-3025), "{PWxyp:P", "~6bF+-3,Ppecqo", 1, (-3025));
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals((-3025), player1.getStrength());
      assertFalse(boolean0);
      
      float float0 = player0.getMoney();
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("", player0.getIP());
      assertEquals((-3025), player0.getPictureId());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead((-1587L));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.getTimeOfDeath();
      System.setCurrentTimeMillis(15000L);
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player((-1), "", "", (-1), 4);
      long long0 = player0.getTimeOfDeath();
      assertEquals(0L, long0);
      assertEquals(4, player0.getStrength());
      
      Player player1 = new Player(4, "", (short)4919);
      FileSystemHandling.shouldAllThrowIOExceptions();
      player1.getName();
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(4919, player1.getPictureId());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player((-3551), "gui.ModuleBrowserDialog$ModuleFilter", (-3551));
      player0.setConnected(false);
      player0.type();
      player0.isConnected();
      player0.getIP();
      player0.getY();
      Player player1 = new Player((short)4919);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertTrue(player1.isConnected());
      assertFalse(player0.isConnected());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919);
      player0.setJoinOK(player1, false);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(0, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertTrue(boolean0);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals("Player4919", player1.toString());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, false);
      boolean boolean0 = player0.isJoinOK(player0, true);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(boolean0);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-115);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)89;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      assertEquals(1, byteArrayInputStream0.available());
      
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isDead();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player(0);
      player0.setDead((-2991L), false);
      boolean boolean0 = player0.isDead();
      assertEquals((-2991L), player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.1296233673511074
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player((-264), "", (-264));
      player0.reset(true);
      player0.getY();
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      player0.getX();
      byte[] byteArray0 = player0.pack();
      player0.setY(0.0F);
      player0.getPictureId();
      Player player2 = new Player((-264), "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", (-723));
      player0.boss = (Party) player2;
      player2.next = (Party) player0;
      player0.getMoney();
      player2.unpack(byteArray0);
      player2.pack();
      player1.add(player0);
      player2.isDead();
      player0.isDead();
      player2.getPictureId();
      assertEquals((-8), player2.getId());
      
      long long0 = player0.getTimeOfDeath();
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      Player player1 = new Player();
      player0.unpack(byteArray0);
      player1.setMoney((-3738.891F));
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals((-3738.891F), player1.getMoney(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(647);
      String string0 = player0.toString();
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player647", string0);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player((-3403), (String) null, (String) null, (-3403), (-3403));
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player();
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      Player player1 = new Player((short)4919, (String) null, (String) null, 1, 0);
      int int1 = player1.getStrength();
      assertEquals(1, player1.getPictureId());
      assertEquals(0, int1);
      
      long long0 = player0.getTimeOfDeath();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.toString());
      assertEquals(0L, long0);
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(0, (String) null, (String) null, 0);
      player0.setDead();
      player0.getName();
      player0.getX();
      player0.gangStrength();
      Party party0 = player0.gangBoss();
      Party party1 = player0.gangBoss();
      party0.remove(party1);
      player0.add(party0);
      player0.getPictureId();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.6422165264472737
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((-1));
      player0.setJoinOK(player1, true);
      Player player2 = new Player((-1), "$mvHZ,?S", "Uw}5-eqnLbD!5&&>Jl\"", 4919, (-1));
      int int0 = player2.gangStrength();
      assertEquals((-1), int0);
      
      boolean boolean0 = player2.isJoinOK(player0, true);
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals(0L, player2.getTimeOfDeath());
      assertFalse(boolean0);
      assertEquals(4919, player2.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertTrue(player2.isConnected());
      assertEquals("$mvHZ,?S", player2.getIP());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player2.isDead());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player();
      player0.setMoney(1452);
      player0.id = (int) (short)4919;
      player0.isDead();
      Player player1 = new Player(12, ":Y$E", (short)4919);
      player1.getPictureId();
      player0.id = (-3666);
      Player player2 = new Player((-3666), "E*+e+", 5);
      player2.getTimeOfDeath();
      player0.pack();
      assertEquals(1452.0F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(1, "", "l#+9$)", 1);
      Party party0 = new Party(1);
      player0.prev = party0;
      party0.id = 5;
      player0.getPictureId();
      float float0 = player0.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      
      int int0 = player0.getPictureId();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("", player0.getIP());
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
      assertEquals(1, int0);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player((-1), (String) null, (-1));
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.963826488286453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.add(player1);
      player0.setY(0.1F);
      player1.setX((-1.0F));
      player0.setConnected(true);
      player0.gangStrength();
      player0.setJoinOK(player1, false);
      player1.getStrength();
      player0.getTimeOfDeath();
      player0.isJoinOK(player1, false);
      assertEquals(0.1F, player0.getY(), 0.01F);
      
      player1.pack();
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player();
      player0.type();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player();
      PipedInputStream pipedInputStream0 = new PipedInputStream((short)4919);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      player0.unpack(dataInputStream0);
      player0.pack();
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(29, pipedInputStream0.available());
      
      player0.pack();
      player0.pack();
      assertEquals("Player-1", player0.getName());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.8148657896913192
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(false);
      player0.pack();
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.getName());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isConnected();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(boolean0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player(3);
      String string0 = player0.getName();
      assertEquals("Player3", string0);
      
      float float0 = player0.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      
      float float1 = player0.getZ();
      assertEquals(0, player0.getPictureId());
      assertEquals(float1, float0, 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0.0F, float1, 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[13];
      byteArray0[0] = (byte)45;
      byteArray0[3] = (byte) (-1);
      player0.unpack(byteArray0);
      player0.pack();
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.toString());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.getName());
      
      Player player1 = new Player(1, (String) null, (String) null, (short)4919, (short)4919);
      assertTrue(player1.isConnected());
      assertEquals(4919, player1.getPictureId());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(4919, player1.getStrength());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      byte[] byteArray0 = new byte[10];
      player0.unpack(byteArray0);
      player0.pack();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      player0.pack();
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      float float0 = player0.getZ();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }
}
