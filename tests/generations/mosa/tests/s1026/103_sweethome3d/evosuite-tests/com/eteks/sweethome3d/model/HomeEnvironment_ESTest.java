/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 04:18:47 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.322102232945105
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setWallsAlpha(640.4F);
      homeEnvironment0.setPhotoHeight(2074);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setPhotoWidth(2074);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setCeillingLightColor(2074);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setVideoQuality((-526));
      homeEnvironment0.getPhotoAspectRatio();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.getSkyTexture();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment1.getCeillingLightColor();
      HomeEnvironment.Property.valueOf("CEILING_LIGHT_COLOR");
      homeEnvironment1.clone();
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals(640.4F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(2074, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.4224893307465543
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setVideoFrameRate((-776));
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoQuality(46);
      homeEnvironment0.setGroundColor(759);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setLightColor(0);
      HomeEnvironment.Property.values();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.clone();
      homeEnvironment0.clone();
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      
      homeEnvironment0.setVideoFrameRate(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getVideoFrameRate();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomeEnvironment.Property.values();
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 0.0F, (-1499));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1632, homeTexture0, 1632, homeTexture0, 1632, 0.0F);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getSkyTexture();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(1632, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(1632, homeEnvironment0.getGroundColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(1632, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      System.setCurrentTimeMillis(0L);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent((URL) null, true);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, resourceURLContent0, 0L, 0L);
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      homeEnvironment0.setAllLevelsVisible(false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.getSkyTexture();
      Random.setNextRandom(18);
      Random.setNextRandom(18);
      homeEnvironment0.getPhotoAspectRatio();
      Random.setNextRandom((-3279));
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(240, homeEnvironment0.getVideoHeight());
      
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HomeEnvironment.Property.values();
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", (Content) null, 0.0F, 0.0F, "");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1499), homeTexture0, (-1499), (-1499), (-1499));
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertNotNull(homeTexture1);
      
      HomeTexture homeTexture2 = homeEnvironment0.getSkyTexture();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertNull(homeTexture2);
      assertEquals((-1499), homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-1499.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals((-1499), homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-1499), homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment.Property.values();
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 0.0F, (-1499));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1499), homeTexture0, (-1499), 1632, 1632);
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertNotNull(homeTexture1);
      
      HomeTexture homeTexture2 = homeEnvironment0.getSkyTexture();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertNull(homeTexture2);
      assertEquals((-1499), homeEnvironment0.getGroundColor());
      assertEquals(1632, homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-1499), homeEnvironment0.getSkyColor());
      assertEquals(1632.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor((-1138));
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals((-1138), int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)57;
      byteArray0[1] = (byte)44;
      byteArray0[2] = (byte)64;
      byteArray0[3] = (byte) (-122);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)9;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("3D]&MbL3cC", "UTC", temporaryURLContent0, (byte)0, 1.0F, "3D]&MbL3cC");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((byte)0, homeTexture0, (byte)64, 13427964, (byte)64);
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(0, int0);
      
      homeEnvironment0.getPhotoAspectRatio();
      assertEquals(64.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(64, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-682));
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals((-682), homeEnvironment0.getVideoWidth());
      assertEquals((-511), int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", uRLContent0, 2403, 2403, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2403, homeTexture0, 2403, homeTexture0, 2, 2403);
      homeEnvironment0.getSkyTexture();
      assertEquals(2403.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(2403, homeEnvironment0.getGroundColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(2403, homeEnvironment0.getSkyColor());
      assertEquals(2, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      CatalogTexture catalogTexture0 = new CatalogTexture("vuBieF}M5!", "vuBieF}M5!", (Content) null, (-559.552F), (-559.552F), "vuBieF}M5!");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeTexture homeTexture1 = homeEnvironment0.getSkyTexture();
      assertNotNull(homeTexture1);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.2373809026458025
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(10);
      homeEnvironment0.setPhotoHeight((-729));
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.setVideoQuality((-729));
      homeEnvironment0.setLightColor(4);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setAllLevelsVisible(false);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSubpartSizeUnderLight(10);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setSkyColor((-1704));
      homeEnvironment1.getSubpartSizeUnderLight();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setSkyColor((-729));
      homeEnvironment1.setGroundColor((-729));
      System.setCurrentTimeMillis((-1704));
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals((-729), homeEnvironment0.getSkyColor());
      assertEquals((-729), int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.0841504119482797
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setGroundColor(134);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode1 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment1.setSkyColor(0);
      homeEnvironment0.setSubpartSizeUnderLight((-205.8564F));
      homeEnvironment1.getSubpartSizeUnderLight();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setPhotoHeight(11);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.getSkyColor();
      int int0 = homeEnvironment2.getVideoFrameRate();
      assertEquals(11, homeEnvironment0.getPhotoHeight());
      assertEquals(25, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setSubpartSizeUnderLight(0);
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.setPhotoWidth(0);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setSkyColor(12);
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getPhotoWidth();
      HomeEnvironment.Property.values();
      homeEnvironment0.getPhotoAspectRatio();
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-617));
      homeEnvironment0.clone();
      assertEquals((-617), homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-182));
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals((-182), int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.6969987794394548
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      
      homeEnvironment0.setAllLevelsVisible(false);
      assertEquals(11053224, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.3798389570661653
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setPhotoWidth(18);
      homeEnvironment0.clone();
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      System.setCurrentTimeMillis(60000L);
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-1579));
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals((-1579), int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.clone();
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(11053224);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(99);
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals(99, int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight((-602.2F));
      homeEnvironment0.clone();
      assertEquals((-602.2F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(0);
      Camera camera0 = new Camera((-3284.0F), (-333.5F), (-333.5F), 1.0F, (-67.0F), (-292));
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setCeillingLightColor(46);
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(46, homeEnvironment0.getCeillingLightColor());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(400);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(2144937275);
      homeEnvironment0.clone();
      assertEquals(2144937275, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(2);
      homeEnvironment0.clone();
      assertEquals(2, homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(25);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(320);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-2069));
      homeEnvironment0.getGroundTexture();
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals((-2069), int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.748058988887039
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(4480.2417F);
      homeEnvironment0.setPhotoQuality(1808);
      homeEnvironment0.setCeillingLightColor(1808);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.getPhotoQuality();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getSkyTexture();
      assertEquals(4480.2417F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor((-1087));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setCeillingLightColor((-1087));
      homeEnvironment1.clone();
      assertEquals((-1087), homeEnvironment0.getCeillingLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-3966));
      homeEnvironment0.clone();
      assertEquals((-3966), homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.128702289360092
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(1278);
      homeEnvironment0.setAllLevelsVisible(false);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setPhotoQuality((-292));
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment1.getSkyTexture();
      HomeEnvironment homeEnvironment3 = new HomeEnvironment();
      homeEnvironment1.getWallsAlpha();
      homeEnvironment2.getPhotoQuality();
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      AspectRatio aspectRatio1 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment3.setGroundTexture((HomeTexture) null);
      homeEnvironment3.getDrawingMode();
      homeEnvironment2.clone();
      // Undeclared exception!
      try { 
        homeEnvironment3.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio FREE_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality((-1126));
      homeEnvironment0.clone();
      assertEquals((-1126), homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight((-883.8609F));
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setSkyColor((-14));
      homeEnvironment0.setSubpartSizeUnderLight((-883.8609F));
      homeEnvironment0.getSubpartSizeUnderLight();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.28422754265758
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha((-2970.4385F));
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setPhotoWidth(636);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.setSkyColor(25);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setGroundColor(0);
      Object object0 = new Object();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getPhotoHeight();
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals((-2970.4385F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(636, int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(1.3684944E7F);
      homeEnvironment0.clone();
      assertEquals(1.3684944E7F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor((-634));
      homeEnvironment0.clone();
      assertEquals((-634), homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-379), (HomeTexture) null, (-379), 1808, (-379));
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setGroundColor(11053224);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setSkyColor(1620);
      homeEnvironment0.getPhotoHeight();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_QUALITY;
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, (PropertyChangeListener) null);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getDrawingMode();
      assertEquals(1620, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(2146680406);
      homeEnvironment0.clone();
      assertEquals(2146680406, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(13684944);
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(29);
      assertEquals(29, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("m\",kD.)szV7[[qS=", (Content) null, (-624.4807F), (-2658));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2658), homeTexture0, (-2658), (-2658), (-624.4807F));
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertEquals((-2658), homeEnvironment0.getGroundColor());
      assertEquals((-2658), homeEnvironment0.getLightColor());
      assertNotNull(homeTexture1);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-2658), homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-624.4807F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("7D+-.r>nA&&o?3Qu<?", (Content) null, 2600, 2600, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2600, homeTexture0, 2600, homeTexture0, 2600, 2600);
      homeEnvironment0.getGroundTexture();
      assertEquals(2600, homeEnvironment0.getGroundColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(2600.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(2600, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(2600, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      CatalogTexture catalogTexture0 = new CatalogTexture("*-)f5?|tI", (Content) null, 699.0F, 699.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha((-2025.6442F));
      homeEnvironment0.clone();
      assertEquals((-2025.6442F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getGroundTexture();
      boolean boolean0 = homeEnvironment0.isObserverCameraElevationAdjusted();
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertTrue(boolean0);
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-1404));
      homeEnvironment0.clone();
      assertEquals((-1404), homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(692);
      homeEnvironment0.clone();
      assertEquals(692, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(300);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.clone();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor((-1107));
      homeEnvironment0.clone();
      assertEquals((-1107), homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-1613));
      homeEnvironment0.clone();
      assertEquals((-1613), homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.521452740110338
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoWidth((-1229));
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment2.getVideoCameraPath();
      homeEnvironment2.setVideoCameraPath(list0);
      int int0 = homeEnvironment1.getPhotoWidth();
      assertEquals((-1229), int0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("._e", (Content) null, (-571), 1.3333334F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-571), homeTexture0, (-571), homeTexture0, (-571), (-571));
      int int0 = homeEnvironment0.getGroundColor();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-571), homeEnvironment0.getLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-571), homeEnvironment0.getSkyColor());
      assertEquals((-571), int0);
      assertEquals((-571.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals(0, int0);
      
      int int1 = homeEnvironment0.getPhotoWidth();
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(400, int1);
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality((-698));
      homeEnvironment0.clone();
      assertEquals((-698), homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(13427964);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      homeEnvironment0.getSkyTexture();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.getVideoAspectRatio();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(1);
      homeEnvironment0.clone();
      assertEquals(1, homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth((-2376));
      homeEnvironment0.clone();
      assertEquals((-2376), homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(11053224, int0);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, int0);
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha((-830.07587F));
      assertEquals((-830.07587F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.clone();
      assertEquals(AspectRatio.FREE_RATIO, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth((-801));
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals((-801), homeEnvironment0.getPhotoWidth());
      assertEquals(300, int0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(334);
      assertEquals(251, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.isAllLevelsVisible();
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(1394);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getWallsAlpha();
      homeEnvironment0.getPhotoQuality();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getSkyTexture();
      assertEquals(AspectRatio.RATIO_16_9, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_WIDTH;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(2.14675814E9F);
      homeEnvironment0.setLightColor((-2137102127));
      homeEnvironment0.setCeillingLightColor((-2137102127));
      homeEnvironment0.getSkyTexture();
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(2.14675814E9F, float0, 0.01F);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals(0, int0);
      
      int int1 = homeEnvironment1.getLightColor();
      assertEquals(13684944, int1);
      
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      assertEquals(400, homeEnvironment2.getPhotoWidth());
      assertNotSame(homeEnvironment2, homeEnvironment0);
      assertEquals(0.0F, homeEnvironment2.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment2.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment2.getSkyColor());
      assertEquals(240, homeEnvironment2.getVideoHeight());
      assertEquals(300, homeEnvironment2.getPhotoHeight());
      assertTrue(homeEnvironment2.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment2.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment2.getGroundColor());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(2309.0F);
      homeEnvironment0.clone();
      assertEquals(2309.0F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(2145891750);
      homeEnvironment0.clone();
      assertEquals(2145891750, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(0, homeEnvironment1.getPhotoQuality());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(13684958);
      assertEquals(13684958, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2575), (HomeTexture) null, (-2575), (-2575), (-2575));
      homeEnvironment0.setAllLevelsVisible(true);
      int int0 = homeEnvironment0.getLightColor();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      assertEquals((-2575), int0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = homeEnvironment0.getSkyColor();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13427964, int0);
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_QUALITY;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.getGroundTexture();
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(0, int0);
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getSkyTexture();
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, float0, 0.01F);
  }
}
