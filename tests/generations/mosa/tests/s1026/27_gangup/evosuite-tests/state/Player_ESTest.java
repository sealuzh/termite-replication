/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 03:43:39 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.2215523079930732
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919);
      player0.setJoinOK(player1, true);
      boolean boolean0 = player1.isDead();
      System.setCurrentTimeMillis(1392409296333L);
      Player player2 = new Player();
      boolean boolean1 = player0.isJoinOK(player1, false);
      assertTrue(player1.isConnected());
      assertEquals(0, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player4919", player1.toString());
      assertEquals(1, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertTrue(boolean1 == boolean0);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, false);
      System.setCurrentTimeMillis(1392409296320L);
      boolean boolean0 = player0.isJoinOK(player0, true);
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(boolean0);
      assertEquals("Player-1", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(42, "<LVnk\"hYM", " ", 42, 0);
      int int0 = player0.gangStrength();
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(42, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, int0);
      assertEquals("<LVnk\"hYM", player0.getIP());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(66, (String) null, (String) null, (-1));
      player0.getIP();
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals((-1), player0.getPictureId());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.053882356878545
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-31);
      byteArray0[2] = (byte)116;
      byteArray0[3] = (byte)30;
      player0.setZ((byte)116);
      byteArray0[4] = (byte)55;
      byteArray0[5] = (byte)115;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1672), (byte)116);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.9727115278367817
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919);
      player0.add(player1);
      Player player2 = new Player((-1719), "Tbfy4YRYczq1mn`aE[", "Tbfy4YRYczq1mn`aE[", (short)4919);
      player0.pack();
      player2.reset(true);
      float float0 = Player.TOLERANCE;
      player0.reset(true);
      Player player3 = new Player((-1719), "v>J|hx7jaPO^I", (String) null, (short)4919, (-340));
      player3.setJoinOK(player0, false);
      player2.remove(player1);
      player3.isJoinOK(player1, false);
      player3.toString();
      player1.add(player2);
      player3.isJoinOK(player1, false);
      assertEquals((-340), player3.getStrength());
      assertEquals(4919, player3.getPictureId());
      
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(boolean0);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0, player1.getPictureId());
      assertEquals("Player4919", player1.toString());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player();
      Player player1 = new Player((short)4919, "", (-190));
      player0.setJoinOK(player1, false);
      player1.remove(player0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player1.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.0547452758288847
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(0);
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      player0.pack();
      player0.type();
      player0.toString();
      Player player1 = new Player(0, "Player0", "Player0", (short)4919, 0);
      player0.isJoinOK(player1, true);
      player0.setY((-90.0F));
      System.setCurrentTimeMillis((-3437L));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.type();
      player1.pack();
      player0.pack();
      player1.pack();
      player1.type();
      System.setCurrentTimeMillis(2308L);
      player1.getIP();
      player0.getY();
      assertEquals((-90.0F), player0.getY(), 0.01F);
      
      player1.toString();
      assertEquals(0, player1.getStrength());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(1, "w- 4,fn5x=8", 1);
      player0.boss = (Party) player0;
      assertEquals(0.0F, player0.getY(), 0.01F);
      
      player0.setY(1);
      player0.getY();
      int int0 = Packable.ACTION;
      player0.getIP();
      player0.getIP();
      String string0 = player0.getIP();
      assertEquals("0.0.0.0", string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player();
      player0.remove((Party) null);
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      
      Player player1 = new Player((short)4919, (String) null, (short)4919);
      player1.getName();
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(4919, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(player1.isConnected());
      assertEquals(1, player1.getStrength());
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(0.0F, player0.getZ(), 0.01F);
      
      player0.setZ(0.2F);
      player0.getName();
      player0.type();
      float float0 = player0.getZ();
      assertEquals(0.2F, float0, 0.01F);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.4184810475614884
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player((-2452), "", 0);
      byte[] byteArray0 = player0.pack();
      player0.id = (-460);
      player0.setDead(1166L);
      player0.gangStrength();
      player0.gangStrength();
      player0.unpack(byteArray0);
      player0.type();
      player0.setX(0.0F);
      player0.getY();
      player0.type();
      player0.id = 1;
      Player player1 = new Player((-168), "", 1);
      player1.setDead((-2738L));
      player1.setY(1.0F);
      player0.isJoinOK(player1, true);
      player0.type();
      player0.toString();
      player1.getZ();
      player0.getX();
      player0.getY();
      player0.type();
      player1.type();
      player0.getIP();
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals((-2738L), player1.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(578, "", "", (-421), 578);
      player0.setDead((long) 578, false);
      Player player1 = (Player)player0.gangBoss();
      player1.pack();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player2 = new Player(1, "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", (-2985));
      player1.isJoinOK(player2, false);
      player2.getZ();
      long long0 = player0.getTimeOfDeath();
      assertEquals(578L, long0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.9417429777213613
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals("0.0.0.0", player1.getIP());
      assertFalse(boolean0);
      assertEquals(0, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals(1, player1.getStrength());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals("Player-1", player1.getName());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.1737502027185687
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(1837, "xzr1Afk:>", "xzr1Afk:>", (-3));
      player0.setDead((long) (-3));
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      player1.prev = (Party) player0;
      player0.setZ((-655.216F));
      player0.getName();
      player0.gangStrength();
      player1.type();
      player1.gangStrength();
      player1.gangStrength();
      player0.getZ();
      player0.setDead((long) 5, true);
      player0.getIP();
      player1.isJoinOK(player0, true);
      assertEquals(5L, player0.getTimeOfDeath());
      
      int int0 = player1.type();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.753349994178044
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player();
      Party party0 = player0.boss;
      player0.prev = null;
      File file0 = MockFile.createTempFile("state.Player", "state.Player");
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) "state.Player";
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) "";
      objectArray0[3] = (Object) mockPrintStream0;
      objectArray0[4] = (Object) file0;
      objectArray0[5] = (Object) file0;
      objectArray0[6] = (Object) "";
      PrintStream printStream0 = mockPrintStream0.format("", objectArray0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(printStream0);
      dataOutputStream0.writeBoolean(false);
      player0.pack(dataOutputStream0);
      player0.setDead((-460L));
      player0.type();
      player0.pack();
      player0.getTimeOfDeath();
      player0.getY();
      player0.pack();
      int int0 = player0.gangStrength();
      assertTrue(player0.isDead());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(900, "[4l$[F6UM$0IwY(r", "[4l$[F6UM$0IwY(r", 900, (-1375));
      int int0 = player0.gangStrength();
      assertEquals((-1375), int0);
      assertTrue(player0.isConnected());
      assertEquals(900, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919);
      player0.head = (Party) player1;
      int int0 = player0.gangStrength();
      assertEquals(2, int0);
      
      player0.pack();
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player-1", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(3032, "module.ModuleBrowserDialog$ModuleFilter", "gui.ModuleBrowserDialog$ModuleFilter", 3032);
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      player0.getX();
      Player player1 = new Player(3032, "module.ModuleBrowserDialog$ModuleFilter", "K^V4Nk", 3926);
      player0.isJoinOK(player1, true);
      assertEquals((-40), player0.getId());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte) (-31);
      byteArray0[2] = (byte) (-7);
      byteArray0[3] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      assertEquals(2, byteArrayInputStream0.available());
      
      player0.getX();
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player();
      PipedInputStream pipedInputStream0 = new PipedInputStream((short)4919);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      
      player0.pack();
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player(2662, "", "", 2662);
      player0.setX(2662);
      player0.isJoinOK(player0, true);
      player0.getIP();
      assertEquals(2662.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(4919, "", "", (-1));
      player0.setConnected(false);
      player0.setMoney((-995.65436F));
      player0.getMoney();
      player0.getStrength();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = false;
      Player player1 = null;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(4919, "", "", (-1));
      player0.setConnected(true);
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
      
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      player0.getName();
      int int1 = player0.getPictureId();
      assertEquals((-1), int1);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party(1830);
      player0.boss = party0;
      player0.pack();
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(3032, "", "", 3032);
      player0.setConnected(false);
      player0.getY();
      player0.setZ(0.0F);
      player0.toString();
      player0.setZ(3032);
      Player player1 = new Player(0, "m(0cAgKr$>eK<U", 3032);
      boolean boolean0 = player0.isConnected();
      assertEquals(3032.0F, player0.getZ(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, "6]X-<+2T1Yz?7+7]~", "6]X-<+2T1Yz?7+7]~", (-1));
      assertEquals((-1), player1.getPictureId());
      
      int int0 = player0.getPictureId();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0, int0);
      assertEquals("Player-1", player0.toString());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(4, "state.Player", "state.Player", 4);
      int int0 = player0.getPictureId();
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(4, int0);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player();
      long long0 = player0.getTimeOfDeath();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, long0);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("Player-1", player0.toString());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.753349994178044
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player((-5254));
      player0.setX((-5254));
      player0.add((Party) null);
      player0.setDead((long) (-5254), false);
      player0.gangStrength();
      player0.reset(false);
      player0.add(player0);
      player0.getZ();
      player0.getStrength();
      player0.reset(false);
      player0.getX();
      player0.setMoney(1);
      player0.setX(1);
      player0.setDead(1L);
      assertEquals(1L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player();
      float float0 = player0.getZ();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(111, (String) null, (String) null, 111, 111);
      int int0 = player0.gangStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(111, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(111, int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player(1273);
      player0.setY(1273);
      player0.reset(true);
      player0.setDead();
      boolean boolean0 = player0.isDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(0, (String) null, (String) null, 0, 0);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = player0.isConnected();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
      assertTrue(boolean0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(0, ")yZu6U@{", "0q(@Xu\"3)", 0, 0);
      int int0 = player0.getStrength();
      assertEquals(")yZu6U@{", player0.getIP());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, int0);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919);
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertTrue(boolean0);
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertTrue(player1.isConnected());
      assertEquals(1, player1.getStrength());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(0, player1.getPictureId());
      assertEquals("Player4919", player1.getName());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(170, (String) null, (String) null, 170);
      player0.gangStrength();
      player0.gangStrength();
      player0.setMoney(805.4F);
      player0.getMoney();
      player0.getStrength();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player();
      player0.setMoney(641.4749F);
      assertEquals(641.4749F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player((-9), "eaM0-?E63=Df0gEn", "eaM0-?E63=Df0gEn", (-9), (-2915));
      int int0 = player0.getStrength();
      assertTrue(player0.isConnected());
      assertEquals((-2915), int0);
      assertEquals((-9), player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(0.0F);
      player0.pack();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(true);
      float float0 = player0.getY();
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.toString());
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, float0, 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(false);
      player0.pack();
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ(0.0F);
      player0.pack();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getZ(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.getName());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player(3926, "", 3926);
      player0.getName();
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(3926, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player(3032, "", "", 3032);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)20;
      byteArray0[1] = (byte)102;
      player0.unpack(byteArray0);
      player0.pack();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(3032, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player((-15), "", (-15));
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals((-15), player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getZ(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("", player0.getName());
      assertEquals((-15), player0.getId());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player();
      float float0 = Player.TOLERANCE;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)5;
      player0.unpack(byteArray0);
      int int0 = player0.type();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(5, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      player0.pack();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("Player-1", player0.toString());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player();
      player0.setConnected(true);
      player0.pack();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Player player0 = new Player();
      player0.setX(1711.6257F);
      int int0 = player0.type();
      assertEquals(1711.6257F, player0.getX(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player(975);
      player1.setX(0.2F);
      assertEquals(0.2F, player1.getX(), 0.01F);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, "MGvaI#~hoB", (String) null, (short)4919);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertFalse(boolean0);
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertEquals("0.0.0.0", player0.getIP());
      
      float float0 = player1.getMoney();
      assertEquals(4919, player1.getPictureId());
      assertFalse(player1.isDead());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertTrue(player1.isConnected());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(1, player1.getStrength());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      player0.toString();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }
}
