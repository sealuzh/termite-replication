/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 14 09:03:40 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      homeEnvironment0.setSubpartSizeUnderLight(1.5F);
      homeEnvironment0.getDrawingMode();
      System.setCurrentTimeMillis(0);
      HomeEnvironment.Property.values();
      homeEnvironment0.setGroundColor(571);
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setWallsAlpha(1.5F);
      Random.setNextRandom(0);
      HomeEnvironment.Property.values();
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment.DrawingMode.values();
      int int0 = homeEnvironment0.getSkyColor();
      assertEquals(1.5F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.0257505895352668
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      homeEnvironment1.setPhotoHeight((-1302));
      homeEnvironment1.getDrawingMode();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.setWallsAlpha(296.56F);
      homeEnvironment1.setPhotoQuality((-1302));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "TqC&4oTSosP");
      homeEnvironment0.setVideoWidth(2146748082);
      homeEnvironment0.setLightColor(993);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment1.getPhotoQuality();
      homeEnvironment0.getDrawingMode();
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment1.getSkyColor();
      HomeEnvironment.Property.values();
      homeEnvironment2.getDrawingMode();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("TqC&4oTSosP");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.TqC&4oTSosP
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      System.setCurrentTimeMillis((-1974L));
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(300);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.setVideoFrameRate(320);
      System.setCurrentTimeMillis((-1974L));
      homeEnvironment0.setVideoWidth(0);
      System.setCurrentTimeMillis(863L);
      homeEnvironment0.getVideoWidth();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("", temporaryURLContent0, 0L, 1.7777778F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2, homeTexture0, 5, 9, (-587.0F));
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.getGroundTexture();
      System.setCurrentTimeMillis((-1552L));
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("z 1Ur<q,dft~HR]Y?R[", "IJID>XJ#u$b||", uRLContent0, 4, 1415.6267F, "", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(4, homeTexture0, 1197, 0, 1197);
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(4, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(1197.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(0, int0);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(1197, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.322102232945105
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Random.setNextRandom((-629));
      HomeEnvironment.Property.valueOf("SKY_TEXTURE");
      Random.setNextRandom((-629));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "temp");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.setLightColor((-629));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment0.setPhotoHeight(300);
      homeEnvironment0.getPhotoQuality();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-14);
      byteArray0[1] = (byte)18;
      byteArray0[2] = (byte) (-48);
      byteArray0[3] = (byte)7;
      byteArray0[4] = (byte)92;
      byteArray0[5] = (byte)2;
      byteArray0[6] = (byte) (-88);
      byteArray0[7] = (byte) (-71);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setPhotoQuality(3);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.setGroundColor((-1));
      homeEnvironment0.setVideoFrameRate(0);
      HomeEnvironment.Property.values();
      homeEnvironment0.getLightColor();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getSkyTexture();
      HomeEnvironment.DrawingMode.values();
      Random.setNextRandom((byte)18);
      homeEnvironment0.getVideoFrameRate();
      HomeEnvironment.Property.values();
      homeEnvironment0.getLightColor();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getDrawingMode();
      System.setCurrentTimeMillis(3);
      homeEnvironment0.getGroundTexture();
      assertEquals((-1), homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      int int0 = homeEnvironment1.getGroundColor();
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment1.getPhotoAspectRatio());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.6422165264472737
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(240, homeEnvironment0.getVideoHeight());
      
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setVideoWidth(0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getVideoHeight();
      homeEnvironment0.getVideoAspectRatio();
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(0, homeEnvironment0.getVideoWidth());
      assertEquals(11053224, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      
      homeEnvironment0.setPhotoWidth(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      Random.setNextRandom(0);
      homeEnvironment0.getDrawingMode();
      homeEnvironment1.getGroundTexture();
      homeEnvironment0.getPhotoWidth();
      int int0 = homeEnvironment0.getSkyColor();
      assertEquals(0, homeEnvironment0.getPhotoWidth());
      assertEquals(13427964, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(28);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getVideoQuality();
      System.setCurrentTimeMillis(28);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.9649066497880012
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality((-1155));
      homeEnvironment0.getVideoQuality();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getVideoFrameRate();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoFrameRate(25);
      homeEnvironment0.setSubpartSizeUnderLight((-1));
      Random.setNextRandom((-1));
      homeEnvironment1.getSkyTexture();
      homeEnvironment0.getSkyColor();
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment.Property.values();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio((AspectRatio) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.clone();
      homeEnvironment0.getDrawingMode();
      assertEquals(0, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(3);
      homeEnvironment0.clone();
      assertEquals(3, homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(2.81F);
      homeEnvironment0.clone();
      assertEquals(2.81F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(147);
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(147, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("7\"LGp+a1*u", "FILL", (Content) null, (-99.0F), 694.59F, "7\"LGp+a1*u");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2691, homeTexture0, (-4695), homeTexture0, 2691, 2691);
      homeEnvironment0.getSkyTexture();
      assertEquals(2691, homeEnvironment0.getGroundColor());
      assertEquals(2691.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(2691, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-4695), homeEnvironment0.getSkyColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth((-2136470910));
      homeEnvironment0.setPhotoQuality(400);
      homeEnvironment0.clone();
      homeEnvironment0.getPhotoWidth();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor((-1400));
      homeEnvironment0.clone();
      assertEquals((-1400), homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor((-605));
      homeEnvironment0.getLightColor();
      homeEnvironment0.getPhotoAspectRatio();
      assertEquals((-605), homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoFrameRate((-4565));
      int int0 = homeEnvironment1.getVideoFrameRate();
      assertEquals((-4565), int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.521452740110338
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setCeillingLightColor(300);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoFrameRate(300);
      homeEnvironment0.getVideoWidth();
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(300, homeEnvironment0.getCeillingLightColor());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(1);
      homeEnvironment0.getSubpartSizeUnderLight();
      System.setCurrentTimeMillis(1);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("0s}H_v]1QRa");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.0s}H_v]1QRa
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-119), (HomeTexture) null, (-119), (-119), (-119));
      int int0 = homeEnvironment0.getSkyColor();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-119), homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals((-119), int0);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-119), homeEnvironment0.getLightColor());
      assertEquals((-119.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-1090));
      homeEnvironment0.setVideoFrameRate((-1090));
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getGroundTexture();
      assertEquals((-1090), homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight((-369.5F));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setWallsAlpha((-369.5F));
      float float0 = homeEnvironment1.getSubpartSizeUnderLight();
      assertEquals(AspectRatio.RATIO_4_3, homeEnvironment0.getPhotoAspectRatio());
      assertEquals((-369.5F), float0, 0.01F);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(25);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-1431655764));
      homeEnvironment0.clone();
      assertEquals((-1431655764), homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("z{h^UG", "z{h^UG", (Content) null, 8, (-2032.083F), "z{h^UG", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(8, homeTexture0, 8, homeTexture0, 8, (-2032.083F));
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getGroundTexture();
      assertEquals(8, homeEnvironment0.getLightColor());
      assertEquals(8, homeEnvironment0.getSkyColor());
      assertEquals(8, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals((-2032.083F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.clone();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getPhotoQuality();
      boolean boolean0 = homeEnvironment1.isObserverCameraElevationAdjusted();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(13427983);
      homeEnvironment0.clone();
      assertEquals(13427983, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.87738960077541
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setWallsAlpha(3539.342F);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoHeight((-689));
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.setLightColor((-689));
      homeEnvironment0.setCeillingLightColor((-711));
      boolean boolean0 = homeEnvironment0.isAllLevelsVisible();
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getPhotoAspectRatio());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(300);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(0, homeEnvironment1.getVideoQuality());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-1946), (HomeTexture) null, (-1946), (HomeTexture) null, (-1946), (-1946));
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      int int0 = homeEnvironment1.getGroundColor();
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals((-1946.0F), homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertNotSame(homeEnvironment1, homeEnvironment2);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals((-1946), int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor((-2978));
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals((-2978), int0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(5);
      homeEnvironment0.clone();
      assertEquals(5, homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality((-1121));
      homeEnvironment0.clone();
      assertEquals((-1121), homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality((-42));
      assertEquals((-42), homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(13684944);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.748058988887039
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha((-4513.0F));
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setCeillingLightColor(2167);
      homeEnvironment1.getGroundColor();
      homeEnvironment1.getWallsAlpha();
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals((-4513.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(320, int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("`Y[Uk^?sE9)m|z", (Content) null, 0, 0.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, homeTexture0, 0, 1092.78F);
      homeEnvironment0.setVideoQuality(5747);
      homeEnvironment0.getSkyTexture();
      assertEquals(5747, homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("Q17qOZtXzE", (Content) null, 6, 6);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(6, homeTexture0, 6, homeTexture0, 3, 1.7777778F);
      homeEnvironment0.getSkyTexture();
      assertEquals(6, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(1.7777778F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(3, homeEnvironment0.getLightColor());
      assertEquals(6, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals(400, int0);
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.784619384820671
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setWallsAlpha(3539.342F);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoHeight((-689));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("OOL|jYw", resourceURLContent0, 3539.342F, 0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", (PropertyChangeListener) null);
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getPhotoAspectRatio());
      assertEquals((-689), int0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("5}\"gRh;G`!Uh,G", "OBSERVER_CAMERA_ELEVATION_ADJUSTED", (Content) null, (-2033.31F), 0.0F, "5}\"gRh;G`!Uh,G", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1900, homeTexture0, 1900, 1900, 0.0F);
      homeEnvironment0.setSubpartSizeUnderLight(1.0F);
      homeEnvironment0.getGroundTexture();
      Random.setNextRandom(1900);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getLightColor());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(11053224);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(16);
      homeEnvironment0.setVideoWidth(16);
      homeEnvironment0.clone();
      assertEquals(12, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-1223));
      homeEnvironment0.clone();
      assertEquals((-1223), homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality((-2140751723));
      homeEnvironment0.clone();
      assertEquals((-2140751723), homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(12, (HomeTexture) null, 12, 12, 12);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      boolean boolean0 = homeEnvironment1.isObserverCameraElevationAdjusted();
      assertEquals(12.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(12, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(12, homeEnvironment1.getLightColor());
      assertTrue(boolean0);
      assertEquals(12, homeEnvironment1.getGroundColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.377659200133073
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setWallsAlpha(3539.342F);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoHeight((-689));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      MockURL.getHttpExample();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setLightColor((-689));
      homeEnvironment0.setVideoWidth((-689));
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setAllLevelsVisible(false);
      AspectRatio aspectRatio1 = AspectRatio.FREE_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio FREE_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      CatalogTexture catalogTexture0 = new CatalogTexture("com.eteks.sweethome3d.model.HomeEnvironment$Property", (Content) null, 2.0F, 2.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.getVideoAspectRatio();
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13427964, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.clone();
      assertEquals(AspectRatio.RATIO_4_3, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-2234));
      homeEnvironment0.clone();
      assertEquals((-2234), homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-3016));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.DrawingMode.values();
      int int0 = homeEnvironment1.getVideoHeight();
      assertEquals((-3016), homeEnvironment0.getVideoWidth());
      assertEquals((-2262), int0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(2136696446);
      homeEnvironment0.clone();
      assertEquals(2136696446, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.6830462864787377
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setWallsAlpha(3539.342F);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoHeight(0);
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("OOL|jYw", resourceURLContent0, 3539.342F, 0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getPhotoHeight();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth((-1223));
      homeEnvironment0.clone();
      assertEquals((-1223), homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor((-1010));
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals((-1010), homeEnvironment0.getLightColor());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(14);
      assertEquals(14, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, int0);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.isAllLevelsVisible();
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getVideoAspectRatio());
      assertEquals(300, int0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(12, (HomeTexture) null, 12, 12, 12);
      homeEnvironment0.isAllLevelsVisible();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(12, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(12.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(12, homeEnvironment0.getGroundColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(12, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(1956);
      assertEquals(1956, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(13427964);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      CatalogTexture catalogTexture0 = new CatalogTexture("jar", (Content) null, 551.0F, 551.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha((-1201.6014F));
      homeEnvironment0.clone();
      assertEquals((-1201.6014F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(1691);
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(1268, homeEnvironment0.getVideoHeight());
      assertEquals(11053224, int0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(768);
      homeEnvironment0.clone();
      assertEquals(768, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      assertEquals(HomeEnvironment.DrawingMode.FILL_AND_OUTLINE, homeEnvironment0.getDrawingMode());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_FRAME_RATE;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(1073741824);
      homeEnvironment0.clone();
      assertEquals(1073741824, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(400);
      homeEnvironment0.getVideoCameraPath();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(2146752614);
      assertEquals(2146752614, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1024), (HomeTexture) null, (-1024), (HomeTexture) null, (-1024), (-1024));
      homeEnvironment0.setVideoFrameRate((-1024));
      assertEquals((-1024), homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(1.5F);
      homeEnvironment0.clone();
      assertEquals(1.5F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(12, (HomeTexture) null, 12, 12, 12);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      
      homeEnvironment0.setCeillingLightColor(0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.getGroundColor();
      float float0 = homeEnvironment0.getWallsAlpha();
      assertEquals(0, homeEnvironment0.getCeillingLightColor());
      assertEquals(12.0F, float0, 0.01F);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (String) null, (Content) null, (-1.0F), (-1640.0F), (String) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2147007908), homeTexture0, (-2147007908), (-2147007908), (-1640.0F));
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-2147007908), homeEnvironment0.getGroundColor());
      assertEquals((-1640.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertNotNull(homeTexture1);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals((-2147007908), homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-2147007908), homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      HomeEnvironment.Property.valueOf("ALL_LEVELS_VISIBLE");
      CatalogTexture catalogTexture0 = new CatalogTexture("ALL_LEVELS_VISIBLE", (Content) null, 25, 25, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(25, homeTexture0, 25, 25, 25);
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertEquals(25, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertNotNull(homeTexture1);
      assertEquals(25, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(13684944);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.clone();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(false);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(11053224, int0);
      
      float float0 = homeEnvironment0.getWallsAlpha();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(1073741824);
      assertEquals(1073741824, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(3, (HomeTexture) null, 3, 3, 3);
      int int0 = homeEnvironment0.getSkyColor();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(3, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(3.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(3, int0);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(3, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(0.0F);
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = homeEnvironment0.getLightColor();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13684944, int0);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.DRAWING_MODE;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
  }
}
