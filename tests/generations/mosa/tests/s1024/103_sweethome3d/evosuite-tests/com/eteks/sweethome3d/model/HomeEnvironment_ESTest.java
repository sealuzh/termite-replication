/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 01:04:28 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor((-1001));
      homeEnvironment0.setPhotoWidth(0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals((-1001), homeEnvironment0.getCeillingLightColor());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "10.4");
      URL uRL0 = MockURL.getFtpExample();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("10.4", uRLContent0, 0, 0);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      TexturesCategory texturesCategory0 = new TexturesCategory("10.4");
      catalogTexture0.setCategory(texturesCategory0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, (-2383), homeTexture0, 0, (-1695.5204F));
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getLightColor();
      homeEnvironment0.getPhotoAspectRatio();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setVideoQuality((-3949));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getVideoWidth();
      homeEnvironment0.getVideoHeight();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (String) null, resourceURLContent0, 0.0F, 0.0F, "W1(5zi\"~V5bEy9'", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-5544), homeTexture0, 5, homeTexture0, 5, 5);
      homeEnvironment0.getSkyTexture();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(5.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals((-5544), homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(5, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(5, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-1));
      homeEnvironment0.setPhotoHeight((-1));
      homeEnvironment0.setVideoFrameRate((-1));
      MockURL.getFileExample();
      homeEnvironment0.getVideoQuality();
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals((-1), homeEnvironment0.getPhotoHeight());
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.0506636431758234
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight((-399.97F));
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setPhotoHeight((-2019));
      homeEnvironment0.getLightColor();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setLightColor((-2019));
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoAspectRatio();
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals((-2019), homeEnvironment0.getLightColor());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URLContent uRLContent0 = new URLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", uRLContent0, 0.0F, (-818.24F), "");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertNotNull(homeTexture1);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor((-5105));
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals((-5105), int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality((-890));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getPhotoQuality();
      homeEnvironment1.getVideoCameraPath();
      assertEquals((-890), homeEnvironment0.getPhotoQuality());
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-3));
      homeEnvironment0.setVideoQuality((-3));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getVideoWidth();
      assertEquals((-3), homeEnvironment0.getVideoQuality());
      assertEquals((-3), int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("1vBm7KV-oR23 3S/=~", "1vBm7KV-oR23 3S/=~", temporaryURLContent0, (-353), (-353), "1vBm7KV-oR23 3S/=~");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-353), homeTexture0, (-353), (-3), (-353));
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertEquals((-3), homeEnvironment0.getLightColor());
      assertEquals((-353), homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-353.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals((-353), homeEnvironment0.getSkyColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertNotNull(homeTexture1);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(320, homeEnvironment0.getVideoWidth());
      
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setSubpartSizeUnderLight(1.5F);
      homeEnvironment0.setVideoQuality((-1867));
      homeEnvironment0.getGroundColor();
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment1.setSubpartSizeUnderLight((-1867));
      homeEnvironment0.getVideoQuality();
      int int0 = homeEnvironment1.getPhotoHeight();
      assertEquals((-1867), homeEnvironment0.getVideoQuality());
      assertEquals(300, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.1579247678555973
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 0, 0);
      homeEnvironment0.setPhotoQuality(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment1.isObserverCameraElevationAdjusted();
      homeEnvironment1.setGroundTexture((HomeTexture) null);
      homeEnvironment2.setSubpartSizeUnderLight(0);
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment1.setCeillingLightColor(0);
      homeEnvironment2.getVideoFrameRate();
      homeEnvironment0.setCeillingLightColor(1709);
      homeEnvironment1.setSubpartSizeUnderLight((-1526.1675F));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment2.setSkyColor(19);
      homeEnvironment0.getVideoQuality();
      homeEnvironment1.getVideoQuality();
      homeEnvironment2.setCeillingLightColor(7);
      homeEnvironment1.getSkyColor();
      homeEnvironment2.getVideoCameraPath();
      assertEquals((-1526.1675F), homeEnvironment1.getSubpartSizeUnderLight(), 0.01F);
      assertEquals(240, homeEnvironment1.getVideoHeight());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor((-1145));
      homeEnvironment0.clone();
      assertEquals((-1145), homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.3781766359449454
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.clone();
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getSkyTexture();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      homeEnvironment0.setCeillingLightColor(5);
      homeEnvironment0.setVideoFrameRate((-1818));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyColor(1358);
      homeEnvironment1.setGroundColor((-714));
      homeEnvironment0.getVideoFrameRate();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment1.getPhotoWidth();
      homeEnvironment0.getVideoHeight();
      homeEnvironment1.getGroundColor();
      homeEnvironment0.getGroundTexture();
      int int0 = homeEnvironment0.getSkyColor();
      assertEquals((-1818), homeEnvironment0.getVideoFrameRate());
      assertEquals(13427964, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth((-1));
      float float0 = (-1194.0F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      // Undeclared exception!
      try { 
        homeEnvironment0.removePropertyChangeListener((HomeEnvironment.Property) null, propertyChangeListenerProxy0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("RnvM\"]&c", uRLContent0, 1.3333334F, 1.3333334F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(4711, homeTexture0, 4711, 4711, 1.3333334F);
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertNotNull(homeTexture1);
      
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(4711, homeEnvironment0.getLightColor());
      assertEquals(1.3333334F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(4711, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, int0);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(4711, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", (Content) null, 13684944, 0.0F, "");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(13684944, homeTexture0, 13684944, homeTexture0, 16, 0.0F);
      homeEnvironment0.getGroundTexture();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(16, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Class<Camera> class0 = Camera.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      TemporaryURLContent temporaryURLContent0 = TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", temporaryURLContent0, (-1003), (-1003), "");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1003), homeTexture0, (-1003), homeTexture0, (-1003), (-1003));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getSkyTexture();
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals((-1003), homeEnvironment1.getSkyColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals((-1003), homeEnvironment1.getLightColor());
      assertEquals((-1003), homeEnvironment1.getGroundColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals((-1003.0F), homeEnvironment1.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture(".Handler", ".Handler", temporaryURLContent0, 759, 759, ".Handler", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(759, homeTexture0, 759, homeTexture0, 759, 759);
      homeEnvironment0.getSkyTexture();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(759.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(759, homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(759, homeEnvironment0.getGroundColor());
      assertEquals(759, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality((-2410));
      homeEnvironment0.clone();
      assertEquals((-2410), homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(300);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.2242578247365654
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "B=NFGd6Sj#Z");
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setPhotoHeight(3755);
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals(3755, homeEnvironment0.getPhotoHeight());
      assertEquals(320, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(45);
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(45, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(400);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(8, (HomeTexture) null, (-1210), (HomeTexture) null, 8, 8);
      int int0 = homeEnvironment0.getSkyColor();
      assertEquals((-1210), int0);
      
      homeEnvironment0.getSkyTexture();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(8, homeEnvironment0.getLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(8, homeEnvironment0.getGroundColor());
      assertEquals(8.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-1424));
      homeEnvironment0.clone();
      assertEquals((-1424), homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSubpartSizeUnderLight((-2597.2117F));
      homeEnvironment1.getSubpartSizeUnderLight();
      homeEnvironment0.setWallsAlpha((-2597.2117F));
      assertEquals((-2597.2117F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor((-2146267464));
      homeEnvironment0.clone();
      assertEquals((-2146267464), homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(1527);
      homeEnvironment0.setGroundColor(1527);
      homeEnvironment0.clone();
      assertEquals(1527, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(1344.56F);
      homeEnvironment0.clone();
      assertEquals(1344.56F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(13684944);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-1100));
      homeEnvironment0.clone();
      assertEquals((-825), homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(12);
      homeEnvironment0.setSkyColor(12);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getPhotoWidth();
      assertEquals(12, homeEnvironment0.getSkyColor());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.clone();
      homeEnvironment0.setSubpartSizeUnderLight(1.5F);
      homeEnvironment0.setVideoQuality((-1851));
      homeEnvironment0.getGroundColor();
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals((-1851), homeEnvironment0.getVideoQuality());
      assertEquals(1.5F, float0, 0.01F);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.clone();
      homeEnvironment0.setWallsAlpha(1.0F);
      homeEnvironment0.setPhotoHeight(12);
      homeEnvironment0.setSkyColor(17);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("PHOTHEIGHT", (PropertyChangeListener) null);
      float float0 = homeEnvironment0.getWallsAlpha();
      assertEquals(12, homeEnvironment0.getPhotoHeight());
      assertEquals(1.0F, float0, 0.01F);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      
      homeEnvironment0.setGroundColor(13684944);
      homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor((-2942));
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getLightColor();
      assertEquals((-2942), int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(2146363906);
      assertEquals(2146363906, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha((-2798.7612F));
      homeEnvironment0.clone();
      assertEquals((-2798.7612F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth((-1245));
      homeEnvironment0.clone();
      assertEquals((-1245), homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth((-34));
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals((-34), int0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.074287448396404
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(0);
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setPhotoWidth(1);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getVideoAspectRatio();
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (String) null, temporaryURLContent0, (-2067.1606F), (-1213.521F), "`EA%'^4SKH5h7ZsJ{");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(1, homeTexture0, 12, homeTexture0, 966, (-2067.1606F));
      homeEnvironment2.getGroundColor();
      homeEnvironment0.getVideoAspectRatio();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      homeEnvironment2.getPhotoHeight();
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      HomeEnvironment homeEnvironment3 = new HomeEnvironment(2080, homeTexture1, 300, homeTexture0, 2376, 0.0F);
      // Undeclared exception!
      try { 
        homeEnvironment3.setSkyTexture(homeTexture1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("PHOTO_HEIGHT", "PHOTO_HEIGHT", uRLContent0, 2814.1F, 2814.1F, "PHOTO_HEIGHT");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertNotSame(homeEnvironment1, homeEnvironment0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setAllLevelsVisible(true);
      boolean boolean0 = homeEnvironment1.isAllLevelsVisible();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(29);
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals(29, int0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertNotSame(homeEnvironment1, homeEnvironment0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(1227133529);
      homeEnvironment0.clone();
      assertEquals(1227133529, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-1110));
      homeEnvironment0.clone();
      assertEquals((-1110), homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.setVideoFrameRate(0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getVideoQuality();
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals(HomeEnvironment.DrawingMode.FILL_AND_OUTLINE, homeEnvironment0.getDrawingMode());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(2345);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setGroundColor(2345);
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getPhotoAspectRatio();
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals(2345, homeEnvironment0.getLightColor());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoFrameRate(25);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      assertEquals(11053224, homeEnvironment2.getGroundColor());
      assertEquals(300, homeEnvironment2.getPhotoHeight());
      assertEquals(13427964, homeEnvironment2.getSkyColor());
      assertEquals(240, homeEnvironment2.getVideoHeight());
      assertEquals(0.0F, homeEnvironment2.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment2.getPhotoWidth());
      assertEquals(13684944, homeEnvironment2.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment2.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertNotSame(homeEnvironment2, homeEnvironment1);
      assertTrue(homeEnvironment2.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.0523132038287963
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getGroundTexture();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment1.getSkyTexture();
      homeEnvironment1.getWallsAlpha();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.isObserverCameraElevationAdjusted();
      homeEnvironment2.setObserverCameraElevationAdjusted(false);
      homeEnvironment2.getGroundTexture();
      int int0 = homeEnvironment2.getVideoHeight();
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(240, int0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.1218159503049137
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 0, 0);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.getCeillingLightColor();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.isObserverCameraElevationAdjusted();
      homeEnvironment1.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setSubpartSizeUnderLight(0);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment0.setVideoQuality(4684);
      homeEnvironment1.getGroundColor();
      homeEnvironment0.getSubpartSizeUnderLight();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment1.setWallsAlpha(460.0F);
      assertEquals(460.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getLightColor());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.122928297357194
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(2345);
      homeEnvironment0.setVideoFrameRate(0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "nH^P6{-sLq@<=A");
      homeEnvironment0.setWallsAlpha((-1518.2759F));
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setVideoFrameRate((-337));
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      homeEnvironment0.getPhotoWidth();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setVideoQuality((-337));
      homeEnvironment0.isAllLevelsVisible();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray1 = HomeEnvironment.Property.values();
      assertFalse(homeEnvironment_PropertyArray1.equals((Object)homeEnvironment_PropertyArray0));
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.8058632507364383
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(13684944, (HomeTexture) null, 1468, (HomeTexture) null, 5, 2261.6555F);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getPhotoAspectRatio();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(2146568267);
      homeEnvironment0.getVideoCameraPath();
      assertEquals(2146568267, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(320);
      homeEnvironment0.setVideoWidth(320);
      homeEnvironment0.clone();
      assertEquals(320, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.clone();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.setGroundColor(0);
      assertEquals(0, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(13684944);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-2719));
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals((-2039), int0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(501);
      homeEnvironment0.getVideoAspectRatio();
      assertEquals(501, homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(2145727345);
      homeEnvironment0.clone();
      assertEquals(2145727345, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight((-1526.1675F));
      homeEnvironment0.clone();
      assertEquals((-1526.1675F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment0.getSkyTexture();
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(0, homeEnvironment0.getPhotoQuality());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio FREE_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(7, (HomeTexture) null, 7, (HomeTexture) null, 7, 7);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(7, homeEnvironment1.getGroundColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(7, homeEnvironment1.getLightColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(7, homeEnvironment1.getSkyColor());
      assertEquals(7.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(2);
      homeEnvironment0.clone();
      assertEquals(2, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(439);
      assertEquals(439, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      boolean boolean0 = homeEnvironment0.isObserverCameraElevationAdjusted();
      assertTrue(boolean0);
      
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals(25, int0);
      
      homeEnvironment0.getGroundTexture();
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(2.0F);
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals(2.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(25, int0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(14);
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.clone();
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(0.0F, float0, 0.01F);
      
      float float1 = homeEnvironment0.getWallsAlpha();
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(0.0F, float1, 0.01F);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-647));
      homeEnvironment0.clone();
      assertEquals((-647), homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(1425);
      assertEquals(1425, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoHeight(3103);
      assertEquals(3103, homeEnvironment1.getPhotoHeight());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(1045);
      assertEquals(1045, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor((-115));
      homeEnvironment0.clone();
      assertEquals((-115), homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getDrawingMode();
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_COLOR;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_HEIGHT;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.getVideoAspectRatio();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }
}
