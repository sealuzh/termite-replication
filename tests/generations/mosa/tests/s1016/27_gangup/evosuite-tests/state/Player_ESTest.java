/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 14 15:37:22 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileNotFoundException;
import java.io.FilterOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player((-445), "Player.unpack(): *** WARNING *** data is not of proper type!", "Player.unpack(): *** WARNING *** data is not of proper type!", (-445), (-445));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Player.unpack(): *** WARNING *** data is not of proper type!");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.setMoney(317.5153F);
      player0.setDead((-1137L), false);
      player0.pack();
      player0.type();
      player0.getMoney();
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("}@F~,;g7KlPHM=pA");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player();
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.setY((-94.6949F));
      player0.setJoinOK(player0, true);
      player0.isJoinOK(player0, true);
      float float0 = player0.getY();
      assertEquals((-94.6949F), float0, 0.01F);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.7874335778425303
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player((-585));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      player0.setConnected(true);
      player0.setDead((long) (-585), true);
      player0.pack();
      player0.setZ((-585));
      player0.getTimeOfDeath();
      player0.setDead((-585L), true);
      System.setCurrentTimeMillis((-585L));
      player0.getY();
      player0.setY(1.0F);
      player0.getMoney();
      player0.getMoney();
      player0.pack();
      player0.getY();
      long long0 = player0.getTimeOfDeath();
      assertEquals((-585L), long0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(809, "gui.ModuleBrowserDialog$ModuleFilter", "R(]AEfC", 809);
      player0.setMoney((-1.0F));
      player0.getMoney();
      float float0 = player0.getMoney();
      assertEquals((-1.0F), float0, 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(1902, "ZD[6ZFIt7<", 1902);
      player0.id = (-2549);
      Party party0 = new Party();
      player0.head = party0;
      player0.setZ((-1129.0947F));
      player0.setConnected(true);
      player0.getMoney();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.type();
      player0.pack();
      player0.type();
      player0.getZ();
      player0.getTimeOfDeath();
      player0.type();
      long long0 = player0.getTimeOfDeath();
      assertEquals((-1129.0947F), player0.getZ(), 0.01F);
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(0, "", "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", 0, 0);
      int int0 = player0.getStrength();
      assertEquals("", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals(0, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(3, "*X,{7v7", (String) null, (-3255));
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      player0.getName();
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals((-3255), player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player1.setConnected(true);
      player0.setJoinOK(player1, true);
      player0.setDead();
      long long0 = player0.getTimeOfDeath();
      assertEquals(1392409281320L, long0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = null;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.418220834186521
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player();
      player0.setX((-1));
      player0.setConnected(true);
      player0.setMoney(1.0F);
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      player0.reset(true);
      player0.setZ(893.348F);
      player0.gangStrength();
      int int0 = Packable.GAME_EVENT;
      player0.setDead();
      player0.setDead((-1L));
      player0.add((Party) null);
      player0.reset(true);
      player0.getIP();
      player0.pack();
      player0.prev = null;
      player0.setY(0.0F);
      player1.setZ(1830.892F);
      player0.getTimeOfDeath();
      player0.getX();
      player0.setMoney((-4401.1753F));
      player0.gangStrength();
      player0.setConnected(true);
      player1.setJoinOK(player0, true);
      assertEquals((-4401.1753F), player0.getMoney(), 0.01F);
      assertEquals(893.348F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player((-937), "", (-937));
      player0.getName();
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals((-937), player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(player1.isConnected());
      assertTrue(boolean0);
      assertEquals(0, player1.getPictureId());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals("Player-1", player1.getName());
      assertFalse(player1.isDead());
      assertEquals(1, player1.getStrength());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.9417429777213613
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(0, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertFalse(boolean0);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
      assertEquals("Player-1", player1.getName());
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.setConnected(false);
      player0.isConnected();
      assertFalse(player0.isConnected());
      
      Player player1 = new Player(680, "A", "\"4(ym8r/GaFMd|EOJ", 4, 5);
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      int int0 = (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1), 3017);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-42);
      byteArray0[2] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(1, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(byteArrayOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(filterOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(29, byteArrayOutputStream0.size());
      
      player0.pack();
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(319, (String) null, (String) null, 319, 5);
      player0.getIP();
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(319, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(5, player0.getStrength());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player(1, (String) null, (String) null, 1);
      player0.type();
      player0.getSubparty();
      Party party0 = new Party();
      player0.next = party0;
      player0.getY();
      player0.getX();
      player0.toString();
      party0.remove(player0.next);
      player0.getX();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.8550964054089625
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      Player player2 = new Player(517, "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", (-174), 517);
      player0.gangStrength();
      player2.pack();
      player1.setY(745.0F);
      assertEquals(745.0F, player1.getY(), 0.01F);
      
      Player player3 = new Player((-18671), "module.ModuleBrowserDialog$ModuleFilter", "", (-174));
      player3.isJoinOK(player0, false);
      player3.toString();
      assertEquals(0L, player3.getTimeOfDeath());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.5530953379904706
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player((-1));
      player0.setX((-1));
      Party party0 = player0.boss;
      player0.add((Party) null);
      player0.setConnected(true);
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      player0.reset(true);
      player0.setZ(893.348F);
      player0.gangStrength();
      player0.type();
      player0.setDead();
      player0.isJoinOK(player1, true);
      Player player2 = new Player(5, "state.Player", "state.Player", (short)4919);
      player2.getIP();
      player0.getName();
      player2.getStrength();
      Party party1 = player1.boss;
      Party party2 = player2.boss;
      player2.reset(false);
      player1.setConnected(true);
      player0.getZ();
      player1.setMoney((short)4919);
      assertEquals(4919.0F, player1.getMoney(), 0.01F);
      
      int int0 = player2.getPictureId();
      assertEquals(4919, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)54;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)21;
      player0.unpack(byteArray0);
      player0.pack();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.toString());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.969755134636486
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(2, "", "FT", 0);
      player0.gangStrength();
      player0.setZ(2);
      player0.prev = null;
      player0.getX();
      player0.setDead((-512L));
      player0.setConnected(true);
      Party party0 = player0.next;
      player0.add((Party) null);
      player0.getIP();
      player0.isConnected();
      player0.toString();
      player0.isDead();
      player0.setDead((long) 0);
      player0.setY((-10.053585F));
      assertEquals((-10.053585F), player0.getY(), 0.01F);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player();
      assertFalse(player0.isDead());
      
      player0.setDead(0L);
      boolean boolean0 = player0.isDead();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = player0.isDead();
      assertFalse(boolean0);
      assertEquals(0, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals("Player-1", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.0248847886694654
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ(0.0F);
      player0.gangStrength();
      player0.next = (Party) player0;
      player0.getStrength();
      Player player1 = new Player(635, ".*[.]class$", "module.ModuleBrowserDialog$ModuleFilter", 4);
      player0.getSubparty();
      player1.boss = (Party) player0;
      player1.gangStrength();
      player1.id = 2243;
      player0.getIP();
      player1.getName();
      player0.getStrength();
      Player player2 = (Player)player1.boss;
      Player player3 = (Player)player1.boss;
      player0.setConnected(false);
      player0.getZ();
      player0.setMoney((-842.95F));
      int int0 = player0.getPictureId();
      assertEquals((-842.95F), player0.getMoney(), 0.01F);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.193764486816496
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = player0.next;
      player0.remove((Party) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.setX(0.0F);
      player0.setZ(0.0F);
      player0.setDead(1392409281320L);
      player0.pack();
      player0.isConnected();
      player0.type();
      Player player1 = new Player(4280, "bU", "`VUWi[J[sgF*f0", 0);
      player1.isJoinOK(player0, false);
      player1.getX();
      player1.getMoney();
      float float0 = player0.getX();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(0, "Player.unpack(): *** WARNING *** data is not of proper type!", "", 3598, 0);
      player0.gangStrength();
      player0.pack();
      player0.setY(3598);
      assertEquals(3598.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(1424, (String) null, 1424);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      
      Player player1 = new Player((short)4919, "A", "A", (short)4919, 978);
      assertEquals(4919, player1.getPictureId());
      assertFalse(player1.isDead());
      assertTrue(player1.isConnected());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(978, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(4919, "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 4919, 4919);
      player0.setY(0.1F);
      Player player1 = new Player((short)4919);
      player0.isJoinOK(player1, true);
      player0.toString();
      assertEquals(0.1F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(163, (String) null, "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", 163, (-1));
      int int0 = player0.gangStrength();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(163, player0.getPictureId());
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.add(player1);
      int int0 = player0.gangStrength();
      assertEquals(2, int0);
      
      Player player2 = new Player();
      byte[] byteArray0 = new byte[0];
      player2.unpack(byteArray0);
      player0.setJoinOK(player2, true);
      assertTrue(player2.isConnected());
      assertEquals("0.0.0.0", player2.getIP());
      assertEquals(0, player2.getPictureId());
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals(0L, player2.getTimeOfDeath());
      assertEquals("Player-1", player2.getName());
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertFalse(player2.isDead());
      assertEquals("Player-1", player0.getName());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead((long) (short)4919, true);
      player0.pack();
      assertEquals(4919L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(3564, "'-Ok?-<tZ##7{^K7&", 3564);
      player0.gangStrength();
      player0.setZ(1.0F);
      player0.getPictureId();
      player0.toString();
      player0.getStrength();
      Player player1 = new Player(2, "Player", (String) null, (short)4919, 1);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(1.0F, player0.getZ(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player((-1014), "", "", (-2725), (-2725));
      int int0 = player0.getStrength();
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-2725), player0.getPictureId());
      assertEquals((-2725), int0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(3225.765F);
      int int0 = player0.type();
      assertEquals(3225.765F, player0.getY(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(185, "`S(MS:!) 21VA+", (-159));
      int int0 = player0.gangStrength();
      int int1 = player0.getPictureId();
      assertEquals((-159), int1);
      
      player0.toString();
      int int2 = player0.getStrength();
      assertEquals(1, int2);
      assertTrue(int2 == int0);
      
      Player player1 = new Player(807, (String) null, "p", 807, (-159));
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals((-159), player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(boolean0);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      player0.pack();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.toString());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)16;
      byteArray0[1] = (byte)20;
      player0.unpack(byteArray0);
      player0.pack();
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player-1", player0.getName());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player();
      float float0 = player0.getY();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.toString());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0, player0.getPictureId());
  }
}
