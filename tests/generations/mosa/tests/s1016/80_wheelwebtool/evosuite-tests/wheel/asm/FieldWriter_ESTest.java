/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 14 15:04:17 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3590669121050878
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-513));
      classWriter0.version = 51;
      classWriter0.index = (-513);
      byte[] byteArray0 = ClassWriter.TYPE;
      classWriter0.newClass("RDRIT[:mDjM");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-513), "RDRIT[:mDjM", "RDRIT[:mDjM", "RDRIT[:mDjM", "RDRIT[:mDjM");
      fieldWriter0.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-511));
      ByteVector byteVector0 = classWriter0.pool;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)22;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)16;
      byteVector0.length = 1519;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " e");
      byteArray0[7] = (byte)8;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-511), " e", " e", " e", " e");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-517));
      classWriter0.version = (-517);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-517), "RRRIT[:ImDjM", "RRRIT[:ImDjM", "RRRIT[:ImDjM", "RRRIT[:ImDjM");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-517));
      classWriter0.version = (-517);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-517), "RRRIT[:ImDjM", "RRRIT[:ImDjM", "RRRIT[:ImDjM", "RRRIT[:ImDjM");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-476));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-476), "", "", "", "");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.2885387096069334
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(22);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 22, "[^ +XPN#", "[^ +XPN#", "[^ +XPN#", "[^ +XPN#");
      Attribute attribute0 = new Attribute("[^ +XPN#");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.8647337539567728
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65061);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65061, "[^ +X}PN#", "[^ +X}PN#", "[^ +X}PN#", "[^ +X}PN#");
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.put(byteVector0);
      byteVector0.length = 65061;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0829081047004716
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "value ", "value ", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "0B'|r2KT5qT%", "0B'|r2KT5qT%", "0B'|r2KT5qT%", "0B'|r2KT5qT%");
      ByteVector byteVector0 = new ByteVector(131072);
      Attribute attribute0 = new Attribute("0B'|r2KT5qT%");
      fieldWriter0.visitAttribute(attribute0);
      byteVector0.putByte(2);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.8945706855324711
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1063);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "0B'|r2KT5qT%", "0B'|r2KT5qT%", "0B'|r2KT5qT%", "0B'|r2KT5qT%");
      fieldWriter0.visitAnnotation("ConstantValue", false);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-523));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-523), "RRRIT[ImDjM", "RRRIT[ImDjM", "RRRIT[ImDjM", "RRRIT[ImDjM");
      fieldWriter0.visitAnnotation("RRRIT[ImDjM", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "0B'|r2KT5qT%", "0B'|r2KT5qT%", "0B'|r2KT5qT%", (Object) null);
      ByteVector byteVector0 = new ByteVector(2);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0145240468749794
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65061);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65061, "[^ +X}PN#", "[^ +X}PN#", "[^ +X}PN#", "[^ +X}PN#");
      fieldWriter0.visitAnnotation("[^ +X}PN#", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(42, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0829081047004716
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "value ", "value ", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "0B'|r2KT5qW%", "0B'|r2KT5qW%", "0B'|r2KT5qW%", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "value ", "value ", "value ", "value ");
      fieldWriter0.visitAnnotation("value ", true);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-511));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-511), " e", " e", " e", " e");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "valxe ", "valxe ", "valxe ", "valxe ");
      fieldWriter0.getSize();
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("valxe ", true);
      assertNotNull(annotationVisitor0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "value ", "Oa", "value ", "Oa");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 0, "value ", "value ", "value ", "Oa");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65061);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65061, "[^ +X}PN#", "[^ +X}PN#", "[^ +X}PN#", "[^ +X}PN#");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", "");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1995));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 285212675, "8P>L1dr_Y&n", "8P>L1dr_Y&n", "(tXQZ&X@U", "8P>L1dr_Y&n");
      fieldWriter0.visitEnd();
      fieldWriter0.getSize();
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1, "0B'|r2KT5qT%", "0B'|r2KT5qT%", "0B'|r2KT5qT%", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-476));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-476), "", "", "", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, (-2384), "", "", "", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }
}
