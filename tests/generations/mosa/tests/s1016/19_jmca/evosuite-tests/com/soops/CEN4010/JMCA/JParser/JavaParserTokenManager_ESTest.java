/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 14 15:22:16 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Token;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.Reader;
import java.io.StringReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaParserTokenManager_ESTest extends JavaParserTokenManager_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1300206618013062
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'[*|LQz`");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)34;
      byteArray0[1] = (byte)84;
      byteArray0[2] = (byte)113;
      byteArray0[3] = (byte) (-122);
      byteArray0[4] = (byte)114;
      byteArray0[5] = (byte)55;
      byteArray0[6] = (byte)118;
      byteArray0[7] = (byte)15;
      byteArray0[8] = (byte)37;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, (byte)37, (-532), 32);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 37, column -523.  Encountered: <EOF> after : \"\\\"Tq\\ufffdr7v\\u000f%\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0252275117996936
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringReader stringReader0 = new StringReader("J%{uJ$!N");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      stringReader0.reset();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(7, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.9474072826607052
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)106;
      byteArray0[1] = (byte)106;
      byteArray0[2] = (byte)106;
      byteArray0[3] = (byte)96;
      byteArray0[4] = (byte)106;
      byteArray0[5] = (byte) (-86);
      byteArray0[6] = (byte)106;
      byteArray0[7] = (byte)106;
      byteArray0[8] = (byte)106;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 116, 100, 379);
      javaCharStream0.bufsize = (int) (byte)106;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 116, column 103.  Encountered: \"`\" (96), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1758217637958328
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DC=*?");
      StringReader stringReader1 = new StringReader("DC=*?");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5843265743823953
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%:_{V-F#");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = Token.newToken(1);
      javaParserTokenManager0.TokenLexicalActions(token0);
      Token token1 = javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.SkipLexicalActions(token1);
      assertEquals(2, javaCharStream0.getColumn());
      assertEquals(":", token1.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.585098775154596
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader("v=2e>jF\"Z+n7z?o");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(1, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.525273604857029
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader("VO0t<x8hebR%,H");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjmatchedKind = 115;
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(11, javaCharStream0.bufpos);
      assertEquals(12, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|=");
      StringReader stringReader1 = new StringReader("|=");
      StringReader stringReader2 = new StringReader("f");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("f", token0.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.8794450460513974
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StringReader stringReader0 = new StringReader("vC=2e>jF\"Z+n7z;?o");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(2, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals("=", token0.toString());
      
      Token token1 = javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(4, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals("2e", token1.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8734738482993778
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DC=*?");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = new Token();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5904155673566343
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<(x+");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      stringReader0.reset();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("(", token0.toString());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3288443051735417
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2qP=dD?J<X[0VQ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(0, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(8, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0298209170528925
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(2466);
      StringReader stringReader0 = new StringReader("NN$c%h9r~YSY\"O[_dGR");
      StringReader stringReader1 = new StringReader("Rx^*DBv DFq_*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.133492764281458
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StringReader stringReader0 = new StringReader("dHa\"gIj@");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.curChar = 'r';
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 8.  Encountered: <EOF> after : \"\\\"gIj@\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.4486837941712258
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%8[sg<:*ldzR(F6d<F@");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.getNextToken();
      stringReader0.reset();
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.MoreLexicalActions();
      assertEquals(4, javaCharStream0.getBeginColumn());
      assertEquals(5, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.8801215216137177
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<6x+");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      stringReader0.reset();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(3, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(4, javaCharStream0.getBeginColumn());
      
      javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(4, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(5, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5911496021009452
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(2466);
      StringReader stringReader0 = new StringReader("lKf:T_Mpq");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader(". State unchanged.");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 2466, (-918), 8);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(8, javaCharStream1.bufpos);
      assertEquals("unchanged", token0.toString());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.182036069448834
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(2466);
      StringReader stringReader0 = new StringReader("vCk=2.e>jF\"Z+n7z;?o");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)124;
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)124;
      byteArray1[1] = (byte)124;
      byteArray1[2] = (byte)124;
      byteArray1[3] = (byte)124;
      byteArray1[4] = (byte)124;
      byteArray1[5] = (byte)124;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      byteArrayInputStream0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      byteArrayInputStream0.read();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager1.getNextToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("|", token1.toString());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.580093770149591
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)126;
      StringReader stringReader0 = new StringReader("wile");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.newToken((byte)126);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals("wile", token0.toString());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.582483256410045
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("4<K{87|tH^z:");
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader1 = new StringReader("volatile");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringReader stringReader0 = new StringReader("float");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      try { 
        stringReader0.reset();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0439230433903965
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FbIJ!t5:/Q?.");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("\"85m!");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream1.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5447829236516364
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringReader stringReader0 = new StringReader("M/rOUG[<0I]dtM,0^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      stringReader0.reset();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("[", token0.toString());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.6167362942724053
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5o%6W%pI");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      stringReader0.reset();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      //  // Unstable assertion: assertEquals(5, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(6, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.3204326102232677
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'[*|LQz`");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("<FLOATING_POINT_LITERAL>");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[0];
      javaCharStream1.buffer = charArray0;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.jjnewStateCnt = 107;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("-3q*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, 519, 519);
      javaCharStream2.ReInit((Reader) stringReader0, 519, 519, 62);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.jjFillToken();
      assertEquals(0, javaCharStream2.bufpos);
      assertEquals("-", token0.toString());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.2803131101346317
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byteArray0[0] = (byte)79;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte) (-15);
      byteArray0[3] = (byte) (-15);
      byteArray0[4] = (byte) (-15);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: \"\\ufffd\" (65533), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5875011775569985
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",6K{U7|tH=z:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1344), 38);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(1, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(40, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.198055270444458
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<)r/Y](");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("AxIT]4Hj6uOA");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream1.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1796336670464318
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Yf(;gth1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      stringReader0.ready();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(83, token0.kind);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.1843752507353837
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StringReader stringReader0 = new StringReader("dn5FrDCXML%SfYc");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(9, javaCharStream0.bufpos);
      assertEquals(10, javaCharStream0.getEndColumn());
      
      stringReader0.reset();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(11, javaCharStream0.getBeginColumn());
      assertEquals(11, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.032019121073068
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Gju%x-@{j4qMsH=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("erfQY-Oo><x)Bm|m?u");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.8811397219446329
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader("vCk=2.e>jF\"Z+n7z;?o");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 3);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 20.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.935737978305816
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<)r/Y](");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(4, javaCharStream0.getBeginColumn());
      assertEquals("/", token0.toString());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.1872648276187687
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader("PX!w");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      token0.image = "eLwGy X8ch#Il8";
      stringReader0.reset();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals(8, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1796336670464318
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3p");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      //  // Unstable assertion: assertEquals(1, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.8690529818095458
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StringReader stringReader0 = new StringReader("n5r~3q]:HQ7'7V7m3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 74);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 74. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.5913659118565153
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("9t5&{Z=*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(4, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(5, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.8297698419737223
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringReader stringReader0 = new StringReader("k_\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1576, 1050);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(1051, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.1843752507353837
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StringReader stringReader0 = new StringReader("x+");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      stringReader0.reset();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.getBeginColumn());
      assertEquals("+", token0.toString());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.177018148301881
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StringReader stringReader0 = new StringReader("throws");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      Token token0 = Token.newToken(1);
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(6, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(36);
      StringReader stringReader0 = new StringReader("\"//\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, 36, 1110);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.newToken(123);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 36, column 1114.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.2951686400506475
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("4<K{87|tH^z:");
      StringReader stringReader1 = new StringReader("xdHVrZ+9%CIY");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1344), 38);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.newToken(52);
      javaParserTokenManager0.getNextToken();
      Token.newToken(88);
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 44);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 44. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.6697614636546148
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("4<K{87|tH^z:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1344), 38);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      stringReader0.ready();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(40, javaCharStream0.getBeginColumn());
      assertEquals(2, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.2019076805486444
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(101);
      StringReader stringReader0 = new StringReader("?>Bi");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.getNextToken();
      javaParserTokenManager2.getNextToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, (-2791));
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream1);
      javaCharStream1.ExpandBuff(false);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager3.getNextToken();
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("", token0.toString());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5947954947749798
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringReader stringReader0 = new StringReader("dHa\"gIj@");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      stringReader0.reset();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(16, javaCharStream0.getBeginColumn());
      assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      StringReader stringReader0 = new StringReader("case");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.getBeginColumn());
      assertEquals(4, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<6x+");
      StringReader stringReader1 = new StringReader("<6x+");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      StringReader stringReader2 = new StringReader("',fd#[o");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, (-1), 114);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -1, column 116.  Encountered: \"f\" (102), after : \"\\',\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'[*|LQz`");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("<FLOATING_POINT_LITERAL>");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: \"*\" (42), after : \"\\'[\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.8466698183566571
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".k#lje'Ln/a");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 195, 195);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = new Token();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token1 = new Token();
      Token token2 = javaParserTokenManager1.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(".", token2.toString());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5857917758475968
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"swi}tch\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, 1110, 24);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.newToken(0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      Token token1 = javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.SkipLexicalActions(token1);
      Token token2 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals("}", token2.toString());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.6622924720195813
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%8[sg<:*ldzR(F6d<F@");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.TokenLexicalActions(token0);
      assertEquals(3, javaCharStream0.getEndColumn());
      assertEquals("[", token0.toString());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.4814814814814815
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      StringReader stringReader0 = new StringReader("int");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.getBeginColumn());
      
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(101);
      StringReader stringReader0 = new StringReader("booeo");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.markSupported();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(5, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)126;
      StringReader stringReader0 = new StringReader("while");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.newToken((byte)126);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals("while", token0.toString());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.582483256410045
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StringReader stringReader0 = new StringReader("native");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.newToken((-4390));
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(5, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.5834607735165944
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringReader stringReader0 = new StringReader("++");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      stringReader0.reset();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjmatchedPos = 14;
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(4, javaCharStream0.getEndColumn());
      assertEquals(4, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.8806763835918008
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StringReader stringReader0 = new StringReader("vC=2e>jF\"Z+n7z;?o");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 2);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 18.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      StringReader stringReader0 = new StringReader("else");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(4, javaCharStream0.getBeginColumn());
      assertEquals("", token0.toString());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"switch\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, 1110, 24);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token.newToken(74);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(25, javaCharStream0.getBeginColumn());
      assertEquals("switch", token0.toString());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.8783578531833827
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ba;V^e(Lg_1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      stringReader0.reset();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.getBeginColumn());
      assertEquals("^", token0.toString());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(18);
      StringReader stringReader0 = new StringReader("}\u0006H}LE4w~>da)NW");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"\\u0006\" (6), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("^Kb?R]3}nuir");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals(1, javaCharStream1.getColumn());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.592865162231328
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(101);
      StringReader stringReader0 = new StringReader("8U6Nz*ZZ$I.(/E");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 101, 101);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      stringReader0.reset();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(10, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(111, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.4796933868946727
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*A");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 1);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.2496336288701027
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(2466);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)124;
      byteArray0[1] = (byte)59;
      byteArray0[2] = (byte)100;
      byteArray0[3] = (byte)65;
      byteArray0[5] = (byte)90;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream1);
      StringReader stringReader0 = new StringReader("vCk=2.e>jF\"Z+n7z;?o");
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.getBeginColumn());
      assertEquals(";", token0.toString());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0200074946081672
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Sfp");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      try { 
        stringReader0.reset();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.5869843816913654
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaParserConstants");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 49, 195);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = new Token();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.getNextToken();
      assertEquals(198, javaCharStream0.getBeginColumn());
      assertEquals(3, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.1809520586087259
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringReader stringReader0 = new StringReader("+n|od%_{P^e");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = new Token();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.getBeginColumn());
      assertEquals(2, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-51);
      byteArray0[2] = (byte)47;
      byteArray0[3] = (byte)77;
      StringReader stringReader0 = new StringReader("ly");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 32, 115, 2207);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.newToken((byte) (-51));
      javaParserTokenManager0.getNextToken();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("p");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("p", token0.toString());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.8778197848487042
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("1l,=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("=", token0.toString());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.8817072051565877
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StringReader stringReader0 = new StringReader("vC=2e>jF\"Z+n7z;?o");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.getNextToken();
      //  // Unstable assertion: assertEquals(7, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(8, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.1866536740664388
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("47Xw=V<");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      Token.newToken(374);
      javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(4, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(5, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'[*|LQz`");
      StringReader stringReader1 = new StringReader("LBhWw9{~2");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 36, 62);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(79, token0.kind);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.2610144274814916
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(618);
      StringReader stringReader0 = new StringReader("TY(Np~s}o9Sss");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.newToken(79);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.jjFillToken();
      assertEquals(3, javaCharStream0.getBeginColumn());
      assertEquals(77, token0.kind);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.206357365678961
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<6x+");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.reset();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("<", token0.toString());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.1283918008753044
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StringReader stringReader0 = new StringReader("cE\"Dc<qy;X");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 11.  Encountered: <EOF> after : \"\\\"Dc<qy;X\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.9081115246782231
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("m\"g#tvD B7)Y2?");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 15.  Encountered: <EOF> after : \"\\\"g#tvD B7)Y2?\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.9784846466019961
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(2466);
      StringReader stringReader0 = new StringReader("<IDENTIFIER>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(11, javaCharStream0.bufpos);
      assertEquals(12, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.4827586206896552
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("C_rwFuF\"/'>(SiKSw");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SwitchTo(1);
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(7, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.177018148301881
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\":\"");
      StringReader stringReader1 = new StringReader("instanceof");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals("instanceof", token0.toString());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(2466);
      StringReader stringReader0 = new StringReader("abstract");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = Token.newToken(2466);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals(8, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%8[sg<:*ldzR(F6d<F@");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(1, javaCharStream0.getLine());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0476966126744118
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(2466);
      StringReader stringReader0 = new StringReader(";/+JQo<{d");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = new Token();
      Token token1 = javaParserTokenManager1.getNextToken();
      assertEquals(3, javaCharStream0.getEndColumn());
      assertEquals("+", token1.toString());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.5884082070354566
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[!T>{(h?Qab{U,Fk2c]");
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      Token.newToken(1);
      javaParserTokenManager0.getNextToken();
      javaCharStream1.BeginToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.TokenLexicalActions((Token) null);
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      assertEquals(1, javaCharStream1.bufpos);
      
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(124, token1.kind);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.1837132182957943
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<LETTER>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjround = 38;
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(8, javaCharStream0.getBeginColumn());
      assertEquals(7, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.177018148301881
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$+'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(101, token0.kind);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("*", token0.toString());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.8802702647343483
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StringReader stringReader0 = new StringReader("vCk=2.e>jF\"Z+n7z;?o");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.newToken((-1));
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(5, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.5834607735165944
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(2466);
      StringReader stringReader0 = new StringReader(";/+JQo<{d");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.TokenLexicalActions(token0);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("/", token1.toString());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/=Iki.^w");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(2, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader("EY]");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 49, (-321));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = new Token();
      javaParserTokenManager0.getNextToken();
      stringReader0.markSupported();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals((-319), javaCharStream0.getBeginColumn());
      assertEquals("]", token1.toString());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.1861049270388184
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(2466);
      StringReader stringReader0 = new StringReader("yFGSRV<%QO[$#");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      stringReader0.reset();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(9, javaCharStream0.bufpos);
      assertEquals("QO", token0.toString());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.8126988857067822
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringReader stringReader0 = new StringReader("a\"1gIj@");
      StringReader stringReader1 = new StringReader("a\"1gIj@");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ExpandBuff(false);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 8.  Encountered: <EOF> after : \"\\\"1gIj@\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.590919980975802
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6pyusdFY;vT1Ll21");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = new Token();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(8, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(9, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<LETTER>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager1.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals(1, javaCharStream1.getEndColumn());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringReader stringReader0 = new StringReader("M/rOUG[<0I]dtM,0^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.1840562714690361
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringReader stringReader0 = new StringReader("PX!wV");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(91, token0.kind);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.8813438660703856
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<L*GER>");
      StringReader stringReader1 = new StringReader("G[3-psSVQ/\"+nD");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.getBeginColumn());
      assertEquals(9, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$+'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 3);
      javaParserTokenManager0.MoreLexicalActions();
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.1859008037483512
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringReader stringReader0 = new StringReader("73.");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.newToken((-1));
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("73.", token0.toString());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.592118782174603
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringReader stringReader0 = new StringReader("53a[/Cf>@%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.reset();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(3, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(81, token0.kind);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.9503122671830699
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("jyjx_ jQ$9Cq9be'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = new Token();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.TokenLexicalActions(token0);
      javaParserTokenManager0.jjFillToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(5, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.1833432589913178
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("9B");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = new Token();
      Token token1 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token1);
      javaParserTokenManager0.SkipLexicalActions(token1);
      Token token2 = javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(0, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals("", token2.toString());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.3351737497382965
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StringReader stringReader0 = new StringReader("9@X:E754");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(66, token0.kind);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.1796336670464318
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Token token0 = new Token();
      StringReader stringReader0 = new StringReader("E1sD.UImt%\"%");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)121, 70, (byte)121);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.newToken(95);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(74, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.5911496021009452
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StringReader stringReader0 = new StringReader("IPweC.4Uw_");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(8, javaCharStream0.getBeginColumn());
      assertEquals(10, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.6541576304166228
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("NN$c%h9r~YSY\"O[_dGR");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.newToken((-1));
      StringReader stringReader1 = new StringReader("Vzfy");
      stringReader1.reset();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals(8, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.1315636732453078
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringReader stringReader0 = new StringReader("W\"6#m-<^:O8");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.newToken(74);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 12.  Encountered: <EOF> after : \"\\\"6#m-<^:O8\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.8471336229155015
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StringReader stringReader0 = new StringReader("zJRQrOh");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = new Token();
      javaParserTokenManager0.getNextToken();
      Token.newToken(10);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      assertEquals(0, token_GTToken0.endLine);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.182036069448834
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$5w~DU@");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.markSupported();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.3220439206503973
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(2466);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)20;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 18, 91, (byte)126);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.newToken((byte)20);
      char[] charArray0 = new char[1];
      charArray0[0] = 'r';
      javaCharStream0.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StringReader stringReader0 = new StringReader("enum");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals("enum", token0.toString());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream1);
      StringReader stringReader0 = new StringReader("null");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(21);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 21. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(101);
      StringReader stringReader0 = new StringReader("boolean");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.markSupported();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(15, token0.kind);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.097242790482881
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.getBeginColumn());
      
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 7, 1, 1);
      stringReader0.ready();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1, 2);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.580093770149591
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("public");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals("public", token0.toString());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringReader stringReader0 = new StringReader("native");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.newToken((-1));
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(6, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.5262072573264045
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"\f\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 73, 37, 45);
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1, 4);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 4. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.4237211646298495
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byteArray0[0] = (byte)66;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte) (-15);
      byteArray0[3] = (byte) (-15);
      byteArray0[4] = (byte) (-15);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: \"\\ufffd\" (65533), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.4221636448864772
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byteArray0[0] = (byte)93;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte) (-15);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      byteArrayInputStream0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(66, token0.kind);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.7399586849592328
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StringReader stringReader0 = new StringReader("vCk=2.e>jF\"Z+n7z;?o");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup(2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 0, column 0.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" s");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.getBeginColumn());
      assertEquals("s", token0.toString());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.304440581199839
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StringReader stringReader0 = new StringReader("switch");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(6, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.8720086468341763
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringReader stringReader0 = new StringReader("PX!wV");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.curLexState = (-1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.8823573532458748
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringReader stringReader0 = new StringReader("vCk=2.e>jF\"Z+n7z;?o");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 1);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 20.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.824932663398528
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader("dHa\"gIj@");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 9.  Encountered: <EOF> after : \"\\\"gIj@\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=0.4878048780487805
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"/*\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("", token0.toString());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(2, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StringReader stringReader0 = new StringReader("#xQ!zx");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"#\" (35), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(2466);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream);
      javaParserTokenManager0.setDebugStream(mockPrintStream0);
      javaParserTokenManager0.MoreLexicalActions();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(4139);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 4139. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 9);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 9, 9);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StringReader stringReader0 = new StringReader("w<");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.reset();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo((-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2qP=dD?J<X[0VQ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, (-1058));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1058. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null, 19);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 19. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.SwitchTo(0);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.ReInit((JavaCharStream) null, 0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream, true);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(2466);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 2466, 2466, 2466);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertEquals((-1), javaCharStream0.bufpos);
  }
}
