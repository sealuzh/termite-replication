/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 14 14:30:08 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd((String) null);
      rawVariable0.getColumnStart();
      rawVariable0.getColumnEnd();
      rawVariable0.getDisplayName();
      rawVariable0.getLabel();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getYear();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.6676082383884046
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("ontologyTerm.term.saveChanges");
      derivedVariable0.clone();
      derivedVariable0.setIsNewRecord(true);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.stream();
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.isNewRecord();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes((String) null);
      derivedVariable0.setColumnStart((String) null);
      derivedVariable0.setFilePath("J=(Eb!5.YX}'");
      derivedVariable0.setCategory("J=(Eb!5.YX}'");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      arrayList0.add((OntologyTerm) null);
      arrayList0.replaceAll(unaryOperator0);
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.setColumnEnd("J=(Eb!5.YX}'");
      derivedVariable0.isNewRecord();
      derivedVariable0.getNotes();
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertEquals("J=(Eb!5.YX}'", derivedVariable0.getCategory());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier((-1504));
      derivedVariable0.questionNumber = "UNABLE_TO_CHECK_VARIABLE_ASSOCIATION_EXISTS";
      derivedVariable0.createVariableSummary();
      assertEquals((-1504), derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.999793567891749
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable1.columnEnd = "9\"U[8R:7M-hlP3X";
      rawVariable1.addSupportingDocument(supportingDocument0);
      rawVariable1.setIdentifier((-2021161078));
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable0.isCleaned();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      user0.setPostCode("INVALID_ONTOLOGY_TERM");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("rp");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("rp", derivedVariable0.getColumnEnd());
      
      rawVariable0.getCleaningDescription();
      rawVariable0.getAlternativeVariable();
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      String string0 = derivedVariable0.getLabel();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertNull(string0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.8771830907164597
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.setFilePath((String) null);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      String string0 = derivedVariable0.getFilePath();
      assertNull(string0);
      
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable1);
      assertEquals(1, arrayList0.size());
      
      rawVariable0.getOntologyTerms();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      boolean boolean0 = derivedVariable1.containsOntologyTerm(ontologyTerm2);
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(boolean0);
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.6211158458265547
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName((String) null);
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertTrue(arrayList0.isEmpty());
      
      String string0 = derivedVariable1.getDisplayName();
      assertNull(string0);
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.132115072201939
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-1841373038));
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable2);
      rawVariable0.isCleaned();
      rawVariable0.setColumnEnd("MoE57afvLp7`ok+2`");
      rawVariable0.getColumnStart();
      rawVariable0.getColumnEnd();
      rawVariable0.getLabel();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getYear();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User("gTsYTV$mt'/xd.3>F)", "*,m|`-6O01D{&IN@");
      DerivedVariable derivedVariable3 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getValueLabels();
      try { 
        DerivedVariable.validateFields(derivedVariable3);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.860629163319805
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getColumnEnd();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAvailability("");
      rawVariable0.setNotes("");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.codeBookNumber = "";
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "UNABLE_TO_DELETE_AVAILABILITY_STATE");
      arrayList0.removeIf(predicate0);
      rawVariable0.addSupportingDocuments(arrayList0);
      ontologyTerm0.setNameSpace("");
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getValueLabels();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.9498275789214388
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = null;
      rawVariable0.getColumnStart();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      derivedVariable0.setForm((String) null);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setColumnStart((String) null);
      derivedVariable1.createVariableSummary();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      rawVariable0.getDisplayName();
      rawVariable0.isNewRecord();
      Variable.validateFields(rawVariable0);
      ArrayList<Variable> arrayList0 = null;
      derivedVariable0.codeBookNumber = "]qq[H3|,[Xgf D<h#>";
      derivedVariable1.setSourceVariables((ArrayList<Variable>) null);
      // Undeclared exception!
      try { 
        derivedVariable1.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.6725593248534407
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart((String) null);
      String string0 = "Q)]9Tp%tU}$Mv";
      derivedVariable0.setCategory("Q)]9Tp%tU}$Mv");
      derivedVariable0.questionNumber = "pgD^<4H/;tJ";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("UNABLE_TO_CHECK_ONTOLOGY_TERM_EXISTS");
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.createVariableSummary();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.codeBookNumber = "8~EbY`0{";
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getSupportingDocuments();
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getDisplayName();
      User user1 = new User();
      try { 
        User.validateFields(user1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.868404069118753
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      User user0 = new User();
      user0.setAddressLine1("variable.name.label");
      user0.setFirstName("variable.name.label");
      user0.setPhone("variable.name.label");
      RawVariable rawVariable0 = new RawVariable();
      user0.setFirstName("$Wm");
      rawVariable0.columnEnd = null;
      rawVariable0.questionNumber = null;
      user0.setEmail((String) null);
      user0.setStatus("variable.name.label");
      rawVariable0.removeValueLabel((ValueLabel) null);
      rawVariable0.setCleaningDescription((String) null);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertNotNull(macawChangeEvent0);
      
      rawVariable0.setForm((String) null);
      rawVariable0.setColumnStart((String) null);
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList0.size());
      
      rawVariable0.clone();
      rawVariable0.getCategory();
      rawVariable0.getForm();
      rawVariable0.clone();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCleaned());
      
      System.setCurrentTimeMillis((-1L));
      rawVariable0.getValueLabels();
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.9480003511529214
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("rJw");
      derivedVariable0.setAlias((String) null);
      derivedVariable0.setForm((String) null);
      derivedVariable0.setCleaningStatus((String) null);
      derivedVariable0.setIdentifier(0);
      derivedVariable0.getColumnStart();
      derivedVariable0.getCleaningStatus();
      derivedVariable0.getCleaningStatus();
      User user0 = new User((String) null, "+=");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-1943));
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(boolean0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.7068564921190186
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setIdentifier(165);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      assertEquals("165", derivedVariable0.getDisplayItemIdentifier());
      
      Variable.validateFields(derivedVariable1);
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.4466856169199285
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setForm("y1&GI&1v-'[");
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.setCleaningDescription("I(%yv002J");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-2028300353));
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getValueLabels();
      User user0 = new User("0I$9nTZ", "yR\"/KQZao");
      try { 
        User.checkValidUserIDField("n=mnz{t#d[*gn}b");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The field \"User ID\" value \"n=mnz{t#d[*gn}b\" may present a security risk.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.394714983677679
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(2377);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.6683905069672833
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      rawVariable0.setYear("8U!H>T]ulsgIgM#JOE");
      rawVariable0.setName("4s._y\"hS");
      rawVariable0.clone();
      rawVariable0.setCleaningDescription("9@nvUriweL-MLLder");
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.getSourceVariables();
      rawVariable0.getCleaningDescription();
      rawVariable0.getSupportingDocuments();
      assertEquals("4s._y\"hS", rawVariable0.getName());
      
      derivedVariable0.addSourceVariables(arrayList0);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.624728496322497
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.questionNumber = null;
      derivedVariable0.cloneAttributes(derivedVariable0);
      String string0 = derivedVariable0.getQuestionNumber();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertNull(string0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlias("4");
      derivedVariable0.setName("4");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("4", derivedVariable1.getAlias());
      assertEquals("4", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.6846842034128904
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("");
      assertEquals("Unknown", derivedVariable0.getCategory());
      
      derivedVariable0.setCategory("");
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getCategory();
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setAlias((String) null);
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals(0, arrayList0.size());
      
      String string0 = rawVariable0.getAlias();
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isNewRecord());
      assertNull(string0);
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("~;/KSvgg]oqZ^$-Z@", "~;/KSvgg]oqZ^$-Z@");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAvailability("~;/KSvgg]oqZ^$-Z@");
      derivedVariable1.setName("~;/KSvgg]oqZ^$-Z@");
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("~;/KSvgg]oqZ^$-Z@", derivedVariable1.getDisplayName());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.4448204824645767
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.8673701401424636
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable((Variable) null);
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.clone();
      derivedVariable0.setYear((String) null);
      derivedVariable0.getYear();
      Variable.validateFields(derivedVariable0);
      User user0 = new User("macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.setCleaningDescription((String) null);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCoded(true);
      derivedVariable0.setName("4");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("4", derivedVariable0.getDisplayName());
      assertEquals("4", derivedVariable0.getName());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      User user0 = new User("rp", "rp");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("rp");
      derivedVariable0.getName();
      assertEquals("rp", derivedVariable0.getName());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("general.error.blankField");
      derivedVariable0.setCleaned(true);
      derivedVariable0.setAvailability("E");
      derivedVariable0.isNewRecord();
      derivedVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      derivedVariable0.isCleaned();
      derivedVariable0.isNewRecord();
      derivedVariable0.createVariableSummary();
      derivedVariable0.getName();
      derivedVariable0.getAlternativeVariable();
      assertEquals("general.error.blankField", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("rp");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("z");
      ontologyTerm0.setIdentifier((-2082408383));
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertEquals("rp", derivedVariable0.getLabel());
      
      rawVariable0.getForm();
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-2004318069));
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setName("4");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("4", derivedVariable0.getName());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("rp");
      User user0 = new User("rp", "rp");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setName("rp");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("rp", derivedVariable0.getLabel());
      assertEquals("rp", derivedVariable0.getName());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("rp");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setName("rp");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("rp", derivedVariable0.getLabel());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setName("variable.alias.label");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("variable.alias.label", derivedVariable0.getDisplayName());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("4j");
      derivedVariable0.setLabel("4j");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("4j", derivedVariable0.getColumnEnd());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.6002139492158043
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "6`VB<=";
      assertEquals("6`VB<=", derivedVariable0.getNotes());
      
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.columnStart = "6`VB<=";
      rawVariable0.getDisplayName();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      rawVariable0.getColumnStart();
      User user0 = new User();
      user0.setAddressLine1("UNABLE_TO_FILTER_ONTOLOGY_TERMS");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getNotes();
      String string0 = derivedVariable0.getCleaningStatus();
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.9971515848932915
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      Variable variable0 = rawVariable0.getAlternativeVariable();
      assertFalse(variable0.isCleaned());
      assertFalse(variable0.isCoded());
      assertFalse(variable0.isNewRecord());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("4");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setQuestionNumber("4");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("4", derivedVariable1.getQuestionNumber());
      assertEquals("", derivedVariable1.getForm());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.282360045759959
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertTrue(derivedVariable0.isCleaned());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("UNABLE_TO_VALIDATE_USER");
      rawVariable0.setQuestionNumber("/J= .%&3}<iYd");
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      rawVariable0.getQuestionNumber();
      assertEquals("UNABLE_TO_VALIDATE_USER", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.6248835692023844
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setAlias("variable.cleaningDescription.label");
      rawVariable0.getAlias();
      User user1 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      assertEquals(0, arrayList0.size());
      
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertTrue(boolean0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument1);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertTrue(boolean0);
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.059615150468091
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "l/IYe!";
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getNotes();
      assertEquals("l/IYe!", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.7187941153377344
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus("4");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setName("4");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("4", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.630117871843128
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable1.addSupportingDocument(supportingDocument0);
      rawVariable1.setIdentifier((-2021161078));
      rawVariable0.setAlternativeVariable(rawVariable1);
      assertEquals((-2021161078), rawVariable1.getIdentifier());
      
      rawVariable0.isCleaned();
      User user0 = new User("9\"U[8R:7M-hlP3X", "rp");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.695248569730698
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("da<@");
      derivedVariable0.setForm((String) null);
      derivedVariable0.setLabel("variable.category.label");
      derivedVariable0.setColumnStart((String) null);
      derivedVariable0.getYear();
      derivedVariable0.getName();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      User user0 = new User();
      user0.setStatus("?cicg\";::%");
      rawVariable0.getForm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.questionNumber = "}laz'<~2hkm:";
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      rawVariable0.getOntologyTerms();
      rawVariable0.clone();
      derivedVariable0.containsSourceVariable(rawVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      assertEquals("da<@", derivedVariable0.getYear());
      
      rawVariable0.getDisplayItemIdentifier();
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "MISSING_DISPLAY_LIST_VIEWER";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      User user0 = new User((String) null, (String) null);
      derivedVariable0.setColumnStart((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("MISSING_DISPLAY_LIST_VIEWER", derivedVariable0.getCodeBookNumber());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("variable.alternativeVariable.label");
      derivedVariable0.getColumnStart();
      derivedVariable0.getDisplayName();
      assertEquals("variable.alternativeVariable.label", derivedVariable0.getName());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm((OntologyTerm) null);
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      derivedVariable0.getNotes();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.281440279691212
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.setIdentifier((-250));
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getNotes();
      assertEquals("-250", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertNull(macawChangeEvent0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("SELF_REFERENCING_ALTERNATIVE_VARIABLE");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("SELF_REFERENCING_ALTERNATIVE_VARIABLE", rawVariable0.getNotes());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "#wcO_$31&|D7*N=o";
      derivedVariable0.setNotes("#wcO_$31&|D7*N=o");
      derivedVariable0.createVariableSummary();
      assertEquals("#wcO_$31&|D7*N=o", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.535370920690678
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "UNABLE_TO_GET_CHANGES_FOR_LIST_CHOICES";
      String string0 = rawVariable0.getCleaningDescription();
      assertEquals("", string0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.577639410795685
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes(derivedVariable0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.490114296025901
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("4");
      User user0 = new User("4", "4");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.columnEnd = "4";
      derivedVariable1.codeBookNumber = "4";
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("4", derivedVariable1.getCodeBookNumber());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setForm("e");
      derivedVariable0.setName("e");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("e", derivedVariable1.getForm());
      assertEquals("e", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("UNABLE_TO_UPDATE_CLEANING_STATE");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable0);
      assertEquals("UNABLE_TO_UPDATE_CLEANING_STATE", derivedVariable0.getYear());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"blank\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.5854094185656926
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.cloneAttributes(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("@G3ka:__!ufSY$smr)");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getLabel();
      assertEquals("@G3ka:__!ufSY$smr)", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.9971515848932915
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      derivedVariable0.form = "a8";
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getName());
      assertEquals("", variableSummary0.getLabel());
      assertEquals(0, variableSummary0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("rp");
      derivedVariable0.createVariableSummary();
      assertEquals("rp", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.setYear("ontologyTerm.ontologyName.saveChanges");
      derivedVariable0.createVariableSummary();
      assertEquals("ontologyTerm.ontologyName.saveChanges", derivedVariable0.getYear());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("rp");
      User user0 = new User("rp", "rp");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("rp", derivedVariable0.getLabel());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("rp");
      User user0 = new User("rp", "rp");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("rp", derivedVariable0.getLabel());
      assertFalse(arrayList0.isEmpty());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("]H:VM4IsH");
      derivedVariable0.createVariableSummary();
      derivedVariable0.getColumnEnd();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      assertEquals("]H:VM4IsH", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("general.error.invalidEmail");
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("general.error.invalidEmail", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("rp");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("rp", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.getFilePath();
      derivedVariable0.getValueLabels();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.067461933429295
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user0, (Variable) null, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.setCoded(true);
      rawVariable0.getColumnEnd();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "";
      derivedVariable0.addSourceVariable(rawVariable0);
      assertFalse(derivedVariable0.isCoded());
      
      rawVariable0.getName();
      boolean boolean0 = rawVariable0.isCoded();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = derivedVariable0.getAvailability();
      assertEquals("Unknown", string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.5788320166394536
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSupportingDocument((SupportingDocument) null);
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes(derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.02740240263572
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("UNABLE_TO_DISASSOCIATE_SOURCE_VARIABLE");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getOntologyTerms();
      assertEquals("UNABLE_TO_DISASSOCIATE_SOURCE_VARIABLE", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("i0p'+>d3rKdu");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("i0p'+>d3rKdu", derivedVariable0.getYear());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.067461933429295
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.5816084910941632
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.cloneAttributes(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.6858928864840323
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      User user0 = new User();
      user0.setLastName((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("JL:aleTuH}Z7nSxT,");
      derivedVariable0.setName("syQ\"MZGJRZNGH1tiw");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getCodeBookNumber();
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      assertEquals("JL:aleTuH}Z7nSxT,", derivedVariable0.getCodeBookNumber());
      
      rawVariable0.clone();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.580255841983545
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable0);
      boolean boolean0 = derivedVariable0.isCleaned();
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(boolean0);
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      rawVariable0.getSupportingDocuments();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=3.383522442827672
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals(1, arrayList0.size());
      assertTrue(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.554218296452355
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, arrayList0.size());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "jRBW";
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("jRBW", rawVariable0.getColumnStart());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("$Z4{N");
      derivedVariable0.createVariableSummary();
      assertEquals("$Z4{N", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("4");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setColumnStart("4");
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("4", derivedVariable0.getLabel());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCategory("e");
      derivedVariable1.setName("e");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("e", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "general.fieldValue.blank";
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("general.fieldValue.blank", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "z";
      String string0 = derivedVariable0.getCodeBookNumber();
      assertEquals("", string0);
      
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", variableSummary0.getLabel());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", variableSummary0.getYear());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertEquals("", variableSummary0.getName());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("4j");
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("4j", derivedVariable0.getLabel());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.6669919055686817
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.isCoded();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isCoded());
      
      rawVariable0.getLabel();
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("P8h6#h2QIY!t%");
      derivedVariable0.codeBookNumber = "P8h6#h2QIY!t%";
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      User user0 = new User("general.error.blankField", "P8h6#h2QIY!t%");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setCoded(false);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(0);
      derivedVariable0.setCoded(true);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.clone();
      derivedVariable0.setIdentifier(1646);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getName();
      derivedVariable0.isNewRecord();
      derivedVariable0.setQuestionNumber("");
      derivedVariable0.getFilePath();
      derivedVariable0.setCodeBookNumber("Unknown");
      int int0 = derivedVariable0.getIdentifier();
      assertTrue(derivedVariable0.isCoded());
      assertEquals(1646, int0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(1229);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.createVariableSummary();
      assertEquals("1229", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("2a");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User(";M?,<l(-ZwMNCWEpZI", ";M?,<l(-ZwMNCWEpZI");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertTrue(arrayList0.isEmpty());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.getValueLabels();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList0);
      ArrayList<String> arrayList1 = Variable.validateFields(rawVariable0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(1, arrayList1.size());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("general.fieldValue.blank");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setColumnEnd(")Tng%h`$qYs?;QeP");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable0.setCleaningStatus("^%P\"ACl#:=k|");
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.setCleaningDescription("^%P\"ACl#:=k|");
      derivedVariable0.getIdentifier();
      derivedVariable0.setForm(")Tng%h`$qYs?;QeP");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable1.addSupportingDocuments(arrayList1);
      derivedVariable0.setCleaningDescription("");
      User user0 = new User();
      try { 
        User.checkValidEmail("ontologyTerm.ontologyName.label");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"ontologyTerm.ontologyName.label\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("0+k3m[@X");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("0+k3m[@X", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.addSupportingDocuments(arrayList0);
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("k~7");
      Variable.validateFields(derivedVariable0);
      assertEquals("k~7", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("^4.");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals(1, arrayList0.size());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=3.580255841983545
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.cloneAttributes(derivedVariable0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.getAlternativeVariable();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.969755134636486
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User((String) null, (String) null);
      user0.setUserID((String) null);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setCoded(false);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(0);
      derivedVariable0.setCoded(true);
      ontologyTerm1.clone();
      derivedVariable0.setIdentifier((-1543));
      ontologyTerm1.setNewRecord(false);
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.getName();
      derivedVariable0.isNewRecord();
      derivedVariable0.setQuestionNumber("NVpJ$@D0");
      derivedVariable0.getFilePath();
      derivedVariable0.setCodeBookNumber("Yg\"0n8*EE3C");
      int int0 = derivedVariable0.getIdentifier();
      assertTrue(derivedVariable0.isCoded());
      assertEquals((-1543), int0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=3.5776570084615655
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setColumnStart("UNABLE_TO_CREATE_SUPPORTING_DOCUMENT");
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.clone();
      assertEquals("UNABLE_TO_CREATE_SUPPORTING_DOCUMENT", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("rp");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("rp", derivedVariable0.getCleaningDescription());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("A'6:#H");
      derivedVariable0.cloneAttributes(derivedVariable0);
      assertEquals("A'6:#H", derivedVariable0.getYear());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = null;
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("rp");
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("rp", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("macaw.system.ChangeEventType");
      rawVariable0.clone();
      assertEquals("macaw.system.ChangeEventType", rawVariable0.getNotes());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("user.firstName.label");
      derivedVariable0.cloneAttributes(derivedVariable0);
      assertEquals("user.firstName.label", derivedVariable0.getName());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("i>q1wBm");
      derivedVariable0.getFilePath();
      assertEquals("i>q1wBm", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("UNABLE_TO_GET_ALIAS_FILE_PATH_NAME");
      derivedVariable0.clone();
      assertEquals("UNABLE_TO_GET_ALIAS_FILE_PATH_NAME", derivedVariable0.getForm());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=3.5341821845922365
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "U/v_; 5%tC[Jsp%[NF";
      derivedVariable0.cloneAttributes(derivedVariable0);
      assertEquals("U/v_; 5%tC[Jsp%[NF", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd(")C(E:");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("lN t0$BM7");
      rawVariable0.setAlternativeVariable(rawVariable0);
      assertEquals("lN t0$BM7", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=2.620795178839221
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setForm("%4c6rqk#yq-Y^=");
      derivedVariable0.getForm();
      assertEquals("%4c6rqk#yq-Y^=", derivedVariable0.getForm());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=2.516511102740111
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = null;
      User user0 = new User();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 142
  /*Coverage entropy=3.4892387670604843
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList1 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, arrayList1.size());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes(".(~F,-X53&JT0Ai|");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isNewRecord());
      
      rawVariable0.setIsNewRecord(true);
      rawVariable0.getCodeBookNumber();
      assertTrue(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus("variable.year.label");
      derivedVariable0.getYear();
      assertEquals("variable.year.label", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("variable.form.label");
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("variable.form.label", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "VARIABLE";
      String string0 = derivedVariable0.getColumnStart();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getQuestionNumber();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getAlias();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }
}
