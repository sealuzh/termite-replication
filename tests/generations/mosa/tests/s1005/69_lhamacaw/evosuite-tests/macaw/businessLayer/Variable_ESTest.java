/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 14 00:11:02 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.2085716838811678
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      rawVariable0.setIdentifier((-618));
      user0.setEmail((String) null);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getQuestionNumber();
      assertEquals("-618", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocument(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus((String) null);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      String string0 = derivedVariable1.getCleaningStatus();
      assertNull(string0);
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("-");
      rawVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getOntologyTerms();
      assertEquals("-", rawVariable0.getLabel());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.5822632023047225
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear((String) null);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      String string0 = derivedVariable0.getYear();
      assertNull(string0);
      
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable1.setOntologyTerms(arrayList0);
      rawVariable1.setCategory((String) null);
      derivedVariable0.addSourceVariable(rawVariable1);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.6331831768936547
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.setCodeBookNumber((String) null);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.setLabel("");
      User user0 = new User("", "");
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals(0, arrayList0.size());
      
      String string0 = derivedVariable0.getCodeBookNumber();
      assertNull(string0);
      
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.4448204824645767
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("variable.columnStart.label");
      rawVariable0.setLabel("-");
      User user0 = new User();
      rawVariable0.getColumnEnd();
      assertEquals("variable.columnStart.label", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      derivedVariable0.setValueLabels(arrayList0);
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.023500251710212
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.setSupportingDocuments(arrayList0);
      supportingDocument0.setDescription("UNABLE_TO_CHECK_VALUE_LABEL_EXISTS");
      derivedVariable0.addSupportingDocuments(arrayList0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      User user0 = new User("UNABLE_TO_CHECK_VALUE_LABEL_EXISTS", "UNABLE_TO_CHECK_VALUE_LABEL_EXISTS");
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addSupportingDocument(supportingDocument0);
      derivedVariable1.setValueLabels((ArrayList<ValueLabel>) null);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, derivedVariable1);
      derivedVariable1.getAlias();
      derivedVariable0.getIdentifier();
      rawVariable1.getYear();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList1);
      RawVariable rawVariable2 = new RawVariable();
      arrayList1.add((Variable) rawVariable2);
      rawVariable0.getColumnEnd();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable1.getValueLabels();
      System.setCurrentTimeMillis(0);
      derivedVariable0.removeSourceVariables(arrayList1);
      rawVariable2.getOntologyTerms();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      assertNotNull(macawChangeEvent0);
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.301608716407634
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, (Variable) null);
      assertFalse(derivedVariable0.isCleaned());
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"blank\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.9971515848932915
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      
      Variable variable0 = derivedVariable0.getAlternativeVariable();
      assertFalse(variable0.isNewRecord());
      assertFalse(variable0.isCoded());
      assertFalse(variable0.isCleaned());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.9971515848932915
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setLabel("d}j0*c'zOiiJ");
      ontologyTerm0.setOntologyName("Yn\"(Tv/z2");
      ontologyTerm0.setOntologyName("supportingDocument.filePath.saveChanges");
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerm(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.898598774473812
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("variable.cleaningStatus.label");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.setAvailability("variable.cleaningStatus.label");
      derivedVariable0.getName();
      derivedVariable0.isCoded();
      derivedVariable0.containsSourceVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable1);
      derivedVariable1.getLabel();
      derivedVariable0.getCodeBookNumber();
      assertEquals("variable.cleaningStatus.label", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.05569358184064
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "\"fM@";
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getColumnStart();
      assertEquals("\"fM@", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.3643764676852554
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "t!M04VuLmt^&?";
      assertEquals("Unknown", derivedVariable0.getAvailability());
      
      derivedVariable0.setAvailability("");
      derivedVariable0.setCleaned(true);
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.211667659113366
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("Z");
      User user0 = new User();
      rawVariable0.setIdentifier(127);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getName();
      assertEquals(127, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.625390528762087
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("|&bEd7-,");
      rawVariable0.clone();
      rawVariable0.getYear();
      assertEquals("|&bEd7-,", rawVariable0.getYear());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.6305437208796447
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.7827956178173947
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(true);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.clear();
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.getColumnStart();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      User user0 = new User("FsvNK'aF=E; D4", "");
      User.checkValidUserIDField("general.error.blankField");
      derivedVariable0.setCleaned(true);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.isCleaned();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.getColumnEnd();
      derivedVariable0.isCoded();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setColumnStart("FsvNK'aF=E; D4");
      derivedVariable0.columnEnd = "h0a c}ICJ_";
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.clone();
      derivedVariable1.removeSourceVariables(arrayList1);
      derivedVariable1.getFilePath();
      assertEquals("h0a c}ICJ_", derivedVariable1.getColumnEnd());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.7827956178173947
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(true);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.getColumnStart();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      User user0 = new User("FsvNK'aF=E; D4", "");
      User.checkValidUserIDField("");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.isCleaned();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.getColumnEnd();
      derivedVariable0.isCoded();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setColumnStart("FsvNK'aF=E; D4");
      derivedVariable0.columnEnd = "h0a c}ICJ_";
      derivedVariable0.cloneAttributes(derivedVariable1);
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.clone();
      derivedVariable1.addSupportingDocuments(arrayList2);
      derivedVariable1.removeSourceVariables(arrayList1);
      derivedVariable1.getFilePath();
      derivedVariable0.getSupportingDocuments();
      assertEquals("h0a c}ICJ_", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.5620873382669895
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-2034458190));
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("x_}");
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      System.setCurrentTimeMillis(1L);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.5813690145252886
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("variable.saveChanges.valueChanged");
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable0.createVariableSummary();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable1);
      assertEquals("variable.saveChanges.valueChanged", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.7330504297110134
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setColumnEnd("-");
      rawVariable0.setLabel("-");
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable0.createVariableSummary();
      assertEquals("-", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.6851309643957646
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("s");
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User("s", "s");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      rawVariable0.getDisplayName();
      assertEquals("s", rawVariable0.getName());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.78544177211529
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-1717986916));
      User user0 = new User("oD;N2t!_3<@", "oD;N2t!_3<@");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.createVariableSummary();
      RawVariable rawVariable1 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.6845198108434345
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier((-1696));
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      int int0 = derivedVariable0.getIdentifier();
      assertEquals((-1696), int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.6851309643957646
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("s");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.columnStart = null;
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("s", rawVariable0.getDisplayName());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("general.fieldValue.blank");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("general.fieldValue.blank", derivedVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.620795178839221
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("YX&awum.xz>_,$");
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getLabel();
      assertEquals("YX&awum.xz>_,$", rawVariable0.getLabel());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.684989220951399
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("a");
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      rawVariable0.getName();
      assertEquals("a", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getOntologyTerms();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(2230);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("macaw.businessLayer.VariableSummary");
      derivedVariable0.clone();
      derivedVariable0.getAlias();
      assertEquals("macaw.businessLayer.VariableSummary", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setFilePath("{4");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getFilePath();
      assertEquals("{4", rawVariable0.getFilePath());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("macaw.businessLayer.Variable");
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      derivedVariable1.getFilePath();
      assertEquals("macaw.businessLayer.Variable", derivedVariable0.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.5806560020475704
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "UNABLE_TO_GET_ORIGINAL_CATEGORY";
      rawVariable0.getFilePath();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("", rawVariable1.getForm());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("UNABLE_TO_GET_ORIGINAL_CATEGORY", rawVariable1.getNotes());
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      rawVariable1.setQuestionNumber("NON_EXISTENT_VARIABLE_FOR_SUMMARY");
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable1.getCleaningDescription();
      assertEquals("NON_EXISTENT_VARIABLE_FOR_SUMMARY", rawVariable1.getQuestionNumber());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.620795178839221
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("variable.questionNumber.label");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getForm();
      assertEquals("variable.questionNumber.label", derivedVariable0.getForm());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.7201234606351754
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      derivedVariable1.questionNumber = "UNABLE_TO_GET_ALIAS_FILE_PATH";
      Variable.validateFields(derivedVariable1);
      derivedVariable1.getQuestionNumber();
      assertEquals("UNABLE_TO_GET_ALIAS_FILE_PATH", derivedVariable1.getQuestionNumber());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm((String) null);
      derivedVariable0.removeSourceVariables(arrayList0);
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      String string0 = derivedVariable0.getColumnEnd();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertNotNull(string0);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.201793123629589
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.805754096314494
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("i'#!X");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAvailability("i'#!X");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setColumnStart((String) null);
      User user0 = new User("i'#!X", (String) null);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("i'#!X", rawVariable0.getLabel());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("sdg,");
      rawVariable0.createVariableSummary();
      rawVariable0.getLabel();
      assertEquals("sdg,", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isNewRecord());
      assertTrue(boolean0);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.3384407440780666
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setLabel("0X5");
      assertEquals("0X5", rawVariable0.getLabel());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable1, derivedVariable0);
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.383522442827672
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertTrue(derivedVariable0.isCleaned());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.8055124628724255
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("d");
      rawVariable0.setAvailability("d");
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("d", rawVariable0.getAvailability());
      
      rawVariable1.createVariableSummary();
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = ">1tDg_&at?";
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getName());
      assertEquals("", rawVariable1.getForm());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getNotes());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals(">1tDg_&at?", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getAlias());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getLabel());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("", rawVariable1.getColumnStart());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel(";");
      rawVariable1.setNotes("!#");
      User user0 = new User(";", ";");
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("!#", rawVariable1.getNotes());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.4435896416877303
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertEquals(1, arrayList0.size());
      
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getValueLabels();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.6256902943605223
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      derivedVariable1.setNotes("xrUQ#(YSLXRAP");
      derivedVariable1.getAlias();
      assertEquals("xrUQ#(YSLXRAP", derivedVariable1.getNotes());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlias("s");
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      rawVariable1.getCodeBookNumber();
      assertEquals("s", rawVariable1.getAlias());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("I3qanI'K$3/]O^\n");
      User user0 = new User();
      rawVariable0.createVariableSummary();
      assertEquals("I3qanI'K$3/]O^\n", rawVariable0.getName());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(false);
      rawVariable0.setIdentifier(4930);
      rawVariable0.isCleaned();
      rawVariable0.createVariableSummary();
      assertEquals("4930", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel(";");
      User user0 = new User(";", ";");
      rawVariable0.setCoded(true);
      user0.setCity("variable.cleaningStatus.label");
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals(";", rawVariable1.getLabel());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("UNABLE_TO_CHECK_VARIABLE_DUPLICATES");
      rawVariable0.getFilePath();
      rawVariable0.clone();
      assertEquals("UNABLE_TO_CHECK_VARIABLE_DUPLICATES", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("Z");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("Z");
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("Z", rawVariable0.getName());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("Z");
      rawVariable0.setLabel("Z");
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("Z", rawVariable0.getLabel());
      assertEquals("Z", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("qkFIV]7c\u0001jiQU8n!1u");
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getFilePath();
      assertEquals("qkFIV]7c\u0001jiQU8n!1u", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setForm("variale.columnStart.label");
      rawVariable0.getFilePath();
      assertEquals("variale.columnStart.label", rawVariable0.getForm());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setLabel("s");
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("s", rawVariable0.getLabel());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("W");
      User user0 = new User("W", "W");
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("W", rawVariable1.getLabel());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, (Variable) null);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("q");
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("q", rawVariable0.getDisplayName());
      assertFalse(arrayList0.isEmpty());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("p=k FD,n$");
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertEquals("p=k FD,n$", derivedVariable0.getForm());
      assertFalse(arrayList0.isEmpty());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear((String) null);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCodeBookNumber("W");
      rawVariable1.setLabel("W");
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("W", rawVariable1.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("s");
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("s", rawVariable0.getDisplayName());
      assertEquals("s", rawVariable0.getName());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("NS~_IcSp)*,},Jkr");
      derivedVariable0.getForm();
      derivedVariable0.getNotes();
      assertEquals("NS~_IcSp)*,},Jkr", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.5806560020475704
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      derivedVariable1.form = "UNABLE_TO_DELETE_AVAILABILITY_STATE";
      derivedVariable1.getAlias();
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("W", "W");
      rawVariable0.codeBookNumber = "W";
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.setLabel("W");
      assertEquals("W", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.5384983413378794
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setForm("zM\"r>7<q#CyTkl-N61P");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("zM\"r>7<q#CyTkl-N61P", derivedVariable1.getForm());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setLabel("-");
      rawVariable0.setCleaningStatus("-");
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("-", rawVariable0.getCleaningStatus());
      assertEquals("-", rawVariable0.getLabel());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, (Variable) null, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.4904599236161977
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "UNABLE_TO_GET_ORIGINAL_ONTOLOGY_TERM";
      String string0 = derivedVariable0.getForm();
      assertEquals("", string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = null;
      String string0 = rawVariable0.getLabel();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertNotNull(string0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.columnEnd = "NS~_ITSpzlk},Jkr";
      rawVariable0.setLabel("NS~_ITSpzlk},Jkr");
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("NS~_ITSpzlk},Jkr", rawVariable1.getColumnEnd());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("W");
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("W", rawVariable1.getLabel());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "general.fieldValue.unknown";
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("general.fieldValue.unknown", rawVariable0.getQuestionNumber());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "^Es#!BF ,<-<$4^#h~";
      String string0 = derivedVariable0.getAlias();
      assertEquals("", string0);
      
      derivedVariable0.getAlternativeVariable();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isCleaned());
      
      derivedVariable0.setCleaned(true);
      Variable.validateFields(derivedVariable0);
      assertTrue(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = null;
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.6951020624694584
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability("B");
      derivedVariable0.getName();
      derivedVariable0.isCoded();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.isCoded();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.setIdentifier((-2715));
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.isNewRecord();
      assertEquals("B", derivedVariable0.getAvailability());
      
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(derivedVariable2);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable2.containsSourceVariable(rawVariable1);
      assertEquals(0, derivedVariable2.getIdentifier());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.689067872995674
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "variable.questionNumber.label";
      rawVariable0.setAlias("user.county.saveChanges");
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setCoded(true);
      rawVariable0.isNewRecord();
      rawVariable0.setQuestionNumber("user.county.saveChanges");
      rawVariable0.setCleaningDescription((String) null);
      assertEquals("user.county.saveChanges", rawVariable0.getAlias());
      
      User user0 = new User("variable.questionNumber.label", "user.county.saveChanges");
      user0.setStatus((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.554218296452355
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertTrue(arrayList0.isEmpty());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "Vb?:_ERa;2NJWL0r=%";
      String string0 = rawVariable0.getQuestionNumber();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", string0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "general.fieldValue.blank";
      String string0 = rawVariable0.getForm();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", string0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("variable.year.label");
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      derivedVariable1.getAlias();
      assertEquals("variable.year.label", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.9003854066784616
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "supportingDocument.filePath.saveChanges";
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("supportingDocument.filePath.saveChanges", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.4381098652423896
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "g5~'o|`tfC4aC1hg";
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("g5~'o|`tfC4aC1hg", derivedVariable0.getColumnStart());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("-");
      rawVariable1.setCategory("-");
      User user0 = new User("-", "-");
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("-", rawVariable1.getLabel());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription(",(#v%BTsG\"GJ9B8");
      rawVariable0.getCleaningDescription();
      assertEquals(",(#v%BTsG\"GJ9B8", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.6256902943605223
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      rawVariable0.setValueLabels(arrayList0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.624728496322497
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = derivedVariable0.getDisplayItemIdentifier();
      assertEquals("0", string0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("UNABLE_TO_UPDATE_AVAILABILITY_STATE");
      rawVariable0.clone();
      assertEquals("UNABLE_TO_UPDATE_AVAILABILITY_STATE", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.getLabel();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.getColumnEnd();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("&");
      rawVariable0.createVariableSummary();
      assertEquals("&", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.5806560020475704
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "Unknown";
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("", rawVariable1.getName());
      assertEquals("", rawVariable1.getForm());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getYear());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("", rawVariable1.getFilePath());
      assertEquals("", rawVariable1.getAlias());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("Unknown", rawVariable1.getColumnStart());
      
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", variableSummary0.getDisplayName());
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getLabel());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setLabel("D");
      rawVariable0.createVariableSummary();
      assertEquals("D", rawVariable0.getLabel());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSupportingDocument((SupportingDocument) null);
      derivedVariable0.getCleaningDescription();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = rawVariable0.getCleaningStatus();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      String string0 = "variable.questionNumber.label";
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals(0, derivedVariable0.getIdentifier());
      
      derivedVariable0.setIdentifier((-1728486262));
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getAlternativeVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isNewRecord());
      
      rawVariable0.setIsNewRecord(true);
      rawVariable0.getAlias();
      assertTrue(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("");
      rawVariable0.getQuestionNumber();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isNewRecord());
      
      rawVariable0.setIsNewRecord(true);
      rawVariable0.isCleaned();
      rawVariable0.createVariableSummary();
      assertTrue(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=3.5806560020475704
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.setSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getDisplayName();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSupportingDocuments();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSupportingDocument((SupportingDocument) null);
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCoded(false);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isNewRecord());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("NS~_ITSpzlk},Jkr");
      derivedVariable0.clone();
      assertEquals("NS~_ITSpzlk},Jkr", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("h,N'6gcQ:P21sJc");
      derivedVariable0.clone();
      assertEquals("h,N'6gcQ:P21sJc", derivedVariable0.getName());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("`");
      derivedVariable0.clone();
      assertEquals("`", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("UNABLE_TO_GET_CATEGORY");
      derivedVariable0.clone();
      assertEquals("UNABLE_TO_GET_CATEGORY", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("/4g3YdSUFe<zC");
      derivedVariable0.getAlias();
      assertEquals("/4g3YdSUFe<zC", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias(")Q@Sk4>XsF>MQ'2L");
      rawVariable0.getQuestionNumber();
      assertEquals(")Q@Sk4>XsF>MQ'2L", rawVariable0.getAlias());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("variable.alternativeVariable.label");
      derivedVariable0.clone();
      assertEquals("variable.alternativeVariable.label", derivedVariable0.getForm());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("_wj)l-J;N!OLx{i");
      derivedVariable0.getCleaningDescription();
      assertEquals("_wj)l-J;N!OLx{i", derivedVariable0.getYear());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=2.620795178839221
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("pPGe]v9mIc xmAL");
      rawVariable0.getColumnStart();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("pPGe]v9mIc xmAL", rawVariable0.getYear());
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "UNABLE_TO_GET_ALIAS_FILE_PATH_NAME";
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("UNABLE_TO_GET_ALIAS_FILE_PATH_NAME", derivedVariable0.getColumnStart());
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("q,bju21,");
      Variable.validateFields(derivedVariable0);
      assertEquals("q,bju21,", derivedVariable0.getNotes());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "8%|Ra0y`_oR:hBpn";
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(1, arrayList0.size());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("s");
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals("s", rawVariable0.getDisplayName());
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=3.5806560020475704
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=2.05569358184064
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      
      boolean boolean0 = rawVariable0.isCoded();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(boolean0);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals(1, arrayList0.size());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("KB~]qLTUHrd;Tr");
      derivedVariable0.getColumnEnd();
      assertEquals("KB~]qLTUHrd;Tr", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("blank");
      rawVariable0.getOntologyTerms();
      assertEquals("blank", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd((String) null);
      String string0 = rawVariable0.getCategory();
      assertNotNull(string0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", string0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("'");
      rawVariable0.getNotes();
      assertEquals("'", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = rawVariable0.getAvailability();
      assertEquals("Unknown", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertNotNull(string0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }
}
