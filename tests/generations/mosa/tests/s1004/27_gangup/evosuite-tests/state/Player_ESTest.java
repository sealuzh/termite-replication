/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 13 23:11:44 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-1);
      byte byte0 = (byte)1;
      byteArray0[1] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-1), (byte)1);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player((-822), (String) null, 11068);
      Player player1 = new Player((-822));
      player0.setDead((long) 11068, false);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player1.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(0.0F, player0.getZ(), 0.01F);
      
      player0.setZ(0.2F);
      player0.gangStrength();
      player0.pack();
      player0.head = null;
      float float0 = player0.getZ();
      assertEquals(0.2F, float0, 0.01F);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party((short)4919);
      player0.head = party0;
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.9421822974250196
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player((-3721), "@hP+~gZn", "J|sZLU{Pd9", 2096);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      player0.gangStrength();
      player0.setDead(29L, true);
      player0.getTimeOfDeath();
      player0.setMoney(2096);
      player0.setDead((long) (-3721));
      player0.pack();
      player0.type();
      System.setCurrentTimeMillis((-3721));
      player0.getTimeOfDeath();
      player0.type();
      System.setCurrentTimeMillis(2096);
      float float0 = player0.getZ();
      assertEquals(2096.0F, player0.getMoney(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.881766240540306
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player(167, (String) null, "(;J8p4KV#bE?C2T^lX", 167);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertFalse(boolean0);
      
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      float float1 = player1.getZ();
      assertEquals(0.0F, float1, 0.01F);
      
      Player player2 = new Player(3554);
      player2.pack();
      int int0 = player2.getStrength();
      assertEquals("Player3554", player2.getName());
      assertEquals(1, int0);
      
      Player player3 = new Player((-778), (String) null, 1477);
      player3.toString();
      assertEquals(1477, player3.getPictureId());
      assertTrue(player3.isConnected());
      assertEquals("0.0.0.0", player3.getIP());
      assertEquals(0L, player3.getTimeOfDeath());
      assertEquals(0.0F, player3.getY(), 0.01F);
      assertFalse(player3.isDead());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.26381679241522
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player();
      player0.setX(2364.0F);
      Player player1 = new Player();
      Player player2 = new Player((short)4919, "DIfIFkUzH", (short)4919);
      player1.getX();
      player2.setDead();
      player0.setX(0.1F);
      player0.pack();
      player1.setMoney((-3299.44F));
      player0.setDead();
      player1.getX();
      player0.getX();
      System.setCurrentTimeMillis((short)4919);
      Player player3 = new Player((short)4919, "m%y[Veh:", (String) null, 256, 2066);
      player3.isBoss();
      Party party0 = player0.gangBoss();
      player1.add(party0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(1L);
      player1.getX();
      player3.type();
      player3.isJoinOK(player1, false);
      float float0 = player1.getMoney();
      assertEquals((-3299.44F), float0, 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.970620935502287
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(0, ":M=*2qdKu DHW> -8", 0);
      player0.getX();
      player0.setDead();
      player0.setX(0.0F);
      player0.pack();
      player0.isJoinOK(player0, false);
      player0.prev = (Party) player0;
      player0.getX();
      player0.getZ();
      player0.pack();
      player0.getStrength();
      player0.pack();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.9417429777213613
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals("Player-1", player1.toString());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0, player1.getPictureId());
      assertFalse(player1.isDead());
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(player1.isConnected());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.236203913672499
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player((-822), "", (-822));
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      player0.pack();
      player0.toString();
      assertFalse(player0.isDead());
      assertEquals((-822), player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ((-217.92F));
      player0.gangStrength();
      player0.pack();
      float float0 = player0.getZ();
      assertEquals((-217.92F), float0, 0.01F);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.8797790870358644
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, "}", "}", (-84), (-84));
      int int0 = player1.gangStrength();
      assertEquals((-84), int0);
      
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertFalse(boolean0);
      
      player1.pack();
      int int1 = player1.type();
      assertEquals((-84), player1.getPictureId());
      assertEquals(5, int1);
      
      player0.pack();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player-1", player0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(0, "state.Party", "", 0, 0);
      player0.getName();
      assertFalse(player0.isDead());
      assertEquals(0, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("state.Party", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.939792811164566
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      player0.setZ((-217.92F));
      player0.gangStrength();
      player0.getY();
      Player player1 = new Player(1);
      player1.id = (-139);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      player1.setX((-2887.6213F));
      player1.setDead(1L);
      player0.isJoinOK(player1, false);
      float float0 = player1.getX();
      assertEquals((-2887.6213F), float0, 0.01F);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      System.setCurrentTimeMillis((-43));
      Player player0 = new Player((-3333), "", "", (-541), (-3333));
      int int0 = player0.type();
      assertEquals(5, int0);
      
      int int1 = player0.getStrength();
      assertTrue(player0.isConnected());
      assertEquals((-541), player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-3333), int1);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player((-300), "", "vJ", (-1702));
      player0.gangStrength();
      byte[] byteArray0 = player0.pack();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player0.setConnected(false);
      player0.isConnected();
      player0.unpack(byteArray0);
      player0.setX((-1.0F));
      float float0 = player0.getMoney();
      assertEquals((-44), player0.getId());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919);
      player1.pack();
      // Undeclared exception!
      try { 
        player1.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.8836095585126564
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player();
      player0.setX(1.0F);
      player0.setDead((-1L));
      player0.pack();
      player0.id = 1;
      player0.setY((-1L));
      player0.getY();
      player0.reset(false);
      player0.setY(1);
      player0.setDead(2759L);
      player0.getY();
      player0.setDead((long) 1);
      player0.setMoney(0.0F);
      assertTrue(player0.isDead());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(1, (String) null, (String) null, 1);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player();
      player0.setMoney(97.6072F);
      player0.gangStrength();
      player0.toString();
      player0.setDead((long) 1, false);
      Party party0 = player0.gangBoss();
      Party party1 = player0.prev;
      party0.prev = null;
      party0.add(player0);
      player0.add(party0);
      player0.getMoney();
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.299841890987102
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(0, (String) null, (String) null, 0, 0);
      player0.reset(true);
      player0.setDead((-464L), false);
      player0.getName();
      player0.id = 0;
      player0.setZ((-464L));
      player0.getStrength();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-92);
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      byteArray0[2] = (byte) (-42);
      player0.unpack(byteArray0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(" ", true);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player1.pack(dataOutputStream0);
      player0.getX();
      assertTrue(player0.isDead());
      
      int int0 = player1.gangStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      player0.setJoinOK(player0, false);
      boolean boolean0 = player0.isDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.9720861369674885
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(382, "", "", 0, 382);
      player0.pack();
      player0.boss = null;
      player0.setMoney(382);
      player0.setX(0);
      player0.setZ(0.0F);
      player0.reset(true);
      player0.setMoney((-2555.436F));
      player0.getSubparty();
      player0.getIP();
      player0.setX(0.0F);
      player0.setX(382);
      player0.getX();
      player0.pack();
      player0.setX(0.0F);
      boolean boolean0 = player0.isConnected();
      assertEquals(0.0F, player0.getX(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.038009341005529
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player();
      assertEquals("Player-1", player0.toString());
      
      Player player1 = new Player(2);
      boolean boolean0 = player1.isDead();
      assertFalse(boolean0);
      assertEquals(1, player1.getStrength());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(0, player1.getPictureId());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.9410699503727393
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player((-2435), "%D<L/mX2^j}};CT", (-2435));
      player0.setY((-2435));
      player0.getPictureId();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)25;
      byteArray0[1] = (byte)70;
      byteArray0[2] = (byte) (-1);
      player0.unpack(byteArray0);
      Player player1 = new Player((-2435), "", "%D<L/mX2^j}};CT", (short)4919);
      player0.setDead((long) (-2435), true);
      player0.reset(false);
      player1.gangStrength();
      player0.setJoinOK(player1, true);
      assertEquals((-2435.0F), player0.getY(), 0.01F);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[2];
      player0.setConnected(true);
      byteArray0[0] = (byte)107;
      byteArray0[1] = (byte)1;
      player0.unpack(byteArray0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.75012938226178
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player((-2435));
      player0.setY((-2435));
      player0.getPictureId();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)25;
      byteArray0[1] = (byte)70;
      player0.setY((-2435));
      byteArray0[2] = (byte)25;
      player0.unpack(byteArray0);
      player0.setDead((long) (-2435), true);
      player0.reset(false);
      player0.gangStrength();
      player0.setJoinOK(player0, true);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player();
      float float0 = player0.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("dSpM#Y_#-p@8f0EFb)&", false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = player0.isConnected();
      assertTrue(boolean0);
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("Player-1", player0.getName());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(862, "", "s_*MUXL9>S++1Gs", 1445, 862);
      int int0 = player0.getPictureId();
      assertTrue(player0.isConnected());
      assertEquals(862, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(1445, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("", player0.getIP());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player();
      assertTrue(player0.isConnected());
      
      player0.setConnected(false);
      int int0 = player0.gangStrength();
      assertFalse(player0.isConnected());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)1;
      byteArray0[4] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(3, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player1.unpack(dataInputStream0);
      assertFalse(boolean0);
      assertEquals(0, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(player1.isConnected());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals("Player-1", player1.getName());
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player();
      player0.setY((-2870.01F));
      int int0 = player0.gangStrength();
      assertEquals((-2870.01F), player0.getY(), 0.01F);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player((-300), "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", 1, 0);
      int int0 = player0.gangStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getPictureId());
      assertEquals(0, int0);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.add(player1);
      int int0 = player0.gangStrength();
      assertEquals(0, player0.getPictureId());
      assertEquals(2, int0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.getName());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player(0, "SqP7gnJ`uR8O;[", "SqP7gnJ`uR8O;[", 0, 3);
      int int0 = player0.gangStrength();
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(3, int0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.94218229742502
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(1, "m", 1);
      player0.reset(false);
      player0.setZ(1);
      player0.gangStrength();
      player0.id = 1;
      player0.setZ(430.06F);
      player0.setZ(1);
      player0.id = 5;
      player0.pack();
      player0.setDead();
      player0.getY();
      player0.getIP();
      int int0 = player0.gangStrength();
      assertEquals(1.0F, player0.getZ(), 0.01F);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(2835, (String) null, (String) null, 2835, (-219));
      player0.getIP();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals((-219), player0.getStrength());
      assertEquals(2835, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player();
      long long0 = player0.getTimeOfDeath();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(0L, long0);
      assertEquals("Player-1", player0.getName());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(true);
      player0.pack();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.toString());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ((-2584.01F));
      int int0 = player0.type();
      assertEquals((-2584.01F), player0.getZ(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player();
      player0.getName();
      player0.setX(636.62F);
      assertEquals(636.62F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      long long0 = player0.getTimeOfDeath();
      assertEquals(1392409281320L, long0);
  }
}
