/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 13 22:34:38 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedReader;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.util.LinkedList;
import java.util.List;
import java.util.Vector;
import javax.sql.ConnectionPoolDataSource;
import org.apache.derby.iapi.sql.dictionary.ConstraintDescriptorList;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBNotNullConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBSequence;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBTrigger;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.h2.jdbcx.JdbcConnectionPool;
import org.hsqldb.rowio.RowOutputBinary;
import org.junit.runner.RunWith;
import org.postgresql.ds.PGConnectionPoolDataSource;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "select(electfzfel9h jozn";
      stringArray0[1] = "select(electfzfel9h jozn";
      stringArray0[2] = "select(electfzfel9h jozn";
      stringArray0[3] = "select(electfzfel9h jozn";
      stringArray0[4] = "select(electfzfel9h jozn";
      stringArray0[5] = "select(electfzfel9h jozn";
      stringArray0[6] = "select(electfzfel9h jozn";
      stringArray0[7] = "select(electfzfel9h jozn";
      stringArray0[8] = "select(electfzfel9h jozn";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "select(electfzfel9h jozn", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("select(electfzfel9h jozn", false, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBDataType dBDataType0 = DBDataType.getInstance(734, "select(electfzfel9h jozn");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("select(electfzfel9h jozn", dBTable0, dBDataType0);
      DBNotNullConstraint dBNotNullConstraint0 = new DBNotNullConstraint(dBTable0, "select(electfzfel9h jozn", false, "select(electfzfel9h jozn");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.constraintSpec(dBNotNullConstraint0, nameSpec0);
      String[] stringArray1 = new String[1];
      stringArray1[0] = "Not implemented: Prepare must be issued using the same connection that started the transaction";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("select(electfzfel9h jozn", stringArray0, "select(electfzfel9h jozn", "Not implemented: Prepare must be issued using the same connection that started the transaction", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5748027648585858
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      String[] stringArray0 = new String[17];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("cx`^/z_*v^Q{");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "executeselectselectfzfel9h join selectfzfel9h as selectfzfel9h on selectfzfel9h.null = selectfzfel9h.null and selectfzfel9h.null = selectfzfel9h.null and selectfzfel9h.null = selectfzfel9h.null and selectfzfel9h.null = selectfzel9h.null and selectfzfel9h.null = selectfzfel9h.null and selectfzfel9h.null = selectfzfel9h.null and selectfzfel9h.null = selectfzfel9h.null and selectfzfel9h.null = selectfzfel9h.null", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("executeselectselectfzfel9h join selectfzfel9h as selectfzfel9h on selectfzfel9h.null = selectfzfel9h.null and selectfzfel9h.null = selectfzfel9h.null and selectfzfel9h.null = selectfzfel9h.null and selectfzfel9h.null = selectfzel9h.null and selectfzfel9h.null = selectfzfel9h.null and selectfzfel9h.null = selectfzfel9h.null and selectfzfel9h.null = selectfzfel9h.null and selectfzfel9h.null = selectfzfel9h.null", false, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("cx`^/z_*v^Q{", dBTable0, 90112, "executeselectselectfzfel9h join selectfzfel9h as selectfzfel9h on selectfzfel9h.null = selectfzfel9h.null and selectfzfel9h.null = selectfzfel9h.null and selectfzfel9h.null = selectfzfel9h.null and selectfzfel9h.null = selectfzel9h.null and selectfzfel9h.null = selectfzfel9h.null and selectfzfel9h.null = selectfzfel9h.null and selectfzfel9h.null = selectfzfel9h.null and selectfzfel9h.null = selectfzfel9h.null");
      defaultDBColumn0.setSize((Integer) null);
      DBColumn[] dBColumnArray0 = new DBColumn[2];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      SQLUtil.renderColumnNames(dBColumnArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("cx`^/z_*v^Q{, cx`^/z_*v^Q{");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.renderCreateTable(dBTable0, true, nameSpec0, mockPrintWriter0);
      assertNull(dBTable0.getDoc());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, 55, "");
      linkedList0.add((DBColumn) defaultDBColumn0);
      String string0 = SQLUtil.renderColumnNames((List<DBColumn>) linkedList0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      String[] stringArray0 = new String[11];
      SQLUtil.join("Float", "MERGE", stringArray0, "MERGE", "MERGE", stringArray0);
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      constraintDescriptorList0.add((Object) "Float");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) constraintDescriptorList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "RDB$TRIGGERS", false, (String[]) null);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY ()", string0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("drop table", defaultDBTable0, (-1472747835), "drop table");
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      linkedList0.add((DBColumn) defaultDBColumn0);
      linkedList0.add((DBColumn) defaultDBColumn0);
      String string0 = SQLUtil.renderColumnNames((List<DBColumn>) linkedList0);
      assertEquals("drop table, drop table", string0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.1606858130841884
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = new StringBuilder(178);
      NameSpec nameSpec0 = NameSpec.NEVER;
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("<<h?s+", "left", (VersionNumber) null);
      DBCatalog dBCatalog0 = new DBCatalog("T-kwE", defaultDatabase0);
      DBSchema dBSchema0 = new DBSchema("left", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("T-kwE", dBSchema0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "<<h?s+";
      stringArray0[1] = "<<h?s+";
      stringArray0[2] = "<<h?s+";
      stringArray0[3] = null;
      stringArray0[4] = "T-kwE";
      stringArray0[5] = "left";
      stringArray0[6] = "<<h?s+";
      stringArray0[7] = "<<h?s+";
      stringArray0[8] = "left";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, false, stringArray0);
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder1, nameSpec0);
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder1);
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("<<h?s+");
      assertNull(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter sessionselectselectfzfel9h join selectfzfel9h as selectfzfel9h on selectfzfel9h.null = selectfzfel9h.null and selectfzfel9h.null = selectfzfel9h.null and selectfzfel9h.null = selectfzfel9h.null and selectfzfel9h.null = selectfzfel9h.null and selectfzfel9h.null = selectfzfel9h.null and selectfzfel9h.null = selectfzfel9h.null and selectfzfel9h.null = selectfzfel9h.null and selectfzfel9h.null = selectfzfel9h.null");
      assertNotNull(boolean0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "/*";
      // Undeclared exception!
      SQLUtil.isDDL("/*");
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("(");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: (
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      DBSchema dBSchema0 = new DBSchema("=CCb`H?+R+");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(0, "=CCb`H?+R+");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("=CCb`H?+R+", defaultDBTable0, dBDataType0, integer0);
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      SQLUtil.renderColumnNames(dBColumnArray0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "alter index";
      stringArray0[1] = "=CCb`H?+R+";
      stringArray0[2] = "=CCb`H?+R+";
      stringArray0[4] = "=CCb`H?+R+";
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("qN_n=//aiWfk|$g34");
      Integer integer0 = new Integer((-1751524388));
      DBCatalog dBCatalog0 = new DBCatalog();
      DBDataType dBDataType0 = DBDataType.getInstance((-1751524388), "l#,");
      DBSchema dBSchema0 = new DBSchema("qN_n=//aiWfk|$g34", dBCatalog0);
      dBSchema0.getTable("qN_n=//aiWfk|$g34");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("qN_n=//aiWfk|$g34", (DBTable) null, dBDataType0, integer0, integer0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("qN_n=//aiWfk|$g34L#,(-1751524388,-1751524388)", stringBuilder0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.6969987794394545
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Q";
      stringArray0[2] = "Q";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "Q", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      dBPrimaryKeyConstraint0.setOwner(defaultDBTable0);
      SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      StringBuilder stringBuilder0 = SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, (StringBuilder) null, nameSpec0);
      assertNull(stringBuilder0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.3897057700562945
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      String[] stringArray0 = new String[10];
      SQLUtil.join("selectfzel99h", "selectfzel99h", stringArray0, "selectfzel99h", "selectfzel99h", stringArray0);
      SQLUtil.mutatesDataOrStructure("selectfzel99h join selectfzel99h as selectfzel99h on selectfzel99h.null = selectfzel99h.null and selectfzel99h.null = selectfzel99h.null and selectfzel99h.null = selectfzel99h.null and selectfzel99h.null = selectfzel99h.null and selectfzel99h.null = selectfzel99h.null and selectfzel99h.null = selectfzel99h.null and selectfzel99h.null = selectfzel99h.null and selectfzel99h.null = selectfzel99h.null and selectfzel99h.null = selectfzel99h.null and selectfzel99h.null = selectfzel99h.null");
      String[] stringArray1 = new String[2];
      stringArray1[0] = "O_sz[yE!Js?=K#\"Tvc";
      stringArray1[1] = "O_sz[yE!Js?=K#\"Tvc";
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("selectfzel99h", stringArray0, "selectfzel99h join selectfzel99h as selectfzel99h on selectfzel99h.null = selectfzel99h.null and selectfzel99h.null = selectfzel99h.null and selectfzel99h.null = selectfzel99h.null and selectfzel99h.null = selectfzel99h.null and selectfzel99h.null = selectfzel99h.null and selectfzel99h.null = selectfzel99h.null and selectfzel99h.null = selectfzel99h.null and selectfzel99h.null = selectfzel99h.null and selectfzel99h.null = selectfzel99h.null and selectfzel99h.null = selectfzel99h.null", "O_sz[yE!Js?=K#\"Tvc", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.48000000000000004
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[5];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "Illegal column type format: ", true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder(178);
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0, nameSpec0);
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder1);
      assertEquals("CONSTRAINT \"Illegal column type format: \" ", stringBuilder1.toString());
      
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      SQLUtil.mutatesStructure("/*");
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.4904032277870636
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("<ropMtabl");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("<ropMtabl", defaultDBTable0, (-1472747793), "<ropMtabl");
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      linkedList0.add((DBColumn) defaultDBColumn0);
      String string0 = SQLUtil.renderColumnNames((List<DBColumn>) linkedList0);
      assertEquals("<ropMtabl", string0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = " = ";
      stringArray0[1] = " = ";
      stringArray0[2] = "<ropMtabl";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, " = ", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string1 = SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("CONSTRAINT \" = \" UNIQUE ( = ,  = , <ropMtabl)", string1);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("qN_n=//aiWfk|$g34");
      String string0 = SQLUtil.normalize(",|\u0007*/me?O", false);
      assertEquals(", | \u0007 */ me ? O", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      // Undeclared exception!
      SQLUtil.isDML("/*");
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.7754337976947765
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("callb");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.0876987819993174
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      String[] stringArray0 = new String[3];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("null = null AND null = null AND null = null");
      String[] stringArray1 = new String[9];
      stringArray1[0] = "null = null AND null = null AND null = null";
      stringArray1[1] = "t]${<S";
      stringArray1[2] = "null = null AND null = null AND null = null";
      stringArray1[3] = "null = null AND null = null AND null = null";
      stringArray1[4] = "R";
      stringArray1[5] = "null = null AND null = null AND null = null";
      stringArray1[6] = "t]${<S";
      stringArray1[7] = "null = null AND null = null AND null = null";
      stringArray1[8] = "Rzds";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("t]${<S", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray1);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("null = null AND null = null AND null = null");
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, mockPrintWriter0);
      assertNull(dBForeignKeyConstraint0.getDoc());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[5];
      String string0 = "!v";
      stringArray0[0] = "!v";
      SQLUtil.isDDL("!v");
      stringArray0[2] = "!v";
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("!v", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("FOREIGN KEY (!v, , !v, , ) REFERENCES null(!v, , !v, , )");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"!v\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)4;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Boolean boolean0 = new Boolean("/*");
      // Undeclared exception!
      SQLUtil.isQuery("/*");
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      String[] stringArray0 = new String[12];
      String string0 = SQLUtil.join("inner", "inner", stringArray0, "inner", "inner", stringArray0);
      assertEquals("inner as inner on inner.null = inner.null and inner.null = inner.null and inner.null = inner.null and inner.null = inner.null and inner.null = inner.null and inner.null = inner.null and inner.null = inner.null and inner.null = inner.null and inner.null = inner.null and inner.null = inner.null and inner.null = inner.null and inner.null = inner.null", string0);
      
      TableContainer tableContainer0 = new TableContainer(stringArray0[4]);
      boolean boolean0 = SQLUtil.isQuery("inner");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.5108045110385615
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("alter mhteralize=iew");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "alter mhteralize=iew";
      stringArray0[1] = "alter mhteralize=iew";
      stringArray0[2] = "alter mhteralize=iew";
      String[] stringArray1 = new String[2];
      stringArray1[0] = "alter mhteralize=iew";
      stringArray1[1] = "alter mhteralize=iew";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("alter mhteralize=iew", stringArray0, "alter mhteralize=iew", "alter mhteralize=iew", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.8386877468598375
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      String[] stringArray0 = new String[17];
      String string0 = SQLUtil.join("Float", "MERGE", stringArray0, "MERGE", "MERGE", stringArray0);
      assertEquals("Float join MERGE as MERGE on MERGE.null = MERGE.null and MERGE.null = MERGE.null and MERGE.null = MERGE.null and MERGE.null = MERGE.null and MERGE.null = MERGE.null and MERGE.null = MERGE.null and MERGE.null = MERGE.null and MERGE.null = MERGE.null and MERGE.null = MERGE.null and MERGE.null = MERGE.null and MERGE.null = MERGE.null and MERGE.null = MERGE.null and MERGE.null = MERGE.null and MERGE.null = MERGE.null and MERGE.null = MERGE.null and MERGE.null = MERGE.null and MERGE.null = MERGE.null", string0);
      
      String[] stringArray1 = new String[0];
      String string1 = SQLUtil.leftJoin("Float", stringArray1, "Float", "MERGE", stringArray0);
      assertEquals("left join Float as MERGE on ", string1);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.7315797140115936
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.typeAndName(defaultDBTable0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "#vyjdt", false, (String[]) null);
      defaultDBTable0.removeUniqueConstraint(dBPrimaryKeyConstraint0);
      boolean boolean0 = SQLUtil.isQuery("table null");
      assertFalse(boolean0);
      
      String string0 = SQLUtil.renderValue(defaultDBTable0);
      assertNull(string0);
      
      String string1 = SQLUtil.typeAndName(defaultDBTable0);
      assertEquals("table null", string1);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = SQLUtil.normalize("/*", false);
      assertEquals("/*", string0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      // Undeclared exception!
      SQLUtil.mutatesDataOrStructure("/*");
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("callselect  a * # a < bajyil ^ 5");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("execute");
      assertNull(boolean0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.48000000000000004
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      SQLUtil.mutatesStructure("select into");
      boolean boolean0 = SQLUtil.isQuery("select into");
      Boolean boolean1 = SQLUtil.mutatesStructure("select into");
      assertTrue(boolean1.equals((Object)boolean0));
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select into");
      assertTrue(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      RowOutputBinary rowOutputBinary0 = new RowOutputBinary(43);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(rowOutputBinary0, false);
      mockPrintWriter0.print((float) 43);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("selectfzel99h");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      assertEquals("table", defaultDBTable0.getObjectType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("select");
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      assertEquals("table", defaultDBTable0.getObjectType());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin((String) null, (String[]) null, (String) null, " and ", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0225955941538991
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("D(4");
      assertFalse(boolean0);
      
      String string0 = SQLUtil.normalize("D(4", false);
      assertEquals("D (4", string0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("insertinsert__pwufio8qm_");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("deleternc=)mgsfp +58");
      assertNotNull(boolean0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.4645273874299565
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select(electfzfel9h jozn");
      assertFalse(boolean0);
      assertNotNull(boolean0);
      
      DBSchema dBSchema0 = new DBSchema("select(electfzfel9h jozn");
      DBTrigger dBTrigger0 = new DBTrigger("select(electfzfel9h jozn", dBSchema0);
      String string0 = SQLUtil.typeAndName(dBTrigger0);
      assertEquals("trigger select(electfzfel9h jozn", string0);
      
      String string1 = SQLUtil.ownerDotComponent(dBTrigger0);
      assertEquals("select(electfzfel9h jozn.select(electfzfel9h jozn", string1);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("removeConnectionEventListener(listener);");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"listener\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Boolean boolean0 = new Boolean("");
      String string0 = SQLUtil.substituteMarkers("", "org.h2.util.TempFileDeleter", "");
      assertEquals("", string0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.5656825482084753
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("drop tablc");
      System.setCurrentTimeMillis(4110L);
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("drop tablc", true, "create unique index(", "previous");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, (StringBuilder) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "y!K", false, (String[]) null);
      StringBuilder stringBuilder0 = new StringBuilder(1510);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      assertEquals("", stringBuilder1.toString());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      String string0 = SQLUtil.normalize("", true);
      assertEquals("", string0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      String[] stringArray0 = new String[7];
      String[] stringArray1 = new String[1];
      stringArray1[0] = "null as cons";
      // Undeclared exception!
      try { 
        SQLUtil.join("null as cons", "", stringArray0, "null as cons", "", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      String string0 = SQLUtil.normalize("selecta*#a<bajyil^5", true);
      assertEquals("selecta * # a < bajyil ^ 5", string0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      String string0 = SQLUtil.normalize("create unique index'r~", true);
      assertEquals("create unique index 'r~'", string0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.4804329492445527
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select(electfzfel9h jozn");
      assertFalse(boolean0);
      assertNotNull(boolean0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "select(electfzfel9h jozn";
      stringArray0[1] = "select(electfzfel9h jozn";
      stringArray0[2] = "select(electfzfel9h jozn";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("select(electfzfel9h jozn");
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint((String) null, false, defaultDBTable0, "LITERAL_PREFIX");
      String string0 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.585098775154596
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter materialized=view");
      assertNull(boolean0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("alter materialized=view");
      String[] stringArray0 = new String[0];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "alter materialized=view", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("UNIQUE ()", string0);
      
      boolean boolean1 = SQLUtil.isProcedureCall("UNIQUE ()");
      assertFalse(boolean1);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("ROLE", 119);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.parseColumnTypeAndSize("select into");
      DBCatalog dBCatalog0 = new DBCatalog("");
      String string0 = SQLUtil.ownerDotComponent(dBCatalog0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      String string0 = SQLUtil.normalize("!t/\"wA-:", false);
      assertEquals("! t / \"wA-:\"", string0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.50381036838884
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.typeAndName(defaultDBTable0);
      StringBuilder stringBuilder0 = new StringBuilder("PK.RDB$RELATION_NAME");
      boolean boolean0 = SQLUtil.isDDL("table null");
      assertFalse(boolean0);
      
      Character character0 = new Character('4');
      String string1 = SQLUtil.renderValue(character0);
      assertEquals("'4'", string1);
      
      String string2 = SQLUtil.normalize("table null", false);
      assertTrue(string2.equals((Object)string0));
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Character character0 = new Character('!');
      String string0 = SQLUtil.substituteMarkers("select intorj)d0#utq|a#>4", "create tabletable null", character0);
      assertEquals("select intorj)d0#utq|a#>4", string0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      String[] stringArray0 = new String[3];
      Object[] objectArray0 = new Object[2];
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.969847501628146
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.renderValue(stringBuilder0);
      // Undeclared exception!
      try { 
        stringBuilder0.insert(281, (CharSequence) "", 281, (-474389168));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // dstOffset 281
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("XBCXQ.S");
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable((DBTable) null, true, nameSpec0, mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance((-2852), "selectfzel99h");
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("selectfzel99h");
      SQLUtil.parseColumnTypeAndSize("selectfzel99h");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("drop index", defaultDBTable0, dBDataType0, integer0);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("SELECTFZEL99H(1)", string0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition(":MNIS", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.544943664690598
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select(electfzfel9h jozn");
      assertFalse(boolean0);
      assertNotNull(boolean0);
      
      SQLUtil.mutatesStructure("P,C0'n4a");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", (DBTable) null, (-2101), "");
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      String string0 = SQLUtil.normalize("\fA@)TbY`7J`H", true);
      assertEquals("\f A @) TbY ` 7J ` H", string0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("org.apache.derby.impl.store.access.btree.index.B2IRowLocking2", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("9fw0@pj?*G0>SQXY");
      defaultDBTable0.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("g2(v");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: g2(v
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("<ropMtabl");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("<ropMtabl", defaultDBTable0, (-1472747793), "<ropMtabl");
      DBColumn[] dBColumnArray0 = new DBColumn[3];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("selectf]zel99h");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("alter tabne*selectfz");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter tabne*selectfz", defaultDBTable0, (-3221), "alter tabne*selectfz");
      String string0 = defaultDBColumn0.toString();
      assertEquals("alter tabne*selectfz : ALTER TABNE*SELECTFZ", string0);
      
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      linkedList0.add((DBColumn) defaultDBColumn0);
      String string1 = SQLUtil.renderColumnNames((List<DBColumn>) linkedList0);
      assertEquals("alter tabne*selectfz", string1);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      Integer integer0 = new Integer(5);
      DBCatalog dBCatalog0 = new DBCatalog();
      DBDataType dBDataType0 = DBDataType.getInstance(5, "l#,");
      DBSchema dBSchema0 = new DBSchema("l#,", dBCatalog0);
      dBSchema0.getTable("l#,");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("l#,", (DBTable) null, dBDataType0, integer0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("L#,(5)", stringBuilder0.toString());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      String[] stringArray0 = new String[18];
      // Undeclared exception!
      try { 
        SQLUtil.join("Float", "Float", stringArray0, "Float", "V0Rki", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.8053415898278653
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      String[] stringArray0 = new String[14];
      SQLUtil.join("MERGE", "MERGE", stringArray0, "MERGE", "MERGE", stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("alter indexdrop tablc", stringArray0, "x*+SvBc:4", "MERGE join MERGE as MERGE on MERGE.null = MERGE.null and MERGE.null = MERGE.null and MERGE.null = MERGE.null and MERGE.null = MERGE.null and MERGE.null = MERGE.null and MERGE.null = MERGE.null and MERGE.null = MERGE.null and MERGE.null = MERGE.null and MERGE.null = MERGE.null and MERGE.null = MERGE.null and MERGE.null = MERGE.null and MERGE.null = MERGE.null and MERGE.null = MERGE.null and MERGE.null = MERGE.null", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("create materialized viewdeletealter materialized=view");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("drop index");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("create unique indexcreate unique indexzelectf]zel99h");
      assertNotNull(boolean0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("cannoX ");
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("cannoX ", false, defaultDBTable0, "cannoX ");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBCheckConstraint0, nameSpec0);
      SQLUtil.addRequiredCondition("cannoX ", stringBuilder0);
      assertEquals("cannoX ", stringBuilder0.toString());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("", dBSchema0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      String string0 = SQLUtil.normalize(" ;t,gwN", false);
      assertEquals("; t, gwN", string0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.renderColumnListWithTableName("ge9yt~", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, (StringBuilder) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("6qQvl0#~^DsuHN2H(");
      assertFalse(boolean0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("6qQvl0#~^DsuHN2H(");
      DBDataType dBDataType0 = DBDataType.getInstance((-68407565), "6qQvl0#~^DsuHN2H(");
      Integer integer0 = RawTransaction.ABORT;
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("6qQvl0#~^DsuHN2H(", defaultDBTable0, dBDataType0, integer0, integer1);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("6qQvl0#~^DsuHN2H( 6QQVL0#~^DSUHN2H((1,2) NULL", string0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(2, "Backend start-up failed: {0}.");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Backend start-up failed: {0}.", defaultDBTable0, dBDataType0);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("BACKEND START-UP FAILED: {0}.", string0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 0", string0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DBSequence dBSequence0 = new DBSequence("zelectf]zel99h", "zelectf]zel99h", "zelectf]zel99h");
      String string0 = SQLUtil.ownerDotComponent(dBSequence0);
      assertEquals("zelectf]zel99h", string0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addRequiredCondition((String) null, stringBuilder0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      JdbcConnectionPool jdbcConnectionPool0 = JdbcConnectionPool.create((ConnectionPoolDataSource) pGConnectionPoolDataSource0);
      jdbcConnectionPool0.getLogWriter();
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey((DBForeignKeyConstraint) null, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("INSTR", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      String string0 = SQLUtil.typeAndName((DBObject) null);
      assertNull(string0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        SQLUtil.isDML(stringArray0[0]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      String string0 = SQLUtil.normalize("s=UQRjqpP\"GUdhqN6", true);
      assertEquals("s = UQRjqpP \"GUdhqN6\"", string0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      String string0 = SQLUtil.normalize("create tablealter tabletp.id~jd>a-;w", false);
      assertEquals("create tablealter tabletp.id ~ jd > a - ; w", string0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.7653291326451686
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("deletealter materialized=view");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        defaultDBTable0.getUniqueConstraint("DATABASE_OPENING");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      String[] stringArray0 = new String[17];
      String string0 = SQLUtil.renderColumnListWithTableName("Float", stringArray0);
      assertEquals("Float.null, Float.null, Float.null, Float.null, Float.null, Float.null, Float.null, Float.null, Float.null, Float.null, Float.null, Float.null, Float.null, Float.null, Float.null, Float.null, Float.null", string0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "Float", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string1 = SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("UNIQUE (, , , , , , , , , , , , , , , , )", string1);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) ";,a> Fwu:IgO!a");
      SQLUtil.addOptionalCondition(";,a> Fwu:IgO!a", stringBuilder0);
      assertEquals(";,a> Fwu:IgO!a or ;,a> Fwu:IgO!a", stringBuilder0.toString());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition("PTspV:KT?!l=", stringBuilder0);
      assertEquals("PTspV:KT?!l=", stringBuilder0.toString());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) constraintDescriptorList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.3450363141108999
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      String[] stringArray0 = new String[5];
      String string0 = SQLUtil.renderColumnListWithTableName("Mb", stringArray0);
      assertEquals("Mb.null, Mb.null, Mb.null, Mb.null, Mb.null", string0);
      
      String string1 = SQLUtil.leftJoin("Mb.null, Mb.null, Mb.null, Mb.null, Mb.null", stringArray0, "w.gc", "w.gc", stringArray0);
      assertEquals("left join w.gc as w.gc on Mb.null, Mb.null, Mb.null, Mb.null, Mb.null.null = w.gc.null and Mb.null, Mb.null, Mb.null, Mb.null, Mb.null.null = w.gc.null and Mb.null, Mb.null, Mb.null, Mb.null, Mb.null.null = w.gc.null and Mb.null, Mb.null, Mb.null, Mb.null, Mb.null.null = w.gc.null and Mb.null, Mb.null, Mb.null, Mb.null, Mb.null.null = w.gc.null", string1);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.9216994663205984
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      String[] stringArray0 = new String[18];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("V0Rki", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      SQLUtil.parseColumnTypeAndSize("execm");
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("execm");
      assertNull(boolean0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.8816064979261793
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      String[] stringArray0 = new String[8];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("UNIQUE ");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "UNIQUE ", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT \"UNIQUE \" PRIMARY KEY (, , , , , , , )", string0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.0204142811723194
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      String[] stringArray0 = new String[2];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("null = null AND null = null", string0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "C,~xF;tC&", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string1 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT C,~xF;tC& PRIMARY KEY (, )", string1);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("select(elKctfzfel9h jozn", true, "select(elKctfzfel9h jozn", "MS949");
      String string0 = SQLUtil.constraintName(dBCheckConstraint0);
      assertEquals("CONSTRAINT \"select(elKctfzfel9h jozn\" ", string0);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("Savepoint is unnamed.", false, "annoX ", "annoX ");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CHECK annoX ", string0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("null = null", string0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "null = null", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string1 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT \"null = null\" PRIMARY KEY ()", string1);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("AT?NnGF1SSq?[@9");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("AT?NnGF1SSq?[@9", dBSchema0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "exec";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("AT?NnGF1SSq?[@9", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (exec) REFERENCES AT?NnGF1SSq?[@9(exec)", string0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      SQLUtil.mutatesStructure("cannoX ");
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("()", string0);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = SQLUtil.removeComments("");
      assertEquals("", string0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.innerJoin("fC:b", stringArray0, "\"_S4*p7sn8*wN", "fC:b", stringArray0);
      assertEquals("\"_S4*p7sn8*wN as fC:b on ", string0);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM null WHERE null = null", string0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, (String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers((String) null, "<J#n#jPi{eT*<", "<J#n#jPi{eT*<");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      SQLUtil.typeAndName(defaultDBTable0);
      Boolean boolean0 = new Boolean("G2(VJ");
      SQLUtil.renderValue("table ");
      SQLUtil.removeComments("table ");
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("table ");
      assertEquals(1, objectArray0.length);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Boolean boolean0 = new Boolean("G2(VJ");
      SQLUtil.renderValue(boolean0);
      SQLUtil.normalize("false", false);
      System.setCurrentTimeMillis((-303L));
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      String string0 = SQLUtil.substituteMarkers("create tablesnlect into", "XSDAJ.S", "XSDAJ.S");
      assertEquals("create tablesnlect into", string0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("drop table");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("drop table", defaultDBTable0, 2787, "drop table");
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("drop table DROP TABLE NULL", string0);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("qN_n=//aiWfk|$g34");
      SQLUtil.addRequiredCondition("qN_n=//aiWfk|$g34", stringBuilder0);
      assertEquals("qN_n=//aiWfk|$g34 and qN_n=//aiWfk|$g34", stringBuilder0.toString());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("selectf]zel99h");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.4172383526509957
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      String[] stringArray0 = new String[3];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("null = null AND null = null AND null = null", string0);
      
      String string1 = SQLUtil.innerJoin("null = null AND null = null AND null = null", stringArray0, "deletezelectf]zel99h", "deletezelectf]zel99h", stringArray0);
      assertEquals("deletezelectf]zel99h as deletezelectf]zel99h on null = null AND null = null AND null = null.null = deletezelectf]zel99h.null and null = null AND null = null AND null = null.null = deletezelectf]zel99h.null and null = null AND null = null AND null = null.null = deletezelectf]zel99h.null", string1);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.6753815449889018
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      String[] stringArray0 = new String[5];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("null = null AND null = null AND null = null AND null = null AND null = null", string0);
      
      String string1 = SQLUtil.leftJoin("null = null AND null = null AND null = null AND null = null AND null = null", stringArray0, "null = null AND null = null AND null = null AND null = null AND null = null", "select into", stringArray0);
      assertEquals("left join null = null AND null = null AND null = null AND null = null AND null = null as select into on null = null AND null = null AND null = null AND null = null AND null = null.null = select into.null and null = null AND null = null AND null = null AND null = null AND null = null.null = select into.null and null = null AND null = null AND null = null AND null = null AND null = null.null = select into.null and null = null AND null = null AND null = null AND null = null AND null = null.null = select into.null and null = null AND null = null AND null = null AND null = null AND null = null.null = select into.null", string1);
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      String[] stringArray0 = new String[11];
      SQLUtil.join((String) null, "kTDTq<Z#m\"<SU", stringArray0, "kTDTq<Z#m\"<SU", "kTDTq<Z#m\"<SU", stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 139
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("=C|Cb`H?+R+");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("F]zEL99h");
      assertNull(boolean0);
  }
}
