/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 13 22:41:28 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.StringWriter;
import java.io.Writer;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.7332075259206667
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add(")");
      arrayList0.add("&");
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append((CharSequence) ")");
      simpleNode0.dump("&", stringWriter0);
      assertEquals(")<VariableDeclaratorId>\n  <identifier>*amp</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.394714983677679
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump((String) null, stringWriter0);
      String string0 = simpleNode0.toString("");
      assertEquals("VariableDeclaratorId", string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5914440819577174
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("DO(QC1");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("\"float\"", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>DO(QC1</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.7250829733914482
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("/=");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("/=", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>/=</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(668);
      SimpleNode simpleNode1 = new SimpleNode(385);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "T>");
      simpleNode0.jjtSetParent(simpleNode1);
      Node node0 = simpleNode0.jjtGetParent();
      assertNotSame(node0, simpleNode0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.7767701612564368
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("{");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("{", stringWriter0);
      assertEquals("<EnumConstant>\n</EnumConstant>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(67);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add(">>");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(">>", stringWriter0);
      assertEquals("<ArgumentList>\n  <identifier>*rshft</identifier>\n</ArgumentList>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4078164692513457
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 0);
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.dump("", stringWriter0);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtAddChild((Node) null, 1);
      assertEquals(2, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add(">=");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(">=", stringWriter0);
      assertEquals("<EnumConstant>\n  <identifier>*ge</identifier>\n</EnumConstant>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(19);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("}");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("t", stringWriter0);
      assertEquals("<VariableInitializer>\n</VariableInitializer>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add(";");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(";", stringWriter0);
      assertEquals("<CompilationUnit>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(68);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("<<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("<<", stringWriter0);
      assertEquals("<AllocationExpression>\n  <identifier>*lshft</identifier>\n</AllocationExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6237180760658338
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(23);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("&");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("&", stringWriter0);
      assertEquals("<FormalParameters>\n  <identifier>*amp</identifier>\n</FormalParameters>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("<");
      SimpleNode simpleNode0 = new SimpleNode(63);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("<");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write("BV");
      simpleNode0.dump("ConstructorDeclaration", stringWriter0);
      assertEquals("BV<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.7488320958430319
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(19);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("", stringWriter0);
      assertEquals("<VariableInitializer>\n</VariableInitializer>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      arrayList0.add("<=");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("<=", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>*le</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.287991730133441
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("Q\"nH");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("Q\"nH", stringWriter0);
      JJTJavaParserState jJTJavaParserState0 = javaParser0.jjtree;
      simpleNode0.jjtSetParent(simpleNode0);
      simpleNode0.toString();
      simpleNode0.toString("CompilationUnit");
      simpleNode0.jjtAddChild(simpleNode0, 0);
      simpleNode0.jjtGetParent();
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode0, 0);
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.jjtGetChild(0);
      simpleNode0.toString((String) null);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.2340953181649328
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode((-1678));
      simpleNode0.jjtAddChild(simpleNode1, 0);
      Node node0 = simpleNode0.jjtGetChild(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add(">=");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtSetParent(node0);
      simpleNode0.dump((String) null, stringWriter0);
      simpleNode0.toString();
      simpleNode0.dump("y8=Px%ocn<<", stringWriter0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode0, 0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      StringWriter stringWriter0 = new StringWriter();
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 85);
      assertEquals(86, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0067795890632527
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(19);
      SimpleNode simpleNode1 = new SimpleNode(19);
      simpleNode0.jjtAddChild(simpleNode1, 19);
      StringWriter stringWriter0 = new StringWriter(19);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode1, (-1096796124));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1096796124
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 832);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1255);
      simpleNode0.jjtAddChild((Node) null, 1255);
      StringWriter stringWriter0 = new StringWriter(1255);
      // Undeclared exception!
      try { 
        simpleNode0.dump("@Klfg", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(61);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("&&");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("&&", stringWriter0);
      assertEquals("<PrimaryPrefix>\n  <identifier>*amp</identifier>\n</PrimaryPrefix>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add(">");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(">", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>*gt</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(68);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("<", stringWriter0);
      assertEquals("<AllocationExpression>\n  <identifier>*lt</identifier>\n</AllocationExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(67);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("ArgumentList");
      simpleNode0.dump("Literal", stringWriter0);
      assertEquals("<ArgumentList>\n  <identifier>ArgumentList</identifier>\n</ArgumentList>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.876223713169005
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(21);
      simpleNode0.jjtAddChild(simpleNode0, 21);
      StringWriter stringWriter0 = new StringWriter(21);
      // Undeclared exception!
      simpleNode0.dump((String) null, stringWriter0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.8313156158018913
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(19);
      SimpleNode simpleNode1 = new SimpleNode(19);
      simpleNode0.jjtAddChild(simpleNode1, 19);
      StringWriter stringWriter0 = new StringWriter(19);
      simpleNode0.dump((String) null, stringWriter0);
      assertEquals(20, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.394714983677679
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode0, 0);
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.jjtAddChild(simpleNode0, 0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(1715);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1715
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(1245);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.6345319339779745
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString();
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("CompilationUnit", stringWriter0);
      simpleNode0.jjtGetChild(0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.394714983677679
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode0, 0);
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.jjtAddChild(simpleNode0, 0);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(106);
      simpleNode0.setIdentifier("Invalid escape character at line ");
      StringWriter stringWriter0 = new StringWriter(106);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "Invalid escape character at line ");
      simpleNode0.dump("Invalid escape character at line ", stringWriter1);
      assertEquals("Invalid escape character at line <DefaultValue>\n  <identifier>Invalid escape character at line </identifier>\n</DefaultValue>\n", stringWriter1.toString());
      assertEquals("Invalid escape character at line <DefaultValue>\n  <identifier>Invalid escape character at line </identifier>\n</DefaultValue>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode0, 0);
      StringWriter stringWriter0 = new StringWriter(0);
      // Undeclared exception!
      try { 
        simpleNode0.dump((String) null, (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1705);
      simpleNode0.jjtAddChild(simpleNode0, 57);
      simpleNode0.jjtOpen();
      simpleNode0.jjtGetParent();
      assertEquals(58, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(367);
      Node node0 = simpleNode0.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1073741822));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode((-3078));
      simpleNode0.dump("<=", stringWriter0);
      assertEquals("", stringWriter0.toString());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1431655763));
      // Undeclared exception!
      try { 
        simpleNode0.toString("0<");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1431655763
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1160);
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-4177984));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4177984
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(25);
      simpleNode0.setIdentifier("|");
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }
}
