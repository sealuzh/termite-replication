/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 13 18:24:37 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.7941820653816287
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player();
      player0.setX((-166.2407F));
      Player player1 = new Player((short)4919, "j1xTero' ", "gui.ModuleBrowserDialog$ModuleFilter", 3493);
      player0.setJoinOK(player1, true);
      player0.isJoinOK(player1, true);
      player0.pack();
      player0.getX();
      player0.pack();
      assertEquals((-166.2407F), player0.getX(), 0.01F);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.853253087436612
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(14907, "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", 0, 0);
      player0.pack();
      player0.setX((-1327.6499F));
      player0.id = 1335;
      player0.setY((-1.0F));
      MockPrintStream mockPrintStream0 = new MockPrintStream("Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      player0.pack(dataOutputStream0);
      player0.type();
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.getX();
      System.setCurrentTimeMillis(15000L);
      player0.gangStrength();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      System.setCurrentTimeMillis((-246L));
      player0.type();
      player0.getX();
      float float0 = player0.getX();
      assertEquals((-1327.6499F), float0, 0.01F);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.124771615329544
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ(4222.707F);
      Player player1 = new Player(5, "", "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", 1, 4919);
      player0.setJoinOK(player1, false);
      player1.pack();
      player0.reset(false);
      player0.isJoinOK(player1, false);
      player0.getPictureId();
      player0.pack();
      float float0 = player0.getZ();
      assertEquals(4222.707F, float0, 0.01F);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player();
      player0.setMoney((-1.0F));
      player0.setDead(1413L, true);
      player0.getMoney();
      player0.pack();
      assertEquals(1413L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(4919, "3$VF a:@|%fu$Wdk:l", 4919);
      Party party0 = player0.head;
      player0.setMoney(4919);
      player0.boss = null;
      player0.getMoney();
      float float0 = player0.getX();
      assertEquals(4919.0F, player0.getMoney(), 0.01F);
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party();
      party0.add(player0);
      player0.next = party0;
      player0.setJoinOK(player0, false);
      // Undeclared exception!
      player0.gangStrength();
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919);
      player0.setJoinOK(player1, false);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(player1.isConnected());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(1, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals("Player4919", player1.toString());
      assertEquals(0, player1.getPictureId());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.toString());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(1, "[(ONzE", (-379));
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)2;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      player0.unpack(dataInputStream0);
      assertEquals(2, byteArrayInputStream0.available());
      
      player0.type();
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.027215791000468
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      System.setCurrentTimeMillis(0L);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Player player0 = new Player((-32197), "", (String) null, (-32197), (-32197));
      Player player1 = new Player((short)4919, "dKi$lJeY`{k)=<o-", "S-.['Z^/fKj*Z~", (-1117));
      player0.setDead((long) (-1117));
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)42;
      byteArray0[1] = (byte)123;
      byteArray0[2] = (byte)1;
      byteArray0[4] = (byte)76;
      byteArray0[5] = (byte) (-122);
      byteArray0[6] = (byte) (-30);
      byteArray0[7] = (byte) (-91);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Party party0 = player1.gangBoss();
      player0.add(party0);
      player0.getMoney();
      player1.pack();
      player0.getMoney();
      player1.getSubparty();
      player1.gangStrength();
      player0.isJoinOK(player1, true);
      player1.gangStrength();
      System.setCurrentTimeMillis((-32196));
      player1.gangStrength();
      player1.getX();
      long long0 = player0.getTimeOfDeath();
      assertEquals((-1117L), long0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(2780, (String) null, (String) null, 2780);
      int int0 = player0.getPictureId();
      assertEquals(2780, int0);
      
      player0.toString();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.128419031742918
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player();
      player0.toString();
      player0.type();
      player0.getY();
      player0.pack();
      Player player1 = new Player(0, "U0a8s[2$~", 0);
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player1.unpack(dataInputStream0);
      player1.setDead();
      player1.next = (Party) player0;
      player1.isJoinOK(player0, false);
      player0.isConnected();
      player0.setZ(0.0F);
      player1.type();
      player1.getStrength();
      assertEquals(1392409281320L, player1.getTimeOfDeath());
      
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.969755134636486
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(9, "gui.ModuleBrowserDialog$ModuleFilter", "mO;K#hW q4T", 9);
      player0.setMoney(0.0F);
      player0.setY(9);
      player0.setDead();
      player0.setDead();
      player0.setZ(0.0F);
      player0.type();
      player0.getY();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      
      Player player1 = new Player();
      assertEquals(5, player1.type());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(2772, (String) null, (String) null, 2772, 2772);
      player0.next = (Party) player0;
      player0.getName();
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(2772, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(2772, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.125543816101745
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(2780, "", "", 2189, (-9));
      player0.pack();
      Player player1 = new Player((short)4919, "", 15114);
      player0.pack();
      player1.setDead();
      player0.isJoinOK(player1, false);
      player0.isConnected();
      player0.setZ((-766.28F));
      player0.type();
      int int0 = player0.getStrength();
      assertEquals((-766.28F), player0.getZ(), 0.01F);
      assertEquals((-9), int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(611, "L9X,gy^>kL", 611);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.199278271277649
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      Player player0 = new Player(1, "", "", (-32197));
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player1 = new Player((short)4919, "U/\tExVtPY`6 (WoXZl", "[,\"Kjld12<", (-32197));
      player0.head = (Party) player1;
      player0.getTimeOfDeath();
      player0.boss = (Party) player1;
      player0.getTimeOfDeath();
      player0.pack();
      player1.getIP();
      player1.getY();
      player0.pack();
      player1.setDead();
      player1.toString();
      player1.getStrength();
      player1.pack();
      player1.getIP();
      player0.getIP();
      player0.getZ();
      player1.pack();
      assertEquals(1392409281320L, player1.getTimeOfDeath());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.758354999183049
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(2815, (String) null, (String) null, 2815, 2815);
      Player player1 = new Player(2815, "Player", (String) null, 2815);
      player0.isJoinOK(player1, true);
      Player player2 = new Player((-2349), (String) null, "Player", (-630));
      int int0 = player0.gangStrength();
      assertEquals(2815, int0);
      
      player0.isJoinOK(player2, false);
      player2.pack();
      player2.prev = (Party) player1;
      boolean boolean0 = player2.isJoinOK(player0, true);
      assertFalse(boolean0);
      
      int int1 = player2.getPictureId();
      assertEquals((-630), int1);
      
      player2.getIP();
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertTrue(player2.isConnected());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.7567169975450474
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player();
      player0.gangStrength();
      player0.type();
      player0.gangStrength();
      player0.getZ();
      player0.gangStrength();
      player0.getX();
      player0.gangStrength();
      assertTrue(player0.isConnected());
      
      player0.setConnected(false);
      player0.gangStrength();
      player0.getZ();
      player0.isConnected();
      System.setCurrentTimeMillis(1392409281320L);
      player0.type();
      player0.pack();
      assertFalse(player0.isConnected());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(0, (String) null, "", 0);
      player0.toString();
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ((-4578));
      float float0 = player0.getZ();
      assertEquals((-4578.0F), float0, 0.01F);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player((-1), "9mO}EHKres4s$W+5w", (-1));
      int int0 = player0.getPictureId();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals((-1), int0);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ(0.0F);
      player0.setX(0.0F);
      player0.setMoney(0.0F);
      player0.getPictureId();
      player0.getX();
      MockPrintStream mockPrintStream0 = new MockPrintStream("q");
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player((-3892));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      
      player0.pack();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals("Player-3892", player0.toString());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player();
      player0.setMoney(10.0F);
      player0.setY((-2215.8F));
      player0.setDead();
      player0.setDead();
      player0.setZ(0.0F);
      player0.type();
      player0.getY();
      player0.pack();
      assertEquals((-2215.8F), player0.getY(), 0.01F);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(512, "", (-135));
      player0.setDead((long) 512, false);
      long long0 = player0.getTimeOfDeath();
      assertEquals(512L, long0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(0, "", "", (-3916), 5);
      player0.id = 0;
      player0.setDead();
      player0.getSubparty();
      player0.type();
      player0.getName();
      player0.setDead(1813L);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.8148657896913192
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      byteArray0[0] = (byte)34;
      player0.unpack(byteArray0);
      player0.pack();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.125543816101745
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(2780, "", "", 2189, 0);
      player0.pack();
      Player player1 = new Player((short)4919, "", 15114);
      player0.pack();
      player1.setDead();
      player0.isJoinOK(player1, false);
      player0.isConnected();
      player0.setZ((-766.28F));
      player0.type();
      int int0 = player0.getStrength();
      assertEquals((-766.28F), player0.getZ(), 0.01F);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead((-679L), true);
      int int0 = player0.gangStrength();
      assertEquals((-679L), player0.getTimeOfDeath());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(boolean0);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals("Player4919", player1.toString());
      assertEquals(1, player1.getStrength());
      assertEquals(0, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player();
      long long0 = player0.getTimeOfDeath();
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals("Player-1", player0.toString());
      assertEquals(0L, long0);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player(2815, (String) null, (String) null, 2815, 2815);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(true);
      player0.pack();
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      player0.setZ(0.1F);
      player0.setJoinOK(player0, true);
      player0.isDead();
      int int0 = player0.type();
      assertEquals(0.1F, player0.getZ(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isDead();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.getName());
      
      Player player1 = new Player(12, "VzHwD]Rt", "VzHwD]Rt", 12, (short)4919);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertTrue(player1.isConnected());
      assertEquals(12, player1.getPictureId());
      assertEquals(4919, player1.getStrength());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      
      Player player1 = new Player(1347, "", (short)4919);
      assertEquals(4919, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      assertFalse(player1.isDead());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player(1254);
      player0.id = 1254;
      String string0 = player0.getIP();
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", string0);
      assertEquals(0, player0.getPictureId());
      assertEquals("Player1254", player0.toString());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead((long) (short)4919);
      assertEquals(4919L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      byte[] byteArray0 = player1.pack();
      player1.unpack(byteArray0);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(0.0F, player1.getZ(), 0.01F);
      assertEquals("Player-1", player1.toString());
      assertEquals(0, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertFalse(boolean0);
      assertEquals((-1), player1.getId());
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player(4919, "V;D%g4,", "V;D%g4,", 4919, (-2400));
      int int0 = player0.gangStrength();
      assertEquals(4919, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-2400), int0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party((short)4919);
      player0.head = party0;
      player0.pack();
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)34;
      player0.unpack(byteArray0);
      player0.pack();
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals("Player-1", player0.getName());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      player0.pack();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.toString());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player(276);
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
      
      String string0 = player0.getName();
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player276", string0);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player();
      String string0 = player0.getName();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player-1", string0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player();
      float float0 = player0.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      
      float float1 = player0.getX();
      assertEquals(10.0F, float1, 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player-1", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
  }
}
