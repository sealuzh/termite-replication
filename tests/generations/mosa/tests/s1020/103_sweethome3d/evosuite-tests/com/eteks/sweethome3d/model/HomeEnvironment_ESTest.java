/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 14 21:01:32 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("Vo", "Vo", temporaryURLContent0, 0.0F, 266, (String) null, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(266, homeTexture0, 266, 38, 0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeTexture homeTexture1 = homeEnvironment1.getGroundTexture();
      assertEquals(266, homeEnvironment1.getGroundColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(266, homeEnvironment1.getSkyColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertNotNull(homeTexture1);
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(38, homeEnvironment1.getLightColor());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.964804005393002
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0vBMAzWQ$frzgXgm;c");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(4, (HomeTexture) null, (-283), 4, (-292.4F));
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoHeight((-1819));
      AspectRatio aspectRatio1 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      homeEnvironment0.getGroundTexture();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.DRAWING_MODE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("{z", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getPhotoAspectRatio();
      Random.setNextRandom(4);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setVideoFrameRate((-2310));
      Random.setNextRandom((-283));
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getCeillingLightColor();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.2373809026458025
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(6, (HomeTexture) null, 6, 0, 6);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      List<Camera> list0 = homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.setSubpartSizeUnderLight((-2978.7F));
      homeEnvironment1.setWallsAlpha((-2802.1587F));
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment1.setVideoCameraPath(list0);
      homeEnvironment1.setSkyTexture((HomeTexture) null);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment1.getDrawingMode();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getVideoAspectRatio();
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment.Property.values();
      homeEnvironment0.getVideoHeight();
      Random.setNextRandom(1877);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio((AspectRatio) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.clone();
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.getSkyTexture();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setWallsAlpha((-2123534210));
      HomeEnvironment.Property.values();
      int int0 = homeEnvironment1.getVideoWidth();
      assertEquals((-2.12353421E9F), homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.3022442933895046
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getGroundTexture();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSubpartSizeUnderLight(4943.3F);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.getSkyTexture();
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.clone();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setSkyColor(658);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setVideoWidth((-2346));
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "}(1{@w)d");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getVideoWidth();
      Random.setNextRandom((-2346));
      System.setCurrentTimeMillis(0L);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getGroundTexture();
      homeEnvironment1.getSkyTexture();
      homeEnvironment0.getDrawingMode();
      homeEnvironment1.getSkyTexture();
      assertFalse(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.683711063822706
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.setPhotoHeight(400);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setVideoQuality(10);
      homeEnvironment0.setPhotoHeight(400);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.setLightColor(10);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.setVideoWidth(400);
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getLightColor();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      assertEquals(10, homeEnvironment0.getVideoQuality());
      assertEquals(400, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.9663881312694826
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor((-18));
      homeEnvironment0.setVideoFrameRate((-18));
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setWallsAlpha((-18));
      System.setCurrentTimeMillis((-18));
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.clone();
      homeEnvironment0.setSubpartSizeUnderLight((-1767.6703F));
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getVideoCameraPath();
      assertEquals((-18.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomeEnvironment.Property.values();
      URLContent uRLContent0 = new URLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("BXF22{o@K%+b)Db;xmF", "S+Vswnm/<x\"4={X~", uRLContent0, 0.0F, 0.0F, "S+Vswnm/<x\"4={X~");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1783), homeTexture0, (-1783), homeTexture0, (-1783), 3045.1255F);
      homeEnvironment0.getSkyTexture();
      Random.setNextRandom(201);
      System.setCurrentTimeMillis(0L);
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(240, int0);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(3045.1255F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals((-1783), homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-1783), homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-1783), homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("com.eteks.sweethome3d.tools.OperatingSystem$3", "com.eteks.sweethome3d.tools.OperatingSystem$3", (Content) null, 909, 0.0F, "FREE_RATIO", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(909, homeTexture0, 909, homeTexture0, 909, 0.0F);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getVideoAspectRatio();
      assertEquals(909, homeEnvironment0.getLightColor());
      assertEquals(909, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(909, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor((-3228));
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals((-3228), int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight((-2418.09F));
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals((-2418.09F), float0, 0.01F);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-6186), (HomeTexture) null, 0, (-1968), (-6186));
      homeEnvironment0.setVideoQuality((-1304));
      homeEnvironment0.setPhotoWidth((-1968));
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getSkyColor();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("GJrL`U6uD%ucrz6}!Cr");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.GJrL`U6uD%ucrz6}!Cr
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality((-1));
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.getVideoAspectRatio();
      assertEquals((-1), homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.9676652704776565
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~X=B)@UYUoCz}%%$R-U");
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getVideoQuality();
      homeEnvironment1.setPhotoQuality((-1702));
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_WIDTH;
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.setSubpartSizeUnderLight(0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment1.getVideoAspectRatio();
      homeEnvironment0.getVideoQuality();
      Random.setNextRandom((-2156));
      homeEnvironment0.getPhotoHeight();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment1.getVideoQuality();
      float float0 = homeEnvironment1.getSubpartSizeUnderLight();
      assertEquals((-1702), homeEnvironment1.getPhotoQuality());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(622);
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(622, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("mRgbrgn%JCx", (Content) null, (-2674), (-2674));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2674), homeTexture0, (-2701), (-2701), (-23.30091F));
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertEquals((-2701), homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertNotNull(homeTexture1);
      assertEquals((-2674), homeEnvironment0.getGroundColor());
      assertEquals((-23.30091F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-2701), homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-1843));
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals((-1843), homeEnvironment0.getVideoWidth());
      assertEquals((-1382), int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, (-1.0F), (-1.0F), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-199), homeTexture0, (-199), homeTexture0, 13684944, 13684944);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getVideoWidth();
      assertEquals(320, int0);
      
      homeEnvironment0.getSkyTexture();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-199), homeEnvironment0.getGroundColor());
      assertEquals(1.3684944E7F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals((-199), homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("1.5.0_16", uRLContent0, (-2095.21F), (-2095.21F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(320, homeTexture0, 320, homeTexture0, 0, (-1.0F));
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getSkyColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals((-1.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(320, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(0, int0);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.4466856169199285
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setVideoQuality(12);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setAllLevelsVisible(true);
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals(12, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(28, (HomeTexture) null, 46, (HomeTexture) null, 28, 28);
      homeEnvironment0.setLightColor(46);
      homeEnvironment0.setSubpartSizeUnderLight((-1398.532F));
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setPhotoHeight((-1));
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals((-1398.532F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)17;
      byteArray0[1] = (byte)13;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth((-2602));
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals((-2602), int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-19), (HomeTexture) null, 830, 1094, (-19));
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setWallsAlpha(1094);
      homeEnvironment0.getVideoCameraPath();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.getWallsAlpha();
      homeEnvironment1.clone();
      assertEquals(AspectRatio.RATIO_16_9, homeEnvironment1.getPhotoAspectRatio());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(2146321226);
      homeEnvironment0.clone();
      assertEquals(2146321226, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.6376398674083723
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setAllLevelsVisible(true);
      Random.setNextRandom((-1301));
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setCeillingLightColor(12);
      int int0 = homeEnvironment0.getPhotoWidth();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(13427962);
      homeEnvironment0.setCeillingLightColor(13427962);
      assertEquals(13427962, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-1179));
      homeEnvironment0.clone();
      assertEquals((-1179), homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-1768));
      homeEnvironment0.clone();
      assertEquals((-1768), homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(13427964);
      homeEnvironment0.getVideoAspectRatio();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.clone();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (String) null, uRLContent0, 2454, 2454, (String) null, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2454, homeTexture0, 2454, homeTexture0, 2454, 2454);
      homeEnvironment0.getSkyTexture();
      assertEquals(2454, homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(2454, homeEnvironment0.getGroundColor());
      assertEquals(2454.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(2454, homeEnvironment0.getSkyColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HomeEnvironment.Property.values();
      CatalogTexture catalogTexture0 = new CatalogTexture("5,$'`vp", (Content) null, 3, (-594.0F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(3, homeTexture0, 3, homeTexture0, 3, (-594.0F));
      homeEnvironment0.getSkyTexture();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-594.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(3, homeEnvironment0.getGroundColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(3, homeEnvironment0.getLightColor());
      assertEquals(3, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = homeEnvironment0.getPhotoHeight();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(300, int0);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-2674));
      homeEnvironment0.setVideoWidth((-2674));
      homeEnvironment0.clone();
      assertEquals((-2005), homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight((-292.4F));
      homeEnvironment0.clone();
      assertEquals((-292.4F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(320, int0);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1), (HomeTexture) null, (-1), (HomeTexture) null, (-1), (-1));
      homeEnvironment0.setLightColor((-1));
      homeEnvironment0.setSubpartSizeUnderLight((-1398.532F));
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setPhotoHeight((-239));
      homeEnvironment0.clone();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getPhotoHeight();
      HomeEnvironment.Property.valueOf("GROUND_TEXTURE");
      homeEnvironment0.getLightColor();
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0, homeEnvironment1.getPhotoQuality());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertNotSame(homeEnvironment1, homeEnvironment0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(25);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getPhotoAspectRatio();
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(0, homeEnvironment1.getSkyColor());
      assertEquals(0, homeEnvironment1.getLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(0, homeEnvironment1.getGroundColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 1094, 0);
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(0, int0);
      
      homeEnvironment0.clone();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.getVideoCameraPath();
      float float0 = homeEnvironment1.getSubpartSizeUnderLight();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(0, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(1094, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor((-286));
      homeEnvironment0.clone();
      assertEquals((-286), homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(400);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(240, homeEnvironment1.getVideoHeight());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha((-1.0F));
      homeEnvironment0.clone();
      assertEquals((-1.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor((-1588));
      homeEnvironment0.clone();
      assertEquals((-1588), homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      
      homeEnvironment0.setGroundColor(13427964);
      homeEnvironment0.clone();
      assertEquals(13427964, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor((-473));
      homeEnvironment0.getVideoHeight();
      int int0 = homeEnvironment0.getSkyColor();
      assertEquals((-473), int0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality((-858));
      homeEnvironment0.clone();
      assertEquals((-858), homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality((-543));
      homeEnvironment0.clone();
      assertEquals((-543), homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(2146411820);
      homeEnvironment0.clone();
      assertEquals(2146411820, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setWallsAlpha(3251.9778F);
      homeEnvironment0.setPhotoQuality((-1436));
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getVideoHeight();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(1079);
      homeEnvironment0.clone();
      assertEquals(1079, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      CatalogTexture catalogTexture0 = new CatalogTexture("*xxuH1Ih,Kn|Y", (Content) null, 1.3333334F, 1.3333334F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(240, homeEnvironment1.getVideoHeight());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.2215523079930732
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoWidth(3);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getPhotoAspectRatio();
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, (-22), (-22));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.setVideoWidth((-22));
      homeEnvironment0.getDrawingMode();
      assertEquals((-16), homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(7);
      homeEnvironment0.clone();
      assertEquals(7, homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.085788413586281
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("g}3", propertyChangeListener0);
      homeEnvironment1.setPhotoHeight(400);
      homeEnvironment0.setVideoQuality(10);
      homeEnvironment1.setPhotoHeight(400);
      homeEnvironment1.getPhotoQuality();
      homeEnvironment1.setLightColor(0);
      homeEnvironment1.getVideoFrameRate();
      homeEnvironment0.setVideoWidth(400);
      homeEnvironment1.setVideoFrameRate(0);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getLightColor();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.isObserverCameraElevationAdjusted();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.setObserverCameraElevationAdjusted(false);
      assertEquals(400, homeEnvironment0.getVideoWidth());
      assertEquals(10, homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(1725);
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals(1294, homeEnvironment0.getVideoHeight());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.clone();
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(1.0F);
      homeEnvironment0.clone();
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(1.0F, float0, 0.01F);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(2146389667);
      assertEquals(2146389667, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(0);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(0, homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", (Content) null, 13427964, 0.0F, "t^fZx");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(13427964, homeTexture0, 13427964, homeTexture0, 13427964, 0.0F);
      homeEnvironment0.getGroundTexture();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(13427964, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", uRLContent0, 12, 12, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(12, homeTexture0, 12, homeTexture0, 12, 12);
      homeEnvironment0.getGroundTexture();
      assertEquals(12, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(12, homeEnvironment0.getLightColor());
      assertEquals(12.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(12, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(300);
      homeEnvironment0.clone();
      assertEquals(300, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = homeEnvironment0.getSkyColor();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13427964, int0);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setCeillingLightColor(11053224);
      assertEquals(11053224, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor((-3056));
      homeEnvironment0.clone();
      assertEquals((-3056), homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-1));
      homeEnvironment0.clone();
      assertEquals((-1), homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(13684944);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-19), (HomeTexture) null, 830, 1094, (-19));
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getGroundColor();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setAllLevelsVisible(true);
      int int0 = homeEnvironment0.getVideoHeight();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      assertEquals(240, int0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth((-741));
      homeEnvironment0.clone();
      assertEquals((-741), homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(3104);
      homeEnvironment0.clone();
      assertEquals(3104, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getDrawingMode();
      assertEquals(HomeEnvironment.DrawingMode.OUTLINE, homeEnvironment0.getDrawingMode());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(11053224);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-19), (HomeTexture) null, 830, 1094, (-19));
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.getVideoCameraPath();
      float float0 = homeEnvironment1.getWallsAlpha();
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(830, homeEnvironment1.getSkyColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals((-19.0F), float0, 0.01F);
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(1094, homeEnvironment1.getLightColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals((-19), homeEnvironment1.getGroundColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(240, homeEnvironment1.getVideoHeight());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(1644.645F);
      homeEnvironment0.clone();
      assertEquals(1644.645F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment1.getVideoHeight());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(1644.645F);
      homeEnvironment0.getVideoCameraPath();
      assertEquals(1644.645F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.isAllLevelsVisible();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_TEXTURE;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
  }
}
