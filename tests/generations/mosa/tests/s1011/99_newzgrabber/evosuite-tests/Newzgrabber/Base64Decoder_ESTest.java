/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 07 00:20:12 GMT 2020
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.Base64Decoder;
import Newzgrabber.BufferedCustomInputStream;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Base64Decoder_ESTest extends Base64Decoder_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(pipedInputStream0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)121;
      byteArray0[1] = (byte)121;
      byteArray0[2] = (byte)121;
      byteArray0[3] = (byte)61;
      byteArray0[4] = (byte)10;
      pipedOutputStream0.write(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(bufferedCustomInputStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream1, pipedOutputStream0);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream1);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(pipedInputStream0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)121;
      byteArray0[1] = (byte)121;
      byteArray0[2] = (byte)121;
      byteArray0[3] = (byte)97;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte)121;
      byteArray0[6] = (byte)10;
      byteArray0[7] = (byte)121;
      byteArray0[8] = (byte)10;
      pipedOutputStream1.write(byteArray0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      base64Decoder0.ABORT = true;
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(0L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream1);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(pipedInputStream0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)121;
      byteArray0[1] = (byte)121;
      byteArray0[2] = (byte)121;
      byteArray0[3] = (byte)97;
      byteArray0[4] = (byte)10;
      pipedOutputStream1.write(byteArray0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      try { 
        base64Decoder0.decodeStream();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Base64Decoder base64Decoder0 = new Base64Decoder((BufferedCustomInputStream) null, pipedOutputStream0);
      // Undeclared exception!
      try { 
        base64Decoder0.decodeStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.Base64Decoder", e);
      }
  }
}
