/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 14 16:31:47 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocument(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(1);
      ontologyTerm1.setTerm("fzfe%C)A^y");
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm2);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(boolean0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setColumnStart("1,");
      rawVariable0.setIdentifier((-2237));
      int int0 = rawVariable0.getIdentifier();
      assertEquals("1,", rawVariable0.getColumnStart());
      assertEquals((-2237), int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.form = null;
      rawVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      String string0 = rawVariable0.getForm();
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertNull(string0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"blank\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.7879630921004583
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      User user0 = new User();
      user0.setStatus("c4B@l+,6");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user0.setIdentifier((-937));
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.isNewRecord();
      Variable.validateFields(derivedVariable0);
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertTrue(derivedVariable0.isNewRecord());
      assertTrue(arrayList1.equals((Object)arrayList0));
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.8863990313046046
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("9_/')PvwvprBrY");
      rawVariable0.getCleaningDescription();
      rawVariable0.isNewRecord();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setName("blank");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.containsSourceVariable(derivedVariable1);
      Variable.validateFields(rawVariable0);
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.6002139492158043
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCoded(true);
      rawVariable0.form = null;
      rawVariable0.setAlias((String) null);
      rawVariable0.setCleaned(true);
      rawVariable0.getAlias();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User((String) null, (String) null);
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      rawVariable0.cloneAttributes(rawVariable1);
      assertTrue(rawVariable0.isCleaned());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.05569358184064
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(1380);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("1380", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.2085716838811678
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isCoded());
      
      rawVariable0.setCoded(true);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      boolean boolean0 = rawVariable0.isCoded();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.2827174188993857
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-1249));
      rawVariable0.setNotes("wdxwewB");
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getAlternativeVariable();
      assertEquals("-1249", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.6256878823154617
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      String string0 = rawVariable0.getName();
      assertNull(string0);
      
      rawVariable0.setCategory((String) null);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getSupportingDocuments();
      RawVariable rawVariable2 = (RawVariable)rawVariable1.clone();
      assertEquals("Unknown", rawVariable2.getAvailability());
      assertFalse(rawVariable2.isNewRecord());
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertFalse(rawVariable2.isCoded());
      assertEquals("Unknown", rawVariable2.getCategory());
      assertFalse(rawVariable2.isCleaned());
      assertEquals(0, rawVariable2.getIdentifier());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerm(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.1475861153491427
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "NO_ONTOLOGY_TERM_FILTER";
      derivedVariable0.createVariableSummary();
      User user0 = new User("variable.label.label", (String) null);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setFilePath((String) null);
      arrayList0.add((Variable) derivedVariable0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      arrayList0.add((Variable) derivedVariable0);
      user0.setCounty("variable.label.label");
      derivedVariable0.setSourceVariables(arrayList0);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setCategory("variable.label.label");
      derivedVariable0.getFilePath();
      derivedVariable0.getLabel();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.codeBookNumber = "";
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      Variable.validateFields(derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("Az");
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      derivedVariable1.getIdentifier();
      derivedVariable1.getYear();
      derivedVariable0.getForm();
      boolean boolean0 = derivedVariable0.isCoded();
      assertEquals("variable.label.label", derivedVariable0.getCategory());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.8949125178107615
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("?#9");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.clear();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      Object object0 = derivedVariable0.clone();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add((Variable) object0);
      arrayList1.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.columnEnd = null;
      Variable.validateFields(derivedVariable0);
      DerivedVariable.validateFields(derivedVariable0);
      derivedVariable0.getColumnEnd();
      derivedVariable0.isNewRecord();
      derivedVariable0.createVariableSummary();
      derivedVariable0.removeOntologyTerms(arrayList1);
      derivedVariable0.addSourceVariables(arrayList0);
      User user0 = new User();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("~");
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      rawVariable1.setName("~");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("~", rawVariable1.getDisplayName());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.4381098652423896
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.notes = "Uw/";
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("Uw/", rawVariable1.getNotes());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.6969987794394545
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-96));
      ontologyTerm1.setDescription((String) null);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      String string0 = rawVariable0.getCategory();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", string0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCoded(true);
      User user0 = new User("macaw.businessLayer.Variable", (String) null);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertFalse(rawVariable1.isCoded());
      assertTrue(rawVariable0.isCoded());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setColumnEnd("dA{Pz|6{A");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("dA{Pz|6{A", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getCodeBookNumber());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.1013448627418367
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setColumnStart("");
      ValueLabel valueLabel0 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setIdentifier(165);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.getIdentifier();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("");
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      rawVariable0.getNotes();
      rawVariable0.getForm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.getCleaningStatus();
      rawVariable0.getOntologyTerms();
      assertEquals("165", rawVariable0.getDisplayItemIdentifier());
      
      derivedVariable0.getNotes();
      derivedVariable0.getCodeBookNumber();
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("_ 6FeH{??jXE");
      User user0 = new User("_ 6FeH{??jXE", "_ 6FeH{??jXE");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("_ 6FeH{??jXE", rawVariable0.getLabel());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("_ 6FeH{??jXE");
      User user0 = new User("_ 6FeH{??jXE", "_ 6FeH{??jXE");
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("_ 6FeH{??jXE", rawVariable0.getLabel());
      assertFalse(arrayList0.isEmpty());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.setYear("XcpHDIp");
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      rawVariable0.getYear();
      assertEquals("XcpHDIp", rawVariable0.getYear());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.067461933429295
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setName("HY");
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("HY", rawVariable1.getName());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("^@");
      User user0 = new User("^@", "^@");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("^@", rawVariable0.getName());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.899779155719278
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber((String) null);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.ensureCapacity(8426);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.getAlias();
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getAlternativeVariable();
      derivedVariable0.getIdentifier();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-3295));
      rawVariable0.addOntologyTerm(ontologyTerm1);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      rawVariable0.getForm();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      System.setCurrentTimeMillis(1171L);
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "N0z'%Hd4Y;9 QYY";
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = null;
      String string0 = rawVariable0.getCleaningDescription();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertNotNull(string0);
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier(681);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(boolean0);
      
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.removeOntologyTerms(arrayList0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "general.fieldValue.blank";
      derivedVariable0.questionNumber = "general.fieldValue.blank";
      String string0 = derivedVariable0.getCleaningDescription();
      assertEquals("", string0);
      
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", variableSummary0.getLabel());
      assertEquals("", variableSummary0.getYear());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertEquals("", variableSummary0.getName());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier((-1));
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.898403985204121
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable0.setIdentifier(1366);
      User user0 = new User("(7juxz", "UNABLE_TO_DELETE_AVAILABILITY_STATE");
      User user1 = new User("NO_SUPPORTING_DOCUMENT_FILTER", "(7juxz");
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable0);
      assertEquals("1366", rawVariable0.getDisplayItemIdentifier());
      
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.6260602536649986
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, (Variable) null);
      assertFalse(derivedVariable1.isCoded());
      assertNull(macawChangeEvent0);
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setIdentifier((-1249));
      rawVariable1.setNotes("wdxwewB");
      rawVariable0.setAlternativeVariable(rawVariable1);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals((-1249), rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd(":(0Ux]SlE>");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals(":(0Ux]SlE>", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlias("supportingDocument.title.saveChanges");
      rawVariable1.setName("supportingDocument.title.saveChanges");
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("supportingDocument.title.saveChanges", rawVariable1.getAlias());
      assertEquals("supportingDocument.title.saveChanges", rawVariable1.getName());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setColumnEnd("HY");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      rawVariable0.getColumnEnd();
      assertEquals("HY", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.538193323799371
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setColumnStart((String) null);
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertTrue(arrayList0.isEmpty());
      
      String string0 = rawVariable0.getFilePath();
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals(0, rawVariable0.getIdentifier());
      assertNotNull(string0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.8969905499250896
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("i2`vj6yinD*k2Jz$");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      LinkedList<ValueLabel> linkedList0 = new LinkedList<ValueLabel>();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>(linkedList0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "i2`vj6yinD*k2Jz$";
      stringArray0[1] = "variable.label.label";
      stringArray0[2] = "variable.saveChanges.valueChanged";
      arrayList0.toArray(stringArray0);
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.setForm("variable.label.label");
      rawVariable0.getForm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      Variable.validateFields(rawVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.getAvailability();
      assertEquals("variable.label.label", rawVariable0.getForm());
      
      rawVariable1.setCleaned(true);
      rawVariable1.getCodeBookNumber();
      String string0 = rawVariable1.getColumnStart();
      assertEquals("", string0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("F");
      rawVariable0.setQuestionNumber("F");
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User("F", "F");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("F", rawVariable0.getLabel());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.5344062322939847
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      rawVariable0.getNotes();
      rawVariable0.setAlias("> yyf");
      rawVariable0.setForm("variable.notes.label");
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.5386400847822452
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("^@");
      User user0 = new User();
      rawVariable0.setYear("^@");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setName("^@");
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("^@", rawVariable1.getDisplayName());
      assertEquals("^@", rawVariable0.getYear());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = ";iZey!B3N,;[&4{g";
      derivedVariable0.getColumnStart();
      System.setCurrentTimeMillis(3L);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.9971515848932915
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("YV.0&0|:C+2}|WaNFf");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("YV.0&0|:C+2}|WaNFf", rawVariable0.getForm());
      assertEquals("", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "Unknown";
      rawVariable0.setCoded(false);
      rawVariable0.getQuestionNumber();
      rawVariable0.getLabel();
      assertEquals("Unknown", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("^@");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("^@", rawVariable0.getName());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("^|)@");
      rawVariable0.setCodeBookNumber("^|)@");
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("^|)@", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("^@");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("^@");
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("^@", rawVariable0.getName());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("^@");
      rawVariable0.setAvailability("^@");
      User user0 = new User("^@", "^@");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("^@", rawVariable0.getDisplayName());
      assertEquals("^@", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("g");
      rawVariable0.setLabel("g");
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User("g", "g");
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("g", rawVariable0.getLabel());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.282360045759959
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertFalse(rawVariable1.isCleaned());
      assertTrue(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.383522442827672
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertTrue(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      assertFalse(rawVariable1.isCoded());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(rawVariable1.isNewRecord());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.5803725724750626
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertEquals(0, derivedVariable1.getIdentifier());
      
      derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(derivedVariable0.isNewRecord());
      assertTrue(boolean0);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.6820748660026672
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.6305437208796447
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("^@");
      User user0 = new User("^@", "^@");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCleaningStatus("UNABLE_TO_DELETE_AVAILABILITY_STATE");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("^@", rawVariable0.getName());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = null;
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList0.size());
      
      String string0 = rawVariable0.getForm();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertNotNull(string0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.0568423728416314
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setDescription("ontologyTerm.term.label");
      ontologyTerm0.getDisplayName();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.form = "-LHA";
      rawVariable0.columnStart = "ontologyTerm.term.label";
      rawVariable0.setCleaned(true);
      rawVariable0.setIdentifier((-1211));
      Variable.validateFields(rawVariable0);
      rawVariable0.getAlias();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.isCleaned();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.554218296452355
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertTrue(arrayList0.isEmpty());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.583838507642472
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("5/G68");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("5/G68", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("%N2^");
      Variable.validateFields(rawVariable0);
      rawVariable0.getCodeBookNumber();
      assertEquals("%N2^", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.setOntologyTerms(arrayList0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.9971515848932915
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      Variable variable0 = rawVariable0.getAlternativeVariable();
      assertFalse(variable0.isNewRecord());
      assertFalse(variable0.isCoded());
      assertFalse(variable0.isCleaned());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.9239917261705064
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.isNewRecord();
      derivedVariable0.setIdentifier((-1558));
      derivedVariable0.questionNumber = "-";
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.createVariableSummary();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.clone();
      ontologyTerm0.getDisplayName();
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setNewRecord(false);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.setQuestionNumber("SHBKs[<Iq$Y");
      derivedVariable0.setCleaningDescription("user.phone.label");
      derivedVariable0.setCleaned(true);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.setIdentifier(716);
      derivedVariable0.getColumnStart();
      derivedVariable0.createVariableSummary();
      rawVariable0.setCoded(true);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable1);
      rawVariable0.clone();
      derivedVariable0.getAlternativeVariable();
      derivedVariable0.removeSourceVariable(rawVariable1);
      assertTrue(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.7462151539509665
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("O/");
      rawVariable0.setIdentifier(97);
      User user0 = new User("7j${U!z%$TE|d}\"A", "O/");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getDisplayName();
      rawVariable0.createVariableSummary();
      assertEquals("97", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(54);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier((-1717986916));
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.getYear();
      derivedVariable0.getAlias();
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.626722286104588
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.6264033068382404
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(true);
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.getName();
      rawVariable0.getCleaningDescription();
      rawVariable0.getValueLabels();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "as[Tw~}FU(%Z?{,>I";
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("as[Tw~}FU(%Z?{,>I", rawVariable0.getNotes());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("nocuWAPDPI&Jy");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("nocuWAPDPI&Jy", rawVariable0.getYear());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias(" type=");
      rawVariable0.setCleaned(true);
      rawVariable0.getAlias();
      assertEquals(" type=", rawVariable0.getAlias());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("(:a");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("(:a", rawVariable0.getForm());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("^@");
      User user0 = new User("^@", "^@");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getName();
      assertEquals("^@", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("DUPLICATE_VARIABLE");
      derivedVariable0.createVariableSummary();
      assertEquals("DUPLICATE_VARIABLE", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "macaw.system.MacawErrorType";
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getLabel());
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getDisplayName());
      assertEquals(0, variableSummary0.getIdentifier());
      
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(1, arrayList0.size());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("$pZ =?<I`xE?h1coR");
      rawVariable0.createVariableSummary();
      assertEquals("$pZ =?<I`xE?h1coR", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.7084216255763276
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory((String) null);
      derivedVariable0.setAlias((String) null);
      derivedVariable0.form = "B";
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.clone();
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getCategory();
      derivedVariable0.setAlias("B");
      assertEquals("B", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("UNABLE_TO_DELETE_ALIAS_FILE_PATH");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("UNABLE_TO_DELETE_ALIAS_FILE_PATH", rawVariable0.getCleaningDescription());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("JBb8gmKmQuGm");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.getOntologyTerms();
      derivedVariable0.createVariableSummary();
      assertEquals("JBb8gmKmQuGm", derivedVariable0.getYear());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("YHpM");
      derivedVariable0.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "variable.year.label";
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("variable.year.label", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getCleaningDescription();
      boolean boolean0 = rawVariable0.isCleaned();
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(boolean0);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = null;
      String string0 = derivedVariable0.getCodeBookNumber();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertNotNull(string0);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      rawVariable0.setLabel("PES");
      rawVariable0.getLabel();
      assertEquals("PES", rawVariable0.getLabel());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("Uw/");
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("Uw/", rawVariable0.getLabel());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList0);
      ArrayList<String> arrayList1 = Variable.validateFields(rawVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals(1, arrayList1.size());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.5806560020475704
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("&e02");
      derivedVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.getOntologyTerms();
      assertEquals("&e02", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.6264033068382404
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("general.error.blankField");
      rawVariable0.clone();
      assertEquals("general.error.blankField", rawVariable0.getCleaningDescription());
      
      derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("variable.year.label");
      derivedVariable0.clone();
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertTrue(ontologyTerm0.isNewRecord());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.539665843289319
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("UNABLE_TO_GET_ORIGINAL_CATEGORY");
      rawVariable0.clone();
      rawVariable0.clone();
      assertEquals("UNABLE_TO_GET_ORIGINAL_CATEGORY", rawVariable0.getForm());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.6809796293259174
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("T");
      Variable.validateFields(rawVariable0);
      rawVariable0.clone();
      assertEquals("T", rawVariable0.getName());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.6256902943605223
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(false);
      rawVariable0.getName();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes(",|/OhY;%4d'@kRG[ro");
      derivedVariable0.getNotes();
      assertEquals(",|/OhY;%4d'@kRG[ro", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "general.fieldValue.unknown";
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("general.fieldValue.unknown", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setFilePath("UNABLE_TO_UPDATE_DERIVED_VARIABLE");
      rawVariable0.getFilePath();
      assertEquals("UNABLE_TO_UPDATE_DERIVED_VARIABLE", rawVariable0.getFilePath());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("variable.alias.label");
      rawVariable0.getValueLabels();
      assertEquals("variable.alias.label", rawVariable0.getYear());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getColumnEnd();
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getQuestionNumber();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      derivedVariable0.getSupportingDocuments();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.getFilePath();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList0);
      ArrayList<String> arrayList1 = Variable.validateFields(rawVariable0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(1, arrayList1.size());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("UNABLE_TO_GET_CATEGORIES_FOR_VARIABLE");
      rawVariable0.getNotes();
      assertEquals("UNABLE_TO_GET_CATEGORIES_FOR_VARIABLE", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("iXN7SnG%c#aq/,");
      rawVariable0.clone();
      assertEquals("iXN7SnG%c#aq/,", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("0(2f~6vY3=})I.!,");
      derivedVariable0.clone();
      derivedVariable0.getOntologyTerms();
      assertEquals("0(2f~6vY3=})I.!,", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = " (ip]H+7k%~tz^re$I:";
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getColumnEnd());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getLabel());
      assertEquals(" (ip]H+7k%~tz^re$I:", rawVariable1.getNotes());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getName());
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("q+ioKNamrdF)zqdf(");
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      int int0 = rawVariable1.getIdentifier();
      assertEquals("q+ioKNamrdF)zqdf(", rawVariable0.getLabel());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=3.668619868083795
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      derivedVariable1.getCodeBookNumber();
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("UNABLE_TO_CHECK_ONTOLOGY_TERM_ASSOCIATION_DUPLICATE");
      rawVariable0.getCategory();
      assertEquals("UNABLE_TO_CHECK_ONTOLOGY_TERM_ASSOCIATION_DUPLICATE", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.removeSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument1);
      boolean boolean0 = rawVariable0.isNewRecord();
      assertFalse(boolean0);
      
      String string0 = rawVariable0.getDisplayItemIdentifier();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", string0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=3.6256902943605223
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("U3Pgm.xWE*U!ZY5dd!");
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertEquals("U3Pgm.xWE*U!ZY5dd!", derivedVariable0.getAlias());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.getDisplayName();
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
  }
}
