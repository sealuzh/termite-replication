/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 14 15:48:27 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.UnsupportedEncodingException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.6959678633352593
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      System.setCurrentTimeMillis(0L);
      Player player1 = new Player(5593, (String) null, (String) null, (-990));
      Player player2 = new Player((-994), (String) null, (String) null, 2146643803, (-2883));
      player2.setJoinOK(player0, true);
      System.setCurrentTimeMillis(15000L);
      System.setCurrentTimeMillis(15000L);
      player2.isJoinOK(player1, false);
      player2.isJoinOK(player0, false);
      // Undeclared exception!
      try { 
        player1.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.5831222243737346
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      System.setCurrentTimeMillis((short)4919);
      Player player1 = new Player((short)4919, "0.0.0.0", ".*[.]class$", (short)4919);
      player1.reset(false);
      player1.setJoinOK(player0, true);
      Player player2 = new Player((short)4919, ".*[.]class$", "oHHrO@2BLPd(k>NyUN", (-4733));
      player0.isJoinOK(player2, false);
      System.setCurrentTimeMillis((short)4919);
      System.setCurrentTimeMillis(2147324586);
      player1.isJoinOK(player0, false);
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals(4919, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(0, player0.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertFalse(boolean0);
      assertEquals("Player-1", player0.getName());
      assertEquals(1, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.125543816101745
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(5, "state.Party", 4919);
      player0.setY(4919);
      Player player1 = new Player(25600, "state.Party", "", (-726));
      Player player2 = new Player();
      player1.setJoinOK(player2, false);
      player1.setMoney(78.38F);
      player0.setX(0.0F);
      player1.type();
      player1.setDead(1L);
      player1.isConnected();
      player0.setZ(1.0F);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte) (-95);
      byteArray0[2] = (byte) (-37);
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte)2;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-24784), (byte)5);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (byte)48);
      bufferedInputStream0.markSupported();
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.0543110595891974
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player();
      player0.isJoinOK(player0, true);
      Player player1 = new Player();
      player0.setX(1.0F);
      Player player2 = new Player((short)4919, "O", (String) null, (short)4919);
      int int0 = Packable.GAME_STATE;
      Player player3 = new Player();
      player3.isConnected();
      player3.setJoinOK(player1, false);
      player3.setMoney(0.1F);
      assertEquals(0.1F, player3.getMoney(), 0.01F);
      
      player0.setZ(0.0F);
      player1.getIP();
      player1.setJoinOK(player0, true);
      player0.isJoinOK(player1, true);
      Player player4 = new Player((short)4919, "gui.ModuleBrowserDialog$ModuleFilter", (short)4919);
      player2.toString();
      assertEquals(4919, player2.getPictureId());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player((-2721), ":xL`G2tltkYU`H", (-2721));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player((-1283));
      player0.setY(0.0F);
      Player player1 = new Player(3211, "!<`fEiVyIG buU_0^~", "|", (-1449));
      Party party0 = player1.prev;
      player0.prev = null;
      player0.setMoney((-1283));
      player0.pack();
      System.setCurrentTimeMillis(1L);
      float float0 = player0.getMoney();
      assertEquals((-1283.0F), float0, 0.01F);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.415779257625656
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(5, "", 21195);
      player0.setY(5);
      player0.setDead((long) 5);
      player0.pack();
      Player player1 = new Player(5, "B", "B", 21195);
      player0.isJoinOK(player1, false);
      player0.setX((-1.0F));
      player0.type();
      player1.isConnected();
      player0.setZ(485.72723F);
      player0.getIP();
      player0.setJoinOK(player1, false);
      player1.isJoinOK(player0, true);
      player1.isDead();
      int int0 = Packable.UNDEFINED;
      player0.setZ((-816.63F));
      player1.gangStrength();
      float float0 = player0.getX();
      assertEquals(5.0F, player0.getY(), 0.01F);
      assertEquals((-1.0F), float0, 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.051435843948024
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player((-2949));
      player0.setDead((long) (-2949));
      Player player1 = new Player(2147340535, "-z@ZgD#:+3", "A1", (-4754));
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player2 = new Player();
      player0.isConnected();
      player0.setZ((-1955.2329F));
      player0.getIP();
      player2.setJoinOK(player1, true);
      Player player3 = new Player((-708), "", 25655);
      player1.getTimeOfDeath();
      player0.getTimeOfDeath();
      assertEquals((-2949L), player0.getTimeOfDeath());
      
      float float0 = player2.getZ();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.304704691639832
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player((-2625), "", (String) null, 2564);
      Player player1 = new Player((-2625), "", 1);
      player0.setJoinOK(player1, false);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(boolean0);
      
      player0.getName();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(2564, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.9727115278367817
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Player player1 = new Player((-701), "h_BAVt-?/F0iE", "", 811);
      player1.isJoinOK(player0, true);
      Player player2 = new Player();
      player1.setX(5180.0F);
      player0.isConnected();
      player2.setZ((-1130.4452F));
      player1.getIP();
      player1.setJoinOK(player0, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player3 = new Player(31236, "", "", (-1737));
      player3.isJoinOK(player2, true);
      player2.getZ();
      assertEquals((-1130.4452F), player2.getZ(), 0.01F);
      
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.53575050789886
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player((-297), "g*", "g*", (-297));
      player0.setY((-297));
      player0.setDead((long) (-297));
      byte[] byteArray0 = player0.pack();
      Player player1 = new Player((-701), "TP6=z!:y", "RXU[(|<nwD", (-1079));
      player1.isJoinOK(player0, false);
      Player player2 = new Player();
      player1.setX(1501.804F);
      player2.type();
      player1.isConnected();
      player1.setZ(25600);
      player0.getIP();
      player2.setJoinOK(player1, true);
      player1.isJoinOK(player0, false);
      player2.isDead();
      player2.unpack(byteArray0);
      float float0 = player0.getY();
      assertEquals((-297L), player0.getTimeOfDeath());
      assertEquals((-297.0F), float0, 0.01F);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(0, "PUg%bv>D^S%OYA", "PUg%bv>D^S%OYA", 0, 0);
      int int0 = player0.gangStrength();
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player((-250), "gvlKbN\"d^Wrl{h9]bV", "gvlKbN\"d^Wrl{h9]bV", 2712, (-250));
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-5);
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte) (-12);
      byteArray0[3] = (byte)55;
      byteArray0[4] = (byte)72;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      
      player0.pack();
      assertEquals(2712, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals((-250), player0.getStrength());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = false;
      Player player1 = null;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((-2949), "", "QzBJb SCc=xmlOlz!jC", (-2949));
      assertEquals(0.0F, player1.getZ(), 0.01F);
      
      player1.setZ(0.2F);
      Player player2 = new Player((short)4919, "QzBJb SCc=xmlOlz!jC", "QzBJb SCc=xmlOlz!jC", (-2949), 1067);
      player2.getIP();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.isJoinOK(player1, false);
      player1.getZ();
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(248, (String) null, "", 1);
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(1);
      player0.getName();
      assertEquals(1.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.196422294125466
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(4, "", 228);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFile mockFile0 = new MockFile(".iVB7.a9'i!`8x");
      Player player1 = new Player((-40), ".iVB7.a9'i!`8x", "e^9sg", (short)4919, 1019);
      player1.setDead((long) 228, false);
      player0.setY(1158.0F);
      player1.pack();
      player0.getIP();
      player1.setX((-40));
      player0.getPictureId();
      player0.setY(3651.0098F);
      player0.getMoney();
      Player player2 = new Player((-40), "0.0.0.0", "gui.ModuleBrowserDialog$ModuleFilter", (-40));
      player0.next = (Party) player2;
      player2.setMoney(1158.0F);
      player0.setJoinOK(player1, false);
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.051435843948024
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(1938);
      Party party0 = new Party();
      player0.remove(party0);
      Player player1 = new Player((short)4919, (String) null, (-2419));
      player0.setDead((long) (-1646), false);
      player0.setMoney(1938);
      player1.isConnected();
      player1.getPictureId();
      Player player2 = new Player((short)4919, "X", "", (-2419));
      player0.setJoinOK(player2, true);
      Player player3 = new Player((short)4919);
      player3.pack();
      player3.setY(0.2F);
      player2.getStrength();
      int int0 = player3.getStrength();
      assertEquals(0.2F, player3.getY(), 0.01F);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player();
      player0.setX(4581.3657F);
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.9417429777213613
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(player1.isConnected());
      assertEquals(0, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals("Player-1", player1.getName());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertTrue(boolean0);
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(boolean0);
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isJoinOK(player0, true);
      assertFalse(player0.isDead());
      assertTrue(boolean0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(1272, (String) null, "", 0);
      boolean boolean0 = player0.isConnected();
      String string0 = player0.getIP();
      assertNull(string0);
      
      boolean boolean1 = player0.isDead();
      assertFalse(boolean1 == boolean0);
      
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte)53;
      byteArray0[2] = (byte) (-27);
      player0.setX(0.0F);
      player0.type();
      float float0 = player0.getX();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.9663881312694826
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(4162);
      player0.setY(0.0F);
      player0.setMoney(4162);
      player0.setDead();
      player0.head = null;
      player0.isDead();
      player0.getIP();
      player0.setY(4162);
      player0.id = 0;
      player0.reset(true);
      player0.isConnected();
      player0.id = 0;
      player0.toString();
      player0.getY();
      MockFile mockFile0 = new MockFile("", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ");
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream(mockFile0, "");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // 
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(0, " $$&:(s*Y0NLDbfc~d", " $$&:(s*Y0NLDbfc~d", 0, 0);
      player0.pack();
      int int0 = player0.getStrength();
      assertEquals(0, int0);
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[2];
      player0.setDead((-2895L), true);
      byteArray0[0] = (byte)24;
      player0.unpack(byteArray0);
      int int0 = player0.gangStrength();
      assertEquals((-2895L), player0.getTimeOfDeath());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(4919, (String) null, 4919);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player((-1149), "RF`(pE+6-AT;ba~oc", (-1149));
      byte[] byteArray0 = player0.pack();
      player0.gangStrength();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (short)4919);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(1072);
      MockPrintStream mockPrintStream0 = new MockPrintStream("v33g");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      player0.pack(dataOutputStream0);
      String string0 = player0.toString();
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player1072", string0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player(5, "state.Party", 4894);
      player0.setMoney(1.0F);
      player0.getMoney();
      assertEquals(1.0F, player0.getMoney(), 0.01F);
      
      Player player1 = new Player(24415, "*4MR", 4894);
      assertEquals(4894, player1.getPictureId());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player((-629), "YXeC~", "YXeC~", (-629), (-177));
      int int0 = player0.gangStrength();
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals((-629), player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-177), int0);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party();
      player0.head = party0;
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player((-2968), "", "", (-2968));
      player0.setConnected(false);
      player0.setDead((-107L), true);
      player0.setDead((-107L), true);
      player0.setDead(1282L, false);
      long long0 = player0.getTimeOfDeath();
      assertTrue(player0.isDead());
      assertEquals(1282L, long0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(1442, "", 1442);
      int int0 = player0.getStrength();
      assertEquals(1, int0);
      
      player0.toString();
      assertEquals(1442, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(1938);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)95;
      player0.setDead((long) (byte)95, false);
      player0.isConnected();
      player0.getPictureId();
      player0.setY((-1013.24F));
      int int0 = player0.getStrength();
      assertEquals(95L, player0.getTimeOfDeath());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, false);
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.toString());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead((-1L));
      player0.setConnected(false);
      player0.getMoney();
      player0.isConnected();
      player0.setDead(1688L);
      assertEquals(1688L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player();
      assertTrue(player0.isConnected());
      
      player0.setConnected(false);
      player0.pack();
      assertFalse(player0.isConnected());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player(132);
      player0.setMoney(132);
      player0.getY();
      player0.toString();
      assertEquals(132.0F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)0;
      player0.unpack(byteArray0);
      player0.pack();
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead((long) (short)4919, true);
      player0.pack();
      assertEquals(4919L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player((-297), "", (-2946));
      Player player1 = new Player((-2946), "", "?|Ccso#{.6144t", (-297));
      String string0 = player1.getIP();
      assertEquals("", string0);
      
      player1.setJoinOK(player0, true);
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertTrue(boolean0);
      
      Player player2 = new Player((-297), "?|Ccso#{.6144t", (-2946));
      assertEquals("0.0.0.0", player2.getIP());
      assertEquals((-2946), player2.getPictureId());
      assertTrue(player2.isConnected());
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertFalse(player2.isDead());
      assertEquals(0L, player2.getTimeOfDeath());
      assertEquals(1, player2.getStrength());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ(0.0F);
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      assertEquals((-1), player0.getId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getZ(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.toString());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player();
      player0.setY((short)4919);
      int int0 = player0.gangStrength();
      assertEquals(4919.0F, player0.getY(), 0.01F);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      float float0 = player0.getX();
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(10.0F, float0, 0.01F);
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player((-2949));
      String string0 = player0.getIP();
      assertEquals("0.0.0.0", string0);
      
      player0.pack();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("Player-2949", player0.getName());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player();
      int int0 = player0.getStrength();
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, int0);
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(true);
      player0.pack();
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(0L, player0.getTimeOfDeath());
      
      player0.setDead((-1L));
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead(584L, false);
      player0.isDead();
      int int0 = Packable.UNDEFINED;
      Player player1 = new Player(893, "", 893);
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      assertEquals(584L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Player player0 = new Player();
      String string0 = player0.toString();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", string0);
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Player player0 = new Player();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, (short)4919);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player-1", player0.getName());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(boolean0);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Player player0 = new Player();
      player0.setX(3519.92F);
      player0.pack();
      assertEquals(3519.92F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Player player0 = new Player();
      String string0 = player0.getName();
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("Player-1", string0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }
}
