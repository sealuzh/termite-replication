/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 14 13:09:06 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.027377075708073
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      player0.setJoinOK(player0, true);
      Player player1 = new Player();
      System.setCurrentTimeMillis(1392409296346L);
      player1.add(player0);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(boolean0);
      assertFalse(player1.isDead());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player-1", player1.toString());
      assertTrue(player1.isConnected());
      assertEquals(0, player1.getPictureId());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.027377075708073
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      player0.setJoinOK(player0, true);
      Player player1 = new Player();
      System.setCurrentTimeMillis(1392409296320L);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(boolean0);
      assertEquals("Player-1", player1.toString());
      assertEquals(0, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals(1, player1.getStrength());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.0497978423100225
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX((-1.0F));
      player0.isDead();
      Player player1 = new Player((short)4919, "~|Z`K", "", (-119), (short)4919);
      player0.isConnected();
      player0.pack();
      player1.getSubparty();
      player1.reset(true);
      player1.getZ();
      PipedInputStream pipedInputStream0 = new PipedInputStream((short)4919);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      player1.unpack(dataInputStream0);
      player1.getX();
      float float0 = player0.getX();
      assertEquals((-1.0F), float0, 0.01F);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = true;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertFalse(boolean0);
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.getName());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertFalse(player1.isDead());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertTrue(player1.isConnected());
      assertTrue(boolean0);
      assertEquals(0, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player-1", player1.getName());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.7874335778425303
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player();
      player0.setX(0);
      player0.pack();
      player0.setDead();
      player0.setDead();
      player0.setDead((long) 236, false);
      player0.isJoinOK(player0, true);
      player0.getX();
      player0.pack();
      assertEquals(236L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.790389971042826
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      
      Player player1 = new Player((-396), "mO!A&=t[r7VyN;", "module.ModuleBrowserDialog$ModuleFilter", (-11898));
      player1.id = (int) (short)4919;
      Player player2 = new Player((-396), "nI", "", 0, 0);
      Player player3 = new Player(2280, "asm_vy", "state.Party", 0);
      player3.isJoinOK(player1, true);
      player2.pack();
      int int0 = player1.type();
      assertEquals(5, int0);
      
      player1.pack();
      player1.isJoinOK(player2, false);
      assertEquals((-11898), player1.getPictureId());
      assertEquals(1, player1.getStrength());
      
      int int1 = player2.getStrength();
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertTrue(player2.isConnected());
      assertFalse(player2.isDead());
      assertEquals(0L, player2.getTimeOfDeath());
      assertEquals(0, int1);
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertEquals("nI", player2.getIP());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player((-1930));
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)113;
      byteArray0[1] = (byte) (-34);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)31;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1930), (byte)113);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(1, "Zo9-G", (-152));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.setMoney(95.13711F);
      player0.setY(1);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte) (-119);
      byteArray0[2] = (byte) (-28);
      byteArray0[3] = (byte) (-6);
      byteArray0[4] = (byte)35;
      byteArray0[5] = (byte) (-23);
      byteArray0[6] = (byte)45;
      player0.unpack(byteArray0);
      player0.getX();
      float float0 = player0.getY();
      assertEquals(95.13711F, player0.getMoney(), 0.01F);
      assertEquals(1.0F, float0, 0.01F);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player((-5655));
      player0.setY((-616.8F));
      float float0 = player0.getY();
      assertEquals((-616.8F), float0, 0.01F);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.markSupported();
      Player player1 = new Player((byte)0, (String) null, "j", (byte)0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(3, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.9676652704776565
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      System.setCurrentTimeMillis((-108L));
      Player player0 = new Player((-3389), (String) null, (String) null, (-3719), (-3376));
      Player player1 = new Player();
      player0.setDead(2490L, true);
      player1.setY(1431.0F);
      player0.next = (Party) player1;
      player0.reset(false);
      player0.id = 238;
      player0.getY();
      player0.getY();
      player1.isJoinOK(player0, true);
      player0.toString();
      int int0 = player0.getStrength();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-3376), int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.970620935502287
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(806, "Ft1bl>-VWY@W1FK2", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", 0, 0);
      Player player1 = new Player();
      player0.prev = (Party) player1;
      Player player2 = new Player(806, "Ft1bl>-VWY@W1FK2", "Ft1bl>-VWY@W1FK2", 4919, 0);
      player0.setJoinOK(player2, false);
      player2.setY(0);
      player2.setX(0.1F);
      player2.setDead((long) 806);
      long long0 = player2.getTimeOfDeath();
      assertEquals(0.1F, player2.getX(), 0.01F);
      assertEquals(806L, long0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.051435843948024
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      Player player0 = new Player(1827, (String) null, (String) null, (-549), 2838);
      player0.unpack(dataInputStream0);
      int int0 = Packable.GAME_EVENT;
      Player player1 = new Player((short)4919, (String) null, "H+-RD.NGFmN<H@pt\u0002{", 5);
      player0.isJoinOK(player1, true);
      player0.getY();
      byte[] byteArray0 = player1.pack();
      player1.unpack(byteArray0);
      assertEquals(55, player1.getId());
      
      player0.getIP();
      player0.reset(false);
      assertEquals(2838, player0.getStrength());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.7518685126965625
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = "\"AOqV9)s3$v0r5RB";
      int int0 = 236;
      Player player0 = new Player(0, "\"AOqV9)s3$v0r5RB", "\"AOqV9)s3$v0r5RB", 236);
      Party party0 = new Party(236);
      player0.head = party0;
      player0.setDead((-670L));
      player0.pack();
      player0.setDead();
      player0.setZ(0);
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.574729047527649
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player(10, "3Qkz7m)p!/Wgj>64\"", 10);
      player1.add(player0);
      int int0 = player1.gangStrength();
      assertEquals(2, int0);
      
      player1.setJoinOK(player0, false);
      player0.pack();
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertFalse(boolean0);
      assertEquals(10, player1.getPictureId());
      
      float float0 = Player.MOVE_DISTANCE;
      byte[] byteArray0 = player0.pack();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(29, byteArray0.length);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(2838, (String) null, 2838);
      player0.getName();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(2838, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.3042644954097065
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setX(0);
      player0.setZ((-1012.68976F));
      player0.setX(0);
      player0.pack();
      player0.getIP();
      player0.pack();
      Player player1 = new Player((short)4919, "", ";GhQ.X33D7ul>i~", (short)4919);
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      Player player2 = new Player(8);
      player2.isDead();
      player2.gangStrength();
      player2.isJoinOK(player1, false);
      player1.getY();
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      player0.getIP();
      player1.reset(true);
      player0.getZ();
      assertEquals((-1012.68976F), player0.getZ(), 0.01F);
      
      boolean boolean0 = player2.unpack(dataInputStream0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player(2817, "??~/&~-", "", 232);
      player0.setDead();
      player0.setDead();
      player0.toString();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player((-1029), (String) null, (String) null, (-1029));
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player((-489), "Player", "Player", 2841, 2841);
      player0.setDead();
      boolean boolean0 = player0.isDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.9713931362744876
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player((-946), "", 10);
      player0.setMoney((-946));
      player0.setY(1152.2F);
      player0.getMoney();
      player0.getX();
      player0.setDead((-1815L), true);
      player0.setX(10);
      player0.setX(15.2F);
      player0.setY(0.0F);
      player0.setMoney(15.2F);
      player0.pack();
      player0.type();
      assertEquals((-1815L), player0.getTimeOfDeath());
      
      Player player1 = new Player();
      player1.pack();
      assertEquals("Player-1", player1.getName());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player();
      player0.add(player0);
      assertTrue(player0.isConnected());
      
      player0.setConnected(false);
      player0.pack();
      player0.isConnected();
      player0.pack();
      assertFalse(player0.isConnected());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = (-103);
      Player player0 = new Player((-103), "b@ubfSuX", (-103));
      player0.setDead();
      player0.getPictureId();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-49);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)119;
      byteArray0[5] = (byte) (-99);
      // Undeclared exception!
      try { 
        dataInputStream0.readFully(byteArray0, (int) (byte) (-49), (-1152));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)112;
      byteArray0[1] = (byte) (-125);
      byteArray0[2] = (byte) (-108);
      player0.unpack(byteArray0);
      player0.pack();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.getName());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "module.ModuleBrowserDialog$ModuleFilter");
      Player player0 = new Player((-1360), "module.ModuleBrowserDialog$ModuleFilter", "", 3608, (-80));
      int int0 = player0.getStrength();
      assertEquals((-80), int0);
      
      float float0 = player0.getX();
      assertEquals(3608, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("module.ModuleBrowserDialog$ModuleFilter", player0.getIP());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.970620935502287
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(806, "Ft1bl>-VWY@W1FK2", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", 0, 0);
      Player player1 = new Player();
      player0.prev = (Party) player1;
      Player player2 = new Player(806, "Ft1bl>-VWY@W1FK2", "0.0.0.0", 4919, 0);
      player0.setJoinOK(player2, false);
      player2.setY(0);
      player2.setX(0.1F);
      player2.setDead((-1L));
      long long0 = player2.getTimeOfDeath();
      assertEquals(0.1F, player2.getX(), 0.01F);
      assertEquals((-1L), long0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player(12037, "Hx:4P-)mR`QtHv*&KO", ")t4}05`zK1]D4YM|f", 12037, 12037);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(boolean0);
      assertEquals("Player-1", player0.getName());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      
      int int0 = player1.getStrength();
      assertEquals(12037, int0);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(12037, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals("Hx:4P-)mR`QtHv*&KO", player1.getIP());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(5, "", "", 5);
      player0.pack();
      player0.getName();
      assertEquals(1, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(5, player0.getPictureId());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.9720861369674885
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player((-5343), "R", "", 2294, (-5343));
      player0.setDead((long) 2294);
      player0.isConnected();
      player0.setY((-5343));
      player0.setMoney(1.0F);
      player0.getName();
      player0.id = (-5343);
      player0.gangStrength();
      player0.getMoney();
      player0.setY(1.0F);
      player0.setMoney(2294);
      player0.isConnected();
      player0.setDead((-1702L));
      player0.head = null;
      player0.type();
      player0.getName();
      InputStream inputStream0 = null;
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-5343));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.853253087436612
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party((short)4919);
      player0.remove(party0);
      Player player1 = new Player(5, (String) null, "aI&Xo!#R>QIa5]", (-22478), (-1));
      player0.isJoinOK(player1, false);
      player1.setDead((-2535L));
      player1.remove(player0);
      player0.setDead(6217L);
      player1.gangStrength();
      player0.reset(false);
      player0.getY();
      float float0 = player1.getY();
      assertEquals((-2535L), player1.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(256, "", "", 256, 256);
      player0.pack();
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(256, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(256, player0.getStrength());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player(0, "{%Bv{-]*r", "{%Bv{-]*r", 3, 0);
      player0.gangStrength();
      MockPrintStream mockPrintStream0 = new MockPrintStream("{%Bv{-]*r");
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals("Player4919", player1.toString());
      assertEquals(0, player1.getPictureId());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream((short)4919);
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(29, byteArrayOutputStream0.size());
      assertEquals("\u00137\uFFFD\u0000\u0001\u0000\u0000A \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\bPlayer-1", byteArrayOutputStream0.toString());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.8148657896913192
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player();
      String string0 = player0.toString();
      assertEquals("Player-1", string0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player((-8), "", "", (-8), (-8));
      player0.getIP();
      Party party0 = player0.prev;
      player0.boss = null;
      Player player1 = new Player((short)4919, "f#?6Wrv", 87);
      player0.reset(false);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals((-8), player0.getStrength());
      
      int int0 = player1.type();
      assertEquals(87, player1.getPictureId());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(5, int0);
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player(0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0);
      String string0 = player0.toString();
      assertEquals("Player0", string0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player();
      String string0 = player0.getName();
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", string0);
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.048820325203473
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player(2, "eyY!fS(AZ~O+,G/pmP$", 2);
      player0.isConnected();
      player0.gangStrength();
      player0.pack();
      player0.setDead(0L);
      player0.getIP();
      player0.type();
      player0.getPictureId();
      player0.getStrength();
      player0.getIP();
      player0.getY();
      float float0 = player0.getMoney();
      assertTrue(player0.isDead());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player();
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      player0.pack();
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("Player-1", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(0L, player0.getTimeOfDeath());
      
      player0.setDead(1L);
      player0.pack();
      assertEquals("Player-1", player0.toString());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.1731248118492754
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player(4061, "gui.ModuleBrowserDialog$ModuleFilter", "gui.ModuleBrowserDialog$ModuleFilter", 0, 1);
      player0.setDead((long) 0);
      player0.getZ();
      player0.setZ(1);
      player0.setDead();
      player0.reset(false);
      player0.isConnected();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-88);
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)80;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      player0.unpack(byteArray0);
      player0.reset(true);
      player0.getTimeOfDeath();
      player0.getPictureId();
      float float0 = player0.getZ();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1.0F, float0, 0.01F);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      int int0 = player0.getStrength();
      assertEquals(1, int0);
      
      float float0 = player0.getX();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals((-1), player0.getId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player-1", player0.getName());
      assertEquals(0.0F, player0.getZ(), 0.01F);
      assertEquals(10.0F, float0, 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.1958550791509905
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player(2, "eyY!fS(AZ~O+,G/pmP$", 5);
      player0.isConnected();
      Player player1 = new Player();
      Player player2 = new Player(5, "`<Je", "eyY!fS(AZ~O+,G/pmP$", 3);
      player2.pack();
      player1.setDead((long) 2);
      player0.setDead((long) 2);
      player0.setMoney(2);
      player1.getIP();
      player0.getPictureId();
      player1.getStrength();
      player0.getY();
      assertEquals(2L, player0.getTimeOfDeath());
      
      float float0 = player2.getMoney();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      player0.pack();
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[2];
      player0.unpack(byteArray0);
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      int int0 = player0.type();
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(5, int0);
      assertTrue(player0.isConnected());
      assertEquals("Player-1", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ((short)4919);
      int int0 = player0.getStrength();
      assertEquals(4919.0F, player0.getZ(), 0.01F);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Player player0 = new Player();
      player0.isDead();
      Player player1 = new Player((short)4919, "~|Z`K", "", (-119), (short)4919);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertFalse(boolean0);
      
      byte[] byteArray0 = player0.pack();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(29, byteArray0.length);
      
      player1.getSubparty();
      player1.reset(false);
      float float0 = player1.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream((short)4919);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      player1.unpack(dataInputStream0);
      float float1 = player1.getX();
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals("~|Z`K", player1.getIP());
      assertEquals(4919, player1.getStrength());
      assertEquals(10.0F, float1, 0.01F);
      assertEquals((-119), player1.getPictureId());
      assertEquals(0.0F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Player player0 = new Player(335, " ", 335);
      int int0 = player0.getPictureId();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(335, int0);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Player player0 = new Player(256, "to0F2.k", "to0F2.k", 256, 256);
      player0.id = 256;
      long long0 = player0.getTimeOfDeath();
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(256, player0.getStrength());
      assertEquals(256, player0.getPictureId());
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, false);
      boolean boolean0 = player0.isConnected();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("Player-1", player0.getName());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(boolean0);
      assertFalse(player0.isDead());
  }
}
