/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 14 13:12:15 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.865478073434939
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "`qR0+C$g?%_m(?lz2g)";
      rawVariable0.setIdentifier((-556));
      rawVariable0.setCoded(true);
      rawVariable0.getCleaningDescription();
      Variable.validateFields(rawVariable0);
      rawVariable0.setColumnEnd("");
      rawVariable0.getFilePath();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.getIdentifier();
      derivedVariable0.getCategory();
      derivedVariable0.getOntologyTerms();
      rawVariable0.setIdentifier((-556));
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setIdentifier((-1842417338));
      rawVariable0.setAlternativeVariable(rawVariable1);
      assertEquals("-1842417338", rawVariable1.getDisplayItemIdentifier());
      
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(1084);
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.setQuestionNumber("UemcUAW||");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument1);
      rawVariable0.getColumnEnd();
      rawVariable0.getDisplayName();
      rawVariable0.getLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getAvailability();
      assertEquals("UemcUAW||", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.6211158458265547
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setName((String) null);
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable2, rawVariable1);
      assertEquals(0, arrayList0.size());
      
      String string0 = rawVariable0.getName();
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertNull(string0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.705083803051434
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      User user0 = new User("pUIoo .\u0000)j}", "pUIoo .\u0000)j}");
      user0.setCounty("WUY8qvq@k");
      user0.setStatus("pUIoo .\u0000)j}");
      user0.setIdentifier((-1374));
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "pUIoo .\u0000)j}";
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.clone();
      rawVariable0.getAvailability();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setIdentifier((-1374));
      Variable.validateFields(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.setCleaningStatus("pUIoo .\u0000)j}");
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      arrayList0.spliterator();
      derivedVariable0.removeSourceVariables(arrayList0);
      rawVariable0.createVariableSummary();
      derivedVariable1.getAlias();
      System.setCurrentTimeMillis(0L);
      derivedVariable0.getCleaningDescription();
      assertEquals("pUIoo .\u0000)j}", derivedVariable0.getCleaningStatus());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.hasSameDisplayName(derivedVariable2);
      assertEquals("Unknown", derivedVariable2.getAvailability());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.5015166969605436
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setCleaned(true);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.isCleaned();
      rawVariable0.getOntologyTerms();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertTrue(rawVariable0.isCleaned());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.520576994014825
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-977));
      ontologyTerm0.setOntologyName("user.affiliation.label");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("user.affiliation.label");
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.1411461439556105
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-1853));
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.668146306723083
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("l1Sh%@");
      User user0 = new User("l1Sh%@", "l1Sh%@");
      rawVariable0.setNotes("<BO?X2PYAmo`!tD0>l");
      rawVariable0.setColumnEnd("<BO?X2PYAmo`!tD0>l");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getDisplayName();
      derivedVariable0.getAlias();
      assertEquals("<BO?X2PYAmo`!tD0>l", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.6676082383884046
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm((String) null);
      rawVariable0.questionNumber = null;
      rawVariable0.getCodeBookNumber();
      rawVariable0.getQuestionNumber();
      rawVariable0.setAvailability("~+~3~ RPkK=3f");
      rawVariable0.clone();
      int int0 = rawVariable0.getIdentifier();
      assertEquals("~+~3~ RPkK=3f", rawVariable0.getAvailability());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerm(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("");
      User user0 = new User("", "");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.addValueLabel((ValueLabel) null);
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      rawVariable1.setValueLabels(arrayList0);
      assertEquals("", rawVariable0.getLabel());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertFalse(rawVariable0.isNewRecord());
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"blank\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.05569358184064
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(1568);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("1568", rawVariable0.getDisplayItemIdentifier());
      assertEquals(1568, macawChangeEvent0.getChangedObjectIdentifier());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.49649273994102
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("UZQA>N8~,aJFPAX!Y");
      rawVariable0.setAvailability("");
      rawVariable0.setCleaned(true);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.9971515848932915
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.6902535776209735
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "UNABLE_TO_GET_CHANGES_FOR_DOCUMENT";
      rawVariable0.setName("user.addressLine2.saveChanges");
      rawVariable0.getName();
      rawVariable0.getColumnEnd();
      rawVariable0.createVariableSummary();
      RawVariable.validateFields(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.hasSameDisplayName((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription((String) null);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getCleaningDescription();
      String string0 = rawVariable0.getCategory();
      assertEquals("Unknown", string0);
      
      String string1 = rawVariable0.getDisplayItemIdentifier();
      assertEquals("0", string1);
      
      String string2 = rawVariable0.getCleaningDescription();
      assertNull(string2);
      
      boolean boolean0 = rawVariable0.isCleaned();
      assertFalse(boolean0);
      
      rawVariable0.getColumnEnd();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.2207420692767053
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-1230));
      rawVariable0.setName("F");
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable0);
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      assertEquals("F", rawVariable0.getName());
      assertEquals("-1230", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.7711647938099766
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      User user0 = new User();
      User user1 = new User("DUPLICATE_SOURCE_VARIABLE_EXISTS", "DUPLICATE_SOURCE_VARIABLE_EXISTS");
      user1.setPassword("+C%EKE/&-TgidT");
      user0.setAffiliation("UNABLE_TO_GET_ALL_ONTOLOGY_TERMS");
      User.detectFieldChanges(user0, user1, user1);
      user0.setLastName("variable.name.label");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getDisplayName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIsNewRecord(true);
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.getCategory();
      derivedVariable0.setNotes((String) null);
      derivedVariable0.setCleaningDescription("DUPLICATE_SOURCE_VARIABLE_EXISTS");
      rawVariable0.getFilePath();
      rawVariable0.createVariableSummary();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getNotes();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.getDisplayItemIdentifier();
      derivedVariable0.getDisplayItemIdentifier();
      rawVariable0.getCleaningDescription();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.9971515848932915
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      Variable variable0 = rawVariable0.getAlternativeVariable();
      assertFalse(variable0.isCleaned());
      assertFalse(variable0.isNewRecord());
      assertFalse(variable0.isCoded());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setYear("INVALID_VALUE_LABEL");
      rawVariable0.setCleaned(false);
      rawVariable0.getYear();
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable1.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.1023943109963885
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setYear((String) null);
      rawVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.getYear();
      derivedVariable0.getQuestionNumber();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.getSupportingDocuments();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.6851309643957646
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("V");
      User user0 = new User("V", "V");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      rawVariable0.getDisplayName();
      assertEquals("V", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.6304437108786445
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.cloneAttributes(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertTrue(boolean0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.8593300624927487
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(true);
      derivedVariable0.addSourceVariable(rawVariable0);
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.setValueLabels(arrayList0);
      User user0 = new User();
      rawVariable0.setCoded(true);
      rawVariable0.questionNumber = "gB";
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.getDisplayName();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.setCleaned(true);
      derivedVariable0.getQuestionNumber();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      derivedVariable0.clone();
      rawVariable0.isNewRecord();
      rawVariable0.hasSameDisplayName(derivedVariable1);
      assertTrue(rawVariable0.isNewRecord());
      
      derivedVariable0.getValueLabels();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("V");
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCoded(true);
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("V", rawVariable0.getDisplayName());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.042632211710285
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("variable.cleaningDescription.label");
      Variable.validateFields(derivedVariable0);
      assertEquals("variable.cleaningDescription.label", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.574300011240098
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("s@W(/Z:3WwI<+Cs+");
      derivedVariable0.setCleaningDescription("variable.saveChanges.valueChanged");
      derivedVariable0.codeBookNumber = "variable.saveChanges.valueChanged";
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.setName(" &");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.setIdentifier(70);
      derivedVariable0.columnEnd = "variable.saveChanges.valueChanged";
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getColumnStart();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setNotes("");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      ontologyTerm0.getDisplayName();
      derivedVariable0.getNotes();
      rawVariable0.getAlternativeVariable();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      derivedVariable1.setCodeBookNumber((String) null);
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("O}]Z,2e+v['bQa7P>C");
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocument(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.7204013155948865
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(524);
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.getIdentifier();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=4.32641917426687
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isCoded());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.setAddressLine2("UNABLE_TO_DISASSOCIATE_SOURCE_VARIABLE");
      rawVariable0.setCoded(true);
      ontologyTerm0.setNewRecord(true);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel0);
      valueLabel0.getDisplayName();
      arrayList0.add(valueLabel0);
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.isCoded();
      rawVariable0.getCleaningStatus();
      rawVariable0.clone();
      rawVariable0.getCleaningStatus();
      rawVariable0.getOntologyTerms();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertTrue(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.7315797140115936
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.979900126596672
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("variable.codeBookNumber.label");
      User user0 = new User("variable.codeBookNumber.label", "variable.codeBookNumber.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("variable.codeBookNumber.label", derivedVariable0.getColumnEnd());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.684989220951399
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("");
      User user0 = new User("", "");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      rawVariable0.getLabel();
      assertEquals("", rawVariable0.getLabel());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.6851309643957646
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("");
      rawVariable0.form = "";
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("", rawVariable0.getLabel());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("u");
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("u", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("");
      rawVariable0.setLabel("");
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getLabel());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("");
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setName("");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("", rawVariable0.getLabel());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("user.email.saveChanges");
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("user.email.saveChanges", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("");
      rawVariable0.setLabel("");
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("", rawVariable0.getLabel());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("IOD]DVl~l+#m6Lfz9");
      User user0 = new User("IOD]DVl~l+#m6Lfz9", "IOD]DVl~l+#m6Lfz9");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("IOD]DVl~l+#m6Lfz9", rawVariable0.getLabel());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.624185799765243
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      
      rawVariable0.getSupportingDocuments();
      String string0 = rawVariable0.getCategory();
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.3203928312357034
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes(derivedVariable0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable((Variable) null);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertNull(macawChangeEvent0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("9oH`Zy");
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("9oH`Zy", rawVariable0.getLabel());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("");
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("", rawVariable0.getLabel());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.282360045759959
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertTrue(rawVariable0.isCleaned());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("u");
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "u";
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("u", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(129);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.setNotes("variable.cleaningStatus.label");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertEquals("variable.cleaningStatus.label", rawVariable0.getNotes());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("");
      rawVariable0.setAlias("");
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("", rawVariable0.getName());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "h~p";
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(1, arrayList0.size());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm2);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.6846842034128904
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable0.createVariableSummary();
      assertEquals("1", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("");
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCodeBookNumber("");
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable0.getLabel());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.383522442827672
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertTrue(rawVariable0.isCleaned());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setFilePath("general.error.blankField");
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getFilePath();
      assertEquals("general.error.blankField", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "user.status.label";
      String string0 = rawVariable0.getFilePath();
      assertEquals("", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("variable.year.label");
      rawVariable0.setNotes("5&%Ma:");
      User user0 = new User();
      rawVariable0.getFilePath();
      assertEquals("5&%Ma:", rawVariable0.getNotes());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = null;
      String string0 = rawVariable0.getFilePath();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertNotNull(string0);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.580255841983545
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.cloneAttributes(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      User user0 = new User("variable.label.lbel", "variable.label.lbel");
      user0.setPhone("variable.label.lbel");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "variable.label.lbel";
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getFilePath();
      assertEquals("variable.label.lbel", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("0,>G'");
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getCleaningDescription();
      assertEquals("0,>G'", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      rawVariable0.getOntologyTerms();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.740652832603556
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.questionNumber = "e2wF;Z!m |\" ";
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getQuestionNumber();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getForm();
      assertEquals("e2wF;Z!m |\" ", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "UNABLE_TO_VALIDATE_ADMINISTRATOR";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getDisplayName());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", variableSummary0.getLabel());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "UNABLE_TO_CHECK_CATEGORY_EXISTS";
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getYear());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", variableSummary0.getDisplayName());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertEquals("", variableSummary0.getLabel());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.580255841983545
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "lt";
      derivedVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.createVariableSummary();
      assertEquals("lt", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      derivedVariable0.getSupportingDocuments();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      derivedVariable0.getName();
      derivedVariable0.getForm();
      System.setCurrentTimeMillis((-920L));
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("B`rrdnoBTo)kJa'gfa");
      derivedVariable0.cloneAttributes(derivedVariable0);
      assertEquals("B`rrdnoBTo)kJa'gfa", derivedVariable0.getName());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("variable.alias.label");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.getNotes();
      assertEquals("variable.alias.label", rawVariable0.getNotes());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("general.error.blankField");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("general.error.blankField", derivedVariable0.getColumnStart());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("variable.cleaningStatus.label");
      rawVariable0.getForm();
      assertEquals("variable.cleaningStatus.label", rawVariable0.getForm());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "macaw.businessLayer.Variable";
      User user0 = new User();
      user0.setCounty("macaw.businessLayer.Variable");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("macaw.businessLayer.Variable", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getName());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("*'D-dKqRruJQcvHOag");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("*'D-dKqRruJQcvHOag", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.4381098652423896
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "1N~<F>VE,L:9`RCW$n";
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("1N~<F>VE,L:9`RCW$n", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getForm());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("b!z5Uw*-3fC");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("b!z5Uw*-3fC", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("fb/6~q");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("fb/6~q", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("", rawVariable0.getLabel());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("");
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setNotes("");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("", rawVariable1.getNotes());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.setQuestionNumber("variable.columnStart.label");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("variable.columnStart.label", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setYear("qb6");
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("qb6", rawVariable1.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("user.status.label");
      rawVariable0.createVariableSummary();
      rawVariable0.createVariableSummary();
      assertEquals("user.status.label", rawVariable0.getYear());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      rawVariable0.getSupportingDocuments();
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      RawVariable rawVariable1 = new RawVariable();
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("Unknown");
      derivedVariable0.cloneAttributes(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getForm());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.580255841983545
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.cloneAttributes(derivedVariable0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=3.6243585370180207
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.cloneAttributes(derivedVariable0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.6455587718823956
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add((OntologyTerm) null);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=3.193764486816496
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.setNotes((String) null);
      derivedVariable0.setQuestionNumber("!T3_dzUbz>0oUy=");
      rawVariable0.getCleaningDescription();
      derivedVariable0.setCategory("");
      derivedVariable0.setYear("!T3_dzUbz>0oUy=");
      derivedVariable0.addSourceVariable(rawVariable0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      rawVariable0.setColumnStart("!T3_dzUbz>0oUy=");
      arrayList0.add((OntologyTerm) null);
      derivedVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setIsNewRecord(false);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList1);
      rawVariable0.setCategory("");
      rawVariable0.getColumnStart();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, variableSummary0.getIdentifier());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      ArrayList<String> arrayList1 = Variable.validateFields(rawVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(1, arrayList1.size());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = rawVariable0.isCoded();
      assertFalse(boolean0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.580255841983545
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.cloneAttributes(derivedVariable0);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("variable.cleaningStatus.label");
      derivedVariable0.cloneAttributes(derivedVariable0);
      assertEquals("variable.cleaningStatus.label", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("variable.questionNumber.label");
      derivedVariable0.cloneAttributes(derivedVariable0);
      assertEquals("variable.questionNumber.label", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.cloneAttributes(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("Jb!JI1DpbD");
      rawVariable0.getAlias();
      assertEquals("Jb!JI1DpbD", rawVariable0.getYear());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.5806560020475704
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.getForm();
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getName();
      rawVariable0.getColumnStart();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "1";
      derivedVariable0.cloneAttributes(rawVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=3.580255841983545
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = null;
      derivedVariable0.cloneAttributes(derivedVariable0);
      String string0 = derivedVariable0.getColumnStart();
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertNull(string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("m68DR8x'x~LwRGW3");
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals("m68DR8x'x~LwRGW3", rawVariable0.getCleaningDescription());
      assertFalse(arrayList0.isEmpty());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.5341821845922365
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "UNABLE_TO_ASSOCIATE_DOCUMENT";
      derivedVariable0.cloneAttributes(derivedVariable0);
      assertEquals("UNABLE_TO_ASSOCIATE_DOCUMENT", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart(",w$@KXx");
      derivedVariable0.cloneAttributes(derivedVariable0);
      assertEquals(",w$@KXx", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=3.5341821845922365
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "\"[*\b";
      derivedVariable0.cloneAttributes(derivedVariable0);
      assertEquals("\"[*\b", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=3.5341821845922365
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "r:;gAaBkH3V";
      derivedVariable0.cloneAttributes(derivedVariable0);
      assertEquals("r:;gAaBkH3V", derivedVariable0.getForm());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("UNABLE_TO_CREATE_AVAILABILITY_STATE");
      derivedVariable0.cloneAttributes(derivedVariable0);
      assertEquals("UNABLE_TO_CREATE_AVAILABILITY_STATE", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("variable.year.label");
      derivedVariable0.cloneAttributes(derivedVariable0);
      assertEquals("variable.year.label", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("F");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("F", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList0.size());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("u");
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("u", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("V");
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCategory("V");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("V", rawVariable0.getDisplayName());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.cloneAttributes(derivedVariable0);
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getYear();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }
}
