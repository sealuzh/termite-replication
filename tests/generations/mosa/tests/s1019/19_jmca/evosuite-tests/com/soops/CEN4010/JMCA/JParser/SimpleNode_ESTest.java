/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 14 18:46:56 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.BufferedInputStream;
import java.io.PipedInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      Node[] nodeArray0 = new Node[8];
      simpleNode0.children = nodeArray0;
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[5] = (Node) simpleNode0;
      nodeArray0[6] = (Node) simpleNode0;
      nodeArray0[7] = (Node) simpleNode0;
      simpleNode0.parent = nodeArray0[4];
      simpleNode0.children = nodeArray0;
      simpleNode0.identifiers = null;
      simpleNode0.jjtGetChild(1);
      simpleNode0.jjtGetNumChildren();
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1214104753232883
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      JavaParser javaParser0 = new JavaParser("sbU");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 0);
      Node[] nodeArray0 = new Node[0];
      simpleNode1.children = nodeArray0;
      simpleNode0.id = 0;
      simpleNode0.jjtAddChild(simpleNode1, 0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("sbU", stringWriter0);
      assertEquals("<CompilationUnit></CompilationUnit>\n", stringWriter0.toString());
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = 7;
      SimpleNode simpleNode0 = new SimpleNode(7);
      String string0 = ">=";
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier(">=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("5}t9upXTWs!");
      StringReader stringReader0 = new StringReader("#");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      simpleNode0.jjtAddChild(simpleNode0, 0);
      simpleNode0.jjtGetChild(0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.setIdentifier("&&");
      StringWriter stringWriter0 = new StringWriter(10);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "&&");
      simpleNode0.dump("&&", stringWriter1);
      assertEquals("&&<EnumConstant>\n  <identifier>*amp</identifier>\n</EnumConstant>\n", stringWriter1.toString());
      assertEquals("&&<EnumConstant>\n  <identifier>*amp</identifier>\n</EnumConstant>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(15);
      simpleNode0.setIdentifier("&");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("&", stringWriter0);
      assertEquals("<ClassOrInterfaceBodyDeclaration>\n  <identifier>*amp</identifier>\n</ClassOrInterfaceBodyDeclaration>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(">=", stringWriter0);
      assertEquals("<InstanceOfExpression>\n  <identifier>*ge</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9946571675310574
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(")");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(")", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(63);
      simpleNode0.setIdentifier("5P <4n,.SJ:;2");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("|", stringWriter0);
      assertEquals("<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.7962209059715708
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("BS");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("/", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>BS</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.2248830687452414
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(";");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(";", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(22);
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(">", stringWriter0);
      assertEquals("<MethodDeclarator>\n  <identifier>*gt</identifier>\n</MethodDeclarator>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1123103344201821
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(34);
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("{", stringWriter0);
      assertEquals("<PrimitiveType>\n</PrimitiveType>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1641933683302232
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(23);
      simpleNode0.setIdentifier("}");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("{", stringWriter0);
      assertEquals("<FormalParameters>\n</FormalParameters>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.3849796212556253
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringReader stringReader0 = new StringReader("#");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode1.jjtAddChild(simpleNode0, 10);
      StringWriter stringWriter0 = new StringWriter(0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode0.dump("#", stringWriter0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("<=");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("_vmZG8RV(3#Z;~g", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*le</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4704586557966834
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(7);
      StringReader stringReader0 = new StringReader("EqualityExpression");
      JavaParser javaParser0 = new JavaParser("EqualityExpression");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 7);
      simpleNode0.jjtAddChild(simpleNode1, 7);
      simpleNode1.jjtSetParent(simpleNode0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(" |V_k_8eO<'muD", stringWriter0);
      assertEquals(8, simpleNode0.jjtGetNumChildren());
      
      Node node0 = simpleNode1.jjtGetParent();
      assertEquals(8, node0.jjtGetNumChildren());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4865967664077
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      JavaParser javaParser0 = new JavaParser("AU");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("AU", stringWriter0);
      simpleNode0.toString();
      simpleNode0.jjtAddChild(simpleNode1, 1);
      assertEquals(2, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.1056985263168437
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      simpleNode0.jjtAddChild(simpleNode0, 2048);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      simpleNode0.dump(">=", stringWriter0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0676032882216056
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("", stringWriter0);
      assertEquals("<CompilationUnit>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(34);
      simpleNode0.setIdentifier((String) null);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump((String) null, stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("<<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("<<", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>*lshft</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-5));
      simpleNode0.setIdentifier("x9d");
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump("x9d", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.1361557235984077
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(":");
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.dump(":", stringWriter0);
      simpleNode0.jjtAddChild((Node) null, 18);
      simpleNode0.jjtGetChild(18);
      assertEquals(19, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(">>");
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.dump(">>", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*rshft</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(4134);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(4134);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4134
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.9925623248862889
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("BS");
      simpleNode0.dump("PackageDeclaration", stringWriter0);
      assertEquals("<PackageDeclaration>\n  <identifier>BS</identifier>\n</PackageDeclaration>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.9946571675310574
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("x9d");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("x9d", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>x9d</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("<", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>*lt</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1469);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 1469);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(1470, int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringReader stringReader0 = new StringReader("#");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.jjtGetChild(0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5280883009539776
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode1 = new SimpleNode(37);
      simpleNode1.jjtSetParent(simpleNode0);
      simpleNode1.dump("VariableDeclaratorId", stringWriter0);
      Node node0 = simpleNode1.jjtGetParent();
      assertSame(node0, simpleNode0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-138069622));
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      StringReader stringReader0 = new StringReader("m>>");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 10);
      simpleNode1.jjtAddChild((Node) null, 10);
      simpleNode1.jjtAddChild(simpleNode0, 10);
      simpleNode1.toString();
      assertEquals(11, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringReader stringReader0 = new StringReader("#");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.jjtAddChild(simpleNode1, 1202);
      assertEquals(1203, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(2897);
      SimpleNode simpleNode1 = new SimpleNode(2897);
      simpleNode0.jjtSetParent(simpleNode1);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(2897);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      String string0 = simpleNode0.toString("u1<");
      assertEquals("u1<EnumConstant", string0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-2726));
      // Undeclared exception!
      try { 
        simpleNode0.toString("uM}2DAG%@7EhYOn:A");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2726
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      simpleNode0.setIdentifier("'");
      String string0 = simpleNode0.toString();
      assertEquals("InstanceOfExpression : '", string0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(79);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(20);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-2343));
      simpleNode0.setIdentifier("lvd *M&.?{0J'p");
      simpleNode0.setIdentifier("lvd *M&.?{0J'p");
      simpleNode0.jjtOpen();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode((-1954564117));
      Node node0 = simpleNode0.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1290);
      simpleNode0.jjtGetParent();
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-2360));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 1);
      JavaParser javaParser0 = new JavaParser(bufferedInputStream0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 1);
      StringWriter stringWriter0 = new StringWriter(1);
      StringWriter stringWriter1 = new StringWriter(1);
      stringWriter0.append((CharSequence) "  <identifier>", 1, 1);
      StringWriter stringWriter2 = new StringWriter();
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("xnL9K?>'<}R)*^G*");
      int int0 = 1260;
      try { 
        javaParser0.BooleanLiteral();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 2099);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }
}
