/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 14 19:28:40 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0108643020548935
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ClassWriter classWriter0 = new ClassWriter((byte)0);
      classWriter0.index = (-487);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", "");
      ByteVector byteVector0 = new ByteVector();
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.487937280653977
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ClassWriter classWriter0 = new ClassWriter((byte)0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-753), "cv,g }lBo~GOLaDe", "cv,g }lBo~GOLaDe", "cv,g }lBo~GOLaDe", (Object) null);
      fieldWriter0.getSize();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "cv,g }lBo~GOLaDe";
      stringArray0[1] = "cv,g }lBo~GOLaDe";
      stringArray0[2] = "cv,g }lBo~GOLaDe";
      stringArray0[3] = "cv,g }lBo~GOLaDe";
      stringArray0[4] = "cv,g }lBo~GOLaDe";
      classWriter0.visit(28, 28, "cv,g }lBo~GOLaDe", "cv,g }lBo~GOLaDe", "cv,g }lBo~GOLaDe", stringArray0);
      ByteVector byteVector0 = new ByteVector(2);
      byteVector0.putShort(8);
      ByteVector byteVector1 = new ByteVector();
      fieldWriter0.put(byteVector1);
      fieldWriter0.put(byteVector1);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
      
      classWriter0.visit(49, 2, "cv,g }lBo~GOLaDe", "]D]n<e4FeY", "cv,g }lBo~GOLaDe", stringArray0);
      ClassWriter classWriter1 = new ClassWriter(8);
      classWriter1.visitOuterClass("int", "int", "j-~tBM%rY$ Xht+");
      ByteVector byteVector2 = classWriter1.pool;
      fieldWriter0.put(byteVector2);
      fieldWriter0.visitAnnotation("w=K", true);
      int int1 = fieldWriter0.getSize();
      assertEquals(34, int1);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.432813901625505
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2967));
      classWriter0.version = 2899;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2967), "`{rbcca+v{*r5", "`{rbcca+v{*r5", "`{rbcca+v{*r5", "`{rbcca+v{*r5");
      fieldWriter0.getSize();
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("`{rbcca+v{*r5", true);
      assertNotNull(annotationVisitor0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.2525306450725109
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2967));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2967), "`{rbcca+v{*r5", "`{rbcca+v{*r5", "`{rbcca+v{*r5", "`{rbcca+v{*r5");
      Attribute attribute0 = new Attribute("`{rbcca+v{*r5");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ClassWriter classWriter0 = new ClassWriter((byte)0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", "");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2980));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2980), "`{rbcca+v{*r5", "`{rbcca+v{*r5", "`{rbcca+v{*r5", "`{rbcca+v{*r5");
      ByteVector byteVector0 = new ByteVector(1);
      byteVector0.length = 2;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ClassWriter classWriter0 = new ClassWriter((byte)0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-753), "cv,g }lBo~GOLaDe", "cv,g }lBo~GOLaDe", "cv,g }lBo~GOLaDe", (Object) null);
      fieldWriter0.getSize();
      classWriter0.visit((-336), (-32768), "Signature", "cv,g }lBo~GOLaDe", ">z #G_y+eX/c", (String[]) null);
      ByteVector byteVector0 = new ByteVector(11);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.8647337539567728
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2967));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2967), "`{rbcca+v{*r5", "`{rbcca+v{*r5", "`{rbcca+v{*r5", "`{rbcca+v{*r5");
      fieldWriter0.visitAnnotation("`{rbcca+v{*r5", false);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0829081047004716
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ClassWriter classWriter0 = new ClassWriter((byte)0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "{bcca+v<{r5", "{bcca+v<{r5", (String) null, "{bcca+v<{r5");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ClassWriter classWriter0 = new ClassWriter((byte)0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "`{bcca+v<{*r5", "`{bcca+v<{*r5", (String) null, "`{bcca+v<{*r5");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.039435730626322
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ClassWriter classWriter0 = new ClassWriter((byte)0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "N*\"}:rC", "N*\"}:rC", "N*\"}:rC", "N*\"}:rC");
      fieldWriter0.visitAnnotation("N*\"}:rC", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ClassWriter classWriter0 = new ClassWriter((byte)0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "`{bcca+?<{*r5", "`{bcca+?<{*r5", "`{bcca+?<{*r5", "`{bcca+?<{*r5");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.039435730626322
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ClassWriter classWriter0 = new ClassWriter((byte)0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "{bocca+l{r", "{bocca+l{r", "{bocca+l{r", "{bocca+l{r");
      fieldWriter0.visitAnnotation("{bocca+l{r", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2967));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2967), "Label offset position has not been resolved yet", "Label offset position has not been resolved yet", "Label offset position has not been resolved yet", "Label offset position has not been resolved yet");
      fieldWriter0.visitAnnotation("Label offset position has not been resolved yet", true);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ClassWriter classWriter0 = new ClassWriter((byte)0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "F", "F", "F", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ClassWriter classWriter0 = new ClassWriter((byte)0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "F", "F", "F", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2985));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2985), "`{rbcca+v{*r5", "`{rbcca+v{*r5", "`{rbcca+v{*r5", "`{rbcca+v{*r5");
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2974));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "?&>$", "?&>$", "`{bcca+v<{*r5", "?&>$");
      fieldWriter0.visitEnd();
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2985));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2985), "`{bcca+v<{*r5", "`{bcca+v<{*r5", "`{bcca+v<{*r5", "`{bcca+v<{*r5");
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 2, "`{bcca+v<{*r5", "`{bcca+v<{*r5", "`{bcca+v<{*r5", fieldWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.FieldWriter@8
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2985));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2985), "`{rbcca+v{*r5", "`{rbcca+v{*r5", "`{rbcca+v{*r5", "`{rbcca+v{*r5");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ClassWriter classWriter0 = new ClassWriter((byte)0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "X%", "X%", (String) null, (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      ClassWriter classWriter0 = new ClassWriter((byte)0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", "", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ClassWriter classWriter0 = new ClassWriter((byte)0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "`{bcca+v<{*r5", "`{bcca+v<{*r5", "`{bcca+v<{*r5", "`{bcca+v<{*r5");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, (-2064), "", "", "", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }
}
