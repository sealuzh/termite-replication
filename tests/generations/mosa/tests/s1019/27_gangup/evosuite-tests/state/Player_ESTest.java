/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 14 19:12:15 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.6820730621847044
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player((-162), "MHuDb*", 2147384052);
      Player player1 = new Player((-880));
      player1.boss = (Party) player0;
      player1.setZ((-162));
      player0.setMoney(0.0F);
      player0.prev = (Party) player1;
      player0.isJoinOK(player1, true);
      player1.type();
      player1.getZ();
      player1.pack();
      player0.add(player1);
      player1.setZ((-162.0F));
      player1.type();
      player0.isJoinOK(player1, true);
      player0.type();
      player1.pack();
      assertEquals((-162.0F), player1.getZ(), 0.01F);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.970620935502287
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(2147340491, "a\"7C", "a\"7C", 4919);
      player0.setDead();
      player0.getZ();
      player0.setMoney(4919);
      player0.pack();
      player0.getZ();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 10);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      player0.unpack(dataInputStream0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.pack();
      System.setCurrentTimeMillis(2682L);
      System.setCurrentTimeMillis(2147340491);
      player0.type();
      player0.type();
      float float0 = player0.getMoney();
      assertEquals(4919.0F, float0, 0.01F);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.9713931362744876
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(2);
      player0.reset(true);
      player0.setY((-1.0F));
      player0.setX((-1.0F));
      player0.getSubparty();
      Player player1 = new Player();
      player0.pack();
      player0.next = (Party) player1;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      player0.getMoney();
      player0.getZ();
      byte[] byteArray0 = new byte[0];
      player1.unpack(byteArray0);
      player0.getX();
      player0.getX();
      player1.getSubparty();
      player1.isJoinOK(player0, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      player1.getX();
      player0.getX();
      player1.getMoney();
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      player0.setDead((-1583L), true);
      player0.isJoinOK(player0, true);
      long long0 = player0.getTimeOfDeath();
      assertEquals((-1583L), long0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(0, "", "Za\"_;u;3I`YE.bZbI", (-1416), 0);
      player0.setY(0);
      player0.getStrength();
      player0.pack();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      float float0 = player0.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      
      player0.pack();
      long long0 = player0.getTimeOfDeath();
      assertEquals(0L, long0);
      
      int int0 = player0.getStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals((-1416), player0.getPictureId());
      assertEquals(0, int0);
      assertEquals("", player0.getIP());
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ(1435.7137F);
      player0.pack();
      float float0 = player0.getZ();
      assertEquals(1435.7137F, float0, 0.01F);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      Player player0 = new Player(2588, (String) null, (String) null, 2588);
      float float0 = player0.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      
      player0.getName();
      assertEquals(1, player0.getStrength());
      assertEquals(2588, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.6454371383635378
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(3212, "state.Party", "state.Party", 3212, 0);
      player0.pack();
      int int0 = player0.gangStrength();
      assertEquals(0, int0);
      
      Player player1 = new Player(0, "E\"Xh03[8gap5'mT", "state.Party", 0, (-773));
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals((-773), player1.getStrength());
      assertEquals("E\"Xh03[8gap5'mT", player1.getIP());
      assertFalse(boolean0);
      
      int int1 = player0.type();
      assertFalse(player0.isDead());
      assertEquals(5, int1);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(3212, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(1369, (String) null, 1369);
      player0.toString();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(1369, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0.0F);
      player0.getMoney();
      float float0 = player0.getX();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player((-7745), "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", "", 5, (-4374));
      player0.setConnected(true);
      int int0 = player0.type();
      assertEquals(5, int0);
      
      long long0 = player0.getTimeOfDeath();
      assertEquals(0L, long0);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream(5);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      player0.toString();
      assertEquals(5, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals((-4374), player0.getStrength());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.128419031742918
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(243, "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", 1);
      player0.getPictureId();
      Player player1 = new Player(1, "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", "s~PJB7-L5CQM", 1, 1953);
      MockFile mockFile0 = new MockFile("Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      dataOutputStream0.writeByte(5);
      player0.pack(dataOutputStream0);
      player0.remove(player1);
      player0.type();
      Player player2 = new Player((-428), "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", 243);
      player2.next = (Party) player0;
      player2.pack();
      player0.isJoinOK(player2, false);
      player0.getTimeOfDeath();
      player0.getPictureId();
      player0.setDead(0L);
      player1.getTimeOfDeath();
      player1.getStrength();
      player1.getMoney();
      player1.getMoney();
      System.setCurrentTimeMillis((-353L));
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(2348, (String) null, (String) null, 2348, 2348);
      player0.getIP();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(2348, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(2348, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      System.setCurrentTimeMillis(904L);
      Player player0 = new Player((-1));
      Player player1 = new Player();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player1.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.3798389570661653
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[1] = (byte) (-47);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player(243, "~DHH9&L'q8y=d2Yrz7Z", 243);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Player player1 = new Player();
      player0.gangStrength();
      player0.head = (Party) player1;
      player0.setY((-1855.0142F));
      player1.add(player0);
      player0.isJoinOK(player1, false);
      player0.remove(player1);
      player0.next = (Party) player1;
      player1.getName();
      // Undeclared exception!
      player0.gangStrength();
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      long long0 = player0.getTimeOfDeath();
      assertEquals(1392409281320L, long0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.5681782945332445
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player((-1), "module.ModuleBrowserDialog$ModuleFilter", (-1));
      player0.setMoney((-1));
      player0.isConnected();
      player0.setY((-1));
      player0.getSubparty();
      player0.getMoney();
      player0.setMoney((-1.0F));
      player0.setY(0L);
      player0.setDead(0L);
      byte[] byteArray0 = player0.pack();
      player0.setConnected(false);
      player0.setDead();
      player0.toString();
      player0.getX();
      Player player1 = new Player((-1), "module.ModuleBrowserDialog$ModuleFilter", (-4841));
      player1.setY((-1));
      player1.setX((-4841));
      player1.setDead((long) (-1), false);
      player0.unpack(byteArray0);
      player0.gangStrength();
      player0.isDead();
      player1.setDead(300L);
      player0.type();
      player1.getY();
      player1.isConnected();
      float float0 = player1.getY();
      assertEquals((-4841.0F), player1.getX(), 0.01F);
      assertEquals((-1.0F), float0, 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player((-1), "x9_OK(Q79C+2o~4_c", "x9_OK(Q79C+2o~4_c", (-1), (-1));
      player0.pack();
      assertEquals((-1), player0.getPictureId());
      assertEquals((-1), player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player((-1190), "R)#", "", (-1190), (-1190));
      Party party0 = new Party((-507));
      player0.remove(party0);
      player0.setMoney((-1952.6526F));
      player0.getSubparty();
      player0.getStrength();
      player0.getZ();
      float float0 = player0.getMoney();
      assertEquals((-1952.6526F), float0, 0.01F);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player((-1957), (String) null, (-1957));
      assertTrue(player0.isConnected());
      
      player0.setConnected(false);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      player0.unpack(dataInputStream0);
      player0.reset(true);
      int int0 = player0.getPictureId();
      assertFalse(player0.isConnected());
      assertEquals((-1957), int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player((-1), "x9_OK(Q79C+2o~4_c", (-1));
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)107;
      byteArray0[1] = (byte)56;
      player0.unpack(byteArray0);
      float float0 = player0.getMoney();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals((-1), player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.027377075708073
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player((-3624), "[CKR_B?Y", "gui.ModuleBrowserDialog$ModuleFilter", (-3624), (-3624));
      Player player1 = new Player(4, "[CKR_B?Y", (short)4919);
      player0.add(player1);
      assertEquals(4919, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      
      int int0 = player0.gangStrength();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("[CKR_B?Y", player0.getIP());
      assertEquals((-3623), int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player1.setJoinOK(player0, true);
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player-1", player1.toString());
      assertEquals(0, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertTrue(boolean0);
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(boolean0);
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.toString());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(1, "", 1);
      player0.getName();
      float float0 = player0.getX();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, float0, 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream((short)4919);
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(29, byteArrayOutputStream0.size());
      
      player0.pack();
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(3, "", "", (-1));
      player0.reset(true);
      Player player1 = (Player)player0.gangBoss();
      player0.boss = (Party) player1;
      player0.setDead((long) (-1), true);
      player0.setY(610.1778F);
      player1.id = 582;
      player0.prev = (Party) player1;
      player0.prev = (Party) player1;
      player0.getMoney();
      player0.getStrength();
      player0.setX(1899.3866F);
      player0.getY();
      float float0 = player1.getMoney();
      assertEquals(1899.3866F, player1.getX(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((-3866), "", "", (short)4919);
      float float0 = player0.getZ();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertEquals(0.0F, float0, 0.01F);
      
      player1.getIP();
      assertEquals(4919, player1.getPictureId());
      assertFalse(player1.isDead());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player(1191, "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", (short)4919, (-3569));
      player0.setJoinOK(player1, true);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = player1.getStrength();
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(4919, player1.getPictureId());
      assertFalse(player1.isDead());
      assertEquals((-3569), int0);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-60);
      byteArray0[1] = (byte)53;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.getName());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertFalse(boolean0);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.toString());
      
      Player player1 = new Player((short)4919, "", (short)4919);
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(player1.isConnected());
      assertEquals(1, player1.getStrength());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(4919, player1.getPictureId());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead(1392409296320L, false);
      player0.pack();
      assertEquals(1392409296320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.380937795632014
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player((-173), "w&atXmVx~fczFD", "]U.vG", 0, 0);
      player0.setConnected(false);
      player0.setZ(0.0F);
      player0.toString();
      Player player1 = new Player((short)4919);
      player0.isJoinOK(player1, true);
      player0.setJoinOK(player1, false);
      Player player2 = new Player((-173), "]U.vG", 10);
      player0.isJoinOK(player2, true);
      player1.getZ();
      player0.setY((short)4919);
      player0.setDead(1392409281320L, false);
      player2.setDead();
      player1.getX();
      player0.isConnected();
      Player player3 = new Player((byte) (-20), "onS^e!)$fM8`", 10);
      player3.isJoinOK(player1, true);
      player0.setX(10.0F);
      assertEquals(4919.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player();
      int int0 = player0.getPictureId();
      assertEquals(0, int0);
      
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("Le+)?[&=G#='Cb");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream0);
      player0.setZ(0.0F);
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      boolean boolean0 = player0.isDead();
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(boolean0);
      assertEquals(0.0F, player0.getZ(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player-1", player0.toString());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player();
      String string0 = player0.getIP();
      assertEquals("0.0.0.0", string0);
      
      player0.pack();
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player();
      int int0 = player0.getStrength();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, int0);
      assertEquals("Player-1", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player();
      long long0 = player0.getTimeOfDeath();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = player0.isConnected();
      assertTrue(boolean0);
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player(2348, (String) null, 2348);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, true);
      Player player1 = new Player();
      player1.setConnected(true);
      player1.setDead((long) (short)4919);
      boolean boolean0 = player1.isDead();
      assertEquals(4919L, player1.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isDead();
      assertFalse(boolean0);
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.getName());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead(1392409281320L);
      player0.getName();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player();
      String string0 = player0.toString();
      assertEquals("Player-1", string0);
      
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player();
      int int0 = player0.type();
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.getName());
      assertEquals(5, int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player();
      PipedInputStream pipedInputStream0 = new PipedInputStream((short)4919);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player();
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      
      Player player1 = new Player((-19041), (String) null, (short)4919);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(4919, player1.getPictureId());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(false);
      assertEquals("Player-1", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player();
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Player player0 = new Player();
      player0.setMoney(0.0F);
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals("Player-1", player0.toString());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(true);
      player0.pack();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.toString());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      player0.pack();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }
}
