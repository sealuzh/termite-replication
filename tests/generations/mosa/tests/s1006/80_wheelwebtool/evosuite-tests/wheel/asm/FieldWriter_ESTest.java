/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 14 01:19:58 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0730116670092564
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-788));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "SourceF\"pe", "SourceF\"pe", "SourceF\"pe", "SourceF\"pe");
      String string0 = "Kzx,3f]CQ";
      classWriter0.index = 63318;
      classWriter0.newMethodItem("Kzx,3f]CQ", "MCeb{}2y1:v7@,", "Kzx,3f]CQ", true);
      ByteVector byteVector0 = new ByteVector(1);
      // Undeclared exception!
      fieldWriter0.getSize();
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3622914870858265
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-788));
      classWriter0.index = (-788);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "java/lang/5uOjet", "java/lang/5uOjet", "java/lang/5uOjet", "java/lang/5uOjet");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.343193896232072
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      classWriter0.version = 48;
      classWriter0.version = 49;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "@", "@", "@", "@");
      classWriter0.visitOuterClass("i:'n.FM3!Sm_[l)+$", "i:'n.FM3!Sm_[l)+$", "");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putInt(49);
      fieldWriter0.put(byteVector1);
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-45));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-45), "C", "C", "C", "C");
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = (-2757);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4108);
      classWriter0.version = 4108;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4108, "^=Njws@_b0^V7m(87", "^=Njws@_b0^V7m(87", "^=Njws@_b0^V7m(87", "^=Njws@_b0^V7m(87");
      ByteVector byteVector0 = new ByteVector(4108);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-11));
      classWriter0.version = (-32);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-11), "b+Ajjq;|QM", "b+Ajjq;|QM", "b+Ajjq;|QM", "b+Ajjq;|QM");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(19);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Gqb+A)jj-;?MM", "Gqb+A)jj-;?MM", "Gqb+A)jj-;?MM", "Gqb+A)jj-;?MM");
      Attribute attribute0 = new Attribute("Gqb+A)jj-;?MM");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "java/lang/Oject", "java/lang/Oject", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-86));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-86), "", "", "", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.8945706855324711
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "Gqb+A)-;?QM", "Gqb+A)-;?QM", "Gqb+A)-;?QM", "Gqb+A)-;?QM");
      fieldWriter0.visitAnnotation("Gqb+A)-;?QM", false);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0145240468749794
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-5));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-5), "Gqb+A)-;?QM", "Gqb+A)-;?QM", "Gqb+A)-;?QM", "Gqb+A)-;?QM");
      fieldWriter0.visitAnnotation("Gqb+A)-;?QM", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.2885387096069334
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "Gqb+)jj-;?M", "Gqb+)jj-;?M", "Gqb+)jj-;?M", "Gqb+)jj-;?M");
      Attribute attribute0 = new Attribute("Gqb+)jj-;?M");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.2885387096069334
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "java/lang/Oject", "java/lang/Oject", (String) null, (Object) null);
      fieldWriter0.getSize();
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0730116670092564
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "java/lang/Oject", "java/lang/Oject", "java/lang/Oject", "java/lang/Oject");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 8, "Gqb+)jj-;?M", "Gqb+)jj-;?M", "Gqb+)jj-;?M", "Gqb+)jj-;?M");
      fieldWriter0.visitAnnotation("Gqb+)jj-;?M", true);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "Gqb+A)-;?QM", "Gqb+A)-;?QM", "Gqb+A)-;?QM", "Gqb+A)-;?QM");
      fieldWriter0.visitAnnotation("Gqb+A)-;?QM", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-60));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-60), "", "", "", "");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(697);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 718, "W%Zdc,OCb3/t4", "W%Zdc,OCb3/t4", "W%Zdc,OCb3/t4", "W%Zdc,OCb3/t4");
      fieldWriter0.visitEnd();
      Object object0 = new Object();
      classWriter0.visitInnerClass("org.apache.commons.io.filefilter.AndFileFilter", "RuntimeVisibleAnnotations", (String) null, 697);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 1734, "Q&>", "", (String) null, "Q&>");
      AnnotationVisitor annotationVisitor0 = fieldWriter1.visitAnnotation("W%Zdc,OCb3/t4", true);
      AnnotationVisitor annotationVisitor1 = fieldWriter1.visitAnnotation("P4#eqvs", true);
      assertNotSame(annotationVisitor1, annotationVisitor0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "java/lang/Oject", "java/lang/Oject", "java/lang/Oject", "java/lang/Oject");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "java/lang/Oject", "java/lang/Oject", "java/lang/Oject", "java/lang/Oject");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 0, (String) null, (String) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-48));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", "", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }
}
