/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 14 01:52:55 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3798389570661653
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player1.setJoinOK(player0, true);
      player1.pack();
      float float0 = Player.TOLERANCE;
      System.setCurrentTimeMillis(1392409296326L);
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertEquals(1, player1.getStrength());
      assertEquals(0, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
      assertFalse(boolean0);
      assertEquals("Player-1", player1.getName());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player((-1), ";LTiYQ%#Tb#HRxA", ";LTiYQ%#Tb#HRxA", (-1));
      player0.setJoinOK(player0, true);
      player0.pack();
      float float0 = Player.TOLERANCE;
      System.setCurrentTimeMillis(1392409296320L);
      boolean boolean0 = player0.isJoinOK(player0, true);
      assertFalse(player0.isDead());
      assertFalse(boolean0);
      assertEquals((-1), player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ(6537.561F);
      float float0 = player0.getZ();
      assertEquals(6537.561F, float0, 0.01F);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.9410699503727398
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player((-140), "sUK|je>pu}l`y>Uz", (-140));
      player0.id = (-483);
      player0.gangStrength();
      player0.setDead((long) (-483), false);
      player0.setConnected(false);
      player0.setX((-483));
      player0.getX();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.setY((-140));
      player0.getZ();
      System.setCurrentTimeMillis((-1L));
      player0.gangStrength();
      player0.pack();
      player0.getY();
      Enumeration<PushbackInputStream> enumeration0 = (Enumeration<PushbackInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, 246);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals((-140.0F), player0.getY(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player((-1404));
      player0.setMoney(0.2F);
      player0.setConnected(false);
      Player player1 = new Player((short)4919);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player1.boss = (Party) player0;
      player1.pack();
      player1.pack();
      player1.setDead((-5115L), false);
      player0.isJoinOK(player1, true);
      player1.getTimeOfDeath();
      byte[] byteArray0 = player0.pack();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      byteArrayOutputStream0.close();
      player0.remove(player1.boss);
      // Undeclared exception!
      try { 
        byteArrayOutputStream0.write(byteArray0, (-1404), (int) (short)4919);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayOutputStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(32, (String) null, (String) null, 32);
      Party party0 = player0.head;
      player0.remove((Party) null);
      player0.getIP();
      assertTrue(player0.isConnected());
      assertEquals(32, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      Player player1 = new Player((short)4919);
      player1.add(player0);
      int int0 = player0.gangStrength();
      assertEquals(2, int0);
      assertEquals(0, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player-1", player0.getName());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)55;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2538), 2560);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player((-609), (String) null, (-609));
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-85);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(10, (String) null, 10);
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      player0.toString();
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10, player0.getPictureId());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player((-3), "sy%6h0", "sy%6h0", (-3), (-3));
      int int0 = player0.gangStrength();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals((-3), int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
      assertEquals((-3), player0.getPictureId());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.9417429777213613
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(1, player1.getStrength());
      assertEquals("Player-1", player1.toString());
      assertTrue(player1.isConnected());
      assertEquals(0, player1.getPictureId());
      assertTrue(boolean0);
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.9417429777213613
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, false);
      Player player1 = new Player();
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(1, player1.getStrength());
      assertFalse(boolean0);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertTrue(player1.isConnected());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player-1", player1.toString());
      assertEquals(0, player1.getPictureId());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.3255210363639085
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead((long) 5, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player1 = new Player(5, "pSH7SHj-U", 5);
      Player player2 = new Player(1209, "pSH7SHj-U", "pSH7SHj-U", 1209);
      player2.getX();
      player2.pack();
      Player player3 = new Player();
      Player player4 = new Player(3921, "module.ModuleBrowserDialog$ModuleFilter", 1677);
      player4.remove(player0);
      player3.getStrength();
      Player player5 = new Player((-473), "pSH7SHj-U", (short)4919);
      player3.setDead();
      player3.setJoinOK(player4, true);
      player1.reset(true);
      player0.type();
      player3.getX();
      Player player6 = new Player((short)4919, "FL5~=", (String) null, (short)4919, (-1685));
      player6.getStrength();
      float float0 = player0.getY();
      assertEquals(5L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player((-4457), "@-|cVJfkb", "@-|cVJfkb", (-4457));
      player0.pack();
      player0.setMoney((-4457));
      player0.getMoney();
      Player player1 = new Player();
      player1.setMoney((-4457.0F));
      assertEquals((-4457.0F), player1.getMoney(), 0.01F);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.022794924510636
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(2767, "state.Player$JoinInfo", "jw/6XbA9", 0);
      Player player1 = (Player)player0.gangBoss();
      player1.id = 0;
      player0.prev = (Party) player1;
      player0.getTimeOfDeath();
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0L);
      player0.setZ(0.0F);
      player0.gangStrength();
      player0.type();
      player1.setJoinOK(player0, true);
      player1.reset(true);
      player0.type();
      player0.getX();
      int int0 = player1.getStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.1995756248310236
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(10, "f[S", "f[S", 0, 0);
      player0.pack();
      player0.gangStrength();
      Player player1 = new Player(969, "2aP}XEIql/>(", (-1));
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertFalse(boolean0);
      
      float float0 = Player.MOVE_DISTANCE;
      int int0 = player0.gangStrength();
      int int1 = player0.getPictureId();
      assertTrue(int1 == int0);
      
      player0.setDead(1807L, false);
      player1.getX();
      player0.pack();
      player1.remove(player0);
      int int2 = player1.getStrength();
      assertEquals(1, int2);
      
      player0.setJoinOK(player1, false);
      player1.reset(false);
      int int3 = player1.type();
      assertEquals(5, int3);
      
      player1.getX();
      assertFalse(player1.isDead());
      assertEquals((-1), player1.getPictureId());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals("0.0.0.0", player1.getIP());
      
      int int4 = player0.getStrength();
      assertEquals("f[S", player0.toString());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10, player0.getId());
      assertEquals(0, int4);
      assertEquals(0.0F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.1034354550763315
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(2671, "Player.unpack(): *** WARNING *** data is not of proper type!", "Player.unpack(): *** WARNING *** data is not of proper type!", 2671);
      Player player1 = new Player((short)4919, "=9)4{g<(Yz:F~0", 0);
      player1.add((Party) null);
      Player player2 = new Player(2671, "@fR4)H", "Player.unpack(): *** WARNING *** data is not of proper type!", 2671);
      player2.gangStrength();
      Player player3 = new Player();
      player2.setY(2671);
      player3.setJoinOK(player1, false);
      player2.getY();
      player1.getX();
      player2.getMoney();
      player3.setDead();
      assertEquals(1392409281320L, player3.getTimeOfDeath());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player((-2167), ".RSg", ".RSg", (-2167), (-2167));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player((-2177), "", "", (-2177), 166);
      player0.getIP();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(166, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals((-2177), player0.getPictureId());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("Player.unpack(): *** WARNING *** [EOF] data was incomplete: ");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.toString());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.122928297357194
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0);
      player0.isConnected();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte)0;
      Player player1 = new Player(1);
      player0.remove(player1);
      byteArray0[2] = (byte) (-125);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      player0.setZ((byte) (-125));
      player0.setDead((long) (byte)0, false);
      byteArray0[6] = (byte)0;
      player0.unpack(byteArray0);
      player1.remove(player0);
      player0.setX(607.3529F);
      player0.pack();
      player0.setJoinOK(player1, true);
      float float0 = player0.getZ();
      assertEquals(607.3529F, player0.getX(), 0.01F);
      assertEquals((-125.0F), float0, 0.01F);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0.0F);
      player0.pack();
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      Player player1 = new Player((short)4919);
      player0.setMoney(0.1F);
      player0.getMoney();
      player0.isJoinOK(player0, true);
      int int0 = Packable.ACTION;
      assertEquals(2, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(2896, (String) null, 59);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.markSupported();
      player0.id = (-1090);
      player0.setMoney(59);
      player0.getName();
      assertEquals(59.0F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(boolean0);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.2414625352988633
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player(636);
      byte[] byteArray0 = player1.pack();
      player1.unpack(byteArray0);
      player1.isJoinOK(player0, true);
      player1.getZ();
      player0.gangStrength();
      player0.gangStrength();
      player1.getPictureId();
      player0.setDead((long) (byte) (-10), true);
      player0.getX();
      player1.pack();
      player1.remove(player0);
      player0.getStrength();
      player0.setZ((short)4919);
      player0.reset(false);
      player0.type();
      player1.getX();
      int int0 = player1.getStrength();
      assertEquals(124, player1.getId());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(1360, "9paiVGQ)JUG~S7 ;x_", "9paiVGQ)JUG~S7 ;x_", 1, 0);
      int int0 = player0.gangStrength();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getPictureId());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player(18, (String) null, (String) null, 18, 18);
      int int0 = player0.gangStrength();
      assertEquals(18, int0);
      assertEquals(18, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.45654111698532
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player((-1612), "EZxV%gZ}^Pd", (-1612));
      player0.setDead();
      player0.isDead();
      Player player1 = new Player((-838), "EZxV%gZ}^Pd", "", (-838), 1382);
      player1.reset(false);
      player0.head = (Party) player1;
      player1.setDead((long) (-1612));
      player0.reset(true);
      player0.getMoney();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      player0.getZ();
      player0.gangStrength();
      player0.getPictureId();
      player1.setDead((long) 1, true);
      player1.getX();
      player1.pack();
      player0.remove(player1);
      player1.getStrength();
      player0.setJoinOK(player1, true);
      player1.reset(true);
      player0.type();
      player1.getX();
      int int0 = player1.getStrength();
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(1382, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.7909571860173013
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player((-1612));
      Player player1 = new Player(3172, "state.Party", 3172);
      byte[] byteArray0 = player0.pack();
      player1.unpack(byteArray0);
      player0.isJoinOK(player1, true);
      assertEquals((-76), player1.getId());
      
      player0.getZ();
      Player player2 = new Player((-103), "~5ivH1uLU0", 25334);
      player2.gangStrength();
      player2.getPictureId();
      player2.pack();
      Player player3 = new Player(246, "~5ivH1uLU0", "~5ivH1uLU0", (-595), 1);
      assertEquals(1, player3.getStrength());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, false);
      boolean boolean0 = player0.isDead();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(boolean0);
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0, 3875);
      Party party0 = new Party((short)4919);
      player0.add(party0);
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.7897645801735327
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player(3127, "", 3127);
      player0.setConnected(false);
      player0.setDead();
      player0.isConnected();
      player0.getName();
      player0.setConnected(false);
      player0.setConnected(false);
      player0.setDead((-1L), false);
      player0.setDead();
      player0.setDead((-2092L), false);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-41);
      player0.setConnected(false);
      player0.unpack(byteArray0);
      float float0 = player0.getZ();
      assertEquals((-2092L), player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      byte[] byteArray0 = new byte[10];
      pipedOutputStream0.write(byteArray0);
      player0.pack();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      
      int int0 = player0.gangStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.readLong();
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(19, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.786456060735981
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(0, "", 2404);
      player0.getSubparty();
      Player player1 = new Player((short)4919);
      player0.boss = (Party) player1;
      player0.setMoney(0.2F);
      player1.setConnected(false);
      player0.getY();
      player0.toString();
      player0.gangStrength();
      player0.toString();
      player0.getName();
      player1.setJoinOK(player0, false);
      player1.gangStrength();
      player1.setConnected(true);
      int int0 = player1.getStrength();
      assertTrue(player1.isConnected());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player();
      player0.toString();
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player(4, "|7QT-JVmUdu", "g8#x4rB0l%O5F", 0, 0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "g8#x4rB0l%O5F");
      int int0 = player0.type();
      assertEquals(5, int0);
      
      player0.getName();
      assertEquals(0, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("|7QT-JVmUdu", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      player0.pack();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ(1.0F);
      player0.getIP();
      assertEquals(1.0F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, false);
      boolean boolean0 = player0.isConnected();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertTrue(boolean0);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead(434L);
      int int0 = player0.gangStrength();
      assertEquals(434L, player0.getTimeOfDeath());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      long long0 = player0.getTimeOfDeath();
      assertEquals(1392409281320L, long0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(true);
      long long0 = player0.getTimeOfDeath();
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player();
      player0.setConnected(true);
      player0.pack();
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
  }
}
