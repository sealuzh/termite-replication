/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 14 01:02:11 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import java.util.function.Predicate;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.705549989624113
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("");
      rawVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-1908874351));
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      assertTrue(rawVariable0.isCleaned());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setYear((String) null);
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getYear();
      derivedVariable0.getDisplayName();
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.170793809518273
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("variable.alternativeVariable.label");
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFileName("UNABLE_TO_GET_CATEGORY_NAME");
      User user0 = new User("variable.availability.label", "");
      SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument1);
      arrayList0.add(supportingDocument1);
      supportingDocument1.clone();
      arrayList0.add(supportingDocument1);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.setAlias((String) null);
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.setYear((String) null);
      derivedVariable0.getOntologyTerms();
      derivedVariable0.setColumnStart("");
      derivedVariable0.getName();
      derivedVariable0.getAlias();
      derivedVariable0.getOntologyTerms();
      derivedVariable0.setName((String) null);
      derivedVariable0.getValueLabels();
      derivedVariable0.getLabel();
      derivedVariable0.getNotes();
      derivedVariable0.getFilePath();
      derivedVariable0.getSupportingDocuments();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      arrayList1.add((Variable) derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList1);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("[>qEm~@z5)1h6:S.");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.iterator();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("6rZM`-");
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.getDisplayName();
      ontologyTerm1.setTerm((String) null);
      arrayList0.add(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.setCleaningDescription((String) null);
      ontologyTerm2.clone();
      arrayList0.add(ontologyTerm2);
      arrayList0.add(ontologyTerm2);
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.getLabel();
      derivedVariable0.getCleaningDescription();
      RawVariable rawVariable0 = null;
      // Undeclared exception!
      try { 
        RawVariable.validateFields((RawVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.49649273994102
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      assertFalse(rawVariable0.isCleaned());
      
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      rawVariable0.getSupportingDocuments();
      assertTrue(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocument(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.6211158458265547
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = null;
      String string0 = rawVariable0.getFilePath();
      assertNotNull(string0);
      
      rawVariable0.getYear();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      User user0 = new User("", "supportingDocument.title.label");
      ArrayList<MacawChangeEvent> arrayList1 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals(0, arrayList1.size());
      
      String string1 = rawVariable0.getColumnStart();
      assertNull(string1);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=4.185120055617699
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCoded(true);
      derivedVariable0.setName(".");
      User user0 = new User(".", ".");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable1.clone();
      assertTrue(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.3814049855503763
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertEquals(1, arrayList0.size());
      
      derivedVariable0.columnStart = null;
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList1 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertTrue(arrayList1.isEmpty());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.042632211710285
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.8686497739875745
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = ":h*V<HVCAxG";
      rawVariable0.setColumnEnd("");
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.getCategory();
      rawVariable0.setCleaningDescription("UNABLE_TO_CLOSE_CONNECTION");
      rawVariable0.clone();
      rawVariable0.clone();
      rawVariable0.getSupportingDocuments();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getNotes();
      rawVariable0.getCleaningDescription();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      User user0 = new User();
      Variable.validateFields(derivedVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.1539071331363826
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(58);
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.260960815263037
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      derivedVariable0.setCoded(true);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.setAlias("");
      derivedVariable0.isCoded();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.listIterator();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.listIterator();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.isCoded();
      derivedVariable0.getFilePath();
      derivedVariable0.getCleaningDescription();
      System.setCurrentTimeMillis((-1494L));
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("5l1x");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getDisplayName();
      derivedVariable0.getName();
      derivedVariable0.getForm();
      derivedVariable0.getAvailability();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertTrue(derivedVariable0.isCoded());
      
      rawVariable0.getCategory();
      rawVariable0.getLabel();
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.745310661621597
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) supportingDocument0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate2.or(predicate1);
      arrayList0.removeIf(predicate3);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.getCleaningDescription();
      rawVariable0.notes = "v7FKGuSkNKJYGrGvNx";
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addSourceVariable(rawVariable0);
      ArrayList<Variable> arrayList1 = derivedVariable1.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList1);
      arrayList1.add((Variable) derivedVariable0);
      derivedVariable1.getLabel();
      arrayList1.add((Variable) rawVariable0);
      rawVariable0.clone();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.setQuestionNumber((String) null);
      User user1 = new User((String) null, "v7FKGuSkNKJYGrGvNx");
      ontologyTerm1.setIdentifier(65);
      OntologyTerm.detectFieldChanges(user1, ontologyTerm1, ontologyTerm1);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      derivedVariable0.setSourceVariables(arrayList1);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.146102255087602
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.setIdentifier((-1400));
      User user0 = new User();
      user0.setPassword("supportingDocument.title.label");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("-1400", rawVariable0.getDisplayItemIdentifier());
      assertEquals((-1400), rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.setAvailability("!0g=<]'nicI-");
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable0);
      derivedVariable0.getCleaningStatus();
      assertEquals("!0g=<]'nicI-", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("\"");
      rawVariable0.setCategory("\"");
      User user0 = new User("\"", "\"");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("\"", derivedVariable0.getLabel());
      assertEquals("\"", rawVariable0.getCategory());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      Variable variable0 = rawVariable0.getAlternativeVariable();
      assertFalse(variable0.isNewRecord());
      assertFalse(variable0.isCleaned());
      assertEquals("0", variable0.getDisplayItemIdentifier());
      assertFalse(variable0.isCoded());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.9971515848932915
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isCoded());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertFalse(rawVariable0.isNewRecord());
      assertNotNull(macawChangeEvent0);
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.211667659113366
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "8";
      User user0 = new User("UNABLE_TO_DELETE_CATEGORY", "4kVoJb");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      valueLabel0.setMissingValue(false);
      // Undeclared exception!
      try { 
        rawVariable0.addValueLabel(valueLabel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertTrue(boolean0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setLabel("k");
      derivedVariable0.setAlias("k");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("k", derivedVariable0.getAlias());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("Unknown", derivedVariable0.getAvailability());
      
      derivedVariable0.setAvailability("");
      derivedVariable0.columnEnd = "'WH9\"";
      String string0 = derivedVariable0.getAvailability();
      assertEquals("", string0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.4428352147175594
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "user.email.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getColumnStart();
      Variable.validateFields(derivedVariable0);
      assertEquals("user.email.label", derivedVariable0.getColumnStart());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.581687993791636
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      derivedVariable0.setNotes("kA<;4");
      derivedVariable0.setCategory("UNABLE_TO_GET_VARIABLE_NAMES");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setName("DUPLICATE_SOURCE_VARIABLE_EXISTS");
      User user0 = new User("DUPLICATE_SOURCE_VARIABLE_EXISTS", "DUPLICATE_SOURCE_VARIABLE_EXISTS");
      derivedVariable0.getNotes();
      assertEquals("DUPLICATE_SOURCE_VARIABLE_EXISTS", derivedVariable0.getName());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.282360045759959
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertTrue(rawVariable0.isCleaned());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.4986122886681095
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.4381098652423896
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.notes = "*QA";
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("*QA", derivedVariable0.getNotes());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.6851309643957646
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("k");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      derivedVariable0.getDisplayName();
      assertEquals("k", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.4382661396602674
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.form = "}";
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable1.getForm();
      assertEquals("}", derivedVariable1.getForm());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=4.184814413463534
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList1 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals(0, arrayList1.size());
      
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setIdentifier((-411));
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm2);
      assertFalse(boolean0);
      
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(877);
      rawVariable0.setAvailability((String) null);
      derivedVariable0.setLabel("variable.alias.label");
      derivedVariable0.createVariableSummary();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.getDisplayItemIdentifier();
      assertEquals("variable.alias.label", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.7437009261328056
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.1341286000959614
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "\"NtK&maKkI/[V$8Q";
      rawVariable0.getColumnEnd();
      RawVariable rawVariable1 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getYear();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setCategory("");
      derivedVariable0.getCategory();
      String string0 = "UNABLE_TO_GET_ORIGINAL_CLEANING_STATE";
      User user0 = new User("", "UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      user0.setStatus("UNABLE_TO_CREATE_USER");
      try { 
        User.checkValidEmail("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("k");
      rawVariable0.getCleaningDescription();
      assertEquals("k", rawVariable0.getNotes());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("cT");
      rawVariable0.getAvailability();
      rawVariable0.getName();
      rawVariable0.getCodeBookNumber();
      assertEquals("cT", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.6851309643957646
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("k");
      derivedVariable0.codeBookNumber = "k";
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("k", derivedVariable0.getName());
      assertEquals("k", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isNewRecord());
      assertTrue(boolean0);
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "79Aso@W'nlQ$<&_%";
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("k");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("k", derivedVariable0.getName());
      assertEquals("79Aso@W'nlQ$<&_%", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "Unknown";
      String string0 = rawVariable0.getFilePath();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", string0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.6851309643957646
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("\"");
      rawVariable0.questionNumber = "\"";
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("\"", rawVariable0.getQuestionNumber());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = null;
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setCategory("UNABLE_TO_CREATE_RAW_VARIABLE");
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.setIsNewRecord(true);
      ontologyTerm0.getDisplayName();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertEquals("UNABLE_TO_CREATE_RAW_VARIABLE", derivedVariable0.getCategory());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.6305437208796447
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.383522442827672
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertTrue(rawVariable0.isCleaned());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.6851309643957646
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setLabel("k");
      derivedVariable1.columnEnd = "k";
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("k", derivedVariable0.getLabel());
      assertEquals("", derivedVariable1.getDisplayName());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setYear("\"");
      derivedVariable0.setLabel("\"");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("\"", derivedVariable0.getLabel());
      assertEquals("\"", rawVariable0.getYear());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.4435896416877303
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("variable.year.label");
      derivedVariable0.setLabel("variable.year.label");
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getLabel();
      assertEquals("variable.year.label", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.067461933429295
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = true;
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.8937277100473913
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-606));
      ontologyTerm1.setNewRecord(false);
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.218655583840207
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isCleaned());
      
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      boolean boolean0 = rawVariable0.isCleaned();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setLabel(">NA5W]a");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals(">NA5W]a", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("variable.cleaningDescription.label");
      User user0 = new User("variable.cleaningDescription.label", "variable.cleaningDescription.label");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("variable.cleaningDescription.label", derivedVariable0.getLabel());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("variable.year.label");
      derivedVariable0.setLabel("variable.year.label");
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("variable.year.label", derivedVariable0.getDisplayName());
      assertEquals("variable.year.label", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("\"");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("\"", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setNotes(" Q4/xYrxCN-kNzZ");
      ontologyTerm0.setTerm(" Q4/xYrxCN-kNzZ");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.createVariableSummary();
      assertEquals(" Q4/xYrxCN-kNzZ", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "blank";
      String string0 = rawVariable0.getQuestionNumber();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", string0);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "UNABLE_TO_GET_ORIGINAL_CATEGORY";
      String string0 = rawVariable0.getColumnEnd();
      assertFalse(rawVariable0.isCoded());
      assertEquals("", string0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("Y.Dm*nvA");
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Y.Dm*nvA", derivedVariable0.getName());
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("variable.year.label");
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("variable.year.label", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setForm((String) null);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, variableSummary0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("wU");
      rawVariable0.getFilePath();
      rawVariable0.createVariableSummary();
      assertEquals("wU", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus("n^R");
      derivedVariable0.setLabel("\"");
      User user0 = new User("\"", "\"");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("\"", derivedVariable0.getLabel());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber((String) null);
      derivedVariable0.createVariableSummary();
      derivedVariable0.getCodeBookNumber();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.containsOntologyTerm(ontologyTerm0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setCleaningDescription((String) null);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges((User) null, rawVariable2, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "general.error.blankField";
      derivedVariable0.getSourceVariables();
      String string0 = derivedVariable0.getCodeBookNumber();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.3643764676852554
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isCleaned());
      
      rawVariable0.setCleaned(true);
      rawVariable0.codeBookNumber = "3%lpGz{bL5=|1h";
      Variable.validateFields(rawVariable0);
      rawVariable0.createVariableSummary();
      assertTrue(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("zKw");
      rawVariable0.getYear();
      rawVariable0.getAvailability();
      assertEquals("zKw", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.8989037920123204
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getAlias();
      derivedVariable0.setIdentifier(119);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable1);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setQuestionNumber("6RnOuC.Qo");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.setCoded(false);
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.getColumnStart();
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable1.addSourceVariables(arrayList0);
      Variable.validateFields(rawVariable0);
      derivedVariable0.clone();
      derivedVariable1.isCoded();
      int int0 = derivedVariable0.getIdentifier();
      assertEquals("6RnOuC.Qo", derivedVariable0.getQuestionNumber());
      assertEquals(119, int0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = ".}(iyrE#:$!";
      String string0 = rawVariable0.getFilePath();
      assertEquals("", string0);
      
      rawVariable0.getValueLabels();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.6820748660026672
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.getValueLabels();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.554218296452355
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.82393298130802
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("variable.isCoded.label");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getQuestionNumber();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.5806560020475704
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      rawVariable0.setValueLabels(arrayList0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertFalse(boolean0);
      
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.5806560020475704
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.6256902943605223
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeValueLabel((ValueLabel) null);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("variable.name.label");
      rawVariable0.clone();
      assertEquals("variable.name.label", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayItemIdentifier();
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.7542454494884048
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      User user0 = new User();
      user0.setIdentifier((-4051));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user0.clone();
      derivedVariable0.createVariableSummary();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.setAlias("G.An.P/v/[y>");
      rawVariable0.questionNumber = "";
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.getAlias();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      arrayList1.clone();
      derivedVariable0.setSupportingDocuments(arrayList1);
      rawVariable0.getIdentifier();
      derivedVariable0.setForm("G.An.P/v/[y>");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("G.An.P/v/[y>", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("Ck~xqU");
      User user0 = new User("macaw.util.ValidationUtility", "e &(e w%\"AsJMw'(~6 ");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Ck~xqU", derivedVariable0.getAlias());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "general.fieldValue.blank";
      rawVariable0.getValueLabels();
      String string0 = rawVariable0.getAlias();
      assertEquals("", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList0);
      ArrayList<String> arrayList1 = Variable.validateFields(rawVariable0);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(1, arrayList1.size());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      derivedVariable0.setFilePath("j)c)yMq");
      derivedVariable0.getFilePath();
      assertEquals("j)c)yMq", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.getForm();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>(1799);
      derivedVariable0.setYear("8/b^(BrCNf");
      derivedVariable0.getYear();
      derivedVariable0.createVariableSummary();
      assertEquals("8/b^(BrCNf", derivedVariable0.getYear());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("d");
      User user0 = new User();
      derivedVariable0.createVariableSummary();
      assertEquals("d", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("k");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.createVariableSummary();
      assertEquals("k", derivedVariable0.getName());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isNewRecord());
      
      rawVariable0.setIsNewRecord(true);
      Variable.validateFields(rawVariable0);
      assertTrue(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("UNABLE_TO_UPDATE_DERIVED_VARIABLE");
      Variable.validateFields(rawVariable0);
      assertEquals("UNABLE_TO_UPDATE_DERIVED_VARIABLE", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.6809796293259174
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("?;");
      derivedVariable0.clone();
      Variable.validateFields(derivedVariable0);
      assertEquals("?;", derivedVariable0.getCleaningDescription());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("Y>S6H");
      rawVariable0.clone();
      assertEquals("Y>S6H", rawVariable0.getYear());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.5806560020475704
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "T[;";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getName());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("", derivedVariable1.getFilePath());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("T[;", derivedVariable1.getCodeBookNumber());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getLabel());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getCleaningDescription());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.625071549495739
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      rawVariable0.clone();
      // Undeclared exception!
      try { 
        Variable.validateFields(rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "macaw.businessLayer.Variable";
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList0.size());
      
      String string0 = rawVariable0.getNotes();
      assertEquals("", string0);
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "macaw.util.ValidationUtility";
      Variable.validateFields(rawVariable0);
      rawVariable0.getQuestionNumber();
      assertEquals("macaw.util.ValidationUtility", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.5813690145252886
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("OH4o.xU<Xr");
      rawVariable0.setCleaned(true);
      rawVariable0.clone();
      rawVariable0.getForm();
      assertEquals("OH4o.xU<Xr", rawVariable0.getForm());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.620795178839221
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.codeBookNumber = "variable.columnStart.label";
      rawVariable1.setAlias("variable.columnStart.label");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      assertEquals("variable.columnStart.label", rawVariable1.getCodeBookNumber());
      assertEquals("variable.columnStart.label", rawVariable1.getAlias());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("+ViZu0{");
      Variable.validateFields(rawVariable0);
      rawVariable0.getColumnEnd();
      assertEquals("+ViZu0{", rawVariable0.getForm());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.questionNumber = "UNABLE_TO_FILTER_ONTOLOGY_TERMS";
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("UNABLE_TO_FILTER_ONTOLOGY_TERMS", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("o5)3");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("o5)3", rawVariable0.getNotes());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.583838507642472
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("`)~/3-");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("`)~/3-", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = " type=";
      derivedVariable0.columnStart = " type=";
      derivedVariable0.getCodeBookNumber();
      assertEquals(" type=", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("%");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("%", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.620795178839221
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("n6s`.>Ipxsuc'f'@9BE");
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getColumnEnd();
      assertEquals("n6s`.>Ipxsuc'f'@9BE", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("INVALID_CLEANING_STATE");
      Variable.validateFields(rawVariable0);
      assertEquals("INVALID_CLEANING_STATE", rawVariable0.getYear());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("@VsF@wPvrtoL");
      derivedVariable0.getYear();
      derivedVariable0.getValueLabels();
      assertEquals("@VsF@wPvrtoL", derivedVariable0.getYear());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel(".");
      User user0 = new User(".", ".");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals(".", derivedVariable0.getLabel());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=3.6256902943605223
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd((String) null);
      String string0 = derivedVariable0.getCodeBookNumber();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertNotNull(string0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.1341286000959614
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCodeBookNumber((String) null);
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable1);
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals(1, arrayList0.size());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("variable.alias.label");
      boolean boolean0 = derivedVariable0.isCoded();
      assertEquals("variable.alias.label", derivedVariable0.getNotes());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.8872385926133708
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, (Variable) null);
      assertFalse(derivedVariable0.isNewRecord());
      assertNull(macawChangeEvent0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getAlternativeVariable();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.554218296452355
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      User user0 = new User("", ".}(iyrE#:$!");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertTrue(arrayList0.isEmpty());
      
      derivedVariable0.isCleaned();
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "3M%JU-";
      String string0 = rawVariable0.getName();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", string0);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "5$";
      String string0 = derivedVariable0.getDisplayName();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", string0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("66hjR[)! 1.dK]H");
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertEquals("66hjR[)! 1.dK]H", derivedVariable0.getNotes());
      assertFalse(arrayList0.isEmpty());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber(",,IK+{niV,u+Z@dB");
      derivedVariable0.getSupportingDocuments();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(449);
      rawVariable0.getFilePath();
      assertEquals("449", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=3.895173285276612
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getAlias();
      derivedVariable0.setIdentifier((-1));
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable1);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable1.setQuestionNumber("");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.setCoded(false);
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.getColumnStart();
      Variable.validateFields(rawVariable0);
      derivedVariable1.clone();
      derivedVariable0.isCoded();
      int int0 = derivedVariable0.getIdentifier();
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = " yU+e> T$";
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals(" yU+e> T$", rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getFilePath());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=3.668962921257037
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      rawVariable0.getAlias();
      rawVariable0.getAvailability();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "Ca]Z])_q";
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Ca]Z])_q", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getForm());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=3.581687993791636
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.clone();
      String string0 = rawVariable0.getYear();
      assertEquals("", string0);
  }

  /**
  //Test case number: 145
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isNewRecord());
  }
}
