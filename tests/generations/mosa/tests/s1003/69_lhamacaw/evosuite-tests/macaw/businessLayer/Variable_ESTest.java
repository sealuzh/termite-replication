/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 13 22:18:04 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.7728195861201694
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("Unknown", derivedVariable0.getCategory());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("variable.isCleaned.saveChanges.changedToNotClean");
      ontologyTerm0.setDescription("");
      derivedVariable0.setCategory("");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      arrayList0.retainAll(linkedList0);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.getCategory();
      derivedVariable0.clone();
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getAvailability();
      derivedVariable0.getAvailability();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      user0.setPhone("Jh]Ub!#z$56 9B)");
      user0.setAddressLine1("Unknown");
      Variable.validateFields(derivedVariable0);
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("variable.name.label");
      rawVariable0.setCoded(false);
      rawVariable0.questionNumber = null;
      rawVariable0.setAlias((String) null);
      rawVariable0.getQuestionNumber();
      rawVariable0.createVariableSummary();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      String string0 = "prSXD}VIumY_ygm/)g";
      derivedVariable0.setCleaningDescription("prSXD}VIumY_ygm/)g");
      ArrayList<DerivedVariable> arrayList1 = new ArrayList<DerivedVariable>();
      arrayList1.listIterator();
      // Undeclared exception!
      try { 
        arrayList0.set(1669, rawVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1669, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setValueLabels((ArrayList<ValueLabel>) null);
      derivedVariable1.getValueLabels();
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.2085716838811678
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(165);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getDisplayItemIdentifier();
      assertEquals(165, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.047707978151193
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("rUu~-=A=bT/QP\"cFMw", (String) null);
      user0.setIdentifier(2452);
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      rawVariable0.setName((String) null);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.setForm("UNABLE_TO_GET_ALTERNATIVE_VARIABLE");
      ontologyTerm0.setIdentifier(66);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getDisplayName();
      rawVariable0.getOntologyTerms();
      rawVariable0.createVariableSummary();
      rawVariable0.getCategory();
      rawVariable0.createVariableSummary();
      rawVariable0.getYear();
      assertEquals("UNABLE_TO_GET_ALTERNATIVE_VARIABLE", rawVariable0.getForm());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setColumnStart("NON_EXISTENT_VARIABLE_FOR_SUMMARY");
      derivedVariable0.addSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.getColumnStart();
      assertEquals("NON_EXISTENT_VARIABLE_FOR_SUMMARY", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("}");
      rawVariable0.setAvailability("}");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.clone();
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      // Undeclared exception!
      try { 
        rawVariable0.addValueLabel(valueLabel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.620795178839221
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = null;
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals(0, arrayList0.size());
      
      int int0 = derivedVariable0.getIdentifier();
      assertEquals(0, int0);
      
      String string0 = derivedVariable0.getColumnStart();
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertNull(string0);
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.4379454726729337
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-1717986916));
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument1);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      User user0 = new User("c", "");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals(0, arrayList0.size());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      supportingDocument0.setIdentifier((-1860));
      rawVariable0.setFilePath("5");
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertEquals("5", rawVariable0.getFilePath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.1658242618212364
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      Variable variable0 = derivedVariable0.getAlternativeVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      derivedVariable1.setCleaningStatus((String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("\"");
      ontologyTerm0.setTerm(">");
      ArrayList<SupportingDocument> arrayList0 = derivedVariable1.getSupportingDocuments();
      variable0.addSupportingDocuments(arrayList0);
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      variable0.createVariableSummary();
      supportingDocument0.clone();
      variable0.setAlternativeVariable(derivedVariable0);
      variable0.addSupportingDocument(supportingDocument0);
      derivedVariable1.containsSourceVariable(variable0);
      VariableSummary variableSummary0 = derivedVariable1.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      variable0.getSupportingDocuments();
      variable0.getLabel();
      derivedVariable0.getForm();
      derivedVariable0.getSourceVariables();
      User user0 = new User(">", (String) null);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      
      derivedVariable1.getOntologyTerms();
      String string0 = variable0.getCleaningStatus();
      assertFalse(variable0.isCleaned());
      assertFalse(variable0.isNewRecord());
      assertNull(string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      String string0 = derivedVariable0.getNotes();
      assertNull(string0);
      
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.7707937362960617
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      User user0 = new User("L=PIfeph>I ", "H+V4");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user0.setAffiliation("UNABLE_TO_ASSOCIATE_ONTOLOGY_TERM");
      user0.setLastName("L=PIfeph>I ");
      user0.setFirstName("H+V4");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(false);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.setCleaningStatus("");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getDisplayName();
      rawVariable0.getValueLabels();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      derivedVariable0.getCleaningStatus();
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.805383313963734
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("U-S");
      rawVariable0.setColumnEnd((String) null);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.getColumnEnd();
      System.setCurrentTimeMillis(3947L);
      rawVariable0.getCleaningDescription();
      assertEquals("U-S", rawVariable0.getAlias());
      
      User user0 = new User((String) null, "T.Z0x-4}:kT@g");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setCoded(true);
      derivedVariable0.form = null;
      derivedVariable0.setNotes((String) null);
      derivedVariable0.isCoded();
      rawVariable0.codeBookNumber = null;
      rawVariable0.getCodeBookNumber();
      rawVariable0.getAlternativeVariable();
      rawVariable0.isCoded();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      // Undeclared exception!
      try { 
        derivedVariable0.containsSourceVariable((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(false);
      derivedVariable0.setCoded(true);
      derivedVariable0.form = null;
      derivedVariable0.setNotes("F}FAqx]Wn8oawIKc7");
      derivedVariable0.isCoded();
      derivedVariable0.setIdentifier(118);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.getOntologyTerms();
      assertTrue(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.1341286000959614
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-506));
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setCodeBookNumber(";N`\"%8L@");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      derivedVariable0.getCodeBookNumber();
      assertEquals(";N`\"%8L@", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.5927751740651166
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(1);
      rawVariable0.createVariableSummary();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, rawVariable0);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.6000899182080524
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      User user0 = new User((String) null, (String) null);
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable2);
      assertEquals(0, arrayList0.size());
      
      String string0 = derivedVariable0.getName();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertNull(string0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName(")");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setYear(")");
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals(")", derivedVariable0.getDisplayName());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlias(", h:<");
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals(", h:<", derivedVariable1.getAlias());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = ";N`\"%8L@";
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.getQuestionNumber();
      assertEquals(";N`\"%8L@", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.658873163649659
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.setCleaned(true);
      User user1 = new User("O7{90P7dl]", "O7{90P7dl]");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
      rawVariable0.createVariableSummary();
      boolean boolean0 = derivedVariable0.isCleaned();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.653620128854776
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDescription("EQ$Lf");
      derivedVariable0.addSupportingDocument(supportingDocument1);
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      derivedVariable0.removeSourceVariable((Variable) null);
      derivedVariable0.getAlias();
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.6676082383884046
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getCleaningStatus();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier((-3704));
      derivedVariable0.createVariableSummary();
      derivedVariable0.addSourceVariable(rawVariable0);
      System.setCurrentTimeMillis(0L);
      derivedVariable0.getLabel();
      derivedVariable0.clone();
      User user0 = new User("", "#Lg4|4o[");
      try { 
        User.checkValidEmail("/");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"/\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerm(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.301608716407634
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertFalse(rawVariable0.isCoded());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"blank\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.620959571408677
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("\"");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getName();
      assertEquals("\"", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("&");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCodeBookNumber("&");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("&", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("/:d`,KggZx.T;~ZPZ");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAvailability("/:d`,KggZx.T;~ZPZ");
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("/:d`,KggZx.T;~ZPZ", derivedVariable1.getAvailability());
      assertEquals("/:d`,KggZx.T;~ZPZ", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("\"");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getDisplayName();
      assertEquals("\"", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      derivedVariable0.getCategory();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "Unknown";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("Unknown");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.getColumnStart();
      rawVariable0.getCleaningStatus();
      rawVariable0.getColumnEnd();
      rawVariable0.getDisplayName();
      assertEquals("Unknown", rawVariable0.getColumnEnd());
      
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals(1, arrayList0.size());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.6851309643957646
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("K");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.form = "K";
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("K", derivedVariable1.getForm());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.325966967244622
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("K", "K");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.732786054297927
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      derivedVariable0.setName("\"");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      derivedVariable1.createVariableSummary();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      assertEquals("\"", derivedVariable0.getName());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.7096612729848757
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("K");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel("K");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("K", derivedVariable1.getLabel());
      assertEquals("K", derivedVariable0.getName());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("\"");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("\"", "\"");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("\"", derivedVariable0.getLabel());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel("");
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("", derivedVariable0.getName());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.4381098652423896
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "IZ05V} )y";
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("IZ05V} )y", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.653990088159252
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.4410832744684536
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "variable.name.label";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("variable.name.label", derivedVariable0.getNotes());
      
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("\"");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("\"", derivedVariable0.getLabel());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.760750468781551
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(2609);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getQuestionNumber();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("\"");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("\"", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.5272886853327274
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("K");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.questionNumber = "K";
      User user0 = new User("K", "K");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("K", derivedVariable1.getQuestionNumber());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.05569358184064
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.columnStart = "}fdcEh";
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", variableSummary0.getName());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getLabel());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "variable.saveChanges.valueChanged";
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", variableSummary0.getLabel());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", variableSummary0.getYear());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertEquals("", variableSummary0.getName());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.707883557241649
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getValueLabels();
      rawVariable0.notes = "macaw.businessLayer.ValueLabel$EditingOperationType";
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getLabel());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("macaw.businessLayer.OntologyTerm");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      
      String string0 = rawVariable0.getCategory();
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.5397699774140716
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("rHF +Y(O$tcEb~[c,");
      derivedVariable0.clone();
      assertEquals("rHF +Y(O$tcEb~[c,", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.5350009613862015
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.notes = "macaw.system.ChangeEventType";
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCleaned());
      assertEquals("macaw.system.ChangeEventType", rawVariable1.getNotes());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getName());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("", rawVariable1.getCleaningDescription());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.624728496322497
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "\"0.4HTo21FUE/q";
      derivedVariable0.clone();
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "9-,%{`'~8.:cQd>~Mi";
      derivedVariable0.setAlias(">j@MaEbZ");
      derivedVariable0.setLabel("UNABLE_TO_GET_CATEGORIES");
      derivedVariable0.getAlias();
      assertEquals(">j@MaEbZ", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.6868977693384446
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(3769);
      ontologyTerm0.getDisplayName();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus("3?wd&iQ");
      derivedVariable0.setName("X");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("X", "X");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("X", derivedVariable0.getDisplayName());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "";
      derivedVariable0.getQuestionNumber();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.6422165264472737
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.trimToSize();
      User user0 = new User("", "macaw.businessLayer.OntologyTerm");
      User user1 = new User("", "macaw.businessLayer.OntologyTerm");
      user0.setFirstName("macaw.businessLayer.OntologyTerm");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm1);
      arrayList0.add(ontologyTerm1);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setQuestionNumber("Um9.8");
      rawVariable0.setIsNewRecord(true);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setFilePath("macaw.businessLayer.OntologyTerm");
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.setCleaningStatus("uBY`vDjK{1Y'd");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      assertEquals("Um9.8", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getDisplayName();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertFalse(rawVariable0.isNewRecord());
      assertNull(macawChangeEvent0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.trimToSize();
      rawVariable0.setCategory("macaw.businessLayer.OntologyTerm");
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setQuestionNumber("variable.saveChanges.valueChanged");
      rawVariable0.setIsNewRecord(true);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.isNewRecord();
      assertEquals("macaw.businessLayer.OntologyTerm", rawVariable0.getCategory());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "d2v7lizP6R";
      String string0 = derivedVariable0.getAlias();
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setColumnStart("");
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("variable.cleaningStatus.label");
      rawVariable0.clone();
      rawVariable0.getCategory();
      assertEquals("variable.cleaningStatus.label", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.485215761775983
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName(")");
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      Variable.validateFields(derivedVariable0);
      assertEquals(")", derivedVariable0.getDisplayName());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.getForm();
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.825162256654077
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.trimToSize();
      arrayList0.add(ontologyTerm0);
      String string0 = "Bl-";
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus("");
      derivedVariable0.setCleaned(true);
      String string1 = "P/1F+o%B0UyXW96=p<";
      derivedVariable0.addOntologyTerms(arrayList0);
      rawVariable0.clone();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.394714983677679
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(2473);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.questionNumber = "UNABLE_TO_ASSOCIATE_DOCUMENT";
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getLabel());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertEquals("", variableSummary0.getName());
      
      String string0 = rawVariable0.getLabel();
      assertEquals("", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.9971515848932915
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertNotNull(macawChangeEvent0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.684057485719354
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "jk2U`wp:.pIz8#Y";
      String string0 = rawVariable0.getQuestionNumber();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", string0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = null;
      String string0 = rawVariable0.getCleaningDescription();
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertNotNull(string0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.form = "l";
      String string0 = rawVariable0.getCodeBookNumber();
      assertEquals("", string0);
      
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertEquals("", variableSummary0.getDisplayName());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", variableSummary0.getYear());
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", variableSummary0.getLabel());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("K");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.createVariableSummary();
      assertEquals("K", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("\"");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCategory("\"");
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "Fy#";
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      String string0 = rawVariable0.getFilePath();
      assertEquals("", string0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.127429422638514
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("");
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.getAlias();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getDisplayItemIdentifier();
      derivedVariable1.setCategory("variable.alias.label");
      supportingDocument0.setDescription("");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable2.setColumnEnd("Jawbggu*-vUi/yD.sKY");
      ArrayList<MacawChangeEvent> arrayList1 = new ArrayList<MacawChangeEvent>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(1);
      derivedVariable2.containsOntologyTerm(ontologyTerm0);
      derivedVariable1.isCleaned();
      derivedVariable1.setColumnStart("0");
      derivedVariable2.setLabel("");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setCodeBookNumber("9ESAXIZ4);<(|]Vbd,w");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      derivedVariable0.getCodeBookNumber();
      assertEquals("9ESAXIZ4);<(|]Vbd,w", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "]E:{}/lI gS`s";
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("]E:{}/lI gS`s", derivedVariable0.getColumnStart());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertNotNull(macawChangeEvent0);
      
      derivedVariable0.getAlias();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      boolean boolean1 = rawVariable0.isNewRecord();
      assertFalse(boolean1 == boolean0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user0, (Variable) null, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.9498260458782015
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.8620891410921354
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("&");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable1.addValueLabel(valueLabel0);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("&", derivedVariable0.getName());
      
      derivedVariable1.getValueLabels();
      derivedVariable1.getAlternativeVariable();
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("UNABLE_TO_GET_ORIGINAL_USER");
      rawVariable0.clone();
      assertEquals("UNABLE_TO_GET_ORIGINAL_USER", rawVariable0.getLabel());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("]2XLJF9HaOX@`hD-%j");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("]2XLJF9HaOX@`hD-%j", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getYear());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("NON_EXISTENT_DOCUMENT_ASSOCIATION");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("NON_EXISTENT_DOCUMENT_ASSOCIATION", derivedVariable0.getAlias());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("Up<");
      rawVariable0.createVariableSummary();
      rawVariable0.getAlternativeVariable();
      assertEquals("Up<", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.9654211895134472
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("),7&3j#");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("),7&3j#", derivedVariable0.getColumnEnd());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=3.791332361499825
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      RawVariable rawVariable2 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertFalse(rawVariable2.isCoded());
      assertEquals(0, rawVariable2.getIdentifier());
      assertEquals("Unknown", rawVariable2.getCategory());
      assertEquals("Unknown", rawVariable2.getAvailability());
      assertFalse(rawVariable2.isNewRecord());
      assertFalse(rawVariable2.isCleaned());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=3.6260602536649986
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.getAlternativeVariable();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=3.5806560020475704
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      String string0 = rawVariable1.getDisplayItemIdentifier();
      assertFalse(rawVariable1.isCleaned());
      assertEquals("0", string0);
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(false);
      rawVariable0.getAvailability();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.898052727574104
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.setForm("");
      derivedVariable0.columnEnd = "";
      Variable.validateFields(derivedVariable0);
      rawVariable0.setName("variable.alias.label");
      derivedVariable0.setCategory("1{Yhto:'Vn ");
      derivedVariable0.removeSourceVariable(rawVariable0);
      Variable.validateFields(derivedVariable0);
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.setIsNewRecord(false);
      derivedVariable0.setAlias("qPU`rPn40vajU96P<=");
      derivedVariable0.getName();
      rawVariable0.getColumnEnd();
      rawVariable0.setFilePath((String) null);
      derivedVariable0.clone();
      derivedVariable0.setCleaningDescription((String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.setIdentifier(1);
      derivedVariable0.getIdentifier();
      derivedVariable0.setColumnEnd((String) null);
      derivedVariable0.setIdentifier(597);
      RawVariable.validateFields(rawVariable0);
      derivedVariable0.setLabel("variable.alias.label");
      derivedVariable0.getLabel();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setLabel("variable.alias.label");
      assertEquals("variable.alias.label", rawVariable0.getLabel());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.684989220951399
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("\"");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.getLabel();
      assertEquals("\"", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("variable.name.label");
      rawVariable0.clone();
      assertEquals("variable.name.label", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("A^");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("A^", derivedVariable0.getLabel());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.684989220951399
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.setName("UNABLE_TO_GET_VARIABLE_IDENTIFIER");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("UNABLE_TO_GET_VARIABLE_IDENTIFIER", derivedVariable0.getDisplayName());
      
      DerivedVariable.validateFields(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.setAlternativeVariable(rawVariable0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.438691852729659
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isCleaned());
      
      derivedVariable0.setCleaned(true);
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertTrue(derivedVariable0.isCleaned());
      assertFalse(arrayList0.isEmpty());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setAlternativeVariable(rawVariable0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("==0,XxH(U");
      rawVariable0.clone();
      assertEquals("==0,XxH(U", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "][{J?RVVue`j";
      String string0 = derivedVariable0.getNotes();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", string0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes((String) null);
      String string0 = rawVariable0.getForm();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertNotNull(string0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("Unknown");
      rawVariable0.getCleaningDescription();
      assertEquals("Unknown", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCoded(false);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.785599792591246
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<ValueLabel> arrayList1 = rawVariable0.getValueLabels();
      arrayList1.iterator();
      rawVariable0.setValueLabels(arrayList1);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setIdentifier(0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName((String) null);
      rawVariable0.setFilePath("O]?rjcrDg1ed]G#)#:");
      ontologyTerm0.setDescription("variable.columnEnd.label");
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.clone();
      rawVariable0.getFilePath();
      System.setCurrentTimeMillis(0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList2);
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, derivedVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber(":2@");
      derivedVariable0.getFilePath();
      assertEquals(":2@", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=3.8435031059236717
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("user.userID.saveChanges");
      derivedVariable0.getValueLabels();
      derivedVariable0.setColumnStart("s+ehOx,NvqJsC=/,;]");
      User user0 = new User("user.userID.saveChanges", "variable.cleaningDescription.label");
      user0.setPostCode("variable.columnStart.label");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.isCoded();
      derivedVariable0.getCategory();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("variable.columnEnd.label");
      rawVariable0.clone();
      rawVariable0.getSupportingDocuments();
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getFilePath();
      assertEquals("user.userID.saveChanges", derivedVariable0.getLabel());
      
      String string0 = rawVariable0.getCategory();
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.setYear("Q!l");
      derivedVariable0.setForm("Q!l");
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getForm();
      derivedVariable0.getFilePath();
      derivedVariable0.getDisplayItemIdentifier();
      assertEquals("Q!l", derivedVariable0.getYear());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.746066410830336
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("variable.isCleaned.saveChanges.changedToNotClean");
      derivedVariable0.setLabel("general.fieldValue.unknown");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.notes = "variable.isCleaned.saveChanges.changedToNotClean";
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      derivedVariable1.getFilePath();
      assertEquals("variable.isCleaned.saveChanges.changedToNotClean", derivedVariable1.getNotes());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = null;
      String string0 = derivedVariable0.getFilePath();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertNotNull(string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("8~M");
      derivedVariable0.getAlternativeVariable();
      derivedVariable0.getAlias();
      assertEquals("8~M", derivedVariable0.getForm());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("oWMlOF_cv9[");
      rawVariable0.getNotes();
      assertEquals("oWMlOF_cv9[", rawVariable0.getNotes());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("MZWxX.1?W");
      rawVariable0.getQuestionNumber();
      assertEquals("MZWxX.1?W", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      rawVariable0.setCodeBookNumber("gPkQRA!-R,D4Q!");
      rawVariable0.getForm();
      assertEquals("gPkQRA!-R,D4Q!", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("h0\"nDfkC(V3O7");
      derivedVariable0.getDisplayName();
      assertEquals("h0\"nDfkC(V3O7", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "macaw.businessLayer.Variable";
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("macaw.businessLayer.Variable", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getForm());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.7651329968489042
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.setYear("BkB");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getYear();
      Variable.validateFields(derivedVariable0);
      assertEquals("BkB", derivedVariable0.getYear());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("-3G$_Px},AJlpiYm|");
      rawVariable0.clone();
      assertEquals("-3G$_Px},AJlpiYm|", rawVariable0.getYear());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("b2:S0JW0eu|*#m");
      derivedVariable0.getYear();
      assertEquals("b2:S0JW0eu|*#m", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "NON_EXISTENT_ONTOLOGY_TERM";
      String string0 = derivedVariable0.getYear();
      assertEquals("", string0);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("NO_ONTOLOGY_TERM_FILTER");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("NO_ONTOLOGY_TERM_FILTER", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm(":AMM");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals(":AMM", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=2.5159165513373076
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd((String) null);
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable1.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("6]4'G");
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals("6]4'G", rawVariable0.getColumnStart());
      assertFalse(arrayList0.isEmpty());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.getColumnStart();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isCleaned());
      
      rawVariable0.setCleaned(true);
      rawVariable0.getDisplayItemIdentifier();
      assertTrue(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-2075900857));
      int int0 = rawVariable0.getIdentifier();
      assertEquals("-2075900857", rawVariable0.getDisplayItemIdentifier());
      assertEquals((-2075900857), int0);
  }

  /**
  //Test case number: 142
  /*Coverage entropy=2.146102255087602
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-1606));
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("-1606", rawVariable0.getDisplayItemIdentifier());
      assertEquals((-1606), rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=2.554218296452355
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, arrayList1.size());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=2.460884963119022
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeValueLabel((ValueLabel) null);
      derivedVariable0.getAlternativeVariable();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }
}
