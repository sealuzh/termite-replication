/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 07 18:57:16 GMT 2020
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldVisitor;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4659992569610426
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1143);
      classWriter0.index = (-1000);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(1143, "StackMapTable", "StackMapTable", "StackMapTable", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9146224676606434
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65522);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      classWriter0.visit(49, 1, "D@<2O2Bz", "D@<2O2Bz", "D@<2O2Bz", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4110, "", "", "", "");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(113, byteArray0.length);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5859526183035508
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65522);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      classWriter0.visit(49, 1, "D@<2O2Bz", "D@<2O2Bz", "D@<2O2Bz", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4110, "", "", "", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5859526183035508
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65522);
      classWriter0.index = (-4701);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "", "", "", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65535);
      FieldVisitor fieldVisitor0 = classWriter0.visitField(65535, "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations");
      // Undeclared exception!
      try { 
        fieldVisitor0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1138);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1138, "_hQzDtDJ", "_hQzDtDJ", "_hQzDtDJ", "_hQzDtDJ");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2248);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2248, "", ":}%TPNaB", "", "Signature");
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putInt(1);
      byteVector1.length = 2248;
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation("hv", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1157);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(1157, "K hQ_unBfO+c", "K hQ_unBfO+c", "K hQ_unBfO+c", "K hQ_unBfO+c");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.length = 202;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6615632381579821
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(572);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "uloa", "uloa", "uloa", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = 572;
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 1189, "The filters must not be null", "The filters must not be null", "The filters must not be null", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2248);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.put12(1, 36);
      byte[] byteArray0 = new byte[2];
      byteVector1.data = byteArray0;
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2248, "Signature", "Signature", "value ", "Signature");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6330395116644678
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1189);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(1189, "N@V}g+;", "N@V}g+;", "N@V}g+;", "N@V}g+;");
      Attribute attribute0 = new Attribute("N@V}g+;");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6128694524619496
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65494);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65494, ">>\"w'ov+6bfY'4[;S", ">>\"w'ov+6bfY'4[;S", ">>\"w'ov+6bfY'4[;S", ">>\"w'ov+6bfY'4[;S");
      fieldWriter0.visitAnnotation(">>\"w'ov+6bfY'4[;S", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6128694524619496
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65535);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(65535, "RuntimenvisileAnnotations", "RuntimenvisileAnnotations", "RuntimenvisileAnnotations", "RuntimenvisileAnnotations");
      fieldWriter0.visitAnnotation("RuntimenvisileAnnotations", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4659992569610426
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1189);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(1189, "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", (String) null, "RuntimeInvisibleAnnotations");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4361623253853443
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65519);
      classWriter0.version = 65519;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65519, "D@02O2Bz", "D@02O2Bz", "D@02O2Bz", "D@02O2Bz");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4361623253853443
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-445));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-445), "<#)b.xz", "<#)b.xz", "<#)b.xz", "<#)b.xz");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.5859526183035508
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65527);
      classWriter0.version = 65527;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65527, "D@02O2Bz", "D@02O2Bz", "D@02O2Bz", "D@02O2Bz");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.5859526183035508
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-59));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-59), "D@02O2Bz", "D@02O2Bz", "D@02O2Bz", "D@02O2Bz");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.8599672810355049
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1232));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "!laB+|", "!laB+|", "!laB+|", "!laB+|");
      fieldWriter0.visitAnnotation("!laB+|", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.8239592165010823
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65521);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65521, ">>\"w'ovs+6bfY'4[;S", ">>\"w'ovs+6bfY'4[;S", ">>\"w'ovs+6bfY'4[;S", ">>\"w'ovs+6bfY'4[;S");
      fieldWriter0.visitAnnotation(">>\"w'ovs+6bfY'4[;S", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(42, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.6108643020548935
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1189);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(1189, "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", (String) null, "RuntimeInvisibleAnnotations");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65530);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65530, ">>\"w'ov+6bfm'G[hS", ">>\"w'ov+6bfm'G[hS", ">>\"w'ov+6bfm'G[hS", ">>\"w'ov+6bfm'G[hS");
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 65530, ">>\"w'ov+6bfm'G[hS", ">>\"w'ov+6bfm'G[hS", ">>\"w'ov+6bfm'G[hS", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(425);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 28, "", "", "}P5%P]@M X", "}P5%P]@M X");
      fieldWriter0.visitEnd();
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.8239592165010823
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1153);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(1153, "jA", "jA", "jA", "jA");
      Attribute attribute0 = new Attribute("RuntimeVisibleAnnotations");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
