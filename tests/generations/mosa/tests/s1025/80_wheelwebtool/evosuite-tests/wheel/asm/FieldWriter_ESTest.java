/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 02:24:17 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3590669121050878
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2248);
      classWriter0.newNameType("bJbrvt", "6O6,48x0\"(OBB`_lZ");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-Hg/x3OhuRWob+wVsfg";
      stringArray0[1] = "p3eL;2zn";
      stringArray0[2] = "-Hg/x3OhuRWob+wVsfg";
      stringArray0[3] = "-Hg/x3OhuRWob+wVsfg";
      stringArray0[4] = "-Hg/x3OhuRWob+wVsfg";
      stringArray0[5] = "u&9a4`o";
      stringArray0[6] = "p3eL;2zn";
      classWriter0.visit(49, 54, "Invalid IOCase name: ", "bJbrvt", "6O6,48x0\"(OBB`_lZ", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131065, "SourceFile", "6O6,48x0\"(OBB`_lZ", "6O6,48x0\"(OBB`_lZ", "-Hg/x3OhuRWob+wVsfg");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      fieldWriter0.getSize();
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0145240468749794
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2254);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      classWriter0.visit(47, 1, "U3wYV'w", "U3wYV'w", "U3wYV'w", (String[]) null);
      classWriter0.index = (-1008);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1788), "U3wYV'w", "U3wYV'w", "t`:j", "U3wYV'w");
      classWriter0.newUTF8("");
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      ByteVector byteVector0 = null;
      try {
        byteVector0 = new ByteVector((-2593));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2248);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "m5B+BoI", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.putLong(2);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)6;
      byteArray0[2] = (byte) (-1);
      byteVector0.data = byteArray0;
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, (-591), "RuntimeInvisibleAnnotations", "Wj", (String) null, "G1=&j&(/bx@N!.Sv");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2254);
      classWriter0.visit(62, 1, "U3wYV'w", "U3wYV'w", "U3wYV'w", (String[]) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1788), "U3wYV'w", "U3wYV'w", "U3wYV'w", "U3wYV'w");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-36));
      classWriter0.visit(2248, 2248, "ConstantValue", "", "Zb#`jh1c", (String[]) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3144), "ConstantValue", "", "tEeHej|3M>%", "");
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.put11(2248, 1);
      fieldWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector1);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1416);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1416, "M", "M", "M", "M");
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = 1416;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0832409930999294
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1449);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1449, "", "", "", "");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector(1449);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1431);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1431, "", "", "", "");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0829081047004716
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2248);
      ByteVector byteVector0 = new ByteVector();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "wheel.asm.ByteVector", "wheel.asm.ByteVector", (String) null, "wheel.asm.ByteVector");
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2265);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "f4</bu@JP;B", "f4</bu@JP;B", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2253);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "f4</bu@JP;B", "f4</bu@JP;B", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector(2253);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(9);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 9, "Ty", "Ty", "Ty", "Ty");
      fieldWriter0.visitAnnotation("LF+P 8t", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.4729427262458132
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2248);
      boolean boolean0 = true;
      String string0 = "";
      String string1 = "AT=^jS}*a}";
      String string2 = "Signature";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2248, "", ":}%TPNaB", "AT=^jS}*a}", "Signature");
      fieldWriter0.visitAnnotation("+86XjDEm\"L*[f=Nx_8V", false);
      fieldWriter0.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putInt(1);
      byteVector0.putLong((-4758L));
      ByteVector byteVector2 = byteVector1.put12(1, 36);
      fieldWriter0.put(byteVector2);
      fieldWriter0.put(byteVector1);
      byteVector1.length = 2248;
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation("hv", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1409);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1409, "RuntimeVisileParameterAnnotations", "RuntimeVisileParameterAnnotations", "RuntimeVisileParameterAnnotations", "RuntimeVisileParameterAnnotations");
      fieldWriter0.visitAnnotation("rwLh", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1314), "c}BOH1Q&bds9^`q'", "c}BOH1Q&bds9^`q'", "c}BOH1Q&bds9^`q'", "c}BOH1Q&bds9^`q'");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2248);
      ByteVector byteVector0 = new ByteVector();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "wheel.asm.ByteVector", "wheel.asm.ByteVector", "wheel.asm.ByteVector", "wheel.asm.ByteVector");
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.039435730626322
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1439);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1439, "RuntimeVisileParameterAnnotations", "RuntimeVisileParameterAnnotations", "RuntimeVisileParameterAnnotations", "RuntimeVisileParameterAnnotations");
      fieldWriter0.visitAnnotation("RuntimeVisileParameterAnnotations", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1439);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1770), "RuntimeVisileParameterAnnotations", "RuntimeVisileParameterAnnotations", "RuntimeVisileParameterAnnotations", "RuntimeVisileParameterAnnotations");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.2885387096069334
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2248);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "The fiters must not be null", "The fiters must not be null", (String) null, "The fiters must not be null");
      fieldWriter0.getSize();
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1416);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1416, "M", "M", "M", "M");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 1416, "M", "M", "M", "M");
      int int0 = fieldWriter1.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2257);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Ty", "Ty", "Ty", "Ty");
      Attribute attribute0 = new Attribute("Ty");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1449);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1449, "", "", "", "");
      fieldWriter0.visitAnnotation("", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2276);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "f4</bu@JP;r", "f4</bu@JP;r", (String) null, (Object) null);
      Attribute attribute0 = new Attribute("f4</bu@JP;r");
      fieldWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2253);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1, (String) null, (String) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1439);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1439, "RuntimeVisileParameterAnnotations", "RuntimeVisileParameterAnnotations", "RuntimeVisileParameterAnnotations", "RuntimeVisileParameterAnnotations");
      fieldWriter0.visitEnd();
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2248);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2, "Deprecated", "Deprecated", "Deprecated", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }
}
