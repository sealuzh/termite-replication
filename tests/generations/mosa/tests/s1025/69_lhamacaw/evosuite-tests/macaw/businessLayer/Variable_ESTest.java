/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 03:29:56 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.7466212728084187
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "?dHw=Y;s{";
      assertEquals("?dHw=Y;s{", rawVariable0.getColumnStart());
      
      rawVariable0.columnStart = null;
      rawVariable0.getColumnStart();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.setAddressLine1("");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      User user1 = new User("fvhx", (String) null);
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getNotes();
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.5810346049146524
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setForm((String) null);
      supportingDocument0.setIdentifier(1);
      rawVariable0.addSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      String string0 = derivedVariable0.getForm();
      assertFalse(derivedVariable0.isNewRecord());
      assertNull(string0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCategory());
      
      rawVariable0.getForm();
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("J");
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.createVariableSummary();
      rawVariable0.getForm();
      derivedVariable0.getColumnEnd();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.setFilePath((String) null);
      derivedVariable0.getFilePath();
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertEquals("J", derivedVariable0.getName());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear((String) null);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      String string0 = rawVariable0.getYear();
      assertNull(string0);
      
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.7787776958742754
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("lxAFfS0+8~<X}[u");
      derivedVariable0.getCleaningDescription();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFileName("lxAFfS0+8~<X}[u");
      rawVariable0.addSupportingDocument(supportingDocument1);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.getAlias();
      rawVariable0.getCleaningDescription();
      rawVariable0.clone();
      rawVariable0.createVariableSummary();
      derivedVariable0.getYear();
      System.setCurrentTimeMillis((-1346L));
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.0871428815898594
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.columnStart = "variable.isCoded.label";
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      derivedVariable0.setName("$,d#{V$=woK");
      User user1 = new User("$,d#{V$=woK", "variable.isCoded.label");
      user1.setCity("#{Qj~,2xcCb?SDzR2R");
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      derivedVariable0.setIdentifier((-1073741822));
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setCategory((String) null);
      derivedVariable0.createVariableSummary();
      derivedVariable0.getValueLabels();
      Variable variable0 = null;
      derivedVariable0.removeSourceVariable((Variable) null);
      derivedVariable0.getSourceVariables();
      // Undeclared exception!
      try { 
        derivedVariable0.containsSourceVariable((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.596931208902089
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.9163451010713173
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setName((String) null);
      rawVariable1.form = "UNABLE_TO_CLOSE_CONNECTION";
      derivedVariable0.setAlternativeVariable(rawVariable1);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      
      rawVariable1.getValueLabels();
      User user0 = new User("#gp~,(J", "YHU}U~gEg3kR");
      user0.setCity("WPYl5@3");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      VariableSummary variableSummary0 = rawVariable1.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      assertEquals("", variableSummary0.getYear());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("WPYl5@3");
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument[] supportingDocumentArray0 = new SupportingDocument[0];
      arrayList0.toArray(supportingDocumentArray0);
      rawVariable1.addSupportingDocuments(arrayList0);
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      rawVariable1.getDisplayName();
      rawVariable0.getColumnStart();
      rawVariable1.getCategory();
      assertEquals("", rawVariable1.getColumnStart());
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.7127084984763394
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-1899));
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.clone();
      derivedVariable0.clone();
      derivedVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getValueLabels();
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "Q^V4@X$";
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes(rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.5897580240183444
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes(derivedVariable0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.getLabel();
      String string0 = derivedVariable0.getLabel();
      assertNull(string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.4435896416877303
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("~$Fp|S|\"1OO");
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      rawVariable0.setValueLabels(arrayList0);
      User user0 = new User();
      Variable.validateFields(rawVariable0);
      rawVariable0.getNotes();
      assertEquals("~$Fp|S|\"1OO", rawVariable0.getNotes());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.632197381311811
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("WR<(~IX='");
      rawVariable0.getCodeBookNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.clone();
      rawVariable0.getYear();
      assertEquals("WR<(~IX='", rawVariable0.getYear());
      
      User user0 = new User();
      user0.setPhone("r7");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("J");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel("J");
      User user0 = new User("J", "J");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("J", derivedVariable1.getLabel());
      assertEquals("J", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("J");
      User user0 = new User();
      derivedVariable0.setLabel("J");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("J", derivedVariable0.getDisplayName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("yn,6f5#HQA4!B");
      User user0 = new User("yn,6f5#HQA4!B", "yn,6f5#HQA4!B");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("yn,6f5#HQA4!B", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("yn,6f5#HQA4!B");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("yn,6f5#HQA4!B", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("yn,6f5#HQA4!B");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("yn,6f5#HQA4!B", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"blank\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertFalse(rawVariable0.isNewRecord());
      assertNotNull(macawChangeEvent0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.584549889021196
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("} Sw&Zo,1");
      assertEquals("} Sw&Zo,1", derivedVariable0.getDisplayName());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.getName();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable1.getAlias();
      derivedVariable1.getQuestionNumber();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(1627);
      derivedVariable0.setLabel((String) null);
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      derivedVariable0.createVariableSummary();
      assertEquals(1627, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.6205903623848696
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.9159303165315698
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.setCodeBookNumber((String) null);
      rawVariable0.getFilePath();
      rawVariable0.setAlias("0");
      rawVariable0.getIdentifier();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable0.getColumnStart();
      rawVariable0.setName("0");
      rawVariable0.setAlias("");
      rawVariable0.getYear();
      rawVariable0.getCleaningDescription();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getIdentifier();
      rawVariable0.getCodeBookNumber();
      derivedVariable0.setIsNewRecord(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getCategory();
      rawVariable1.containsOntologyTerm(ontologyTerm0);
      rawVariable1.getName();
      assertEquals("0", rawVariable0.getDisplayName());
      assertEquals("0", rawVariable0.getName());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.567311390382342
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(415);
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart((String) null);
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear(">KP(N+Djp5FH+k");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals(">KP(N+Djp5FH+k", derivedVariable0.getYear());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(1141);
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(true);
      arrayList0.add(ontologyTerm1);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.7627404748592044
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(329);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.clone();
      User user0 = new User();
      User user1 = new User("Sl4D*\"QRX", "UNABLE_TO_GET_CLEANING_STATE_NAME");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      rawVariable0.setName("UNABLE_TO_GET_CLEANING_STATE_NAME");
      rawVariable0.setAlias("9J^/?SOaAKY|5o");
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getCategory();
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      assertEquals("9J^/?SOaAKY|5o", rawVariable0.getAlias());
      
      derivedVariable1.hasSameDisplayName(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      
      derivedVariable0.setCleaningStatus("");
      derivedVariable0.setCleaned(true);
      Variable.validateFields(derivedVariable0);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("J");
      User user0 = new User();
      derivedVariable0.setCleaningStatus("J");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("J", derivedVariable0.getDisplayName());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.1380501687234124
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      assertFalse(rawVariable0.isCleaned());
      
      boolean boolean0 = derivedVariable0.isCleaned();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.3798389570661653
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription((String) null);
      rawVariable0.removeOntologyTerms(arrayList0);
      String string0 = rawVariable0.getCleaningDescription();
      assertNull(string0);
      
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.3473508904222826
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("r");
      derivedVariable0.setIdentifier((-1971));
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.getYear();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      assertEquals("-1971", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("r", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-5269));
      rawVariable0.getIdentifier();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      assertEquals("-5269", rawVariable0.getDisplayItemIdentifier());
      assertEquals((-5269), rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      derivedVariable0.setLabel("yn,6f5#HQA4!B");
      User user0 = new User();
      derivedVariable0.getLabel();
      assertEquals("yn,6f5#HQA4!B", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      Variable variable0 = rawVariable0.getAlternativeVariable();
      assertFalse(variable0.isNewRecord());
      assertEquals("0", variable0.getDisplayItemIdentifier());
      assertFalse(variable0.isCoded());
      assertFalse(variable0.isCleaned());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability("variable.columnStart.label");
      derivedVariable0.setName("J");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("variable.columnStart.label", derivedVariable0.getAvailability());
      assertEquals("J", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.13669049038172
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier((-1073741822));
      rawVariable0.setAlternativeVariable(derivedVariable0);
      assertEquals("-1073741822", derivedVariable0.getDisplayItemIdentifier());
      
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "INVALID_ONTOLOGY_TERM";
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", variableSummary0.getLabel());
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getDisplayName());
      assertEquals(0, variableSummary0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("variable.name.label");
      derivedVariable0.createVariableSummary();
      assertEquals("variable.name.label", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("Vg-L.I}8");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("Vg-L.I}8", rawVariable0.getForm());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.632197381311811
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setIdentifier(1187);
      derivedVariable0.setName("]");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      derivedVariable1.clone();
      int int0 = derivedVariable1.getIdentifier();
      assertEquals(1187, int0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      arrayList0.add(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "CqeH+Nw*a6ayu@*v";
      derivedVariable0.notes = "CqeH+Nw*a6ayu@*v";
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertEquals("", variableSummary0.getDisplayName());
      assertEquals("", variableSummary0.getLabel());
      assertEquals("", variableSummary0.getYear());
      
      String string0 = derivedVariable0.getDisplayName();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", string0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("UNABLE_TO_DELETE_ONTOLOGY_TERM");
      derivedVariable0.notes = "UNABLE_TO_DELETE_ONTOLOGY_TERM";
      derivedVariable0.createVariableSummary();
      assertEquals("UNABLE_TO_DELETE_ONTOLOGY_TERM", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("IH#yn(oSz3#Xe");
      rawVariable0.getFilePath();
      rawVariable0.createVariableSummary();
      assertEquals("IH#yn(oSz3#Xe", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "variable.alternativeVariable.label";
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("variable.alternativeVariable.label", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("J");
      derivedVariable0.setName("J");
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("J", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.7548671545112224
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertEquals(1, arrayList0.size());
      
      derivedVariable0.codeBookNumber = "Sl4D*\"QRX";
      derivedVariable0.getCleaningStatus();
      derivedVariable0.getIdentifier();
      User user0 = new User("Sl4D*\"QRX", "Sl4D*\"QRX");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getColumnEnd();
      user0.setLastName("Sl4D*\"QRX");
      RawVariable rawVariable0 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      rawVariable0.setIsNewRecord(true);
      rawVariable0.clone();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("", derivedVariable1.getLabel());
      assertEquals("", derivedVariable1.getForm());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Sl4D*\"QRX", derivedVariable1.getCodeBookNumber());
      assertEquals("", derivedVariable1.getName());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getAlias());
      
      rawVariable0.isNewRecord();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList1);
      derivedVariable0.getNotes();
      assertEquals("", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable1.addValueLabel(valueLabel0);
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable1.getValueLabels();
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCoded());
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "r";
      derivedVariable0.setLabel("r");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("r", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.form = "C!RT.Rp[m/]n0#oZlt";
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getForm();
      derivedVariable0.getSupportingDocuments();
      assertEquals("C!RT.Rp[m/]n0#oZlt", derivedVariable0.getForm());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.4466856169199285
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("hq&Z&Q{BgyS3j%/-LB");
      rawVariable0.getAlias();
      rawVariable0.getLabel();
      assertEquals("hq&Z&Q{BgyS3j%/-LB", rawVariable0.getAlias());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(false);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("AsY_am(AQ}}");
      user0.setPostCode((String) null);
      rawVariable0.addSupportingDocument(supportingDocument0);
      valueLabel0.setIdentifier(1);
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.getForm();
      supportingDocument0.setFileName("'8+GBqbH>C");
      supportingDocument0.setIdentifier(1);
      String string0 = rawVariable0.getAvailability();
      assertEquals("Unknown", string0);
      
      boolean boolean0 = rawVariable0.isCleaned();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean1 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean1 == boolean0);
      
      int int0 = rawVariable0.getIdentifier();
      assertEquals(0, int0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.getQuestionNumber();
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier(10);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      valueLabel0.setMissingValue(true);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFilePath("z<M`J,w\u0006mw?");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument2);
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.getForm();
      supportingDocument2.setFileName("");
      supportingDocument1.setIdentifier(646);
      boolean boolean0 = rawVariable0.isCleaned();
      boolean boolean1 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean1 == boolean0);
      
      RawVariable rawVariable1 = new RawVariable();
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.603069605607787
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(2989);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      
      rawVariable0.getYear();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCoded());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.7514298713548166
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(2989);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.clone();
      rawVariable1.setName(".I");
      rawVariable1.setAlias(".I");
      rawVariable1.getYear();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      assertEquals(".I", rawVariable1.getAlias());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getCategory();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.3384407440780666
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("UNABLE_TO_CLOSE_CONNECTION");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, rawVariable0);
      assertTrue(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.383522442827672
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertTrue(derivedVariable0.isCleaned());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User("TkeQ+s2kcYUhwIdA|C", "Mnju7");
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel0);
      valueLabel0.setLabel("Mnju7");
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setAlias("nq4<.'!");
      rawVariable0.setColumnEnd("nq4<.'!");
      rawVariable0.setIdentifier(567);
      rawVariable0.getColumnEnd();
      assertEquals("nq4<.'!", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.6845198108434345
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setColumnEnd("=!gev[");
      derivedVariable0.createVariableSummary();
      assertEquals("=!gev[", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("UNABLE_TO_CREATE_DERIVED_VARIABLE");
      derivedVariable0.createVariableSummary();
      assertEquals("UNABLE_TO_CREATE_DERIVED_VARIABLE", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.4381098652423896
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "Sl4D*\"QRX";
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("Sl4D*\"QRX", derivedVariable0.getNotes());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("qzfn={'");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("qzfn={'", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "*s-";
      String string0 = rawVariable0.getColumnEnd();
      assertFalse(rawVariable0.isCoded());
      assertEquals("", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("J");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setColumnEnd("J");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("J", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.getSupportingDocuments();
      rawVariable0.createVariableSummary();
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertNull(macawChangeEvent0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.4316244347695988
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      user0.setCounty("");
      rawVariable0.setAlternativeVariable(derivedVariable1);
      User user1 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      DerivedVariable derivedVariable3 = new DerivedVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.setCodeBookNumber("");
      rawVariable0.getFilePath();
      rawVariable0.setAlias("0");
      assertEquals("0", rawVariable0.getAlias());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(true);
      derivedVariable0.isCoded();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.989026915173973
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlias("A<p>{R~");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("A<p>{R~", derivedVariable1.getAlias());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.709790421893567
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("J");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCodeBookNumber("J");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable1.setSourceVariables((ArrayList<Variable>) null);
      // Undeclared exception!
      try { 
        derivedVariable1.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.6644228977843176
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getDisplayItemIdentifier();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      rawVariable0.columnStart = "0";
      derivedVariable0.codeBookNumber = null;
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList0);
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.getColumnStart();
      rawVariable0.clone();
      assertEquals("0", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.8499347913048894
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.setCodeBookNumber("0");
      rawVariable0.setAlias("0");
      rawVariable0.getIdentifier();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable0.getColumnStart();
      rawVariable0.setName("0");
      rawVariable0.setAlias("");
      rawVariable0.getYear();
      rawVariable0.getCleaningDescription();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getIdentifier();
      rawVariable0.getCodeBookNumber();
      derivedVariable0.setIsNewRecord(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getCategory();
      boolean boolean0 = rawVariable1.containsOntologyTerm(ontologyTerm0);
      assertEquals("0", rawVariable0.getDisplayName());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.9594222732266733
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getFilePath();
      rawVariable0.getIdentifier();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable0.getColumnStart();
      rawVariable0.setAlias("");
      rawVariable0.getYear();
      rawVariable0.getCleaningDescription();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.getIdentifier();
      rawVariable0.getCodeBookNumber();
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.setCategory("");
      derivedVariable0.getCategory();
      rawVariable1.containsOntologyTerm(ontologyTerm0);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user0, (Variable) null, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("J");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCoded(true);
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertTrue(derivedVariable1.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "u@M2;J7a8j`]YBa";
      rawVariable0.getQuestionNumber();
      assertEquals("u@M2;J7a8j`]YBa", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("IH#yn(oSz3#Xe");
      rawVariable0.getForm();
      assertEquals("IH#yn(oSz3#Xe", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("7");
      derivedVariable0.getAlias();
      assertEquals("7", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.583838507642472
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("variable.notes.label");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("variable.notes.label", derivedVariable0.getColumnEnd());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("yn,6f5#HQA4!B");
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "yn,6f5#HQA4!B";
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("yn,6f5#HQA4!B", rawVariable0.getQuestionNumber());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.920070886916697
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.setCodeBookNumber("");
      rawVariable0.getFilePath();
      rawVariable0.setAlias("0");
      rawVariable0.getIdentifier();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.clone();
      rawVariable0.getColumnStart();
      rawVariable0.setName("0");
      rawVariable0.setAlias("");
      rawVariable0.getYear();
      rawVariable0.getCleaningDescription();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.getIdentifier();
      rawVariable0.getDisplayName();
      assertEquals("0", rawVariable0.getName());
      
      derivedVariable0.setAvailability("");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getAvailability();
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.getYear();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertTrue(boolean0);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("]");
      derivedVariable1.getName();
      assertEquals("]", derivedVariable1.getDisplayName());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("J");
      User user0 = new User("J", "J");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("J", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isCleaned());
      
      derivedVariable0.setCleaned(true);
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertTrue(derivedVariable0.isCleaned());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setFilePath("NON_EXISTENT_ONTOLOGY_TERM");
      rawVariable0.getFilePath();
      assertEquals("NON_EXISTENT_ONTOLOGY_TERM", rawVariable0.getFilePath());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("lI(3^![");
      rawVariable0.getColumnStart();
      assertEquals("lI(3^![", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.512008288481199
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = null;
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("r");
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("r", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("J");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("J", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("J");
      User user0 = new User("J", "J");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("J", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("ALIAS_FILE_PATH", "ALIAS_FILE_PATH");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertTrue(arrayList0.isEmpty());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.709784915777289
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.getColumnEnd();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      
      derivedVariable0.getValueLabels();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(67);
      rawVariable0.getFilePath();
      assertEquals(67, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("UNABLE_TO_GET_ALTERNATIVE_VARIABLE");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("UNABLE_TO_GET_ALTERNATIVE_VARIABLE", rawVariable0.getAlias());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus((String) null);
      rawVariable0.getFilePath();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.564189384835455
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription((String) null);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.625071549495739
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getAvailability();
      derivedVariable0.setCodeBookNumber("Unknown");
      derivedVariable0.clone();
      derivedVariable0.getCleaningStatus();
      assertEquals("Unknown", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.5806560020475704
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "_2";
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("_2", rawVariable1.getNotes());
      assertEquals("", rawVariable1.getYear());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getForm());
      assertEquals("Unknown", rawVariable1.getCategory());
      
      rawVariable0.getAvailability();
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.5806560020475704
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "::(&=FRb~pYA+";
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("", rawVariable1.getLabel());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getFilePath());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("::(&=FRb~pYA+", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getNotes());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getName());
      assertEquals("", rawVariable1.getAlias());
      
      rawVariable0.getColumnStart();
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable1.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isNewRecord());
      
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.createVariableSummary();
      assertTrue(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.5353865202004258
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("UNABLE_TO_GET_CATEGORY_NAME");
      derivedVariable0.clone();
      assertEquals("UNABLE_TO_GET_CATEGORY_NAME", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("\"3dZFf&ke!x");
      rawVariable0.getLabel();
      assertEquals("\"3dZFf&ke!x", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("macaw.businessLayer.SupportingDocument");
      rawVariable0.setAlternativeVariable(rawVariable0);
      assertEquals("macaw.businessLayer.SupportingDocument", rawVariable0.getAlias());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "variable.columnEnd.label";
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getAlias());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getYear());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("variable.columnEnd.label", rawVariable1.getColumnEnd());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("variable.isCoded.label");
      rawVariable0.getName();
      assertEquals("variable.isCoded.label", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber((String) null);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("i1");
      Variable.validateFields(derivedVariable0);
      assertEquals("i1", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=3.6256902943605223
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=3.7501600300849756
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("eiR");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getColumnEnd();
      assertEquals("Unknown", derivedVariable0.getAvailability());
      
      derivedVariable0.setAvailability("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      Variable.validateFields(derivedVariable0);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("INVALID_RAW_VARIABLE");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("INVALID_RAW_VARIABLE", rawVariable0.getForm());
      assertEquals("", rawVariable0.getAlias());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("lI(3^![");
      rawVariable0.getNotes();
      assertEquals("lI(3^![", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("cPoCBm;");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("cPoCBm;", rawVariable0.getCleaningDescription());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.554218296452355
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, arrayList0.size());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=3.668962921257037
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.codeBookNumber = "m'>kUKB.6";
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("", rawVariable1.getYear());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("m'>kUKB.6", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("", rawVariable1.getForm());
      
      rawVariable0.getAlternativeVariable();
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(false);
      derivedVariable0.getSupportingDocuments();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getForm();
      derivedVariable0.setCoded(false);
      derivedVariable0.isCoded();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getOntologyTerms();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "uX+y";
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("uX+y", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("9~q(Ta-W!g<i3r0X/.");
      rawVariable0.getAlias();
      assertEquals("9~q(Ta-W!g<i3r0X/.", rawVariable0.getForm());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(boolean0);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.getLabel();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=2.6845198108434345
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, arrayList1.size());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
  }
}
