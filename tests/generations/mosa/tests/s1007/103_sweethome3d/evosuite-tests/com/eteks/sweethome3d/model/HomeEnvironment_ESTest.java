/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 14 03:07:43 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TextureImage;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(320, homeEnvironment0.getVideoWidth());
      
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("Ehf57{ lPS_E[}T8M", "Pqd5w3!V[{W7KQemJu", temporaryURLContent0, 0.0F, 1.7777778F, (String) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(25, homeTexture0, 25, homeTexture0, 25, 1.7777778F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getSkyTexture();
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(25, homeEnvironment1.getGroundColor());
      assertEquals(1.7777778F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(25, homeEnvironment1.getSkyColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(25, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.9663881312694826
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte) (-44);
      byteArray0[3] = (byte) (-44);
      byteArray0[4] = (byte)37;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((byte)18);
      homeEnvironment0.setCeillingLightColor((byte) (-44));
      homeEnvironment0.setPhotoWidth((byte) (-44));
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setSubpartSizeUnderLight(4170.903F);
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.setPhotoWidth(240);
      HomeEnvironment.Property.values();
      int int0 = homeEnvironment0.getSkyColor();
      assertEquals(18, homeEnvironment0.getPhotoHeight());
      assertEquals(13427964, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", (Content) null, 0, 833.06305F, "", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, (-964), 686.2983F);
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertNotNull(homeTexture1);
      
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(0, homeEnvironment1.getGroundColor());
      assertEquals(686.2983F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals((-964), homeEnvironment1.getLightColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      // Undeclared exception!
      try { 
        homeEnvironment0.addPropertyChangeListener((HomeEnvironment.Property) null, (PropertyChangeListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(320, homeEnvironment0.getVideoWidth());
      
      homeEnvironment0.setVideoWidth((-1));
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("Linux", "", resourceURLContent0, 3396, 0L, "Linux", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(3396, homeTexture0, (-677), homeTexture0, (-677), 0L);
      homeEnvironment0.getSkyTexture();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-3948));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getPhotoHeight();
      homeEnvironment0.getPhotoAspectRatio();
      assertEquals((-3948), homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      
      homeEnvironment0.setVideoFrameRate(0);
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      
      homeEnvironment0.setPhotoHeight(0);
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("java.version", (Content) null, 0.0F, 0.0F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(14, homeTexture0, 14, homeTexture0, 14, 0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getGroundTexture();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("java.version");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.java.version
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight((-1.0F));
      homeEnvironment0.clone();
      assertEquals((-1.0F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.1737502027185687
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Random.setNextRandom((-3097));
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3097), (HomeTexture) null, 2, 2, (-347.71F));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setGroundTexture((HomeTexture) null);
      homeEnvironment1.setSkyTexture((HomeTexture) null);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.CEILING_LIGHT_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("]@|A", propertyChangeListener0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment2, "]@|A", homeEnvironment1, "Mn AS'X");
      propertyChangeEvent0.toString();
      propertyChangeEvent0.setPropagationId(homeEnvironment0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment1.getGroundTexture();
      homeEnvironment1.setGroundColor(2);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment1.getVideoAspectRatio();
      homeEnvironment1.getPhotoHeight();
      homeEnvironment0.isAllLevelsVisible();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("$QDsKXQn\"P},");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.$QDsKXQn\"P},
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-391));
      homeEnvironment0.clone();
      assertEquals((-391), homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor((-1406));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getSkyColor();
      assertEquals((-1406), int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.8493821196946767
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(1084.6632F);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getSubpartSizeUnderLight();
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.clone();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyColor(3221);
      homeEnvironment1.setPhotoQuality(1635);
      homeEnvironment0.setPhotoHeight(25);
      homeEnvironment1.setPhotoHeight(3221);
      homeEnvironment1.getPhotoQuality();
      int int0 = homeEnvironment1.getVideoHeight();
      assertEquals(3221, homeEnvironment1.getSkyColor());
      assertEquals(240, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor((-2781));
      homeEnvironment0.clone();
      assertEquals((-2781), homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(4655);
      homeEnvironment0.setPhotoHeight(4655);
      homeEnvironment0.clone();
      assertEquals(4655, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
      
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getGroundTexture();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.5042900108961854
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setPhotoQuality(11);
      homeEnvironment0.setAllLevelsVisible(false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      homeEnvironment0.setGroundColor(1790);
      homeEnvironment0.setSkyColor(1790);
      homeEnvironment0.setSkyColor((-452));
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.getSkyTexture();
      Random.setNextRandom(1790);
      homeEnvironment0.getVideoAspectRatio();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("(28yiDOPoHo.]U&");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.(28yiDOPoHo.]U&
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      
      homeEnvironment0.setVideoFrameRate((-1));
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)116;
      byteArray0[3] = (byte)4;
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(11, (HomeTexture) null, (byte)117, (byte)116, (byte)116);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setVideoQuality((-2557));
      homeEnvironment0.getVideoQuality();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment1.getVideoCameraPath();
      Random.setNextRandom((byte)117);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, (-3545), (-3545), false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3545), homeTexture0, (-3545), homeTexture0, 13684944, (-3545));
      homeEnvironment0.getGroundTexture();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals((-3545), homeEnvironment0.getGroundColor());
      assertEquals((-3545), homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-3545.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("y~", (Content) null, 21, 21);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(21, homeTexture0, 21, 21, 0.0F);
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertEquals(21, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertNotNull(homeTexture1);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(21, homeEnvironment0.getSkyColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(21, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoWidth((-3744));
      homeEnvironment1.setPhotoWidth((-3744));
      int int0 = homeEnvironment1.getVideoHeight();
      assertEquals((-3744), homeEnvironment1.getPhotoWidth());
      assertEquals(240, int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality((-1855));
      homeEnvironment0.setPhotoHeight((-1855));
      homeEnvironment0.getPhotoQuality();
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals((-1855), homeEnvironment0.getPhotoHeight());
      assertEquals(240, int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 3066, 3066);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(3066, homeTexture0, 11053224, homeTexture0, (-1529), 3066);
      homeEnvironment0.getSkyTexture();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-1529), homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(11053224, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(3066.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(3066, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture(")n0 t;Q'Ez;'qtC^", ")n0 t;Q'Ez;'qtC^", (Content) null, (-2977.9175F), (-1074), ")n0 t;Q'Ez;'qtC^");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1074), homeTexture0, (-1074), homeTexture0, (-1074), (-2977.9175F));
      homeEnvironment0.getSkyTexture();
      assertEquals((-1074), homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-1074), homeEnvironment0.getSkyColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-2977.9175F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-1074), homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(2462);
      homeEnvironment0.clone();
      assertEquals(2462, homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassLoader.getSystemClassLoader();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(2006);
      homeEnvironment0.getVideoQuality();
      System.setCurrentTimeMillis(2006);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(13684944);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.694124545362909
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(345, (HomeTexture) null, 345, (HomeTexture) null, 1954, 2267.0F);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.getWallsAlpha();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      HomeEnvironment homeEnvironment3 = new HomeEnvironment(345, (HomeTexture) null, 1954, 345, 1954);
      homeEnvironment3.getSkyColor();
      homeEnvironment0.getWallsAlpha();
      homeEnvironment2.getVideoCameraPath();
      homeEnvironment0.setPhotoQuality(1954);
      homeEnvironment2.setPhotoHeight(13427964);
      homeEnvironment2.setObserverCameraElevationAdjusted(false);
      assertEquals(13427964, homeEnvironment2.getPhotoHeight());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassLoader.getSystemClassLoader();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.clone();
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("(=Xg!cUr']T/tti", (Content) null, 17, (-1163.8796F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(17, homeTexture0, 538, homeTexture0, 8, (-2933.0505F));
      homeEnvironment0.setCeillingLightColor(17);
      homeEnvironment0.setPhotoQuality(17);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.setPhotoHeight(33);
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.getWallsAlpha();
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(17, homeEnvironment0.getPhotoQuality());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.0227949245106362
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.setLightColor((-696));
      HomeEnvironment.Property.values();
      homeEnvironment0.setSubpartSizeUnderLight((-1.0F));
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.getLightColor();
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.setPhotoWidth((-696));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_TEXTURE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("SQUARE_RATIO", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (Content) null, 2490.0F, 2490.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(2146799675);
      homeEnvironment0.getPhotoAspectRatio();
      assertEquals(2146799675, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.9710863640582432
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setGroundTexture((HomeTexture) null);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.setVideoWidth(2007);
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoWidth((-1406));
      homeEnvironment0.setGroundColor(46);
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals(46, homeEnvironment0.getGroundColor());
      assertEquals((-1406), int0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setWallsAlpha(0.0F);
      homeEnvironment0.setVideoFrameRate(5);
      homeEnvironment0.setPhotoQuality(5);
      MockURL.getFtpExample();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("a[\t4]SkgW! y'~", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("a[\t4]SkgW! y'~", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("a[\t4]SkgW! y'~", propertyChangeListenerProxy1);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_TEXTURE;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy2);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setGroundColor((-1389));
      homeEnvironment1.getGroundColor();
      homeEnvironment1.setSubpartSizeUnderLight((-1389));
      assertEquals((-1389), homeEnvironment1.getGroundColor());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(1852.6F);
      homeEnvironment0.clone();
      assertEquals(1852.6F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-3930));
      homeEnvironment0.clone();
      assertEquals((-3930), homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      
      homeEnvironment0.setPhotoWidth(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getGroundTexture();
      assertEquals(0, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.047707978151193
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setCeillingLightColor(804);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setPhotoHeight((-1497));
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.getGroundTexture();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoQuality(0);
      HomeTexture homeTexture0 = null;
      try {
        homeTexture0 = new HomeTexture((TextureImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(2129129086);
      homeEnvironment0.getGroundTexture();
      assertEquals(2129129086, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(25);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth((-5590));
      homeEnvironment0.clone();
      assertEquals((-5590), homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-2605));
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals((-2605), homeEnvironment0.getVideoWidth());
      assertEquals((-1954), int0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality((-2820));
      homeEnvironment0.clone();
      assertEquals((-2820), homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.clone();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.9224967595081837
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("", "com.eteks.sweethome3d.model.HomeEnvironment$Property", (Content) null, 0, 0.0F, "FILL");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("", (Content) null, 0, 0.0F, false);
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      texturesCategory0.getIndexOfTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(293, homeTexture0, (-1), homeTexture0, 293, (-1.0F));
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.setPhotoQuality((-1));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.eteks.sweethome3d.model.HomeEnvironment$Property");
      homeEnvironment0.setVideoWidth(1425);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.setVideoQuality(4);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setLightColor(293);
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(1422);
      homeEnvironment0.clone();
      assertEquals(1067, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor((-1384));
      homeEnvironment0.setLightColor((-1384));
      homeEnvironment0.clone();
      assertEquals((-1384), homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(13427964);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(5.0F);
      homeEnvironment0.clone();
      assertEquals(5.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(400, int0);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-807));
      homeEnvironment0.clone();
      assertEquals((-807), homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.isAllLevelsVisible();
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 0, 0.0F);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setVideoFrameRate(0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setSubpartSizeUnderLight(0);
      int int0 = homeEnvironment0.getSkyColor();
      assertEquals(HomeEnvironment.DrawingMode.FILL_AND_OUTLINE, homeEnvironment0.getDrawingMode());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(11053224);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertNotSame(homeEnvironment1, homeEnvironment0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      assertEquals(HomeEnvironment.DrawingMode.OUTLINE, homeEnvironment0.getDrawingMode());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ResourceURLContent resourceURLContent0 = new ResourceURLContent((URL) null, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("].0Eif-f0F)bW", "", resourceURLContent0, (-861.0F), 1.0F, "&/=!`b/uAG", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(13684944, homeTexture0, 13684944, (-1), (-1));
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setPhotoHeight((-2923));
      assertEquals((-2923), homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(14);
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(14, homeEnvironment0.getVideoQuality());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality((-3578));
      homeEnvironment0.clone();
      assertEquals((-3578), homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(3423);
      homeEnvironment0.clone();
      assertEquals(3423, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(7);
      homeEnvironment0.clone();
      assertEquals(7, homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(2947);
      homeEnvironment0.clone();
      assertEquals(2947, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.getVideoAspectRatio();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(0, homeEnvironment0.getPhotoQuality());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0, int0);
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-97));
      homeEnvironment0.clone();
      assertEquals((-73), homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(320);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_WIDTH;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio FREE_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.0850162128140806
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setWallsAlpha(0.0F);
      homeEnvironment0.setPhotoQuality(5);
      homeEnvironment0.setVideoFrameRate(5);
      homeEnvironment0.setPhotoQuality(5);
      MockURL.getFileExample();
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.setVideoQuality(5);
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.setPhotoHeight(540);
      homeEnvironment0.getLightColor();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      assertEquals(AspectRatio.RATIO_16_9, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.getPhotoQuality();
      HomeEnvironment.Property.values();
      homeEnvironment0.setSubpartSizeUnderLight((-1.0F));
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.getLightColor();
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.setPhotoWidth(13684944);
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      CatalogTexture catalogTexture0 = new CatalogTexture("VIEW_3D_RATIO", (Content) null, (-3153.3372F), (-2022.066F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(320, int0);
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(433, (HomeTexture) null, 433, 433, 433);
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(433, homeEnvironment0.getGroundColor());
      assertEquals(433.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, int0);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(433, homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(433, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha((-4137.69F));
      homeEnvironment0.clone();
      assertEquals((-4137.69F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(2145317763);
      homeEnvironment0.clone();
      assertEquals(2145317763, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(860);
      homeEnvironment0.clone();
      assertEquals(860, homeEnvironment0.getCeillingLightColor());
  }
}
