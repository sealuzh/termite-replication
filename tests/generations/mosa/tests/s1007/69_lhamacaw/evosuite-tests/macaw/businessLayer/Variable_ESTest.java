/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 14 02:56:28 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.codeBookNumber = null;
      rawVariable0.setForm("/;<bZhvr#_E");
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      LinkedList<ValueLabel> linkedList0 = new LinkedList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel((String) null);
      linkedList0.add(valueLabel0);
      arrayList1.containsAll(linkedList0);
      rawVariable0.getCodeBookNumber();
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.1250548729467176
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("$~*:xA(8");
      derivedVariable0.getColumnEnd();
      Variable.validateFields(derivedVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setCleaned(true);
      derivedVariable0.addSourceVariables(arrayList0);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setCoded(true);
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("");
      derivedVariable1.addValueLabel(valueLabel0);
      derivedVariable1.setCodeBookNumber("");
      arrayList0.add((Variable) derivedVariable1);
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.isCoded();
      derivedVariable0.getForm();
      derivedVariable0.getDisplayName();
      derivedVariable0.setSourceVariables(arrayList0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(false);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setCategory((String) null);
      ontologyTerm0.setTerm("AT");
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      String string0 = derivedVariable0.getCategory();
      assertNull(string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.8654780734349385
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      derivedVariable0.setQuestionNumber((String) null);
      derivedVariable0.columnEnd = "MacawProperties";
      derivedVariable0.setLabel("MacawProperties");
      supportingDocument0.setDocumentCode("q#^D}o<~Z");
      supportingDocument0.clone();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.setOntologyTerms(arrayList0);
      supportingDocument0.setTitle("q#^D}o<~Z");
      supportingDocument0.setIsNewRecord(true);
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.setAlias("UNABLE_TO_CHECK_DOCUMENT_EXISTS");
      derivedVariable0.clone();
      derivedVariable0.isCoded();
      derivedVariable0.getQuestionNumber();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.9014869995164387
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber(" Ln&j9RP");
      derivedVariable0.form = " Ln&j9RP";
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(true);
      valueLabel0.setLabel(" Ln&j9RP");
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      valueLabel0.hasSameDisplayName(valueLabel1);
      valueLabel0.setValue("variable.cleaningDescription.label");
      valueLabel0.getDisplayName();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.isNewRecord();
      derivedVariable0.clone();
      derivedVariable0.getOntologyTerms();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.getColumnEnd();
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.getName();
      derivedVariable0.getIdentifier();
      derivedVariable0.isCoded();
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.clone();
      derivedVariable0.getSourceVariables();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      rawVariable0.setQuestionNumber((String) null);
      rawVariable0.setYear((String) null);
      String string0 = rawVariable0.getYear();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertNull(string0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.getDisplayName();
      ontologyTerm1.setIdentifier(894);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("'=;@#6mZHc");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName((String) null);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<Variable> arrayList0 = null;
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      derivedVariable0.createVariableSummary();
      derivedVariable0.getColumnEnd();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("variable.category.label");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getForm();
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.70816141220136
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("ontologyTerm.term.saveChanges");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setIdentifier((-1730));
      rawVariable0.setCoded(false);
      rawVariable0.clone();
      rawVariable0.getValueLabels();
      rawVariable0.getIdentifier();
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier(86);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.1868999087330017
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias((String) null);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      arrayList1.stream();
      derivedVariable0.setSupportingDocuments(arrayList1);
      derivedVariable0.columnStart = "DUPLICATE_CLEANING_STATE";
      derivedVariable0.getIdentifier();
      derivedVariable0.getAlias();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.getQuestionNumber();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.getYear();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getValueLabels();
      Variable.validateFields(rawVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.687913721889114
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      user0.setPhone("variable.isCoded.label");
      rawVariable0.notes = null;
      rawVariable0.setFilePath("general.error.blankField");
      user0.setAddressLine1((String) null);
      rawVariable0.addValueLabel(valueLabel0);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getNotes();
      Variable.validateFields(rawVariable0);
      int int0 = rawVariable0.getIdentifier();
      assertEquals("general.error.blankField", rawVariable0.getFilePath());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.4381098652423896
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = null;
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(1, arrayList0.size());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.7879446031552346
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      rawVariable0.setIdentifier(1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.removeSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable0.isNewRecord();
      rawVariable0.setName("macaw.businessLayer.ValueLabel$EditingOperationType");
      rawVariable0.clone();
      rawVariable0.createVariableSummary();
      rawVariable1.getName();
      assertEquals(1, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      derivedVariable1.setIdentifier(910);
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable1);
      assertEquals("910", derivedVariable1.getDisplayItemIdentifier());
      
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.5389044601953317
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("G");
      rawVariable0.setAlias("G");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.getName();
      assertEquals("G", rawVariable0.getAlias());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(99);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.146102255087602
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier((-580));
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals("-580", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.304704691639832
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.isCleaned();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("EMPTY_LIST_CHOICE");
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=4.185062660220811
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      rawVariable0.clone();
      rawVariable0.setCoded(false);
      rawVariable0.setForm((String) null);
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(164);
      rawVariable0.columnStart = null;
      supportingDocument0.setDocumentCode((String) null);
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.clone();
      supportingDocument1.setIsNewRecord(true);
      rawVariable0.setCleaned(true);
      supportingDocument1.setIdentifier((-854));
      arrayList0.add(supportingDocument1);
      arrayList0.parallelStream();
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.getColumnStart();
      rawVariable0.getCleaningDescription();
      rawVariable0.isCleaned();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      User user0 = new User("user.phone.saveChanges", "^Q{m]s?Q6\"})FZ;");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.6846842034128904
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.columnStart = null;
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals(0, arrayList1.size());
      
      derivedVariable0.getOntologyTerms();
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("^");
      rawVariable0.setCleaningStatus("^");
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("^", rawVariable0.getCleaningStatus());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("o");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("o");
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("o", rawVariable0.getYear());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.6851309643957646
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("m");
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals(1, arrayList0.size());
      
      derivedVariable0.getDisplayName();
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.485215761775983
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("o");
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"o\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      
      Variable.validateFields(derivedVariable0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setCodeBookNumber("G");
      rawVariable0.setLabel("G");
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("G", derivedVariable0.getCodeBookNumber());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.8623417620344114
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-497));
      rawVariable0.setLabel("j");
      User user0 = new User("j", "j");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable1.getCleaningStatus();
      rawVariable0.createVariableSummary();
      assertEquals("j", rawVariable0.getLabel());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.4435896416877303
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.setYear("NA{+9Gm~2K3 ");
      derivedVariable0.getForm();
      derivedVariable0.getYear();
      assertEquals("NA{+9Gm~2K3 ", derivedVariable0.getYear());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd(" ");
      derivedVariable0.setName(" ");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals(" ", derivedVariable0.getColumnEnd());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.383522442827672
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertTrue(derivedVariable0.isCleaned());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.3362607587640016
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertTrue(derivedVariable0.isCleaned());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, (Variable) null);
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"blank\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertFalse(derivedVariable0.isCleaned());
      assertNotNull(macawChangeEvent0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability(")F-F}%aPF%r+ACC=EW");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals(")F-F}%aPF%r+ACC=EW", rawVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("variable.columnStart.label");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "variable.columnStart.label";
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("variable.columnStart.label", rawVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.2085716838811678
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      String string0 = rawVariable0.getLabel();
      assertNull(string0);
      
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("m");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("m");
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("m", rawVariable0.getLabel());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName(":");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals(1, arrayList0.size());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("DeK1'!(i_");
      rawVariable0.getLabel();
      assertEquals("DeK1'!(i_", rawVariable0.getLabel());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.notes = "2";
      rawVariable0.setLabel("2");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("2", rawVariable0.getLabel());
      assertEquals("2", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.6633760633207064
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.notes = " ~*P[[L0";
      derivedVariable0.form = " ~*P[[L0";
      derivedVariable0.clone();
      derivedVariable0.getAvailability();
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getForm();
      derivedVariable0.getIdentifier();
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals(" ~*P[[L0", derivedVariable0.getNotes());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("Nj");
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("Nj", rawVariable0.getLabel());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("rkutKDR:");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("rkutKDR:", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("");
      derivedVariable0.setAvailability("");
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.4675368896014644
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User("Unknown", "Unknown");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.getNotes();
      derivedVariable0.getCategory();
      derivedVariable0.getValueLabels();
      ArrayList<Variable> arrayList0 = null;
      try {
        arrayList0 = new ArrayList<Variable>((-1474680098));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1474680098
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName(":");
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertTrue(arrayList0.isEmpty());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.6940224494126976
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription((String) null);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList0);
      String string0 = rawVariable0.getCleaningDescription();
      assertNull(string0);
      
      User user0 = new User((String) null, (String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList1 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals(0, arrayList1.size());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.05569358184064
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(40);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals("40", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.5806560020475704
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "variable.questionNumber.label";
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      String string0 = derivedVariable1.getLabel();
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("variable.questionNumber.label", derivedVariable1.getColumnStart());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getName());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("", string0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.4381098652423896
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.questionNumber = "o4";
      user0.setPassword("o4");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("o4", rawVariable0.getQuestionNumber());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.664389094586535
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "CZ8";
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getNotes();
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getLabel());
      assertEquals("", variableSummary0.getYear());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      rawVariable0.clone();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getForm());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getLabel());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("N#L^i>`0\"");
      derivedVariable0.getCleaningDescription();
      int int0 = derivedVariable0.getIdentifier();
      assertEquals("N#L^i>`0\"", derivedVariable0.getQuestionNumber());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.9971515848932915
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      
      Variable variable0 = derivedVariable0.getAlternativeVariable();
      assertFalse(variable0.isNewRecord());
      assertFalse(variable0.isCleaned());
      assertFalse(variable0.isCoded());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.6256902943605223
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setColumnStart((String) null);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      String string0 = derivedVariable0.getFilePath();
      assertFalse(derivedVariable0.isCoded());
      assertNotNull(string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("q<KP@$");
      assertEquals("q<KP@$", rawVariable0.getCodeBookNumber());
      
      rawVariable0.codeBookNumber = "q<KP@$";
      rawVariable0.getFilePath();
      boolean boolean0 = rawVariable0.isNewRecord();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setFilePath("Qu~$% <Q]rv<DW");
      rawVariable0.getFilePath();
      assertEquals("Qu~$% <Q]rv<DW", rawVariable0.getFilePath());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.3643764676852554
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "*<*EruK0$/8";
      derivedVariable0.getFilePath();
      derivedVariable0.setCleaned(true);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.4466856169199285
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("m");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("m");
      DerivedVariable.validateFields(derivedVariable0);
      rawVariable0.getFilePath();
      assertEquals("m", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "variable.alternativeVariable.label";
      String string0 = rawVariable0.getFilePath();
      assertEquals("", string0);
      
      boolean boolean0 = rawVariable0.isNewRecord();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(boolean0);
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.9498260458782015
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("PY(p&SbI/2LgY");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.isCleaned();
      derivedVariable0.createVariableSummary();
      assertEquals("PY(p&SbI/2LgY", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.7462151539509665
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("j");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.createVariableSummary();
      assertEquals("j", rawVariable0.getLabel());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("Oo%KH4");
      derivedVariable0.createVariableSummary();
      assertEquals("Oo%KH4", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.3726109998626446
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(1);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.getDisplayName();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      RawVariable rawVariable0 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.6969987794394548
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-2061584299));
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(arrayList0.contains(ontologyTerm1));
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCoded(true);
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable1);
      assertTrue(derivedVariable1.isCoded());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("(sl");
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      derivedVariable0.createVariableSummary();
      assertEquals("(sl", derivedVariable0.getYear());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("i8|,J");
      rawVariable0.getYear();
      assertEquals("i8|,J", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(derivedVariable0.isCleaned());
      assertTrue(boolean0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.146102255087602
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "\"yf0w{]T";
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getColumnEnd();
      assertEquals("\"yf0w{]T", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.6820748660026672
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.554218296452355
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "QL";
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getCodeBookNumber();
      assertEquals("QL", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.6305437208796447
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      DerivedVariable derivedVariable2 = (DerivedVariable)derivedVariable1.clone();
      assertEquals("Unknown", derivedVariable2.getCategory());
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertEquals("0", derivedVariable2.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertFalse(derivedVariable2.isCoded());
      assertFalse(derivedVariable2.isNewRecord());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.5909922071519027
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("^");
      rawVariable0.setLabel("^");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("^", rawVariable0.getLabel());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("%Z0/g'pvskB @B\"");
      derivedVariable0.getAvailability();
      derivedVariable0.getNotes();
      assertEquals("%Z0/g'pvskB @B\"", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "gXe";
      String string0 = derivedVariable0.getColumnEnd();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", string0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("aI<M");
      rawVariable0.getCodeBookNumber();
      assertEquals("aI<M", rawVariable0.getNotes());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.577684661488626
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription((String) null);
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.5687660438743563
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("general.fieldValue.unknown");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("general.fieldValue.unknown", rawVariable0.getLabel());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.9654211895134472
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.setColumnEnd("variable.year.label");
      User user1 = new User();
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      assertEquals("variable.year.label", derivedVariable0.getColumnEnd());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable0);
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
      assertNotNull(macawChangeEvent0);
      assertFalse(derivedVariable1.isCoded());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.9971515848932915
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.6256902943605223
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.4513799579861324
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      ValueLabel valueLabel0 = new ValueLabel();
      // Undeclared exception!
      try { 
        derivedVariable0.addValueLabel(valueLabel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("^DfW<Ugq[K");
      rawVariable0.getColumnStart();
      assertEquals("^DfW<Ugq[K", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setForm("variable.year.label");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("variable.year.label", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("UNABLE_TO_GET_ALL_SUMMARY_VARIABLES");
      derivedVariable0.codeBookNumber = "UNABLE_TO_GET_ALL_SUMMARY_VARIABLES";
      User user0 = new User("UNABLE_TO_GET_ALL_SUMMARY_VARIABLES", "UNABLE_TO_GET_ALL_SUMMARY_VARIABLES");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("UNABLE_TO_GET_ALL_SUMMARY_VARIABLES", derivedVariable0.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName(":");
      User user0 = new User();
      derivedVariable0.getNotes();
      derivedVariable0.clone();
      assertEquals(":", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.getLabel();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isCoded());
      
      rawVariable0.setCoded(true);
      boolean boolean0 = rawVariable0.isNewRecord();
      assertTrue(rawVariable0.isCoded());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(boolean0);
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(false);
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.setColumnEnd("UNABLE_TO_CREATE_CATEGORY");
      derivedVariable0.setColumnEnd("wtL[");
      derivedVariable0.setLabel("UNABLE_TO_CREATE_CATEGORY");
      derivedVariable0.setAlias("MK@UF+?-v0vo");
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.getAlias();
      assertEquals("MK@UF+?-v0vo", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("^e0 {s-Dd.j0ALd%");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("^e0 {s-Dd.j0ALd%", rawVariable0.getQuestionNumber());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart((String) null);
      User user0 = new User();
      String string0 = derivedVariable0.getAlias();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertNotNull(string0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("variable.label.label");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("variable.label.label", derivedVariable0.getAlias());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isNewRecord());
      
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.createVariableSummary();
      assertTrue(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.554218296452355
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getYear();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.setSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      derivedVariable0.getSupportingDocuments();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("S");
      rawVariable0.clone();
      assertEquals("S", rawVariable0.getYear());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=3.6226629321488604
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("v~xlZH9*`{V>I>N", "v~xlZH9*`{V>I>N");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setQuestionNumber("v~xlZH9*`{V>I>N");
      derivedVariable0.clone();
      assertEquals("v~xlZH9*`{V>I>N", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=3.5353865202004258
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("^");
      rawVariable0.clone();
      assertEquals("^", rawVariable0.getLabel());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.6223850771891493
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "~>;^gKXRqu";
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("~>;^gKXRqu", derivedVariable1.getForm());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("", derivedVariable1.getFilePath());
      assertEquals("", derivedVariable1.getLabel());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("", derivedVariable1.getAlias());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("", derivedVariable1.getName());
      
      User user0 = new User("~>;^gKXRqu", "~>;^gKXRqu");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "DUPLICATE_CLEANING_STATE";
      rawVariable0.getQuestionNumber();
      assertEquals("DUPLICATE_CLEANING_STATE", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("NON_EXISTENT_VARIABLE");
      derivedVariable0.getNotes();
      assertEquals("NON_EXISTENT_VARIABLE", derivedVariable0.getForm());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setFilePath("/FxYuN1\tS`g");
      rawVariable0.getForm();
      assertEquals("/FxYuN1\tS`g", rawVariable0.getFilePath());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=3.668619868083795
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("v~xlZH9*`{V>I>N");
      derivedVariable0.createVariableSummary();
      assertEquals("v~xlZH9*`{V>I>N", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("!u");
      derivedVariable0.getValueLabels();
      assertEquals("!u", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.getOntologyTerms();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability("UNABLE_TO_CREATE_VARIABLE");
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      assertEquals("UNABLE_TO_CREATE_VARIABLE", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=3.625965737275173
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability((String) null);
      rawVariable0.setCleaningStatus("nR%Ca[Yv>&'8j{X");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable1.setCodeBookNumber((String) null);
      rawVariable0.getAvailability();
      rawVariable1.isCoded();
      boolean boolean0 = rawVariable1.isCoded();
      assertEquals("nR%Ca[Yv>&'8j{X", rawVariable1.getCleaningStatus());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.getAlternativeVariable();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.addOntologyTerms(arrayList0);
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus("vIh\"9x");
      derivedVariable0.getAlias();
      assertEquals("vIh\"9x", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.getColumnStart();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=3.7634926010115564
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("variable.name.label");
      boolean boolean0 = rawVariable0.isCleaned();
      assertEquals("variable.name.label", rawVariable0.getCategory());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.getNotes();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier((-623));
      derivedVariable0.getLabel();
      assertEquals("-623", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("variable.name.label");
      derivedVariable0.getName();
      assertEquals("variable.name.label", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("UNABLE_TO_GET_ALL_SUMMARY_VARIABLES");
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getForm());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("UNABLE_TO_GET_ALL_SUMMARY_VARIABLES", derivedVariable1.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getYear());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("NON_EXISTENT_SOURCE_VARIABLE");
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("NON_EXISTENT_SOURCE_VARIABLE", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getFilePath());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("", derivedVariable1.getForm());
      assertEquals("", derivedVariable1.getYear());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getName());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.8872385926133708
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(derivedVariable1.isNewRecord());
      assertNotNull(macawChangeEvent0);
      assertFalse(derivedVariable1.isCleaned());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable((Variable) null);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, (Variable) null);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertNull(macawChangeEvent0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }
}
