/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 14 02:50:34 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(2291);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "?jV9$XJ`ecB8,");
      pipedOutputStream0.close();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe closed
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.8938364890463215
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      System.setCurrentTimeMillis((-3495L));
      Player player0 = new Player(0, "~e", 67);
      player0.setDead();
      player0.type();
      player0.type();
      Player player1 = new Player(1280, "", "", 67);
      player1.getSubparty();
      player1.setJoinOK(player0, false);
      player1.boss = (Party) player0;
      player0.isJoinOK(player1, false);
      player0.isJoinOK(player1, false);
      player0.setDead();
      System.setCurrentTimeMillis(11505L);
      player1.isJoinOK(player0, false);
      player1.isJoinOK(player0, false);
      player1.isJoinOK(player0, false);
      player0.pack();
      player1.isJoinOK(player0, true);
      player0.isJoinOK(player1, false);
      assertEquals((-3495L), player0.getTimeOfDeath());
      
      int int0 = player1.type();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.6951020624694584
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0.0.0.0");
      System.setCurrentTimeMillis((-3495L));
      Player player0 = new Player(0, "~e", 67);
      player0.setDead();
      Player player1 = new Player(0, "", "~e", (short)4919, 0);
      player1.getSubparty();
      player1.setJoinOK(player0, false);
      player0.isJoinOK(player1, false);
      player0.setDead();
      System.setCurrentTimeMillis(13154L);
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals((-3495L), player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player((-2039), "k$,I|/cfQcuz", "UO;'T", (-2039));
      player0.setZ((-2039));
      float float0 = player0.getZ();
      assertEquals((-2039.0F), float0, 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, "", (short)4919);
      player1.setY((-1203.51F));
      float float0 = player1.getY();
      assertEquals((-1203.51F), float0, 0.01F);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player((-1031), "F4:tfa`((a_L-IkK", 4455);
      player0.setMoney((-1031));
      player0.type();
      player0.getY();
      Player player1 = new Player((short)4919);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)37;
      byteArray0[1] = (byte)84;
      byteArray0[2] = (byte)80;
      byteArray0[3] = (byte)3;
      byteArray0[4] = (byte) (-114);
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-25087), (byte)1);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player1.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.6467142775717116
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player((-2473), "", "", (-2473));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player1 = new Player(8448, "BYPN~Cw\"-}jj;", "", 46, (-695));
      player0.boss = (Party) player1;
      player0.getZ();
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player1.gangStrength();
      player0.setX(0.0F);
      player0.setY(0.0F);
      player0.getZ();
      System.setCurrentTimeMillis((short)4919);
      player0.getStrength();
      int int0 = player1.getStrength();
      assertEquals((-695), int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player();
      player0.setX((-3363.6638F));
      player0.pack();
      float float0 = player0.getX();
      assertEquals((-3363.6638F), float0, 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.setMoney(0.1F);
      player0.setDead((long) (short)4919);
      player0.isDead();
      player0.getMoney();
      boolean boolean0 = player0.isConnected();
      assertEquals(4919L, player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player((-723), (String) null, "iD6", (-246));
      player0.pack();
      player0.pack();
      String string0 = player0.getIP();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals((-246), player0.getPictureId());
      assertFalse(player0.isDead());
      assertNull(string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, false);
      Player player1 = new Player(2654, "|a&[4L13mS>Y69&", (String) null, (-1718), 0);
      player1.toString();
      player0.getZ();
      // Undeclared exception!
      try { 
        player1.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player((-1795), "", "", (-1795));
      player0.getIP();
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      assertEquals((-1795), player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(344, (String) null, 344);
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertFalse(boolean0);
      
      player0.getName();
      assertEquals(344, player0.getPictureId());
      
      float float0 = player1.getMoney();
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player-1", player1.toString());
      assertTrue(player1.isConnected());
      assertEquals(0, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      Player player0 = new Player((-3821), (String) null, "m\"", (-3821), (-3821));
      int int0 = player0.getPictureId();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-3821), int0);
      assertEquals((-3821), player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte) (-70));
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      player0.setX((byte)0);
      player0.type();
      player0.unpack(dataInputStream0);
      player0.toString();
      assertEquals(0.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.301608716407634
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(2291);
      player0.setJoinOK(player0, false);
      player0.setY((short)4919);
      player0.isJoinOK(player0, false);
      Player player1 = new Player((short)4919);
      player0.getY();
      player0.getName();
      assertEquals(4919.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(1872, (String) null, 1872);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      Player player0 = new Player(26634, (String) null, 26634);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      player0.setConnected(false);
      player0.getPictureId();
      player0.getX();
      player0.isConnected();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player((-2111), "", "", 1846, (-2111));
      player0.setDead((long) 1108);
      int int0 = player0.gangStrength();
      assertEquals(1108L, player0.getTimeOfDeath());
      assertEquals((-2111), int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((-1687), "", 8448);
      Party party0 = player1.boss;
      player1.setX(0.0F);
      player0.next = null;
      player0.pack();
      player1.getX();
      float float0 = player1.getY();
      assertEquals(0.0F, player1.getX(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead((long) (byte)54, true);
      Player player1 = new Player((byte)54);
      player1.setY((byte)1);
      Player player2 = new Player((byte)1);
      Player player3 = new Player();
      player3.type();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player3.setDead((-4074L));
      player3.getTimeOfDeath();
      player0.getName();
      assertEquals(54L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(993, "0Y)5VhbD}L]c'}@", "", 993, 3);
      player0.toString();
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(3, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0Y)5VhbD}L]c'}@", player0.getIP());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(993, player0.getPictureId());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.26315475997563
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player((-2111), "", "", 1846, (-2111));
      player0.setDead((long) 1108);
      Party party0 = new Party(1108);
      player0.boss = party0;
      player0.getSubparty();
      player0.isDead();
      Player player1 = new Player(0, "", 0);
      player0.isJoinOK(player1, true);
      player0.setJoinOK(player1, true);
      PipedInputStream pipedInputStream0 = new PipedInputStream((byte)2);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, (byte)2);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      player0.unpack(dataInputStream0);
      player1.toString();
      player0.getZ();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)2;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player0.setMoney(0.1F);
      player0.setDead(1751L);
      Player player2 = new Player((-2111), "", "", (byte)2);
      player2.setMoney((-2111));
      player2.getMoney();
      player2.getZ();
      player0.getPictureId();
      player0.getName();
      assertEquals(1751L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.977216632257477
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(0, "EhXMt\"!$qc+p", "E#j1!;$", 0);
      player0.getSubparty();
      Player player1 = new Player((short)4919, "E#j1!;$", "E#j1!;$", (-1), (-1277));
      player0.setJoinOK(player1, false);
      player0.setY(1384.3F);
      player1.setY((-1277));
      player0.isJoinOK(player1, false);
      player1.setZ(4096.63F);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      Player player2 = new Player(2);
      player2.unpack(dataInputStream0);
      player2.unpack(dataInputStream0);
      player0.pack();
      player1.pack();
      player1.toString();
      float float0 = player1.getZ();
      assertEquals(4096.63F, float0, 0.01F);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.994651693046077
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(2268);
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      player0.setY((short)4919);
      Player player2 = new Player();
      player0.head = (Party) player2;
      player0.isJoinOK(player1, false);
      player0.setDead((-1661L), true);
      player0.gangStrength();
      player0.pack();
      assertEquals(4919.0F, player0.getY(), 0.01F);
      
      Player player3 = new Player((short)4919, "1PEwX'^W\"", "1PEwX'^W\"", (short)4919);
      Player player4 = new Player(104, (String) null, "state.Player", 257);
      player4.isJoinOK(player1, false);
      player4.isJoinOK(player1, true);
      player1.getName();
      float float0 = player4.getMoney();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.850863601176158
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(2288);
      int int0 = Packable.PLAYER;
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 5, 10642);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      player0.setX(2288);
      player0.unpack(byteArray0);
      player0.type();
      player0.setDead((long) 5);
      long long0 = player0.getTimeOfDeath();
      assertEquals(5L, long0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player((-2929), "", (-2929));
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player();
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      String string0 = player0.toString();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      
      player0.pack();
      player0.pack();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.322575046183876
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead(583L);
      player0.setZ((-1461));
      Player player1 = new Player((-1461), "<'D*'", "<'D*'", (-1461), 0);
      player1.setZ((short)4919);
      player1.reset(false);
      player1.setMoney((short)4919);
      player0.add(player1);
      player0.setJoinOK(player1, false);
      player0.getMoney();
      player0.type();
      player1.pack();
      player1.head = (Party) player0;
      player1.setZ(0.0F);
      player0.getMoney();
      player1.getStrength();
      player0.reset(false);
      player1.getIP();
      assertEquals(0.0F, player1.getZ(), 0.01F);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player(5, "", "", 5, 2609);
      player0.getName();
      player0.toString();
      int int0 = player0.getStrength();
      assertTrue(player0.isConnected());
      assertEquals(2609, int0);
      assertEquals(5, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player();
      int int0 = player0.getStrength();
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, int0);
      assertEquals("Player-1", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(431);
      String string0 = player0.getIP();
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("Player431", player0.getName());
      assertEquals("0.0.0.0", string0);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(true);
      player0.pack();
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player-1", player0.toString());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.9417429777213613
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertTrue(boolean0);
      assertEquals(1, player1.getStrength());
      assertEquals(0, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals("Player-1", player1.getName());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.9417429777213613
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, false);
      Player player1 = new Player();
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertTrue(player1.isConnected());
      assertEquals("Player-1", player1.toString());
      assertEquals(1, player1.getStrength());
      assertEquals("0.0.0.0", player1.getIP());
      assertFalse(boolean0);
      assertEquals(0, player1.getPictureId());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ((-687.5325F));
      player0.pack();
      assertEquals((-687.5325F), player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isConnected();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(boolean0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player();
      assertTrue(player0.isConnected());
      
      player0.setConnected(false);
      player0.pack();
      assertFalse(player0.isConnected());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player(0, "J>[wXz}*.,kk7[", "J>[wXz}*.,kk7[", 0, 0);
      int int0 = player0.gangStrength();
      assertEquals(0, int0);
      
      player0.pack();
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player();
      player0.setMoney((-1277.0F));
      int int0 = player0.getPictureId();
      assertEquals((-1277.0F), player0.getMoney(), 0.01F);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player(344);
      Player player1 = new Player(1, "+jd#K!%o6N;M1L", "", (short)4919, (short)4919);
      player0.next = (Party) player1;
      assertEquals("+jd#K!%o6N;M1L", player1.getIP());
      assertEquals(4919, player1.getStrength());
      assertEquals(4919, player1.getPictureId());
      
      long long0 = player0.getTimeOfDeath();
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(0L, long0);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("Player344", player0.getName());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      player0.pack();
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead(2186L);
      player0.pack();
      assertEquals(2186L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte) (-127);
      player0.unpack(byteArray0);
      player0.setZ(3936.3F);
      player0.toString();
      assertEquals(3936.3F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      player0.pack();
      int int0 = player0.type();
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getZ(), 0.01F);
      assertEquals((-1), player0.getId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(5, int0);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.toString());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      
      Player player1 = new Player((short)4919, (String) null, (String) null, (-550), (short)4919);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(4919, player1.getStrength());
      assertFalse(player1.isDead());
      assertEquals((-550), player1.getPictureId());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      player0.setJoinOK(player0, false);
      boolean boolean0 = player0.isDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)75;
      byteArray0[1] = (byte) (-86);
      player0.unpack(byteArray0);
      player0.pack();
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player(823);
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      int int0 = player0.gangStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, int0);
      assertFalse(player0.isDead());
      assertEquals("Player823", player0.getName());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isDead();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player-1", player0.toString());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      int int0 = player0.gangStrength();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(1, int0);
  }
}
