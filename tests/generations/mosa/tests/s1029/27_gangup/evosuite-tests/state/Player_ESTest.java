/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 08:05:50 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(638);
      player0.setMoney(638);
      float float0 = player0.getMoney();
      assertEquals(638.0F, float0, 0.01F);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0, 0);
      int int0 = player0.gangStrength();
      assertEquals(0, player0.getPictureId());
      assertEquals(0, int0);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      Party party0 = new Party();
      player0.add(party0);
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.1414764236090367
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      player0.setDead((long) 2, false);
      player0.reset(false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player1 = new Player((short)4919, "U[e3/iyr]dsg/", "U[e3/iyr]dsg/", 3, (-166));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<@");
      player1.setJoinOK(player0, false);
      player1.isJoinOK(player0, false);
      player0.isJoinOK(player1, false);
      Player player2 = new Player();
      player2.getZ();
      player2.isConnected();
      Player player3 = new Player(5, "O$tD0<p", 5);
      player3.setMoney((-166));
      player3.pack();
      float float0 = player3.getMoney();
      assertEquals((-166.0F), float0, 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.1944491969643005
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, "", "Et5gdj7~01R$w}gti", (short)4919, (-221));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%c{&a_fA\"=;IO6c|U");
      player0.setJoinOK(player1, false);
      player1.setZ((-221));
      player0.setDead(1L);
      player0.isJoinOK(player1, true);
      Player player2 = new Player();
      player1.getZ();
      player2.isConnected();
      player1.pack();
      int int0 = player0.getStrength();
      assertTrue(player0.isDead());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.754627133386218
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.getMoney();
      player0.setX(0.0F);
      player0.gangStrength();
      player0.type();
      player0.getX();
      player0.gangStrength();
      player0.getZ();
      player0.getMoney();
      Player player1 = new Player();
      player0.isJoinOK(player1, false);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      player0.id = 721;
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.242894687106955
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player1 = new Player((-1), "", "bvvzdW: coV", (short)4919, (-3153));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      player1.setJoinOK(player0, false);
      player1.getX();
      player0.setY((-1.0F));
      Player player2 = new Player((-221), "%D8Ab9Jbc!jTg", "", (-221), 0);
      player2.setY((short)4919);
      player1.type();
      player2.type();
      player2.getStrength();
      int int0 = Packable.UNDEFINED;
      FileSystemHandling.shouldAllThrowIOExceptions();
      player1.getMoney();
      player1.gangStrength();
      player2.type();
      player1.type();
      Player player3 = new Player();
      player3.isJoinOK(player1, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      player2.pack();
      assertEquals(4919.0F, player2.getY(), 0.01F);
      
      int int1 = player3.getStrength();
      assertEquals(1, int1);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      player0.getMoney();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-86), 1412);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(1120, (String) null, 1120);
      player0.setX(2448.4F);
      player0.toString();
      assertEquals(2448.4F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = player0.prev;
      player0.boss = null;
      player0.setY(1741.0F);
      float float0 = player0.getY();
      assertEquals(1741.0F, float0, 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919);
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(boolean0);
      assertTrue(player1.isConnected());
      assertEquals(0, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertEquals("Player4919", player1.getName());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player-1", player0.getName());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player();
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      
      Player player1 = new Player((-1), "", (short)4919);
      player1.getName();
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertTrue(player1.isConnected());
      assertEquals(1, player1.getStrength());
      assertEquals(4919, player1.getPictureId());
      assertFalse(player1.isDead());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.051435843948024
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player((-1874), " CI<yXKaDP\"qbY", ".*[.]class$", (-1874));
      player0.setConnected(false);
      Player player1 = new Player((-1469), ".*[.]class$", "module.ModuleBrowserDialog$ModuleFilter", (-1874), 272);
      player1.pack();
      player1.setDead((long) (-1469));
      player0.prev = (Party) player1;
      player1.pack();
      player0.type();
      player0.getStrength();
      player1.setX((-3099.1604F));
      System.setCurrentTimeMillis(1);
      player1.getX();
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.setConnected(false);
      player0.isConnected();
      Player player2 = new Player();
      float float0 = Player.TOLERANCE;
      player1.isConnected();
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (short)4919);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(0, (String) null, (String) null, 0);
      Player player1 = new Player(0);
      player0.getIP();
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(24409, "RDLO4&>HMB?<BU9`", "RDLO4&>HMB?<BU9`", 24409);
      Player player1 = new Player(24409, "'P.}k", 24409);
      assertEquals("0.0.0.0", player1.getIP());
      
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)29;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)1, (byte)92);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(24409, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(boolean0);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.969755134636486
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player();
      player0.isConnected();
      player0.setY((-2307.41F));
      player0.setZ(516.907F);
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      player0.type();
      player0.type();
      Player player1 = new Player((-3643));
      player1.getMoney();
      float float0 = player0.getY();
      assertEquals((-2307.41F), float0, 0.01F);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player((-341), "", (-1798));
      player0.toString();
      assertEquals((-1798), player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(1180);
      player0.setZ(1180);
      float float0 = player0.getZ();
      assertEquals(1180.0F, float0, 0.01F);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((-29696), "", "", (-1736), (-29696));
      player0.add(player1);
      assertEquals((-1736), player1.getPictureId());
      
      player0.pack();
      int int0 = player0.gangStrength();
      assertEquals("Player-1", player0.getName());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-29695), int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead((-600L));
      player0.setJoinOK(player0, false);
      player0.isDead();
      player0.pack();
      assertEquals((-600L), player0.getTimeOfDeath());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player((-3302), "", "Player.unpack(): *** WARNING *** data is not of proper type!", (-14));
      String string0 = player0.getIP();
      assertEquals("", string0);
      
      player0.pack();
      player0.toString();
      float float0 = player0.getZ();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals((-14), player0.getPictureId());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player();
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(boolean0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.getName());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player((-534), "@Q/Dl5T}Mer6 5'", "@Q/Dl5T}Mer6 5'", 1, (-534));
      int int0 = player0.getStrength();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals((-534), int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.1952296882816973
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(3120);
      player0.setDead();
      player0.setX(3120);
      player0.setConnected(true);
      player0.getSubparty();
      player0.setY(0.1F);
      player0.getName();
      player0.pack();
      player0.setX(3120);
      player0.setDead((-1L));
      Party party0 = player0.gangBoss();
      player0.add(party0);
      party0.id = (int) (short)4919;
      party0.prev = (Party) player0;
      player0.add(party0);
      player0.setMoney(3120);
      player0.setY(0.2F);
      player0.getTimeOfDeath();
      player0.toString();
      player0.getIP();
      player0.setZ(2127.453F);
      assertEquals((-1L), player0.getTimeOfDeath());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = true;
      Player player1 = null;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.052754235510318
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player((-765), "", "", (-765));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      Player player1 = (Player)player0.gangBoss();
      player1.setDead((long) (short)4919);
      player0.boss = (Party) player1;
      Player player2 = new Player((-765), "g", (-765));
      player0.remove(player2);
      player2.setX((-765));
      player2.setX((-765));
      player2.getSubparty();
      player0.setX((-765));
      player1.getIP();
      player0.getTimeOfDeath();
      player2.toString();
      player2.isConnected();
      player2.setX(0.2F);
      player0.unpack(dataInputStream0);
      player0.isConnected();
      player0.getPictureId();
      player2.setMoney((short)4919);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream((OutputStream) null);
      DataOutputStream dataOutputStream0 = new DataOutputStream(filterOutputStream0);
      // Undeclared exception!
      try { 
        player1.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.FilterOutputStream", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(boolean0);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(1148, (String) null, (String) null, 1148);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player((-2047));
      String string0 = player0.getIP();
      assertEquals("0.0.0.0", string0);
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-2047", player0.toString());
      
      Player player1 = new Player((short)4919, "0.0.0.0", (-2047));
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)98;
      byteArray0[1] = (byte)98;
      byteArray0[4] = (byte)73;
      player1.unpack(byteArray0);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals((-2047), player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = player0.isDead();
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player();
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream((short)4919);
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(29, byteArrayOutputStream0.size());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player((-3138), "Fn6C", (-3138));
      player0.head = null;
      player0.pack();
      player0.setDead((long) (-3138));
      player0.boss = null;
      player0.id = (-3138);
      player0.add((Party) null);
      player0.setConnected(true);
      player0.getPictureId();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("NC");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      player0.setZ((-3138));
      float float0 = player0.getX();
      assertEquals((-3138L), player0.getTimeOfDeath());
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(0, "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", 727, 727);
      Party party0 = new Party();
      player0.setMoney(727);
      player0.setDead(15000L, true);
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      player0.setDead();
      int int0 = player0.getPictureId();
      assertEquals(727.0F, player0.getMoney(), 0.01F);
      assertEquals(727, int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(false);
      player0.pack();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(848.0F);
      player0.id = (-2262);
      player0.setDead();
      player0.getX();
      player0.setConnected(true);
      player0.getPictureId();
      player0.getX();
      player0.getIP();
      assertEquals(848.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(true);
      player0.pack();
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead((long) (short)4919, false);
      player0.pack();
      assertEquals(4919L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player();
      String string0 = player0.toString();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("Player-1", string0);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      player0.pack();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player(1941, " ", (String) null, 162, 3892);
      player0.getName();
      boolean boolean0 = player0.isDead();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(3892, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(162, player0.getPictureId());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player();
      player0.setMoney(0.0F);
      player0.pack();
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player-1", player0.getName());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      assertEquals(0, player0.getPictureId());
      assertEquals(29, byteArray0.length);
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getZ(), 0.01F);
      assertEquals((-1), player0.getId());
      
      Player player1 = new Player((short)4919, (String) null, (-5378));
      assertFalse(player1.isDead());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals((-5378), player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-2);
      byteArray0[1] = (byte) (-55);
      player0.unpack(byteArray0);
      String string0 = player0.getIP();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", string0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player();
      String string0 = player0.getName();
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player-1", string0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }
}
