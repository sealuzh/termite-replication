/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 12:09:27 GMT 2019
 */

package net.sf.xbus.protocol.records;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.datatransfer.DataFlavor;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.net.URI;
import java.net.URL;
import java.time.Instant;
import java.time.temporal.Temporal;
import java.time.temporal.TemporalAmount;
import javax.activation.DataHandler;
import javax.activation.URLDataSource;
import javax.xml.soap.AttachmentPart;
import net.sf.xbus.base.bytearraylist.ByteArrayList;
import net.sf.xbus.base.xbussystem.XBUSSystem;
import net.sf.xbus.protocol.records.RecordTypeMessage;
import org.apache.axis.Message;
import org.apache.axis.SOAPPart;
import org.apache.axis.deployment.wsdd.WSDDDeployableItem;
import org.apache.axis.deployment.wsdd.WSDDDeployment;
import org.apache.axis.deployment.wsdd.WSDDGlobalConfiguration;
import org.apache.axis.deployment.wsdd.WSDDJAXRPCHandlerInfoChain;
import org.apache.axis.deployment.wsdd.WSDDRequestFlow;
import org.apache.axis.message.RPCParam;
import org.apache.axis.message.SOAPBodyElement;
import org.apache.wml.dom.WMLDocumentImpl;
import org.apache.wml.dom.WMLOptgroupElementImpl;
import org.apache.xerces.dom.CoreDocumentImpl;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.dom.DocumentFragmentImpl;
import org.apache.xerces.dom.DocumentImpl;
import org.apache.xerces.dom.DocumentTypeImpl;
import org.apache.xerces.dom.PSVIDocumentImpl;
import org.apache.xerces.dom.TextImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.w3c.dom.DOMImplementation;
import org.w3c.dom.Node;
import org.w3c.dom.UserDataHandler;
import org.w3c.dom.events.EventListener;
import org.w3c.dom.traversal.NodeFilter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RecordTypeMessage_ESTest extends RecordTypeMessage_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "RC_OK");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "RC_OK");
      byte[] byteArray0 = new byte[9];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "RC_OK");
      byteArray0[1] = (byte)89;
      byteArray0[4] = (byte)0;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byteArray0[5] = (byte)89;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byteArray0[7] = (byte)89;
      byteArray0[8] = (byte)89;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((String) null, (XBUSSystem) null, "");
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byteArrayList0.addAll(byteArrayList0);
      recordTypeMessage0.getRequestTextAsXML((XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[5];
      byteArrayList0.toString();
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[3] = (byte)102;
      byteArray0[4] = (byte)6;
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("C|fN>~[5jQwsxV", (XBUSSystem) null, "C|fN>~[5jQwsxV");
      ByteArrayList byteArrayList1 = new ByteArrayList();
      recordTypeMessage0.getRequestTextAsXML((XBUSSystem) null);
      byteArrayList0.toByteArray();
      byteArrayList1.iterator();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)6;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseDocument(deferredDocumentImpl0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      Object object0 = new Object();
      ByteArrayList byteArrayList2 = new ByteArrayList();
      Object object1 = new Object();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("", (XBUSSystem) null, (String) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-113);
      ByteArrayList byteArrayList3 = ByteArrayList.createByteArrayList(byteArray0, (byte) (-113));
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseObject(byteArrayList3, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArrayList0.iterator();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byteArrayList0.toString();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Boolean boolean0 = new Boolean((String) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byte[] byteArray0 = new byte[9];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArrayList0.toByteArray();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byteArrayList0.toByteArray();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArrayList0.add(byteArray0);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((String) null, (XBUSSystem) null, "");
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestObject(byteArrayList0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      DocumentImpl documentImpl0 = new DocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, (String) null, "QC`", (String) null);
      documentImpl0.getDoctype();
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      documentImpl0.getImplementation();
      deferredDocumentImpl0.createDeferredElementDefinition("0");
      DocumentImpl documentImpl1 = new DocumentImpl();
      DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl();
      TextImpl textImpl0 = new TextImpl();
      documentImpl0.getLength();
      documentImpl0.getUserData((Node) null, "LRv/_$L`S*F[y8oBd)");
      Integer integer0 = new Integer(1);
      deferredDocumentImpl0.getLastChild();
      Integer integer1 = new Integer(1);
      Integer integer2 = new Integer(1);
      deferredDocumentImpl0.getIdentifier("LRv/_$L`S*F[y8oBd)");
      Integer integer3 = new Integer(2911);
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(true);
      coreDocumentImpl0.getErrorChecking();
      coreDocumentImpl0.normalizeDocument();
      coreDocumentImpl0.getDocumentElement();
      recordTypeMessage0.setResponseDocument(deferredDocumentImpl0, (XBUSSystem) null);
      recordTypeMessage0.getResponseText();
      recordTypeMessage0.getResponseObject();
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byteArrayList0.toString();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("", (XBUSSystem) null, "");
      byteArrayList0.toByteArray();
      recordTypeMessage0.setRequestObject(byteArrayList0, (XBUSSystem) null);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      WSDDDeployment wSDDDeployment0 = new WSDDDeployment();
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream3 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream4 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream5 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream3);
      PipedOutputStream pipedOutputStream6 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream7 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream8 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream9 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream10 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream11 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream12 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream13 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream14 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream15 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream16 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream17 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream18 = null;
      try {
        pipedOutputStream18 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      URI uRI0 = MockURI.aFTPURI;
      URL uRL0 = MockURI.toURL(uRI0);
      DataHandler dataHandler0 = new DataHandler(uRL0);
      URLDataSource uRLDataSource0 = new URLDataSource(uRL0);
      URLDataSource uRLDataSource1 = new URLDataSource((URL) null);
      UserDataHandler userDataHandler0 = mock(UserDataHandler.class, new ViolatedAssumptionAnswer());
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      try { 
        recordTypeMessage0.setRequestObject(uRLDataSource0, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 javax.activation.URLDataSource cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byteArrayList0.toString();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("", (XBUSSystem) null, "");
      byteArrayList0.toByteArray();
      try { 
        recordTypeMessage0.setRequestObject("", (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 java.lang.String cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byteArrayList0.toString();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("", (XBUSSystem) null, "");
      byteArrayList0.toByteArray();
      recordTypeMessage0.setRequestObject(byteArrayList0, (XBUSSystem) null);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      WSDDDeployment wSDDDeployment0 = new WSDDDeployment();
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream3 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream4 = new PipedOutputStream(pipedInputStream0);
      try { 
        pipedInputStream0.connect(pipedOutputStream4);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.synchronizeRequestFields((XBUSSystem) null);
      WSDDJAXRPCHandlerInfoChain wSDDJAXRPCHandlerInfoChain0 = new WSDDJAXRPCHandlerInfoChain();
      wSDDJAXRPCHandlerInfoChain0.getHandlerChainFactory();
      wSDDJAXRPCHandlerInfoChain0.getParametersTable();
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestText("", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      Boolean boolean0 = new Boolean(false);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArrayList0.iterator();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      byteArrayList0.iterator();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byteArrayList0.toString();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[9];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Boolean boolean1 = new Boolean(false);
      byteArrayList0.toByteArray();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      ByteArrayList.createByteArrayList(byteArray0, 0);
      byteArrayList0.add(byteArray0);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((String) null, (XBUSSystem) null, "");
      recordTypeMessage0.setRequestObject((Object) null, (XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      deferredDocumentImpl0.getNamespaceURI();
      deferredDocumentImpl0.createDeferredElementDefinition("hostaaelr i null");
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(0);
      Integer integer2 = new Integer(0);
      Integer integer3 = new Integer(0);
      SOAPBodyElement sOAPBodyElement0 = new SOAPBodyElement("S! 3#EYWlAB?nKN.s", (String) null);
      Message message0 = new Message(integer2, false, "S! 3#EYWlAB?nKN.s", (String) null);
      URI uRI0 = MockURI.aHttpURI;
      URL uRL0 = MockURI.toURL(uRI0);
      DataHandler dataHandler0 = new DataHandler(uRL0);
      dataHandler0.getCommand("  ");
      AttachmentPart attachmentPart0 = message0.createAttachmentPart(dataHandler0);
      message0.getAttachments();
      attachmentPart0.setMimeHeader("application/dime", "multipart/related");
      attachmentPart0.getMimeHeader((String) null);
      attachmentPart0.removeMimeHeader("multipart/related");
      attachmentPart0.removeAllMimeHeaders();
      attachmentPart0.removeMimeHeader("  ");
      attachmentPart0.setContentLocation("application/dime");
      attachmentPart0.getMimeHeader("multipart/related");
      message0.addAttachmentPart(attachmentPart0);
      Integer integer4 = new Integer((int) integer0);
      Integer integer5 = new Integer(2559);
      Integer integer6 = new Integer(0);
      SOAPPart sOAPPart0 = new SOAPPart(message0, uRL0, false);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((String) null, (XBUSSystem) null, "");
      recordTypeMessage0.getRequestObject((XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.synchronizeResponseFields((XBUSSystem) null);
      recordTypeMessage0.setErrorcode(17);
      WSDDGlobalConfiguration wSDDGlobalConfiguration0 = new WSDDGlobalConfiguration();
      assertEquals(0, WSDDDeployableItem.SCOPE_PER_ACCESS);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      Object object0 = new Object();
      Object object1 = new Object();
      MockDate mockDate0 = new MockDate(102, (-3493), 3181, 3181, 3181, 4);
      mockDate0.getTime();
      MockDate mockDate1 = new MockDate();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("`7p)F%:$R6]0]E)En3", (XBUSSystem) null, (String) null);
      Instant instant0 = MockInstant.ofEpochSecond((long) 4, 1125L);
      TemporalAmount temporalAmount0 = mock(TemporalAmount.class, new ViolatedAssumptionAnswer());
      doReturn((Temporal) null).when(temporalAmount0).subtractFrom(any(java.time.temporal.Temporal.class));
      MockInstant.minus(instant0, temporalAmount0);
      recordTypeMessage0.setResponseObject((Object) null, (XBUSSystem) null);
      try { 
        recordTypeMessage0.setResponseObject(object0, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 java.lang.Object cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byte[] byteArray0 = new byte[9];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byteArrayList0.add(byteArray0);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((String) null, (XBUSSystem) null, "");
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestObject(byteArrayList0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XBUSSystem xBUSSystem0 = null;
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[5];
      byteArrayList0.toString();
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setResponseObject((Object) null, (XBUSSystem) null);
      WSDDGlobalConfiguration wSDDGlobalConfiguration0 = new WSDDGlobalConfiguration();
      WSDDGlobalConfiguration wSDDGlobalConfiguration1 = new WSDDGlobalConfiguration();
      WSDDRequestFlow wSDDRequestFlow0 = new WSDDRequestFlow();
      wSDDGlobalConfiguration0.setRequestFlow(wSDDRequestFlow0);
      // Undeclared exception!
      try { 
        wSDDGlobalConfiguration1.getFaultFlow(wSDDGlobalConfiguration0.QNAME_HANDLER);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.axis.deployment.wsdd.WSDDGlobalConfiguration", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseText("Unsupported transfer encoding: ", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setResponseText((String) null, (XBUSSystem) null);
      recordTypeMessage0.setShortname("=%DyJd0Y&'");
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
      WSDDGlobalConfiguration wSDDGlobalConfiguration0 = new WSDDGlobalConfiguration();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((PipedOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      WSDDGlobalConfiguration wSDDGlobalConfiguration0 = new WSDDGlobalConfiguration();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("CORBA", (XBUSSystem) null, "globalConfiguration");
      recordTypeMessage0.getResponseText();
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((String) null, (XBUSSystem) null, (String) null);
      DocumentImpl documentImpl0 = new DocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, (String) null, "QC`", (String) null);
      documentImpl0.getDoctype();
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      documentImpl0.getImplementation();
      deferredDocumentImpl0.getNamespaceURI();
      deferredDocumentImpl0.createDeferredElementDefinition("org.apache.axis.server.AxisServerFactory");
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl();
      TextImpl textImpl0 = new TextImpl();
      documentImpl0.getLength();
      documentTypeImpl0.isSameNode((Node) null);
      documentImpl0.getUserData((Node) null, "%Rdv/_$L4*Fvy8od)");
      deferredDocumentImpl0.getLastChild();
      Integer integer0 = new Integer(8);
      deferredDocumentImpl0.getIdentifier("org.apache.axis.server.AxisServerFactory");
      Message message0 = new Message(documentImpl0, false, "%Rdv/_$L4*Fvy8od)", "%Rdv/_$L4*Fvy8od)");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(true);
      coreDocumentImpl0.lookupPrefix((String) null);
      coreDocumentImpl0.getErrorChecking();
      deferredDocumentImpl0.normalize();
      coreDocumentImpl0.normalizeDocument();
      coreDocumentImpl0.getDocumentElement();
      ByteArrayList byteArrayList0 = new ByteArrayList();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      byteArrayList0.addAll(byteArrayList1);
      recordTypeMessage0.setRequestObject((Object) null, (XBUSSystem) null);
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((String) null, (XBUSSystem) null, (String) null);
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      pSVIDocumentImpl0.getDoctype();
      DOMImplementation dOMImplementation0 = pSVIDocumentImpl0.getImplementation();
      PSVIDocumentImpl pSVIDocumentImpl1 = new PSVIDocumentImpl();
      DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl();
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      pSVIDocumentImpl0.removeEventListener("MaKuF)qYMOT!B", eventListener0, true);
      pSVIDocumentImpl0.getUserData((Node) null, "org.aIache.a-is.server.AxisServerFactory");
      RPCParam rPCParam0 = new RPCParam("org.apache.axis.session.SimpleSession", "org.aIache.a-is.server.AxisServerFactory", pSVIDocumentImpl1);
      Message message0 = new Message(dOMImplementation0, true);
      PSVIDocumentImpl pSVIDocumentImpl2 = new PSVIDocumentImpl();
      NodeFilter nodeFilter0 = mock(NodeFilter.class, new ViolatedAssumptionAnswer());
      EventListener eventListener1 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      pSVIDocumentImpl2.removeEventListener("response", eventListener1, true);
      pSVIDocumentImpl2.normalizeDocument();
      WMLOptgroupElementImpl wMLOptgroupElementImpl0 = new WMLOptgroupElementImpl((WMLDocumentImpl) null, "$u;Xs>t%*)?>hrJ");
      recordTypeMessage0.getResponseText();
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      pSVIDocumentImpl0.getDoctype();
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true);
      DOMImplementation dOMImplementation0 = pSVIDocumentImpl0.getImplementation();
      deferredDocumentImpl0.getNamespaceURI();
      deferredDocumentImpl0.createDeferredElementDefinition("org.aIache.a-is.server.AxisServerFactory");
      PSVIDocumentImpl pSVIDocumentImpl1 = new PSVIDocumentImpl();
      DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl();
      deferredDocumentImpl0.getLength();
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      pSVIDocumentImpl0.removeEventListener("}'J[-4H3^whI:h_xr=R", eventListener0, true);
      pSVIDocumentImpl0.getUserData((Node) null, "org.aIache.a-is.server.AxisServerFactory");
      RPCParam rPCParam0 = new RPCParam("}'J[-4H3^whI:h_xr=R", documentFragmentImpl0);
      deferredDocumentImpl0.getIdentifier("org.apache.axis.sereer.AxisServerFactor");
      Message message0 = new Message(dOMImplementation0, true);
      PSVIDocumentImpl pSVIDocumentImpl2 = new PSVIDocumentImpl();
      deferredDocumentImpl0.createDeferredElement("  ", "Hv");
      NodeFilter nodeFilter0 = mock(NodeFilter.class, new ViolatedAssumptionAnswer());
      deferredDocumentImpl0.createTreeWalker((Node) documentFragmentImpl0, 269, nodeFilter0, true);
      deferredDocumentImpl0.normalize();
      pSVIDocumentImpl2.getErrorChecking();
      deferredDocumentImpl0.normalize();
      deferredDocumentImpl0.removeIdentifier("response");
      pSVIDocumentImpl2.normalizeDocument();
      WMLOptgroupElementImpl wMLOptgroupElementImpl0 = new WMLOptgroupElementImpl((WMLDocumentImpl) null, "Hv");
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((String) null, (XBUSSystem) null, "org.apache.axis.attachments.AttachmentsImpl");
      recordTypeMessage0.getResponseText();
      recordTypeMessage0.getResponseText();
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "6#^");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6#^");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[6] = (byte)8;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byteArray0[2] = (byte)8;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byteArray0[6] = (byte)8;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byteArray0[7] = (byte)8;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[8] = (byte)8;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((String) null, (XBUSSystem) null, "");
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      assertEquals(0, byteArrayList0.length());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      Boolean boolean0 = new Boolean(false);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[1];
      ByteArrayList byteArrayList1 = ByteArrayList.createByteArrayList(byteArray0, (byte)20);
      byteArrayList0.addAll(byteArrayList1);
      byteArrayList0.iterator();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "0");
      byteArrayList0.iterator();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byteArrayList0.toString();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "8EM:x}x.lsBL5{iwDY");
      byte[] byteArray1 = new byte[9];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0");
      Boolean boolean1 = Boolean.TRUE;
      byteArrayList0.toByteArray();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byteArrayList0.add(byteArray1);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("", (XBUSSystem) null, "^wo]y+$=}h");
      recordTypeMessage0.setRequestText((String) null, (XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      deferredDocumentImpl0.getNamespaceURI();
      deferredDocumentImpl0.createDeferredElementDefinition("hostaaelr i null");
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(0);
      Integer integer2 = new Integer(0);
      Integer integer3 = new Integer(0);
      SOAPBodyElement sOAPBodyElement0 = new SOAPBodyElement("?nL=X;", (String) null);
      Message message0 = new Message(integer2, false, "?nL=X;", (String) null);
      URI uRI0 = MockURI.aHttpURI;
      URL uRL0 = MockURI.toURL(uRI0);
      DataHandler dataHandler0 = new DataHandler(uRL0);
      dataHandler0.getCommand("  ");
      AttachmentPart attachmentPart0 = message0.createAttachmentPart(dataHandler0);
      message0.getAttachments();
      attachmentPart0.setMimeHeader("application/dime", "");
      attachmentPart0.getMimeHeader((String) null);
      attachmentPart0.removeMimeHeader("multipart/related");
      attachmentPart0.removeAllMimeHeaders();
      URLDataSource uRLDataSource0 = new URLDataSource((URL) null);
      attachmentPart0.removeMimeHeader("R]U/7YoLd^q>?1{L}");
      attachmentPart0.getMimeHeader("multipart/related");
      message0.addAttachmentPart(attachmentPart0);
      Integer integer4 = new Integer((int) integer0);
      UserDataHandler userDataHandler0 = mock(UserDataHandler.class, new ViolatedAssumptionAnswer());
      Integer integer5 = new Integer(2476);
      SOAPPart sOAPPart0 = new SOAPPart(message0, integer5, false);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("  ", (XBUSSystem) null, "application/dime");
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestText("?kR:|%.h", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      URI uRI0 = MockURI.aHttpURI;
      URL uRL0 = MockURI.toURL(uRI0);
      DataHandler dataHandler0 = new DataHandler(uRL0);
      URLDataSource uRLDataSource0 = new URLDataSource((URL) null);
      URLDataSource uRLDataSource1 = new URLDataSource(uRL0);
      URLDataSource uRLDataSource2 = new URLDataSource((URL) null);
      DataFlavor dataFlavor0 = DataFlavor.stringFlavor;
      dataHandler0.isDataFlavorSupported(dataFlavor0);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("FFp+n#e;MF1W\"?}O,", (XBUSSystem) null, "FFp+n#e;MF1W\"?}O,");
      recordTypeMessage0.getResponseObject();
      System.setCurrentTimeMillis(2028L);
  }
}
