/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 10:28:52 GMT 2019
 */

package client.network;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import client.BomberClient;
import client.network.ClientMsgReceiver;
import java.awt.HeadlessException;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.FilterOutputStream;
import java.io.OutputStream;
import java.net.Proxy;
import java.net.Socket;
import java.sql.BatchUpdateException;
import java.sql.DataTruncation;
import java.sql.SQLDataException;
import java.sql.SQLFeatureNotSupportedException;
import java.sql.SQLTransactionRollbackException;
import java.sql.SQLWarning;
import java.util.function.Consumer;
import messages.global.GlobalChatMsg;
import messages.global.JoinAckMsg;
import messages.session.SessionChatMsg;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClientMsgReceiver_ESTest extends ClientMsgReceiver_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      DataTruncation dataTruncation0 = new DataTruncation(1644, true, true, 1644, 1644);
      dataTruncation0.getLocalizedMessage();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      dataTruncation0.forEach(consumer0);
      DataTruncation dataTruncation1 = new DataTruncation((-911), true, false, 1, (-911));
      dataTruncation0.getIndex();
      DataTruncation dataTruncation2 = new DataTruncation((-911), false, true, 1644, (-911), dataTruncation1);
      dataTruncation1.printStackTrace();
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      DataTruncation dataTruncation3 = new DataTruncation(1644, true, true, 1, 1);
      dataTruncation1.setNextException(dataTruncation2);
      DataTruncation dataTruncation4 = new DataTruncation(1644, false, true, 1644, 1);
      dataTruncation2.forEach(consumer1);
      dataTruncation1.getTransferSize();
      DataTruncation dataTruncation5 = new DataTruncation((-911), true, true, 1644, 1644);
      dataTruncation5.getDataSize();
      dataTruncation1.addSuppressed(dataTruncation2);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1644);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null, 1644);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(bufferedOutputStream0);
      DataTruncation dataTruncation6 = new DataTruncation((-911), false, false, (-911), (-911));
      dataTruncation5.getTransferSize();
      dataTruncation1.spliterator();
      SQLDataException sQLDataException0 = new SQLDataException();
      dataTruncation5.addSuppressed(dataTruncation1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JoinAckMsg joinAckMsg0 = new JoinAckMsg(true, 1644);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(joinAckMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.BomberClient", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      String string0 = "wB[`j)62Sp'";
      int int0 = 2624;
      long[] longArray0 = new long[4];
      longArray0[0] = (long) int0;
      longArray0[1] = (long) int0;
      longArray0[2] = (long) int0;
      longArray0[3] = (long) int0;
      String string1 = "a4<3Uklg$!%_`1%|f";
      String string2 = "aaK|XWbT5NW{q8:!";
      int int1 = 0;
      String string3 = "__M4-\\` $Hiu)sw\\:K}";
      String string4 = "";
      int int2 = 160;
      int[] intArray0 = new int[10];
      intArray0[0] = int1;
      intArray0[2] = int1;
      intArray0[3] = int1;
      intArray0[4] = int2;
      intArray0[6] = int2;
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = true;
      FileSystemHandling.setPermissions(evoSuiteFile0, boolean0, boolean0, boolean0);
      BatchUpdateException batchUpdateException0 = new BatchUpdateException(string2, intArray0);
      SQLWarning sQLWarning0 = new SQLWarning(string3, string4, int2, batchUpdateException0);
      sQLWarning0.printStackTrace();
      SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException(string1, string2, int1, sQLWarning0);
      BatchUpdateException batchUpdateException1 = new BatchUpdateException(string0, string0, int0, longArray0, sQLTransactionRollbackException0);
      String string5 = "b >-&,O\"YX7";
      SessionChatMsg sessionChatMsg0 = new SessionChatMsg(string5, string0);
      clientMsgReceiver0.processMsg(sessionChatMsg0);
      SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException(string0, batchUpdateException1);
      GlobalChatMsg globalChatMsg0 = new GlobalChatMsg(string2, string0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(globalChatMsg0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      System.setCurrentTimeMillis((-4024L));
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      long long0 = 1L;
      System.setCurrentTimeMillis(1L);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.displayErrorMessage();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      long long0 = (-2811L);
      System.setCurrentTimeMillis((-2811L));
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.closeConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.getDefaultUncaughtExceptionHandler();
      DataTruncation dataTruncation0 = new DataTruncation(1644, true, false, 1644, 27);
      DataTruncation dataTruncation1 = new DataTruncation(1, true, false, 1, 1);
      dataTruncation1.getIndex();
      int int0 = (-19);
      DataTruncation dataTruncation2 = new DataTruncation(443, false, true, 1, (-19), dataTruncation1);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      dataTruncation2.forEach(consumer0);
      dataTruncation2.getStackTrace();
      DataTruncation dataTruncation3 = new DataTruncation(3134, true, false, 558, 3134, dataTruncation1);
      dataTruncation1.addSuppressed(dataTruncation2);
      dataTruncation3.spliterator();
      dataTruncation2.addSuppressed(dataTruncation1);
      SQLDataException sQLDataException0 = new SQLDataException();
      dataTruncation1.addSuppressed(dataTruncation2);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      System.setCurrentTimeMillis(1);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.handleConnectionLoss(dataTruncation1);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      DataTruncation dataTruncation0 = new DataTruncation(1644, true, false, 1644, 27);
      DataTruncation dataTruncation1 = new DataTruncation((-875), true, false, 1, (-875));
      dataTruncation1.getIndex();
      DataTruncation dataTruncation2 = new DataTruncation(27, false, true, 1, (-875), dataTruncation1);
      dataTruncation1.printStackTrace();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      dataTruncation2.fillInStackTrace();
      dataTruncation2.forEach(consumer0);
      dataTruncation1.getTransferSize();
      DataTruncation dataTruncation3 = new DataTruncation((-875), false, true, 1644, 1);
      dataTruncation3.getDataSize();
      dataTruncation1.addSuppressed(dataTruncation2);
      dataTruncation1.spliterator();
      dataTruncation2.addSuppressed(dataTruncation3);
      SQLDataException sQLDataException0 = new SQLDataException();
      dataTruncation1.addSuppressed(sQLDataException0);
      DataTruncation dataTruncation4 = new DataTruncation((-875), true, false, (-875), 27);
      dataTruncation4.addSuppressed(dataTruncation0);
      dataTruncation4.getDataSize();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      System.setCurrentTimeMillis(1);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.handleConnectionLoss(dataTruncation1);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      System.setCurrentTimeMillis(1000L);
      ClientMsgReceiver clientMsgReceiver0 = null;
      try {
        clientMsgReceiver0 = new ClientMsgReceiver((Socket) null, (BomberClient) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("common.network.MsgReceiver", e);
      }
  }
}
