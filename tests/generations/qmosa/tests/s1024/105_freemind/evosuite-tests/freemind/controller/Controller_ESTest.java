/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 12:19:41 GMT 2019
 */

package freemind.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import freemind.controller.Controller;
import freemind.main.FreeMindMain;
import freemind.preferences.FreemindPropertyListener;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.HeadlessException;
import java.awt.event.MouseWheelEvent;
import javax.swing.DefaultBoundedRangeModel;
import javax.swing.JColorChooser;
import javax.swing.JInternalFrame;
import javax.swing.JSlider;
import javax.swing.JTable;
import javax.swing.plaf.metal.MetalSplitPaneUI;
import javax.swing.plaf.multi.MultiSliderUI;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.TableModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.InternationalFormatter;
import javax.swing.text.MaskFormatter;
import javax.swing.tree.DefaultTreeCellRenderer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import plugins.collaboration.socket.MindMapClient;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Controller_ESTest extends Controller_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame("S;;k)", false, false, false);
      int int0 = (-2660);
      int int1 = 8194;
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jInternalFrame0, 0, (-983L), 0, 0, 0, 8194, true, (-2660), 2052, 2052);
      Controller.DisposeOnClose controller_DisposeOnClose0 = new Controller.DisposeOnClose();
      mouseWheelEvent0.setSource("S;;k)");
      Controller.DisposeOnClose controller_DisposeOnClose1 = new Controller.DisposeOnClose();
      controller_DisposeOnClose1.componentMoved(mouseWheelEvent0);
      // Undeclared exception!
      try { 
        controller_DisposeOnClose1.componentHidden(mouseWheelEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller$DisposeOnClose", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTable jTable0 = new JTable((TableModel) null, defaultTableColumnModel0);
      defaultTableColumnModel0.getColumnIndexAtX(0);
      Controller.addPropertyChangeListener((FreemindPropertyListener) null);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        Controller.addPropertyChangeListenerAndPropagate((FreemindPropertyListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MaskFormatter maskFormatter0 = new MaskFormatter();
      Controller.getPropertyChangeListeners();
      MaskFormatter maskFormatter1 = new MaskFormatter();
      InternationalFormatter internationalFormatter0 = new InternationalFormatter();
      DefaultFormatterFactory defaultFormatterFactory0 = new DefaultFormatterFactory(maskFormatter1, maskFormatter0, maskFormatter0, maskFormatter0);
      MindMapClient mindMapClient0 = new MindMapClient();
      assertNull(mindMapClient0.getPassword());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FreeMindMain freeMindMain0 = null;
      Controller controller0 = null;
      try {
        controller0 = new Controller((FreeMindMain) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getTextNonSelectionColor();
      float[] floatArray0 = new float[9];
      floatArray0[1] = 1867.4993F;
      floatArray0[2] = 334.41525F;
      MetalSplitPaneUI metalSplitPaneUI0 = new MetalSplitPaneUI();
      metalSplitPaneUI0.getNonContinuousLayoutDivider();
      Color color0 = Color.BLUE;
      color0.getColorComponents(floatArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Color color1 = Color.pink;
      JColorChooser jColorChooser0 = Controller.getCommonJColorChooser();
      assertFalse(jColorChooser0.isFocusCycleRoot());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DefaultBoundedRangeModel defaultBoundedRangeModel0 = new DefaultBoundedRangeModel();
      JSlider jSlider0 = new JSlider(defaultBoundedRangeModel0);
      jSlider0.getSnapToTicks();
      MultiSliderUI multiSliderUI0 = new MultiSliderUI();
      multiSliderUI0.paint((Graphics) null, jSlider0);
      MultiSliderUI multiSliderUI1 = new MultiSliderUI();
      multiSliderUI1.getUIs();
      MultiSliderUI.createUI(jSlider0);
      MultiSliderUI multiSliderUI2 = new MultiSliderUI();
      jSlider0.setUI(multiSliderUI2);
      Color color0 = Color.darkGray;
      try { 
        Controller.showCommonJColorChooserDialog(jSlider0, "U{f!~", color0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }
}
