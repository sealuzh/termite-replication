/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 11:53:17 GMT 2019
 */

package net.kencochrane.a4j.file;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.FileInputStream;
import java.net.URI;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import net.kencochrane.a4j.file.FileUtil;
import net.kencochrane.a4j.util.LoadProperties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FileUtil_ESTest extends FileUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Random.setNextRandom(0);
      System.setCurrentTimeMillis(0);
      Random.setNextRandom(0);
      Integer integer0 = new Integer(0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate2.and(predicate0);
      predicate3.or(predicate1);
      Predicate<Object> predicate4 = Predicate.isEqual((Object) "a_");
      predicate2.and(predicate4);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Object object0 = new Object();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/A_KNH(EW%C FRGT<GDS?.XML");
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList1.removeAll(arrayList0);
      Object object1 = new Object();
      ArrayList<String> arrayList2 = new ArrayList<String>();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      ArrayList<String> arrayList3 = new ArrayList<String>();
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.getAccessories("KNH(ew%C Frgt<gDS?", arrayList1);
      Random.setNextRandom((-1));
      Random.setNextRandom((-1));
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.5916308425056016
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Random.setNextRandom(0);
      System.setCurrentTimeMillis(0);
      Random.setNextRandom(0);
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&AsinSearch=0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-~|+&type=0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-~|+&offerpage=0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-~|+&offer=0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-~|+&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "m");
      Random.setNextRandom(828);
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.fetchASINFile("0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-~|+", "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-~|+", "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-~|+", "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-~|+");
      Random.setNextRandom(0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("K'TU>K'TU>_0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ_-~|+_NULL_R|8*LJ-!JIIVVT(.XML");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "ts_");
      fileUtil0.cacheDir = "K'TU>";
      fileUtil0.getASINFile("K'TU>", (String) null, "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-~|+", "R|8*LJ-!jIivVT(");
      fileUtil0.fetchBlendedSearchFile("m", (String) null);
      FileInputStream fileInputStream0 = fileUtil0.fetchKeywordSearchFile("", "", (String) null, (String) null);
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.3838918920472834
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.downloadGenericSearchFile("", "", "=", "", "", "");
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&BrowseNodeSearch=^_&mode==&type=lite&page==&offer=new&f=xml");
      fileUtil0.cacheDir = "=";
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "=");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("==_^__=.XML");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-43);
      byteArray0[2] = (byte)60;
      byteArray0[3] = (byte)81;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)110;
      byteArray0[6] = (byte)63;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      MockURI.create("=");
      fileUtil0.getBrowseNodeFile("=", "^_", "=");
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      fileUtil0.getAccessories("ShoppingCart=clear&f=xml&dev-t=", arrayList0);
      System.setCurrentTimeMillis(11L);
      Random.setNextRandom((-2145329701));
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.46769983754709
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Random.setNextRandom(0);
      System.setCurrentTimeMillis(0);
      Random.setNextRandom(0);
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&AsinSearch=0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-~|+&type=0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-~|+&offerpage=0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-~|+&offer=0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-~|+&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "m");
      Random.setNextRandom(828);
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.fetchASINFile("0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-~|+", "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-~|+", "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-~|+", "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-~|+");
      Random.setNextRandom(0);
      fileUtil0.cacheDir = "K'TU>";
      fileUtil0.getASINFile("K'TU>", (String) null, "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-~|+", "R|8*LJ-!jIivVT(");
      fileUtil0.fetchBlendedSearchFile("m", (String) null);
      FileInputStream fileInputStream0 = fileUtil0.fetchKeywordSearchFile("", "", (String) null, (String) null);
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.677224577336219
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/NULL_NULL_NULL_NULL.XML");
      byte[] byteArray0 = new byte[23];
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "vALiI8:u");
      byteArray0[2] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[7] = (byte) (-119);
      byteArray0[8] = (byte) (-119);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "vALiI8:u");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, false, false);
      Random.setNextRandom((byte)0);
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.fetchBlendedSearchFile((String) null, (String) null);
      fileUtil0.getASINFile((String) null, (String) null, (String) null, (String) null);
      fileUtil0.downloadOneASINFile("@T/?", "@T/?", "@T/?", "vALiI8:u", (String) null);
      Random.setNextRandom((-2145321048));
      fileUtil0.downloadGenericSearchFile("@T/?", (String) null, "%~#FMnn+", "LFy.r!FL0", "@T/?", "@T/?");
      fileUtil0.downloadBlendedSearchFile("", "H");
      boolean boolean0 = fileUtil0.downloadBrowseNodeFile("dFSNdpO%8Bd<9~IIaB", (String) null, (String) null, "");
      MockFile mockFile0 = new MockFile("H", "");
      fileUtil0.downloadThirdPartySearchFile("w8fEh9/N(?", "vALiI8:u", (String) null, "3ggzX");
      boolean boolean1 = FileSystemHandling.appendStringToFile(evoSuiteFile0, (String) null);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.1032731737259827
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object object0 = new Object();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/A_KNH(EW%C FRGT<GDS?.XML");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      arrayList0.add((Object) null);
      Integer integer0 = new Integer(94);
      arrayList0.add((Object) integer0);
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      Object object1 = new Object();
      arrayList1.add((Object) "c;m-KCI");
      arrayList1.add(object1);
      arrayList1.add((Object) consumer0);
      Object object2 = new Object();
      arrayList0.add((Object) integer0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Object object3 = new Object();
      arrayList0.add(object2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Object object4 = new Object();
      ArrayList<Object> arrayList2 = new ArrayList<Object>();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      arrayList2.replaceAll(unaryOperator0);
      arrayList0.removeAll(arrayList2);
      Object object5 = new Object();
      ArrayList<String> arrayList3 = new ArrayList<String>();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      ArrayList<String> arrayList4 = new ArrayList<String>();
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.fetchAccessories("KNH(ew%C Frgt<gDS?", arrayList2);
      Random.setNextRandom(395);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.1032731737259827
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object object0 = new Object();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/__&HMAC=_&HMAC=.XML");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)81;
      byteArray0[1] = (byte)109;
      byteArray0[2] = (byte)100;
      byteArray0[3] = (byte)116;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)92;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      arrayList0.add((Object) null);
      Object object1 = new Object();
      Integer integer0 = new Integer(94);
      arrayList0.add((Object) integer0);
      Object object2 = new Object();
      arrayList0.add(object2);
      Object object3 = new Object();
      arrayList0.add(object3);
      Object object4 = new Object();
      arrayList0.add(object4);
      Object object5 = new Object();
      Object object6 = new Object();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList1.add(object4);
      Object object7 = new Object();
      arrayList1.add(object7);
      Object object8 = new Object();
      arrayList1.add((Object) arrayList0);
      Object object9 = new Object();
      arrayList0.add(object9);
      Object object10 = new Object();
      ArrayList<String> arrayList2 = new ArrayList<String>();
      Object object11 = new Object();
      Object object12 = new Object();
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.fetchASINFile("", "&Hmac=", "", "&Hmac=");
      Random.setNextRandom(1469);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.677224577336219
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/NULL_NULL_NULL_NULL.XML");
      byte[] byteArray0 = new byte[23];
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "vALiI8:u");
      byteArray0[2] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[7] = (byte) (-119);
      byteArray0[8] = (byte) (-119);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      boolean boolean0 = FileSystemHandling.setPermissions(evoSuiteFile0, true, false, true);
      Random.setNextRandom((byte)0);
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.fetchBlendedSearchFile((String) null, (String) null);
      fileUtil0.getASINFile((String) null, (String) null, (String) null, (String) null);
      fileUtil0.downloadOneASINFile("@T/?", "@T/?", "@T/?", "vALiI8:u", (String) null);
      Random.setNextRandom((-2145321048));
      fileUtil0.downloadGenericSearchFile("@T/?", (String) null, "%~#FMnn+", "LFy.r!FL0", "@T/?", "@T/?");
      fileUtil0.downloadBlendedSearchFile("", "");
      fileUtil0.downloadSimilaritesFile("", "GUElKsM1", "GUElKsM1");
      fileUtil0.downloadThirdPartySearchFile("LFy.r!FL0", "", (String) null, "");
      boolean boolean1 = FileSystemHandling.appendStringToFile(evoSuiteFile0, (String) null);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.317477358555153
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      MockFile mockFile0 = new MockFile("c%P#Z|SOQV", "c%P#Z|SOQV");
      mockFile0.toURL();
      mockFile0.mkdir();
      mockFile0.setLastModified(0L);
      mockFile0.deleteOnExit();
      fileUtil0.deleteFile("offerpage=");
      mockFile0.setExecutable(false);
      mockFile0.getCanonicalFile();
      MockFile mockFile1 = new MockFile(mockFile0, "Mr{<g\".lW");
      MockFile mockFile2 = new MockFile("ne.kencochrane.a4j.file.FileUtil");
      MockFile.createTempFile("ne.kencochrane.a4j.file.FileUtil", "|l[y9\"wo<jExEK_W\".,)");
      mockFile2.setExecutable(true, false);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/OFFERPAGE=_^__OFFERPAGE=.XML");
      FileSystemHandling.createFolder(evoSuiteFile0);
      mockFile2.getCanonicalFile();
      mockFile2.toPath();
      MockFile mockFile3 = new MockFile("offerpage=", "ne.kencochrane.a4j.file.FileUtil");
      URI uRI0 = MockURI.aHttpURI;
      mockFile2.setExecutable(true, true);
      LoadProperties.instance();
      fileUtil0.downloadThirdPartySearchFile("*WpSiml?Qd2~LgiF", "^_", "ne.kencochrane.a4j.file.FileUtil", "c%P#Z|SOQV");
      fileUtil0.getBrowseNodeFile("offerpage=", "^_", "offerpage=");
      fileUtil0.renameFile("^_", "Mr{<g\".lW");
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.7039917864324614
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object object0 = new Object();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(consumer0).toString();
      arrayList0.add((Object) null);
      Integer integer0 = new Integer(94);
      arrayList0.add((Object) integer0);
      Integer integer1 = new Integer((-2145336163));
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&AsinSearch=null&type=lite&offerpage=1&offer=all&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, ",");
      arrayList1.add((Object) consumer0);
      Object object1 = new Object();
      arrayList0.add((Object) integer1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Object object2 = new Object();
      arrayList0.add(object1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Object object3 = new Object();
      ArrayList<Object> arrayList2 = new ArrayList<Object>();
      arrayList0.removeAll(arrayList2);
      Object object4 = new Object();
      ArrayList<String> arrayList3 = new ArrayList<String>();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      ArrayList<String> arrayList4 = new ArrayList<String>();
      FileUtil fileUtil0 = new FileUtil();
      ArrayList<Object> arrayList5 = new ArrayList<Object>();
      fileUtil0.getAccessories("KNH(ew%C Frgt<gDS?", arrayList1);
      FileInputStream fileInputStream0 = fileUtil0.fetchAccessories(",", arrayList2);
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object object0 = new Object();
      arrayList0.add(object0);
      arrayList0.add((Object) null);
      Object object1 = new Object();
      Integer integer0 = new Integer(94);
      arrayList0.add((Object) integer0);
      Object object2 = new Object();
      arrayList0.add(object2);
      arrayList0.add(object2);
      Object object3 = new Object();
      arrayList0.add(object3);
      Object object4 = new Object();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList1.add(object0);
      arrayList1.add((Object) arrayList0);
      Object object5 = new Object();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&SimilaritySearch=V>_;SN[bQ&type=lite&offerpage=V>_;SN[bQ&offer=all&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "ktW=^b@4!");
      arrayList1.add(object0);
      arrayList1.add(object5);
      Object object6 = new Object();
      Object object7 = new Object();
      arrayList1.add(object7);
      arrayList1.removeAll(arrayList0);
      ArrayList<String> arrayList2 = new ArrayList<String>();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      FileUtil fileUtil0 = new FileUtil();
      File file0 = fileUtil0.getSimilarItems("V>_;SN[bQ", "V>_;SN[bQ");
      assertNull(file0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.1032731737259827
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object object0 = new Object();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.add((Object) null);
      Integer integer0 = new Integer(94);
      arrayList0.add((Object) integer0);
      Integer integer1 = new Integer((-2145336163));
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      Object object1 = new Object();
      arrayList1.add((Object) "c;m-KCI");
      arrayList1.add(object1);
      arrayList1.add((Object) consumer0);
      Object object2 = new Object();
      arrayList0.add((Object) integer1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Object object3 = new Object();
      arrayList0.add(object2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Object object4 = new Object();
      ArrayList<Object> arrayList2 = new ArrayList<Object>();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/A_KNH(EW%C FRGT<GDS?.XML");
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      arrayList2.replaceAll(unaryOperator0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      arrayList0.removeAll(arrayList2);
      Object object5 = new Object();
      ArrayList<String> arrayList3 = new ArrayList<String>();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      ArrayList<String> arrayList4 = new ArrayList<String>();
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.fetchAccessories("KNH(ew%C Frgt<gDS?", arrayList2);
      Random.setNextRandom(395);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.40439823421475
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object object0 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual(object0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate0.or(predicate2);
      Predicate<Object> predicate4 = predicate3.and(predicate2);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/__'.XML");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "ta_");
      Predicate<Object> predicate5 = predicate0.negate();
      Predicate<Object> predicate6 = predicate2.and(predicate5);
      Predicate<Object> predicate7 = predicate4.or(predicate0);
      Predicate<Object> predicate8 = predicate7.and(predicate5);
      predicate8.and(predicate1);
      Predicate<Object> predicate9 = predicate3.or(predicate6);
      predicate6.and(predicate9);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/__'.XML");
      FileSystemHandling.createFolder(evoSuiteFile1);
      predicate6.negate();
      Predicate<Object> predicate10 = predicate8.or(predicate9);
      Predicate<Object> predicate11 = predicate0.and(predicate4);
      Predicate<Object> predicate12 = predicate1.and(predicate10);
      Integer integer0 = new Integer((-1));
      Predicate<Object> predicate13 = Predicate.isEqual((Object) integer0);
      predicate3.and(predicate13);
      predicate0.or(predicate2);
      predicate5.negate();
      predicate0.and(predicate11);
      predicate12.negate();
      Predicate<Object> predicate14 = predicate6.or(predicate11);
      predicate14.test(predicate13);
      predicate3.and(predicate14);
      predicate13.negate();
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.fetchBNFile("", "", "'");
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      File file0 = fileUtil0.getAccessories("", arrayList0);
      assertNull(file0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.948720592834763
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&=FF%2BnDS%5D%2C5%7B%27&mode=null&type=XC%6^ZD}&page=Vv\"T,eKCoNoM&i)(*&offer=Vu\"->]\\N{fE1Ra}D&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "XC%6^ZD}");
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.fetchBlendedSearchFile("FF+nDS],5{'", (String) null);
      FileInputStream fileInputStream0 = fileUtil0.fetchGenericSearchFile("", "FF+nDS],5{'", (String) null, "XC%6^ZD}", "Vv\"T,eKCoNoM&i)(*", "Vu\"->]N{fE1Ra}D");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      System.setCurrentTimeMillis((-1160L));
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object object0 = new Object();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/S_V>_;SN[BQ.XML");
      FileSystemHandling.createFolder(evoSuiteFile0);
      arrayList0.add((Object) null);
      Object object1 = new Object();
      Integer integer0 = new Integer(94);
      arrayList0.add((Object) integer0);
      Object object2 = new Object();
      arrayList0.add(object2);
      arrayList0.add(object2);
      Object object3 = new Object();
      arrayList0.add(object3);
      Object object4 = new Object();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList1.add(object0);
      Object object5 = new Object();
      arrayList0.add(object5);
      Object object6 = new Object();
      Object object7 = new Object();
      arrayList1.add(object7);
      arrayList1.add((Object) null);
      arrayList0.removeAll(arrayList1);
      Object object8 = new Object();
      Object object9 = new Object();
      arrayList0.add((Object) integer0);
      ArrayList<String> arrayList2 = new ArrayList<String>();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      FileUtil fileUtil0 = new FileUtil();
      File file0 = fileUtil0.getSimilarItems("V>_;SN[bQ", "&Hmac=");
      assertNotNull(file0);
      assertEquals((-1160L), file0.lastModified());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      System.setCurrentTimeMillis((-1160L));
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object object0 = new Object();
      arrayList0.add((Object) null);
      Object object1 = new Object();
      Integer integer0 = new Integer(94);
      arrayList0.add((Object) integer0);
      Object object2 = new Object();
      arrayList0.add(object2);
      arrayList0.add(object2);
      Object object3 = new Object();
      arrayList0.add(object3);
      Object object4 = new Object();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList1.add(object0);
      arrayList1.add((Object) arrayList0);
      Object object5 = new Object();
      arrayList1.add(object0);
      arrayList1.add(object5);
      arrayList1.removeAll(arrayList0);
      Object object6 = new Object();
      Object object7 = new Object();
      arrayList1.add(object7);
      arrayList1.removeAll(arrayList0);
      ArrayList<String> arrayList2 = new ArrayList<String>();
      Object object8 = new Object();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/S_.XML");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "AsinSearch");
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.getSimilarItems("", "");
      System.setCurrentTimeMillis(8L);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      MockFile mockFile0 = new MockFile("c%P#Z|SOQV", "c%P#Z|SOQV");
      mockFile0.toURL();
      mockFile0.deleteOnExit();
      mockFile0.setLastModified(1947L);
      MockFile mockFile1 = new MockFile(mockFile0, "Mr{<g\".W");
      MockFile mockFile2 = new MockFile("net.kencochrane.a4j.file.FileUtil");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/OFFERPAGE=_^__OFFERPAGE=.XML");
      FileSystemHandling.createFolder(evoSuiteFile0);
      File file0 = mockFile2.getCanonicalFile();
      mockFile2.deleteOnExit();
      file0.getCanonicalFile();
      mockFile2.toPath();
      MockFile mockFile3 = new MockFile("c%P#Z|SOQV", "net.kencochrane.a4j.file.FileUtil");
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&SellerSearch=*WpSiml?Qd2~LgiF&type=^_&page=net.kencochrane.a4j.file.FileUtil&offerstatus=c%P#Z|SOQV&f=xml");
      MockFile mockFile4 = new MockFile("net.kencochrane.a4j.file.FileUtil");
      mockFile2.setExecutable(false);
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "net.kencochrane.a4j.file.FileUtil");
      URI uRI0 = MockURI.aHttpURI;
      fileUtil0.downloadThirdPartySearchFile("*WpSiml?Qd2~LgiF", "^_", "net.kencochrane.a4j.file.FileUtil", "c%P#Z|SOQV");
      fileUtil0.downloadBlendedSearchFile("mXN>J", "*WpSiml?Qd2~LgiF");
      // Undeclared exception!
      try { 
        fileUtil0.renameFile("^_", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.812523309532779
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Random.setNextRandom(0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/NULL_NULL_NULL_NULL.XML");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)74;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)58;
      byteArray0[4] = (byte) (-111);
      byteArray0[5] = (byte)4;
      byteArray0[6] = (byte) (-77);
      byteArray0[7] = (byte)1;
      byteArray0[8] = (byte) (-64);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      Integer integer0 = new Integer(0);
      arrayList0.add((Object) integer0);
      Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator1);
      Random.setNextRandom((-2145338308));
      FileUtil fileUtil0 = new FileUtil();
      File file0 = fileUtil0.getASINFile((String) null, (String) null, (String) null, (String) null);
      assertNotNull(file0);
      assertTrue(file0.isFile());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.925353930867566
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      System.setCurrentTimeMillis((-1160L));
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object object0 = new Object();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.add((Object) null);
      Object object1 = new Object();
      Integer integer0 = new Integer(94);
      arrayList0.add((Object) integer0);
      Object object2 = new Object();
      arrayList0.add(object2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Object object3 = new Object();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/_KG]~<0__YR'CEJDJOOZ.XML");
      FileSystemHandling.createFolder(evoSuiteFile0);
      arrayList0.add(object3);
      Object object4 = new Object();
      arrayList0.add(object4);
      Object object5 = new Object();
      Object object6 = new Object();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList1.add(object4);
      Object object7 = new Object();
      arrayList1.add((Object) arrayList0);
      Object object8 = new Object();
      arrayList0.add(object8);
      Object object9 = new Object();
      ArrayList<String> arrayList2 = new ArrayList<String>();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Predicate.isEqual(object13);
      FileUtil fileUtil0 = new FileUtil();
      File file0 = fileUtil0.getASINFile("", "", "kG]~<0", "yR'ceJdJoOz");
      assertEquals((-1160L), file0.lastModified());
      assertNotNull(file0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.7546835553710354
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Random.setNextRandom(0);
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      Object object0 = new Object();
      arrayList0.add(object0);
      Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator1);
      Random.setNextRandom((-2145338308));
      FileUtil fileUtil0 = new FileUtil();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/S_;.XML");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      fileUtil0.fetchSimilarItems(";", ";");
      Random.setNextRandom(0);
      fileUtil0.downloadBlendedSearchFile("", "");
      fileUtil0.getASINFile("", "", "6.JSg('m;|", "w`+mrie~#R3;wMdcor");
      System.setCurrentTimeMillis(2088L);
      FileInputStream fileInputStream0 = fileUtil0.fetchThirdPartySearchFile("s_", "10_mC)XHrW", "cacheLife", (String) null);
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.9593337382266454
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&BrowseNodeSearch=^_&mode==&type=lite&page==&offer=new&f=xml");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("net.kencochrane.a4j.file.FileUtil");
      fileUtil0.cacheDir = "M{2ys>A\"W";
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-30);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "=");
      MockURI.create("=");
      fileUtil0.getBrowseNodeFile("=", "^_", "=");
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      fileUtil0.getAccessories("ShoppingCart=clear&f=xml&dev-t=", arrayList0);
      System.setCurrentTimeMillis(11L);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&BlendedSearch=FF%2BnDS%5D%2C5%7B%27&type=null&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "XC%6^ZD}");
      FileUtil fileUtil0 = new FileUtil();
      FileInputStream fileInputStream0 = fileUtil0.fetchBlendedSearchFile("FF+nDS],5{'", (String) null);
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.1032731737259827
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Object object0 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual(object0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate0.or(predicate2);
      Predicate<Object> predicate4 = predicate3.and(predicate2);
      Predicate<Object> predicate5 = predicate0.negate();
      Predicate<Object> predicate6 = predicate2.and(predicate5);
      Predicate<Object> predicate7 = predicate4.or(predicate0);
      Predicate<Object> predicate8 = predicate7.and(predicate5);
      predicate8.and(predicate1);
      Predicate<Object> predicate9 = predicate3.or(predicate6);
      predicate6.and(predicate9);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/__'.XML");
      FileSystemHandling.createFolder(evoSuiteFile0);
      predicate6.negate();
      Predicate<Object> predicate10 = predicate8.or(predicate9);
      Predicate<Object> predicate11 = predicate0.and(predicate4);
      Predicate<Object> predicate12 = predicate1.and(predicate10);
      Integer integer0 = new Integer((-1));
      Predicate<Object> predicate13 = Predicate.isEqual((Object) integer0);
      predicate3.and(predicate13);
      predicate9.negate();
      predicate5.negate();
      predicate0.and(predicate11);
      Predicate<Object> predicate14 = predicate12.negate();
      Predicate<Object> predicate15 = predicate14.or(predicate11);
      predicate3.and(predicate15);
      predicate13.negate();
      FileUtil fileUtil0 = new FileUtil();
      FileInputStream fileInputStream0 = fileUtil0.fetchBNFile("", "", "'");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.8125233095327788
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      System.setCurrentTimeMillis((-1160L));
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object object0 = new Object();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      arrayList0.add((Object) null);
      Object object1 = new Object();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Object object2 = new Object();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/A_KNH(EW%C FRGT<GDS?.XML");
      FileSystemHandling.createFolder(evoSuiteFile0);
      arrayList1.removeAll(arrayList0);
      Object object3 = new Object();
      ArrayList<String> arrayList2 = new ArrayList<String>();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Predicate.isEqual(object6);
      ArrayList<String> arrayList3 = new ArrayList<String>();
      FileUtil fileUtil0 = new FileUtil();
      ArrayList<Object> arrayList4 = new ArrayList<Object>();
      File file0 = fileUtil0.getAccessories("KNH(ew%C Frgt<gDS?", arrayList4);
      assertNotNull(file0);
      assertEquals((-1160L), file0.lastModified());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object object0 = new Object();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(consumer0).toString();
      arrayList0.add((Object) null);
      Integer integer0 = new Integer(94);
      arrayList0.add((Object) integer0);
      Integer integer1 = new Integer((-2145336163));
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList1.add((Object) consumer0);
      Object object1 = new Object();
      arrayList0.add((Object) integer1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Object object2 = new Object();
      arrayList0.add(object1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Object object3 = new Object();
      ArrayList<Object> arrayList2 = new ArrayList<Object>();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/A_KNH(EW%C FRGT<GDS?.XML");
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList2.forEach(consumer1);
      FileSystemHandling.createFolder(evoSuiteFile0);
      arrayList0.removeAll(arrayList2);
      Object object4 = new Object();
      ArrayList<String> arrayList3 = new ArrayList<String>();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      ArrayList<String> arrayList4 = new ArrayList<String>();
      FileUtil fileUtil0 = new FileUtil();
      ArrayList<Object> arrayList5 = new ArrayList<Object>();
      fileUtil0.getAccessories("KNH(ew%C Frgt<gDS?", arrayList1);
      Random.setNextRandom((-2145336163));
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      System.setCurrentTimeMillis((-1160L));
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object object0 = new Object();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      arrayList0.add((Object) null);
      Object object1 = new Object();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Object object2 = new Object();
      arrayList0.add(object2);
      Object object3 = new Object();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList1.add(object3);
      arrayList0.removeAll(arrayList1);
      Object object4 = new Object();
      ArrayList<String> arrayList2 = new ArrayList<String>();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Predicate<String> predicate0 = Predicate.isEqual((Object) null);
      ArrayList<String> arrayList3 = new ArrayList<String>();
      arrayList3.removeIf(predicate0);
      String string0 = "cacheDir";
      FileUtil fileUtil0 = new FileUtil();
      // Undeclared exception!
      try { 
        fileUtil0.deleteFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.0477815473752887
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Random.setNextRandom(0);
      System.setCurrentTimeMillis(0);
      Random.setNextRandom(0);
      Random.setNextRandom(828);
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.fetchSimilarItems("0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-~|+", "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-~|+");
      Random.setNextRandom(1658);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/S_Y+M!C1EV$^.XML");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte) (-91);
      byteArray0[2] = (byte)52;
      byteArray0[3] = (byte) (-68);
      byteArray0[4] = (byte) (-107);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      fileUtil0.fetchSimilarItems("y+M!c1EV$^", "P11,iE");
      Random.setNextRandom(0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Object object0 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual(object0);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate1.negate();
      Predicate<Object> predicate4 = predicate2.negate();
      Predicate<Object> predicate5 = predicate0.and(predicate4);
      predicate1.test(predicate0);
      Predicate<Object> predicate6 = predicate5.negate();
      Predicate<Object> predicate7 = predicate6.and(predicate0);
      predicate2.and(predicate4);
      predicate2.negate();
      Predicate<Object> predicate8 = predicate3.or(predicate2);
      Predicate<Object> predicate9 = Predicate.isEqual((Object) predicate1);
      predicate9.and(predicate0);
      Predicate<Object> predicate10 = predicate7.negate();
      predicate3.and(predicate10);
      predicate0.and(predicate10);
      predicate4.or(predicate5);
      predicate10.negate();
      Predicate<Object> predicate11 = predicate8.or(predicate6);
      Predicate<Object> predicate12 = predicate8.negate();
      predicate2.or(predicate12);
      predicate0.negate();
      Integer integer0 = new Integer((-2145321024));
      predicate10.test(integer0);
      predicate10.or(predicate8);
      predicate11.negate();
      predicate10.and(predicate6);
      predicate5.or(predicate11);
      predicate1.negate();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.removeIf(predicate1);
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.renameFile("", "");
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Object object0 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual(object0);
      Predicate<Object> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      Predicate<Object> predicate3 = predicate0.or(predicate0);
      Predicate<Object> predicate4 = predicate0.or(predicate1);
      predicate2.or(predicate4);
      Predicate<Object> predicate5 = predicate1.negate();
      Predicate<Object> predicate6 = predicate1.and(predicate3);
      Predicate<Object> predicate7 = predicate0.negate();
      Predicate<Object> predicate8 = predicate0.or(predicate6);
      Predicate<Object> predicate9 = predicate7.negate();
      predicate3.and(predicate0);
      Predicate<Object> predicate10 = predicate8.and(predicate5);
      Predicate<Object> predicate11 = predicate5.negate();
      predicate1.or(predicate4);
      predicate0.and(predicate7);
      predicate8.and(predicate11);
      predicate11.and(predicate1);
      predicate9.negate();
      predicate1.and(predicate2);
      predicate1.and(predicate6);
      Predicate<Object> predicate12 = predicate1.or(predicate2);
      predicate2.negate();
      predicate5.negate();
      predicate5.negate();
      predicate12.and(predicate1);
      predicate4.negate();
      predicate4.or(predicate3);
      predicate6.and(predicate0);
      predicate10.negate();
      FileUtil fileUtil0 = new FileUtil();
      File file0 = fileUtil0.getSimilarItems("V#oHy$Uu-38&X,[", "s_");
      assertNull(file0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.deleteFile("ts_");
      fileUtil0.deleteFile("");
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      LoadProperties.instance();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator1);
      Random.setNextRandom((-2145338308));
      File file0 = fileUtil0.downloadCart("&");
      assertNull(file0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&BlendedSearch=FF%2BnDS%5D%2C5%7B%27&type=null&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "XC%6^ZD}");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "");
      FileUtil fileUtil0 = new FileUtil();
      FileInputStream fileInputStream0 = fileUtil0.fetchBlendedSearchFile("FF+nDS],5{'", (String) null);
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.9702534066311677
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      System.setCurrentTimeMillis((-1160L));
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object object0 = new Object();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/S_V>_;SN[BQ.XML");
      FileSystemHandling.createFolder(evoSuiteFile0);
      arrayList0.add((Object) null);
      Object object1 = new Object();
      Integer integer0 = new Integer(94);
      arrayList0.add((Object) integer0);
      Object object2 = new Object();
      arrayList0.add(object2);
      arrayList0.add(object2);
      Object object3 = new Object();
      arrayList0.add(object3);
      Object object4 = new Object();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList1.add(object0);
      arrayList1.add((Object) arrayList0);
      Object object5 = new Object();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&SimilaritySearch=V>_;SN[bQ&type=lite&offerpage=V>_;SN[bQ&offer=all&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "YD}$");
      arrayList1.add(object0);
      arrayList1.add(object5);
      arrayList1.removeAll(arrayList0);
      Object object6 = new Object();
      Object object7 = new Object();
      arrayList1.add(object7);
      arrayList1.removeAll(arrayList0);
      ArrayList<String> arrayList2 = new ArrayList<String>();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      FileUtil fileUtil0 = new FileUtil();
      File file0 = fileUtil0.getSimilarItems("V>_;SN[bQ", "V>_;SN[bQ");
      assertNotNull(file0);
      assertFalse(file0.isFile());
      assertEquals("S_V>_;SN[BQ.XML", file0.getName());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.6868977693384446
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Object object0 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual(object0);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate0.or(predicate2);
      Predicate<Object> predicate4 = predicate3.and(predicate2);
      Predicate<Object> predicate5 = predicate4.or(predicate3);
      Predicate<Object> predicate6 = predicate5.negate();
      Predicate<Object> predicate7 = predicate1.and(predicate6);
      Predicate<Object> predicate8 = predicate7.negate();
      Predicate<Object> predicate9 = predicate6.negate();
      Predicate<Object> predicate10 = predicate5.negate();
      Integer integer0 = new Integer((-2239));
      Predicate.isEqual((Object) predicate8);
      Predicate<Object> predicate11 = predicate9.and(predicate3);
      Predicate<Object> predicate12 = predicate2.or(predicate8);
      predicate8.negate();
      Predicate<Object> predicate13 = predicate11.and(predicate0);
      predicate10.negate();
      Predicate<Object> predicate14 = predicate0.or(predicate13);
      Predicate<Object> predicate15 = predicate12.or(predicate14);
      predicate4.and(predicate15);
      predicate10.negate();
      FileUtil fileUtil0 = new FileUtil();
      FileInputStream fileInputStream0 = fileUtil0.fetchBNFile("", "w'E3\"wE`9%", "w'E3\"wE`9%");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object object0 = new Object();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.add((Object) null);
      Object object1 = new Object();
      Integer integer0 = new Integer(94);
      arrayList0.add((Object) integer0);
      Object object2 = new Object();
      arrayList0.add(object2);
      arrayList0.parallelStream();
      arrayList0.add(object0);
      Object object3 = new Object();
      arrayList0.add(object3);
      Object object4 = new Object();
      Object object5 = new Object();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList1.add(object3);
      Object object6 = new Object();
      arrayList1.add((Object) null);
      arrayList1.add(object6);
      arrayList0.add((Object) arrayList1);
      Object object7 = new Object();
      arrayList1.add((Object) arrayList0);
      Object object8 = new Object();
      arrayList0.add(object8);
      Object object9 = new Object();
      ArrayList<String> arrayList2 = new ArrayList<String>();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      FileUtil fileUtil0 = new FileUtil();
      Random.setNextRandom(1469);
      File file0 = fileUtil0.getBrowseNodeFile(" boTX", "", "WC9x03}?hlw Sw");
      assertNull(file0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Random.setNextRandom(0);
      Random.setNextRandom(0);
      Random.setNextRandom(0);
      FileUtil fileUtil0 = new FileUtil();
      File file0 = fileUtil0.downloadKeywordSearchFile("1", (String) null, (String) null, (String) null);
      assertNull(file0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Object object0 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual(object0);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate2.and(predicate1);
      Predicate<Object> predicate4 = predicate3.or(predicate2);
      Predicate<Object> predicate5 = predicate2.negate();
      Predicate<Object> predicate6 = predicate0.and(predicate5);
      predicate3.test(predicate0);
      Predicate<Object> predicate7 = predicate6.negate();
      Predicate<Object> predicate8 = predicate7.and(predicate0);
      Predicate<Object> predicate9 = predicate4.or(predicate3);
      predicate9.or(predicate8);
      Predicate<Object> predicate10 = Predicate.isEqual((Object) predicate3);
      predicate10.and(predicate0);
      Object object1 = new Object();
      predicate4.and(predicate3);
      predicate0.and(predicate4);
      predicate5.or(predicate6);
      predicate4.negate();
      predicate2.negate();
      predicate9.or(predicate7);
      predicate0.negate();
      Integer integer0 = new Integer((-2145321024));
      predicate3.test(integer0);
      predicate10.or(predicate9);
      Random.setNextRandom((-2145321024));
      FileUtil fileUtil0 = new FileUtil();
      MockFile mockFile0 = new MockFile("CV}E<qX", "di!");
      boolean boolean0 = fileUtil0.isAgeGood(mockFile0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      System.setCurrentTimeMillis((-1160L));
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object object0 = new Object();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      arrayList0.add((Object) null);
      Object object1 = new Object();
      Object object2 = new Object();
      arrayList0.add((Object) null);
      Object object3 = new Object();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList0.add(object2);
      Object object4 = new Object();
      arrayList0.add((Object) null);
      Object object5 = new Object();
      Object object6 = new Object();
      arrayList0.add(object6);
      arrayList0.add(object6);
      ArrayList<Object> arrayList2 = new ArrayList<Object>();
      arrayList0.removeAll(arrayList1);
      Object object7 = new Object();
      ArrayList<String> arrayList3 = new ArrayList<String>();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      FileUtil fileUtil0 = new FileUtil();
      File file0 = fileUtil0.downloadGenericSearchFile("cacheLife", "new", "$XC)VKH4!+{", "", "", "");
      assertNull(file0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Object object0 = new Object();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      arrayList0.add((Object) "Ps QFhPB |N");
      Object object1 = new Object();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList0.add((Object) "Ps QFhPB |N");
      Object object2 = new Object();
      arrayList1.add(object1);
      arrayList1.removeAll(arrayList0);
      Object object3 = new Object();
      ArrayList<String> arrayList2 = new ArrayList<String>();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      ArrayList<String> arrayList3 = new ArrayList<String>();
      FileUtil fileUtil0 = new FileUtil();
      boolean boolean0 = fileUtil0.isAgeGood((File) null);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      FileInputStream fileInputStream0 = fileUtil0.fetchGenericSearchFile("", "FF+nDS],5{'", (String) null, "SellerSearch=", (String) null, "Vu\"->]N{fE1Ra}D");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Object object0 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual(object0);
      Predicate<Object> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      Predicate<Object> predicate3 = predicate0.or(predicate0);
      Predicate<Object> predicate4 = predicate0.or(predicate1);
      predicate2.or(predicate4);
      Predicate<Object> predicate5 = predicate1.negate();
      Predicate<Object> predicate6 = predicate1.and(predicate3);
      Predicate<Object> predicate7 = predicate0.negate();
      Predicate<Object> predicate8 = predicate0.or(predicate6);
      Predicate<Object> predicate9 = predicate7.negate();
      predicate3.and(predicate0);
      predicate8.and(predicate5);
      Predicate<Object> predicate10 = predicate5.negate();
      predicate1.or(predicate4);
      predicate0.and(predicate7);
      predicate8.and(predicate10);
      predicate10.and(predicate1);
      predicate9.negate();
      predicate1.and(predicate2);
      predicate1.and(predicate6);
      predicate1.or(predicate2);
      FileUtil fileUtil0 = new FileUtil();
      FileInputStream fileInputStream0 = fileUtil0.fetchKeywordSearchFile("", "", "Vv\"T,eKCoNoM&i)(*", "");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object object0 = new Object();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/S_V>_;SN[BQ.XML");
      Object object1 = new Object();
      arrayList0.add(object1);
      FileSystemHandling.createFolder(evoSuiteFile0);
      arrayList0.add((Object) null);
      Object object2 = new Object();
      Integer integer0 = new Integer(94);
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      arrayList0.add((Object) integer0);
      Object object3 = new Object();
      arrayList0.add(object3);
      arrayList0.add(object3);
      Object object4 = new Object();
      arrayList0.add(object4);
      Object object5 = new Object();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList1.add(object0);
      Object object6 = new Object();
      arrayList0.add(object6);
      Object object7 = new Object();
      arrayList1.add(object7);
      arrayList1.add((Object) null);
      arrayList0.removeAll(arrayList1);
      Object object8 = new Object();
      Object object9 = new Object();
      arrayList0.add((Object) integer0);
      arrayList0.removeAll(arrayList1);
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      FileUtil fileUtil0 = new FileUtil();
      File file0 = fileUtil0.getSimilarItems("V>_;SN[bQ", "&Hmac=");
      assertNotNull(file0);
      assertTrue(file0.canWrite());
      assertEquals("/S_V>_;SN[BQ.XML", file0.toString());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      FileInputStream fileInputStream0 = fileUtil0.fetchGenericSearchFile("X ", "X ", "X ", "", "g*([", "X ");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Object object0 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual(object0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate0.and(predicate1);
      Predicate<Object> predicate4 = predicate0.or(predicate3);
      Predicate<Object> predicate5 = predicate4.and(predicate2);
      Predicate<Object> predicate6 = predicate1.negate();
      Predicate<Object> predicate7 = predicate4.negate();
      Predicate<Object> predicate8 = predicate1.and(predicate7);
      predicate8.negate();
      Predicate<Object> predicate9 = predicate6.or(predicate5);
      Predicate<Object> predicate10 = predicate9.negate();
      Predicate<Object> predicate11 = predicate10.and(predicate0);
      Predicate<Object> predicate12 = predicate8.negate();
      Predicate<Object> predicate13 = predicate5.and(predicate12);
      predicate0.negate();
      predicate6.and(predicate12);
      Predicate<Object> predicate14 = predicate0.and(predicate13);
      Predicate<Object> predicate15 = predicate11.negate();
      Predicate<Object> predicate16 = predicate7.or(predicate8);
      Predicate<Object> predicate17 = predicate13.negate();
      predicate17.test(predicate14);
      predicate7.or(predicate9);
      predicate13.and(predicate15);
      predicate17.negate();
      predicate7.and(predicate14);
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&=FF%2BnDS%5D%2C5%7B%27&mode=null&type=XC%6^ZD}&page=Vv\"T,eKCoNoM&i)(*&offer=Vu\"->]\\N{fE1Ra}D&f=xml");
      predicate4.or(predicate16);
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "XC%6^ZD}");
      FileUtil fileUtil0 = new FileUtil();
      FileInputStream fileInputStream0 = fileUtil0.fetchKeywordSearchFile("{[~A}gOG-*]9", "S4BW", "{[~A}gOG-*]9", "Gg");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object object0 = new Object();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/S_V>_;SN[BQ.XML");
      Object object1 = new Object();
      arrayList0.add(object1);
      FileSystemHandling.createFolder(evoSuiteFile0);
      arrayList0.add((Object) null);
      Object object2 = new Object();
      Integer integer0 = new Integer(94);
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      arrayList0.add((Object) integer0);
      Object object3 = new Object();
      arrayList0.add(object3);
      arrayList0.add(object3);
      Object object4 = new Object();
      arrayList0.add(object4);
      Object object5 = new Object();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList1.add(object0);
      Object object6 = new Object();
      arrayList0.add(object6);
      Object object7 = new Object();
      Object object8 = new Object();
      arrayList1.add(object8);
      arrayList1.add((Object) null);
      arrayList0.removeAll(arrayList1);
      Object object9 = new Object();
      Object object10 = new Object();
      arrayList0.add((Object) integer0);
      arrayList0.removeAll(arrayList1);
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      FileUtil fileUtil0 = new FileUtil();
      File file0 = fileUtil0.getSimilarItems("V>_;SN[bQ", "&Hmac=");
      assertNotNull(file0);
      assertTrue(file0.canExecute());
      assertEquals("S_V>_;SN[BQ.XML", file0.getName());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object object0 = new Object();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.add((Object) null);
      Object object1 = new Object();
      Integer integer0 = new Integer(94);
      arrayList0.add((Object) integer0);
      Object object2 = new Object();
      arrayList0.add(object2);
      Object object3 = new Object();
      arrayList0.add(object3);
      Object object4 = new Object();
      arrayList0.add(object4);
      Object object5 = new Object();
      Object object6 = new Object();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList1.add(object4);
      arrayList1.add(object6);
      Object object7 = new Object();
      arrayList1.add((Object) arrayList0);
      Object object8 = new Object();
      arrayList0.add(object8);
      Object object9 = new Object();
      ArrayList<String> arrayList2 = new ArrayList<String>();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.fetchASINFile("", "&Hmac=", "", "&Hmac=");
      Random.setNextRandom(1469);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Object object0 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual(object0);
      Predicate<Object> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      Predicate<Object> predicate3 = predicate0.or(predicate0);
      Predicate<Object> predicate4 = predicate0.or(predicate1);
      predicate2.or(predicate4);
      Predicate<Object> predicate5 = predicate1.negate();
      Predicate<Object> predicate6 = predicate1.and(predicate3);
      Predicate<Object> predicate7 = predicate0.negate();
      Predicate<Object> predicate8 = predicate0.or(predicate6);
      Predicate<Object> predicate9 = predicate7.negate();
      predicate3.and(predicate0);
      predicate8.and(predicate5);
      Predicate<Object> predicate10 = predicate5.negate();
      predicate1.or(predicate4);
      predicate0.and(predicate7);
      predicate8.and(predicate10);
      predicate10.and(predicate1);
      predicate9.negate();
      predicate1.and(predicate2);
      predicate1.and(predicate6);
      predicate1.or(predicate2);
      predicate2.negate();
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.fetchASINFile("RC~!`^49erBi", "RC~!`^49erBi", "ta_", "k_");
      Random.setNextRandom(2);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      fileUtil0.downloadOneASINFile("}?^^75{G>)", "97YTt.!GgrRH", "", "}?^^75{G>)", "");
      Integer integer0 = new Integer((-2946));
      arrayList0.add(integer0);
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>(arrayList0);
      boolean boolean0 = fileUtil0.downloadAccessoriesFile("97YTt.!GgrRH", arrayList1, "97YTt.!GgrRH");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.1032731737259827
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Object object0 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual(object0);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate0.or(predicate2);
      Predicate<Object> predicate4 = predicate3.and(predicate2);
      Predicate<Object> predicate5 = predicate0.negate();
      Predicate<Object> predicate6 = predicate2.and(predicate5);
      Predicate<Object> predicate7 = predicate4.or(predicate0);
      Predicate<Object> predicate8 = predicate7.and(predicate5);
      predicate8.and(predicate1);
      Predicate<Object> predicate9 = predicate3.or(predicate6);
      predicate6.and(predicate9);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/__'.XML");
      FileSystemHandling.createFolder(evoSuiteFile0);
      Predicate<Object> predicate10 = predicate8.or(predicate9);
      Predicate<Object> predicate11 = predicate0.and(predicate4);
      Predicate<Object> predicate12 = predicate1.and(predicate10);
      Integer integer0 = new Integer((-1));
      Predicate<Object> predicate13 = Predicate.isEqual((Object) integer0);
      predicate3.and(predicate13);
      predicate0.or(predicate2);
      predicate5.negate();
      predicate0.and(predicate11);
      predicate12.negate();
      Predicate<Object> predicate14 = predicate6.or(predicate11);
      predicate3.and(predicate14);
      predicate13.negate();
      FileUtil fileUtil0 = new FileUtil();
      FileInputStream fileInputStream0 = fileUtil0.fetchBNFile("", "", "'");
      assertNull(fileInputStream0);
  }
}
