/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 11:18:16 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.net.URLStreamHandler;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Class<Camera> class0 = Camera.class;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      resourceURLContent0.getJAREntryURL();
      URL uRL0 = resourceURLContent0.getJAREntryURL();
      resourceURLContent0.getJAREntryURL();
      resourceURLContent0.getJAREntryName();
      resourceURLContent0.getJAREntryName();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Random.setNextRandom(9);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      MockURL.getFtpExample();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("9<X~5W5gO+cEq5e26$", "com/eteks/sweethome3d/model/", resourceURLContent0, (-645), 0.0F, "com/eteks/sweethome3d/model/", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(9, homeTexture0, 6, homeTexture0, 9, 0.0F);
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals(0, int0);
      
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getSkyTexture();
      int int1 = homeEnvironment0.getVideoFrameRate();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertEquals(6, homeEnvironment0.getSkyColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(9, homeEnvironment0.getLightColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(9, homeEnvironment0.getGroundColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(25, int1);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, temporaryURLContent0, 0L, 0L);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1997), homeTexture0, 300, homeTexture0, (-5609), 300);
      homeEnvironment0.getSkyTexture();
      Random.setNextRandom(16);
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, int0);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-1997), homeEnvironment0.getGroundColor());
      assertEquals(300.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-5609), homeEnvironment0.getLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("+", (Content) null, 1.3333334F, 1.3333334F, true);
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      TexturesCategory texturesCategory1 = new TexturesCategory("+");
      catalogTexture0.setCategory(texturesCategory0);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(400, homeTexture0, 1969, homeTexture0, (-2142336846), 400);
      homeEnvironment0.getGroundTexture();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-2142336846), homeTexture0, (-2142336846), homeTexture0, 400, 400);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      homeEnvironment1.setSubpartSizeUnderLight((-2142336846));
      // Undeclared exception!
      try { 
        homeEnvironment1.setSkyTexture(homeTexture1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      CatalogTexture catalogTexture0 = new CatalogTexture("com.eteks.sweethome3d.tools.ResourceURLContent", (Content) null, (-3480.533F), 1.0F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 1, homeTexture0, 0, 1.3333334F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getLightColor();
      assertEquals(0, int0);
      assertEquals(1, homeEnvironment1.getSkyColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(1.3333334F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0, homeEnvironment1.getGroundColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.0272157910004682
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 1.0F, 1.0F);
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1841, homeTexture0, 1841, homeTexture0, (-284), (-284));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setCeillingLightColor((-284));
      AspectRatio aspectRatio1 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setPhotoHeight((-1492));
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.getSkyTexture();
      HomeEnvironment.Property.valueOf("VIDEO_WIDTH");
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setGroundColor(1190);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getLightColor();
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment0.getVideoAspectRatio());
      assertEquals((-1492), int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      TexturesCategory texturesCategory1 = new TexturesCategory("");
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", (Content) null, 1517.218F, 0.0F, "0 %cvh_");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setVideoFrameRate((-1462));
      homeEnvironment0.getPhotoAspectRatio();
      HomeEnvironment.DrawingMode.values();
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals((-1462), homeEnvironment0.getVideoFrameRate());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      CatalogTexture catalogTexture0 = new CatalogTexture("z", (Content) null, 0L, 0L);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-634), homeTexture0, (-2061), (-634), (-2041.509F));
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-2061), homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-634), homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-634), homeEnvironment0.getGroundColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertNotNull(homeTexture1);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-2041.509F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.4153064443868852
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(0);
      Random.setNextRandom((-2153));
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setWallsAlpha(578.3F);
      homeEnvironment0.getGroundColor();
      homeEnvironment1.setGroundColor(9);
      homeEnvironment1.setWallsAlpha(578.3F);
      homeEnvironment0.setPhotoHeight(9);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.setVideoFrameRate(11053224);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment2.getGroundTexture();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      AspectRatio aspectRatio2 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio2);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment2.setCeillingLightColor(9);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment1.getSkyColor();
      HomeEnvironment.Property.values();
      homeEnvironment1.getSkyTexture();
      homeEnvironment1.getCeillingLightColor();
      HomeEnvironment.DrawingMode.values();
      Random.setNextRandom(13684944);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.748058988887039
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = (-244);
      homeEnvironment0.setSubpartSizeUnderLight((-244));
      homeEnvironment0.setLightColor((-244));
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setVideoFrameRate(9);
      homeEnvironment0.getSubpartSizeUnderLight();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setPhotoQuality(13427964);
      String string0 = "$YP2zyZ'X(md^tJ_wvF";
      Class<Integer> class0 = Integer.class;
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(class0, "$YP2zyZ'X(md^tJ_wvF");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource $YP2zyZ'X(md^tJ_wvF
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Class<Camera> class0 = Camera.class;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      resourceURLContent0.getJAREntryURL();
      resourceURLContent0.getJAREntryURL();
      resourceURLContent0.getJAREntryURL();
      resourceURLContent0.getJAREntryName();
      resourceURLContent0.getJAREntryName();
      FileSystemHandling.shouldAllThrowIOExceptions();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "5;");
      Random.setNextRandom(0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      URL uRL0 = MockURL.getHttpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("#VJ", "#VJ", resourceURLContent0, 0, 0, "com/eteks/sweethome3d/model/", true);
      CatalogTexture catalogTexture1 = new CatalogTexture("", "Linux", resourceURLContent0, (-1137.2544F), (-1137.2544F), "#VJ");
      TexturesCategory texturesCategory0 = new TexturesCategory("5;");
      catalogTexture1.setCategory(texturesCategory0);
      catalogTexture0.compareTo(catalogTexture1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, 0, 0);
      homeEnvironment0.clone();
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Class<Camera> class0 = Camera.class;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      resourceURLContent0.getJAREntryURL();
      resourceURLContent0.getJAREntryURL();
      resourceURLContent0.getJAREntryURL();
      resourceURLContent0.getJAREntryName();
      resourceURLContent0.getJAREntryName();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-2436));
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals((-2436), homeEnvironment0.getVideoWidth());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Invalid URL base for JAR entry");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment0.setVideoQuality(2146751240);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getVideoQuality();
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals(2146751240, homeEnvironment0.getVideoQuality());
      assertEquals(300, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.6951020624694584
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setVideoQuality(823);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment1.setLightColor(1709);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      homeEnvironment0.setCeillingLightColor(1709);
      homeEnvironment1.setAllLevelsVisible(true);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment0.clone();
      homeEnvironment1.setVideoFrameRate(2170);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("i#HK}C}h)70*a;%IP", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("i#HK}C}h)70*a;%IP", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("i#HK}C}h)70*a;%IP", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("temp", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy4);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("6Z'h(^0-5evHPWGP$ d", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy7 = new PropertyChangeListenerProxy("temp", propertyChangeListenerProxy4);
      PropertyChangeListenerProxy propertyChangeListenerProxy8 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy5);
      HomeEnvironment homeEnvironment3 = new HomeEnvironment();
      homeEnvironment2.setAllLevelsVisible(false);
      assertTrue(homeEnvironment1.isAllLevelsVisible());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.277149821513667
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(1120);
      homeEnvironment0.setVideoQuality(1120);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setLightColor(1120);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      homeEnvironment0.setCeillingLightColor(823);
      homeEnvironment0.setAllLevelsVisible(false);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.clone();
      homeEnvironment2.setVideoFrameRate(1709);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment2.setVideoQuality(823);
      homeEnvironment2.setGroundColor(2170);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment1.setLightColor(1120);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment1.setVideoCameraPath(list0);
      System.setCurrentTimeMillis(1709);
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(1120, homeEnvironment0.getLightColor());
      assertEquals(1120, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.850863601176158
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoFrameRate(548);
      homeEnvironment0.setVideoFrameRate(548);
      homeEnvironment0.setLightColor(4186);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setCeillingLightColor(548);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setLightColor(548);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setGroundColor(0);
      HomeEnvironment.DrawingMode.values();
      System.setCurrentTimeMillis(904L);
      homeEnvironment0.getVideoCameraPath();
      Random.setNextRandom(0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoHeight((-4230));
      homeEnvironment0.clone();
      assertEquals(AspectRatio.RATIO_16_9, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("ma/zNJ2", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy(";@", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("PK~R~Z4?w/=qs8", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy(",u!", propertyChangeListenerProxy4);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("editorSubFolder.Mac OS X", propertyChangeListenerProxy4);
      PropertyChangeListenerProxy propertyChangeListenerProxy7 = new PropertyChangeListenerProxy(",3{.{N+gUc:1.fz", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy8 = new PropertyChangeListenerProxy("jar:", propertyChangeListenerProxy3);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getPhotoWidth();
      boolean boolean0 = homeEnvironment0.isAllLevelsVisible();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      CatalogTexture catalogTexture0 = new CatalogTexture("com.eteks.sweethome3d.tools.OperatingSystem$2", "com.eteks.sweethome3d.tools.OperatingSystem$2", (Content) null, (-1818.9F), (-2840.5F), "com.eteks.sweethome3d.tools.OperatingSystem$2");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(11053224, homeTexture0, 11053224, 0, 1652.7417F);
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertEquals(1652.7417F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(11053224, homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertNotNull(homeTexture1);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(0, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("3700-", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy(")Lg1sDKB", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("PK~R~Z4?w/=qs8", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy(")Lg1sDKB", propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("FILL", propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("3700-", propertyChangeListenerProxy4);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("FILL", "I=g/=b !D[_juw@sX", propertyChangeListenerProxy1, propertyChangeListenerProxy3);
      propertyChangeListenerProxy6.propertyChange(propertyChangeEvent0);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(propertyChangeListenerProxy1, "Y", object0, object1);
      propertyChangeListenerProxy3.propertyChange(propertyChangeEvent1);
      PropertyChangeListenerProxy propertyChangeListenerProxy7 = new PropertyChangeListenerProxy(")Lg1sDKB", propertyChangeListenerProxy6);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      PropertyChangeListenerProxy propertyChangeListenerProxy8 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy7);
      PropertyChangeListenerProxy propertyChangeListenerProxy9 = new PropertyChangeListenerProxy("Zb+u`<'l", propertyChangeListenerProxy3);
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", temporaryURLContent0, 7, 7, "Zb+u`<'l", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(7, homeTexture0, 0, homeTexture0, 0, 7);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(0, homeEnvironment1.getLightColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(7.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(0, homeEnvironment1.getSkyColor());
      assertEquals(7, homeEnvironment1.getGroundColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera0 = new Camera(1.7777778F, 1.7777778F, 1582.6847F, 1.7777778F, 1.7777778F, 1.1053224E7F, (-798L), camera_Lens0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(3256);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setPhotoHeight((-273));
      homeEnvironment0.setVideoFrameRate(2145097555);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment1.getGroundTexture();
      homeEnvironment1.setCeillingLightColor(2145097555);
      assertEquals((-273), homeEnvironment1.getPhotoHeight());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(400);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("+", (Content) null, 1.0F, 1.7777778F, true);
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      TexturesCategory texturesCategory1 = new TexturesCategory("+");
      CatalogTexture catalogTexture1 = new CatalogTexture("", "+", (Content) null, 1.0F, 0.0F, "Unsupported aspect ratio ", true);
      CatalogTexture catalogTexture2 = new CatalogTexture("", "", (Content) null, 1517.218F, 0.0F, "0 %cvh_");
      TexturesCategory texturesCategory2 = new TexturesCategory("Linux");
      texturesCategory2.equals("");
      catalogTexture1.setCategory(texturesCategory2);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1683), homeTexture0, (-1683), homeTexture0, (-1683), 0.0F);
      homeEnvironment0.getGroundColor();
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-112), homeTexture0, 577, homeTexture1, 4, 1059.629F);
      homeEnvironment1.setGroundColor((-112));
      homeEnvironment1.setWallsAlpha(0.0F);
      homeEnvironment1.setAllLevelsVisible(true);
      assertTrue(homeEnvironment1.isAllLevelsVisible());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.022794924510636
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-606), (HomeTexture) null, (-606), (-606), (-397.0F));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode1 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode1);
      homeEnvironment0.setPhotoQuality((-4119));
      homeEnvironment0.setPhotoHeight((-1189));
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getPhotoQuality();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("sun.net.www.protocol", propertyChangeListener0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setLightColor((-4119));
      homeEnvironment0.getLightColor();
      homeEnvironment0.getVideoQuality();
      Random.setNextRandom((-4119));
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals(HomeEnvironment.DrawingMode.FILL_AND_OUTLINE, homeEnvironment0.getDrawingMode());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("+", "+", (Content) null, 1.7777778F, 1.0F, "+", true);
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      catalogTexture0.getCategory();
      CatalogTexture catalogTexture1 = new CatalogTexture("", "+", (Content) null, 1.0F, 0.0F, "Unsupported aspect ratio ", true);
      CatalogTexture catalogTexture2 = new CatalogTexture("Can't create temporary folder ", (Content) null, 1.0F, (-450.03488F), true);
      catalogTexture1.compareTo(catalogTexture2);
      CatalogTexture catalogTexture3 = new CatalogTexture("", "", (Content) null, 1517.218F, 0.0F, "0 %cvh_");
      texturesCategory0.equals("+");
      catalogTexture1.setCategory((TexturesCategory) null);
      catalogTexture1.compareTo(catalogTexture3);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture3);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1, homeTexture0, (-783), (-305), 1);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals((-783), homeEnvironment1.getSkyColor());
      assertEquals(1.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(1, homeEnvironment1.getGroundColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals((-305), homeEnvironment1.getLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.483106051794574
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.eteks.sweethome3d.model.Camera$Property");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoQuality();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setPhotoQuality(1914);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_TEXTURE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.setCeillingLightColor(5);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_4_3;
      homeEnvironment1.setVideoAspectRatio(aspectRatio1);
      AspectRatio aspectRatio2 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio2);
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment2.setVideoFrameRate(4);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment1.setSkyColor((-723));
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("PHOTO_QUALITY", (PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("PHOTO_QUALITY", propertyChangeListenerProxy1);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.SKY_COLOR;
      homeEnvironment2.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy2);
      homeEnvironment2.getVideoCameraPath();
      homeEnvironment1.getPhotoWidth();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.clone();
      assertEquals(AspectRatio.FREE_RATIO, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Class<Camera> class0 = Camera.class;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      resourceURLContent0.getJAREntryURL();
      resourceURLContent0.getJAREntryURL();
      resourceURLContent0.getJAREntryURL();
      resourceURLContent0.getJAREntryName();
      resourceURLContent0.getJAREntryName();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "5;");
      Random.setNextRandom(9);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      URL uRL0 = MockURL.getFtpExample();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("#VJ", "#VJ", resourceURLContent0, 9, 9, "com/eteks/sweethome3d/model/", true);
      CatalogTexture catalogTexture1 = new CatalogTexture("", "Linux", resourceURLContent0, (-1137.2544F), (-1137.2544F), "#VJ");
      catalogTexture0.compareTo(catalogTexture1);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(9, homeTexture0, 9, 9, 9);
      homeEnvironment0.setGroundTexture(homeTexture0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeTexture homeTexture1 = homeEnvironment0.getSkyTexture();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(9, homeEnvironment0.getLightColor());
      assertEquals(9, homeEnvironment0.getSkyColor());
      assertEquals(9.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(9, homeEnvironment0.getGroundColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertNull(homeTexture1);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("3700-", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy(")Lg1sDKB", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("PK~R~Z4?w/=qs8", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy(")Lg1sDKB", propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("FILL", propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("3700-", propertyChangeListenerProxy4);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("FILL", "I=g/=b !D[_juw@sX", propertyChangeListenerProxy1, propertyChangeListenerProxy3);
      propertyChangeListenerProxy6.propertyChange(propertyChangeEvent0);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(propertyChangeListenerProxy1, "Y", object0, object1);
      propertyChangeListenerProxy3.propertyChange(propertyChangeEvent1);
      PropertyChangeListenerProxy propertyChangeListenerProxy7 = new PropertyChangeListenerProxy(")Lg1sDKB", propertyChangeListenerProxy6);
      PropertyChangeListenerProxy propertyChangeListenerProxy8 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy7);
      PropertyChangeListenerProxy propertyChangeListenerProxy9 = new PropertyChangeListenerProxy("Zb+u`<'l", propertyChangeListenerProxy3);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(4, (HomeTexture) null, 4, 4, 4);
      homeEnvironment0.setWallsAlpha(4);
      homeEnvironment0.clone();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("3700-");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.3700-
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Random.setNextRandom((-1851));
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("Super class isn't cloneable", uRLContent0, (-1851), (-1851));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1851), homeTexture0, 1462, homeTexture0, 1795, 1462);
      homeEnvironment0.getSkyTexture();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(1462, homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(1462.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(1795, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals((-1851), homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.8550964054089625
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(460);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.setWallsAlpha(1.0F);
      homeEnvironment2.getGroundColor();
      homeEnvironment0.setGroundColor(11053224);
      homeEnvironment0.setWallsAlpha(469);
      homeEnvironment0.setPhotoHeight(460);
      HomeEnvironment homeEnvironment3 = new HomeEnvironment();
      homeEnvironment3.setVideoFrameRate(13684944);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment2.getGroundTexture();
      homeEnvironment0.setCeillingLightColor(15);
      assertEquals(460, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      System.setCurrentTimeMillis(604800000L);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "(");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1044), (HomeTexture) null, 324, 1328, (-499.0F));
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(1328, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals((-1044), int0);
      assertEquals((-499.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(324, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      CatalogTexture catalogTexture0 = new CatalogTexture("7<", "7<", (Content) null, 2722.2844F, (-1079.3639F), "7<");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.getGroundTexture();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("_{Z-bX>Sc`");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode._{Z-bX>Sc`
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.4949631136393324
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.setLightColor(1620);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setSubpartSizeUnderLight(1620);
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoHeight(1620);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getGroundColor();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode1 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setVideoFrameRate(11053224);
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode1);
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.setPhotoQuality(11053224);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.VIDEO_FRAME_RATE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      HomeEnvironment.Property.values();
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      homeEnvironment0.setCeillingLightColor(180);
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.getVideoQuality();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("LIGHT_COLOR", "LIGHT_COLOR", resourceURLContent0, (-1518.2759F), (-1634.8595F), (String) null, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      TexturesCategory texturesCategory0 = new TexturesCategory("applicationSubFolder.Mac OS X");
      catalogTexture0.setCategory(texturesCategory0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1994091958, homeTexture0, (-4101), 1994091958, (-1634.8595F));
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setPhotoWidth((-421));
      homeEnvironment0.getPhotoWidth();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment1.getSkyTexture();
      homeEnvironment0.getVideoCameraPath();
      assertEquals((-421), homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor((-2291));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setPhotoWidth((-2016));
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoQuality((-2016));
      homeEnvironment0.clone();
      homeEnvironment0.clone();
      assertEquals(AspectRatio.RATIO_16_9, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(460, (HomeTexture) null, 460, (HomeTexture) null, (-317), 460);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.CEILING_LIGHT_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("abbot.util.PathClassLoader$Factory", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("Fy-[u5.7M]", propertyChangeListenerProxy0);
      Camera camera0 = new Camera(1687.016F, (-433.0F), 1687.016F, (-317), 2438.4426F, 460);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(camera0, "4R@<u,x.%IN_`+&'qz", homeEnvironment1, (Object) null);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.LIGHT_COLOR;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property1, (PropertyChangeListener) null);
      homeEnvironment1.setLightColor((-317));
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight((-4564));
      homeEnvironment0.setCeillingLightColor((-4564));
      homeEnvironment0.clone();
      assertEquals((-4564.0F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory("j1u;SL");
      TexturesCategory texturesCategory1 = new TexturesCategory("");
      texturesCategory1.equals("");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setCeillingLightColor((-714));
      HomeEnvironment.Property.values();
      int int0 = homeEnvironment1.getCeillingLightColor();
      assertEquals((-714), int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory("+");
      TexturesCategory texturesCategory1 = new TexturesCategory("\"Bri!a`GU)>P^T'");
      TexturesCategory texturesCategory2 = new TexturesCategory((String) null);
      TexturesCategory texturesCategory3 = new TexturesCategory("<P%)WCQcbsDEE");
      CatalogTexture catalogTexture0 = new CatalogTexture("/wiu\"(Iipw/{", "%v", (Content) null, 1.0F, 2939.937F, "Unsupported aspect rato ", true);
      CatalogTexture catalogTexture1 = new CatalogTexture("YGP>ZmL5U|}5x3c],|9", "0 %cvh_", (Content) null, 1.0F, (-822.547F), "E~jgAW']USjn5ZP");
      TexturesCategory texturesCategory4 = new TexturesCategory(";T/6G$bB6f Az!wIaNf");
      TexturesCategory texturesCategory5 = new TexturesCategory("");
      texturesCategory5.equals(texturesCategory1);
      catalogTexture0.setCategory(texturesCategory0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "SKY_COLOR");
      catalogTexture1.compareTo(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(2095105998);
      homeEnvironment0.clone();
      assertEquals(2095105998, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.setVideoFrameRate(0);
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, temporaryURLContent0, 51.422F, 0.0F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      HomeEnvironment.Property.values();
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals(HomeEnvironment.DrawingMode.FILL_AND_OUTLINE, homeEnvironment0.getDrawingMode());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory("+");
      TexturesCategory texturesCategory1 = new TexturesCategory("\"Bri!a`GU)>P^T'");
      CatalogTexture catalogTexture0 = new CatalogTexture("l^EoVP", "", (Content) null, 1.0F, 1.0F, "", false);
      CatalogTexture catalogTexture1 = new CatalogTexture("0 %cvh_", "^F*:cbV#", (Content) null, (-1842.179F), 1517.218F, "");
      TexturesCategory texturesCategory2 = new TexturesCategory("0 %cvh_");
      URL uRL0 = MockURL.getFtpExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "NORMAL", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      CatalogTexture catalogTexture2 = new CatalogTexture("^F*:cbV#", "NORMAL", uRLContent0, 1.3333334F, 1517.218F, "TIME");
      texturesCategory2.getIndexOfTexture(catalogTexture2);
      texturesCategory0.equals("Unsupported aspect ratio ");
      catalogTexture0.setCategory(texturesCategory2);
      catalogTexture0.compareTo(catalogTexture1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(1.0F);
      homeEnvironment0.clone();
      assertEquals(1.0F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(460);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.setWallsAlpha(460);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("8'fF,chm5qWSD3%wgEc", propertyChangeListener0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("8'fF,chm5qWSD3%wgEc", "8'fF,chm5qWSD3%wgEc", homeEnvironment_Property0, homeEnvironment0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(homeEnvironment0, "8'fF,chm5qWSD3%wgEc", "8'fF,chm5qWSD3%wgEc", (Object) null);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      homeEnvironment0.setSkyColor(0);
      HomeEnvironment.Property homeEnvironment_Property2 = HomeEnvironment.Property.SKY_COLOR;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property2, propertyChangeListenerProxy0);
      homeEnvironment0.getWallsAlpha();
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(460, homeEnvironment0.getPhotoQuality());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Object object0 = new Object();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Object object1 = new Object();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-2707));
      homeEnvironment0.setVideoQuality((-2707));
      homeEnvironment0.clone();
      assertEquals((-2707), homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("+", (Content) null, 1.0F, 1.7777778F, true);
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      TexturesCategory texturesCategory1 = new TexturesCategory("+");
      CatalogTexture catalogTexture1 = new CatalogTexture("", "+", (Content) null, 1.0F, 0.0F, "", true);
      catalogTexture0.compareTo(catalogTexture1);
      CatalogTexture catalogTexture2 = new CatalogTexture("", "", (Content) null, 1517.218F, 1.0F, "0 %cvh_");
      catalogTexture0.getCategory();
      CatalogTexture catalogTexture3 = new CatalogTexture("+", "0 %cvh_", (Content) null, 1.7777778F, 1.7777778F, "bO+B", true);
      CatalogTexture catalogTexture4 = new CatalogTexture("Linux", ">-m_7ah", (Content) null, 0.0F, 1709.0F, "Linux");
      catalogTexture0.compareTo(catalogTexture4);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2868, homeTexture0, (-1202), 2145729087, (-1.0F));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals((-1202), homeEnvironment1.getSkyColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(2145729087, homeEnvironment1.getLightColor());
      assertEquals(2868, homeEnvironment1.getGroundColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals((-1.0F), homeEnvironment1.getWallsAlpha(), 0.01F);
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.6195259631210703
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("3700-", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy(";@", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy(";@", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("PK~R~Z/=qs8", propertyChangeListenerProxy2);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "Invalid URL base for JAR entry");
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy(";@", propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("FIL", propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("3700-", propertyChangeListenerProxy4);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      System.setCurrentTimeMillis((-4309L));
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.clone();
      System.setCurrentTimeMillis(25);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.360538514024816
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setLightColor(2345);
      homeEnvironment0.setVideoFrameRate(0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setCeillingLightColor((-273));
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setWallsAlpha((-1518.2759F));
      homeEnvironment0.setVideoWidth((-273));
      homeEnvironment0.setVideoFrameRate((-723));
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getSubpartSizeUnderLight();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-200));
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getVideoQuality();
      int int0 = homeEnvironment0.getLightColor();
      assertEquals((-200), homeEnvironment0.getVideoWidth());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(44);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoWidth(396);
      homeEnvironment0.getLightColor();
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals(396, int0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(871);
      homeEnvironment0.setWallsAlpha((-1.0F));
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("8'fF,chm5qWSD3%wgEc", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("8'fF,chm5qWSD3%wgEc", "8'fF,chm5qWSD3%wgEc", propertyChangeListenerProxy0, object0);
      homeEnvironment0.setSkyColor(10);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(propertyChangeListenerProxy0, "", (Object) null, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      propertyChangeEvent1.setPropagationId("PHOTO_HEIGHT");
      propertyChangeEvent0.setPropagationId(propertyChangeEvent1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setSkyColor((-464));
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.getCeillingLightColor();
      Random.setNextRandom((-464));
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory("+");
      TexturesCategory texturesCategory1 = new TexturesCategory("\"Bri!a`GU)>P^T'");
      TexturesCategory texturesCategory2 = new TexturesCategory((String) null);
      TexturesCategory texturesCategory3 = new TexturesCategory("<P%)WCQcbsDEE");
      CatalogTexture catalogTexture0 = new CatalogTexture("YGP>ZmL5U|}5x3c],|9", "0 %cvh_", (Content) null, 1.0F, (-822.547F), "E~jgAW']USjn5ZP");
      TexturesCategory texturesCategory4 = new TexturesCategory(";T/6G$bB6f Az!wIaNf");
      TexturesCategory texturesCategory5 = new TexturesCategory("");
      texturesCategory5.equals(texturesCategory1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha((-822.547F));
      homeEnvironment0.clone();
      assertEquals((-822.547F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.251421630565127
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setLightColor(2345);
      homeEnvironment0.setVideoFrameRate(0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setWallsAlpha((-1518.2759F));
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setVideoFrameRate((-337));
      HomeEnvironment.Property.values();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_HEIGHT;
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("eiu4,<um'", (PropertyChangeListener) null);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getPhotoWidth();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode1 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode1);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setPhotoHeight(484);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode2 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode2);
      homeEnvironment0.setSkyColor(13684944);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode1);
      homeEnvironment0.getPhotoAspectRatio();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment0.setLightColor(2097);
      homeEnvironment0.setWallsAlpha(400);
      assertEquals(2097, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth(1487);
      assertEquals(1115, homeEnvironment1.getVideoHeight());
      
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals(25, int0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.6220322287852307
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoQuality();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setGroundColor((-300));
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.setVideoWidth(320);
      AspectRatio aspectRatio1 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setVideoWidth(1130);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      Class<String> class0 = String.class;
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(class0, "vVoQt;%uAl");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource vVoQt;%uAl
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object8, "zl|/rJ3;P&6n/", object5, (Object) null);
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(5);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      int int0 = homeEnvironment2.getVideoQuality();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.2215523079930732
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("3700-", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("PK~R~Z4?w/=qs8", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy(")Lg1sDKB", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("FILL", propertyChangeListenerProxy2);
      Random.setNextRandom(9);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy((String) null, (PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy5);
      PropertyChangeListenerProxy propertyChangeListenerProxy7 = new PropertyChangeListenerProxy("3700-", propertyChangeListenerProxy5);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.clone();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Class<Camera> class0 = Camera.class;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      resourceURLContent0.getJAREntryURL();
      resourceURLContent0.getJAREntryURL();
      URL uRL0 = resourceURLContent0.getJAREntryURL();
      resourceURLContent0.getJAREntryURL();
      resourceURLContent0.getJAREntryName();
      resourceURLContent0.getJAREntryName();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Random.setNextRandom((-1903));
      MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com/eteks/sweethome3d/model/");
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, "E6JE nQ~Z1T@`'Q!C9", temporaryURLContent0, 2144877478, (-3302.789F), "com/eteks/sweethome3d/model/", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2144877478, homeTexture0, (-1903), homeTexture0, 1944, (-1.0F));
      homeEnvironment0.setPhotoWidth(2146915339);
      assertEquals(2146915339, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.setPhotoQuality(453);
      homeEnvironment0.clone();
      assertEquals(453, homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Class<Camera> class0 = Camera.class;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      resourceURLContent0.getJAREntryURL();
      resourceURLContent0.getJAREntryURL();
      resourceURLContent0.getJAREntryURL();
      resourceURLContent0.getJAREntryURL();
      resourceURLContent0.getJAREntryName();
      resourceURLContent0.getJAREntryName();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(9, (HomeTexture) null, 9, (HomeTexture) null, 9, (-944.97F));
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(9, int0);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(9, homeEnvironment0.getSkyColor());
      assertEquals(9, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-944.97F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.clone();
      homeEnvironment0.getPhotoAspectRatio();
      System.setCurrentTimeMillis((-27L));
      System.setCurrentTimeMillis(2458L);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.876156142363588
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("3700-", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy(")Lg1sDKB", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("PK~R~Z4?w/=qs8", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy(")Lg1sDKB", propertyChangeListenerProxy3);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera(2204.0173F, 30.3165F, 2204.0173F, (-1764.0F), 30.3165F, (-4013.7F), 1L, camera_Lens0);
      Camera camera1 = camera0.clone();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(")Lg1sDKB", "", camera1, propertyChangeListenerProxy3);
      propertyChangeListenerProxy4.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("FILL", propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("3700-", propertyChangeListenerProxy4);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(3122, (HomeTexture) null, 2135875628, 2135875628, 3122);
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setGroundColor(2170);
      homeEnvironment0.setWallsAlpha(469);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoHeight(2135875628);
      homeEnvironment1.setVideoFrameRate(469);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment1.getGroundTexture();
      homeEnvironment1.setCeillingLightColor(13684944);
      int int0 = homeEnvironment1.getVideoFrameRate();
      assertEquals(469.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(469, int0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("+", (Content) null, 1.0F, 1.7777778F, true);
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      TexturesCategory texturesCategory1 = new TexturesCategory("+");
      CatalogTexture catalogTexture1 = new CatalogTexture("", "+", (Content) null, 1.0F, 1.0F, "Unsupported aspect ratio ", true);
      CatalogTexture catalogTexture2 = new CatalogTexture("", "", (Content) null, 1517.218F, 0.0F, "0 %cvh_");
      TexturesCategory texturesCategory2 = new TexturesCategory("Linux");
      texturesCategory2.equals("");
      catalogTexture1.setCategory(texturesCategory2);
      catalogTexture1.compareTo(catalogTexture2);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(1);
      homeEnvironment0.setPhotoWidth(1);
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals(1, homeEnvironment0.getVideoHeight());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Class<Camera> class0 = Camera.class;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      resourceURLContent0.getJAREntryURL();
      URL uRL0 = resourceURLContent0.getJAREntryURL();
      resourceURLContent0.getJAREntryURL();
      resourceURLContent0.getJAREntryName();
      resourceURLContent0.getJAREntryName();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Random.setNextRandom(9);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      MockURL.getFtpExample();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", resourceURLContent0, 9, 361.27774F, "Linux");
      TexturesCategory texturesCategory0 = new TexturesCategory("rovEE@T0z>M=,WIqUX");
      catalogTexture0.setCategory(texturesCategory0);
      CatalogTexture catalogTexture1 = new CatalogTexture("", "1s", temporaryURLContent0, 254.77F, (-1137.2544F), "VD3Q*.]");
      catalogTexture0.compareTo(catalogTexture1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(14, homeTexture0, 46, 9, (-1137.2544F));
      assertEquals(9, homeEnvironment0.getLightColor());
      assertEquals(46, homeEnvironment0.getSkyColor());
      
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(46, homeTexture0, (-1), (-1), 254.77F);
      HomeTexture homeTexture1 = homeEnvironment1.getGroundTexture();
      assertNotNull(homeTexture1);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(46, homeEnvironment1.getGroundColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(254.77F, homeEnvironment1.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Class<Camera> class0 = Camera.class;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      resourceURLContent0.getJAREntryURL();
      resourceURLContent0.getJAREntryURL();
      resourceURLContent0.getJAREntryURL();
      resourceURLContent0.getJAREntryName();
      resourceURLContent0.getJAREntryName();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Random.setNextRandom(9);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Super class isn't cloneable");
      CatalogTexture catalogTexture0 = new CatalogTexture("ek8.S", resourceURLContent0, 9, 400);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(400, homeTexture0, (-3721), homeTexture0, (-2164), (-1811.7F));
      homeEnvironment0.setLightColor(9);
      homeEnvironment0.setSkyColor(3746);
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment.Property.values();
      homeEnvironment0.getCeillingLightColor();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("ek8.S");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.ek8.S
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)41;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)7;
      byteArray0[4] = (byte) (-82);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setLightColor(2616);
      linkedList0.addFirst((Camera) null);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.getVideoCameraPath();
      assertEquals(0, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object5, "PK~R~Z4?w/=qs8", object6, "");
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      homeEnvironment0.getPhotoAspectRatio();
      HomeEnvironment.DrawingMode.values();
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals(320, int0);
      
      int int1 = homeEnvironment0.getPhotoWidth();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(400, int1);
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory("+");
      TexturesCategory texturesCategory1 = new TexturesCategory("\"Bri!a`GU)>P^T'");
      TexturesCategory texturesCategory2 = new TexturesCategory("+");
      TexturesCategory texturesCategory3 = new TexturesCategory((String) null);
      TexturesCategory texturesCategory4 = new TexturesCategory("Super class isn't cloneable");
      texturesCategory2.equals("\"Bri!a`GU)>P^T'");
      TexturesCategory texturesCategory5 = new TexturesCategory("<yj8,");
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.getDrawingMode();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(0, homeEnvironment0.getPhotoQuality());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertNotSame(homeEnvironment0, homeEnvironment1);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio FREE_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      CatalogTexture catalogTexture0 = new CatalogTexture("10.4", "10.4", (Content) null, 1.5F, (-1.0F), "", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-725), homeTexture0, 1512, homeTexture0, (-725), (-725));
      int int0 = homeEnvironment0.getSkyColor();
      assertEquals((-725), homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-725.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(1512, int0);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-725), homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality((-337));
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (Content) null, 1.0F, 514, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      System.setCurrentTimeMillis(7101L);
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("$VALUES", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("FILL", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("3700-", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("$VALUES", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("PK~R~Z4?w/=qs8", propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy7 = new PropertyChangeListenerProxy("jar", propertyChangeListenerProxy5);
      PropertyChangeListenerProxy propertyChangeListenerProxy8 = new PropertyChangeListenerProxy("$VALUES", propertyChangeListenerProxy7);
      PropertyChangeListenerProxy propertyChangeListenerProxy9 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy6);
      PropertyChangeListenerProxy propertyChangeListenerProxy10 = new PropertyChangeListenerProxy("-Y", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy11 = new PropertyChangeListenerProxy("CEILING_LIGHT_COLOR", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy12 = new PropertyChangeListenerProxy("3700-", propertyChangeListenerProxy6);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-2939), (HomeTexture) null, 2146364744, (HomeTexture) null, 2146364744, (-42.346F));
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals((-2939), homeEnvironment1.getGroundColor());
      assertNotSame(homeEnvironment1, homeEnvironment2);
      assertEquals((-42.346F), homeEnvironment1.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object5, "PK~R~Z4?w/=qs8", object6, "");
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object9, "t(#*", (Object) null, object3);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.clone();
      homeEnvironment0.getGroundTexture();
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("n=h)V=*_8f\"jzH,7(", "n=h)V=*_8f\"jzH,7(", temporaryURLContent0, (-1677.0F), (-1.0F), "");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment1.setGroundTexture(homeTexture0);
      System.setCurrentTimeMillis(1L);
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertNull(homeTexture1);
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.DRAWING_MODE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("system protocol handler", propertyChangeListener0);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "system protocol handler", object1, "system protocol handler");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeEvent0.setPropagationId(object0);
      Object object2 = new Object();
      propertyChangeEvent0.setPropagationId(object2);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(homeEnvironment_Property0, "system protocol handler", "system protocol handler", "system protocol handler");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getWallsAlpha();
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("3700-", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy(")Lg1sDKB", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("PK~R~Z4?w/=qs8", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy(")Lg1sDKB", propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("FILL", propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("3700-", propertyChangeListenerProxy4);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("FILL", "I=g/=b !D[_juw@sX", propertyChangeListenerProxy1, propertyChangeListenerProxy3);
      propertyChangeListenerProxy6.propertyChange(propertyChangeEvent0);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(propertyChangeListenerProxy1, "Y", object0, object1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(527);
      homeEnvironment0.setVideoQuality(3706);
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      homeEnvironment0.setPhotoWidth(3706);
      assertEquals(527, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(1828.5005F);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Invalid URL base for JAR entry");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment0.setVideoQuality((-428));
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getPhotoHeight();
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals(1828.5005F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
      assertEquals(25, int0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(10);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "7SA|Z@/O/H|E");
      System.setCurrentTimeMillis((-3125L));
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.098389197717206
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setPhotoQuality(1171);
      homeEnvironment0.getGroundTexture();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoFrameRate((-723));
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.isAllLevelsVisible();
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals(1171, homeEnvironment0.getPhotoQuality());
      assertEquals((-723), int0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.519382346735597
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(460);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.setWallsAlpha(460);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("8'fF,chm5qWSD3%wgEc", propertyChangeListener0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("8'fF,chm5qWSD3%wgEc", "8'fF,chm5qWSD3%wgEc", homeEnvironment_Property0, homeEnvironment0);
      homeEnvironment0.setSkyColor(460);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(homeEnvironment0, "8'fF,chm5qWSD3%wgEc", "8'fF,chm5qWSD3%wgEc", (Object) null);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      homeEnvironment0.setSkyColor(460);
      HomeEnvironment.Property homeEnvironment_Property2 = HomeEnvironment.Property.SKY_COLOR;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property2, propertyChangeListenerProxy0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      assertEquals(460, homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight((-1733.0F));
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.clone();
      assertEquals((-1733.0F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }
}
