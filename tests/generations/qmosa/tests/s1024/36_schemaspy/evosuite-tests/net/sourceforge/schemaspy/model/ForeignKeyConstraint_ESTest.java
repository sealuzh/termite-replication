/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 10:32:06 GMT 2019
 */

package net.sourceforge.schemaspy.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.function.Predicate;
import net.sourceforge.schemaspy.Config;
import net.sourceforge.schemaspy.model.ForeignKeyConstraint;
import net.sourceforge.schemaspy.model.Table;
import net.sourceforge.schemaspy.model.TableColumn;
import net.sourceforge.schemaspy.model.xml.SchemaMeta;
import net.sourceforge.schemaspy.model.xml.TableColumnMeta;
import net.sourceforge.schemaspy.view.SqlFormatter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ForeignKeyConstraint_ESTest extends ForeignKeyConstraint_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.2407560846182575
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "\"8xiY6{pIGBxyvr", 147, 147);
      assertEquals(147, foreignKeyConstraint0.getDeleteRule());
      
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "N,-[39,!WjC", 147, (byte)0);
      String string0 = foreignKeyConstraint1.getDeleteRuleDescription();
      assertEquals(147, foreignKeyConstraint1.getUpdateRule());
      assertEquals("Cascade on delete:\n Deletion of parent deletes child", string0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "PU<RW6t[5-I!PCx4v", 0, 0);
      foreignKeyConstraint0.isCascadeOnDelete();
      MockFile mockFile0 = new MockFile("CqQ)");
      mockFile0.getAbsoluteFile();
      MockFile mockFile1 = new MockFile(mockFile0, "selectIndexesSql");
      MockFile mockFile2 = new MockFile(mockFile1, "PU<RW6t[5-I!PCx4v");
      // Undeclared exception!
      try { 
        MockFile.createTempFile("", "", (File) mockFile2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5982538439717047
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-47);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "}07");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "R");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "R", 2760, 1);
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("R", string0);
      
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-u");
      String string1 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Restrict delete", string1);
      assertEquals(2760, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.053882356878545
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      tableColumn1.setType("");
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint(tableColumn1, tableColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.0253639737248905
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "9WMp)TpZ}XaFHL9:o'x");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)2;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 48, 2515);
      foreignKeyConstraint0.getDeleteRuleName();
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getDeleteRuleAlias();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getName();
      assertEquals(2515, foreignKeyConstraint0.getDeleteRule());
      assertEquals(48, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.832920911191322
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "U2Zmc:");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "U2Zmc:");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "U2Zmc:", (-1), 0);
      foreignKeyConstraint0.isNullOnDelete();
      Config.getInstance();
      foreignKeyConstraint0.isRestrictDelete();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRule();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("2", "2", "net.sourceforge.schemaspy.model.ForeignKeyConstraint");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"2\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "DESC-?RI/E", 183, 183);
      Config config0 = new Config();
      Config config1 = new Config();
      config0.setFont("UTF-8");
      config0.getFont();
      config1.isSingleSignOn();
      config0.setUser("UTF-8");
      config1.setFont("UTF-8");
      config0.getSchema();
      Config config2 = new Config();
      config0.setSqlFormatter("UTF-8");
      config1.setUser("UTF-8");
      SqlFormatter sqlFormatter0 = config2.getSqlFormatter();
      config0.setSqlFormatter(sqlFormatter0);
      Config.setInstance(config1);
      config2.getSchema();
      Config config3 = new Config();
      config0.setHtmlGenerationEnabled(false);
      config3.isHtmlGenerationEnabled();
      config3.getFont();
      String[] stringArray0 = new String[1];
      config3.isSchemaDisabled();
      stringArray0[0] = "UTF-8";
      Config config4 = new Config(stringArray0);
      config4.setCharset("UTF-8");
      config1.isSingleSignOn();
      config2.setEncodeCommentsEnabled(false);
      config3.getPort();
      config3.setDescription("UTF-8");
      config4.setCharset("UTF-8");
      config1.getCss();
      config1.getLogLevel();
      config3.getDb();
      config1.setFont("UTF-8");
      config2.setMeta("UTF-8");
      boolean boolean0 = foreignKeyConstraint0.isReal();
      assertTrue(boolean0);
      assertEquals(183, foreignKeyConstraint0.getUpdateRule());
      assertEquals(183, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.8610260302335981
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "9WMp)TpZ}XaFHL9:o'x");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "N", (-1), 1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      LinkedList<TableColumn> linkedList1 = new LinkedList<TableColumn>();
      LinkedList<TableColumn> linkedList2 = new LinkedList<TableColumn>();
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertTrue(boolean0);
      
      String string0 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string0);
      
      String string1 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals((-1), foreignKeyConstraint0.getUpdateRule());
      assertEquals("R", string1);
      
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "xmTcxv{Y'");
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "9WMp)TpZ}XaFHL9:o'x");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "9WMp)TpZ}XaFHL9:o'x");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "2gpS}zbb~xN ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "9WMp)TpZ}XaFHL9:o'x");
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      LinkedList<TableColumn> linkedList1 = new LinkedList<TableColumn>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "2gpS}zbb~xN ", (-1), 3);
      System.setCurrentTimeMillis(297L);
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("R", string0);
      assertEquals((-1), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "[39,!W=", 147, 147);
      byte[] byteArray0 = new byte[5];
      LinkedHashSet<TableColumn> linkedHashSet0 = new LinkedHashSet<TableColumn>();
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>(linkedHashSet0);
      Predicate<TableColumn> predicate0 = Predicate.isEqual((Object) "");
      Predicate<TableColumn> predicate1 = predicate0.negate();
      Predicate<TableColumn> predicate2 = predicate1.negate();
      Predicate<TableColumn> predicate3 = predicate1.or(predicate2);
      predicate0.and(predicate3);
      Predicate<TableColumn> predicate4 = predicate2.or(predicate0);
      linkedList0.removeIf(predicate4);
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      linkedList0.add(tableColumn0);
      linkedList0.listIterator();
      ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
      foreignKeyConstraint0.getParentColumns();
      byteArray0[1] = (byte) (-18);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      foreignKeyConstraint0.getChildColumns();
      System.setCurrentTimeMillis(0L);
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getParentColumns();
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.8641220054657963
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "9WMp)TpZ}XaFHL9:o'x");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "9WMp)TpZ}XaFHL9:o'x");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "'jxbF Ec{N!kt*1'>T", 9, 9);
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean0);
      
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleName();
      int int0 = foreignKeyConstraint0.getDeleteRule();
      assertEquals(9, foreignKeyConstraint0.getUpdateRule());
      assertEquals(9, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "DESC-?RI/E", 183, 183);
      Config config0 = new Config();
      Config config1 = new Config();
      config0.setFont("UTF-8");
      config0.getFont();
      config1.isSingleSignOn();
      config0.setUser("UTF-8");
      config1.setFont("UTF-8");
      config0.getSchema();
      Config config2 = new Config();
      config0.setSqlFormatter("UTF-8");
      config1.setUser("UTF-8");
      SqlFormatter sqlFormatter0 = config2.getSqlFormatter();
      config0.setSqlFormatter(sqlFormatter0);
      Config.setInstance(config1);
      config2.getSchema();
      Config config3 = new Config();
      config0.setHtmlGenerationEnabled(false);
      config3.isHtmlGenerationEnabled();
      config3.getFont();
      String[] stringArray0 = new String[1];
      config3.isSchemaDisabled();
      stringArray0[0] = "UTF-8";
      Config config4 = new Config(stringArray0);
      config4.setCharset("UTF-8");
      config1.isSingleSignOn();
      config2.setEncodeCommentsEnabled(false);
      config3.getPort();
      config1.setCharset("Helvetica");
      config3.setDescription("UTF-8");
      config4.setCharset("UTF-8");
      config1.getCss();
      config1.getLogLevel();
      config3.getDb();
      config1.setFont("UTF-8");
      config2.setMeta("UTF-8");
      foreignKeyConstraint0.getChildTable();
      assertEquals(183, foreignKeyConstraint0.getDeleteRule());
      assertEquals(183, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.218456332760875
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-123);
      byteArray0[1] = (byte)110;
      byteArray0[2] = (byte) (-100);
      byteArray0[3] = (byte)14;
      byteArray0[4] = (byte)86;
      byteArray0[5] = (byte) (-35);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)102;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "@`M{|Y(]rEUMvUEq");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@`M{|Y(]rEUMvUEq");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "J&-Rj", 0, (byte)14);
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      LinkedList<TableColumn> linkedList1 = new LinkedList<TableColumn>();
      ForeignKeyConstraint.toString((List<TableColumn>) linkedList1);
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals(0, int0);
      
      System.setCurrentTimeMillis(0L);
      boolean boolean1 = foreignKeyConstraint0.isCascadeOnDelete();
      assertEquals(14, foreignKeyConstraint0.getDeleteRule());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      linkedList0.add((TableColumn) null);
      // Undeclared exception!
      try { 
        ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.8797877350457353
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "S.JW7i~jN");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 562, 2);
      foreignKeyConstraint0.getDeleteRuleName();
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getDeleteRuleAlias();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)93;
      byteArray0[1] = (byte)108;
      byteArray0[2] = (byte)9;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Null on delete");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "@`M{Y(]rEUMvEq", 947, 2);
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      foreignKeyConstraint0.getName();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      Config config0 = new Config(stringArray0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.6866501918518337
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Restrict eete");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Restrict eete");
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      linkedList0.spliterator();
      linkedList0.parallelStream();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "&&=6hUNxl8P9Y2s&B?<", (-1563), (-1563));
      ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, (String) null, 1484, (-1436));
      foreignKeyConstraint1.getDeleteRuleAlias();
      foreignKeyConstraint1.getChildColumns();
      foreignKeyConstraint1.getChildColumns();
      foreignKeyConstraint1.getName();
      foreignKeyConstraint1.getParentTable();
      boolean boolean1 = foreignKeyConstraint0.isImplied();
      assertTrue(boolean1 == boolean0);
      
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint1.getParentColumns();
      assertEquals(1484, foreignKeyConstraint1.getUpdateRule());
      assertEquals((-1436), foreignKeyConstraint1.getDeleteRule());
      
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getParentColumns();
      assertEquals((-1563), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = (-1);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "PU<RW6t[5-I!PCx4v", (-1), (-1));
      foreignKeyConstraint0.isCascadeOnDelete();
      MockFile mockFile0 = new MockFile("CqQ)");
      mockFile0.getAbsoluteFile();
      MockFile mockFile1 = new MockFile(mockFile0, "selectIndexesSql");
      MockFile mockFile2 = new MockFile(mockFile1, "PU<RW6t[5-I!PCx4v");
      mockFile0.setReadable(true, false);
      try { 
        mockFile0.createNewFile();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "8L;,", 1906, (-1442));
      List<TableColumn> list0 = foreignKeyConstraint0.getChildColumns();
      ForeignKeyConstraint.toString(list0);
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals(1906, int0);
      
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.getParentColumns();
      assertEquals((-1442), foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "8L;,", (-2225), (-1453));
      foreignKeyConstraint0.getUpdateRule();
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "DESC-?RI/E", 183, 183);
      Config config0 = new Config();
      Config config1 = new Config();
      config0.setFont("UTF-8");
      config0.getFont();
      config1.isSingleSignOn();
      config0.setUser("UTF-8");
      config1.setFont("UTF-8");
      config0.getSchema();
      Config config2 = new Config();
      config0.setSqlFormatter("UTF-8");
      config1.setUser("UTF-8");
      SqlFormatter sqlFormatter0 = config2.getSqlFormatter();
      config0.setSqlFormatter(sqlFormatter0);
      Config.setInstance(config1);
      config2.getSchema();
      Config config3 = new Config();
      config0.setHtmlGenerationEnabled(false);
      config3.isHtmlGenerationEnabled();
      config3.getFont();
      String[] stringArray0 = new String[1];
      config3.isSchemaDisabled();
      stringArray0[0] = "UTF-8";
      Config config4 = new Config(stringArray0);
      config4.setCharset("UTF-8");
      config1.isSingleSignOn();
      config2.setEncodeCommentsEnabled(false);
      config3.getPort();
      config1.setCharset("Helvetica");
      config3.setDescription("UTF-8");
      config4.setCharset("UTF-8");
      config1.getCss();
      config4.getLogLevel();
      config0.getDb();
      config2.setFont("schemaSpy.css");
      config0.setMeta("UTF-8");
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      assertEquals(183, foreignKeyConstraint0.getDeleteRule());
      assertEquals(183, foreignKeyConstraint0.getUpdateRule());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "[39,!WjC", 11, (byte)0);
      Integer integer0 = new Integer(147);
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("C", string0);
      assertEquals(11, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "i");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ehE");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "!99+ATD0e__ m1y5~");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-98);
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte) (-97);
      byteArray0[3] = (byte)59;
      byteArray0[4] = (byte)66;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (-1727), 3);
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertEquals((-1727), foreignKeyConstraint0.getUpdateRule());
      assertTrue(boolean0);
      
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "WvX\"0");
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'=3HY");
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.2248830687452414
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "*!Y5hDm");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<lDIL-v URP");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "*!Y5hDm");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "*!Y5hDm");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-10);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "' o");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " via ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "*!Y5hDm");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<lDIL-sv URX");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$WNU`3GW]");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, (-389), 3);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "' o");
      foreignKeyConstraint0.getDeleteRuleDescription();
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.2248830687452414
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<lDIL-sv URX");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<lDIL-sv URX");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "' o");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$WNU`3GW]");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, (-389), (-1));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "' o");
      foreignKeyConstraint0.getDeleteRuleDescription();
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "t^XRdG");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Table table0 = null;
      int int0 = (-1953);
      String string0 = "N,-[39,!qeWjC";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "N,-[39,!qeWjC", (-1953), (-1953));
      byte[] byteArray0 = new byte[8];
      foreignKeyConstraint0.compareTo(foreignKeyConstraint0);
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo((ForeignKeyConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "DESC-?RI/E", 183, 183);
      foreignKeyConstraint0.addParentColumn((TableColumn) null);
      Config config0 = new Config();
      Config config1 = new Config();
      config0.setFont("UTF-8");
      config0.getFont();
      config1.isSingleSignOn();
      config0.setUser("UTF-8");
      config1.setFont("UTF-8");
      config0.getSchema();
      Config config2 = new Config();
      config0.setSqlFormatter("UTF-8");
      config1.setUser("UTF-8");
      SqlFormatter sqlFormatter0 = config2.getSqlFormatter();
      config0.setSqlFormatter(sqlFormatter0);
      Config.setInstance(config1);
      config2.getSchema();
      Config config3 = new Config();
      config0.setHtmlGenerationEnabled(false);
      config3.isHtmlGenerationEnabled();
      config3.getFont();
      String[] stringArray0 = new String[1];
      config3.isSchemaDisabled();
      stringArray0[0] = "UTF-8";
      Config config4 = new Config(stringArray0);
      config4.setCharset("UTF-8");
      config1.isSingleSignOn();
      config2.setEncodeCommentsEnabled(false);
      config3.getPort();
      config1.setCharset("Helvetica");
      config3.setDescription("UTF-8");
      config4.setCharset("UTF-8");
      config1.getCss();
      config1.getLogLevel();
      config3.getDb();
      config1.setFont("UTF-8");
      config2.setMeta("UTF-8");
      assertNull(config2.getConnectionPropertiesFile());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.2508570947192676
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (-659), 3);
      foreignKeyConstraint0.getDeleteRuleName();
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Restrict delete", string0);
      assertEquals((-659), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5103090061340354
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Cascade on delete:\n Deletion of parent deletes child", 144, 1054);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "t7RbcHb6", 144, (-1285));
      foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
      int int0 = foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
      assertEquals(144, foreignKeyConstraint1.getUpdateRule());
      assertEquals((-1285), foreignKeyConstraint1.getDeleteRule());
      assertEquals(17, int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.7186438010844762
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "[39,!WjC", 147, 147);
      byte[] byteArray0 = new byte[5];
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "\"8xiY6{pIGBxyvr", 11, 11);
      foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "[39,!WjC", 11, (byte)0);
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo(foreignKeyConstraint2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@`M{|Y(]rEUMvUEq");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"+<o]j%2");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 1279, 2);
      foreignKeyConstraint0.isNullOnDelete();
      Config config0 = Config.getInstance();
      assertFalse(config0.isDbHelpRequired());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "PU<RW6t[5-I!PCx4v", 7, 7);
      foreignKeyConstraint0.addChildColumn((TableColumn) null);
      Config config0 = Config.getInstance();
      assertFalse(config0.isHelpRequired());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.6052468509647115
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "9WMp)TpZ}XaFHL9:o'x");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "9WMp)TpZ}XaFHL9:o'x");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "'jxbF Ec{N!kt*1'>T", 40, (-30));
      Config config0 = new Config();
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleName();
      int int0 = foreignKeyConstraint0.getDeleteRule();
      assertEquals((-30), int0);
      assertEquals(40, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TableColumn tableColumn0 = null;
      List<TableColumn> list0 = null;
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint((TableColumn) null, (TableColumn) null, (-1924), (-1924));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }
}
