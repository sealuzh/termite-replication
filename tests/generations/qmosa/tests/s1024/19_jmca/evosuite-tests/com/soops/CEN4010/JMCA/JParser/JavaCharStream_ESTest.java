/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 10:41:09 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.FilterInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockRandomAccessFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)6;
      byte byte0 = (byte)44;
      byteArray0[1] = (byte)44;
      int int0 = (-1390);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1390), 2466);
      int int1 = (-1);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1), (-1));
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.571362521306254
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 5);
      javaCharStream0.backup(1);
      javaCharStream0.adjustBeginLineColumn(5, 27);
      javaCharStream0.getEndColumn();
      javaCharStream0.BeginToken();
      MockFile mockFile0 = new MockFile("");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)12;
      byteArray0[2] = (byte)12;
      byteArray0[3] = (byte) (-66);
      byteArray0[4] = (byte)12;
      byteArray0[2] = (byte)12;
      byteArray0[6] = (byte) (-66);
      byteArray0[7] = (byte)12;
      byteArray0[8] = (byte)12;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream1.readChar();
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6024679790977038
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      StringReader stringReader1 = new StringReader("1");
      StringReader stringReader2 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, (-1), (-1));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.85945955364068
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&Ef2|");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup((-1834));
      javaCharStream0.adjustBeginLineColumn((-1324), (-1834));
      javaCharStream0.getEndColumn();
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      stringReader0.reset();
      PipedInputStream pipedInputStream0 = new PipedInputStream(1561);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)6;
      javaCharStream0.backup((byte)6);
      javaCharStream0.adjustBeginLineColumn((byte)6, (-174));
      javaCharStream0.getEndColumn();
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getEndLine();
      javaCharStream0.FillBuff();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getLine();
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.9917346275672405
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 1650);
      javaCharStream0.AdjustBuffSize();
      char[] charArray0 = javaCharStream0.nextCharBuf;
      javaCharStream0.maxNextCharInd = 4096;
      javaCharStream0.backup(1);
      javaCharStream0.adjustBeginLineColumn(12, 12);
      javaCharStream0.getEndColumn();
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getEndLine();
      javaCharStream0.FillBuff();
      javaCharStream0.BeginToken();
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.8472883508124011
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader("L<");
      int int0 = 68;
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 68, 68, 68);
      javaCharStream0.GetSuffix(68);
      char char0 = '=';
      javaCharStream0.ReadByte();
      stringReader0.ready();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.2879917301334416
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 1650);
      String string0 = javaCharStream0.GetImage();
      char[] charArray0 = javaCharStream0.GetSuffix(1650);
      javaCharStream0.getBeginColumn();
      javaCharStream0.getBeginColumn();
      javaCharStream0.tokenBegin = 102;
      javaCharStream0.backup(12);
      javaCharStream0.adjustBeginLineColumn((-441), 92);
      StringReader stringReader1 = new StringReader(string0);
      stringReader1.read(charArray0, 1650, 0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.3098849832717785
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 1650);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      char[] charArray0 = javaCharStream0.nextCharBuf;
      javaCharStream0.maxNextCharInd = 4096;
      javaCharStream0.bufsize = 1;
      javaCharStream0.backup(1);
      javaCharStream0.adjustBeginLineColumn(12, 12);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.637570714420144
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      StringReader stringReader1 = new StringReader("");
      stringReader0.ready();
      stringReader1.skip(142);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 142, (-1686));
      javaCharStream0.getBeginColumn();
      javaCharStream0.adjustBeginLineColumn(2487, (-2983));
      StringReader stringReader2 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader0, (-2030), (-1421), 0);
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(3262, (-2983));
      javaCharStream0.AdjustBuffSize();
      stringReader0.mark(142);
      stringReader1.ready();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      javaCharStream0.getBeginLine();
      javaCharStream0.BeginToken();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.adjustBeginLineColumn(74, (-2710));
      javaCharStream0.getBeginColumn();
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.5709195237181253
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.tokenBegin = 1958;
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), 1958);
      javaCharStream0.AdjustBuffSize();
      javaCharStream1.GetImage();
      char[] charArray0 = javaCharStream1.nextCharBuf;
      javaCharStream0.backup((-2274));
      javaCharStream0.adjustBeginLineColumn(12, 66);
      // Undeclared exception!
      try { 
        javaCharStream1.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.032021804457894
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 4071);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      char[] charArray0 = javaCharStream0.nextCharBuf;
      javaCharStream0.maxNextCharInd = 4096;
      javaCharStream0.backup(1);
      javaCharStream0.adjustBeginLineColumn(12, 12);
      javaCharStream0.getEndColumn();
      javaCharStream0.readChar();
      javaCharStream0.prevCharIsLF = true;
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getEndLine();
      javaCharStream0.FillBuff();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      JavaCharStream.hexval('D');
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.93632345194017
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 1650);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      char[] charArray0 = javaCharStream0.nextCharBuf;
      javaCharStream0.maxNextCharInd = 4096;
      javaCharStream0.backup(1);
      javaCharStream0.adjustBeginLineColumn(12, 12);
      javaCharStream0.getEndColumn();
      javaCharStream0.readChar();
      javaCharStream0.prevCharIsLF = false;
      javaCharStream0.ReInit((Reader) stringReader0, 3, 12);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.adjustBeginLineColumn((-773), 12);
      javaCharStream0.ReInit((Reader) stringReader0, 12, (-773), 4096);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.5802615437584313
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int int0 = 1958;
      javaCharStream0.tokenBegin = 1958;
      javaCharStream0.GetImage();
      int int1 = 1561;
      StringReader stringReader1 = new StringReader("");
      stringReader1.reset();
      PipedInputStream pipedInputStream0 = new PipedInputStream(1958);
      javaCharStream0.AdjustBuffSize();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-80);
      byteArray0[1] = (byte)49;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)74;
      byteArray0[4] = (byte) (-35);
      byteArray0[5] = (byte)86;
      byteArray0[6] = (byte)58;
      byteArray0[7] = (byte)7;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.7344963800144635
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 1650);
      String string0 = javaCharStream0.GetImage();
      char[] charArray0 = javaCharStream0.GetSuffix(1650);
      javaCharStream0.getBeginColumn();
      javaCharStream0.getBeginColumn();
      javaCharStream0.tokenBegin = 102;
      javaCharStream0.backup(12);
      javaCharStream0.adjustBeginLineColumn((-441), 92);
      StringReader stringReader1 = new StringReader(string0);
      stringReader1.read(charArray0, 1650, 0);
      javaCharStream0.ReInit((Reader) stringReader1, 78, 5);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.adjustBeginLineColumn(86, 18);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.6861089540153427
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 53, (-1814));
      javaCharStream0.line = (-1814);
      javaCharStream0.available = 62;
      javaCharStream0.maxNextCharInd = 53;
      javaCharStream0.adjustBeginLineColumn(9, 12);
      int int0 = (-2517);
      char[] charArray0 = new char[3];
      charArray0[0] = 'N';
      charArray0[1] = '.';
      charArray0[2] = 'G';
      javaCharStream0.buffer = charArray0;
      stringReader0.close();
      javaCharStream0.prevCharIsLF = false;
      javaCharStream0.adjustBeginLineColumn((-2507), (-2517));
      javaCharStream0.BeginToken();
      JavaCharStream.hexval('F');
      stringReader0.markSupported();
      javaCharStream0.getLine();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.4484374556139175
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader("9#P@0Kt}]17L.-=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-93), (-93));
      javaCharStream0.FillBuff();
      char[] charArray0 = new char[8];
      charArray0[0] = 'u';
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      charArray0[1] = 'y';
      charArray0[2] = ')';
      charArray0[3] = '}';
      charArray0[4] = '*';
      charArray0[5] = '.';
      charArray0[6] = 'K';
      charArray0[7] = '9';
      stringReader0.read(charArray0);
      javaCharStream0.BeginToken();
      javaCharStream0.getColumn();
      javaCharStream0.getLine();
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, (-1), (-93), (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.043305204192173
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      JavaCharStream.hexval('a');
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-79);
      byteArray0[3] = (byte) (-79);
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (byte) (-79), (byte)0);
      javaCharStream0.GetImage();
      PipedInputStream pipedInputStream0 = new PipedInputStream(10);
      javaCharStream0.backup((-4919));
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, 598, 74);
      JavaCharStream javaCharStream2 = new JavaCharStream(pipedInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream2.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{9an| }wzG}");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{9an| }wzG}");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream.hexval('4');
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.5035870903352846
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      int int0 = 3;
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 1650);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      char[] charArray0 = javaCharStream0.nextCharBuf;
      javaCharStream0.maxNextCharInd = (-2267);
      javaCharStream0.backup(1);
      javaCharStream0.adjustBeginLineColumn(12, 12);
      javaCharStream0.getEndColumn();
      javaCharStream0.readChar();
      StringReader stringReader1 = new StringReader("");
      stringReader1.ready();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      stringReader0.ready();
      javaCharStream0.getBeginLine();
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      JavaCharStream.hexval('A');
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.9682746427807576
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader(">s6F1%,]@V7g%~'4?");
      stringReader0.ready();
      int int0 = 1830;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1830, 1830, 1830);
      javaCharStream0.readChar();
      char[] charArray0 = new char[0];
      javaCharStream0.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.8472883508124011
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2!:\rc,Wy&?)@+B]");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.tokenBegin = (-1);
      javaCharStream0.ReadByte();
      JavaCharStream.hexval('2');
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-34);
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte) (-44);
      byteArray0[3] = (byte)67;
      try { 
        pipedOutputStream0.write(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "GD}>zPHIT2VcF.");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.4918660948739286
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 1650);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(1650);
      javaCharStream0.prevCharIsCR = true;
      StringReader stringReader1 = new StringReader("GD}>zPHIT2VcF.");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1, 1, 101);
      javaCharStream0.readChar();
      javaCharStream0.AdjustBuffSize();
      javaCharStream1.bufline = null;
      // Undeclared exception!
      try { 
        javaCharStream1.getEndLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.357285019952196
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5 @Z}Wn");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.tokenBegin = 1945;
      javaCharStream0.AdjustBuffSize();
      StringReader stringReader1 = new StringReader("[:");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1, (-2458), 80);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1945
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      char char0 = ':';
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.6024679790977038
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);
      MockFileInputStream mockFileInputStream1 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(mockFileInputStream1);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream1, 0, 1945, 0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.2374258890627838
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader("}-SvOb");
      stringReader0.ready();
      stringReader0.ready();
      stringReader0.ready();
      stringReader0.skip(142);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4083, 142);
      javaCharStream0.ReInit((Reader) stringReader0, 79, 4083);
      javaCharStream0.getBeginColumn();
      javaCharStream0.adjustBeginLineColumn(4083, 4083);
      assertEquals(4083, javaCharStream0.getBeginColumn());
      
      StringReader stringReader1 = new StringReader("}-SvOb");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = JavaCharStream.hexval('e');
      assertEquals(14, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      char char0 = 'E';
      JavaCharStream.hexval('E');
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = "";
      String string1 = "";
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.7035025055515347
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      int int0 = 3;
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 1650);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      char[] charArray0 = javaCharStream0.nextCharBuf;
      javaCharStream0.maxNextCharInd = (-2267);
      javaCharStream0.backup(1);
      javaCharStream0.adjustBeginLineColumn(12, 12);
      javaCharStream0.getEndColumn();
      javaCharStream0.readChar();
      StringReader stringReader1 = new StringReader("");
      stringReader1.ready();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      javaCharStream0.getBeginLine();
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.7435469755999078
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)91;
      byteArray0[1] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("lr(wl");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-633), (-633), 2317);
      javaCharStream0.AdjustBuffSize();
      stringReader0.read();
      JavaCharStream.hexval('9');
      javaCharStream0.GetImage();
      javaCharStream0.nextCharInd = 82;
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((-3011), (byte)91);
      assertEquals(91, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      char char0 = '\\';
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      JavaCharStream.hexval('3');
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)12;
      byteArray0[2] = (byte)12;
      byteArray0[2] = (byte)12;
      Enumeration<FilterInputStream> enumeration1 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      StringReader stringReader0 = new StringReader("");
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.1766453509367873
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ny=-qDw!I\"woP;rw");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)47;
      byteArray0[2] = (byte)12;
      byteArray0[3] = (byte)12;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark(2232);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.readChar();
      int int0 = javaCharStream0.getColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.6893764365838804
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 5);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(5);
      javaCharStream0.backup(1);
      javaCharStream0.adjustBeginLineColumn(5, 27);
      javaCharStream0.getEndColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.getBeginLine();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(5, 5);
      assertEquals(5, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      JavaCharStream.hexval('b');
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-79);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-79);
      byteArray0[3] = (byte) (-79);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-79);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 11);
      byte[] byteArray1 = null;
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      int int0 = (-3077);
      PushbackInputStream pushbackInputStream1 = null;
      try {
        pushbackInputStream1 = new PushbackInputStream(byteArrayInputStream0, (-3077));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = JavaCharStream.hexval('C');
      assertEquals(12, int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.678853945244345
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1650, 195);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(195);
      javaCharStream0.getBeginColumn();
      javaCharStream0.getBeginColumn();
      javaCharStream0.backup(1523);
      javaCharStream0.adjustBeginLineColumn(58, 2122);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.FillBuff();
      javaCharStream0.GetSuffix(195);
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.6024679790977038
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      StringReader stringReader1 = new StringReader("1");
      StringReader stringReader2 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, (-1), 4056);
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "\\&Efh2|";
      char char0 = 'H';
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.3701629440042704
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^TPGL(M1#LF");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 1650);
      javaCharStream0.GetSuffix(1650);
      javaCharStream0.getBeginColumn();
      javaCharStream0.getBeginColumn();
      javaCharStream0.adjustBeginLineColumn((-441), 333);
      javaCharStream0.GetSuffix(1650);
      javaCharStream0.tokenBegin = (-1437);
      javaCharStream0.readChar();
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.948720592834763
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      StringReader stringReader0 = new StringReader("UGt&u}Y");
      char[] charArray0 = new char[1];
      charArray0[0] = 'o';
      stringReader0.read(charArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-975), (-975), 2);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.Done();
      javaCharStream0.column = 2;
      stringReader0.markSupported();
      CharBuffer charBuffer0 = CharBuffer.allocate(2);
      stringReader0.read(charBuffer0);
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn((-975), 1128);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.2904036799236893
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StringReader stringReader0 = new StringReader("k1iu81^)4\"U\"'~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetSuffix(0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      javaCharStream0.GetSuffix(56);
      javaCharStream0.backup(2036);
      javaCharStream0.adjustBeginLineColumn((-1616), (byte) (-48));
      javaCharStream0.getEndColumn();
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      javaCharStream0.getEndColumn();
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, (-1616), 85, 94);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.069602947500415
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^TPGL(M1#LF");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 1650);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(57);
      javaCharStream0.getBeginColumn();
      javaCharStream0.getBeginColumn();
      javaCharStream0.backup(1511);
      javaCharStream0.adjustBeginLineColumn(1650, (-1));
      JavaCharStream javaCharStream1 = null;
      try {
        javaCharStream1 = new JavaCharStream((InputStream) null, 12, 12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      JavaCharStream.hexval('D');
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.4503032277039147
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 1650);
      javaCharStream0.GetImage();
      char[] charArray0 = javaCharStream0.nextCharBuf;
      javaCharStream0.backup(1);
      javaCharStream0.adjustBeginLineColumn(12, 12);
      javaCharStream0.getEndColumn();
      javaCharStream0.readChar();
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = 1650;
      intArray0[2] = 12;
      intArray0[3] = (int) '\u0000';
      intArray0[4] = 12;
      javaCharStream0.bufline = intArray0;
      javaCharStream0.GetImage();
      javaCharStream0.getEndColumn();
      javaCharStream0.getBeginLine();
      javaCharStream0.getBeginLine();
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.7228633188136664
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 1650);
      javaCharStream0.GetImage();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte) (-99);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-1), (-1), 71);
      javaCharStream1.getBeginColumn();
      javaCharStream1.getBeginColumn();
      javaCharStream1.backup(12);
      javaCharStream0.adjustBeginLineColumn(89, 1650);
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream2.readChar();
      javaCharStream1.BeginToken();
      int int0 = javaCharStream0.getBeginLine();
      assertEquals(90, int0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      JavaCharStream.hexval('c');
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = "";
      String string1 = "";
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.628600373284409
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 1650);
      String string0 = javaCharStream0.GetImage();
      char[] charArray0 = javaCharStream0.GetSuffix(1650);
      javaCharStream0.backup(1);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.AdjustBuffSize();
      javaCharStream1.adjustBeginLineColumn(12, 12);
      StringReader stringReader1 = new StringReader(string0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "GD}>zPHIT2VcF.");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1, 1, 12, 1);
      javaCharStream2.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream2.readChar();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      char char0 = '>';
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      char char0 = 'R';
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.698363703027583
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 1650);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      javaCharStream0.getBeginColumn();
      javaCharStream0.adjustBeginLineColumn((-1), 60);
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("}a8}C~gz)");
      javaCharStream0.ReInit((Reader) stringReader2, 3, (-1421), 4096);
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(3, 4096);
      javaCharStream0.AdjustBuffSize();
      stringReader1.mark(4096);
      stringReader0.ready();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      javaCharStream0.getBeginLine();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((-1421), 2080);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      JavaCharStream.hexval('1');
      StringReader stringReader0 = new StringReader("");
      stringReader0.ready();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)12;
      byteArray0[2] = (byte)12;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 92);
      PushbackInputStream pushbackInputStream1 = null;
      try {
        pushbackInputStream1 = new PushbackInputStream(sequenceInputStream0, (-716));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^TPGL(M1#LF");
      stringReader0.ready();
      int int0 = JavaCharStream.hexval('d');
      assertEquals(13, int0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      JavaCharStream.hexval('0');
      StringReader stringReader0 = new StringReader("1Rv(i8");
      byte[] byteArray0 = null;
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("Invalid escape character at line ");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.901773211243061
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringReader stringReader0 = new StringReader("1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4056, 327, 102);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(327, javaCharStream0.getBeginColumn());
      assertEquals('1', char0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      String string0 = "ny=-qDw!I\"woP;rw";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ny=-qDw!I\"woP;rw");
      StringReader stringReader0 = new StringReader("ny=-qDw!I\"woP;rw");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 13, 13, 13);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.5068077022515487
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 1650);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(1650);
      javaCharStream0.getBeginColumn();
      javaCharStream0.getBeginColumn();
      javaCharStream0.backup(12);
      javaCharStream0.adjustBeginLineColumn((-441), 333);
      javaCharStream0.getEndColumn();
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      int int0 = javaCharStream0.getEndLine();
      assertEquals((-441), javaCharStream0.getBeginLine());
      assertEquals((-441), int0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.3875713308232855
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2844, 8);
      javaCharStream0.AdjustBuffSize();
      char[] charArray0 = new char[4];
      charArray0[0] = 'z';
      stringReader0.reset();
      charArray0[1] = 'f';
      charArray0[2] = 'O';
      charArray0[3] = 'c';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      javaCharStream0.GetImage();
      char[] charArray1 = javaCharStream0.nextCharBuf;
      javaCharStream0.backup(4);
      javaCharStream0.adjustBeginLineColumn(1, (-1));
      javaCharStream0.getEndColumn();
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      javaCharStream0.getEndColumn();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      javaCharStream1.adjustBeginLineColumn((-1), 12);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.5557158860892875
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, (-898));
      javaCharStream0.GetImage();
      stringReader0.mark(71);
      char[] charArray0 = javaCharStream0.buffer;
      javaCharStream0.prevCharIsCR = true;
      StringReader stringReader1 = new StringReader("GD}>zPHIT2VcF.");
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader2 = new StringReader("GD}>zPHIT2VcF.");
      javaCharStream0.ExpandBuff(true);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pushbackInputStream0, 71);
      javaCharStream0.getBeginColumn();
      try { 
        pushbackInputStream0.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      String string0 = "k1iu81^)4\"U\"'~";
      JavaCharStream.hexval('8');
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "k1iu81^)4\"U\"'~");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      PushbackInputStream pushbackInputStream0 = null;
      try {
        pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, (-386));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ny=-qDw!I\"Doew");
      StringReader stringReader0 = new StringReader("rfKN(^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(0, 6);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      JavaCharStream.hexval('7');
      byte byte0 = (byte) (-113);
      byte byte1 = (byte) (-20);
      ByteArrayInputStream byteArrayInputStream0 = null;
      try {
        byteArrayInputStream0 = new ByteArrayInputStream((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 973, 973, (-803));
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      JavaCharStream.hexval('B');
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Mf=");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Mf=");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)12;
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.1842778269052143
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("&Efh2|");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6119, 6119);
      javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      
      StringReader stringReader1 = new StringReader("f!1W.9Lktdt\"O%_");
      StringReader stringReader2 = new StringReader("Yb)^i(aa");
      stringReader2.markSupported();
      stringReader0.close();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, 3598, 0);
      char char0 = javaCharStream1.readChar();
      assertEquals('Y', char0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.176645350936787
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.read();
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("b.plMMj");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 4086, 4056);
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix(4056);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.977500522076773
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      StringReader stringReader1 = new StringReader("1");
      StringReader stringReader2 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, (-1), 4056);
      javaCharStream0.prevCharIsLF = true;
      javaCharStream0.inBuf = (-1);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.718583122876526
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      StringReader stringReader1 = new StringReader("");
      stringReader1.ready();
      stringReader1.ready();
      stringReader1.skip(142);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 142, 6108);
      javaCharStream0.getBeginColumn();
      javaCharStream0.adjustBeginLineColumn(0, 6140);
      StringReader stringReader2 = new StringReader("");
      int int0 = 1245;
      javaCharStream0.ReInit((Reader) stringReader2, 1245, 4083, 0);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.105231238437596
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ny=-qDw!I\"woP;rw");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)47;
      byteArray0[2] = (byte)12;
      byteArray0[3] = (byte) (-66);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.prevCharIsCR = false;
      javaCharStream0.readChar();
      char char0 = javaCharStream0.readChar();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('/', char0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.4904032277870636
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)12;
      byteArray0[4] = (byte) (-38);
      byteArray0[6] = (byte)121;
      byteArray0[7] = (byte)92;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 101, (byte)12);
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.4290497000997116
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 1650);
      javaCharStream0.GetImage();
      javaCharStream0.prevCharIsCR = true;
      StringReader stringReader1 = new StringReader("GD}>zPHIT2VcF.");
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader2 = new StringReader("GD}>zPHIT2VcF.");
      javaCharStream0.BeginToken();
      PipedInputStream pipedInputStream1 = new PipedInputStream(3179);
      javaCharStream0.ExpandBuff(false);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pushbackInputStream0, 71);
      try { 
        pushbackInputStream0.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'O-NAY7n]*MjipL");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4056, 4089);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('O', char0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.639247863267104
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      StringReader stringReader1 = new StringReader("");
      stringReader0.ready();
      stringReader1.skip(142);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 142, (-1686));
      javaCharStream0.getBeginColumn();
      javaCharStream0.adjustBeginLineColumn(2487, (-2983));
      StringReader stringReader2 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader0, (-2030), (-1421), 0);
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(3262, (-2983));
      javaCharStream0.AdjustBuffSize();
      stringReader0.mark(142);
      stringReader1.ready();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      javaCharStream0.getBeginLine();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(74, (-2710));
      javaCharStream0.BeginToken();
      javaCharStream0.UpdateLineColumn('^');
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.703142576781552
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 5);
      javaCharStream0.backup(1);
      javaCharStream0.adjustBeginLineColumn(5, 27);
      javaCharStream0.getEndColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.getLine();
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      assertEquals(28, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.4239953010772726
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 1650);
      javaCharStream0.AdjustBuffSize();
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      javaCharStream0.GetImage();
      char[] charArray1 = javaCharStream0.nextCharBuf;
      javaCharStream0.backup(1);
      javaCharStream0.adjustBeginLineColumn(12, 12);
      javaCharStream0.getEndColumn();
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      javaCharStream0.getEndColumn();
      javaCharStream0.adjustBeginLineColumn((-3069), 0);
      javaCharStream0.getBeginLine();
      javaCharStream0.getBeginLine();
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      JavaCharStream.hexval('5');
      byte byte0 = (byte)3;
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile("", "kl8L^");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"kl8L^\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.3128868859883
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 3, 3, 3);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-97);
      byteArray0[2] = (byte)82;
      byteArray0[3] = (byte) (-88);
      byteArray0[4] = (byte)69;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)89;
      byteArray0[7] = (byte) (-108);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-727), (byte) (-97));
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      javaCharStream0.ReInit((InputStream) dataInputStream0, (int) (byte)69, 77);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.8472883508124011
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2!:\rc,Wy&?)@+B]");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.tokenBegin = (-1);
      javaCharStream0.ReadByte();
      try { 
        JavaCharStream.hexval('n');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.746831485658561
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.adjustBeginLineColumn((-1221), 2048);
      javaCharStream0.getBeginLine();
      javaCharStream0.ExpandBuff(false);
      assertEquals((-1220), javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.4012197931696337
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 1650);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(1650);
      javaCharStream0.getBeginColumn();
      javaCharStream0.getBeginColumn();
      javaCharStream0.backup(12);
      javaCharStream0.adjustBeginLineColumn((-441), 92);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getBeginLine();
      assertEquals(4085, javaCharStream0.bufpos);
      assertEquals((-441), int0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&Efh2|");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginLine();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.471056783274114
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 1650);
      javaCharStream0.AdjustBuffSize();
      char[] charArray0 = new char[0];
      javaCharStream0.GetImage();
      char[] charArray1 = javaCharStream0.nextCharBuf;
      javaCharStream0.backup(1);
      javaCharStream0.adjustBeginLineColumn(12, 12);
      javaCharStream0.getEndColumn();
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      javaCharStream0.getEndColumn();
      javaCharStream0.getBeginLine();
      javaCharStream0.getBeginLine();
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int int0 = 1958;
      javaCharStream0.tokenBegin = 1958;
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ny=-qDw!I\"woP;rw");
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-904), 4094);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      StringReader stringReader0 = new StringReader("J-=K ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char char0 = javaCharStream0.ReadByte();
      assertEquals('J', char0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.157280995708096
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 4056, (-1));
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-66);
      byteArray0[1] = (byte)12;
      byteArray0[2] = (byte)47;
      byteArray0[3] = (byte)47;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)47;
      byteArray0[6] = (byte)47;
      byteArray0[7] = (byte)47;
      byteArray0[8] = (byte) (-66);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('\uFFFD', char0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringReader stringReader0 = new StringReader("uH`t S@y{Ki3x");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 5);
      javaCharStream0.ReadByte();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      char char0 = 'Y';
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      mockFileInputStream0.close();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);
      String string0 = "dlLDx1v`6~`";
      int int0 = 165;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 165, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.948720592834763
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4017, 4089);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)12;
      byteArray0[4] = (byte) (-38);
      byte byte0 = (byte) (-58);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-38), 782, (byte)0);
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.ready();
      StringReader stringReader1 = new StringReader("'Z|iM@kz0^L!U&b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 0, 504);
      javaCharStream0.GetSuffix(0);
      javaCharStream0.getBeginColumn();
      StringReader stringReader2 = new StringReader("Hl#dZXWmCbG");
      javaCharStream0.ReInit((Reader) stringReader1, 4094, 4094, 1);
      PipedInputStream pipedInputStream0 = new PipedInputStream(4071);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 1, 4, 1);
      StringReader stringReader0 = new StringReader("cGuXKD@#Na,");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1, 1);
      String string0 = javaCharStream0.GetImage();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, string0);
      javaCharStream0.ReInit((InputStream) pushbackInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0);
      try { 
        pushbackInputStream0.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&Ef2|");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup((-1834));
      javaCharStream0.GetImage();
      int int0 = (-1);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.8184506609563127
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&Ef2|");
      stringReader0.reset();
      PipedInputStream pipedInputStream0 = new PipedInputStream(1561);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)6;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.adjustBeginLineColumn((byte) (-1), (byte)6);
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ExpandBuff(false);
      assertEquals(6, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      char char0 = 'K';
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.7189327281765374
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 1650);
      javaCharStream0.AdjustBuffSize();
      char[] charArray0 = javaCharStream0.nextCharBuf;
      javaCharStream0.maxNextCharInd = 4096;
      javaCharStream0.backup(1);
      javaCharStream0.adjustBeginLineColumn(12, 12);
      javaCharStream0.getEndColumn();
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getEndLine();
      javaCharStream0.FillBuff();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.AdjustBuffSize();
      assertEquals(1, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.7154341522394483
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 1650);
      javaCharStream0.AdjustBuffSize();
      char[] charArray0 = javaCharStream0.nextCharBuf;
      javaCharStream0.maxNextCharInd = 4096;
      javaCharStream0.backup(1);
      javaCharStream0.getEndColumn();
      javaCharStream0.readChar();
      javaCharStream0.prevCharIsLF = false;
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getEndLine();
      javaCharStream0.FillBuff();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.ExpandBuff(true);
      assertEquals(8193, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.7052881042697368
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&Ef2|");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup((-1834));
      javaCharStream0.adjustBeginLineColumn((-1324), (-1834));
      javaCharStream0.getEndColumn();
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      PipedInputStream pipedInputStream0 = new PipedInputStream(1561);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      bufferedInputStream0.mark((-1834));
      BufferedInputStream bufferedInputStream1 = null;
      try {
        bufferedInputStream1 = new BufferedInputStream(pipedInputStream1, (-613));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.577487668217304
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 5);
      javaCharStream0.backup(0);
      javaCharStream0.adjustBeginLineColumn(5, 27);
      javaCharStream0.getEndColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.getLine();
      char char0 = javaCharStream0.readChar();
      assertEquals(28, javaCharStream0.getBeginColumn());
      assertEquals('D', char0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.0167236230630898
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      JavaCharStream.hexval('f');
      StringReader stringReader0 = new StringReader("~\"Py BTn?,~tnf");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4093, 4086);
      javaCharStream0.ReadByte();
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      javaCharStream0.bufpos = 3260;
      byteArray0[1] = (byte) (-113);
      byteArray0[2] = (byte) (-20);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.580660392300617
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      StringReader stringReader1 = new StringReader("");
      stringReader0.ready();
      stringReader1.skip(142);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 142, (-1686));
      javaCharStream0.getBeginColumn();
      javaCharStream0.adjustBeginLineColumn(2487, (-2983));
      StringReader stringReader2 = new StringReader("");
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(3262, (-2983));
      javaCharStream0.AdjustBuffSize();
      stringReader0.mark(142);
      stringReader1.ready();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      bufferedInputStream0.close();
      javaCharStream0.getBeginLine();
      javaCharStream0.BeginToken();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-2030));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      int int0 = 4056;
      StringReader stringReader1 = new StringReader("1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)91;
      byteArray0[1] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-3505), 712);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.0287375017310743
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1361), 488);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('Z');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.7918951054147492
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      char char0 = 'f';
      JavaCharStream.hexval('f');
      String string0 = "~\"Py BTn?,~tnf";
      StringReader stringReader0 = new StringReader("~\"Py BTn?,~tnf");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 15, 15);
      int int0 = (-1396);
      javaCharStream0.bufpos = (-1396);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.4466856169199285
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 1650);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(1650);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.031298644335524
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m@X+O7t.]1).%8_[4?+");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-80);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)117;
      byteArray0[4] = (byte)119;
      byteArray0[5] = (byte)51;
      byteArray0[6] = (byte) (-46);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1), 0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 3475, (int) (byte)0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (-939), 0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("&Efh2|");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-705), 84);
      javaCharStream0.GetSuffix(1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "&Efh2|");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      int int0 = 8;
      PushbackInputStream pushbackInputStream0 = null;
      try {
        pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, (-1904));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$*FI*Q2bi/FW<5Pg");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 0);
      stringReader0.reset();
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(99);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.7187423197862115
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      int int0 = 5;
      stringReader0.ready();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 1650);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(1650);
      javaCharStream0.prevCharIsCR = true;
      StringReader stringReader1 = new StringReader("GD}>zPHIT2VcF.");
      int int1 = 4091;
      PipedInputStream pipedInputStream0 = new PipedInputStream(4091);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      bufferedInputStream0.available();
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(sequenceInputStream0);
      bufferedInputStream1.available();
      bufferedInputStream0.mark(71);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream2 = null;
      try {
        pipedInputStream2 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = 1958;
      StringReader stringReader1 = new StringReader("");
      stringReader1.reset();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 53, 53, 1621);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ny=-qDw!I\"woP;rw");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('%');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip((-432L));
      stringReader0.markSupported();
      stringReader0.mark(13);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader0, 1, (-2447), (-2447));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      int int0 = 0;
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 0, 11, 11);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);
      MockFileInputStream mockFileInputStream1 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pushbackInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 0, 0, 0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.adjustBeginLineColumn(0, 0);
      assertEquals(0, javaCharStream0.getBeginLine());
      assertEquals((-1), javaCharStream0.bufpos);
      assertEquals(0, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.977500522076773
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      StringReader stringReader1 = new StringReader("B");
      stringReader0.reset();
      stringReader0.ready();
      StringReader stringReader2 = new StringReader("");
      stringReader2.read();
      stringReader2.skip((-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, (-1), 4056);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);
      MockFileInputStream mockFileInputStream1 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(mockFileInputStream1);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream1, 0, 1945, 0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.ReInit((InputStream) mockFileInputStream1, 9, (-2830), 751);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=2.770895375275602
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GD}>zPHIT2VcF.");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 5);
      String string0 = javaCharStream0.GetImage();
      char[] charArray0 = javaCharStream0.GetSuffix(5);
      javaCharStream0.getBeginColumn();
      javaCharStream0.getBeginColumn();
      javaCharStream0.tokenBegin = 102;
      javaCharStream0.adjustBeginLineColumn((-441), 92);
      StringReader stringReader1 = new StringReader(string0);
      stringReader1.read(charArray0, 5, 0);
      javaCharStream0.ReInit((Reader) stringReader1, 0, 5);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.adjustBeginLineColumn(86, 18);
      assertEquals(86, javaCharStream0.getBeginLine());
  }
}
