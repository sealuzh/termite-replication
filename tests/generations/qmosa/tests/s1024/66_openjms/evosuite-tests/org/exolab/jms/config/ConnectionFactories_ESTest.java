/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 09:58:54 GMT 2019
 */

package org.exolab.jms.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.io.Writer;
import java.util.Collection;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.exolab.castor.xml.Marshaller;
import org.exolab.jms.config.ConnectionFactories;
import org.exolab.jms.config.ConnectionFactory;
import org.exolab.jms.config.QueueConnectionFactory;
import org.exolab.jms.config.TopicConnectionFactory;
import org.exolab.jms.config.XAConnectionFactory;
import org.exolab.jms.config.XAQueueConnectionFactory;
import org.exolab.jms.config.XATopicConnectionFactory;
import org.junit.runner.RunWith;
import org.xml.sax.ContentHandler;
import org.xml.sax.HandlerBase;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.SAXParseException;
import org.xml.sax.ext.Attributes2Impl;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.ext.Locator2Impl;
import org.xml.sax.helpers.LocatorImpl;
import org.xml.sax.helpers.ParserAdapter;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConnectionFactories_ESTest extends ConnectionFactories_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.0701112223627476
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[10];
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      connectionFactories0.isValid();
      String string0 = "8[Be[727z";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "8[Be[727z");
      connectionFactories0.enumerateQueueConnectionFactory();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "8[Be[727z");
      connectionFactories0.isValid();
      connectionFactories0.clearXAQueueConnectionFactory();
      int int0 = 0;
      connectionFactories0.getXAConnectionFactoryCount();
      XAConnectionFactory[] xAConnectionFactoryArray0 = connectionFactories0.getXAConnectionFactory();
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      connectionFactories0.getTopicConnectionFactory(0);
      try { 
        connectionFactories0.setTopicConnectionFactory(1965, (TopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      String string0 = "objects of this type must match the  following regular expression: ";
      xAConnectionFactory0.setName("objects of this type must match the  following regular expression: ");
      xAConnectionFactory0.isValid();
      connectionFactories0.addXAConnectionFactory(xAConnectionFactory0);
      connectionFactories0.enumerateConnectionFactory();
      connectionFactories0.enumerateQueueConnectionFactory();
      connectionFactories0.enumerateConnectionFactory();
      connectionFactories0.getTopicConnectionFactoryCount();
      connectionFactories0.getQueueConnectionFactoryCount();
      connectionFactories0.getConnectionFactory();
      connectionFactories0.getXAConnectionFactory();
      String string1 = "";
      StringReader stringReader0 = new StringReader("");
      try { 
        TopicConnectionFactory.unmarshal(stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parsing Error : Premature end of file.
         // Line : 1
         // Column : 1
         //
         verifyException("org.exolab.castor.xml.Unmarshaller", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[18];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      connectionFactories0.removeXAQueueConnectionFactory((XAQueueConnectionFactory) null);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      SAXParseException sAXParseException0 = new SAXParseException("", locator2Impl0);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[7];
      StackTraceElement stackTraceElement0 = new StackTraceElement("", "", "Lc|SFUZg(F=2H\"", 22);
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("U0yYZwehs_F(:q", "", "", 22);
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("", "", "", 1730);
      stackTraceElementArray0[2] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("U0yYZwehs_F(:q", "", "J%2", 2193);
      stackTraceElementArray0[3] = stackTraceElement3;
      StackTraceElement stackTraceElement4 = new StackTraceElement("Lc|SFUZg(F=2H\"", "Lc|SFUZg(F=2H\"", "bJs`!V8#N[~ki.", 22);
      stackTraceElementArray0[4] = stackTraceElement4;
      StackTraceElement stackTraceElement5 = new StackTraceElement("", "org.exolab.jms.config.ConectionFactories", "]Wb64 nb_cZs3JX6b", 2739);
      stackTraceElementArray0[5] = stackTraceElement5;
      StackTraceElement stackTraceElement6 = new StackTraceElement("", "J%2", ")oYhv]", 2193);
      stackTraceElementArray0[6] = stackTraceElement6;
      xMLFilterImpl0.resolveEntity("", "#\"Ud ld}W.v8s");
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[4];
      try { 
        connectionFactories0.getConnectionFactory(13);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.6376398674083723
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.addXATopicConnectionFactory(xATopicConnectionFactory0);
      try { 
        connectionFactories0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // name is a required field.
         //
         verifyException("org.exolab.castor.xml.FieldValidator", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      char[] charArray0 = new char[5];
      char char0 = 'Q';
      String string0 = "a|sR";
      charArray0[3] = 'Q';
      char char1 = 'F';
      charArray0[0] = 'F';
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      char char2 = 'w';
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      connectionFactories0.addXAQueueConnectionFactory(xAQueueConnectionFactory0);
      charArray0[1] = 'w';
      StringWriter stringWriter2 = new StringWriter();
      stringWriter0.write((int) 'Q');
      stringWriter2.write(charArray0);
      stringWriter2.write(charArray0);
      stringWriter2.write("a|sR");
      stringWriter2.close();
      stringWriter2.write("a|sR");
      StringWriter stringWriter3 = new StringWriter('F');
      stringWriter2.close();
      try { 
        connectionFactories0.marshal((Writer) stringWriter2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // name is a required field.
         //
         verifyException("org.exolab.castor.xml.FieldValidator", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.removeXAConnectionFactory(xAConnectionFactory0);
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[1];
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.getXATopicConnectionFactoryCount();
      StackTraceElement stackTraceElement0 = null;
      try {
        stackTraceElement0 = new StackTraceElement((String) null, (String) null, "]ry%DIPbzYo\"dR-=#2d", (-268));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Declaring class is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      connectionFactories0.getXATopicConnectionFactory();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[15];
      connectionFactoryArray0[9] = connectionFactory0;
      connectionFactoryArray0[1] = connectionFactory0;
      connectionFactoryArray0[7] = connectionFactory0;
      connectionFactoryArray0[3] = connectionFactory0;
      connectionFactoryArray0[4] = connectionFactory0;
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      connectionFactories0.setConnectionFactory(0, connectionFactory0);
      int int0 = 380;
      int int1 = 8;
      try { 
        connectionFactories0.getXAConnectionFactory((-108));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[18];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      String string0 = "`0h\"2i\"7ICw+f[gi4";
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      String string1 = "";
      String string2 = "#\"Ud ld}W.v8s";
      connectionFactories0.getXAQueueConnectionFactory(8);
      try { 
        xMLFilterImpl0.setProperty("Tm@4`HjQgvs7&3wZ@e?", (Object) null);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property: Tm@4`HjQgvs7&3wZ@e?
         //
         verifyException("org.xml.sax.helpers.XMLFilterImpl", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.196664918501384
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[1];
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      queueConnectionFactory0.setName("{'8qIGTk !-n");
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[0];
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      Object object0 = new Object();
      Locale locale0 = Locale.GERMANY;
      locale0.getDisplayLanguage();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      locale0.clone();
      connectionFactories0.getXATopicConnectionFactory(0);
      connectionFactories0.setXATopicConnectionFactory(0, (XATopicConnectionFactory) null);
      Enumeration enumeration0 = connectionFactories0.enumerateQueueConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[7];
      xAConnectionFactoryArray0[0] = xAConnectionFactory0;
      xAConnectionFactoryArray0[1] = xAConnectionFactory0;
      xAConnectionFactoryArray0[2] = xAConnectionFactory0;
      xAConnectionFactoryArray0[3] = xAConnectionFactory0;
      xAConnectionFactoryArray0[4] = xAConnectionFactory0;
      xAConnectionFactoryArray0[5] = xAConnectionFactory0;
      xAConnectionFactoryArray0[6] = xAConnectionFactory0;
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      connectionFactories0.setXAConnectionFactory(0, xAConnectionFactory0);
      connectionFactories0.enumerateXATopicConnectionFactory();
      connectionFactories0.getQueueConnectionFactoryCount();
      assertEquals(7, connectionFactories0.getXAConnectionFactoryCount());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7911998103932196
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.addQueueConnectionFactory((QueueConnectionFactory) null);
      QueueConnectionFactory[] queueConnectionFactoryArray0 = connectionFactories0.getQueueConnectionFactory();
      connectionFactories0.getQueueConnectionFactory();
      connectionFactories0.getQueueConnectionFactory(0);
      QueueConnectionFactory[] queueConnectionFactoryArray1 = connectionFactories0.getQueueConnectionFactory();
      assertFalse(queueConnectionFactoryArray1.equals((Object)queueConnectionFactoryArray0));
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "h");
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "F4|7qNM!gC40<");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "F4|7qNM!gC40<");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "F4|7qNM!gC40<");
      byteArray0[0] = (byte)127;
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)127;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray1[1] = (byte)127;
      byteArray1[2] = (byte)127;
      byteArray1[3] = (byte)127;
      byteArray1[4] = (byte)127;
      byteArray1[6] = (byte)127;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byteArray1[7] = (byte)127;
      byteArray1[8] = (byte)127;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "h");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Marshaller.enableDebug = true;
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[5];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      int int0 = connectionFactories0.getConnectionFactoryCount();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      byte[] byteArray1 = new byte[9];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^6  'SN~o1t HD=G");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "^6  'SN~o1t HD=G");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^6  'SN~o1t HD=G");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "^6  'SN~o1t HD=G");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^6  'SN~o1t HD=G");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Marshaller.enableDebug = false;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[2];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      connectionFactories0.getConnectionFactory();
      assertEquals(2, connectionFactories0.getConnectionFactoryCount());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.addTopicConnectionFactory(0, topicConnectionFactory0);
      connectionFactories0.setTopicConnectionFactory(0, topicConnectionFactory0);
      int int0 = connectionFactories0.getQueueConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[18];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      connectionFactories0.getXAQueueConnectionFactory();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      Attributes2Impl attributes2Impl1 = new Attributes2Impl(attributes2Impl0);
      xMLFilterImpl0.startElement("`$/", "", "H?7cVkxk\"*u[v:", attributes2Impl1);
      xMLFilterImpl0.resolveEntity("", "#\"Ud ld}W.v8s");
      // Undeclared exception!
      try { 
        xMLFilterImpl0.parse("`0h\"2i\"7ICw+f[gi4");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No parent for filter
         //
         verifyException("org.xml.sax.helpers.XMLFilterImpl", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      byteArrayOutputStream0.close();
      byte[] byteArray0 = new byte[1];
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(byteArrayOutputStream0);
      filterOutputStream0.write(89);
      filterOutputStream0.close();
      byteArrayOutputStream0.writeTo(filterOutputStream0);
      byteArrayOutputStream0.write(byteArray0);
      byteArrayOutputStream0.close();
      byteArrayOutputStream0.write(byteArray0);
      byteArrayOutputStream0.write(byteArray0);
      byteArrayOutputStream0.write((int) (byte) (-71));
      byteArrayOutputStream0.write((int) (byte) (-71));
      byteArrayOutputStream0.write((-42));
      byteArrayOutputStream0.flush();
      byteArrayOutputStream0.reset();
      byteArrayOutputStream0.reset();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, true);
      ByteArrayOutputStream byteArrayOutputStream1 = new ByteArrayOutputStream((byte)57);
      byteArrayOutputStream1.write(byteArray0);
      byteArrayOutputStream1.write(byteArray0);
      byteArrayOutputStream1.flush();
      byteArrayOutputStream1.flush();
      byteArrayOutputStream1.writeTo(byteArrayOutputStream0);
      byteArrayOutputStream0.reset();
      byteArrayOutputStream1.flush();
      byteArrayOutputStream0.reset();
      byteArrayOutputStream0.write(byteArray0, 0, 0);
      byteArrayOutputStream1.reset();
      byteArrayOutputStream0.close();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.addXATopicConnectionFactory(0, xATopicConnectionFactory0);
      XAConnectionFactory[] xAConnectionFactoryArray0 = connectionFactories0.getXAConnectionFactory();
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      assertEquals(1, connectionFactories0.getXATopicConnectionFactoryCount());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(93);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, false);
      Locale locale0 = Locale.CHINA;
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      queueConnectionFactory0.isValid();
      queueConnectionFactory0.setName((String) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[5];
      queueConnectionFactoryArray0[0] = queueConnectionFactory0;
      queueConnectionFactoryArray0[1] = queueConnectionFactory0;
      queueConnectionFactoryArray0[2] = queueConnectionFactory0;
      queueConnectionFactoryArray0[3] = queueConnectionFactory0;
      queueConnectionFactoryArray0[4] = queueConnectionFactory0;
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      MockPrintStream mockPrintStream1 = new MockPrintStream("P0");
      MockPrintStream mockPrintStream2 = new MockPrintStream(byteArrayOutputStream0, false);
      mockPrintStream2.print(2203);
      mockPrintStream1.println(2246.9);
      connectionFactories0.removeQueueConnectionFactory(queueConnectionFactory0);
      MockPrintStream mockPrintStream3 = new MockPrintStream(mockPrintStream2, false);
      mockPrintStream1.print((long) (byte) (-1));
      mockPrintStream1.format("P0", (Object[]) queueConnectionFactoryArray0);
      MockPrintStream mockPrintStream4 = new MockPrintStream(mockPrintStream1);
      MockPrintStream mockPrintStream5 = null;
      try {
        mockPrintStream5 = new MockPrintStream("{'8qIGTk !-n", "^IM0");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // ^IM0
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory1 = new QueueConnectionFactory();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[6];
      QueueConnectionFactory queueConnectionFactory2 = new QueueConnectionFactory();
      queueConnectionFactoryArray0[1] = queueConnectionFactory2;
      queueConnectionFactory1.setName("{'8qIGTk !-n");
      queueConnectionFactoryArray0[3] = queueConnectionFactory0;
      queueConnectionFactoryArray0[4] = queueConnectionFactory1;
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[4] = (byte) (-1);
      MockPrintStream mockPrintStream0 = new MockPrintStream("q");
      mockPrintStream0.print((int) (byte) (-1));
      mockPrintStream0.println(2246.9);
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0, false);
      mockPrintStream0.println('H');
      mockPrintStream1.format("q", (Object[]) queueConnectionFactoryArray0);
      MockPrintStream mockPrintStream2 = new MockPrintStream(mockPrintStream1);
      QueueConnectionFactory queueConnectionFactory3 = new QueueConnectionFactory();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      connectionFactories0.setQueueConnectionFactory((int) (byte)0, queueConnectionFactory3);
      connectionFactories0.getXAQueueConnectionFactoryCount();
      assertEquals(6, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.0141266108053313
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory1 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[7];
      FileSystemHandling.shouldAllThrowIOExceptions();
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[1] = xAQueueConnectionFactory0;
      xAQueueConnectionFactory1.isValid();
      xAQueueConnectionFactoryArray0[2] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[3] = xAQueueConnectionFactory1;
      xAQueueConnectionFactoryArray0[4] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[5] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[6] = xAQueueConnectionFactory0;
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      connectionFactories0.setXAQueueConnectionFactory(0, xAQueueConnectionFactory1);
      connectionFactories0.getXAQueueConnectionFactoryCount();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[7];
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactoryArray0[0] = connectionFactory0;
      ConnectionFactory connectionFactory1 = new ConnectionFactory();
      connectionFactoryArray0[1] = connectionFactory1;
      try { 
        connectionFactories0.getConnectionFactory(536);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[10];
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      HandlerBase handlerBase0 = new HandlerBase();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      xMLReaderAdapter1.setErrorHandler(handlerBase0);
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      HandlerBase handlerBase1 = new HandlerBase();
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter();
      xMLReaderAdapter4.setErrorHandler(handlerBase0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter4);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(parserAdapter0);
      xMLReaderAdapter1.skippedEntity("JVWz[9Sj\"xJQT\"(Ak");
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter(parserAdapter1);
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter7 = new XMLReaderAdapter();
      xMLReaderAdapter1.startDocument();
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter3);
      xMLFilterImpl0.setErrorHandler(xMLFilterImpl0);
      XMLReaderAdapter xMLReaderAdapter8 = new XMLReaderAdapter(xMLFilterImpl0);
      XMLReaderAdapter xMLReaderAdapter9 = new XMLReaderAdapter();
      ParserAdapter parserAdapter3 = new ParserAdapter(xMLReaderAdapter9);
      XMLReaderAdapter xMLReaderAdapter10 = new XMLReaderAdapter(parserAdapter3);
      int int0 = connectionFactories0.getTopicConnectionFactoryCount();
      assertEquals(10, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.7962284387340903
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory1 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[7];
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[1] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[2] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[3] = xAQueueConnectionFactory1;
      xAQueueConnectionFactoryArray0[4] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[5] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[6] = xAQueueConnectionFactory0;
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      connectionFactories0.setXAQueueConnectionFactory(0, xAQueueConnectionFactory1);
      connectionFactories0.getXAQueueConnectionFactory(0);
      assertEquals(7, connectionFactories0.getXAQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^6  'SN~o1t HD=G");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^6  'SN~o1t HD=G");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$YOX?*");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".5zL/?H7M6W2sP");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        connectionFactories0.setXAConnectionFactory((XAConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.490403227787064
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[10];
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      HandlerBase handlerBase0 = new HandlerBase();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "8[Be[727z");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "8[Be[727z");
      connectionFactories0.isValid();
      int int0 = 0;
      try { 
        connectionFactories0.getXAConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[1];
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.getXATopicConnectionFactory();
      assertEquals(1, connectionFactories0.getXATopicConnectionFactoryCount());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/66_openjms");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Object[] objectArray0 = new Object[5];
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setXAQueueConnectionFactory((XAQueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.addXAQueueConnectionFactory((XAQueueConnectionFactory) null);
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.addXATopicConnectionFactory(xATopicConnectionFactory0);
      XATopicConnectionFactory xATopicConnectionFactory1 = new XATopicConnectionFactory();
      connectionFactories0.getXATopicConnectionFactory(0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      ByteArrayOutputStream byteArrayOutputStream1 = new ByteArrayOutputStream();
      byteArrayOutputStream1.close();
      byteArrayOutputStream0.reset();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter0);
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(parserAdapter2);
      ParserAdapter parserAdapter3 = null;
      try {
        parserAdapter3 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory1 = new QueueConnectionFactory();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[6];
      queueConnectionFactoryArray0[0] = queueConnectionFactory1;
      QueueConnectionFactory queueConnectionFactory2 = new QueueConnectionFactory();
      queueConnectionFactoryArray0[1] = queueConnectionFactory2;
      queueConnectionFactoryArray0[2] = queueConnectionFactory1;
      queueConnectionFactoryArray0[3] = queueConnectionFactory1;
      queueConnectionFactoryArray0[4] = queueConnectionFactory1;
      queueConnectionFactoryArray0[5] = queueConnectionFactory0;
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.getQueueConnectionFactory();
      assertEquals(6, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale locale0 = Locale.JAPAN;
      Locale locale1 = Locale.SIMPLIFIED_CHINESE;
      locale0.getDisplayVariant(locale1);
      Locale.setDefault(locale_Category0, locale0);
      Locale locale2 = Locale.KOREAN;
      locale0.getDisplayCountry(locale2);
      linkedList0.parallelStream();
      locale2.getDisplayVariant();
      locale1.getUnicodeLocaleKeys();
      LinkedList<String> linkedList3 = new LinkedList<String>();
      locale0.getDisplayCountry();
      linkedList0.remove((Object) linkedList2);
      LinkedList<Locale> linkedList4 = new LinkedList<Locale>();
      Locale locale3 = Locale.US;
      Locale locale4 = new Locale("\u65E5\u672C", "\uC77C\uBCF8", "\uC77C\uBCF8");
      linkedList4.addFirst(locale2);
      locale0.getDisplayVariant(locale1);
      linkedList4.add(locale1);
      locale0.hasExtensions();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      LinkedList<String> linkedList5 = new LinkedList<String>();
      linkedList5.add("^F/X}FhruWu(LW");
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList5, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList6, (Collection<Locale>) linkedList4, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList4, locale_FilteringMode1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale.setDefault(locale0);
      Locale.Category locale_Category1 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category1, locale1);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = connectionFactories0.getXATopicConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      byteArrayOutputStream0.close();
      byte[] byteArray0 = new byte[2];
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(byteArrayOutputStream0);
      filterOutputStream0.flush();
      byteArrayOutputStream0.reset();
      filterOutputStream0.write(952);
      filterOutputStream0.close();
      byteArrayOutputStream0.writeTo(filterOutputStream0);
      byteArray0[0] = (byte)57;
      byteArrayOutputStream0.write(byteArray0);
      byteArrayOutputStream0.close();
      byteArrayOutputStream0.write(byteArray0);
      byteArrayOutputStream0.write(byteArray0);
      byteArrayOutputStream0.write(3823);
      byteArrayOutputStream0.write((int) (byte) (-71));
      byteArrayOutputStream0.write(3823);
      byteArrayOutputStream0.flush();
      byteArrayOutputStream0.reset();
      byteArrayOutputStream0.reset();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, false);
      ByteArrayOutputStream byteArrayOutputStream1 = new ByteArrayOutputStream();
      byteArrayOutputStream1.write(byteArray0);
      byteArrayOutputStream1.write(byteArray0);
      byteArrayOutputStream1.write(byteArray0);
      byteArrayOutputStream1.flush();
      byteArrayOutputStream0.reset();
      byteArrayOutputStream1.reset();
      byteArrayOutputStream1.close();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = connectionFactories0.getConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4993646124305886
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[1];
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      connectionFactories0.getTopicConnectionFactory(0);
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      MockException mockException0 = new MockException("org.exolab.jms.config.ConnectionFactories");
      // Undeclared exception!
      try { 
        MockFile.createTempFile("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      boolean boolean0 = connectionFactories0.removeConnectionFactory(connectionFactory0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(247);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      try { 
        connectionFactories0.addXATopicConnectionFactory(247, xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 247, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/66_openjms");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/66_openjms");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, (String) null);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)22;
      byteArray0[2] = (byte) (-56);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byteArray0[3] = (byte)55;
      byteArray0[4] = (byte)55;
      byteArray0[3] = (byte)22;
      byteArray0[0] = (byte)0;
      byteArray0[7] = (byte) (-56);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      try { 
        connectionFactories0.setXAConnectionFactory(956, xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      try { 
        connectionFactories0.setXAConnectionFactory(0, xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[1];
      // Undeclared exception!
      try { 
        connectionFactories0.setXATopicConnectionFactory((XATopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      byteArrayOutputStream0.close();
      byte[] byteArray0 = new byte[1];
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(byteArrayOutputStream0);
      filterOutputStream0.write((int) (byte)57);
      filterOutputStream0.close();
      byteArrayOutputStream0.writeTo(filterOutputStream0);
      byteArrayOutputStream0.write(byteArray0);
      byteArrayOutputStream0.close();
      byteArrayOutputStream0.write(byteArray0);
      byteArrayOutputStream0.write(byteArray0);
      byteArrayOutputStream0.write((int) (byte) (-71));
      byteArrayOutputStream0.write((int) (byte) (-71));
      byteArrayOutputStream0.write((-70));
      byteArrayOutputStream0.flush();
      byteArrayOutputStream0.reset();
      byteArrayOutputStream0.reset();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, true);
      ByteArrayOutputStream byteArrayOutputStream1 = new ByteArrayOutputStream((byte)57);
      byteArrayOutputStream1.write(byteArray0);
      byteArrayOutputStream1.write(byteArray0);
      byteArrayOutputStream1.flush();
      byteArrayOutputStream1.flush();
      byteArrayOutputStream1.writeTo(byteArrayOutputStream0);
      byteArrayOutputStream1.reset();
      byteArrayOutputStream1.flush();
      byteArrayOutputStream0.reset();
      byteArrayOutputStream0.write(byteArray0, 0, 1);
      byteArrayOutputStream1.reset();
      byteArrayOutputStream0.close();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      try { 
        connectionFactories0.setXAConnectionFactory((-826), xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.removeQueueConnectionFactory(queueConnectionFactory0);
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(parserAdapter0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter(parserAdapter1);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      xMLReaderAdapter3.setErrorHandler(xMLFilterImpl0);
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter3);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(parserAdapter1);
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter(parserAdapter1);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter();
      xMLReaderAdapter6.startDocument();
      xMLReaderAdapter1.startDocument();
      ParserAdapter parserAdapter3 = new ParserAdapter(xMLReaderAdapter2);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter7 = new XMLReaderAdapter(xMLFilterImpl3);
      ParserAdapter parserAdapter4 = null;
      try {
        parserAdapter4 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.addQueueConnectionFactory(0, queueConnectionFactory0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      ConnectionFactories connectionFactories2 = new ConnectionFactories();
      assertEquals(0, connectionFactories2.getConnectionFactoryCount());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      connectionFactories0.getTopicConnectionFactory();
      int int0 = 0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      connectionFactories0.addXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[6];
      int int1 = 93;
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      int int2 = (-2582);
      StringReader stringReader0 = new StringReader("");
      try { 
        TopicConnectionFactory.unmarshal(stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parsing Error : Premature end of file.
         // Line : 1
         // Column : 1
         //
         verifyException("org.exolab.castor.xml.Unmarshaller", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.addXAQueueConnectionFactory(44, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 44, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.enumerateXAQueueConnectionFactory();
      String string0 = "]ryt%DI\\Pbw\"dR#2d";
      String string1 = null;
      StackTraceElement stackTraceElement0 = null;
      try {
        stackTraceElement0 = new StackTraceElement((String) null, (String) null, "]ryt%DIPbw\"dR#2d", (-285));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Declaring class is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[10];
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      HandlerBase handlerBase0 = new HandlerBase();
      handlerBase0.startDocument();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      xMLReaderAdapter1.setErrorHandler(handlerBase0);
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl0);
      SAXParseException sAXParseException0 = new SAXParseException("", locator2Impl0);
      SAXParseException sAXParseException1 = new SAXParseException(":", locator2Impl0, sAXParseException0);
      MockException mockException0 = new MockException(sAXParseException1);
      SAXParseException sAXParseException2 = new SAXParseException("", ":", "", 488, 488, mockException0);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[7];
      StackTraceElement stackTraceElement0 = new StackTraceElement(":", "", "", (-326));
      stackTraceElementArray0[0] = stackTraceElement0;
      connectionFactories0.getTopicConnectionFactory();
      StackTraceElement stackTraceElement1 = null;
      try {
        stackTraceElement1 = new StackTraceElement((String) null, "", " - ignoring extra element.", 488);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Declaring class is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.addTopicConnectionFactory((TopicConnectionFactory) null);
      try { 
        connectionFactories0.setTopicConnectionFactory((-6260), (TopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale locale1 = Locale.FRANCE;
      Locale.setDefault(locale_Category0, locale1);
      Locale locale2 = Locale.ENGLISH;
      Locale locale3 = Locale.KOREAN;
      locale1.getDisplayCountry(locale3);
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale locale4 = Locale.ROOT;
      linkedList1.pollLast();
      linkedList1.addFirst(locale4);
      Locale locale5 = Locale.ITALIAN;
      linkedList1.add(locale5);
      Predicate<Locale> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      Predicate<Locale> predicate2 = predicate0.negate();
      Predicate<Locale> predicate3 = predicate2.and(predicate0);
      linkedList1.removeIf(predicate3);
      linkedList1.add((Locale) null);
      locale4.hasExtensions();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      LinkedList<String> linkedList2 = new LinkedList<String>();
      linkedList2.clone();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList2, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0);
      Locale.setDefault(locale4);
      Locale.Category locale_Category1 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category1, locale4);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXATopicConnectionFactory((-28), (XATopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[8];
      int int0 = (-241);
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      connectionFactories0.addConnectionFactory(0, connectionFactory0);
      ConnectionFactory connectionFactory1 = new ConnectionFactory();
      StringReader stringReader0 = new StringReader(" has already been processed.");
      try { 
        connectionFactories1.getConnectionFactory(610);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "h");
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "h");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.exolab.jms.config.ConnectionFactories");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "M}fNiV]asgu[HpBb");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ICcQ`I1m~6");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "F4|7qNM!gC40<");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{EC7EUllN`ZtOF%Ij");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "F4|7qNM!gC40<");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      // Undeclared exception!
      try { 
        connectionFactories0.setConnectionFactory((ConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 0;
      try { 
        connectionFactories0.getTopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      byteArrayOutputStream0.close();
      byte[] byteArray0 = new byte[6];
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(byteArrayOutputStream0);
      filterOutputStream0.write(byteArray0);
      filterOutputStream0.flush();
      filterOutputStream0.write(0);
      filterOutputStream0.close();
      byteArrayOutputStream0.writeTo(filterOutputStream0);
      byteArrayOutputStream0.close();
      byteArrayOutputStream0.write(byteArray0);
      byteArrayOutputStream0.write(byteArray0);
      byteArrayOutputStream0.write((int) (byte) (-108));
      byteArrayOutputStream0.write((int) (byte) (-108));
      byteArrayOutputStream0.write((-56));
      byteArrayOutputStream0.write(31);
      byteArrayOutputStream0.flush();
      byteArrayOutputStream0.reset();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, true);
      ByteArrayOutputStream byteArrayOutputStream1 = new ByteArrayOutputStream();
      byteArrayOutputStream1.write(byteArray0);
      byteArrayOutputStream1.flush();
      byteArrayOutputStream1.flush();
      byteArrayOutputStream0.writeTo(byteArrayOutputStream0);
      byteArrayOutputStream1.reset();
      byteArrayOutputStream1.reset();
      byteArrayOutputStream1.reset();
      byteArrayOutputStream0.close();
      byteArrayOutputStream0.reset();
      byteArrayOutputStream0.write(byteArray0, 0, 1);
      byteArrayOutputStream1.reset();
      byteArrayOutputStream0.close();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[0];
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setTopicConnectionFactory((-409), (TopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.addQueueConnectionFactory((-19), queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -19, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.addQueueConnectionFactory((-19), (QueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -19, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.validate();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(parserAdapter1);
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter(xMLFilterImpl0);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      xMLReaderAdapter1.startDocument();
      xMLReaderAdapter0.startDocument();
      ParserAdapter parserAdapter3 = new ParserAdapter(xMLReaderAdapter0);
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter(xMLFilterImpl0);
      ParserAdapter parserAdapter4 = new ParserAdapter(xMLReaderAdapter1);
      ParserAdapter parserAdapter5 = null;
      try {
        parserAdapter5 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      char[] charArray0 = new char[5];
      charArray0[0] = ';';
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SAXParseException sAXParseException0 = new SAXParseException((String) null, "4i&uWdnKQ!Px8>cv", "4i&uWdnKQ!Px8>cv", ';', ';');
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[7];
      StackTraceElement stackTraceElement0 = new StackTraceElement("4i&uWdnKQ!Px8>cv", "4i&uWdnKQ!Px8>cv", "4i&uWdnKQ!Px8>cv", ';');
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("", ":", "4i&uWdnKQ!Px8>cv", ';');
      stackTraceElementArray0[1] = stackTraceElement0;
      StackTraceElement stackTraceElement2 = new StackTraceElement(":", "rg0Ii;\tL,v?/", "s(e3+|s?|&wa+[m", '\u0000');
      stackTraceElementArray0[2] = stackTraceElement0;
      stackTraceElementArray0[3] = stackTraceElement0;
      StackTraceElement stackTraceElement3 = new StackTraceElement("X4", "g)2,MP.@kX#deHA<D", "g)2,MP.@kX#deHA<D", ';');
      stackTraceElementArray0[4] = stackTraceElement3;
      StackTraceElement stackTraceElement4 = new StackTraceElement("s(e3+|s?|&wa+[m", "rg0Ii;\tL,v?/", "g)2,MP.@kX#deHA<D", (-592));
      stackTraceElementArray0[5] = stackTraceElement4;
      StackTraceElement stackTraceElement5 = new StackTraceElement(":", "M5?1X~6^", ":", 1119);
      stackTraceElementArray0[6] = stackTraceElement0;
      sAXParseException0.setStackTrace(stackTraceElementArray0);
      sAXParseException0.getStackTrace();
      boolean boolean0 = connectionFactories0.isValid();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^6  'SN~o1t HD=G");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^6  'SN~o1t HD=G");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$YOX?*");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".5zL/?H7M6W2sP");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        connectionFactories0.marshal((Writer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'out' is null.
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      byteArrayOutputStream0.close();
      byte[] byteArray0 = new byte[6];
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(byteArrayOutputStream0);
      filterOutputStream0.write(byteArray0);
      filterOutputStream0.write(0);
      filterOutputStream0.close();
      byteArrayOutputStream0.writeTo(filterOutputStream0);
      byteArrayOutputStream0.close();
      byteArrayOutputStream0.write(byteArray0);
      byteArrayOutputStream0.write(byteArray0);
      byteArrayOutputStream0.write((int) (byte) (-121));
      byteArrayOutputStream0.write((int) (byte) (-121));
      byteArrayOutputStream0.write((-56));
      byteArrayOutputStream0.flush();
      byteArrayOutputStream0.reset();
      byteArrayOutputStream0.write((-1361));
      ByteArrayOutputStream byteArrayOutputStream1 = new ByteArrayOutputStream();
      byteArrayOutputStream1.flush();
      byteArrayOutputStream1.flush();
      byteArrayOutputStream0.writeTo(byteArrayOutputStream0);
      byteArrayOutputStream1.reset();
      byteArrayOutputStream0.reset();
      byteArrayOutputStream1.reset();
      byteArrayOutputStream1.reset();
      byteArrayOutputStream1.flush();
      byteArrayOutputStream0.close();
      byteArrayOutputStream0.reset();
      byteArrayOutputStream0.write(byteArray0, 0, 1);
      byteArrayOutputStream1.reset();
      byteArrayOutputStream0.close();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Marshaller.enableDebug = true;
      try { 
        connectionFactories0.getXAConnectionFactory((-31));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.addConnectionFactory((-241), connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -241, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList1.add((Locale) null);
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale locale0 = Locale.CANADA;
      Locale locale1 = Locale.JAPAN;
      locale0.getDisplayVariant(locale1);
      Locale.setDefault(locale_Category0, locale0);
      Locale locale2 = Locale.ROOT;
      Locale.Category locale_Category1 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category1, locale0);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList4 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      Locale locale3 = Locale.ITALY;
      Locale locale4 = Locale.forLanguageTag("");
      locale1.getDisplayCountry(locale3);
      locale4.getDisplayVariant();
      locale3.getUnicodeLocaleKeys();
      LinkedList<String> linkedList6 = new LinkedList<String>();
      locale3.getDisplayCountry();
      LinkedList<Locale> linkedList7 = new LinkedList<Locale>();
      locale4.getDisplayVariant();
      Locale locale5 = Locale.forLanguageTag("");
      Locale locale6 = Locale.CANADA;
      Locale locale7 = locale5.stripExtensions();
      linkedList2.addFirst((Locale) null);
      locale0.getDisplayVariant(locale1);
      linkedList4.add(locale7);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      LinkedList<String> linkedList8 = new LinkedList<String>();
      linkedList8.add("");
      Locale locale8 = Locale.ITALIAN;
      LinkedList<Locale.LanguageRange> linkedList9 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.setQueueConnectionFactory((-888), queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      connectionFactories0.addXAConnectionFactory(0, xAConnectionFactory0);
      assertEquals(0, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      char[] charArray0 = new char[5];
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      SAXParseException sAXParseException0 = new SAXParseException((String) null, "a|SsR", "a|SsR", '\u0000', '\u0000');
      SAXParseException sAXParseException1 = new SAXParseException("a|SsR", "a|SsR", "a|SsR", '\u0000', '\u0000');
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[7];
      StackTraceElement stackTraceElement0 = new StackTraceElement("", ":", "a|SsR", 1119);
      stackTraceElementArray0[1] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement(":", "rg0Ii;\tL,v?/", "s(e3+|s?|&wa+[gm", '\u0000');
      stackTraceElementArray0[2] = stackTraceElement0;
      StackTraceElement stackTraceElement2 = new StackTraceElement("0o5{1/q<8t[|,5SG`*", ":", "0o5{1/q<8t[|,5SG`*", 1178);
      stackTraceElementArray0[3] = stackTraceElement2;
      // Undeclared exception!
      try { 
        connectionFactories0.setQueueConnectionFactory((QueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      linkedList1.poll();
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale locale0 = Locale.FRANCE;
      Locale.setDefault(locale_Category0, locale0);
      linkedList1.pollFirst();
      Locale locale1 = Locale.KOREAN;
      locale0.getDisplayCountry(locale1);
      linkedList1.stream();
      linkedList0.parallelStream();
      locale0.getDisplayCountry();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      Locale locale2 = Locale.ROOT;
      linkedList2.pollLast();
      linkedList2.addFirst(locale2);
      Locale locale3 = Locale.ITALY;
      linkedList2.add(locale3);
      Predicate<Locale> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(predicate1).test(any());
      Predicate<Locale> predicate2 = predicate0.or(predicate1);
      Predicate<Locale> predicate3 = predicate2.negate();
      Predicate<Locale> predicate4 = predicate3.and(predicate0);
      linkedList2.removeIf(predicate4);
      linkedList2.add((Locale) null);
      locale2.hasExtensions();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      LinkedList<String> linkedList3 = new LinkedList<String>();
      linkedList3.clone();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList3, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) linkedList2, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList2, locale_FilteringMode1);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale.setDefault(locale2);
      Locale.Category locale_Category1 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category1, locale2);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXATopicConnectionFactory(0, (XATopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(247);
      byteArrayOutputStream0.close();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0);
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale locale0 = Locale.FRANCE;
      Locale.setDefault(locale_Category0, locale0);
      Locale locale1 = Locale.KOREAN;
      locale1.getDisplayCountry(locale0);
      linkedList1.stream();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      linkedList2.parallelStream();
      Locale locale2 = Locale.KOREAN;
      locale2.getDisplayCountry();
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      Locale locale3 = Locale.SIMPLIFIED_CHINESE;
      linkedList3.addFirst(locale1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList5, (Collection<Locale>) linkedList1);
      Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) list1, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) list0, locale_FilteringMode1);
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) list2, locale_FilteringMode0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale.setDefault(locale1);
      Locale.Category locale_Category1 = Locale.Category.FORMAT;
      Locale locale4 = Locale.KOREAN;
      Locale.setDefault(locale_Category1, locale4);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXATopicConnectionFactory(66, (XATopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.setConnectionFactory(0, connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      byteArrayOutputStream0.close();
      byteArrayOutputStream0.write(0);
      byte[] byteArray0 = new byte[1];
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(byteArrayOutputStream0);
      filterOutputStream0.flush();
      byteArrayOutputStream0.write((int) (byte)1);
      byteArrayOutputStream0.reset();
      filterOutputStream0.close();
      filterOutputStream0.close();
      byteArrayOutputStream0.writeTo(filterOutputStream0);
      byteArray0[0] = (byte)1;
      byteArrayOutputStream0.write(byteArray0);
      byteArrayOutputStream0.close();
      byteArrayOutputStream0.write(byteArray0);
      byteArrayOutputStream0.write(byteArray0);
      byteArrayOutputStream0.write((int) (byte)1);
      byteArrayOutputStream0.write((int) (byte)1);
      byteArrayOutputStream0.write((int) (byte)1);
      byteArrayOutputStream0.flush();
      byteArrayOutputStream0.reset();
      byteArrayOutputStream0.reset();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, false);
      boolean boolean0 = mockPrintStream0.checkError();
      byteArrayOutputStream0.writeTo(mockPrintStream0);
      ByteArrayOutputStream byteArrayOutputStream1 = new ByteArrayOutputStream();
      byteArrayOutputStream1.write(byteArray0);
      byteArrayOutputStream1.write(byteArray0);
      byteArrayOutputStream1.write(byteArray0);
      byteArrayOutputStream1.flush();
      byteArrayOutputStream0.reset();
      byteArrayOutputStream1.write(byteArray0, 0, 1);
      byteArrayOutputStream0.reset();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      boolean boolean1 = connectionFactories0.removeXATopicConnectionFactory(xATopicConnectionFactory0);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "A minimum of ");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearConnectionFactory();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter(xMLFilterImpl0);
      xMLReaderAdapter0.startDocument();
      xMLReaderAdapter0.setErrorHandler(xMLFilterImpl1);
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl1);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter(xMLFilterImpl2);
      xMLReaderAdapter1.startDocument();
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter(xMLFilterImpl3);
      ParserAdapter parserAdapter2 = null;
      try {
        parserAdapter2 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      try { 
        connectionFactories0.setTopicConnectionFactory(0, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "^6  SN~otHD=G");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^6  SN~otHD=G");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "UxRvi^");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "wp]#X|IA?M<q71");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "wp]#X|IA?M<q71");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "wp]#X|IA?M<q71");
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      // Undeclared exception!
      try { 
        connectionFactories0.setTopicConnectionFactory((TopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      byte[] byteArray1 = new byte[9];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^6  'SN~o1t HD=G");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "^6  'SN~o1t HD=G");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^6  'SN~o1t HD=G");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "^6  'SN~o1t HD=G");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^6  'SN~o1t HD=G");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[2];
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      try { 
        connectionFactories0.addTopicConnectionFactory(71, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 71, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      int int0 = 0;
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 0;
      connectionFactories0.getQueueConnectionFactory();
      try { 
        connectionFactories0.getQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearXAQueueConnectionFactory();
      int int0 = connectionFactories0.getXAQueueConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Enumeration enumeration0 = connectionFactories0.enumerateXAConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      byteArrayOutputStream0.close();
      byte[] byteArray0 = new byte[6];
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(byteArrayOutputStream0);
      filterOutputStream0.write(byteArray0);
      filterOutputStream0.write(0);
      filterOutputStream0.close();
      byteArrayOutputStream0.writeTo(filterOutputStream0);
      byteArrayOutputStream0.close();
      byteArrayOutputStream0.write(byteArray0);
      byteArrayOutputStream0.write(byteArray0);
      byteArrayOutputStream0.write((int) (byte) (-121));
      byteArrayOutputStream0.write((int) (byte) (-121));
      byteArrayOutputStream0.write((-56));
      byteArrayOutputStream0.flush();
      byteArrayOutputStream0.reset();
      byteArrayOutputStream0.write((-1361));
      ByteArrayOutputStream byteArrayOutputStream1 = new ByteArrayOutputStream();
      byteArrayOutputStream1.flush();
      byteArrayOutputStream1.flush();
      byteArrayOutputStream0.writeTo(byteArrayOutputStream0);
      byteArrayOutputStream1.reset();
      byteArrayOutputStream0.reset();
      byteArrayOutputStream1.reset();
      byteArrayOutputStream1.reset();
      byteArrayOutputStream1.flush();
      byteArrayOutputStream0.close();
      byteArrayOutputStream0.reset();
      byteArrayOutputStream0.write(byteArray0, 0, 1);
      byteArrayOutputStream1.reset();
      byteArrayOutputStream0.close();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Marshaller.enableDebug = true;
      try { 
        connectionFactories0.getXAConnectionFactory(1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      char[] charArray0 = new char[5];
      charArray0[3] = '@';
      charArray0[0] = '@';
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      stringWriter0.write((int) '@');
      stringWriter2.write(charArray0);
      stringWriter2.write(charArray0);
      stringWriter2.write("asR");
      stringWriter2.close();
      stringWriter2.flush();
      stringWriter0.write(charArray0);
      stringWriter2.write("asR");
      StringWriter stringWriter3 = new StringWriter('\u0000');
      StringWriter stringWriter4 = new StringWriter();
      stringWriter4.flush();
      StringWriter stringWriter5 = new StringWriter();
      StringWriter stringWriter6 = new StringWriter();
      StringWriter stringWriter7 = new StringWriter();
      stringWriter4.write((-1016));
      stringWriter7.flush();
      stringWriter4.flush();
      StringWriter stringWriter8 = new StringWriter();
      stringWriter4.close();
      stringWriter6.flush();
      StringWriter stringWriter9 = new StringWriter('@');
      stringWriter7.write("asR", 1, 0);
      stringWriter6.write("null argument in addAnyNode");
      stringWriter1.write(charArray0);
      StringWriter stringWriter10 = new StringWriter();
      stringWriter10.close();
      try { 
        connectionFactories0.getXAQueueConnectionFactory(332);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      byte[] byteArray0 = new byte[1];
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(byteArrayOutputStream0);
      filterOutputStream0.write(936);
      filterOutputStream0.close();
      byteArrayOutputStream0.writeTo(filterOutputStream0);
      byteArrayOutputStream0.close();
      byteArrayOutputStream0.write(byteArray0);
      byteArrayOutputStream0.write(byteArray0);
      byteArrayOutputStream0.write((int) (byte) (-71));
      byteArrayOutputStream0.write((int) (byte) (-71));
      byteArrayOutputStream0.write(0);
      byteArrayOutputStream0.flush();
      byteArrayOutputStream0.reset();
      byteArrayOutputStream0.reset();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      byteArrayOutputStream0.writeTo(pipedOutputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, true);
      ByteArrayOutputStream byteArrayOutputStream1 = new ByteArrayOutputStream((byte)57);
      byteArrayOutputStream1.write(byteArray0);
      byteArrayOutputStream1.flush();
      byteArrayOutputStream1.flush();
      byteArrayOutputStream1.writeTo(byteArrayOutputStream0);
      byteArrayOutputStream1.reset();
      byteArrayOutputStream1.flush();
      byteArrayOutputStream0.close();
      byteArrayOutputStream0.reset();
      byteArrayOutputStream0.write(byteArray0, 0, 1);
      byteArrayOutputStream1.reset();
      byteArrayOutputStream0.close();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAQueueConnectionFactory((-952));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/66_openjms");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, (String) null);
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      char[] charArray0 = new char[2];
      charArray0[0] = '{';
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) '{';
      objectArray0[1] = (Object) evoSuiteFile0;
      objectArray0[3] = (Object) "MxsnLT_<y";
      objectArray0[4] = (Object) locale_Category0;
      objectArray0[0] = (Object) ')';
      Object[] objectArray1 = new Object[7];
      objectArray1[0] = objectArray0[1];
      objectArray1[1] = (Object) null;
      objectArray1[3] = (Object) "The element '";
      objectArray1[4] = (Object) "MxsnLT_<y";
      objectArray1[6] = (Object) evoSuiteFile0;
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("MxsnLT_<y");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)67;
      byteArray0[3] = (byte)120;
      objectArray1[0] = (Object) (byte) (-33);
      byteArray0[5] = (byte)8;
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte)15;
      byteArray0[8] = (byte)0;
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "MxsnLT_<y");
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Marshaller.enableDebug = false;
      try { 
        connectionFactories0.setQueueConnectionFactory(0, queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      MockPrintStream mockPrintStream0 = new MockPrintStream("h");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      char[] charArray0 = new char[8];
      charArray0[0] = 'a';
      charArray0[1] = 'a';
      charArray0[2] = '\u0019';
      charArray0[3] = 'P';
      charArray0[4] = 'a';
      charArray0[5] = 's';
      MockPrintStream mockPrintStream1 = new MockPrintStream("^E=goW");
      mockPrintStream0.print(102);
      mockPrintStream1.println(845.79891);
      MockPrintStream mockPrintStream2 = new MockPrintStream(mockPrintStream1, true);
      MockPrintStream mockPrintStream3 = new MockPrintStream("h");
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) mockPrintStream2;
      objectArray0[1] = (Object) mockPrintStream1;
      objectArray0[2] = (Object) mockPrintStream2;
      Object object0 = new Object();
      objectArray0[3] = object0;
      PrintStream printStream0 = mockPrintStream3.format("h", objectArray0);
      MockPrintStream mockPrintStream4 = new MockPrintStream(printStream0);
      MockPrintStream mockPrintStream5 = new MockPrintStream(mockPrintStream2);
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      try { 
        connectionFactories0.setQueueConnectionFactory(102, queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      try { 
        connectionFactories0.addXAConnectionFactory((-35), xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -35, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.addConnectionFactory(connectionFactory0);
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[1];
      String string0 = "]ry%DI\\PbzYo\"dR-=#2d";
      String string1 = null;
      StackTraceElement stackTraceElement0 = null;
      try {
        stackTraceElement0 = new StackTraceElement((String) null, (String) null, "]ry%DIPbzYo\"dR-=#2d", (-280));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Declaring class is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/66_openjms");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/66_openjms");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) 'C';
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)22;
      byteArray0[2] = (byte) (-56);
      byteArray0[3] = (byte)55;
      byteArray0[4] = (byte) (-87);
      byteArray0[5] = (byte)22;
      byteArray0[6] = (byte)0;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      try { 
        connectionFactories0.getQueueConnectionFactory((-227));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "F4|7qNM!gC40<");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "F4|7qNM!gC40<");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "F4|7qNM!gC40<");
      byteArray0[0] = (byte) (-33);
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte) (-33);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray1[1] = (byte) (-33);
      byteArray1[3] = (byte) (-33);
      byteArray1[4] = (byte) (-33);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byteArray1[7] = (byte) (-33);
      byteArray1[8] = (byte) (-33);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Marshaller.enableDebug = true;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      try { 
        connectionFactories0.getTopicConnectionFactory((int) (byte) (-33));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList1.add((Locale) null);
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale locale0 = Locale.CANADA;
      Locale locale1 = Locale.SIMPLIFIED_CHINESE;
      locale0.getDisplayVariant(locale1);
      Locale.setDefault(locale_Category0, locale0);
      Locale locale2 = Locale.FRANCE;
      Locale.Category locale_Category1 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category1, locale0);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList4 = new LinkedList<Locale>();
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList4);
      Locale locale3 = Locale.JAPAN;
      Locale locale4 = Locale.forLanguageTag("");
      locale1.getDisplayCountry(locale3);
      locale4.getDisplayVariant();
      locale3.getUnicodeLocaleKeys();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getTopicConnectionFactory(99);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.exolab.jms.config.ConnectionFactories");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-33);
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte) (-33);
      byteArray1[1] = (byte) (-33);
      byteArray1[2] = (byte) (-33);
      byteArray1[3] = (byte) (-33);
      byteArray1[4] = (byte) (-33);
      byteArray1[6] = (byte) (-33);
      byteArray1[7] = (byte) (-33);
      byteArray1[8] = (byte) (-33);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearXAConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory1 = new XAQueueConnectionFactory();
      assertFalse(xAQueueConnectionFactory1.equals((Object)xAQueueConnectionFactory0));
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(247);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-71);
      byte byte0 = (byte)57;
      byteArray0[1] = (byte)57;
      byteArrayOutputStream0.write(byteArray0);
      byteArrayOutputStream0.reset();
      byteArrayOutputStream0.write(byteArray0);
      byteArrayOutputStream0.write(3823);
      byteArrayOutputStream0.write((int) (byte) (-71));
      byteArrayOutputStream0.reset();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, true);
      ByteArrayOutputStream byteArrayOutputStream1 = new ByteArrayOutputStream(999);
      byteArrayOutputStream1.reset();
      byteArrayOutputStream1.reset();
      byteArrayOutputStream1.close();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = null;
      try { 
        connectionFactories0.setConnectionFactory((-4765), (ConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale locale0 = Locale.JAPAN;
      Locale locale1 = Locale.SIMPLIFIED_CHINESE;
      locale0.getDisplayVariant(locale1);
      Locale.setDefault(locale_Category0, locale0);
      Locale locale2 = Locale.KOREAN;
      locale0.getDisplayCountry(locale2);
      linkedList0.parallelStream();
      locale2.getDisplayVariant();
      locale1.getUnicodeLocaleKeys();
      locale0.getDisplayCountry();
      linkedList0.remove((Object) linkedList2);
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      Locale locale3 = Locale.US;
      Locale locale4 = new Locale("\u65E5\u672C", "\uC77C\uBCF8", "\uC77C\uBCF8");
      linkedList3.addFirst(locale2);
      locale0.getDisplayVariant(locale1);
      linkedList3.add(locale1);
      locale0.hasExtensions();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      LinkedList<String> linkedList4 = new LinkedList<String>();
      linkedList4.add("^F/X}FhruWu(LW");
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList4, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList5, (Collection<Locale>) linkedList3, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList3, locale_FilteringMode1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale.setDefault(locale0);
      Locale.Category locale_Category1 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category1, locale1);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.setConnectionFactory(1849, connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)92;
      byteArray1[1] = (byte)92;
      byteArray1[2] = (byte)92;
      byteArray1[3] = (byte)92;
      byteArray1[5] = (byte)92;
      byteArray1[6] = (byte)92;
      byteArray1[7] = (byte)27;
      byteArray1[8] = (byte)92;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      byteArray0[0] = (byte)92;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{EC7EUllN`ZtOF%Ij");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{EC7EUllN`ZtOF%Ij");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXATopicConnectionFactory((-8));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      char[] charArray0 = new char[5];
      charArray0[3] = 'Q';
      charArray0[0] = 'Q';
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      stringWriter0.write((int) 'Q');
      stringWriter2.write(charArray0);
      stringWriter2.write(charArray0);
      stringWriter2.write("asR");
      stringWriter2.close();
      stringWriter2.flush();
      stringWriter0.write(charArray0);
      stringWriter2.write("asR");
      StringWriter stringWriter3 = new StringWriter();
      stringWriter3.flush();
      StringWriter stringWriter4 = new StringWriter();
      StringWriter stringWriter5 = new StringWriter();
      StringWriter stringWriter6 = new StringWriter();
      stringWriter3.write((-1016));
      stringWriter6.flush();
      stringWriter3.flush();
      StringWriter stringWriter7 = new StringWriter();
      stringWriter3.close();
      stringWriter5.flush();
      StringWriter stringWriter8 = new StringWriter('Q');
      stringWriter6.write("asR", 1, 0);
      stringWriter5.write("null argument in addAnyNode");
      stringWriter1.write(charArray0);
      StringWriter stringWriter9 = new StringWriter();
      stringWriter9.close();
      try { 
        connectionFactories0.getConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      char[] charArray0 = new char[5];
      charArray0[0] = '@';
      charArray0[0] = '@';
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      stringWriter0.write((int) '@');
      stringWriter2.write(charArray0);
      stringWriter2.write(charArray0);
      stringWriter2.write("asR");
      stringWriter2.close();
      stringWriter2.flush();
      stringWriter0.write(charArray0);
      stringWriter2.write("asR");
      StringWriter stringWriter3 = new StringWriter('\u0000');
      StringWriter stringWriter4 = new StringWriter();
      stringWriter4.flush();
      StringWriter stringWriter5 = new StringWriter();
      StringWriter stringWriter6 = new StringWriter();
      stringWriter4.write((-1016));
      stringWriter3.flush();
      stringWriter4.flush();
      StringWriter stringWriter7 = new StringWriter();
      stringWriter4.close();
      stringWriter6.flush();
      StringWriter stringWriter8 = new StringWriter('\u0000');
      stringWriter0.write("asR", 1, 1);
      stringWriter6.write("null argument in addAnyfo0e");
      stringWriter1.write(charArray0);
      StringWriter stringWriter9 = new StringWriter();
      stringWriter9.close();
      try { 
        connectionFactories0.getConnectionFactory(1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      char[] charArray0 = new char[5];
      charArray0[3] = 'Q';
      charArray0[0] = 'Q';
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      stringWriter0.write((int) 'Q');
      stringWriter2.write(charArray0);
      stringWriter2.write(charArray0);
      stringWriter2.write("asR");
      stringWriter2.close();
      stringWriter2.flush();
      stringWriter0.write(charArray0);
      stringWriter2.write("asR");
      StringWriter stringWriter3 = new StringWriter('\u0000');
      StringWriter stringWriter4 = new StringWriter();
      stringWriter4.flush();
      StringWriter stringWriter5 = new StringWriter();
      StringWriter stringWriter6 = new StringWriter();
      StringWriter stringWriter7 = new StringWriter();
      stringWriter4.write((-1016));
      stringWriter7.flush();
      stringWriter4.flush();
      StringWriter stringWriter8 = new StringWriter();
      stringWriter4.close();
      stringWriter6.flush();
      StringWriter stringWriter9 = new StringWriter('Q');
      stringWriter7.write("asR", 1, 1);
      stringWriter6.write("null argument in addAnyNode");
      stringWriter1.write(charArray0);
      StringWriter stringWriter10 = new StringWriter();
      stringWriter10.close();
      try { 
        connectionFactories0.getConnectionFactory((-1016));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      char[] charArray0 = new char[5];
      charArray0[3] = 'Q';
      charArray0[0] = 'Q';
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      stringWriter0.write((int) 'Q');
      stringWriter2.write(charArray0);
      stringWriter2.write(charArray0);
      stringWriter2.write("asR");
      stringWriter2.close();
      stringWriter2.flush();
      stringWriter0.write(charArray0);
      stringWriter2.write("asR");
      StringWriter stringWriter3 = new StringWriter('\u0000');
      StringWriter stringWriter4 = new StringWriter();
      stringWriter4.flush();
      StringWriter stringWriter5 = new StringWriter();
      StringWriter stringWriter6 = new StringWriter();
      StringWriter stringWriter7 = new StringWriter();
      stringWriter4.write((-1016));
      stringWriter7.flush();
      StringWriter stringWriter8 = new StringWriter();
      stringWriter4.close();
      stringWriter6.flush();
      StringWriter stringWriter9 = new StringWriter('Q');
      stringWriter7.write("asR", 1, 0);
      stringWriter6.write("");
      stringWriter1.write(charArray0);
      StringWriter stringWriter10 = new StringWriter();
      stringWriter10.close();
      try { 
        connectionFactories0.getConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearTopicConnectionFactory();
      assertEquals(0, connectionFactories0.getXAConnectionFactoryCount());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      char[] charArray0 = new char[5];
      charArray0[0] = '@';
      charArray0[0] = '@';
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      stringWriter0.write((int) '@');
      stringWriter2.write(charArray0);
      stringWriter2.write(charArray0);
      stringWriter2.write("asR");
      stringWriter2.close();
      stringWriter2.flush();
      stringWriter0.write(charArray0);
      stringWriter2.write("asR");
      StringWriter stringWriter3 = new StringWriter('\u0000');
      StringWriter stringWriter4 = new StringWriter();
      stringWriter4.flush();
      StringWriter stringWriter5 = new StringWriter();
      StringWriter stringWriter6 = new StringWriter();
      StringWriter stringWriter7 = new StringWriter();
      stringWriter4.write((-1016));
      stringWriter7.flush();
      stringWriter4.flush();
      StringWriter stringWriter8 = new StringWriter();
      stringWriter4.close();
      stringWriter6.flush();
      StringWriter stringWriter9 = new StringWriter('\u0000');
      stringWriter7.write("asR", 1, 0);
      stringWriter6.write("null argument in addAnyNode");
      stringWriter1.write(charArray0);
      StringWriter stringWriter10 = new StringWriter();
      stringWriter10.close();
      Enumeration enumeration0 = connectionFactories0.enumerateTopicConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      char[] charArray0 = new char[5];
      charArray0[3] = 'Q';
      charArray0[0] = 'Q';
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      stringWriter0.write((int) 'Q');
      stringWriter2.write(charArray0);
      stringWriter2.write(charArray0, 3, 0);
      stringWriter2.write(charArray0);
      stringWriter2.write("]%YB!cbX4!a>z`^w");
      stringWriter2.close();
      stringWriter2.flush();
      stringWriter0.write(charArray0);
      stringWriter2.write("]%YB!cbX4!a>z`^w");
      StringWriter stringWriter3 = new StringWriter('\u0000');
      StringWriter stringWriter4 = new StringWriter();
      stringWriter4.flush();
      StringWriter stringWriter5 = new StringWriter();
      stringWriter4.close();
      StringWriter stringWriter6 = new StringWriter('Q');
      StringWriter stringWriter7 = new StringWriter();
      stringWriter4.write((-1016));
      stringWriter7.flush();
      StringWriter stringWriter8 = new StringWriter();
      stringWriter4.close();
      stringWriter6.flush();
      StringWriter stringWriter9 = new StringWriter('Q');
      stringWriter7.write("]%YB!cbX4!a>z`^w", 1, 0);
      stringWriter6.write("mapping.duplicateDescriptors");
      stringWriter1.write(charArray0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      try { 
        connectionFactories0.marshal((ContentHandler) xMLFilterImpl0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      char[] charArray0 = new char[5];
      charArray0[0] = ';';
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      SAXParseException sAXParseException0 = new SAXParseException((String) null, "4i&uWdnKQ!Px8>cv", "4i&uWdnKQ!Px8>cv", ';', ';');
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[7];
      StackTraceElement stackTraceElement0 = new StackTraceElement("4i&uWdnKQ!Px8>cv", "4i&uWdnKQ!Px8>cv", "4i&uWdnKQ!Px8>cv", ';');
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("", ":", "4i&uWdnKQ!Px8>cv", ';');
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement(":", "rg0Ii;\tL,v?/", "s(e3+|s?|&wa+[m", '\u0000');
      stackTraceElementArray0[2] = stackTraceElement1;
      StackTraceElement stackTraceElement3 = new StackTraceElement("0o5{1/q<8t[|,5SG`*", ":", "0o5{1/q<8t[|,5SG`*", 1178);
      stackTraceElementArray0[3] = stackTraceElement3;
      StackTraceElement stackTraceElement4 = new StackTraceElement("X4", "g)2,MP.@kX#deHA<D", "g)2,MP.@kX#deHA<D", ';');
      stackTraceElementArray0[4] = stackTraceElement4;
      StackTraceElement stackTraceElement5 = new StackTraceElement("s(e3+|s?|&wa+[m", "rg0Ii;\tL,v?/", "g)2,MP.@kX#deHA<D", (-592));
      stackTraceElementArray0[5] = stackTraceElement5;
      StackTraceElement stackTraceElement6 = new StackTraceElement(":", "M5?1X~6^", ":", 1119);
      stackTraceElementArray0[6] = stackTraceElement3;
      sAXParseException0.setStackTrace(stackTraceElementArray0);
      sAXParseException0.getStackTrace();
      // Undeclared exception!
      try { 
        connectionFactories0.marshal((ContentHandler) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'handler' is null.
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearXATopicConnectionFactory();
      assertEquals(0, connectionFactories0.getXATopicConnectionFactoryCount());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale locale0 = Locale.FRANCE;
      Locale.setDefault(locale_Category0, locale0);
      linkedList1.pollFirst();
      Locale locale1 = Locale.KOREAN;
      locale0.getDisplayCountry(locale1);
      linkedList1.stream();
      linkedList0.parallelStream();
      locale0.getDisplayCountry();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      Locale locale2 = Locale.ROOT;
      linkedList2.pollLast();
      linkedList2.addFirst(locale2);
      Locale locale3 = Locale.ITALY;
      linkedList2.add(locale3);
      locale2.hasExtensions();
      LinkedList<String> linkedList3 = new LinkedList<String>();
      Object object0 = new Object();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList7 = new LinkedList<String>();
      Locale.lookupTag(linkedList6, linkedList7);
      Object object1 = new Object();
      Object object2 = new Object();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getXAQueueConnectionFactory();
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[5];
      charArray0[3] = 'Q';
      charArray0[4] = 'F';
      StringWriter stringWriter1 = new StringWriter();
      charArray0[4] = 'F';
      StringWriter stringWriter2 = new StringWriter();
      charArray0[4] = 'h';
      stringWriter0.write(charArray0);
      StringWriter stringWriter3 = new StringWriter();
      stringWriter1.write((int) 'Q');
      stringWriter3.write(charArray0);
      stringWriter3.write(charArray0);
      stringWriter3.close();
      StringWriter stringWriter4 = new StringWriter('F');
      stringWriter3.close();
      connectionFactories0.marshal((Writer) stringWriter3);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      int int0 = locator2Impl0.getLineNumber();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      char[] charArray0 = new char[5];
      charArray0[0] = ';';
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      SAXParseException sAXParseException0 = new SAXParseException((String) null, "4i&uWdnKQ!Px8>cv", "4i&uWdnKQ!Px8>cv", ';', ';');
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[7];
      StackTraceElement stackTraceElement0 = new StackTraceElement("4i&uWdnKQ!Px8>cv", "4i&uWdnKQ!Px8>cv", "4i&uWdnKQ!Px8>cv", ';');
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("", ":", "4i&uWdnKQ!Px8>cv", ';');
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement(":", "rg0Ii;\tL,v?/", "s(e3+|s?|&wa+[m", '\u0000');
      stackTraceElementArray0[2] = stackTraceElement1;
      StackTraceElement stackTraceElement3 = new StackTraceElement("0o5{1/q<8t[|,5SG`*", ":", "0o5{1/q<8t[|,5SG`*", 1178);
      stackTraceElementArray0[3] = stackTraceElement3;
      StackTraceElement stackTraceElement4 = new StackTraceElement("X4", "g)2,MP.@kX#deHA<D", "g)2,MP.@kX#deHA<D", ';');
      stackTraceElementArray0[4] = stackTraceElement4;
      StackTraceElement stackTraceElement5 = new StackTraceElement("s(e3+|s?|&wa+[m", "rg0Ii;\tL,v?/", "g)2,MP.@kX#deHA<D", (-592));
      stackTraceElementArray0[5] = stackTraceElement5;
      StackTraceElement stackTraceElement6 = new StackTraceElement(":", "M5?1X~6^", ":", 1119);
      stackTraceElementArray0[6] = stackTraceElement0;
      stringWriter1.write(charArray0);
      StringWriter stringWriter2 = new StringWriter();
      stringWriter1.close();
      connectionFactories0.marshal((Writer) stringWriter1);
      assertEquals(0, connectionFactories0.getConnectionFactoryCount());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)92;
      byteArray1[1] = (byte)92;
      byteArray1[2] = (byte)92;
      byteArray1[3] = (byte)92;
      byteArray1[5] = (byte)92;
      byteArray1[6] = (byte)92;
      byteArray1[7] = (byte)27;
      byteArray1[8] = (byte)92;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      byteArray0[0] = (byte)92;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{EC7EUllN`ZtOF%Ij");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{EC7EUllN`ZtOF%Ij");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXATopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      byteArrayOutputStream0.close();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-71);
      byteArrayOutputStream0.write(byteArray0);
      byteArrayOutputStream0.close();
      byteArrayOutputStream0.write(byteArray0);
      byteArrayOutputStream0.write(byteArray0);
      byteArrayOutputStream0.write(3823);
      byteArrayOutputStream0.write((int) (byte) (-71));
      byteArrayOutputStream0.write((-56));
      byteArrayOutputStream0.flush();
      byteArrayOutputStream0.reset();
      byteArrayOutputStream0.reset();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, true);
      ByteArrayOutputStream byteArrayOutputStream1 = new ByteArrayOutputStream((byte)57);
      byteArrayOutputStream1.write(byteArray0);
      byteArrayOutputStream1.write(byteArray0);
      byteArrayOutputStream1.flush();
      byteArrayOutputStream1.reset();
      byteArrayOutputStream1.flush();
      byteArrayOutputStream1.write(byteArray0, 0, 1);
      byteArrayOutputStream1.reset();
      byteArrayOutputStream1.close();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXATopicConnectionFactory((int) (byte)57);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearQueueConnectionFactory();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.resolveEntity("", "");
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      xMLFilterImpl1.notationDecl("", "", "");
      String string0 = "1+sTgA\\q";
      try { 
        xMLFilterImpl0.setProperty("org.exolab.jms.config.ConnectionFactories", "org.exolab.jms.config.ConnectionFactories");
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property: org.exolab.jms.config.ConnectionFactories
         //
         verifyException("org.xml.sax.helpers.XMLFilterImpl", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Wff8qPgA");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Wff8qPgA");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Wff8qPgA");
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.exolab.jms.config.ConnectionFactories");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Wff8qPgA");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      boolean boolean1 = connectionFactories0.removeXAQueueConnectionFactory(xAQueueConnectionFactory0);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[7];
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[2] = xAQueueConnectionFactory0;
      XAQueueConnectionFactory xAQueueConnectionFactory1 = new XAQueueConnectionFactory();
      xAQueueConnectionFactoryArray0[4] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[5] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[6] = xAQueueConnectionFactory0;
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      try { 
        connectionFactories0.setXAQueueConnectionFactory((-19), xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      xAQueueConnectionFactory0.setName("");
      XAQueueConnectionFactory xAQueueConnectionFactory1 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[7];
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[1] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[2] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[3] = xAQueueConnectionFactory1;
      xAQueueConnectionFactoryArray0[5] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[6] = xAQueueConnectionFactory0;
      try { 
        connectionFactories0.setXAQueueConnectionFactory(2, xAQueueConnectionFactory1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/66_openjms");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      char[] charArray0 = new char[2];
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) '\u0000';
      objectArray0[1] = (Object) evoSuiteFile0;
      objectArray0[3] = (Object) "MxsnLT_<y";
      objectArray0[4] = (Object) locale_Category0;
      objectArray0[0] = (Object) ')';
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "MxsnLT_<y");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)92;
      byteArray1[1] = (byte)92;
      byteArray1[2] = (byte)92;
      byteArray1[5] = (byte)92;
      byteArray1[6] = (byte)92;
      byteArray1[7] = (byte)92;
      byteArray1[8] = (byte)92;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      byteArray0[0] = (byte)92;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      String string0 = "^6  'SN~o1t HD=G";
      EvoSuiteFile evoSuiteFile1 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^6  'SN~o1t HD=G");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "^6  'SN~o1t HD=G");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^6  'SN~o1t HD=G");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "^6  'SN~o1t HD=G");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C/J@*T2'hCd");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setTopicConnectionFactory((int) (byte)92, (TopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      char[] charArray0 = new char[5];
      charArray0[3] = 'Q';
      charArray0[0] = 'Q';
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      stringWriter0.write((int) 'Q');
      stringWriter2.write(charArray0);
      stringWriter2.write(charArray0);
      stringWriter2.close();
      stringWriter2.flush();
      stringWriter0.write(charArray0);
      stringWriter2.write("asR");
      StringWriter stringWriter3 = new StringWriter('\u0000');
      StringWriter stringWriter4 = new StringWriter();
      stringWriter4.flush();
      StringWriter stringWriter5 = new StringWriter();
      StringWriter stringWriter6 = new StringWriter();
      StringWriter stringWriter7 = new StringWriter();
      stringWriter4.write((-1016));
      stringWriter7.flush();
      stringWriter4.flush();
      StringWriter stringWriter8 = new StringWriter();
      stringWriter4.close();
      stringWriter6.flush();
      StringWriter stringWriter9 = new StringWriter('Q');
      stringWriter7.write("asR", 1, 0);
      stringWriter6.write("null argument in addAnyNode");
      stringWriter1.write(charArray0);
      StringWriter stringWriter10 = new StringWriter();
      stringWriter10.close();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      boolean boolean0 = connectionFactories0.removeTopicConnectionFactory(topicConnectionFactory0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList1.add((Locale) null);
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale locale0 = Locale.CANADA;
      Locale locale1 = Locale.JAPAN;
      locale0.getDisplayVariant((Locale) null);
      Locale.setDefault(locale_Category0, locale0);
      Locale locale2 = Locale.ROOT;
      Locale.Category locale_Category1 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category1, locale0);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList4 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      Locale locale3 = Locale.ITALY;
      Locale locale4 = Locale.TRADITIONAL_CHINESE;
      locale1.getDisplayCountry(locale3);
      locale4.getDisplayVariant();
      Set<String> set0 = locale3.getUnicodeLocaleKeys();
      LinkedList<String> linkedList6 = new LinkedList<String>();
      locale3.getDisplayCountry();
      LinkedList<Locale> linkedList7 = new LinkedList<Locale>();
      locale4.getDisplayVariant();
      Locale locale5 = Locale.forLanguageTag("");
      Locale locale6 = Locale.CANADA;
      Locale locale7 = locale5.stripExtensions();
      linkedList2.addFirst((Locale) null);
      locale0.getDisplayVariant(locale1);
      linkedList4.add(locale7);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      LinkedList<String> linkedList8 = new LinkedList<String>();
      linkedList8.add("");
      Locale locale8 = Locale.GERMANY;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList3, (Collection<String>) set0, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList9 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getQueueConnectionFactory(908);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StringReader stringReader0 = new StringReader("78z=");
      stringReader0.reset();
      try { 
        ConnectionFactories.unmarshal(stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parsing Error : Content is not allowed in prolog.
         // Line : 1
         // Column : 1
         //
         verifyException("org.exolab.castor.xml.Unmarshaller", e);
      }
  }
}
