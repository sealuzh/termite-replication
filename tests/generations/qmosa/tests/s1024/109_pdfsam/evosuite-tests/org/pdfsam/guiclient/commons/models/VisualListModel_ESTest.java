/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 10:56:30 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lowagie.text.pdf.PdfGraphics2D;
import java.awt.AWTEventMulticaster;
import java.awt.AWTKeyStroke;
import java.awt.Color;
import java.awt.Dialog;
import java.awt.Dimension;
import java.awt.RenderingHints;
import java.awt.event.AdjustmentListener;
import java.awt.event.ComponentListener;
import java.awt.event.ContainerListener;
import java.awt.event.FocusListener;
import java.awt.event.HierarchyBoundsListener;
import java.awt.event.HierarchyListener;
import java.awt.event.InputMethodListener;
import java.awt.event.ItemListener;
import java.awt.event.KeyListener;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.event.MouseWheelEvent;
import java.awt.event.MouseWheelListener;
import java.awt.event.WindowFocusListener;
import java.awt.event.WindowListener;
import java.awt.event.WindowStateListener;
import java.awt.image.renderable.ParameterBlock;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.EventListener;
import java.util.EventObject;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.ListIterator;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.Vector;
import java.util.function.Predicate;
import java.util.stream.Stream;
import javax.media.jai.CollectionOp;
import javax.media.jai.OperationRegistry;
import javax.media.jai.operator.FPXDescriptor;
import javax.media.jai.operator.IIPResolutionDescriptor;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JLayeredPane;
import javax.swing.JTable;
import javax.swing.JTree;
import javax.swing.ListSelectionModel;
import javax.swing.plaf.basic.BasicTableUI;
import javax.swing.plaf.metal.MetalComboBoxEditor;
import javax.swing.plaf.multi.MultiRootPaneUI;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.text.DefaultCaret;
import javax.swing.tree.DefaultTreeCellEditor;
import javax.swing.tree.DefaultTreeCellRenderer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.138526235860879
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      stack1.add((VisualPageListItem) null);
      stack1.add((VisualPageListItem) null);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack1);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.getSize();
      int[] intArray0 = new int[8];
      intArray0[0] = 2;
      intArray0[1] = 2;
      intArray0[2] = 0;
      intArray0[3] = (-4);
      intArray0[4] = 0;
      intArray0[5] = 2;
      visualListModel0.addElement((VisualPageListItem) null);
      intArray0[1] = 2;
      intArray0[7] = 2;
      visualListModel0.moveUpIndex(2);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-3277));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.iterator();
      VisualPageListItem visualPageListItem0 = null;
      VisualPageListItem visualPageListItem1 = null;
      int int0 = 0;
      stack0.listIterator(0);
      stack0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(stack0);
      int int1 = 0;
      boolean boolean0 = true;
      stack0.add((VisualPageListItem) null);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      // Undeclared exception!
      try { 
        visualListModel0.appendAllElements(vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.138526235860879
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      stack1.add((VisualPageListItem) null);
      stack1.add((VisualPageListItem) null);
      stack1.add((VisualPageListItem) null);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack1);
      visualListModel0.elementChanged((VisualPageListItem) null);
      int int0 = 0;
      visualListModel0.getSize();
      int[] intArray0 = new int[8];
      intArray0[0] = 3;
      intArray0[1] = 3;
      intArray0[2] = 0;
      intArray0[3] = (-4);
      intArray0[4] = 1;
      intArray0[5] = 3;
      visualListModel0.addElement((VisualPageListItem) null);
      intArray0[1] = 3;
      intArray0[7] = 1;
      visualListModel0.moveUpIndex(1);
      VisualPageListItem visualPageListItem1 = null;
      try {
        visualPageListItem1 = new VisualPageListItem((-3277));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.284236195774473
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(3128);
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      WindowListener windowListener0 = mock(WindowListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(windowListener0, windowListener0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseMotionListener) aWTEventMulticaster0, (MouseMotionListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster0, (WindowListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((WindowListener) null, (WindowListener) aWTEventMulticaster0);
      Boolean boolean0 = Boolean.FALSE;
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster3, (WindowFocusListener) aWTEventMulticaster3);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster4, (HierarchyBoundsListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((FocusListener) aWTEventMulticaster6, (FocusListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((AdjustmentListener) aWTEventMulticaster1, (AdjustmentListener) aWTEventMulticaster7);
      Class<AWTEventMulticaster> class0 = AWTEventMulticaster.class;
      AWTEventMulticaster.getListeners((EventListener) aWTEventMulticaster5, class0);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster4, (InputMethodListener) aWTEventMulticaster5);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster7, (KeyListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster6);
      AWTEventMulticaster.remove((AdjustmentListener) aWTEventMulticaster5, (AdjustmentListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster7, (AdjustmentListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster6, (HierarchyBoundsListener) aWTEventMulticaster0);
      visualListModel0.getSize();
      visualListModel0.appendAllElements(stack0);
      int[] intArray0 = new int[1];
      intArray0[0] = 3129;
      visualListModel0.moveUpIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.prependAllElements(stack0);
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.3140250061679084
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      stack0.parallelStream();
      WindowListener windowListener0 = mock(WindowListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(windowListener0, windowListener0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseMotionListener) aWTEventMulticaster0, (MouseMotionListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster0, (WindowListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((WindowListener) null, (WindowListener) aWTEventMulticaster0);
      Boolean boolean0 = Boolean.FALSE;
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster3, (WindowFocusListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((FocusListener) aWTEventMulticaster5, (FocusListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((AdjustmentListener) aWTEventMulticaster1, (AdjustmentListener) aWTEventMulticaster6);
      AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster4, (AdjustmentListener) aWTEventMulticaster5);
      Class<AWTEventMulticaster> class0 = AWTEventMulticaster.class;
      AWTEventMulticaster.getListeners((EventListener) aWTEventMulticaster4, class0);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster4, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((ItemListener) aWTEventMulticaster3, (ItemListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster6, (KeyListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((AdjustmentListener) aWTEventMulticaster3, (AdjustmentListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster6, (AdjustmentListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster5, (HierarchyBoundsListener) aWTEventMulticaster0);
      visualListModel0.getSize();
      visualListModel0.appendAllElements(stack0);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.prependAllElements(stack0);
      visualListModel0.getElements();
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.948720592834763
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack1.add((VisualPageListItem) null);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack1);
      visualListModel0.elementChanged((VisualPageListItem) null);
      int int0 = 0;
      visualListModel0.getSize();
      visualListModel0.moveUpIndex(1);
      VisualPageListItem visualPageListItem1 = null;
      try {
        visualPageListItem1 = new VisualPageListItem((-3277));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.334268222635118
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualListModel0.setData(visualPageListItemArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\" was already parsed.");
      int[] intArray0 = new int[14];
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      Integer.divideUnsigned((-923), (-923));
      Integer.getInteger("`", 1);
      Integer.compareUnsigned(1, (-923));
      Integer integer1 = new Integer(0);
      long long0 = new Integer(0);
      Integer.getInteger("-2WgaSV-^CQPF\"H'<p", integer0);
      Integer integer2 = JLayeredPane.PALETTE_LAYER;
      Integer.remainderUnsigned((-1028), (-1196));
      Integer integer3 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer4 = new Integer((-923));
      Integer integer5 = new Integer((-1196));
      Integer.toUnsignedString(423);
      visualListModel0.moveDownIndex(1);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.moveUpIndex((-1028));
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[0] = null;
      visualListModel0.setData(visualPageListItemArray0);
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      WindowStateListener windowStateListener0 = mock(WindowStateListener.class, new ViolatedAssumptionAnswer());
      WindowStateListener windowStateListener1 = mock(WindowStateListener.class, new ViolatedAssumptionAnswer());
      WindowStateListener windowStateListener2 = AWTEventMulticaster.remove(windowStateListener0, windowStateListener1);
      AWTEventMulticaster.add(windowStateListener2, windowStateListener2);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener1 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener2 = AWTEventMulticaster.add(containerListener0, containerListener1);
      AWTEventMulticaster.remove(containerListener2, containerListener2);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Integer.compare((-736), (-736));
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      int int0 = 0;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer[] integerArray0 = new Integer[9];
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.POPUP_LAYER;
      integerArray0[3] = integer3;
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      Dialog.ModalExclusionType dialog_ModalExclusionType0 = Dialog.ModalExclusionType.APPLICATION_EXCLUDE;
      Predicate<VisualPageListItem> predicate0 = Predicate.isEqual((Object) dialog_ModalExclusionType0);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) visualListModel0);
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate1.or(predicate2);
      Predicate<Object> predicate4 = predicate3.and(predicate2);
      predicate3.negate();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      predicate0.and(predicate1);
      priorityQueue0.removeIf(predicate4);
      priorityQueue0.poll();
      visualListModel0.addAllElements((-730), (Collection<VisualPageListItem>) priorityQueue0);
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      int[] intArray0 = new int[1];
      intArray0[0] = (int) integerArray0[0];
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 201
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.2577753998212904
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(stack0);
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity(0);
      visualListModel0.removeElements(0, 0, true);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      WindowListener windowListener0 = mock(WindowListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(windowListener0, windowListener0);
      AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster0, (WindowListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((WindowListener) null, (WindowListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster1, (WindowFocusListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster1, (HierarchyBoundsListener) aWTEventMulticaster1);
      visualListModel0.clearData();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      Object object0 = new Object();
      Predicate<VisualPageListItem> predicate0 = Predicate.isEqual(object0);
      priorityQueue0.removeIf(predicate0);
      priorityQueue0.poll();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      int[] intArray0 = new int[2];
      intArray0[0] = (-2767);
      intArray0[1] = 0;
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2767
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.5162763147019094
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\" was already parsed.");
      int[] intArray1 = new int[14];
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.moveUpIndexes(intArray1);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      Integer.getInteger("h9L@");
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "s?Vj[Y,%rh}9|\"z70X$");
      visualListModel0.undeleteElements(intArray1);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.48527242678758
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[6];
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.moveUpIndexes(intArray1);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel0.undeleteElements(intArray1);
      visualListModel0.moveDownIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      visualListModel1.reverseElements(intArray0);
      assertNotSame(visualListModel1, visualListModel0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.9350408466191105
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements((-98), 2432, true);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.setSize(2432);
      vector0.spliterator();
      visualListModel0.setData(vector0);
      visualListModel0.moveDownIndex(4692);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      int[] intArray0 = new int[18];
      intArray0[0] = (-98);
      intArray0[1] = 2432;
      intArray0[2] = 4692;
      intArray0[3] = 4692;
      intArray0[13] = 2432;
      try { 
        visualListModel0.moveDownIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2432
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.24706019867436
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      Integer[] integerArray0 = new Integer[5];
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      Integer integer1 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      Integer.divideUnsigned((-923), (int) integerArray0[1]);
      integerArray0[2] = integer2;
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      Integer.getInteger("h9L@");
      Integer integer3 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer4 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer5 = JLayeredPane.DEFAULT_LAYER;
      DefaultCaret defaultCaret0 = new DefaultCaret();
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[2];
      intArray1[0] = 0;
      intArray1[1] = 0;
      visualListModel0.moveDownIndexes(intArray1);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.6139837258843053
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Iterator<VisualPageListItem> iterator0 = stack0.iterator();
      stack0.listIterator(0);
      stack0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(stack0);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity(0);
      visualListModel0.removeElements(0, 0, true);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) iterator0);
      stack0.removeIf(predicate0);
      Object object0 = new Object();
      visualListModel0.getValidElements();
      visualListModel0.updateElementAt(0, (VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = visualPageListItemArray0[3];
      visualPageListItemArray0[5] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      stack0.ensureCapacity(20000);
      stack0.add((VisualPageListItem) null);
      int[] intArray0 = new int[2];
      intArray0[0] = 20000;
      intArray0[1] = 0;
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 20000
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.2448999724663743
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.setSize(2432);
      vector0.spliterator();
      visualListModel0.setData(vector0);
      visualListModel0.moveDownIndex(4692);
      int[] intArray0 = new int[5];
      intArray0[0] = (-98);
      WindowListener windowListener0 = mock(WindowListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(windowListener0, windowListener0);
      AWTEventMulticaster.add((WindowListener) null, (WindowListener) null);
      AWTEventMulticaster.remove((WindowListener) null, (WindowListener) null);
      AWTEventMulticaster.remove((WindowListener) null, (WindowListener) null);
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove(hierarchyBoundsListener1, hierarchyBoundsListener1);
      HierarchyBoundsListener hierarchyBoundsListener2 = AWTEventMulticaster.remove(hierarchyBoundsListener1, hierarchyBoundsListener0);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.remove(hierarchyBoundsListener2, hierarchyBoundsListener2);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, hierarchyBoundsListener1);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove(hierarchyBoundsListener1, hierarchyBoundsListener1);
      HierarchyBoundsListener hierarchyBoundsListener3 = AWTEventMulticaster.remove(hierarchyBoundsListener1, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove(hierarchyBoundsListener2, hierarchyBoundsListener3);
      visualListModel0.getSize();
      visualListModel0.moveUpIndexes(intArray0);
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -98
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.258946254192693
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      int[] intArray1 = new int[2];
      intArray1[0] = 7;
      intArray1[1] = 367;
      visualListModel0.moveDownIndexes(intArray1);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateAnticlockwiseElements(intArray1);
      assertEquals(0, visualListModel1.getSize());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.258946254192693
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      int[] intArray1 = new int[2];
      intArray1[0] = 7;
      intArray1[1] = 367;
      visualListModel0.moveDownIndexes(intArray1);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateAnticlockwiseElements(intArray1);
      assertEquals(0, visualListModel1.getSize());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5653948371180277
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      WindowListener windowListener0 = mock(WindowListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(windowListener0, windowListener0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((MouseMotionListener) aWTEventMulticaster0, (MouseMotionListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster0, (WindowListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((WindowListener) null, (WindowListener) aWTEventMulticaster0);
      Boolean boolean0 = Boolean.FALSE;
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster2, (WindowFocusListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster3, (HierarchyBoundsListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((FocusListener) aWTEventMulticaster5, (FocusListener) aWTEventMulticaster3);
      Class<AWTEventMulticaster> class0 = AWTEventMulticaster.class;
      AWTEventMulticaster.getListeners((EventListener) aWTEventMulticaster4, class0);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster6, (KeyListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster6, (AdjustmentListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster5, (HierarchyBoundsListener) aWTEventMulticaster0);
      visualListModel0.getSize();
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      try { 
        visualListModel0.moveUpIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.8564909139241832
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[5];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[11];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.2434700337671285
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Integer.compare((-1), (-1));
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer.min((-1710), 0);
      Integer integer2 = new Integer((-1710));
      Integer integer3 = Integer.getInteger("%_mj^DH", integer2);
      Integer integer4 = JLayeredPane.PALETTE_LAYER;
      Integer integer5 = FPXDescriptor.MAX_RESOLUTION;
      Integer.getInteger("%_mj^DH", 790);
      Integer integer6 = JLayeredPane.PALETTE_LAYER;
      Integer.remainderUnsigned((-1), (-3234));
      Integer integer7 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer8 = JLayeredPane.MODAL_LAYER;
      Integer integer9 = JLayeredPane.DEFAULT_LAYER;
      Integer[] integerArray0 = new Integer[3];
      integerArray0[0] = integer3;
      integerArray0[1] = integer1;
      Integer integer10 = new Integer((-3234));
      integerArray0[2] = integer10;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      Integer integer11 = JLayeredPane.POPUP_LAYER;
      Integer.toUnsignedString((-1));
      visualListModel0.moveDownIndex(0);
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.8564909139241832
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[0] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = 732;
      try { 
        visualListModel0.moveUpIndexes(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 731
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.9489486659250668
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(stack0);
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity(0);
      visualListModel0.removeElements(0, 0, false);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      visualListModel0.removeElements(intArray0, true);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.0941693886928134
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(stack0);
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity(0);
      visualListModel0.removeElements(0, 0, true);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      WindowListener windowListener0 = mock(WindowListener.class, new ViolatedAssumptionAnswer());
      WindowListener windowListener1 = AWTEventMulticaster.add(windowListener0, windowListener0);
      AWTEventMulticaster.remove(windowListener1, windowListener1);
      Integer.remainderUnsigned(0, (-1517));
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer1 = new Integer(0);
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      Integer[] integerArray0 = new Integer[1];
      integerArray0[0] = integer0;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      Integer.sum(393, (int) integerArray0[0]);
      Integer integer3 = JLayeredPane.POPUP_LAYER;
      Integer[] integerArray1 = new Integer[5];
      integerArray1[0] = integer0;
      integerArray1[1] = integer3;
      integerArray1[2] = integer2;
      integerArray1[3] = integer2;
      integerArray1[4] = integer0;
      DefaultComboBoxModel<Integer> defaultComboBoxModel1 = new DefaultComboBoxModel<Integer>(integerArray1);
      visualListModel0.removeElementAt(0, true);
      // Undeclared exception!
      try { 
        visualListModel0.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.359245666685772
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[14];
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.moveUpIndexes(intArray1);
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      Integer.divideUnsigned((-923), (-923));
      Integer.toUnsignedLong(1);
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer2 = FPXDescriptor.MAX_RESOLUTION;
      Integer.compareUnsigned((-1433), 2891);
      Integer integer3 = JLayeredPane.DRAG_LAYER;
      Integer.toUnsignedLong((-923));
      Integer integer4 = JLayeredPane.DEFAULT_LAYER;
      Integer integer5 = JLayeredPane.DRAG_LAYER;
      Integer integer6 = JLayeredPane.DRAG_LAYER;
      Integer.getInteger((String) null, integer5);
      Integer.min(1, (-1));
      Integer.sum((-1), (-923));
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      visualListModel0.reverseElements(intArray0);
      visualListModel0.reverseElements(intArray1);
      int[] intArray2 = new int[2];
      intArray2[0] = (-924);
      intArray2[1] = (-2570);
      visualListModel0.moveDownIndexes(intArray2);
      visualListModel0.rotateClockwiseElements(intArray1);
      try { 
        visualListModel0.undeleteElements(intArray2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -924
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.234044601196686
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[14];
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.moveUpIndexes(intArray1);
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyBoundsListener0, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster1, (HierarchyBoundsListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster5, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((ItemListener) aWTEventMulticaster6, (ItemListener) aWTEventMulticaster6);
      AWTEventMulticaster.remove((FocusListener) aWTEventMulticaster3, (FocusListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster6);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster7, (HierarchyBoundsListener) aWTEventMulticaster7);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster7, (HierarchyBoundsListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster3, (HierarchyBoundsListener) aWTEventMulticaster10);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster11, (HierarchyBoundsListener) aWTEventMulticaster3);
      Class<AWTEventMulticaster> class0 = AWTEventMulticaster.class;
      AWTEventMulticaster.getListeners((EventListener) aWTEventMulticaster4, class0);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster5, (HierarchyBoundsListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((HierarchyListener) aWTEventMulticaster9, (HierarchyListener) aWTEventMulticaster10);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster5, (HierarchyBoundsListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster8, (ComponentListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster10, (KeyListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster9, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster12, (HierarchyBoundsListener) aWTEventMulticaster11);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster11, (HierarchyBoundsListener) aWTEventMulticaster9);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster3, (HierarchyBoundsListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster9, (HierarchyBoundsListener) aWTEventMulticaster1);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.234044601196686
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[14];
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.moveUpIndexes(intArray1);
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyBoundsListener0, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster1, (HierarchyBoundsListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster2);
      HierarchyBoundsListener hierarchyBoundsListener1 = AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster1, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyBoundsListener1, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster5, (HierarchyBoundsListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster2, hierarchyBoundsListener1);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster5, (HierarchyBoundsListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster3, (HierarchyBoundsListener) aWTEventMulticaster8);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster9, (HierarchyBoundsListener) aWTEventMulticaster3);
      AWTEventMulticaster.add(hierarchyBoundsListener1, (HierarchyBoundsListener) aWTEventMulticaster3);
      AWTEventMulticaster.add(hierarchyBoundsListener1, (HierarchyBoundsListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster8, (KeyListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) aWTEventMulticaster6);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) aWTEventMulticaster9);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster9, (HierarchyBoundsListener) aWTEventMulticaster7);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster3, (HierarchyBoundsListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster7, (HierarchyBoundsListener) aWTEventMulticaster1);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.224909526383219
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(stack0);
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity(0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.043708404463712
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      boolean boolean0 = new Boolean(true);
      stack0.ensureCapacity(0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.24706019867436
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveUpIndexes(intArray0);
      Integer[] integerArray0 = new Integer[5];
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      Integer integer1 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      Integer.divideUnsigned((-923), (int) integerArray0[1]);
      integerArray0[2] = integer2;
      Integer.divideUnsigned((-923), (-2094));
      Integer.toUnsignedLong((-923));
      Integer integer3 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer4 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[3] = integer4;
      Integer.compareUnsigned((int) integerArray0[3], (int) integerArray0[3]);
      Integer integer5 = JLayeredPane.DRAG_LAYER;
      Integer.toUnsignedLong((-923));
      Integer integer6 = JLayeredPane.DEFAULT_LAYER;
      Integer integer7 = JLayeredPane.DRAG_LAYER;
      Integer integer8 = JLayeredPane.DRAG_LAYER;
      Integer.getInteger((String) null, integer6);
      Integer.min((-2365), (-2570));
      Integer.toUnsignedString((int) integerArray0[3]);
      Integer.sum(0, (int) integerArray0[1]);
      integerArray0[4] = integer5;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      visualListModel0.reverseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.484352179906121
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      visualListModel0.setData(visualPageListItemArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\" was already parsed.");
      int[] intArray1 = new int[8];
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.moveUpIndexes(intArray1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "s?Vj[Y,%rh}9|5z70Xd");
      visualListModel0.undeleteElements(intArray1);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      ListSelectionModel listSelectionModel0 = defaultTableColumnModel0.getSelectionModel();
      JTable jTable0 = new JTable((TableModel) null, defaultTableColumnModel0, listSelectionModel0);
      Color color0 = jTable0.getSelectionBackground();
      float[] floatArray0 = new float[6];
      floatArray0[0] = (-561.7F);
      floatArray0[1] = (float) 0;
      floatArray0[2] = (float) 0;
      floatArray0[3] = (float) 0;
      floatArray0[4] = (float) 0;
      floatArray0[5] = (float) 0;
      color0.getRGBColorComponents(floatArray0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.9663267452196522
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualListModel0.setData(visualPageListItemArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      visualListModel0.clearData();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "o*s");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "o*s");
      Predicate<VisualPageListItem> predicate0 = Predicate.isEqual((Object) visualListModel0);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate2 = predicate1.or(predicate1);
      Predicate<Object> predicate3 = predicate2.and(predicate1);
      Predicate.isEqual((Object) null);
      Predicate<Object> predicate4 = predicate3.and(predicate2);
      predicate3.negate();
      predicate4.and(predicate2);
      predicate4.negate();
      Predicate<Object> predicate5 = predicate3.and(predicate2);
      predicate4.negate();
      predicate3.or(predicate1);
      predicate5.negate();
      Predicate<Object> predicate6 = predicate3.negate();
      predicate6.negate();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Predicate.isEqual((Object) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "o*s");
      predicate0.negate();
      visualListModel0.addElement(visualPageListItemArray0[0]);
      visualListModel0.removeElements(intArray0, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.8856683788852349
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualListModel0.setData(visualPageListItemArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      visualListModel0.clearData();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "o*s");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "o*s");
      Predicate<VisualPageListItem> predicate0 = Predicate.isEqual((Object) visualListModel0);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate2 = predicate1.or(predicate1);
      Predicate<Object> predicate3 = predicate2.and(predicate1);
      Predicate.isEqual((Object) null);
      Predicate<Object> predicate4 = predicate3.and(predicate2);
      predicate3.negate();
      predicate4.or(predicate3);
      Predicate<Object> predicate5 = predicate3.and(predicate2);
      predicate4.negate();
      predicate3.or(predicate1);
      predicate5.negate();
      Predicate<Object> predicate6 = predicate3.negate();
      predicate6.negate();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "o*s");
      Predicate.isEqual((Object) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "o*s");
      predicate0.negate();
      visualListModel0.addElement(visualPageListItemArray0[0]);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.8618650377696493
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      Integer[] integerArray0 = new Integer[5];
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      Integer integer1 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      Integer.divideUnsigned((-923), (int) integerArray0[1]);
      integerArray0[2] = integer2;
      Integer.toUnsignedLong((-923));
      Integer integer3 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer4 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[3] = integer4;
      int int0 = (-1);
      Integer.compareUnsigned((-1), (-1));
      Integer integer5 = JLayeredPane.PALETTE_LAYER;
      Integer.toUnsignedLong((-923));
      Integer integer6 = JLayeredPane.DEFAULT_LAYER;
      Integer integer7 = JLayeredPane.DRAG_LAYER;
      Integer integer8 = JLayeredPane.DEFAULT_LAYER;
      Integer.sum((int) integerArray0[2], 0);
      Integer.getInteger((String) null, integer6);
      Integer.min((-2365), (-2553));
      Integer.sum((-1553), int0);
      intArray0[0] = (int) integer5;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      try { 
        visualListModel0.reverseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 100
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.235998921362983
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[14];
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.moveUpIndexes(intArray1);
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyBoundsListener0, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster1, (HierarchyBoundsListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster4, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((ItemListener) aWTEventMulticaster5, (ItemListener) aWTEventMulticaster5);
      AWTEventMulticaster.remove((FocusListener) aWTEventMulticaster3, (FocusListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster5);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster6, (HierarchyBoundsListener) aWTEventMulticaster6);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster6, (HierarchyBoundsListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster3, (HierarchyBoundsListener) aWTEventMulticaster9);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster10, (HierarchyBoundsListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster4, (HierarchyBoundsListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((HierarchyListener) aWTEventMulticaster8, (HierarchyListener) aWTEventMulticaster9);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster4, (HierarchyBoundsListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster7, (ComponentListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster9, (KeyListener) aWTEventMulticaster0);
      Boolean.valueOf("WiDL");
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      arrayList0.add((Object) aWTEventMulticaster9);
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.moveUpIndexes(intArray0);
      Random.setNextRandom(6);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.3791235169376774
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[5];
      intArray0[0] = (-2503);
      intArray0[1] = 1664;
      intArray0[2] = 6;
      intArray0[3] = 736;
      intArray0[4] = 0;
      visualListModel1.undeleteElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel1.removeElements(6, (-2503), true);
      visualListModel1.reverseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      OperationRegistry operationRegistry0 = new OperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "", parameterBlock0);
      // Undeclared exception!
      try { 
        visualListModel1.prependAllElements(collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.iterator();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stack0.listIterator(0);
      stack0.add((VisualPageListItem) null);
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      WindowStateListener windowStateListener0 = mock(WindowStateListener.class, new ViolatedAssumptionAnswer());
      WindowStateListener windowStateListener1 = AWTEventMulticaster.add(windowStateListener0, windowStateListener0);
      AWTEventMulticaster.remove(windowStateListener1, windowStateListener1);
      WindowStateListener windowStateListener2 = AWTEventMulticaster.add((WindowStateListener) null, windowStateListener0);
      AWTEventMulticaster.add(windowStateListener2, windowStateListener2);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.8564909139241832
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      arrayList0.add((Object) linkedHashSet0);
      Object object0 = new Object();
      Object object1 = new Object();
      Stream<Object> stream0 = arrayList0.stream();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) sunHints_Key0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate2.negate();
      predicate2.and(predicate3);
      predicate2.or(predicate1);
      predicate0.or(predicate2);
      arrayList1.removeIf(predicate0);
      arrayList1.add((Object) stream0);
      arrayList1.stream();
      LinkedHashSet<Object> linkedHashSet1 = new LinkedHashSet<Object>();
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      linkedHashSet1.containsAll(arrayList0);
      linkedHashSet1.add(stream0);
      arrayList0.add((Object) linkedHashSet1);
      Boolean boolean0 = new Boolean("qO");
      arrayList0.add((Object) predicate0);
      LinkedHashSet<Object> linkedHashSet2 = new LinkedHashSet<Object>();
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<Object> vector0 = new Vector<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(vector0, vector0);
      int[] intArray0 = new int[0];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      ParameterBlock parameterBlock1 = new ParameterBlock();
      parameterBlock0.set((short) (-3038), 728);
      FileSystemHandling.shouldAllThrowIOExceptions();
      parameterBlock0.getSources();
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      int[] intArray1 = new int[0];
      visualListModel0.rotateClockwiseElements(intArray1);
      Stack<Object> stack0 = new Stack<Object>();
      JComboBox<Object> jComboBox1 = new JComboBox<Object>(vector0);
      MultiRootPaneUI multiRootPaneUI0 = new MultiRootPaneUI();
      Dimension dimension0 = new Dimension();
      dimension0.setSize(1209.3055972, 10.0);
      BasicTableUI basicTableUI0 = new BasicTableUI();
      // Undeclared exception!
      try { 
        basicTableUI0.getPreferredSize(jComboBox1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.plaf.basic.BasicTableUI", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.0306914077415805
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Iterator<VisualPageListItem> iterator0 = stack0.iterator();
      VisualPageListItem visualPageListItem0 = null;
      VisualPageListItem visualPageListItem1 = null;
      int int0 = 0;
      stack0.listIterator(0);
      stack0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(stack0);
      int int1 = 0;
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity(0);
      visualListModel0.removeElements(0, 0, false);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      Predicate.isEqual((Object) iterator0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.getElementAt(1998);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.5467743669247533
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Iterator<VisualPageListItem> iterator0 = stack0.iterator();
      VisualPageListItem visualPageListItem0 = null;
      stack0.listIterator(0);
      stack0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(stack0);
      int int0 = 0;
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity(0);
      visualListModel0.removeElements(0, 0, true);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) iterator0);
      stack0.removeIf(predicate0);
      Object object0 = new Object();
      visualListModel0.getValidElements();
      visualListModel0.updateElementAt(0, (VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      int int1 = 20000;
      stack0.ensureCapacity(20000);
      stack0.add((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.481381183409855
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[6];
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.moveUpIndexes(intArray1);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove(hierarchyBoundsListener1, hierarchyBoundsListener1);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, hierarchyBoundsListener1);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener2 = AWTEventMulticaster.add((HierarchyBoundsListener) null, hierarchyBoundsListener1);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener3 = AWTEventMulticaster.add(hierarchyBoundsListener2, hierarchyBoundsListener2);
      HierarchyBoundsListener hierarchyBoundsListener4 = AWTEventMulticaster.remove(hierarchyBoundsListener1, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add(hierarchyBoundsListener4, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener5 = AWTEventMulticaster.remove(hierarchyBoundsListener3, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add(hierarchyBoundsListener5, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, hierarchyBoundsListener5);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, hierarchyBoundsListener1);
      HierarchyBoundsListener hierarchyBoundsListener6 = AWTEventMulticaster.remove(hierarchyBoundsListener1, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove(hierarchyBoundsListener6, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, hierarchyBoundsListener5);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, hierarchyBoundsListener3);
      visualListModel0.undeleteElements(intArray1);
      visualListModel0.moveDownIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.4917058533980443
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualListModel0.setData(visualPageListItemArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\" was already parsed.");
      int[] intArray1 = new int[14];
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.moveUpIndexes(intArray1);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "s?Vj[Y,%rh}9|\"z70X$");
      visualListModel0.undeleteElements(intArray1);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      String string0 = "Ty";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Ty");
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.9557135998277697
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualListModel0.setData(visualPageListItemArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      visualListModel0.clearData();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "o*s");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "o*s");
      Predicate<VisualPageListItem> predicate0 = Predicate.isEqual((Object) visualListModel0);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate2 = predicate1.or(predicate1);
      Predicate<Object> predicate3 = predicate2.and(predicate1);
      Predicate.isEqual((Object) null);
      Predicate<Object> predicate4 = predicate3.and(predicate2);
      predicate3.negate();
      Predicate<Object> predicate5 = predicate4.or(predicate3);
      predicate4.negate();
      predicate3.or(predicate1);
      predicate5.negate();
      Predicate<Object> predicate6 = predicate3.negate();
      predicate6.negate();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "o*s");
      Predicate.isEqual((Object) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "o*s");
      predicate0.negate();
      visualListModel0.addElement(visualPageListItemArray0[0]);
      visualListModel0.getSize();
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity(0);
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Stream<Object> stream0 = arrayList0.stream();
      Object object0 = new Object();
      arrayList0.add(object0);
      arrayList0.stream();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      arrayList0.add((Object) stream0);
      arrayList0.add((Object) linkedHashSet0);
      LinkedHashSet<Object> linkedHashSet1 = new LinkedHashSet<Object>();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      hashSet0.retainAll(vector0);
      visualListModel0.prependAllElements(stack0);
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer[] integerArray0 = new Integer[9];
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      Integer.compare((int) integerArray0[1], (int) integerArray0[1]);
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.POPUP_LAYER;
      integerArray0[3] = integer3;
      Integer.min(0, (int) integerArray0[1]);
      Integer.getInteger("%_mj^DH", integer3);
      Integer integer4 = JLayeredPane.PALETTE_LAYER;
      Integer integer5 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer6 = Integer.getInteger("`", (int) integerArray0[2]);
      integerArray0[6] = integer6;
      Integer.compareUnsigned(0, 0);
      Integer integer7 = new Integer((int) integerArray0[2]);
      Integer.toUnsignedLong((-1196));
      Integer.getInteger("-2WgaSV-^CQPF\"H'<p", integer7);
      Integer integer8 = JLayeredPane.PALETTE_LAYER;
      Integer.remainderUnsigned((-2416), (int) integerArray0[3]);
      Integer integer9 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer10 = new Integer((int) integerArray0[2]);
      Integer[] integerArray1 = new Integer[4];
      integerArray1[0] = integerArray0[3];
      int int0 = new Integer(0);
      integerArray1[1] = integer2;
      Integer.toUnsignedString(50);
      visualListModel0.moveDownIndex(0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.2584261358947217
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      Integer[] integerArray0 = new Integer[8];
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.DRAG_LAYER;
      integerArray0[3] = integer3;
      Integer integer4 = new Integer((int) integerArray0[2]);
      integerArray0[4] = integer4;
      Integer integer5 = JLayeredPane.PALETTE_LAYER;
      integerArray0[5] = integer5;
      Integer.getInteger("The Hiearchy.overrideAsNeeded method has been deprecated.");
      Integer integer6 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[6] = integer6;
      Integer integer7 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[7] = integer7;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      int[] intArray1 = new int[3];
      intArray1[0] = (int) integerArray0[1];
      intArray1[1] = (int) integerArray0[6];
      intArray1[2] = (-1);
      visualListModel0.reverseElements(intArray1);
      Integer.compare((int) integerArray0[4], (int) integerArray0[7]);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.addAllElements((int) integerArray0[4], (Collection<VisualPageListItem>) hashSet0);
      visualListModel0.rotateClockwiseElements(intArray1);
      assertEquals(3, intArray1.length);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(0, 0, true);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.659334098393565
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualPageListItemArray0[0] = null;
      visualListModel0.setData(visualPageListItemArray0);
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "\" was already parsed.";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\" was already parsed.");
      int[] intArray0 = new int[1];
      intArray0[0] = 1066;
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1066
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.8564909139241832
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.9593337382266454
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[0] = null;
      visualListModel0.setData(visualPageListItemArray0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.prependAllElements(vector0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      Vector<VisualPageListItem> vector1 = new Vector<VisualPageListItem>();
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.5981863871455346
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.getElements();
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.iterator();
      ListIterator<VisualPageListItem> listIterator0 = stack0.listIterator(0);
      stack0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(stack0);
      Object object0 = new Object();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Stream<Object> stream0 = arrayList0.stream();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList1.add((Object) stream0);
      arrayList1.stream();
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      arrayList0.add((Object) listIterator0);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      arrayList0.add((Object) pdfGraphics2D_HyperLinkKey0);
      LinkedHashSet<Object> linkedHashSet1 = new LinkedHashSet<Object>();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      hashSet0.retainAll(arrayList0);
      visualListModel0.prependAllElements(hashSet0);
      System.setCurrentTimeMillis((-637L));
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer[] integerArray0 = new Integer[9];
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.POPUP_LAYER;
      integerArray0[3] = integer2;
      Integer integer4 = JLayeredPane.PALETTE_LAYER;
      Integer integer5 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer6 = Integer.getInteger("", (int) integerArray0[2]);
      integerArray0[6] = integer6;
      Integer integer7 = JLayeredPane.PALETTE_LAYER;
      Integer integer8 = FPXDescriptor.MAX_RESOLUTION;
      Integer.getInteger("", integer8);
      Integer.remainderUnsigned((-2416), (int) integerArray0[3]);
      Integer integer9 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer10 = new Integer((int) integerArray0[2]);
      Integer integer11 = JLayeredPane.DEFAULT_LAYER;
      Integer[] integerArray1 = new Integer[4];
      integerArray1[0] = integer3;
      Integer integer12 = JLayeredPane.POPUP_LAYER;
      integerArray1[1] = integer12;
      integerArray1[2] = integer0;
      integerArray1[3] = integer5;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray1);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(65535, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 65535
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      WindowStateListener windowStateListener0 = mock(WindowStateListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(windowStateListener0, windowStateListener0);
      AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add(windowStateListener0, windowStateListener0);
      AWTEventMulticaster.remove((AdjustmentListener) aWTEventMulticaster1, (AdjustmentListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((AdjustmentListener) null, (AdjustmentListener) null);
      AWTEventMulticaster.add((MouseListener) aWTEventMulticaster2, (MouseListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((AdjustmentListener) aWTEventMulticaster1, (AdjustmentListener) null);
      MetalComboBoxEditor metalComboBoxEditor0 = new MetalComboBoxEditor();
      AWTEventMulticaster.add((FocusListener) metalComboBoxEditor0, (FocusListener) metalComboBoxEditor0);
      int int0 = 0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      VisualListModel visualListModel0 = new VisualListModel();
      Boolean boolean0 = new Boolean("qO");
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object[] objectArray0 = new Object[3];
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-315));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer[] integerArray0 = new Integer[9];
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.POPUP_LAYER;
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.PALETTE_LAYER;
      Integer integer5 = new Integer((int) integerArray0[3]);
      Integer integer6 = Integer.getInteger("INFO", (int) integerArray0[2]);
      integerArray0[6] = integer6;
      Integer.remainderUnsigned((int) integerArray0[2], (int) integerArray0[3]);
      integerArray0[7] = integerArray0[1];
      Integer integer7 = new Integer((int) integerArray0[1]);
      visualListModel0.moveUpIndex((-92));
      Integer integer8 = JLayeredPane.POPUP_LAYER;
      Integer integer9 = JLayeredPane.POPUP_LAYER;
      Integer.compare((int) integerArray0[0], (int) integerArray0[3]);
      Integer integer10 = JLayeredPane.MODAL_LAYER;
      assertFalse(integer10.equals((Object)integer4));
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      RenderingHints.Key[] renderingHints_KeyArray0 = new RenderingHints.Key[2];
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      renderingHints_KeyArray0[0] = (RenderingHints.Key) sunHints_Key0;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      renderingHints_KeyArray0[1] = (RenderingHints.Key) sunHints_Key1;
      JComboBox<RenderingHints.Key> jComboBox0 = new JComboBox<RenderingHints.Key>(renderingHints_KeyArray0);
      jComboBox0.getAction();
      JTree jTree0 = new JTree(objectArray0);
      JComboBox<Dialog.ModalExclusionType> jComboBox1 = new JComboBox<Dialog.ModalExclusionType>();
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0);
      assertNotNull(collection0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.addAllElements(782, (Collection<VisualPageListItem>) stack0);
      assertTrue(stack0.empty());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer[] integerArray0 = new Integer[9];
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[2] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      Integer integer3 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer.getInteger((String) null, integer3);
      Integer integer4 = JLayeredPane.PALETTE_LAYER;
      Integer integer5 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer6 = Integer.getInteger("%_mj^DH", (int) integerArray0[2]);
      Integer.compareUnsigned((int) integer6, 0);
      Integer integer7 = JLayeredPane.PALETTE_LAYER;
      Integer.toUnsignedLong((int) integerArray0[0]);
      Integer.getInteger("org.pdfsam.guiclient.commons.models.VisualListModel", (Integer) null);
      Integer integer8 = JLayeredPane.PALETTE_LAYER;
      Integer.remainderUnsigned(2146, (-1196));
      Integer integer9 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer10 = new Integer((-1021));
      Integer.compareUnsigned((-2000), 40000);
      Integer.toUnsignedString(1);
      visualListModel0.moveDownIndex((-1021));
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      byte[] byteArray0 = new byte[20];
      byteArray0[0] = (byte)16;
      parameterBlock0.add(0.0);
      byteArray0[1] = (byte) (-38);
      ParameterBlock parameterBlock1 = new ParameterBlock();
      byteArray0[3] = (byte)9;
      Color color0 = Color.getColor((String) null, (int) (byte) (-38));
      ParameterBlock parameterBlock2 = new ParameterBlock();
      parameterBlock0.addSource(color0);
      float[] floatArray0 = new float[9];
      float[] floatArray1 = Color.RGBtoHSB((byte)16, 2807, (byte)16, floatArray0);
      Color.getColor("Fh`?w+4,qhD", (-2487));
      color0.getColorSpace();
      Color color1 = Color.getColor("Fh`?w+4,qhD", (int) (byte) (-38));
      color0.getRGBColorComponents(floatArray1);
      float[] floatArray2 = color1.getRGBColorComponents(floatArray0);
      color0.getComponents(floatArray2);
      Color.getColor("Fh`?w+4,qhD");
      float[] floatArray3 = color0.getColorComponents(floatArray0);
      color1.getRGBComponents(floatArray0);
      floatArray0[2] = (float) (byte) (-38);
      Color.RGBtoHSB(3, 2012, 2807, floatArray3);
      byteArray0[12] = (byte)9;
      Color.getColor("Fh`?w+4,qhD", (int) (byte)9);
      color0.getColorComponents(floatArray0);
      Color color2 = Color.RED;
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer[] integerArray0 = new Integer[9];
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.DRAG_LAYER;
      integerArray0[2] = integer0;
      Integer integer3 = new Integer((int) integerArray0[0]);
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      Integer integer5 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer6 = new Integer((int) integerArray0[3]);
      Integer.compareUnsigned(1, (int) integerArray0[0]);
      Integer.min((int) integerArray0[0], (-80));
      Integer integer7 = Integer.getInteger("INFO", (int) integerArray0[2]);
      integerArray0[6] = integer7;
      Integer.min(1, (-3976));
      integerArray0[7] = integerArray0[1];
      Integer integer8 = new Integer((int) integerArray0[1]);
      integerArray0[8] = integer6;
      visualListModel0.moveUpIndex(1);
      Integer integer9 = JLayeredPane.POPUP_LAYER;
      Integer.compareUnsigned((-2202), (-1));
      Integer.getInteger((String) null, (int) integerArray0[0]);
      Integer.remainderUnsigned((-710), (-2202));
      try { 
        Integer.decode("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Zero length string
         //
         verifyException("java.lang.Integer", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer[] integerArray0 = new Integer[9];
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.DRAG_LAYER;
      integerArray0[2] = integer0;
      Integer integer3 = new Integer((int) integerArray0[0]);
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      Integer integer5 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer6 = new Integer((int) integerArray0[3]);
      Integer.compareUnsigned(1, (int) integerArray0[0]);
      int int0 = new Integer((int) integerArray0[0]);
      Integer integer7 = Integer.getInteger("INFO", (int) integerArray0[2]);
      integerArray0[6] = integer7;
      Integer.min(1, (-3976));
      integerArray0[7] = integerArray0[1];
      Integer integer8 = new Integer((int) integerArray0[1]);
      integerArray0[8] = integerArray0[0];
      visualListModel0.moveUpIndex(1);
      Integer integer9 = JLayeredPane.POPUP_LAYER;
      Integer.compareUnsigned((-2202), (-1));
      Integer.getInteger((String) null, (int) integerArray0[0]);
      int int1 = new Integer((int) integerArray0[8]);
      try { 
        Integer.decode("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Zero length string
         //
         verifyException("java.lang.Integer", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 82;
      // Undeclared exception!
      try { 
        visualListModel0.subList(82, (-2105));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(82) > toIndex(-2105)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      byte[] byteArray0 = new byte[20];
      byteArray0[0] = (byte)16;
      byteArray0[1] = (byte) (-1);
      ParameterBlock parameterBlock1 = new ParameterBlock();
      byteArray0[3] = (byte)3;
      Color color0 = Color.getColor((String) null, (int) (byte) (-1));
      ParameterBlock parameterBlock2 = new ParameterBlock();
      parameterBlock0.addSource(color0);
      float[] floatArray0 = new float[9];
      Color.RGBtoHSB((byte)16, 2807, (byte)16, floatArray0);
      Color.getColor("Fh`?w+4,qhD", (-2487));
      Color color1 = Color.getColor("Fh`?w+4,qhD", (int) (byte) (-1));
      color1.getRGBColorComponents(floatArray0);
      Color.getColor("Fh`?w+4,qhD");
      float[] floatArray1 = color0.getColorComponents(floatArray0);
      color1.getRGBComponents(floatArray0);
      floatArray0[2] = (float) (byte) (-1);
      Color.RGBtoHSB(3, 2012, 2807, floatArray1);
      byteArray0[12] = (byte)3;
      // Undeclared exception!
      try { 
        visualListModel0.subList((int) (byte)3, (-1), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(3) > toIndex(-1)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object object0 = new Object();
      Dialog.ModalExclusionType dialog_ModalExclusionType0 = Dialog.ModalExclusionType.TOOLKIT_EXCLUDE;
      arrayList0.add((Object) dialog_ModalExclusionType0);
      Stream<Object> stream0 = arrayList0.stream();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList1.add(object0);
      arrayList1.clone();
      arrayList1.add((Object) null);
      arrayList1.add((Object) stream0);
      arrayList1.stream();
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)54;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 16, 16);
      linkedHashSet0.add(byteArrayInputStream0);
      LinkedHashSet<Object> linkedHashSet1 = new LinkedHashSet<Object>();
      byte[] byteArray1 = new byte[10];
      byteArray1[2] = (byte)1;
      byteArray1[3] = (byte)3;
      byteArray1[4] = (byte)3;
      linkedHashSet1.containsAll(linkedHashSet0);
      linkedHashSet0.add(stream0);
      linkedHashSet1.add((Object) null);
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.subList((int) (byte)3, (-3084), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(3) > toIndex(-3084)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      RenderingHints.Key[] renderingHints_KeyArray0 = new RenderingHints.Key[7];
      renderingHints_KeyArray0[1] = (RenderingHints.Key) sunHints_Key1;
      renderingHints_KeyArray0[3] = (RenderingHints.Key) sunHints_Key1;
      renderingHints_KeyArray0[4] = (RenderingHints.Key) sunHints_Key1;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      RenderingHints.Key[] renderingHints_KeyArray1 = new RenderingHints.Key[0];
      JComboBox<RenderingHints.Key> jComboBox0 = new JComboBox<RenderingHints.Key>(renderingHints_KeyArray1);
      JComboBox<Dialog.ModalExclusionType> jComboBox1 = new JComboBox<Dialog.ModalExclusionType>();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, false);
      assertNotNull(collection0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.addAllElements((-632), (Collection<VisualPageListItem>) arrayList0);
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyBoundsListener1, hierarchyBoundsListener1);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyBoundsListener1, hierarchyBoundsListener1);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster1, (HierarchyBoundsListener) aWTEventMulticaster2);
      Hashtable<PdfGraphics2D.HyperLinkKey, AWTKeyStroke> hashtable0 = new Hashtable<PdfGraphics2D.HyperLinkKey, AWTKeyStroke>();
      JTree jTree0 = new JTree(hashtable0);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jTree0, (-632), 1130L, (-632), (-632), (-632), (-632), true, (-632), (-632), (-632));
      // Undeclared exception!
      try { 
        aWTEventMulticaster1.mouseWheelMoved(mouseWheelEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // codegen.java.awt.event.HierarchyBoundsListener$MockitoMock$171441103 cannot be cast to java.awt.event.MouseWheelListener
         //
         verifyException("java.awt.AWTEventMulticaster", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      arrayList0.add((Object) hashSet0);
      Object object0 = new Object();
      arrayList0.stream();
      arrayList0.add(object0);
      Stream<Object> stream0 = arrayList0.stream();
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      arrayList0.add((Object) stream0);
      arrayList0.add(object0);
      LinkedHashSet<Object> linkedHashSet1 = new LinkedHashSet<Object>();
      hashSet0.retainAll(linkedHashSet0);
      int int0 = visualListModel0.getSize();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.4399756932787804
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Stack<Integer> stack1 = new Stack<Integer>();
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(stack1);
      Integer integer0 = new Integer(46);
      stack1.add(integer0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      Class<AWTEventMulticaster> class0 = AWTEventMulticaster.class;
      jComboBox0.getListeners(class0);
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>(defaultComboBoxModel0);
      int[] intArray0 = new int[5];
      intArray0[0] = 46;
      intArray0[1] = 46;
      intArray0[2] = 46;
      intArray0[3] = 46;
      intArray0[4] = 46;
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.removeElements(1975, (-1196), true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[20];
      byteArray0[0] = (byte)16;
      byteArray0[1] = (byte) (-5);
      ParameterBlock parameterBlock1 = new ParameterBlock();
      byteArray0[3] = (byte)9;
      Color color0 = Color.getColor((String) null, (int) (byte) (-5));
      ParameterBlock parameterBlock2 = new ParameterBlock();
      parameterBlock0.addSource(color0);
      float[] floatArray0 = new float[9];
      float[] floatArray1 = Color.RGBtoHSB((byte)16, 2807, (byte)16, floatArray0);
      Color color1 = Color.red;
      Color color2 = Color.getColor("Fh`?w+4,qhD", (int) (byte) (-5));
      Color color3 = Color.orange;
      Color.RGBtoHSB(1546, (byte) (-5), (byte)16, floatArray1);
      float[] floatArray2 = color0.getColorComponents(floatArray0);
      color2.getRGBComponents(floatArray0);
      byteArray0[12] = (byte) (-5);
      Color.RGBtoHSB(3, 2012, 2807, floatArray2);
      Color.getColor("B3BKA~I!Mq+=_T/*d", (int) (byte) (-5));
      byteArray0[12] = (byte)9;
      Color color4 = Color.magenta;
      color0.getColorComponents(floatArray0);
      Color color5 = Color.RED;
      color0.getRGBColorComponents(floatArray0);
      int[] intArray0 = new int[1];
      visualListModel0.removeElements(intArray0, false);
      assertEquals(1, intArray0.length);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      arrayList0.add((Object) hashSet0);
      Object object0 = new Object();
      Object object1 = new Object();
      Stream<Object> stream0 = arrayList0.stream();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) sunHints_Key0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      predicate2.or(predicate1);
      predicate0.or(predicate2);
      arrayList1.removeIf(predicate0);
      arrayList1.add((Object) stream0);
      arrayList1.stream();
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      linkedHashSet0.add(stream0);
      arrayList0.add(object1);
      arrayList0.add((Object) linkedHashSet0);
      Boolean boolean0 = new Boolean("qO");
      Integer.compareUnsigned(1000, 7);
      Integer.toUnsignedString(0);
      visualListModel0.moveDownIndex(7);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.0141266108053313
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer[] integerArray0 = new Integer[9];
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      integerArray0[7] = integer0;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.POPUP_LAYER;
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.PALETTE_LAYER;
      Integer integer5 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer6 = Integer.getInteger("", (int) integerArray0[2]);
      integerArray0[6] = integer6;
      Integer integer7 = JLayeredPane.PALETTE_LAYER;
      Integer integer8 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer9 = JLayeredPane.PALETTE_LAYER;
      Integer integer10 = JLayeredPane.DEFAULT_LAYER;
      Integer integer11 = JLayeredPane.POPUP_LAYER;
      Integer.getInteger("", integer11);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      int[] intArray0 = new int[6];
      intArray0[0] = (int) integerArray0[2];
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = (int) integerArray0[6];
      intArray0[5] = 0;
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      Object object0 = visualListModel0.getElementAt(0);
      assertNull(object0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer[] integerArray0 = new Integer[9];
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      Integer.compare((int) integerArray0[1], (int) integerArray0[1]);
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.POPUP_LAYER;
      integerArray0[3] = integer3;
      Integer.min(0, (int) integerArray0[1]);
      Integer.getInteger("%_mj^DH", integer3);
      Integer integer4 = JLayeredPane.PALETTE_LAYER;
      Integer integer5 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer6 = Integer.getInteger("`", (int) integerArray0[2]);
      integerArray0[6] = integer6;
      Integer.compareUnsigned(0, 0);
      Integer integer7 = JLayeredPane.PALETTE_LAYER;
      Integer.toUnsignedLong((-1196));
      Integer.getInteger("-2WgaSV-^CQPF\"H'<p", integer7);
      Integer integer8 = JLayeredPane.PALETTE_LAYER;
      Integer.remainderUnsigned((-2416), (int) integerArray0[3]);
      Integer integer9 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer10 = new Integer((int) integerArray0[2]);
      Integer.toUnsignedString(50);
      visualListModel0.moveDownIndex(0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      WindowStateListener windowStateListener0 = mock(WindowStateListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(windowStateListener0, windowStateListener0);
      AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add(windowStateListener0, windowStateListener0);
      AWTEventMulticaster.remove((AdjustmentListener) aWTEventMulticaster1, (AdjustmentListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((AdjustmentListener) null, (AdjustmentListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster2, (HierarchyListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster6, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster5, (ComponentListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster8, (HierarchyBoundsListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) aWTEventMulticaster7);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster9, (HierarchyBoundsListener) aWTEventMulticaster2);
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      Random.setNextRandom((-1));
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.setData(vector0);
      assertTrue(vector0.isEmpty());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.8386877468598375
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      MetalComboBoxEditor metalComboBoxEditor0 = new MetalComboBoxEditor();
      Object[] objectArray0 = new Object[9];
      objectArray0[3] = (Object) metalComboBoxEditor0;
      objectArray0[4] = (Object) metalComboBoxEditor0;
      objectArray0[6] = (Object) metalComboBoxEditor0;
      objectArray0[7] = (Object) metalComboBoxEditor0;
      JTree jTree0 = new JTree(objectArray0);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getMouseMotionListeners();
      JComboBox<Dialog.ModalExclusionType> jComboBox0 = new JComboBox<Dialog.ModalExclusionType>();
      DefaultCellEditor defaultCellEditor0 = new DefaultCellEditor(jComboBox0);
      DefaultTreeCellEditor defaultTreeCellEditor0 = new DefaultTreeCellEditor(jTree0, defaultTreeCellRenderer0, defaultCellEditor0);
      defaultCellEditor0.getComponent();
      jTree0.getPreferredSize();
      defaultTreeCellEditor0.isCellEditable((EventObject) null);
      metalComboBoxEditor0.addActionListener(defaultTreeCellEditor0);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(0, 0, true);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList((-2202), 1852, true);
      assertNull(collection0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.1032191624484695
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      stack0.parallelStream();
      WindowListener windowListener0 = mock(WindowListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(windowListener0, windowListener0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseMotionListener) aWTEventMulticaster0, (MouseMotionListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster0, (WindowListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((WindowListener) null, (WindowListener) aWTEventMulticaster0);
      Boolean boolean0 = Boolean.FALSE;
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster3, (WindowFocusListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster4, (HierarchyBoundsListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((FocusListener) aWTEventMulticaster6, (FocusListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((AdjustmentListener) aWTEventMulticaster1, (AdjustmentListener) aWTEventMulticaster7);
      Class<AWTEventMulticaster> class0 = AWTEventMulticaster.class;
      AWTEventMulticaster.getListeners((EventListener) aWTEventMulticaster5, class0);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster4, (InputMethodListener) aWTEventMulticaster5);
      AWTEventMulticaster.remove((ItemListener) aWTEventMulticaster3, (ItemListener) aWTEventMulticaster5);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster7, (KeyListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((AdjustmentListener) aWTEventMulticaster5, (AdjustmentListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster7, (AdjustmentListener) aWTEventMulticaster1);
      visualListModel0.getSize();
      visualListModel0.appendAllElements(stack0);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.prependAllElements(stack0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer[] integerArray0 = new Integer[8];
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      integerArray0[0] = integer0;
      Integer.min((int) integerArray0[0], (-2434));
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.POPUP_LAYER;
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.PALETTE_LAYER;
      integerArray0[4] = integer3;
      Integer.sum(11, 2107);
      Integer integer5 = JLayeredPane.PALETTE_LAYER;
      integerArray0[5] = integer5;
      Integer integer6 = JLayeredPane.DEFAULT_LAYER;
      Integer.getInteger("DEGREES_270");
      integerArray0[6] = integer6;
      Integer integer7 = JLayeredPane.PALETTE_LAYER;
      integerArray0[7] = integer7;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      jComboBox0.transferFocusDownCycle();
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.clearData();
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.4399756932787804
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 0;
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.removeElements(0, (-1196), false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Color color0 = Color.getColor("!W?zzp]%&=NE[", 1043);
      float[] floatArray0 = new float[5];
      Color.RGBtoHSB(1043, 2807, 1043, floatArray0);
      Color.getColor("!W?zzp]%&=NE[", 1043);
      parameterBlock0.removeSources();
      color0.getColorComponents(floatArray0);
      floatArray0[0] = (float) 1043;
      floatArray0[2] = (float) 1043;
      visualListModel0.removeElements(1043, 1080, true);
      color0.getColorComponents(floatArray0);
      floatArray0[3] = (float) 1043;
      floatArray0[4] = (float) 1043;
      color0.getRGBColorComponents(floatArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      int[] intArray0 = new int[0];
      visualListModel0.removeElements(intArray0, false);
      System.setCurrentTimeMillis(1043);
      Random.setNextRandom(2615);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object object0 = new Object();
      Object object1 = new Object();
      arrayList0.stream();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) sunHints_Key0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate2.or(predicate1);
      Predicate<Object> predicate4 = Predicate.isEqual(object1);
      predicate4.or(predicate3);
      predicate4.or(predicate1);
      ArrayList<Object> arrayList2 = new ArrayList<Object>();
      arrayList2.add((Object) sunHints_Key0);
      arrayList1.stream();
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      LinkedHashSet<Object> linkedHashSet1 = new LinkedHashSet<Object>();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)27;
      byteArray0[1] = (byte)64;
      byteArray0[2] = (byte)32;
      byteArray0[3] = (byte) (-33);
      byteArray0[4] = (byte)45;
      byteArray0[5] = (byte) (-111);
      byteArray0[6] = (byte) (-117);
      linkedHashSet1.containsAll(arrayList1);
      linkedHashSet1.add(arrayList1);
      arrayList1.add((Object) linkedHashSet1);
      Boolean boolean0 = Boolean.TRUE;
      arrayList0.add((Object) predicate4);
      LinkedHashSet<Object> linkedHashSet2 = new LinkedHashSet<Object>();
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      assertEquals(0, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[20];
      ParameterBlock parameterBlock1 = new ParameterBlock();
      byteArray0[3] = (byte)9;
      Color color0 = Color.getColor((String) null, (int) (byte) (-1));
      ParameterBlock parameterBlock2 = new ParameterBlock();
      parameterBlock0.addSource(color0);
      float[] floatArray0 = new float[9];
      Color.RGBtoHSB((byte)0, 2807, (byte)0, floatArray0);
      Color.getColor("Fh`?w+4,qhD", (-2487));
      Color color1 = Color.getColor("Fh`?w+4,qhD", (int) (byte) (-1));
      Color.getColor("Fh`?w+4,qhD");
      float[] floatArray1 = color0.getColorComponents(floatArray0);
      color1.getRGBComponents(floatArray0);
      Color.RGBtoHSB(3, 2012, 2807, floatArray1);
      Color.getColor("", (int) (byte)9);
      byteArray0[12] = (byte)9;
      Color.getColor("Fh`?w+4,qhD", (int) (byte)9);
      color0.getColorComponents(floatArray0);
      Color color2 = Color.RED;
      color0.getRGBColorComponents(floatArray0);
      int[] intArray0 = new int[0];
      visualListModel0.removeElements(intArray0, false);
      Random.setNextRandom((byte)9);
      visualListModel0.removeElements(1, 1, false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      RenderingHints.Key[] renderingHints_KeyArray0 = new RenderingHints.Key[7];
      renderingHints_KeyArray0[2] = (RenderingHints.Key) sunHints_Key1;
      renderingHints_KeyArray0[3] = (RenderingHints.Key) sunHints_Key1;
      renderingHints_KeyArray0[4] = (RenderingHints.Key) sunHints_Key1;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      renderingHints_KeyArray0[2] = (RenderingHints.Key) sunHints_Key2;
      renderingHints_KeyArray0[6] = (RenderingHints.Key) sunHints_Key0;
      JComboBox<RenderingHints.Key> jComboBox0 = new JComboBox<RenderingHints.Key>(renderingHints_KeyArray0);
      jComboBox0.getAction();
      JTree jTree0 = new JTree(renderingHints_KeyArray0);
      JComboBox<Dialog.ModalExclusionType> jComboBox1 = new JComboBox<Dialog.ModalExclusionType>();
      VisualListModel visualListModel1 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel1.removeElementAt(836, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 836
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements((-2503), (Collection<VisualPageListItem>) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      arrayList0.add((Object) linkedHashSet0);
      Object object0 = new Object();
      Object object1 = new Object();
      Stream<Object> stream0 = arrayList0.stream();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) sunHints_Key0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      predicate2.or(predicate1);
      predicate0.or(predicate2);
      arrayList1.removeIf(predicate0);
      arrayList1.add((Object) stream0);
      arrayList1.stream();
      LinkedHashSet<Object> linkedHashSet1 = new LinkedHashSet<Object>();
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      linkedHashSet1.containsAll(arrayList0);
      linkedHashSet1.add(stream0);
      Random.setNextRandom((-555));
      VisualListModel visualListModel0 = new VisualListModel();
      Object object2 = visualListModel0.getElementAt(19);
      assertNull(object2);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Integer.getInteger((String) null);
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      Integer integer3 = JLayeredPane.MODAL_LAYER;
      assertFalse(integer3.equals((Object)integer1));
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      MetalComboBoxEditor metalComboBoxEditor0 = new MetalComboBoxEditor();
      Object[] objectArray0 = new Object[9];
      objectArray0[3] = (Object) metalComboBoxEditor0;
      objectArray0[4] = (Object) metalComboBoxEditor0;
      objectArray0[6] = (Object) metalComboBoxEditor0;
      objectArray0[7] = (Object) metalComboBoxEditor0;
      JTree jTree0 = new JTree(objectArray0);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getMouseMotionListeners();
      JComboBox<Dialog.ModalExclusionType> jComboBox0 = new JComboBox<Dialog.ModalExclusionType>();
      DefaultCellEditor defaultCellEditor0 = new DefaultCellEditor(jComboBox0);
      DefaultTreeCellEditor defaultTreeCellEditor0 = new DefaultTreeCellEditor(jTree0, defaultTreeCellRenderer0, defaultCellEditor0);
      defaultCellEditor0.getComponent();
      jTree0.getPreferredSize();
      defaultTreeCellEditor0.isCellEditable((EventObject) null);
      metalComboBoxEditor0.addActionListener(defaultTreeCellEditor0);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(180, 180, true);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList((-2202), 1852, true);
      assertNull(collection0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      RenderingHints.Key[] renderingHints_KeyArray0 = new RenderingHints.Key[7];
      renderingHints_KeyArray0[3] = (RenderingHints.Key) sunHints_Key0;
      renderingHints_KeyArray0[4] = (RenderingHints.Key) sunHints_Key0;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte)26;
      byteArray0[3] = (byte)26;
      int[] intArray0 = new int[7];
      intArray0[0] = (int) (byte)26;
      intArray0[1] = (int) (byte)26;
      intArray0[2] = (int) (byte)26;
      intArray0[3] = (int) (byte)26;
      intArray0[4] = (int) (byte)26;
      intArray0[5] = (int) (byte)26;
      intArray0[6] = (int) (byte)26;
      visualListModel0.undeleteElements(intArray0);
      byteArray0[2] = (byte)40;
      byteArray0[6] = (byte)40;
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      linkedHashSet0.add(pdfGraphics2D_HyperLinkKey0);
      LinkedHashSet<Object> linkedHashSet1 = new LinkedHashSet<Object>();
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      linkedHashSet1.add(sunHints_Key2);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      linkedHashSet0.parallelStream();
      linkedHashSet0.add(pdfGraphics2D_HyperLinkKey2);
      linkedHashSet0.add(pdfGraphics2D_HyperLinkKey1);
      linkedHashSet1.add(sunHints_Key1);
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      int[] intArray1 = new int[0];
      visualListModel0.undeleteElements(intArray1);
      assertEquals(0, intArray1.length);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object object0 = new Object();
      Dialog.ModalExclusionType dialog_ModalExclusionType0 = Dialog.ModalExclusionType.TOOLKIT_EXCLUDE;
      arrayList0.add((Object) dialog_ModalExclusionType0);
      Stream<Object> stream0 = arrayList0.stream();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList1.clone();
      arrayList1.add((Object) stream0);
      arrayList1.stream();
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)54;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 16, 16);
      linkedHashSet0.add(byteArrayInputStream0);
      LinkedHashSet<Object> linkedHashSet1 = new LinkedHashSet<Object>();
      byte[] byteArray1 = new byte[10];
      byteArray1[3] = (byte) (-124);
      byteArray1[2] = (byte)1;
      byteArray1[3] = (byte)3;
      byteArray1[4] = (byte)3;
      linkedHashSet1.containsAll(linkedHashSet0);
      linkedHashSet0.add(stream0);
      linkedHashSet1.add((Object) null);
      Boolean.valueOf("");
      arrayList0.add((Object) "");
      LinkedHashSet<Object> linkedHashSet2 = new LinkedHashSet<Object>();
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      assertEquals(0, intArray0.length);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(874, 739);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[20];
      byteArray0[0] = (byte)16;
      byteArray0[1] = (byte) (-1);
      byteArray0[3] = (byte)9;
      Color color0 = Color.getColor((String) null, (int) (byte) (-1));
      ParameterBlock parameterBlock1 = new ParameterBlock();
      parameterBlock0.addSource(color0);
      float[] floatArray0 = new float[9];
      Color.RGBtoHSB((byte)16, 2807, (byte)16, floatArray0);
      Color.getColor("Fh[$`?w+4,qhD", (-2487));
      Color color1 = Color.getColor("Fh[$`?w+4,qhD", (int) (byte) (-1));
      Color.getColor("Fh[$`?w+4,qhD");
      float[] floatArray1 = color0.getColorComponents(floatArray0);
      color1.getRGBComponents(floatArray0);
      floatArray0[2] = (float) (byte) (-1);
      Color.RGBtoHSB(3, 2012, 2807, floatArray1);
      Color.getColor("", (int) (byte)9);
      byteArray0[12] = (byte)9;
      Color.getColor("Fh[$`?w+4,qhD", (int) (byte)9);
      color0.getColorComponents(floatArray0);
      floatArray0[3] = (float) (byte)9;
      Color color2 = Color.RED;
      color0.getRGBColorComponents(floatArray0);
      int[] intArray0 = new int[0];
  }
}
