/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 12 00:53:02 GMT 2020
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.CallableStatementWrapper;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.awt.AWTEventMulticaster;
import java.awt.HeadlessException;
import java.awt.event.ContainerListener;
import java.awt.event.InputMethodListener;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.NClob;
import java.time.Month;
import java.time.ZoneId;
import java.time.format.TextStyle;
import java.util.ArrayList;
import java.util.Hashtable;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Vector;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import java.util.concurrent.ScheduledFuture;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import java.util.function.Predicate;
import javax.swing.DefaultListCellRenderer;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JApplet;
import javax.swing.JLayeredPane;
import javax.swing.JTree;
import javax.swing.KeyStroke;
import javax.swing.plaf.basic.BasicTreeUI;
import javax.swing.plaf.metal.MetalTreeUI;
import javax.swing.plaf.multi.MultiLabelUI;
import javax.swing.tree.DefaultTreeCellRenderer;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.util.ApplicationFileWrappersImpl;
import net.sourceforge.squirrel_sql.client.util.ApplicationFiles;
import net.sourceforge.squirrel_sql.fw.id.IIdentifier;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.IndexInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverProperty;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.springframework.scheduling.concurrent.CustomizableThreadFactory;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DBUtil.typesAreEquivalent((-7), (-7));
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString() , anyInt() , anyInt() , anyInt());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall(">UT`Juro2Fff~l", (-7), (-7), (-7));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      String string0 = "";
      int int0 = 0;
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "", "");
      DBUtil.validateColumnNames((ITableInfo) null, (SessionInfoProvider) null);
      int int1 = 833;
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = ">UT`Juro2Fff~l";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">UT`Juro2Fff~l");
      int int0 = 4817;
      DBUtil.typesAreEquivalent((-7), 4817);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall(">UT`Juro2Fff~l");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("mga", "mga", "mga");
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource0.getIcon();
      DatabaseObjectType.createNewDatabaseObjectType("mga", (Icon) null);
      ImageIcon imageIcon0 = new ImageIcon("mga");
      ImageIcon imageIcon1 = new ImageIcon();
      ImageIcon imageIcon2 = new ImageIcon("C4:ZJD");
      imageIcon2.setDescription("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType");
      DatabaseObjectType.createNewDatabaseObjectType("C4:ZJD", (Icon) imageIcon1);
      DatabaseObjectType.createNewDatabaseObjectType("");
      imageIcon0.getImage();
      ImageIcon imageIcon3 = new ImageIcon();
      imageIcon3.getImage();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "fixCase: unexpected exception: ", "mga", "3HGt7", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DBUtil.typesAreEquivalent(2, 2);
      SQLDriverProperty sQLDriverProperty0 = new SQLDriverProperty("{/HK|;K|RvMy", "{/HK|;K|RvMy");
      sQLDriverProperty0.setValue("6QIMs");
      SQLDriverProperty sQLDriverProperty1 = new SQLDriverProperty("{/HK|;K|RvMy", "OrMMH?N}6r$\u0001+");
      sQLDriverProperty1.setName("OrMMH?N}6r$\u0001+");
      sQLDriverProperty1.setName("P*5Lm2mc%L9B[TdA5KK");
      SQLDriverProperty sQLDriverProperty2 = new SQLDriverProperty();
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      sQLAlias0.setIdentifier((IIdentifier) null);
      // Undeclared exception!
      try { 
        sQLDriverPropertyCollection0.getDriverProperty(2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      DBUtil.convertTableToObjectList(list0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROC_TYPE_DBO;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      defaultListCellRenderer0.getDisabledIcon();
      DatabaseObjectType.createNewDatabaseObjectType("key", (Icon) null);
      // Undeclared exception!
      try { 
        dBCopyPlugin0.initialize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.setSourceSession((ISession) null);
      dBCopyPlugin0.getSourceSession();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "+h]u7,v3|\"", "+h]u7,v3|\"", "p%RXmrA; /BlHu=B", 1, "%ppg\"];;?E?HX", (-1846), (-1846), 2001, (-2), "+h]u7,v3|\"", "+h]u7,v3|\"", 1, 87, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin3 = new DBCopyPlugin();
      dBCopyPlugin3.setDestSession((ISession) null);
      dBCopyPlugin1.getPasteToTableInfo((ISQLConnection) null, "%ppg\"];;?E?HX", "Failed to add cloned item.");
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("p%RXmrA; /BlHu=B", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "+h]u7,v3|\"", (-2), (String) null, 3143, 600, (-1846), (-857), ")1B5;A.g", "Max function is null for dialect=", 87, (-2), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBUtil.isBinaryType(tableColumnInfo1);
      DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, "4I<\"u");
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, (String) null, "Max function is null for dialect=", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 600);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "qpr1Dhkv", "3H^");
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      Month month0 = Month.MAY;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "qpr1Dhkv");
      Predicate<IndexInfo> predicate1 = Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate2 = predicate0.and(predicate0);
      Month month1 = Month.JULY;
      Predicate<Object> predicate3 = predicate0.or(predicate2);
      predicate3.and(predicate0);
      Predicate<Object> predicate4 = predicate0.or(predicate3);
      Predicate<Object> predicate5 = predicate0.and(predicate2);
      Predicate<Object> predicate6 = predicate0.and(predicate4);
      predicate2.negate();
      Predicate<Object> predicate7 = predicate4.negate();
      Month month2 = Month.JULY;
      Predicate<Object> predicate8 = predicate3.negate();
      predicate8.or(predicate2);
      predicate6.or(predicate8);
      Predicate.isEqual((Object) predicate1);
      Predicate<Object> predicate9 = predicate0.negate();
      predicate0.test(predicate8);
      predicate5.test(month2);
      predicate4.and(predicate5);
      predicate3.test((Object) null);
      Predicate<Object> predicate10 = predicate9.negate();
      predicate5.and(predicate10);
      predicate7.or(predicate4);
      arrayList0.listIterator();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      Vector<IDatabaseObjectInfo> vector0 = new Vector<IDatabaseObjectInfo>();
      dBCopyPlugin0.setSourceDatabaseObjects(vector0);
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.setSourceSession((ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, "I;m{v;%N7gkMq", "OuP", ":&hC4at9Kes?L");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      Month month0 = Month.AUGUST;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "nqprD1Dhkv");
      Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate1.or(predicate2);
      month0.minLength();
      Month month1 = Month.JULY;
      Predicate<Object> predicate4 = predicate1.or(predicate2);
      Predicate<Object> predicate5 = predicate4.or(predicate3);
      predicate3.negate();
      month0.minLength();
      Predicate<Object> predicate6 = predicate2.or(predicate4);
      predicate4.negate();
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      KeyStroke keyStroke0 = KeyStroke.getKeyStroke(31, 31);
      Predicate.isEqual((Object) keyStroke0);
      Predicate<Object> predicate7 = predicate5.and(predicate1);
      predicate6.and(predicate7);
      Month month2 = Month.JULY;
      TextStyle textStyle0 = TextStyle.NARROW_STANDALONE;
      Locale locale0 = Locale.CANADA_FRENCH;
      month2.getDisplayName(textStyle0, locale0);
      Predicate.isEqual((Object) month2);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      Hashtable<String, String> hashtable0 = new Hashtable<String, String>();
      Hashtable<String, String> hashtable1 = new Hashtable<String, String>();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "3wN[ w", "nqprD1Dhkv");
      // Undeclared exception!
      try { 
        DBUtil.tableHasPrimaryKey((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getUpdateDirectory();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getUserPreferencesFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getSQuirrelJarFile();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getUserPreferencesFile();
      applicationFiles0.getEditWhereColsFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl4 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl5 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getUserPreferencesFile();
      applicationFileWrappersImpl0.getUserPreferencesFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl6 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl7 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl8 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl9 = new ApplicationFileWrappersImpl();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      applicationFileWrappersImpl0.setApplicationFiles(applicationFiles1);
      // Undeclared exception!
      try { 
        DBUtil.getPKColumnString((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "1_-_TnoyW2uFu>8kk9H");
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      Month month0 = Month.OCTOBER;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "1_-_TnoyW2uFu>8kk9H");
      Predicate<IndexInfo> predicate1 = Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate2 = predicate0.negate();
      Predicate<Object> predicate3 = predicate0.and(predicate2);
      month0.minLength();
      predicate0.or(predicate2);
      Month month1 = Month.JULY;
      Predicate<Object> predicate4 = predicate2.or(predicate3);
      Predicate<Object> predicate5 = predicate0.or(predicate4);
      Predicate<Object> predicate6 = predicate2.and(predicate3);
      Predicate<Object> predicate7 = predicate2.and(predicate5);
      Predicate.isEqual((Object) "1_-_TnoyW2uFu>8kk9H");
      Predicate<Object> predicate8 = predicate5.and(predicate3);
      predicate1.and(predicate0);
      predicate3.and(predicate8);
      predicate5.negate();
      Month month2 = Month.JULY;
      Predicate<Object> predicate9 = predicate4.negate();
      predicate9.or(predicate3);
      predicate7.or(predicate9);
      Predicate.isEqual((Object) predicate1);
      Predicate<Object> predicate10 = predicate2.negate();
      predicate10.test(arrayList0);
      Predicate<Object> predicate11 = predicate6.or(predicate7);
      predicate6.and(predicate11);
      predicate10.or(predicate5);
      arrayList0.iterator();
      arrayList0.listIterator();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        DBUtil.getColumnNames((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getJDBCDebugLogFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getChangeLogFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getLicenceFile();
      applicationFileWrappersImpl3.getUserPreferencesFile();
      FileSystemHandling.shouldAllThrowIOExceptions();
      applicationFileWrappersImpl3.getChangeLogFile();
      applicationFileWrappersImpl1.getQuickStartGuideFile();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ApplicationFileWrappersImpl applicationFileWrappersImpl4 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl4.getJDBCDebugLogFile();
      applicationFileWrappersImpl4.getUpdateDirectory();
      ApplicationFileWrappersImpl applicationFileWrappersImpl5 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getUserPreferencesFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl6 = new ApplicationFileWrappersImpl();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getUserPreferencesFile();
      applicationFiles0.getEditWhereColsFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl7 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl8 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl5.getUserPreferencesFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl9 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl7.getUpdateDirectory();
      ApplicationFileWrappersImpl applicationFileWrappersImpl10 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl11 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl9.getWelcomeFile();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (ITableInfo) null, 27);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "D{<=vgWR:bMqbTkG!)", "1_-_TnoyW2uFu>8kk9H");
      Month month0 = Month.MAY;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "D{<=vgWR:bMqbTkG!)");
      Predicate<IndexInfo> predicate1 = Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate2 = predicate0.negate();
      Predicate<Object> predicate3 = predicate0.and(predicate2);
      month0.minLength();
      Month month1 = Month.JULY;
      Predicate<Object> predicate4 = predicate2.or(predicate3);
      Predicate<Object> predicate5 = predicate4.and(predicate0);
      Predicate<Object> predicate6 = predicate2.and(predicate3);
      Predicate<Object> predicate7 = predicate2.and(predicate5);
      Predicate<Object> predicate8 = Predicate.isEqual((Object) "D{<=vgWR:bMqbTkG!)");
      Predicate<Object> predicate9 = predicate0.negate();
      predicate7.and(predicate4);
      predicate2.and(predicate6);
      Predicate<Object> predicate10 = predicate5.and(predicate2);
      predicate6.or(predicate10);
      Month month2 = Month.JULY;
      Predicate.isEqual((Object) predicate4);
      Predicate<Object> predicate11 = predicate8.negate();
      Predicate<Object> predicate12 = predicate7.or(predicate11);
      Predicate.isEqual((Object) predicate1);
      predicate11.and(predicate12);
      Predicate<Object> predicate13 = predicate2.negate();
      predicate2.test(predicate11);
      Predicate.isEqual((Object) predicate3);
      Predicate<Object> predicate14 = predicate13.negate();
      predicate6.and(predicate14);
      predicate9.or(predicate2);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        DBUtil.getColumnName((ISQLConnection) null, (ITableInfo) null, 31);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DBUtil.typesAreEquivalent(16, (-1324));
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      JApplet jApplet0 = null;
      try {
        jApplet0 = new JApplet();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.applet.Applet", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setCopyMenuEnabled(true);
      String string0 = "axion";
      String string1 = "DBUtil.error.bindblobfailure";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "#1GKX<", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "axion", 128, "+t[3#-2OXS#", 8192, 2001, 2903, 8192, "DBUtil.error.bindblobfailure", " tableName = ", 87, 87, " tableName = ");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      dBCopyPlugin0.setSourceSession((ISession) null);
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceDistinctDataType(0, tableColumnInfo0, (ISession) null);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias(uidIdentifier0);
      sQLAlias0.getDriverPropertiesClone();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, " tableName = ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.unload();
      dBCopyPlugin0.setSourceSession((ISession) null);
      dBCopyPlugin0.getSourceSession();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.setSourceSession((ISession) null);
      dBCopyPlugin1.getDestSession();
      dBCopyPlugin0.setCopyMenuEnabled(false);
      dBCopyPlugin0.setPasteMenuEnabled(false);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)123;
      byteArray0[1] = (byte) (-11);
      byteArray0[2] = (byte) (-79);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-9);
      byteArray0[7] = (byte) (-18);
      dBCopyPlugin0.unload();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 1, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 128, 87, 1, 128, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "jp]vId{7Ja", (-4852), 0, "`$9P#dDs`");
      // Undeclared exception!
      try { 
        DBUtil.replaceDistinctDataType(2001, tableColumnInfo0, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("PreferencesPanel.fetchSizeToolTip", "s\".@*Ck5Fg7", "lpG(*imLV", " schema = ", (-2563), "p[QV_-c.!", 1777, 12, 65, 65, "TABLE", "QG:C<3bi?YtlC", 2442, 1777, "TABLE");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      SchemaInfo schemaInfo1 = new SchemaInfo((IApplication) null);
      DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo1);
      String string0 = DBUtil.getLastStatement();
      assertNull(string0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      CallableStatement callableStatement0 = null;
      String string0 = "3";
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, "3", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getJDBCDebugLogFile();
      applicationFileWrappersImpl1.getChangeLogFile();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("B-y/#O)F>&iF0A+", (String) null, "byte($l)");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.DATATYPE;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("second");
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getClosedIcon();
      DatabaseObjectType.createNewDatabaseObjectType("}%", icon0);
      DatabaseObjectType.createNewDatabaseObjectType("null ActionKeys[] passed", icon0);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("B-y/#O)F>&iF0A+", icon0);
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.CATALOG;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.getOpenIcon();
      DatabaseObjectType.createNewDatabaseObjectType((String) null, icon0);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType4);
      String string0 = DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      assertNull(string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[3];
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("I;m{v;%N7gkMq", "I;m{v;%N7gkMq", ":&hC4at9Kes?L", ":&hC4at9Kes?L", 2989, "Max function is null for dialect=", 2989, (-1080), (-6), (-1080), "Y7`jm", ":&hC4at9Kes?L", (-1080), (-6), "Y7`jm");
      tableColumnInfoArray0[0] = tableColumnInfo0;
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      assertEquals("-50698d79:175b9e3f8e6:-75f2", uidIdentifier0.toString());
      
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("RJEU/Y4v?HG7sb", "RJEU/Y4v?HG7sb", "PreferencesPanel.fetchSizeToolTip", "No add column syntax supported by Dialect", 50, ":&hC4at9Kes?L", 26, (-3652), 300, (-3652), "+h]u7,v3|\"", "pS;4gT`d5$@NKpG2/o", (-6), (-2129), "nW-U(Y`LP)ji<Hxaw6)");
      DBUtil.isBinaryType(tableColumnInfo0);
      LinkedList<ITableInfo> linkedList0 = new LinkedList<ITableInfo>();
      linkedList0.add((ITableInfo) null);
      List<IDatabaseObjectInfo> list0 = DBUtil.convertTableToObjectList(linkedList0);
      DBUtil.convertObjectToTableList(list0);
      assertFalse(list0.isEmpty());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon();
      ImageIcon imageIcon1 = new ImageIcon("ERQa-C+fE;L'\"H%?", "ERQa-C+fE;L'\"H%?");
      imageIcon1.getIconHeight();
      imageIcon1.getImageObserver();
      imageIcon1.getImage();
      imageIcon1.toString();
      imageIcon1.toString();
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[2];
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      assertEquals("-50698d79:175b9e3f8e6:-7617", uidIdentifier2.toString());
      
      List<IDatabaseObjectInfo> list1 = DBUtil.convertTableToObjectList(list0);
      DBUtil.convertObjectToTableList(list1);
      assertEquals(2, list0.size());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "nqprD1Dhkv", "L7Au~J");
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      ArrayList<ITableInfo> arrayList1 = new ArrayList<ITableInfo>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "nqprD1Dhkv");
      Predicate<IndexInfo> predicate1 = Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate2 = predicate0.negate();
      Month month0 = Month.APRIL;
      Predicate<Object> predicate3 = predicate2.or(predicate0);
      Predicate<Object> predicate4 = predicate0.or(predicate3);
      predicate2.and(predicate0);
      Predicate<Object> predicate5 = predicate2.and(predicate4);
      Predicate<Object> predicate6 = Predicate.isEqual((Object) "nqprD1Dhkv");
      predicate6.negate();
      Month month1 = Month.JULY;
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      ThreadPoolExecutor.DiscardPolicy threadPoolExecutor_DiscardPolicy0 = new ThreadPoolExecutor.DiscardPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(2001, threadPoolExecutor_DiscardPolicy0);
      CustomizableThreadFactory customizableThreadFactory0 = new CustomizableThreadFactory("V~1[q");
      customizableThreadFactory0.getThreadGroup();
      MockThread mockThread0 = new MockThread((Runnable) null);
      MockThread mockThread1 = new MockThread((ThreadGroup) null, mockThread0, "no-plugins", (-706L));
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      ScheduledFuture<?> scheduledFuture0 = scheduledThreadPoolExecutor0.scheduleAtFixedRate(mockThread1, 2001, 2001, timeUnit0);
      delayQueue0.add((Delayed) scheduledFuture0);
      Delayed delayed0 = delayQueue0.peek();
      predicate3.test(delayed0);
      Predicate<Object> predicate7 = predicate3.negate();
      Predicate<Object> predicate8 = predicate5.or(predicate7);
      Predicate.isEqual((Object) predicate1);
      Predicate.isEqual((Object) predicate0);
      predicate0.negate();
      predicate6.negate();
      Predicate<Object> predicate9 = predicate3.negate();
      predicate8.or(predicate9);
      arrayList0.iterator();
      arrayList1.listIterator();
      arrayList1.removeIf(predicate8);
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL(dBCopyPlugin0, (ITableInfo) null, arrayList1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("s9FH&3[", "KBT}:", "o6Gj", "nuJl value i9 4olumn \"", 4, "o6Gj", (-105), (-938), 1642, (-938), "afl=<r", "(SB?-!U@UJIxfMG(7", 1642, (-105), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[8];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      tableColumnInfoArray0[5] = tableColumnInfo0;
      tableColumnInfoArray0[6] = tableColumnInfo0;
      tableColumnInfoArray0[7] = tableColumnInfo0;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(tableColumnInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ";ztu>A0>@ -h(");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("float", "MRcOp4R0{V*R", "float", "r/p[Wv>w]|}k48A", 2004, "p9~i#g{&ElUqb-^=8-W", (-1275), 70, 44, (-2365), "+hu7,v3|\"", "WW", (-1656), 2006, "executeQuery: TimesTen allows a maximum fetch size of 128.  Altering preferred fetch size from ");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.USER;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)75;
      ImageIcon imageIcon0 = new ImageIcon(byteArray0);
      DatabaseObjectType.createNewDatabaseObjectType("p9~i#g{&ElUqb-^=8-W", (Icon) imageIcon0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.setSourceSession((ISession) null);
      dBCopyPlugin0.getSourceSession();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin1.setSourceSession((ISession) null);
      dBCopyPlugin1.getDestSession();
      dBCopyPlugin1.setCopyMenuEnabled(false);
      dBCopyPlugin1.setPasteMenuEnabled(false);
      dBCopyPlugin0.unload();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("`$9P#dDs`", (String) null, (String) null, "`$9P#dDs`", 1, "#1G|KX<", 84, (-20), (byte)124, (-1316), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "DataCache.error.loadingaliases", 0, 2479, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      int int0 = DBUtil.replaceDistinctDataType(3061, tableColumnInfo0, (ISession) null);
      assertEquals(3061, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      System.setCurrentTimeMillis(0L);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "7:@Q=]9", "7:@Q=]9", "k*&)PbkwT", (-396), " ;l84| \"C", 943, 135, 943, (-1845), (String) null, " ;l84| \"C", (-842), 943, (String) null);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[3];
      // Undeclared exception!
      try { 
        DBUtil.getColumnList(tableColumnInfoArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[3];
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("I;m{v;%N7gkMq", "I;m{v;%N7gkMq", ":&hC4at9Kes?L", ":&hC4at9Kes?L", 2989, "Max function is null for dialect=", 2989, (-1080), (-6), (-1080), "Y7`jm", ":&hC4at9Kes?L", (-1080), (-6), "Y7`jm");
      tableColumnInfoArray0[0] = tableColumnInfo0;
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("p2Z.SJWsL", "+hu7,v3|\"", "I;m{v;%N7gkMq", " tableName = ", 35, "+hu7,v3|\"", 193, 35, 2989, 193, "SELECT data_type FROM information_schema.columns where column_name = ? ", "java.lang.Byte", (-1426), (-194), " tableName = ");
      tableColumnInfoArray0[1] = tableColumnInfo1;
      TableColumnInfo tableColumnInfo2 = new TableColumnInfo(":&hC4at9Kes?L", "p2Z.SJWsL", "p2Z.SJWsL", "", 193, "I;m{v;%N7gkMq", 193, (-105), 35, (-1426), "", "Max function is null for dialect=", 193, (-1426), "84y.Xo>J('p:3:3 t");
      tableColumnInfoArray0[2] = tableColumnInfo2;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals(":&hC4at9Kes?L,  tableName = , ", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = 341;
      String string0 = "0HhAUpA((00r&c";
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      DBUtil.getColumnList(tableColumnInfoArray0);
      byte byte0 = (byte) (-18);
      int int1 = 300;
      Connection connection0 = null;
      ConnectionWrapper connectionWrapper0 = null;
      try {
        connectionWrapper0 = new ConnectionWrapper((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.setSourceSession((ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.replaceOtherDataType((TableColumnInfo) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      metalTreeUI0.getPathForRow((JTree) null, 7);
      metalTreeUI0.getExpandedIcon();
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.unload();
      dBCopyPlugin0.setSourceSession((ISession) null);
      dBCopyPlugin0.getSourceSession();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.setSourceSession((ISession) null);
      dBCopyPlugin1.getDestSession();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Locale locale0 = new Locale("fixCase: unexpected exception: ");
      defaultTreeCellRenderer0.setLocale(locale0);
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.transferFocusBackward();
      defaultTreeCellRenderer1.getOpenIcon();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "", "dot.sequences");
      String string0 = DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("QZq<", "$<WA_yUA#Xgd7_rt", "mga");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROCEDURE;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.TRIGGER;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("THtqI%", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "^OP", "I;m{v;%N7gkMq", (-3416), "^OP", (-3151), (-3416), 8192, (-3151), "$<WA_yUA#Xgd7_rt", "2=V~z~2Ei\";Tg.", 8192, (-3151), "Q8");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.OTHER;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals((-3416), int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DBUtil.typesAreEquivalent(2489, 630);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      assertEquals("-50698d79:175b9e3f8e6:-76e2", uidIdentifier3.toString());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDT_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.DATATYPE;
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      metalTreeUI0.getLeftChildIndent();
      metalTreeUI0.getExpandedIcon();
      DatabaseObjectType.createNewDatabaseObjectType("loadCatalogsSchemas", (Icon) null);
      ImageIcon imageIcon0 = new ImageIcon("'+`h+T?@k", "'+`h+T?@k");
      ImageIcon imageIcon1 = new ImageIcon();
      DatabaseObjectType.createNewDatabaseObjectType("'+`h+T?@k", (Icon) imageIcon1);
      DatabaseObjectType.createNewDatabaseObjectType("{Cufc*[g+4");
      DatabaseObjectType.createNewDatabaseObjectType("curdate");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("Unexpected exception while attempting to determine if a table (", (Icon) imageIcon1);
      imageIcon1.getImage();
      DatabaseObjectType.createNewDatabaseObjectType("L:M*}8Gv@", (Icon) imageIcon0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("N6ICR!-d", ">;_+W", "7v#oq|F9&T", "Unexpected exception while attempting to determine if a table (", 0, "L:M*}8Gv@", 341, 2147483646, 621, 341, ">;_+W", "+hu7,v3|\"", 2978, 621, "7v#oq|F9&T");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DatabaseObjectType.createNewDatabaseObjectType("Unexpected exception while attempting to determine if a table (");
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.PRIMARY_KEY;
      ImageIcon imageIcon0 = new ImageIcon();
      ImageIcon imageIcon1 = new ImageIcon();
      DatabaseObjectType.createNewDatabaseObjectType("'+`h+T?@k", (Icon) imageIcon1);
      DatabaseObjectType.createNewDatabaseObjectType("{Cufc*[g+4");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("Unexpected exception while attempting to determine if a table (", (Icon) imageIcon1);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("N6ICR!-d", ">;_+W", "7v#oq|F9&T", "Unexpected exception while attempting to determine if a table (", 1112, "L:M*}8Gv@", 341, Integer.MAX_VALUE, 621, 341, ">;_+W", "+hu7,v3|\"", 2978, 621, "7v#oq|F9&T");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.OTHER;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(1112, int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "nqprD1Dhkv", "1_-_TnoyW2uFu>8kk9H");
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      ArrayList<ITableInfo> arrayList1 = new ArrayList<ITableInfo>();
      Month month0 = Month.MAY;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "nqprD1Dhkv");
      Predicate<IndexInfo> predicate1 = Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate2 = predicate0.negate();
      Predicate<Object> predicate3 = predicate0.and(predicate2);
      month0.minLength();
      Month month1 = Month.JULY;
      Predicate<Object> predicate4 = predicate2.or(predicate3);
      Predicate<Object> predicate5 = predicate0.or(predicate4);
      Predicate<Object> predicate6 = predicate2.and(predicate3);
      Predicate<Object> predicate7 = predicate2.and(predicate5);
      Predicate<Object> predicate8 = Predicate.isEqual((Object) "nqprD1Dhkv");
      Predicate<Object> predicate9 = predicate8.negate();
      Month month2 = Month.JULY;
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.peek();
      predicate4.test((Object) null);
      Predicate<Object> predicate10 = predicate4.negate();
      Predicate<Object> predicate11 = predicate7.or(predicate10);
      Predicate.isEqual((Object) predicate1);
      Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate12 = predicate6.or(predicate7);
      predicate6.and(predicate12);
      predicate3.negate();
      predicate0.or(predicate9);
      arrayList0.iterator();
      arrayList1.listIterator();
      ArrayList<ITableInfo> arrayList2 = new ArrayList<ITableInfo>(112);
      arrayList2.removeIf(predicate11);
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate((ISQLConnection) null, "l;upq6ec_UQp0", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = "M1?OScC V|hyVD";
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate((ISQLConnection) null, "M1?OScC V|hyVD", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "Oz7x~Pl\"N3kRk,");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DBUtil.typesAreEquivalent(91, 91);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      JApplet jApplet0 = null;
      try {
        jApplet0 = new JApplet();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.applet.Applet", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.isBinaryType((TableColumnInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getJDBCDebugLogFile();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte)80;
      byteArray0[5] = (byte)47;
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      byteArray0[3] = (byte)71;
      byteArray0[4] = (byte) (-127);
      byteArray0[5] = (byte)7;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("+hu7,v3|\"", "DBUtil.info.bindclobfile", "+h]u7,v3|\"", "octet_length", (byte)48, "Y%lDQ*Y{$}Y", (byte)48, 1347, 10, (-9), "q#eZx1}mf_rBw}L[", "", (byte)47, (byte)71, " tableName = ");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDT_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.PRIMARY_KEY;
      DatabaseObjectType.createNewDatabaseObjectType("Monospaced");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("violates foreign key constraint \"", "@V|bqQ%6zGWy", (String) null, (String) null, 1707, (String) null, 1915, 1915, 1123, 18, "Monospaced", "ae`IIC=ZUv~\"?F_KGe", (-209), (-953), "Monospaced");
      DatabaseObjectType.createNewDatabaseObjectType("@V|bqQ%6zGWy");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.UDF;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.PRIMARY_KEY;
      MultiLabelUI multiLabelUI0 = new MultiLabelUI();
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.createNewDatabaseObjectType((String) null);
      DatabaseObjectType.createNewDatabaseObjectType((String) null);
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("@V|bqQ%6zGWy");
      DatabaseObjectType.createNewDatabaseObjectType((String) null);
      DatabaseObjectType.createNewDatabaseObjectType("net.sourceforge.squirrel_sql.plugins.dbcopy.gui.DBCopyGlobalPreferencesTab");
      ImageIcon imageIcon0 = new ImageIcon("violates foreign key constraint \"", (String) null);
      DatabaseObjectType databaseObjectType6 = DatabaseObjectType.UDF_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("ae`IIC=ZUv~\"?F_KGe");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType4);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, tableColumnInfo0, ").cJx|mAs4y,#Z", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      String string0 = "T?wpGv9SV*jw%XW";
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "T?wpGv9SV*jw%XW");
      DBUtil.setLastStatementValues("T?wpGv9SV*jw%XW");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil.getLastStatementValues();
      dBCopyPlugin0.getSourceSession();
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(containerListener0, containerListener0);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      JApplet jApplet0 = null;
      try {
        jApplet0 = new JApplet();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.applet.Applet", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getUserPreferencesFile();
      applicationFiles0.getUserPreferencesFile();
      applicationFiles0.getJDBCDebugLogFile();
      applicationFiles0.getFAQFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFiles0.getQuickStartGuideFile();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      ApplicationFiles applicationFiles2 = new ApplicationFiles();
      applicationFiles0.getCellImportExportSelectionsFile();
      applicationFiles1.getDTPropertiesFile();
      ApplicationFiles applicationFiles3 = new ApplicationFiles();
      applicationFiles3.getPluginsUserSettingsDirectory();
      applicationFiles3.getCellImportExportSelectionsFile();
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, "", "esion.reconnEror", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin2.setPasteToTableName("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBCopyPlugin dBCopyPlugin3 = new DBCopyPlugin();
      dBCopyPlugin3.getSourceSession();
      DBUtil.fixCase((ISession) null, (String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = 16;
      // Undeclared exception!
      try { 
        DBUtil.dropTable("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "ifnull(", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (ISession) null, true, 465);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.6730116670092565
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("QZq<", "$<WA_yUA#Xgd7_rt", "mga");
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      basicTreeUI0.getCollapsedIcon();
      DatabaseObjectType.createNewDatabaseObjectType("iZ_)Iwk+CTRf/Z%;G6+", (Icon) null);
      ImageIcon imageIcon0 = new ImageIcon("QZq<", "iZ_)Iwk+CTRf/Z%;G6+");
      ImageIcon imageIcon1 = new ImageIcon();
      DatabaseObjectType.createNewDatabaseObjectType("Undefined global state ", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType("Undefined global state ");
      DatabaseObjectType.createNewDatabaseObjectType("mga", (Icon) imageIcon1);
      imageIcon0.getImage();
      imageIcon0.getImage();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.unload();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, (String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon("=cB;h");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.PRIMARY_KEY;
      ImageIcon imageIcon1 = new ImageIcon(" iVd>");
      String string0 = DBUtil.fixCase((ISession) null, "");
      assertEquals("", string0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "select first 1 sysdate f$om ys.tables", "b&IU4=$X\u0004`YBsTu", "b&IU4=$X\u0004`YBsTu", (-2432));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getUserPreferencesFile();
      applicationFiles0.getUserPreferencesFile();
      DBUtil.typesAreEquivalent((-789), (-5));
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      assertEquals("-50698d79:175b9e3f8e6:-77e2", uidIdentifier3.toString());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.COLUMN;
      databaseObjectType0.getIdentifier();
      SQLDriverProperty sQLDriverProperty0 = new SQLDriverProperty("T]R}~^", "*k");
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      DBUtil.convertObjectToTableList(linkedList0);
      sQLDriverProperty0.setName("7L;NS-3N_mBhR%#$");
      SQLDriverProperty sQLDriverProperty1 = new SQLDriverProperty();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriverProperty[] sQLDriverPropertyArray0 = new SQLDriverProperty[1];
      sQLDriverPropertyArray0[0] = sQLDriverProperty1;
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      assertEquals("-50698d79:175b9e3f8e6:-77ec", uidIdentifier2.toString());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      String string0 = "\"qcd^}Rbc]_onl}";
      String string1 = "Qxt";
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey("Qxt", "\"qcd^}Rbc]_onl}", "~2#,`${KZ`z|Tj;y!a", (ForeignKeyInfo) null, dBCopyPlugin0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, "conflicts with standard tabs", "OuP", ":&hC4at9Kes?L");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "nqprD1Dhkv", "1_-_TnoyW2uFu>8kk9H");
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      Month month0 = Month.MAY;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "nqprD1Dhkv");
      Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      month0.minLength();
      Month month1 = Month.APRIL;
      Predicate<Object> predicate3 = predicate1.or(predicate2);
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate1.and(predicate2);
      Predicate<Object> predicate6 = predicate1.and(predicate4);
      Predicate<Object> predicate7 = Predicate.isEqual((Object) "nqprD1Dhkv");
      Predicate<Object> predicate8 = predicate7.negate();
      Predicate.isEqual((Object) predicate5);
      Month month2 = Month.JULY;
      Predicate<Object> predicate9 = predicate8.negate();
      predicate5.negate();
      Predicate<Object> predicate10 = predicate5.or(predicate4);
      predicate9.or(predicate8);
      Predicate<Object> predicate11 = predicate6.negate();
      Predicate.isEqual((Object) "1_-_TnoyW2uFu>8kk9H");
      predicate11.negate();
      predicate4.or(predicate3);
      predicate10.and(predicate8);
      arrayList0.iterator();
      arrayList0.iterator();
      arrayList0.listIterator();
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, 31);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      int int0 = 16;
      DBUtil.typesAreEquivalent(16, 16);
      JApplet jApplet0 = null;
      try {
        jApplet0 = new JApplet();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.applet.Applet", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DBUtil.typesAreEquivalent((-9), (-9));
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      Hashtable<String, String> hashtable0 = new Hashtable<String, String>();
      assertTrue(hashtable0.isEmpty());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      SQLDriverProperty sQLDriverProperty0 = new SQLDriverProperty();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      sQLDriverProperty0.setName("}'ho");
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "o{W", "o{W", "ym[%h'z", 26);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.clone();
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      assertEquals("Rob Manning", dBCopyPlugin0.getAuthor());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "Logging configuration file", "Logging configuration file", "Logging configuration file");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)126;
      byteArray0[1] = (byte)93;
      byteArray0[2] = (byte)100;
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte)104;
      byteArray0[5] = (byte) (-12);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getUpdateDirectory();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl3.getWelcomeFile();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject((IDatabaseObjectInfo) null, (SchemaInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("mga", "mga", "mga");
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Locale locale0 = new Locale("C4:ZJD");
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.setLocale(locale0);
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer3.transferFocusBackward();
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      defaultTreeCellRenderer1.getOpenIcon();
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("mga", "mga", "mga");
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Locale locale0 = new Locale("C4:ZJD");
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.setLocale(locale0);
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer3.transferFocusBackward();
      defaultTreeCellRenderer1.getOpenIcon();
      String string0 = DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      assertEquals("mga", string0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.unload();
      dBCopyPlugin0.setSourceSession((ISession) null);
      dBCopyPlugin0.getSourceSession();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.setSourceSession((ISession) null);
      dBCopyPlugin1.getDestSession();
      dBCopyPlugin0.setCopyMenuEnabled(false);
      dBCopyPlugin0.setPasteMenuEnabled(false);
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "EJu!M", "0", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 2001, "bgNC*fk!C", 2002, 5814, 0, 1042, ":%+", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 1042, 1042, ":%+");
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin1, tableColumnInfo0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      String string0 = "T]R}~^";
      String string1 = "dxot.tquNncs";
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "T]R}~^", "dxot.tquNncs");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.PRIMARY_KEY;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("violates foreign key constraint \"", "@V|bqQ%6zGWy", (String) null, "#PE", 1707, "#PE", 1915, (-3060), 1123, 18, "Monospaced", (String) null, (-209), (-953), "Monospaced");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.UDF;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.PRIMARY_KEY;
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.createNewDatabaseObjectType((String) null);
      defaultTreeCellRenderer0.getDefaultOpenIcon();
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType5);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType5);
      ImageIcon imageIcon0 = new ImageIcon("violates foreign key constraint \"", "#PE");
      imageIcon0.toString();
      DatabaseObjectType.createNewDatabaseObjectType("'+`h+T?@k", (Icon) imageIcon0);
      DatabaseObjectType.createNewDatabaseObjectType("++CeT?@k");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType4);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      System.setCurrentTimeMillis(1123);
      // Undeclared exception!
      try { 
        DBUtil.convertTableToObjectList((List<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      DBUtil.setLastStatement("DBUtil.info.executeupdate");
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      String string0 = "]T]R}~^";
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, "]T]R}~^", "]T]R}~^");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getUserPreferencesFile();
      applicationFiles0.getUserPreferencesFile();
      applicationFiles0.getJDBCDebugLogFile();
      applicationFiles0.getFAQFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFiles0.getQuickStartGuideFile();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      ApplicationFiles applicationFiles2 = new ApplicationFiles();
      applicationFiles0.getCellImportExportSelectionsFile();
      applicationFiles1.getDTPropertiesFile();
      ApplicationFiles applicationFiles3 = new ApplicationFiles();
      applicationFiles3.getPluginsUserSettingsDirectory();
      applicationFiles3.getCellImportExportSelectionsFile();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.unload();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("`$9P#dDs`", "hibernate.jdbc.use_streams_for_binary", ", ", "?", (-8), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 1450, (-8), (-8), (-4852), "?", ", ", 1450, 1450, "?");
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceDistinctDataType(1450, tableColumnInfo0, (ISession) null);
      assertEquals(1450, int0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, "QG:C<3bi?YtlC", "Q5+;Nq@", (-2563), "QG:C<3bi?YtlC", 65, 1055, 1777, 12, "s\".@*Ck5Fg7", "4!hC3W)v", 1658, (-2563), "lpG(*imLV");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      SchemaInfo schemaInfo1 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, (String) null, "Q5+;Nq@", (-2563), (String) null, 65, 1055, 1777, 12, "s\".@*Ck5Fg7", "4!hC3W)v", 1658, (-2563), "lpG(*imLV");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      SchemaInfo schemaInfo1 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "Version.appname", "clob(2000000000)", "clob(2000000000)", (-3521), "select 'CREATE VIEW ' || VIEWNAME || ' AS ' || VIEWDEFINITION ", 341, (-1324), 341, 879, "net.sourceforge.squirrel_sql.fw.dialects.GreenplumDialectExt$GreenplumDialectHelper", (String) null, 341, (-3521), "t#KL[6Mi]5#e'");
      DBUtil.replaceDistinctDataType((-3521), tableColumnInfo0, (ISession) null);
      JApplet jApplet0 = null;
      try {
        jApplet0 = new JApplet();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.applet.Applet", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate2.and(predicate0);
      Predicate<Object> predicate4 = predicate3.and(predicate3);
      Predicate<Object> predicate5 = predicate4.or(predicate2);
      Predicate<Object> predicate6 = predicate5.or(predicate1);
      Month month0 = Month.JULY;
      Predicate.isEqual((Object) predicate2);
      Predicate<Object> predicate7 = predicate4.negate();
      predicate5.or(predicate3);
      Predicate.isEqual((Object) predicate3);
      predicate6.and(predicate1);
      Predicate<Object> predicate8 = predicate7.negate();
      predicate3.test((Object) null);
      DBUtil dBUtil0 = new DBUtil();
      Predicate.isEqual((Object) dBUtil0);
      predicate1.negate();
      Predicate<Object> predicate9 = predicate5.negate();
      Predicate<Object> predicate10 = predicate9.and(predicate7);
      predicate10.or(predicate8);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "^OP", "U){");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "8~X";
      stringArray0[1] = "^OP";
      stringArray0[2] = "U){";
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }
}
