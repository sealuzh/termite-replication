/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 10:24:03 GMT 2019
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.CallableStatementWrapper;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.awt.HeadlessException;
import java.io.File;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverPropertyInfo;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Hashtable;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.PriorityQueue;
import java.util.Set;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JApplet;
import javax.swing.plaf.basic.BasicCheckBoxUI;
import javax.swing.tree.DefaultTreeCellRenderer;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.util.ApplicationFileWrappersImpl;
import net.sourceforge.squirrel_sql.client.util.ApplicationFiles;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverProperty;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.sql.TableInfo;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperFactoryImpl;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jfree.data.time.Quarter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "] with valuB=[");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "mediumblob");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, (String) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      Vector<IDatabaseObjectInfo> vector0 = new Vector<IDatabaseObjectInfo>();
      dBCopyPlugin0.setSourceDatabaseObjects(vector0);
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, "", "mediumblob", (String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, (byte[]) null);
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "] with value=[");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#f= ");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, (String) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, "zn$sg", "#f= ", (-1431655763), (String) null, (-1431655763), 2279, 2308, 2308, "] with value=[", "#f= ", 28, 1234, ")");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertEquals("zn$sg", string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("~ 8cju", "QDsDGnF", (String) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      arrayList0.add((IDatabaseObjectInfo) databaseObjectInfo0);
      dBCopyPlugin0.setSourceDatabaseObjects(arrayList0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType((String) null);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      dBCopyPlugin0.getApplication();
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.SEQUENCE;
      DatabaseObjectType.createNewDatabaseObjectType("Length fuction i null for dialect=");
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.UDT;
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.UDT_TYPE_DBO;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null, " i dWSoV7EZ%oE");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("~ 8cju", "QDUDGnF", (String) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      dBCopyPlugin0.setSourceDatabaseObjects(arrayList0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType((String) null);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      dBCopyPlugin0.getApplication();
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.SEQUENCE;
      DatabaseObjectType.createNewDatabaseObjectType("Length fuction i null for dialect=");
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.UDT;
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.UDT_TYPE_DBO;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null, " i dWSoV7EZ%oE");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("~ 8cju", "QDsDGnF", (String) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      arrayList0.add((IDatabaseObjectInfo) databaseObjectInfo0);
      dBCopyPlugin0.setSourceDatabaseObjects(arrayList0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType((String) null);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      dBCopyPlugin0.getApplication();
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.SEQUENCE;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.SYNONYM_TYPE_DBO;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.USER;
      DatabaseObjectType.createNewDatabaseObjectType(">gD");
      dBCopyPlugin0.setDestDatabaseObject(databaseObjectInfo0);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.USER;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "2<vrylI");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "5{PCOe3dp+Ks");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, (String) null, (ITableInfo) null, (-310));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.tableHasPrimaryKey((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "(;R");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "a3$u2g&;HdM@u_U!");
      boolean boolean0 = DBUtil.typesAreEquivalent((-7), 2438);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DBUtil.getLastStatementValues();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, (String) null, "*xYXF;u%", (-3), "k-g_0xz@/<F]RZ\\6", 7, (-2421), 0, (-47), "*xYXF;u%", "G[#e97S%ZP#.vy+", (-3), 200, "~dO^(ZJs3U");
      DBUtil.isBinaryType(tableColumnInfo0);
      SessionInfoProvider sessionInfoProvider0 = null;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      schemaInfo0.getSQLDatabaseMetaData();
      TableInfo tableInfo0 = null;
      try {
        tableInfo0 = new TableInfo((String) null, "net.sourceforge.squirrel_sql.fw.dialects.DerbyDialectExt$DerbyDialectHelper", "!{&6k]", "k-g_0xz@/<F]RZ\\6", "net.sourceforge.squirrel_sql.fw.dialects.DerbyDialectExt$DerbyDialectHelper", (ISQLDatabaseMetaData) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("", "", "|_vomAa&,-i.npiy");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType("");
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SEQUENCE;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("|b1d}l=Qk#xva*'");
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.UDT;
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getClosedIcon();
      DatabaseObjectType.createNewDatabaseObjectType("uod02oi", icon0);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      DatabaseObjectType.createNewDatabaseObjectType("|b1d}l=Qk#xva*'", icon0);
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getDefaultIcon();
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.createNewDatabaseObjectType("6a;=/X9u@m", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType("|_vomAa&,-i.npiy");
      DatabaseObjectType.createNewDatabaseObjectType("|b1d}l=Qk#xva*'");
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("org.jfree.data.xy.VectorSeries");
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType4);
      DatabaseObjectType databaseObjectType6 = DatabaseObjectType.USER;
      DatabaseObjectType databaseObjectType7 = DatabaseObjectType.SYNONYM;
      dBCopyPlugin0.setDestDatabaseObject(databaseObjectInfo0);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DatabaseObjectType databaseObjectType8 = DatabaseObjectType.USER;
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, (String) null, "");
      int[] intArray0 = Quarter.FIRST_MONTH_IN_QUARTER;
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getQuickStartGuideFile();
      applicationFiles0.getPluginsDirectory();
      applicationFiles0.getUpdateDirectory();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      applicationFiles1.getUpdateDirectory();
      ApplicationFiles applicationFiles2 = new ApplicationFiles();
      ApplicationFiles applicationFiles3 = new ApplicationFiles();
      applicationFiles3.getPluginsUserSettingsDirectory();
      applicationFiles3.getUserSettingsDirectory();
      ApplicationFiles applicationFiles4 = new ApplicationFiles();
      ApplicationFiles applicationFiles5 = new ApplicationFiles();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getUpdateDirectory();
      applicationFileWrappersImpl0.getPluginsUserSettingsDirectory();
      boolean boolean0 = DBUtil.typesAreEquivalent((-7), (-1994091956));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getColumnNames((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = "~\\(~PaC$)";
      String string1 = "IN]pi|";
      String string2 = null;
      String string3 = "last-modified";
      int int0 = 2004;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "last-modified", ".*</span>.*", "IN]pi|", 0, "IN]pi|", (-3488), 2090, 248, (-2), "IN]pi|", ")E<S@~h\"]!}8|F", (-3), 2004, "Unknown columnKey: ");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      TableColumnInfo[] tableColumnInfoArray0 = null;
      // Undeclared exception!
      try { 
        DBUtil.getColumnList((TableColumnInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, ", ", ", ", "f/Y=Q|who1{", 7, "v[gK7A0[*ziz->Ol`%", 85, (-447), 1436, (-2298), (String) null, "v[gK7A0[*ziz->Ol`%", (-1148), (-340), "v[gK7A0[*ziz->Ol`%");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      int int0 = DBUtil.replaceDistinctDataType(0, tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "(;RV", "(;RV");
      DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      Locale locale0 = Locale.ITALY;
      Locale locale1 = Locale.PRC;
      locale0.getDisplayName();
      Stack<Locale> stack0 = new Stack<Locale>();
      Locale locale2 = Locale.PRC;
      Locale locale3 = Locale.GERMAN;
      locale3.getDisplayLanguage(locale1);
      Locale locale4 = locale0.stripExtensions();
      Locale.forLanguageTag("(;RV");
      Locale locale5 = Locale.JAPAN;
      Locale.setDefault(locale1);
      Locale locale6 = Locale.TRADITIONAL_CHINESE;
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale4);
      Locale locale7 = Locale.US;
      Locale.setDefault(locale1);
      Locale locale8 = Locale.SIMPLIFIED_CHINESE;
      Locale locale9 = Locale.UK;
      NumberFormat.getCurrencyInstance(locale7);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      PriorityQueue<Locale> priorityQueue0 = new PriorityQueue<Locale>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      PriorityQueue<Locale> priorityQueue1 = new PriorityQueue<Locale>();
      Stack<Locale.LanguageRange> stack1 = new Stack<Locale.LanguageRange>();
      Locale locale10 = Locale.FRANCE;
      DecimalFormat decimalFormat0 = (DecimalFormat)NumberFormat.getCurrencyInstance(locale8);
      assertEquals(3, decimalFormat0.getGroupingSize());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte)41;
      byteArray0[2] = (byte)24;
      byteArray0[3] = (byte) (-70);
      byteArray0[4] = (byte)34;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, "Length function is null for dialect=", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[1] = (byte) (-21);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.createFolder(evoSuiteFile0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "org.jfree.data.xy.Vector", "_vgm-]y_^", "_vgm-]y_^", 7, "_vgm-]y_^", 1, 1, (-5995), 1, "resource", "XP@iGFH`MMs$PfQB", (-215), (byte) (-21), "A}g`nG*ko\"yNdb");
      boolean boolean0 = DBUtil.typesAreEquivalent(16, 16);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.setSourceSession((ISession) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("zfu,YQYVH5KS2\"%", "catalog=", "length", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 2004, "DBUtil.info.executequery", (-71), 4, 3906, 639, "length", "DBUtil.info.executequery", 331, (-220), "DBUtil.info.executequery");
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceDistinctDataType(4, tableColumnInfo0, (ISession) null);
      DBUtil.isBinaryType(tableColumnInfo0);
      dBCopyPlugin0.getDestSession();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias(uidIdentifier0);
      sQLAlias0.getDriverPropertiesClone();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(331);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getWebSite();
      dBCopyPlugin1.getSourceSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      ISession iSession0 = dBCopyPlugin0.getSourceSession();
      assertNull(iSession0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      ImageIcon imageIcon0 = new ImageIcon("CREATE SEQUENCE $sequenceName$  $increment$ $minimum$ $maximum$ $startWith$ $cache$ $cycle$");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType("||AP;[", (Icon) imageIcon0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "=K[{Kp]5okGuJ!o");
      FileSystemHandling.shouldAllThrowIOExceptions();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("eMpT", "org.hibernate.AssertionFailure", "XFqX;SlB", "org.hibernate.dialect.Dialect$1", (-2), "D_M=F5OLUQG+QQO$>'", (-6), (-7), (-104), (-7), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", ") REFERENCES ", (byte) (-123), 1, "9fO8%Q6Pe~9zZA_F");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SYNONYM_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DBUtil.isBinaryType(tableColumnInfo0);
      SQLDriver sQLDriver0 = new SQLDriver();
      assertFalse(sQLDriver0.isJDBCDriverClassLoaded());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.unload();
      DBUtil.typesAreEquivalent(2, 780);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      String string0 = "$$M+8;iMaNLCbV";
      uidIdentifier0.setString("$$M+8;iMaNLCbV");
      uidIdentifier0.setString("ActionCollection.createActionError");
      SQLDriver sQLDriver0 = new SQLDriver(uidIdentifier0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver1 = new SQLDriver();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      String string1 = "u`yH^";
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      schemaInfo0.getSQLDatabaseMetaData();
      TableInfo tableInfo0 = null;
      try {
        tableInfo0 = new TableInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "_'_=#>+", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "u`yH^", "_'_=#>+", (ISQLDatabaseMetaData) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("", "", ".|bE$G05=BcGTe");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("");
      DatabaseObjectType.createNewDatabaseObjectType(".|bE$G05=BcGTe");
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("|b1d}=Qk#xva*'");
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.UDT_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType((String) null);
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.VIEW;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      FileSystemHandling.shouldAllThrowIOExceptions();
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DatabaseObjectType databaseObjectType6 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      DatabaseObjectType databaseObjectType7 = DatabaseObjectType.SCHEMA;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DatabaseObjectType databaseObjectType8 = DatabaseObjectType.OTHER;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType8);
      DatabaseObjectType databaseObjectType9 = DatabaseObjectType.SYNONYM;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType10 = DatabaseObjectType.UDT;
      DatabaseObjectType databaseObjectType11 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType8);
      DatabaseObjectType databaseObjectType12 = DatabaseObjectType.PROC_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("|b1d}=Qk#xva*'");
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType12);
      DatabaseObjectType databaseObjectType13 = DatabaseObjectType.USER;
      DatabaseObjectType databaseObjectType14 = DatabaseObjectType.OTHER;
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "i+SYD", "1+@3");
      // Undeclared exception!
      try { 
        DBUtil.getPKColumnString((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean0 = DBUtil.typesAreEquivalent(3, 3);
      System.setCurrentTimeMillis(3);
      boolean boolean1 = DBUtil.typesAreEquivalent(3, (-2547));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo(",~nhnBj6^tq==5/XI", "QDsDGnF", (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType((String) null);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SEQUENCE;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("lq");
      DatabaseObjectType.createNewDatabaseObjectType("lq", (Icon) null);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.createNewDatabaseObjectType("QDsDGnF", (Icon) null);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DatabaseObjectType.createNewDatabaseObjectType("}e_37[a2kkff&en%", (Icon) null);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType.createNewDatabaseObjectType("lq");
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.FOREIGN_KEY;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.BEST_ROW_ID;
      DatabaseObjectType.createNewDatabaseObjectType((String) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "&~VH\"{QOD)v", ",~nhnBj6^tq==5/XI", "QDsDGnF", 2001, (String) null, 85, 2001, 2048, 2001, "Length function is null for dialect=", "QDsDGnF", 85, 7, "/home/ubuntu/trmite/pfojBcts/102_squirrel-sql/plugins/dbcopy.jar");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      // Undeclared exception!
      try { 
        DBUtil.replaceDistinctDataType(2001, tableColumnInfo0, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "`");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      String string0 = DBUtil.fixCase((ISession) null, (String) null);
      assertNull(string0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      File file0 = applicationFiles0.getPluginsDirectory();
      applicationFiles0.getDatabaseAliasesFile();
      applicationFiles0.getExecutionLogFile();
      applicationFiles0.getPluginsUserSettingsDirectory();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      applicationFiles0.getUpdateDirectory();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      file0.list();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("", "", "|_vomAa&,-i.npiy");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "niQ\"DA=P7y/#JE5p7");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "G#*vBr%f'I=jr`'gSp(");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "S\u0006L+ *JM2;");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("$", (String) null, (String) null, (String) null, (-4198), "G#*vBr%f'I=jr`'gSp(", 28, 3945, 20000, 3945, ")", "|_vomAa&,-i.npiy", 1234, 2308, "");
      String string0 = DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      dBCopyPlugin0.getPluginJarFilePath();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin2.getPasteToTableInfo((ISQLConnection) null, "M/uQpyXGWp", ". Skipping FK constraint");
      DBCopyPlugin dBCopyPlugin3 = new DBCopyPlugin();
      DBUtil.validateColumnNames((ITableInfo) null, (SessionInfoProvider) null);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "O}");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DBUtil.typesAreEquivalent(16, (-156));
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("~ 8cju", "QDsDGnF", "~ 8cju");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      arrayList0.add((IDatabaseObjectInfo) databaseObjectInfo0);
      dBCopyPlugin0.setSourceDatabaseObjects(arrayList0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SEQUENCE;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.SCHEMA;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(2011);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(arrayList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getDTPropertiesFile();
      applicationFiles0.getUpdateDirectory();
      applicationFiles0.getPluginsDirectory();
      applicationFiles0.getUpdateDirectory();
      applicationFiles0.getUserSettingsDirectory();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      ApplicationFiles applicationFiles2 = new ApplicationFiles();
      ApplicationFiles applicationFiles3 = new ApplicationFiles();
      ApplicationFiles applicationFiles4 = new ApplicationFiles();
      applicationFiles2.getUserSettingsDirectory();
      ApplicationFiles applicationFiles5 = new ApplicationFiles();
      applicationFiles5.getLibraryDirectory();
      ApplicationFiles applicationFiles6 = new ApplicationFiles();
      applicationFiles6.getPluginsUserSettingsDirectory();
      ApplicationFiles applicationFiles7 = new ApplicationFiles();
      applicationFiles4.getUpdateDirectory();
      ApplicationFiles applicationFiles8 = new ApplicationFiles();
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate((ISQLConnection) null, "_VU2)p`(;P87dt{73o;", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      int[] intArray0 = Quarter.LAST_MONTH_IN_QUARTER;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "(zf+Ow7:'(/- .Xo", "(zf+Ow7:'(/- .Xo");
      // Undeclared exception!
      try { 
        DBUtil.getColumnName((ISQLConnection) null, (ITableInfo) null, 2498);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent(2, 2);
      Locale locale0 = Locale.CANADA;
      Locale locale1 = Locale.UK;
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      ArrayList<Locale> arrayList0 = new ArrayList<Locale>();
      Locale.filter((List<Locale.LanguageRange>) stack0, (Collection<Locale>) arrayList0);
      locale0.getDisplayLanguage(locale1);
      Locale.forLanguageTag("9tesBkKO9~[*8w+o,");
      Locale.setDefault(locale0);
      locale1.getDisplayName();
      NumberFormat.getCurrencyInstance(locale1);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      PriorityQueue<Locale> priorityQueue0 = new PriorityQueue<Locale>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      PriorityQueue<Locale> priorityQueue1 = new PriorityQueue<Locale>();
      Stack<Locale.LanguageRange> stack1 = new Stack<Locale.LanguageRange>();
      boolean boolean1 = DBUtil.typesAreEquivalent(2, (-128));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("~ 8cju", "QDsDGnF", (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType((String) null);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType.createNewDatabaseObjectType("E5cf1YVjGcAA.yWsa", (Icon) null);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.USER;
      DatabaseObjectType.createNewDatabaseObjectType((String) null);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[3];
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) databaseObjectInfo0;
      iDatabaseObjectInfoArray0[1] = (IDatabaseObjectInfo) databaseObjectInfo0;
      iDatabaseObjectInfoArray0[2] = (IDatabaseObjectInfo) databaseObjectInfo0;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("4~s%~@**", "GtWMS084<T[r", "63pbb |u", (String) null, 2005, "gZ_([a", 1337, (-869), (-8), (-869), "websiteUrl", (String) null, (-1), (-1082), "4~s%~@**");
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceDistinctDataType(91, tableColumnInfo0, (ISession) null);
      DBUtil.isBinaryType(tableColumnInfo0);
      dBCopyPlugin0.getDestSession();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias(uidIdentifier0);
      sQLAlias0.getDriverPropertiesClone();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-8));
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getWebSite();
      dBCopyPlugin1.setCopyMenuEnabled(true);
      dBCopyPlugin1.getSourceSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      ISession iSession0 = dBCopyPlugin1.getSourceSession();
      assertNull(iSession0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("{ebB,woXer\"<8", "] with va9ue=[", "] with va9ue=[", "{ebB,woXer\"<8", 1041, "{ebB,woXer\"<8", 272, 1535, 8, (-637), "] with va9ue=[", (String) null, 2292, 8, "] with va9ue=[");
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("org.jboss.net.protocol.njar.Handler", (String) null, "] with va9ue=[", "I", (-637), (String) null, (-3), 92, 0, (-388), "", (String) null, 2292, 0, (String) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[1];
      tableColumnInfoArray0[0] = tableColumnInfo1;
      DBUtil.getColumnList(tableColumnInfoArray0);
      DBUtil.replaceDistinctDataType(272, tableColumnInfo1, (ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin0, tableColumnInfo1, (String) null, "I");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      DBUtil.getColumnList(tableColumnInfoArray0);
      ConnectionWrapper connectionWrapper0 = null;
      try {
        connectionWrapper0 = new ConnectionWrapper((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("{ebB,woXer\"<8", "] with va9ue=[", "] with va9ue=[", "{ebB,woXer\"<8", 1041, "{ebB,woXer\"<8", 272, 1535, 8, (-637), "] with va9ue=[", (String) null, 2292, 8, "] with va9ue=[");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.DATABASE_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType((String) null);
      ImageIcon imageIcon0 = new ImageIcon();
      DatabaseObjectType.createNewDatabaseObjectType("] with va9ue=[", (Icon) imageIcon0);
      DatabaseObjectType.createNewDatabaseObjectType("fm=aGM9");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getWebSite();
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[16];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      // Undeclared exception!
      try { 
        DBUtil.getColumnList(tableColumnInfoArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[4];
      // Undeclared exception!
      try { 
        DBUtil.getColumnList(tableColumnInfoArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "] with value=[");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setPasteToTableName("] with value=[");
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[2];
      String string0 = "MYSQL";
      boolean boolean0 = false;
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      DBUtil.convertTableToObjectList(list0);
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      Hashtable<String, String> hashtable0 = new Hashtable<String, String>();
      JApplet jApplet0 = null;
      try {
        jApplet0 = new JApplet();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.applet.Applet", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("~ 8cju", "QDsDGnF", (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType((String) null);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SEQUENCE;
      DatabaseObjectType.createNewDatabaseObjectType("E5cf1YVjGcAA.yWsa", (Icon) null);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.USER;
      DatabaseObjectType.createNewDatabaseObjectType((String) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("6@5>.,7}Me1n f6vmx", "&~VH\"{QOD)v", "~H2 V8Wj13", "QDsDGnF", 2001, "6@5>.,7}Me1n f6vmx", 85, 2001, 2048, 2001, "Length function is null for dialect=", "QDsDGnF", 85, 7, "/home/ubuntu/termite/projects/102_squirrel-sql/plugins/dbcopy.jar");
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(2001, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.setDestSession((ISession) null);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      dBCopyPlugin0.getPluginJarFilePath();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin3 = new DBCopyPlugin();
      dBCopyPlugin3.getPasteToTableInfo((ISQLConnection) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "");
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      assertFalse(dBCopyPlugin0.allowsSessionStartedInBackground());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getUpdateDirectory();
      File file0 = applicationFiles0.getPluginsUserSettingsDirectory();
      FileSystemHandling.shouldAllThrowIOExceptions();
      fileWrapperFactoryImpl0.create("B&q.8+", "fileOpenInPreviousDir");
      MockFile mockFile0 = new MockFile(file0, "B&q.8+");
      fileWrapperFactoryImpl0.create((File) mockFile0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.isBinaryType((TableColumnInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getDestSession();
      dBCopyPlugin1.getSourceSession();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin1.getWebSite();
      dBCopyPlugin1.getPluginJarFilePath();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias(uidIdentifier0);
      sQLAlias0.getDriverPropertiesClone();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(2713);
      DBCopyPlugin dBCopyPlugin3 = new DBCopyPlugin();
      dBCopyPlugin2.getWebSite();
      DBCopyPlugin dBCopyPlugin4 = new DBCopyPlugin();
      dBCopyPlugin4.getSourceSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("http://www.squirrelsql.org", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "/home/ubuntu/termite/projects/102_squirrel-sql/plugins/dbcopy.jar", "no-splash", (-1175), "http://www.squirrelsql.org", 60, 60, 92, 2557, "/home/ubuntu/termite/projects/102_squirrel-sql/plugins/dbcopy.jar", "_v}q0uEvxPmv", 60, (-1), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      DBCopyPlugin dBCopyPlugin5 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin6 = new DBCopyPlugin();
      ISession iSession0 = dBCopyPlugin6.getSourceSession();
      assertNull(iSession0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        DBUtil.replaceOtherDataType((TableColumnInfo) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getUpdateDirectory();
      applicationFiles0.getPluginsDirectory();
      applicationFiles0.getUpdateDirectory();
      applicationFiles0.getUserSettingsDirectory();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      ApplicationFiles applicationFiles2 = new ApplicationFiles();
      ApplicationFiles applicationFiles3 = new ApplicationFiles();
      applicationFiles1.getPluginsUserSettingsDirectory();
      applicationFiles3.getPluginsUserSettingsDirectory();
      applicationFiles0.getPluginsUserSettingsDirectory();
      ApplicationFiles applicationFiles4 = new ApplicationFiles();
      ApplicationFiles applicationFiles5 = new ApplicationFiles();
      ApplicationFiles applicationFiles6 = new ApplicationFiles();
      ApplicationFiles applicationFiles7 = new ApplicationFiles();
      ApplicationFiles applicationFiles8 = new ApplicationFiles();
      applicationFiles8.getUpdateDirectory();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "zrKa.loK=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      Set<String> set0 = new TreeSet<String>();
      dBCopyPlugin0.getSourceDatabaseObjects();
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = "{y#?i";
      String string1 = "Mw9WE6#";
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, "{y#?i", "Mw9WE6#", "{y#?i");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, (byte[]) null);
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "] with value=[");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "mediumblob");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, (String) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, "zn$sg", "mediumblob", (-1431655763), (String) null, (-1431655763), 2279, 2308, 2308, "] with value=[", "mediumblob", 28, 1234, ")");
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertNull(string0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%PA3");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "] with value=[");
      FileSystemHandling.shouldAllThrowIOExceptions();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "o$MR[>Q#(S|LOT\"&cPa", (String) null, ">{", (-1431655763), (String) null, 126, (-1096), (-1096), 2279, "mediumblob", "] with value=[", (-1431655763), (-1431655763), "oy^U`Iy(W!<oo");
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertEquals("o$MR[>Q#(S|LOT\"&cPa", string0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, (byte[]) null);
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "] with value=[");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "mediumblob");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, (String) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, "zn$sg", "mediumblob", (-1431655763), (String) null, (-1431655763), 2279, 2308, 2308, "] with value=[", "mediumblob", 28, 1164, ")");
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertNull(string0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DBUtil.typesAreEquivalent(87, (-610));
      System.setCurrentTimeMillis(87);
      System.setCurrentTimeMillis(3410L);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("(;RV");
      uidIdentifier0.setString("Z$cWjYWlD@fYA{G");
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      DBUtil.convertObjectToTableList(linkedList0);
      SQLDriver sQLDriver0 = new SQLDriver(uidIdentifier0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      assertEquals(0, sQLDriverPropertyCollection0.size());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.1015830955806851
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.setSourceSession((ISession) null);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.setDestSession((ISession) null);
      dBCopyPlugin0.getSourceSession();
      String string0 = "";
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "", "DatabaseObjectType.catalog", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, (String) null);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "] with valuB=[");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "`Olg");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "mediumblob");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, (String) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("mediumblob", "vl_Xt5T", "", "", 2, "DBUtil.error.unknowntype", 23502, 2606, (-5), (-1073741822), "mediumblob", (String) null, 23502, 2606, "gFRCFHX-c/37");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("b", "b", "B\"", "clob", (-2250), "B\"", (-1187), (-2250), (-2250), 23503, "B\"", "b", 20, 23503, "CREATE TABLE ");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Locale.LanguageRange locale_LanguageRange0 = null;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "vtG{G(Kw)W:0i&d/v", "{NI}!iV\"}Wf5>UK");
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)91;
      byteArray0[1] = (byte) (-21);
      DBUtil.typesAreEquivalent(70, 478);
      System.setCurrentTimeMillis((byte) (-21));
      System.setCurrentTimeMillis((-1138L));
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, (TableColumnInfo) null, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, (TableColumnInfo) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      String string0 = "h5w";
      String string1 = "FROM SYS.ALL_VIEWS ";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "h5w", "h5w", 9, "%1", 9, 9, 9, 9, "%1", "h5w", 9, 0, "FROM SYS.ALL_VIEWS ");
      dBCopyPlugin0.setDestDatabaseObject(tableColumnInfo0);
      String string2 = "{Xy`sBf9?rj1[3+:8=7";
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("{Xy`sBf9?rj1[3+:8=7");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      dBCopyPlugin0.getPluginJarFilePath();
      String string3 = "H@-8|";
      DBUtil.getLastStatement();
      DBUtil.getLastStatement();
      DBUtil.setLastStatementValues(":I$F`");
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "%1", "FROM SYS.ALL_VIEWS ", " constraint ", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getQuickStartGuideFile();
      applicationFiles0.getUpdateDirectory();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      ApplicationFiles applicationFiles2 = new ApplicationFiles();
      applicationFiles2.getPluginsUserSettingsDirectory();
      ApplicationFiles applicationFiles3 = new ApplicationFiles();
      applicationFiles0.getUpdateDirectory();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      String string0 = DBUtil.fixCase((ISession) null, "");
      assertEquals("", string0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      Locale locale1 = Locale.UK;
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      ArrayList<Locale> arrayList0 = new ArrayList<Locale>();
      Locale.filter((List<Locale.LanguageRange>) stack0, (Collection<Locale>) arrayList0);
      Locale locale2 = Locale.US;
      locale2.getDisplayLanguage(locale0);
      Locale locale3 = Locale.forLanguageTag("D9&q");
      Locale.setDefault(locale2);
      locale3.getDisplayName();
      NumberFormat.getCurrencyInstance(locale1);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      PriorityQueue<Locale> priorityQueue0 = new PriorityQueue<Locale>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      PriorityQueue<Locale> priorityQueue1 = new PriorityQueue<Locale>();
      Stack<Locale.LanguageRange> stack1 = new Stack<Locale.LanguageRange>();
      boolean boolean0 = DBUtil.typesAreEquivalent((-91), 53);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey("?yy|T5@E%/", "xvSc\"<O-K#xW\"", "?yy|T5@E%/", (ForeignKeyInfo) null, dBCopyPlugin0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getQuickStartGuideFile();
      applicationFiles0.getPluginsUserSettingsDirectory();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      applicationFiles1.getPluginsDirectory();
      ApplicationFiles applicationFiles2 = new ApplicationFiles();
      applicationFiles2.getUpdateDirectory();
      ApplicationFiles applicationFiles3 = new ApplicationFiles();
      applicationFiles1.getUpdateDirectory();
      ApplicationFiles applicationFiles4 = new ApplicationFiles();
      ApplicationFiles applicationFiles5 = new ApplicationFiles();
      applicationFiles5.getPluginsUserSettingsDirectory();
      ApplicationFiles applicationFiles6 = new ApplicationFiles();
      ApplicationFiles applicationFiles7 = new ApplicationFiles();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, (String) null, (String) null);
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, 61);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBUtil.typesAreEquivalent((-7), 15);
      System.setCurrentTimeMillis(15);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent(5, 5);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      int int0 = 3945;
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "IN]pi|", "_@FI, 6SlgK>", "(;V", 3945);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.setPasteToTableName("Unknown Schema ");
      String string0 = "+h]u7,v3|\"";
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      arrayList0.remove((Object) "DBUtil.error.tablenotfound");
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL(dBCopyPlugin0, (ITableInfo) null, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "6a;=/X9u@m", "~@(~PaCV4", "-");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      int[] intArray0 = Quarter.LAST_MONTH_IN_QUARTER;
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject((IDatabaseObjectInfo) null, schemaInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject((IDatabaseObjectInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      String string0 = "Mw9WE6#";
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "{y#?i");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.convertTableToObjectList((List<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "] with value=[");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Vector<ITableInfo> vector0 = new Vector<ITableInfo>();
      List<IDatabaseObjectInfo> list0 = DBUtil.convertTableToObjectList(vector0);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      DBUtil.setLastStatement("DBUtil.info.executeupdate");
      Connection connection0 = null;
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriverProperty[] sQLDriverPropertyArray0 = new SQLDriverProperty[9];
      SQLDriverProperty sQLDriverProperty0 = new SQLDriverProperty("le@N=_djN)W2UO$wi", "le@N=_djN)W2UO$wi");
      sQLDriverPropertyArray0[0] = sQLDriverProperty0;
      SQLDriverProperty sQLDriverProperty1 = new SQLDriverProperty();
      sQLDriverPropertyArray0[1] = sQLDriverProperty1;
      String string0 = "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy";
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("R,/", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      SQLDriverProperty sQLDriverProperty2 = new SQLDriverProperty(driverPropertyInfo0);
      sQLDriverPropertyArray0[2] = sQLDriverProperty2;
      int int0 = 3727;
      // Undeclared exception!
      try { 
        sQLDriverPropertyCollection0.getDriverProperty(3727);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 3727, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, (String) null, "@L$EQZcVo");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getUpdateDirectory();
      applicationFiles0.getQuickStartGuideFile();
      applicationFiles0.getPluginsDirectory();
      applicationFiles0.getUpdateDirectory();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      ApplicationFiles applicationFiles2 = new ApplicationFiles();
      ApplicationFiles applicationFiles3 = new ApplicationFiles();
      applicationFiles1.getUserSettingsDirectory();
      applicationFiles3.getExecutionLogFile();
      applicationFiles1.getPluginsUserSettingsDirectory();
      ApplicationFiles applicationFiles4 = new ApplicationFiles();
      applicationFiles1.getUpdateDirectory();
      ApplicationFiles applicationFiles5 = new ApplicationFiles();
      ApplicationFiles applicationFiles6 = new ApplicationFiles();
      ApplicationFiles applicationFiles7 = new ApplicationFiles();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("fixCase: unexpected exception: ", "fixCase: unexpected exception: ", "(;R#nV", "(;R#nV", (-3), (String) null, (-2289), (-2289), (-1282), 2011, "x%0L1-QG;4cS", "{r=f]x", 2959, (-1282), "*pN");
      int int0 = DBUtil.replaceDistinctDataType((-1449), tableColumnInfo0, (ISession) null);
      assertEquals((-1449), int0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("", "", "|_vomAa&,-i.npiy");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("");
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("|b1d}l=Qk#xva*'");
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.UDT;
      DatabaseObjectType.createNewDatabaseObjectType("migratePreferences");
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getDefaultIcon();
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      FileSystemHandling.shouldAllThrowIOExceptions();
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.SCHEMA;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DatabaseObjectType databaseObjectType6 = DatabaseObjectType.OTHER;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType6);
      DatabaseObjectType.createNewDatabaseObjectType("i+SYD");
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType7 = DatabaseObjectType.UDT;
      DatabaseObjectType databaseObjectType8 = DatabaseObjectType.UDT_TYPE_DBO;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType6);
      DatabaseObjectType databaseObjectType9 = DatabaseObjectType.PROC_TYPE_DBO;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType9);
      DatabaseObjectType databaseObjectType10 = DatabaseObjectType.USER;
      DatabaseObjectType.createNewDatabaseObjectType("s!v%{");
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(databaseObjectInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getQuickStartGuideFile();
      applicationFiles0.getPluginsDirectory();
      applicationFiles0.getUpdateDirectory();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      applicationFiles1.getUpdateDirectory();
      ApplicationFiles applicationFiles2 = new ApplicationFiles();
      ApplicationFiles applicationFiles3 = new ApplicationFiles();
      applicationFiles3.getPluginsUserSettingsDirectory();
      applicationFiles3.getUserSettingsDirectory();
      ApplicationFiles applicationFiles4 = new ApplicationFiles();
      ApplicationFiles applicationFiles5 = new ApplicationFiles();
      applicationFiles3.getUpdateDirectory();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceDistinctDataType(1000000000, (TableColumnInfo) null, (ISession) null);
      assertEquals(1000000000, int0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      DBUtil dBUtil0 = new DBUtil();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias();
      sQLAlias0.getDriverPropertiesClone();
      SQLDriver sQLDriver0 = new SQLDriver(uidIdentifier0);
      String[] stringArray0 = new String[6];
      try { 
        sQLDriver0.setUrl(stringArray0[0]);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // JDBC URL cannot be blank.
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLDriver", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      String string0 = "|y6a;=/X9e@m";
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.dropTable("^9DEU$(!M[xx-K`XTx'", "6a;=/X9u@m", "xi`AT=:gIor", (ISession) null, true, 21);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }
}
