/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 11:54:11 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.8876911911657177
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer0.notEquals();
      xPathLexer0.consume((-2931));
      xPathLexer0.rightBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.8760130634995311
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"sOEOh %}2");
      xPathLexer0.equals();
      xPathLexer0.setXPath(".-#kA5D2W");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer(".-#kA5D2W");
      XPathLexer xPathLexer2 = new XPathLexer("\"sOEOh %}2");
      xPathLexer2.comma();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.star();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer2.setXPath("t>^B:qo+$");
      xPathLexer2.identifier();
      xPathLexer3.dollar();
      xPathLexer1.plus();
      xPathLexer1.relationalOperator();
      xPathLexer3.nextToken();
      xPathLexer0.not();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer1.nextToken();
      xPathLexer4.dots();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.relationalOperator();
      xPathLexer3.at();
      xPathLexer2.relationalOperator();
      xPathLexer6.nextToken();
      XPathLexer xPathLexer8 = new XPathLexer("\"sOEOh %}2");
      xPathLexer8.notEquals();
      xPathLexer6.notEquals();
      xPathLexer0.notEquals();
      xPathLexer4.not();
      xPathLexer2.number();
      xPathLexer1.and();
      Token token0 = xPathLexer8.getPreviousToken();
      assertNull(token0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.796618986856755
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-\"sOEOh %}2");
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.dots();
      assertEquals("s", token0.getTokenText());
      
      xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer("xM;RnZD|Z");
      xPathLexer0.slashes();
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.leftParen();
      xPathLexer2.and();
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals(6, token3.getTokenType());
      
      xPathLexer2.dots();
      Token token4 = xPathLexer2.notEquals();
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(" ", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer1.leftParen();
      assertEquals(1, token6.getTokenType());
      assertEquals(";", token6.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer2.nextToken();
      Token token7 = xPathLexer1.not();
      assertEquals(23, token7.getTokenType());
      assertEquals("R", token7.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("><zCwF'f<*I");
      Token token8 = xPathLexer3.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      xPathLexer4.dots();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token9 = xPathLexer2.dots();
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer5.relationalOperator();
      assertEquals(9, token10.getTokenType());
      assertEquals(">", token10.getTokenText());
      
      Token token11 = xPathLexer2.at();
      assertEquals(16, token11.getTokenType());
      
      Token token12 = xPathLexer2.star();
      assertEquals(20, token12.getTokenType());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6594275734992059
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      xPathLexer0.relationalOperator();
      xPathLexer0.literal();
      xPathLexer0.nextToken();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("4f(y@*vGC)}),");
      xPathLexer1.star();
      xPathLexer1.slashes();
      xPathLexer1.slashes();
      xPathLexer0.nextToken();
      xPathLexer1.plus();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.leftParen();
      xPathLexer0.and();
      xPathLexer2.getPreviousToken();
      xPathLexer2.dots();
      xPathLexer2.notEquals();
      xPathLexer1.slashes();
      XPathLexer xPathLexer3 = new XPathLexer("4f(y@*vGC)}),");
      xPathLexer3.leftParen();
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.nextToken();
      xPathLexer0.not();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("&bVCG<QY&n");
      xPathLexer6.nextToken();
      XPathLexer xPathLexer7 = null;
      try {
        xPathLexer7 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.413385532586144
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%wU#s:f/;w<zJfgO");
      xPathLexer0.setXPath("V0?gQ");
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.comma();
      assertEquals("0", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("?gQ", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("?", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals("g", token3.getTokenText());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      assertEquals("", token5.getTokenText());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0645457610156828
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-\"sOEOh %}2");
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      String string0 = "com.werken.saxpath.XPathLexer";
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume((-3957));
      // Undeclared exception!
      try { 
        xPathLexer1.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0353983619853624
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer0.plus();
      XPathLexer xPathLexer2 = new XPathLexer("1Uq");
      XPathLexer xPathLexer3 = new XPathLexer("1Uq");
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token2 = xPathLexer4.plus();
      assertEquals(5, token2.getTokenType());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("L!wz^=");
      Token token3 = xPathLexer2.leftParen();
      assertEquals("1", token3.getTokenText());
      
      xPathLexer3.relationalOperator();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer("1Uq");
      Token token4 = xPathLexer6.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("1", token4.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token5 = xPathLexer7.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("8K~");
      Token token6 = xPathLexer2.nextToken();
      assertEquals("Uq", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer8.dots();
      assertEquals("8", token7.getTokenText());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token9 = xPathLexer5.at();
      assertEquals("L", token9.getTokenText());
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer4.star();
      assertEquals(20, token10.getTokenType());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.792240928025969
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9z@|4JSc5{7huFF");
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("^K:or");
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      Token token1 = xPathLexer2.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("z@|4JSc5{7huFF", token2.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (30) (9)", string0);
      
      XPathLexer xPathLexer5 = new XPathLexer("^K:or");
      Token token3 = xPathLexer5.comma();
      assertEquals("^", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer1.at();
      assertEquals(16, token4.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.172173415514433
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-\"sOEOh %}2");
      Token token0 = xPathLexer0.nextToken();
      Token token1 = xPathLexer0.leftParen();
      assertEquals("\"", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.dots();
      Token token2 = xPathLexer1.star();
      assertEquals(20, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("xM;RnZD|Z");
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("s", token3.getTokenText());
      
      Token token4 = xPathLexer2.not();
      assertEquals("x", token4.getTokenText());
      
      Token token5 = xPathLexer1.number();
      assertEquals(30, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.dots();
      token0.toString();
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer1.comma();
      assertEquals(32, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("xM;RnZD|Z");
      xPathLexer0.or();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token8 = xPathLexer4.nextToken();
      assertEquals("xM", token8.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token9 = xPathLexer7.dots();
      assertEquals(13, token9.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer2.minus();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer9 = new XPathLexer("FrYNFvk.#c<");
      Token token10 = xPathLexer9.equals();
      assertEquals(21, token10.getTokenType());
      assertEquals("F", token10.getTokenText());
      
      Token token11 = xPathLexer1.literal();
      assertNull(token11);
      
      XPathLexer xPathLexer10 = new XPathLexer(") (");
      Token token12 = xPathLexer10.leftBracket();
      assertEquals(3, token12.getTokenType());
      assertEquals(")", token12.getTokenText());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8783128534163427
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("equ*XT\"On8D?d>vV[");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("eq", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      Token token1 = xPathLexer1.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("c", token1.getTokenText());
      
      xPathLexer1.not();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer1.star();
      assertEquals("m", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.setXPath("3x`@cx~[vV");
      Token token4 = xPathLexer0.identifier();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      assertEquals("*", token5.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("kC$YP2zyZ");
      XPathLexer xPathLexer5 = new XPathLexer("t>^B:qo+$");
      Token token6 = xPathLexer2.comma();
      assertEquals(32, token6.getTokenType());
      assertEquals("3", token6.getTokenText());
      
      Token token7 = xPathLexer3.pipe();
      assertEquals(17, token7.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer7 = new XPathLexer("#bpe<'hOZvd+X`");
      Token token8 = xPathLexer6.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer4.not();
      assertEquals(23, token9.getTokenType());
      assertEquals("k", token9.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      XPathLexer xPathLexer9 = new XPathLexer("3x`@cx~[vV");
      Token token10 = xPathLexer7.nextToken();
      assertEquals("#bpe<'hOZvd+X`", token10.getTokenText());
      
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token11 = xPathLexer10.dots();
      assertEquals(13, token11.getTokenType());
      
      XPathLexer xPathLexer11 = new XPathLexer();
      Token token12 = xPathLexer7.at();
      assertEquals("#", token12.getTokenText());
      assertEquals(16, token12.getTokenType());
      
      Token token13 = xPathLexer10.colon();
      assertEquals(18, token13.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.9103869001302907
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z+!ylRlTLM}");
      xPathLexer0.mod();
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.rightParen();
      assertEquals("!", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.getXPath();
      Token token1 = xPathLexer0.star();
      assertEquals("y", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("lR", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      xPathLexer0.pipe();
      xPathLexer0.and();
      Token token3 = xPathLexer0.notEquals();
      xPathLexer0.colon();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.dots();
      String string0 = token3.toString();
      assertEquals("[ (22) (TL)", string0);
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer1.comma();
      assertEquals(32, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("JVLsTeIc^'8sJ/>K");
      xPathLexer2.or();
      XPathLexer xPathLexer3 = new XPathLexer("JVLsTeIc^'8sJ/>K");
      Token token7 = xPathLexer0.pipe();
      assertEquals("}", token7.getTokenText());
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer2.nextToken();
      assertEquals(15, token8.getTokenType());
      assertEquals("JVLsTeIc", token8.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token9 = xPathLexer3.dots();
      assertEquals(13, token9.getTokenType());
      assertEquals("J", token9.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token10 = xPathLexer1.at();
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer3.colon();
      assertEquals(18, token11.getTokenType());
      assertEquals("V", token11.getTokenText());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.949220420592175
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.at();
      xPathLexer0.setPreviousToken(token0);
      int int0 = 6;
      xPathLexer0.consume((-5229));
      xPathLexer0.at();
      xPathLexer0.rightParen();
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7863050711305464
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.dollar();
      token0.toString();
      token0.toString();
      XPathLexer xPathLexer1 = new XPathLexer("Ln,w$F8C'k_nPv@X");
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      
      String string0 = token0.toString();
      assertEquals("[ (26) (4)", string0);
      
      XPathLexer xPathLexer2 = new XPathLexer("Ln,w$F8C'k_nPv@X");
      Token token2 = xPathLexer2.notEquals();
      xPathLexer1.nextToken();
      Token token3 = xPathLexer0.dots();
      assertEquals("f", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      String string1 = token2.toString();
      assertEquals("[ (22) (Ln)", string1);
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer1.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("w", token4.getTokenText());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals("$", token5.getTokenText());
      
      Token token6 = xPathLexer2.number();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer3.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer1.comma();
      assertEquals("F", token8.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token9 = xPathLexer4.pipe();
      assertEquals(17, token9.getTokenType());
      
      xPathLexer3.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token10 = xPathLexer6.star();
      assertEquals(20, token10.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.0507303001264177
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      xPathLexer0.relationalOperator();
      xPathLexer0.literal();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.at();
      xPathLexer1.colon();
      XPathLexer xPathLexer2 = new XPathLexer("4f(y@*vGC)}),");
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("4f(y@*vGC)}),");
      xPathLexer3.nextToken();
      Token token3 = xPathLexer3.plus();
      assertEquals("f", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer3.leftParen();
      assertEquals("(", token4.getTokenText());
      assertEquals(1, token4.getTokenType());
      
      xPathLexer3.and();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer2.and();
      Token token5 = xPathLexer2.identifier();
      assertEquals(15, token5.getTokenType());
      assertEquals("f", token5.getTokenText());
      
      Token token6 = xPathLexer3.dollar();
      assertEquals(26, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("7k=.I.5vL");
      Token token7 = xPathLexer5.comma();
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer5.pipe();
      assertEquals(17, token8.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("aOoVQH[l");
      xPathLexer5.relationalOperator();
      Token token9 = xPathLexer3.nextToken();
      assertEquals("@", token9.getTokenText());
      
      Token token10 = xPathLexer4.not();
      assertEquals(23, token10.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      XPathLexer xPathLexer9 = new XPathLexer("aOoVQH[l");
      Token token11 = xPathLexer6.nextToken();
      assertEquals(30, token11.getTokenType());
      
      Token token12 = xPathLexer8.dots();
      assertEquals(13, token12.getTokenType());
      
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token13 = xPathLexer10.at();
      assertEquals(16, token13.getTokenType());
      
      Token token14 = xPathLexer7.colon();
      assertEquals("a", token14.getTokenText());
      assertEquals(18, token14.getTokenType());
      
      Token token15 = xPathLexer6.equals();
      assertEquals("k", token15.getTokenText());
      assertEquals(21, token15.getTokenType());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.9884915678940467
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("equ*XT\"On8D?dDvV[");
      xPathLexer0.dots();
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("q", token0.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("Hr15C\"](-Q3x}a\"k");
      xPathLexer1.nextToken();
      Token token1 = xPathLexer1.doubleColon();
      assertEquals("\"]", token1.getTokenText());
      
      xPathLexer1.plus();
      XPathLexer xPathLexer2 = new XPathLexer("Hr15C\"](-Q3x}a\"k");
      Token token2 = xPathLexer2.slashes();
      assertEquals("H", token2.getTokenText());
      
      Token token3 = xPathLexer1.literal();
      assertNull(token3);
      
      Token token4 = xPathLexer0.star();
      assertEquals("*", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.setXPath("equ*XT\"On8D?dDvV[");
      Token token5 = xPathLexer2.dots();
      assertEquals(13, token5.getTokenType());
      assertEquals("r", token5.getTokenText());
      
      Token token6 = xPathLexer1.notEquals();
      assertEquals(22, token6.getTokenType());
      
      Token token7 = xPathLexer1.slashes();
      assertEquals(11, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("W%\"");
      XPathLexer xPathLexer5 = new XPathLexer("FvsszNP 8IkX':]Y|");
      Token token8 = xPathLexer5.nextToken();
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer3.not();
      assertEquals("e", token9.getTokenText());
      assertEquals(23, token9.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token10 = xPathLexer2.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("");
      xPathLexer2.div();
      Token token11 = xPathLexer0.plus();
      assertEquals(5, token11.getTokenType());
      
      Token token12 = xPathLexer1.number();
      assertEquals(30, token12.getTokenType());
      
      Token token13 = xPathLexer3.pipe();
      assertEquals("q", token13.getTokenText());
      assertEquals(17, token13.getTokenType());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.965133042567251
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z+!ylRlTLM}");
      xPathLexer0.mod();
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.rightParen();
      assertEquals("!", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.getXPath();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("y", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("lR", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals("l", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.comma();
      assertEquals("T", token4.getTokenText());
      
      Token token5 = xPathLexer0.colon();
      assertEquals("L", token5.getTokenText());
      
      xPathLexer0.nextToken();
      Token token6 = xPathLexer0.whitespace();
      assertEquals("", token6.getTokenText());
      assertEquals((-2), token6.getTokenType());
      
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("%@%");
      Token token9 = xPathLexer1.dots();
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer0.notEquals();
      assertEquals(22, token10.getTokenType());
      
      Token token11 = xPathLexer0.slashes();
      assertEquals(11, token11.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("Z+!ylRlTLM}");
      Token token12 = xPathLexer2.nextToken();
      assertEquals("Z", token12.getTokenText());
      assertEquals(15, token12.getTokenType());
      
      Token token13 = xPathLexer1.not();
      assertEquals("@", token13.getTokenText());
      assertEquals(23, token13.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.or();
      XPathLexer xPathLexer4 = new XPathLexer("%@%");
      xPathLexer0.relationalOperator();
      Token token14 = xPathLexer3.at();
      assertEquals(16, token14.getTokenType());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.009576679320194
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token1 = xPathLexer2.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      xPathLexer2.notEquals();
      xPathLexer0.mod();
      Token token2 = xPathLexer0.notEquals();
      assertEquals("om", token2.getTokenText());
      
      xPathLexer2.identifier();
      Token token3 = xPathLexer0.number();
      assertEquals(31, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token4 = xPathLexer3.slashes();
      assertEquals("c", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("werken.saxpath.XPathLexer", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("Ru*|C,B*Q#M@=4`");
      xPathLexer4.and();
      xPathLexer0.identifier();
      Token token6 = xPathLexer2.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer1.slashes();
      assertEquals(11, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("Ru*|C,B*Q#M@=4`");
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token9 = xPathLexer7.not();
      assertEquals(23, token9.getTokenType());
      assertEquals("R", token9.getTokenText());
      
      XPathLexer xPathLexer9 = new XPathLexer("s9;\"MkP");
      Token token10 = xPathLexer7.minus();
      assertEquals(6, token10.getTokenType());
      assertEquals("u", token10.getTokenText());
      
      XPathLexer xPathLexer10 = new XPathLexer();
      xPathLexer1.star();
      XPathLexer xPathLexer11 = new XPathLexer();
      Token token11 = xPathLexer5.star();
      assertEquals(20, token11.getTokenType());
      
      Token token12 = xPathLexer11.at();
      assertEquals(16, token12.getTokenType());
      
      Token token13 = xPathLexer3.colon();
      assertEquals("o", token13.getTokenText());
      assertEquals(18, token13.getTokenType());
      
      xPathLexer3.and();
      xPathLexer5.notEquals();
      Token token14 = xPathLexer11.notEquals();
      assertEquals(22, token14.getTokenType());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7124002040973387
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k=GB)`){g|\"");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("k=", token0.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.and();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals(")", token2.getTokenText());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("`){g|\"", token4.getTokenText());
      
      Token token5 = xPathLexer1.dollar();
      assertEquals(26, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("k=GB)`){g|\"");
      Token token6 = xPathLexer2.comma();
      assertEquals(32, token6.getTokenType());
      assertEquals("k", token6.getTokenText());
      
      Token token7 = xPathLexer0.plus();
      assertEquals("`", token7.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.relationalOperator();
      xPathLexer1.nextToken();
      Token token8 = xPathLexer1.not();
      assertEquals(23, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token9 = xPathLexer2.nextToken();
      assertEquals(21, token9.getTokenType());
      assertEquals("=", token9.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token10 = xPathLexer5.plus();
      assertEquals(5, token10.getTokenType());
      
      xPathLexer5.dots();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer1.relationalOperator();
      Token token11 = xPathLexer1.at();
      assertEquals(16, token11.getTokenType());
      
      Token token12 = xPathLexer1.dots();
      assertEquals(13, token12.getTokenType());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5983745451438953
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+%/ FhB?VWnO.l;");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.comma();
      assertEquals(32, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("^K:or");
      Token token1 = xPathLexer1.not();
      assertEquals(23, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token2 = xPathLexer3.slashes();
      assertEquals(11, token2.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("qrDmJe1;x");
      xPathLexer3.pipe();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token3 = xPathLexer4.nextToken();
      assertEquals(15, token3.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer("dOs[/uR/");
      Token token4 = xPathLexer7.identifier();
      assertEquals("dOs", token4.getTokenText());
      
      Token token5 = xPathLexer3.dots();
      assertEquals(13, token5.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token6 = xPathLexer5.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer1.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer1.colon();
      assertEquals(18, token8.getTokenType());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.8536117077654546
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k=GB)`){g|\"");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("klKH$Ji");
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      xPathLexer0.literal();
      Token token2 = xPathLexer1.slashes();
      assertEquals("k", token2.getTokenText());
      
      xPathLexer1.nextToken();
      xPathLexer0.plus();
      XPathLexer xPathLexer2 = new XPathLexer("klKH$Ji");
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      xPathLexer2.leftParen();
      xPathLexer0.and();
      xPathLexer1.getPreviousToken();
      Token token4 = xPathLexer1.dots();
      assertEquals("$", token4.getTokenText());
      
      xPathLexer1.notEquals();
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("]ml)C~<6 M~");
      Token token6 = xPathLexer3.leftParen();
      assertEquals(1, token6.getTokenType());
      assertEquals("]", token6.getTokenText());
      
      xPathLexer1.relationalOperator();
      Token token7 = xPathLexer3.nextToken();
      assertEquals("ml", token7.getTokenText());
      
      Token token8 = xPathLexer2.not();
      assertEquals(23, token8.getTokenType());
      assertEquals("l", token8.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("k=GB)`){g|\"");
      Token token9 = xPathLexer5.nextToken();
      assertEquals(15, token9.getTokenType());
      
      Token token10 = xPathLexer5.notEquals();
      assertEquals(22, token10.getTokenType());
      assertEquals("=G", token10.getTokenText());
      
      Token token11 = xPathLexer4.dots();
      assertEquals(13, token11.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer5.relationalOperator();
      Token token12 = xPathLexer5.at();
      assertEquals(16, token12.getTokenType());
      assertEquals("B", token12.getTokenText());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.026715432559583
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&[)bO0%a)SQ(");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("&", token0.getTokenText());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.dollar();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (26) ([)", string0);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(")", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifier();
      token3.toString();
      token3.toString();
      String string1 = token3.toString();
      assertEquals("[ (15) (bO0)", string1);
      
      Token token4 = xPathLexer0.whitespace();
      token4.toString();
      String string2 = token4.toString();
      assertEquals("[ (-2) ()", string2);
      
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token4);
      XPathLexer xPathLexer1 = new XPathLexer(".<?V?C");
      Token token5 = xPathLexer1.literal();
      assertNull(token5);
      
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.nextToken();
      assertEquals("a)SQ(", token6.getTokenText());
      
      Token token7 = xPathLexer1.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      Token token8 = xPathLexer1.whitespace();
      assertEquals((-2), token8.getTokenType());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.6811978711420132
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("R");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("R", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.dollar();
      assertEquals(26, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.relationalOperator();
      Token token3 = xPathLexer2.at();
      assertEquals(16, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer3.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.leftParen();
      Token token5 = xPathLexer4.notEquals();
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer4.comma();
      assertEquals(32, token6.getTokenType());
      
      xPathLexer0.equals();
      Token token7 = xPathLexer0.equals();
      assertEquals(21, token7.getTokenType());
      
      Token token8 = xPathLexer4.leftParen();
      assertEquals(1, token8.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.998996651510032
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&[)bO0%a)SQ(");
      Token token0 = xPathLexer0.dots();
      Token token1 = xPathLexer0.comma();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals(")b", token2.getTokenText());
      
      Token token3 = xPathLexer0.number();
      xPathLexer0.setPreviousToken(token3);
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (13) (&)", string0);
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(30, token5.getTokenType());
      
      xPathLexer0.setPreviousToken(token1);
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token6 = xPathLexer0.comma();
      assertEquals("%", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("a", token7.getTokenText());
      
      Token token8 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token8.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.9930025345973355
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z+!ylRlTLM}");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("Z+", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals("!", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.getXPath();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("y", token2.getTokenText());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals("l", token4.getTokenText());
      
      xPathLexer0.and();
      Token token5 = xPathLexer0.comma();
      assertEquals("T", token5.getTokenText());
      
      Token token6 = xPathLexer0.colon();
      assertEquals("L", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("M", token7.getTokenText());
      
      Token token8 = xPathLexer0.leftBracket();
      assertEquals("}", token8.getTokenText());
      assertEquals(3, token8.getTokenType());
      
      Token token9 = xPathLexer0.whitespace();
      assertEquals((-2), token9.getTokenType());
      
      Token token10 = xPathLexer0.colon();
      assertEquals(18, token10.getTokenType());
      
      Token token11 = xPathLexer0.comma();
      assertEquals(32, token11.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("%@%");
      Token token12 = xPathLexer1.dots();
      assertEquals(13, token12.getTokenType());
      assertEquals("%", token12.getTokenText());
      
      Token token13 = xPathLexer0.notEquals();
      assertEquals(22, token13.getTokenType());
      
      Token token14 = xPathLexer0.slashes();
      assertEquals(11, token14.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("W%\"");
      Token token15 = xPathLexer2.nextToken();
      assertEquals(15, token15.getTokenType());
      
      Token token16 = xPathLexer1.not();
      assertEquals(23, token16.getTokenType());
      assertEquals("@", token16.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.or();
      XPathLexer xPathLexer4 = new XPathLexer("%@%");
      xPathLexer0.relationalOperator();
      Token token17 = xPathLexer3.at();
      assertEquals(16, token17.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.066886996017146
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-\"sOEOh %}2");
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.dollar();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = null;
      try {
        xPathLexer4 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.2295355092387275
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-\"sOEOh %}2");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(6, token0.getTokenType());
      assertEquals("-", token0.getTokenText());
      
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.dots();
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer1.star();
      assertEquals(20, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token3 = xPathLexer0.slashes();
      assertEquals("s", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer2.not();
      Token token5 = xPathLexer1.number();
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer0.leftParen();
      xPathLexer1.setPreviousToken(token6);
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token7 = xPathLexer1.literal();
      assertNull(token7);
      
      Token token8 = xPathLexer1.leftParen();
      assertEquals(1, token8.getTokenType());
      
      xPathLexer0.setPreviousToken(token4);
      assertEquals("c", token4.getTokenText());
      
      xPathLexer2.operatorName();
      xPathLexer2.relationalOperator();
      Token token9 = xPathLexer0.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token10 = xPathLexer2.nextToken();
      assertEquals(15, token10.getTokenType());
      assertEquals("om.werken.saxpath.XPathLexer", token10.getTokenText());
      
      Token token11 = xPathLexer2.nextToken();
      assertEquals("", token11.getTokenText());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.0556202407980435
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("equ*XT\"On8D?dDvV[");
      xPathLexer0.dots();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("Hr15C\"](-Q3x}a\"k");
      xPathLexer1.nextToken();
      xPathLexer1.plus();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer2 = new XPathLexer("Hr15C\"](-Q3x}a\"k");
      xPathLexer1.setXPath("");
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("equ*XT\"On8D?dDvV[");
      xPathLexer4.endPosition();
      xPathLexer0.and();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer4.div();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer("b7H8JsTlStzfrdZ+");
      xPathLexer6.dollar();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer6.comma();
      XPathLexer xPathLexer8 = new XPathLexer("b7H8JsTlStzfrdZ+");
      xPathLexer4.pipe();
      XPathLexer xPathLexer9 = new XPathLexer();
      xPathLexer7.leftBracket();
      xPathLexer9.nextToken();
      xPathLexer7.star();
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token0 = xPathLexer10.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.604316413127917
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k=GB)`){g|\"");
      xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("k=GB)`){g|\"");
      xPathLexer0.nextToken();
      xPathLexer1.dollar();
      XPathLexer xPathLexer2 = new XPathLexer("k=GB)`){g|\"");
      xPathLexer2.comma();
      xPathLexer0.plus();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.relationalOperator();
      xPathLexer1.nextToken();
      xPathLexer0.not();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.01360208128385
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      Token token0 = xPathLexer0.slashes();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (11) (4)", string0);
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (11) (4)");
      Token token2 = xPathLexer1.number();
      assertEquals(30, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer1.nextToken();
      assertEquals("[", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals("(", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("FVYs{|yAuzV%(Wo8");
      Token token5 = xPathLexer3.comma();
      assertEquals("F", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer3.plus();
      assertEquals("V", token6.getTokenText());
      assertEquals(5, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.relationalOperator();
      Token token7 = xPathLexer3.nextToken();
      assertEquals("Ys", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      assertEquals("y", token8.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token9 = xPathLexer1.nextToken();
      assertEquals("(", token9.getTokenText());
      assertEquals(1, token9.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token10 = xPathLexer6.dots();
      assertEquals(13, token10.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer1.relationalOperator();
      Token token11 = xPathLexer1.at();
      assertEquals("1", token11.getTokenText());
      assertEquals(16, token11.getTokenType());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.0700460808781536
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      xPathLexer0.relationalOperator();
      xPathLexer0.literal();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer2.plus();
      XPathLexer xPathLexer3 = new XPathLexer("4f(y@*vGC)}),");
      XPathLexer xPathLexer4 = new XPathLexer("HFkBR7");
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer("1Uq");
      XPathLexer xPathLexer7 = new XPathLexer("8K~");
      xPathLexer7.nextToken();
      Token token3 = xPathLexer2.not();
      assertEquals(23, token3.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token4 = xPathLexer3.nextToken();
      assertEquals(30, token4.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      xPathLexer2.at();
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token5 = xPathLexer7.literal();
      assertNull(token5);
      
      xPathLexer9.relationalOperator();
      Token token6 = xPathLexer8.at();
      assertEquals(16, token6.getTokenType());
      
      xPathLexer8.or();
      Token token7 = xPathLexer7.dots();
      assertEquals(13, token7.getTokenType());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.6976768557565793
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token1 = xPathLexer2.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      xPathLexer2.notEquals();
      xPathLexer0.mod();
      Token token2 = xPathLexer0.notEquals();
      assertEquals("om", token2.getTokenText());
      
      xPathLexer2.identifier();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token3 = xPathLexer3.slashes();
      assertEquals("c", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(13, token4.getTokenType());
      assertEquals(".", token4.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("Ru*|C,B*Q#M@=4`");
      xPathLexer4.and();
      Token token5 = xPathLexer0.identifier();
      assertEquals("werken.saxpath.XPathLexer", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer2.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer1.slashes();
      assertEquals(11, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("Ru*|C,B*Q#M@=4`");
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token9 = xPathLexer7.not();
      assertEquals(23, token9.getTokenType());
      assertEquals("R", token9.getTokenText());
      
      XPathLexer xPathLexer9 = new XPathLexer("s9;\"MkP");
      Token token10 = xPathLexer7.minus();
      assertEquals(6, token10.getTokenType());
      assertEquals("u", token10.getTokenText());
      
      XPathLexer xPathLexer10 = new XPathLexer();
      xPathLexer1.star();
      XPathLexer xPathLexer11 = new XPathLexer();
      Token token11 = xPathLexer5.star();
      assertEquals(20, token11.getTokenType());
      
      Token token12 = xPathLexer11.at();
      assertEquals(16, token12.getTokenType());
      
      Token token13 = xPathLexer3.colon();
      assertEquals(18, token13.getTokenType());
      
      xPathLexer3.and();
      xPathLexer5.notEquals();
      Token token14 = xPathLexer11.notEquals();
      assertEquals(22, token14.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.064053027287246
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-\"sOEOh %}2");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("-", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.dots();
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer1.star();
      assertEquals(20, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("\"", token3.getTokenText());
      
      Token token4 = xPathLexer2.not();
      Token token5 = xPathLexer1.number();
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer0.leftParen();
      xPathLexer1.setPreviousToken(token6);
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer3.pipe();
      xPathLexer1.literal();
      Token token7 = xPathLexer1.leftParen();
      assertEquals(1, token7.getTokenType());
      
      xPathLexer0.setPreviousToken(token4);
      assertEquals("c", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      xPathLexer2.operatorName();
      xPathLexer2.relationalOperator();
      xPathLexer2.relationalOperator();
      Token token8 = xPathLexer2.nextToken();
      assertEquals(15, token8.getTokenType());
      assertEquals("om.werken.saxpath.XPathLexer", token8.getTokenText());
      
      Token token9 = xPathLexer0.pipe();
      assertEquals("O", token9.getTokenText());
      assertEquals(17, token9.getTokenType());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.175784780069204
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k=GB)`){g|\"");
      xPathLexer0.relationalOperator();
      xPathLexer0.literal();
      xPathLexer0.nextToken();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("k=GB)`){g|\"");
      xPathLexer0.star();
      xPathLexer1.slashes();
      xPathLexer1.slashes();
      xPathLexer1.nextToken();
      xPathLexer0.plus();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.leftParen();
      xPathLexer0.and();
      xPathLexer1.getPreviousToken();
      xPathLexer1.dots();
      xPathLexer1.notEquals();
      xPathLexer0.slashes();
      XPathLexer xPathLexer3 = new XPathLexer("]ml)C~<6 M~");
      xPathLexer3.nextToken();
      xPathLexer1.not();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.at();
      xPathLexer4.dots();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.literal();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer("]ml)C~<6 M~");
      xPathLexer6.at();
      Token token0 = xPathLexer2.or();
      assertNull(token0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.8295544576501697
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k=GB)`){g|\"");
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.getXPath();
      Token token1 = xPathLexer0.star();
      assertEquals("=", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("GB", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(")`", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer1.not();
      assertEquals(23, token4.getTokenType());
      
      xPathLexer1.endPosition();
      xPathLexer1.and();
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals(")", token5.getTokenText());
      
      xPathLexer0.rightParen();
      String string0 = token0.toString();
      assertEquals("[ (2) (k)", string0);
      
      XPathLexer xPathLexer2 = new XPathLexer("TP2nWMfn*{");
      Token token6 = xPathLexer2.whitespace();
      assertEquals((-2), token6.getTokenType());
      
      Token token7 = xPathLexer2.nextToken();
      assertEquals("P2nWMfn", token7.getTokenText());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals(15, token8.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.hasMoreChars();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
      assertEquals("|", token9.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token10 = xPathLexer5.pipe();
      assertEquals(17, token10.getTokenType());
      
      xPathLexer4.identifier();
      Token token11 = xPathLexer4.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      Token token12 = xPathLexer4.star();
      assertEquals(20, token12.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer4.endPosition();
      Token token13 = xPathLexer4.notEquals();
      assertEquals(22, token13.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.8050106785299356
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";',!");
      xPathLexer0.or();
      Token token0 = xPathLexer0.minus();
      assertEquals(";", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(";',!");
      Token token3 = xPathLexer1.nextToken();
      token3.toString();
      String string0 = token3.toString();
      assertEquals("[ (-1) (;',!)", string0);
      
      Token token4 = xPathLexer1.notEquals();
      assertEquals(";'", token4.getTokenText());
      
      String string1 = token1.toString();
      assertEquals("[ (-1) ()", string1);
      
      xPathLexer0.identifier();
      Token token5 = xPathLexer1.notEquals();
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer0.slashes();
      assertEquals(11, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("]ml)C~<6 M~");
      Token token7 = xPathLexer2.leftParen();
      assertEquals("]", token7.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer1.nextToken();
      Token token8 = xPathLexer2.not();
      assertEquals("m", token8.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("[ (-1) (;',!)");
      XPathLexer xPathLexer4 = new XPathLexer("HU,V'_s+i'");
      xPathLexer0.nextToken();
      xPathLexer3.dots();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token9 = xPathLexer2.dots();
      assertEquals("l", token9.getTokenText());
      assertEquals(13, token9.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.relationalOperator();
      Token token10 = xPathLexer3.identifierOrOperatorName();
      assertEquals("", token10.getTokenText());
      assertEquals(15, token10.getTokenType());
      
      Token token11 = xPathLexer2.star();
      assertEquals(")", token11.getTokenText());
      assertEquals(20, token11.getTokenType());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.8237037171022021
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("avtu^Pd!1z");
      xPathLexer1.div();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.doubleColon();
      xPathLexer1.notEquals();
      Token token1 = xPathLexer1.equals();
      assertEquals(21, token1.getTokenType());
      
      xPathLexer1.notEquals();
      xPathLexer1.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer2.doubleColon();
      assertEquals("co", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals("!", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("avtu^Pd!1z");
      Token token4 = xPathLexer2.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("m.", token4.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token5 = xPathLexer3.nextToken();
      assertEquals("avtu", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token6 = xPathLexer0.dots();
      assertEquals(14, token6.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token7 = xPathLexer2.pipe();
      assertEquals("w", token7.getTokenText());
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer0.at();
      assertEquals("w", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer8.colon();
      Token token9 = xPathLexer0.colon();
      assertEquals("e", token9.getTokenText());
      
      Token token10 = xPathLexer4.rightBracket();
      assertEquals(4, token10.getTokenType());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.181355200078906
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k=GB)`){g|\"");
      xPathLexer0.relationalOperator();
      xPathLexer0.literal();
      xPathLexer0.nextToken();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("klKH$Ji");
      xPathLexer0.star();
      xPathLexer1.slashes();
      xPathLexer1.slashes();
      xPathLexer1.nextToken();
      xPathLexer0.plus();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.leftParen();
      xPathLexer0.and();
      xPathLexer1.getPreviousToken();
      xPathLexer1.dots();
      xPathLexer1.notEquals();
      xPathLexer0.slashes();
      xPathLexer1.or();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.notEquals();
      xPathLexer1.comma();
      xPathLexer3.pipe();
      Token token0 = xPathLexer1.nextToken();
      xPathLexer0.dots();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer3.literal();
      Token token1 = xPathLexer0.at();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.6627106643689815
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+%/ FhB?VWnO.l;");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.comma();
      assertEquals(32, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("^K:or");
      xPathLexer1.not();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token1 = xPathLexer3.slashes();
      assertEquals(11, token1.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("qrDmJe1;x");
      xPathLexer3.pipe();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token2 = xPathLexer2.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("+%/ FhB?VWnO.l;");
      XPathLexer xPathLexer7 = new XPathLexer("qrDmJe1;x");
      Token token3 = xPathLexer7.nextToken();
      assertEquals(15, token3.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("^'78|1V=P_iNm4");
      xPathLexer8.not();
      XPathLexer xPathLexer9 = new XPathLexer();
      xPathLexer7.nextToken();
      Token token4 = xPathLexer8.leftBracket();
      assertEquals(3, token4.getTokenType());
      assertEquals("'", token4.getTokenText());
      
      Token token5 = xPathLexer7.dots();
      assertEquals(";", token5.getTokenText());
      assertEquals(13, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer8.at();
      assertEquals("7", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
      
      XPathLexer xPathLexer10 = new XPathLexer("^'78|1V=P_iNm4");
      Token token7 = xPathLexer10.pipe();
      assertEquals(17, token7.getTokenType());
      assertEquals("^", token7.getTokenText());
      
      Token token8 = xPathLexer4.not();
      assertEquals(23, token8.getTokenType());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.2098841221040164
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-\"sOEOh %}2");
      Token token0 = xPathLexer0.nextToken();
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("\"", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.dots();
      Token token2 = xPathLexer1.star();
      assertEquals(20, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("xM;RnZD|Z");
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer2.not();
      assertEquals("x", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer1.number();
      assertEquals(30, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      assertEquals("O", token6.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (6) (-)", string0);
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(15, token7.getTokenType());
      
      xPathLexer1.comma();
      XPathLexer xPathLexer4 = new XPathLexer("xM;RnZD|Z");
      xPathLexer0.or();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token8 = xPathLexer6.pipe();
      assertEquals(17, token8.getTokenType());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals("%}2", token9.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = new XPathLexer(".\"0EHgXJ7");
      xPathLexer8.nextToken();
      Token token10 = xPathLexer8.dots();
      assertEquals(".", token10.getTokenText());
      assertEquals(14, token10.getTokenType());
      
      Token token11 = xPathLexer7.comma();
      assertEquals(32, token11.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      xPathLexer7.relationalOperator();
      Token token12 = xPathLexer6.at();
      assertEquals(16, token12.getTokenType());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.7386516636202016
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(@*vGC)}),");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.dollar();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.not();
      xPathLexer0.number();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer();
      String string0 = token0.toString();
      assertEquals("[ (26) (4)", string0);
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (26) (4)");
      Token token2 = xPathLexer2.nextToken();
      assertEquals("[", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      String string1 = token1.toString();
      assertEquals("[ (23) (f)", string1);
      
      Token token3 = xPathLexer2.nextToken();
      assertEquals("(", token3.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("[ (26) (4)");
      xPathLexer3.relationalOperator();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer("[ (26) (4)");
      Token token4 = xPathLexer2.nextToken();
      assertEquals(30, token4.getTokenType());
      
      xPathLexer1.not();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer0.nextToken();
      Token token5 = xPathLexer4.dots();
      assertEquals("[", token5.getTokenText());
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer4.at();
      assertEquals(16, token6.getTokenType());
      assertEquals(" ", token6.getTokenText());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals("*", token7.getTokenText());
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer0.doubleColon();
      assertEquals(19, token8.getTokenType());
      assertEquals("vG", token8.getTokenText());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.9837995036971332
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.div();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("~ojR6Ya~A");
      Token token2 = xPathLexer1.notEquals();
      assertEquals("~o", token2.getTokenText());
      
      Token token3 = xPathLexer1.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      assertEquals("we", token5.getTokenText());
      
      Token token6 = xPathLexer1.colon();
      String string0 = token4.toString();
      assertEquals("[ (22) (m.)", string0);
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("rken.saxpath.XPathLexer", token7.getTokenText());
      
      xPathLexer1.setPreviousToken(token6);
      assertEquals("R", token6.getTokenText());
      assertEquals(18, token6.getTokenType());
      
      Token token8 = xPathLexer0.literal();
      assertNull(token8);
      
      Token token9 = xPathLexer0.pipe();
      assertEquals(17, token9.getTokenType());
      
      Token token10 = xPathLexer1.nextToken();
      assertEquals(30, token10.getTokenType());
      
      Token token11 = xPathLexer0.not();
      assertEquals(23, token11.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.div();
      Token token12 = xPathLexer2.star();
      assertEquals(20, token12.getTokenType());
      
      Token token13 = xPathLexer1.dollar();
      assertEquals(26, token13.getTokenType());
      assertEquals("Y", token13.getTokenText());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.517346059267509
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("equ*XT\"On8D?dDvV[");
      xPathLexer0.dots();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("Hr15C\"](-Q3x}a\"k");
      xPathLexer1.nextToken();
      xPathLexer1.plus();
      XPathLexer xPathLexer2 = new XPathLexer("Hr15C\"](-Q3x}a\"k");
      XPathLexer xPathLexer3 = new XPathLexer("equ*XT\"On8D?dDvV[");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.plus();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.082944258435778
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"sOEOh %}2");
      Token token0 = xPathLexer0.doubleColon();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.equals();
      token1.toString();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer2 = new XPathLexer("p{:Xn.l+1:<W!_Rr");
      xPathLexer0.slashes();
      XPathLexer xPathLexer3 = new XPathLexer("h2Hi(|");
      xPathLexer3.dots();
      xPathLexer2.and();
      XPathLexer xPathLexer4 = new XPathLexer("");
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer5.getPreviousToken();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer2.nextToken();
      xPathLexer5.dollar();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer6.comma();
      xPathLexer5.pipe();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer4.not();
      xPathLexer5.star();
      XPathLexer xPathLexer8 = new XPathLexer("[ (19) (\"s)");
      xPathLexer8.relationalOperator();
      Token token2 = xPathLexer5.literal();
      assertNull(token2);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.1135021849722984
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"sOEOh %}2");
      Token token0 = xPathLexer0.doubleColon();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.equals();
      token1.toString();
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.identifierOrOperatorName();
      token0.toString();
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.identifier();
      token0.toString();
      token0.toString();
      token1.toString();
      token1.toString();
      xPathLexer0.notEquals();
      token0.toString();
      xPathLexer0.whitespace();
      Token token3 = xPathLexer0.nextToken();
      token3.toString();
      token3.toString();
      token3.toString();
      xPathLexer0.setPreviousToken(token3);
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      xPathLexer0.mod();
      Token token4 = xPathLexer0.literal();
      assertNull(token4);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";',!");
      xPathLexer0.or();
      xPathLexer0.consume((-1740));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.965421887583483
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k=GB)`){g|\"");
      xPathLexer0.relationalOperator();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("Tbl$E{s");
      Token token1 = xPathLexer0.slashes();
      assertEquals("B", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer1.not();
      xPathLexer0.setPreviousToken(token2);
      assertEquals(23, token2.getTokenType());
      assertEquals("T", token2.getTokenText());
      
      Token token3 = xPathLexer1.number();
      assertEquals(30, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token4 = xPathLexer1.nextToken();
      assertEquals("bl", token4.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (19) (=G)", string0);
      
      Token token5 = xPathLexer1.whitespace();
      assertEquals("", token5.getTokenText());
      assertEquals((-2), token5.getTokenType());
      
      Token token6 = xPathLexer0.rightParen();
      String string1 = token6.toString();
      assertEquals("[ (2) ())", string1);
      
      xPathLexer2.nextToken();
      xPathLexer1.setPreviousToken(token6);
      Token token7 = xPathLexer0.comma();
      assertEquals("`", token7.getTokenText());
      assertEquals(32, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token8 = xPathLexer3.nextToken();
      assertEquals(15, token8.getTokenType());
      assertEquals("com.werken.saxpath.XPathLexer", token8.getTokenText());
      
      Token token9 = xPathLexer1.at();
      assertEquals(16, token9.getTokenType());
      assertEquals("E", token9.getTokenText());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.753505879580369
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"sOEOh %}2");
      Token token0 = xPathLexer0.doubleColon();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (19) (\"s)", string0);
      
      Token token1 = xPathLexer0.pipe();
      String string1 = token1.toString();
      assertEquals("[ (17) (O)", string1);
      
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.identifier();
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals(" %", token3.getTokenText());
      
      String string2 = token2.toString();
      assertEquals("[ (15) (EOh)", string2);
      
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token1);
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals("}", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer1.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer0.at();
      assertEquals("2", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.4669063602356585
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k=GB)`){g|\"");
      XPathLexer xPathLexer1 = new XPathLexer("A]M=! ~K>");
      Token token0 = xPathLexer0.dollar();
      assertEquals("k", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      String string0 = token1.toString();
      assertEquals("[ (15) (A)", string0);
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals("=G", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      xPathLexer1.setPreviousToken(token3);
      Token token4 = xPathLexer1.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals("]", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("k=GB)`){g|\"");
      xPathLexer2.nextToken();
      Token token5 = xPathLexer0.at();
      assertEquals(")", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer2.slashes();
      assertEquals(11, token6.getTokenType());
      assertEquals("=", token6.getTokenText());
      
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(19, token7.getTokenType());
      assertEquals("`)", token7.getTokenText());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.681966091912956
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"sOEOh %}2");
      Token token0 = xPathLexer0.plus();
      assertEquals("\"", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("C");
      xPathLexer1.div();
      Token token1 = xPathLexer1.comma();
      assertEquals("C", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("C");
      Token token2 = xPathLexer2.identifier();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer3.star();
      assertEquals(20, token3.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token4 = xPathLexer4.notEquals();
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer2.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      xPathLexer3.setPreviousToken(token2);
      assertEquals("C", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token6 = xPathLexer1.comma();
      assertEquals(32, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("0:3cWIfo");
      Token token7 = xPathLexer5.nextToken();
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      assertEquals("s", token8.getTokenText());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.1227525064025414
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.dollar();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.nextToken();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (15) (f)", string0);
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      String string1 = token0.toString();
      assertEquals("[ (26) (4)", string1);
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("y@*vGC)}),", token3.getTokenText());
      
      xPathLexer0.setPreviousToken((Token) null);
      XPathLexer xPathLexer1 = new XPathLexer("gQ*F%gmp]qWc!vB");
      Token token4 = xPathLexer1.literal();
      assertEquals("Q*F%", token4.getTokenText());
      assertEquals(27, token4.getTokenType());
      assertNotNull(token4);
      
      Token token5 = xPathLexer0.leftParen();
      String string2 = token5.toString();
      assertEquals("[ (1) (y)", string2);
      
      xPathLexer1.setPreviousToken(token5);
      xPathLexer1.operatorName();
      xPathLexer1.relationalOperator();
      Token token6 = xPathLexer0.nextToken();
      assertEquals(16, token6.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.nextToken();
      assertEquals("*", token7.getTokenText());
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
      
      xPathLexer0.nextToken();
      Token token9 = xPathLexer1.dots();
      assertEquals(13, token9.getTokenType());
      assertEquals("m", token9.getTokenText());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.1678804112181407
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("avtu^Pd!1z");
      xPathLexer1.div();
      xPathLexer0.number();
      xPathLexer0.doubleColon();
      xPathLexer1.notEquals();
      xPathLexer1.equals();
      xPathLexer1.notEquals();
      xPathLexer1.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer2.doubleColon();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("avtu^Pd!1z");
      xPathLexer2.notEquals();
      xPathLexer3.operatorName();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer2.dots();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.not();
      xPathLexer4.operatorName();
      xPathLexer2.pipe();
      xPathLexer4.slashes();
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer4.pipe();
      xPathLexer3.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer5.literal();
      xPathLexer7.relationalOperator();
      xPathLexer3.at();
      Token token1 = xPathLexer3.or();
      assertNull(token1);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.681272888020811
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      Token token0 = xPathLexer0.slashes();
      String string0 = token0.toString();
      assertEquals("[ (11) (4)", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.relationalOperator();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("(", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer1.dollar();
      assertEquals(26, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.relationalOperator();
      Token token4 = xPathLexer1.at();
      assertEquals(16, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token5 = xPathLexer4.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer2.leftParen();
      Token token6 = xPathLexer5.notEquals();
      assertEquals(22, token6.getTokenType());
      
      xPathLexer4.equals();
      Token token7 = xPathLexer4.equals();
      assertEquals(21, token7.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.5340942351437832
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      String string0 = "com.werken.saxpath.XPathLexer";
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.dots();
      xPathLexer0.star();
      String string1 = null;
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.7333193893439665
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-\"sOEOh %}2");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("-", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("\"", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.dots();
      Token token2 = xPathLexer1.star();
      assertEquals(20, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token3 = xPathLexer0.slashes();
      assertEquals("s", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      xPathLexer2.not();
      Token token4 = xPathLexer1.number();
      assertEquals(30, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("C6~GCt|5Bnnm`r$;V");
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      assertEquals("O", token5.getTokenText());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("w=*%(3");
      Token token6 = xPathLexer4.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      Token token7 = xPathLexer5.not();
      assertEquals("w", token7.getTokenText());
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer5.nextToken();
      assertEquals("=", token8.getTokenText());
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer4.dots();
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer4.pipe();
      assertEquals(17, token10.getTokenType());
      
      Token token11 = xPathLexer3.at();
      assertEquals(16, token11.getTokenType());
      assertEquals("C", token11.getTokenText());
      
      Token token12 = xPathLexer0.colon();
      assertEquals("E", token12.getTokenText());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.5387257648096386
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";',!");
      xPathLexer0.or();
      Token token0 = xPathLexer0.minus();
      assertEquals(";", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("", token1.getTokenText());
      assertEquals((-1), token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token2 = xPathLexer1.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      xPathLexer0.dots();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token4 = xPathLexer3.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("olk_/y");
      Token token5 = xPathLexer4.not();
      assertEquals(23, token5.getTokenType());
      assertEquals("o", token5.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer3.nextToken();
      Token token6 = xPathLexer4.dots();
      assertEquals("l", token6.getTokenText());
      assertEquals(13, token6.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer2.relationalOperator();
      xPathLexer2.or();
      Token token7 = xPathLexer6.identifier();
      assertEquals(15, token7.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.6636007100425394
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k=GB)`){g|\"");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("k=", token0.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.and();
      Token token1 = xPathLexer0.comma();
      assertEquals("G", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      assertEquals("B", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      assertEquals(")", token3.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.setXPath("!o;N:");
      Token token4 = xPathLexer3.dollar();
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer3.notEquals();
      assertEquals(22, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token6 = xPathLexer4.slashes();
      assertEquals(11, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("|YJ9..I|zy/)\":=T");
      xPathLexer0.mod();
      Token token7 = xPathLexer5.nextToken();
      assertEquals(17, token7.getTokenType());
      assertEquals("|", token7.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token8 = xPathLexer6.not();
      assertEquals(23, token8.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("|YJ9..I|zy/)\":=T");
      XPathLexer xPathLexer8 = new XPathLexer("|YJ9..I|zy/)\":=T");
      xPathLexer8.relationalOperator();
      Token token9 = xPathLexer0.nextToken();
      assertEquals("`){g|\"", token9.getTokenText());
      
      Token token10 = xPathLexer8.at();
      assertEquals(16, token10.getTokenType());
      assertEquals("|", token10.getTokenText());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.125936101717718
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.nextToken();
      xPathLexer0.plus();
      XPathLexer xPathLexer2 = new XPathLexer("1Uq");
      XPathLexer xPathLexer3 = new XPathLexer("1Uq");
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token3 = xPathLexer4.plus();
      assertEquals(5, token3.getTokenType());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("L!wz^=");
      Token token4 = xPathLexer2.nextToken();
      assertEquals("1", token4.getTokenText());
      assertEquals(30, token4.getTokenType());
      
      xPathLexer2.or();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token5 = xPathLexer5.pipe();
      assertEquals("L", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer6.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("*9Iw\"vb9t~i`k\"Te]");
      Token token7 = xPathLexer7.dots();
      assertEquals(13, token7.getTokenType());
      assertEquals("*", token7.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token8 = xPathLexer6.minus();
      assertEquals(6, token8.getTokenType());
      
      Token token9 = xPathLexer4.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer4.colon();
      assertEquals(18, token10.getTokenType());
      
      Token token11 = xPathLexer7.rightBracket();
      assertEquals("9", token11.getTokenText());
      assertEquals(4, token11.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.9323430334012222
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.div();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("co", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      xPathLexer0.notEquals();
      Token token2 = xPathLexer0.equals();
      assertEquals("w", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals("er", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      Token token4 = xPathLexer0.nextToken();
      assertEquals("ken.saxpath.XPathLexer", token4.getTokenText());
      
      xPathLexer0.plus();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer3 = new XPathLexer("yJXN]g{e=$],q|");
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token5 = xPathLexer4.plus();
      assertEquals(5, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token6 = xPathLexer5.nextToken();
      assertEquals(15, token6.getTokenType());
      
      xPathLexer4.not();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer5.nextToken();
      Token token7 = xPathLexer5.dots();
      assertEquals(13, token7.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer3.at();
      assertEquals("y", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer2.star();
      assertEquals("c", token9.getTokenText());
      assertEquals(20, token9.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.086267752524121
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      xPathLexer0.relationalOperator();
      xPathLexer0.literal();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.colon();
      XPathLexer xPathLexer2 = new XPathLexer("4f(y@*vGC)}),");
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      xPathLexer0.slashes();
      XPathLexer xPathLexer3 = new XPathLexer("4f(y@*vGC)}),");
      xPathLexer3.nextToken();
      Token token2 = xPathLexer3.plus();
      assertEquals("f", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer3.leftParen();
      assertEquals(1, token3.getTokenType());
      
      xPathLexer3.and();
      Token token4 = xPathLexer2.nextToken();
      assertEquals(30, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer2.and();
      xPathLexer2.identifier();
      xPathLexer3.dollar();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("7k=.I.5vL");
      Token token5 = xPathLexer5.comma();
      assertEquals(32, token5.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("aOoVQH[l");
      xPathLexer4.or();
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token6 = xPathLexer4.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer7.nextToken();
      assertEquals(15, token7.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token8 = xPathLexer9.dots();
      assertEquals(13, token8.getTokenType());
      
      XPathLexer xPathLexer10 = new XPathLexer();
      XPathLexer xPathLexer11 = new XPathLexer();
      XPathLexer xPathLexer12 = new XPathLexer();
      Token token9 = xPathLexer12.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer1.colon();
      assertEquals(18, token10.getTokenType());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.7336202936405631
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      Token token0 = xPathLexer0.slashes();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (11) (4)", string0);
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("f", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (11) (4)");
      Token token2 = xPathLexer1.number();
      assertEquals(30, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer1.nextToken();
      assertEquals("[", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("(", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("FVYs{|yAuzV%(Wo8");
      Token token5 = xPathLexer1.notEquals();
      assertEquals(" (", token5.getTokenText());
      assertEquals(22, token5.getTokenType());
      
      xPathLexer3.slashes();
      XPathLexer xPathLexer4 = new XPathLexer("]ml)C~<6 M~");
      Token token6 = xPathLexer3.leftParen();
      assertEquals("V", token6.getTokenText());
      
      xPathLexer1.relationalOperator();
      Token token7 = xPathLexer4.nextToken();
      assertEquals("]", token7.getTokenText());
      assertEquals(4, token7.getTokenType());
      
      Token token8 = xPathLexer4.not();
      assertEquals(23, token8.getTokenType());
      assertEquals("m", token8.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token9 = xPathLexer5.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      xPathLexer3.dots();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token10 = xPathLexer5.dots();
      assertEquals(13, token10.getTokenType());
      
      xPathLexer4.relationalOperator();
      Token token11 = xPathLexer0.at();
      assertEquals(16, token11.getTokenType());
      assertEquals("y", token11.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer("[ (11) (4)");
      Token token12 = xPathLexer8.star();
      assertEquals(20, token12.getTokenType());
      assertEquals("[", token12.getTokenText());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.103988274677148
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.div();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("o", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("~ojR6Ya~A");
      xPathLexer0.operatorName();
      Token token3 = xPathLexer1.equals();
      assertEquals("~", token3.getTokenText());
      
      Token token4 = xPathLexer0.notEquals();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      assertEquals("we", token5.getTokenText());
      
      Token token6 = xPathLexer1.colon();
      String string0 = token4.toString();
      assertEquals("[ (22) (m.)", string0);
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("rken.saxpath.XPathLexer", token7.getTokenText());
      
      xPathLexer1.setPreviousToken(token6);
      assertEquals("o", token6.getTokenText());
      assertEquals(18, token6.getTokenType());
      
      Token token8 = xPathLexer0.literal();
      assertNull(token8);
      
      Token token9 = xPathLexer0.pipe();
      assertEquals(17, token9.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token10 = xPathLexer2.not();
      assertEquals(23, token10.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.div();
      XPathLexer xPathLexer4 = new XPathLexer("~ojR6Ya~A");
      Token token11 = xPathLexer4.star();
      assertEquals("~", token11.getTokenText());
      assertEquals(20, token11.getTokenType());
      
      Token token12 = xPathLexer3.dollar();
      assertEquals(26, token12.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.747411530355729
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      Token token0 = xPathLexer0.slashes();
      assertEquals("4", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      token1.toString();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (19) (f()", string0);
      
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.identifier();
      token2.toString();
      token2.toString();
      String string1 = token2.toString();
      assertEquals("[ (15) ()", string1);
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("@", token3.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("}", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(2, token5.getTokenType());
      assertEquals(")", token5.getTokenText());
      
      Token token6 = xPathLexer0.star();
      assertEquals(",", token6.getTokenText());
      assertEquals(20, token6.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.8342030558763864
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z+!ylRlTLM}");
      xPathLexer0.mod();
      xPathLexer0.rightParen();
      xPathLexer0.getXPath();
      xPathLexer0.star();
      xPathLexer0.doubleColon();
      xPathLexer0.pipe();
      xPathLexer0.and();
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.colon();
      xPathLexer0.comma();
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.not();
      xPathLexer1.mod();
      xPathLexer1.isIdentifierStartChar('`');
      xPathLexer0.nextToken();
      xPathLexer0.hasMoreChars();
      xPathLexer0.consume((-1950));
      xPathLexer1.operatorName();
      xPathLexer0.rightParen();
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.177720843141472
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k=GB)`){g|\"");
      xPathLexer0.relationalOperator();
      xPathLexer0.literal();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.colon();
      assertEquals(18, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("7k=.I.5vL");
      Token token2 = xPathLexer2.star();
      assertEquals("7", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      xPathLexer0.slashes();
      XPathLexer xPathLexer3 = new XPathLexer("7k=.I.5vL");
      xPathLexer3.nextToken();
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer2.leftParen();
      assertEquals("k", token4.getTokenText());
      
      xPathLexer0.and();
      xPathLexer3.getPreviousToken();
      xPathLexer0.dots();
      Token token5 = xPathLexer1.notEquals();
      assertEquals(22, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("~");
      Token token6 = xPathLexer4.slashes();
      assertEquals(11, token6.getTokenType());
      assertEquals("~", token6.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("k=GB)`){g|\"");
      XPathLexer xPathLexer6 = new XPathLexer("~");
      xPathLexer6.relationalOperator();
      XPathLexer xPathLexer7 = new XPathLexer("3Lao}");
      Token token7 = xPathLexer7.nextToken();
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer7.nextToken();
      Token token9 = xPathLexer4.dots();
      assertEquals(13, token9.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      xPathLexer4.relationalOperator();
      Token token10 = xPathLexer2.at();
      assertEquals(16, token10.getTokenType());
      assertEquals("=", token10.getTokenText());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.0492742967855677
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer1.doubleColon();
      XPathLexer xPathLexer2 = new XPathLexer("a0Ea1]b,u");
      xPathLexer2.number();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer2.mod();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer3.number();
      xPathLexer2.nextToken();
      xPathLexer3.comma();
      token0.toString();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.operatorName();
      xPathLexer2.leftParen();
      xPathLexer3.nextToken();
      xPathLexer4.rightBracket();
      Token token1 = xPathLexer2.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.5949149361484145
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&[)bO0%a)SQ(");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("&", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      Token token2 = xPathLexer0.comma();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("bO", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer0.number();
      xPathLexer0.setPreviousToken(token4);
      assertEquals(30, token4.getTokenType());
      
      xPathLexer0.nextToken();
      String string0 = token1.toString();
      assertEquals("[ (13) ([)", string0);
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("%a)SQ(", token5.getTokenText());
      
      xPathLexer0.setPreviousToken(token2);
      assertEquals(")", token2.getTokenText());
      
      xPathLexer0.literal();
      XPathLexer xPathLexer1 = new XPathLexer("[ (13) ([)");
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.8410211513121095
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifier();
      xPathLexer0.doubleColon();
      xPathLexer0.not();
      xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifier();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.colon();
      xPathLexer0.not();
      xPathLexer0.dollar();
      xPathLexer0.colon();
      xPathLexer0.and();
      xPathLexer0.comma();
      xPathLexer0.at();
      char char0 = '!';
      String string0 = "";
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.isIdentifierChar('!');
      xPathLexer0.consume((-3449));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.7337567947298163
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"sOEOh %}2");
      Token token0 = xPathLexer0.doubleColon();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.equals();
      String string0 = token1.toString();
      assertEquals("[ (21) (O)", string0);
      
      xPathLexer0.setPreviousToken(token1);
      token0.toString();
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token1);
      Token token3 = xPathLexer0.identifier();
      token3.toString();
      token0.toString();
      String string1 = token0.toString();
      assertEquals("[ (19) (\"s)", string1);
      
      String string2 = token2.toString();
      assertEquals("[ (15) (EOh)", string2);
      
      token3.toString();
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(" ", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("%}2", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token6);
      Token token7 = xPathLexer0.comma();
      assertEquals("%", token7.getTokenText());
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer0.pipe();
      assertEquals(17, token8.getTokenType());
      assertEquals("}", token8.getTokenText());
      
      Token token9 = xPathLexer0.at();
      assertEquals("2", token9.getTokenText());
      assertEquals(16, token9.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.144557850686464
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.div();
      Token token0 = xPathLexer0.dots();
      assertEquals("c", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.minus();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("~ojR6Ya~A");
      xPathLexer1.notEquals();
      Token token2 = xPathLexer1.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("j", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals("we", token4.getTokenText());
      assertEquals(19, token4.getTokenType());
      
      token3.toString();
      Token token5 = xPathLexer1.colon();
      String string0 = token3.toString();
      assertEquals("[ (22) (m.)", string0);
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("rken.saxpath.XPathLexer", token6.getTokenText());
      
      xPathLexer1.setPreviousToken(token5);
      Token token7 = xPathLexer0.literal();
      assertNull(token7);
      
      Token token8 = xPathLexer1.minus();
      assertEquals("6", token8.getTokenText());
      
      Token token9 = xPathLexer0.pipe();
      assertEquals(17, token9.getTokenType());
      
      Token token10 = xPathLexer1.nextToken();
      assertEquals("Ya", token10.getTokenText());
      assertEquals(15, token10.getTokenType());
      
      Token token11 = xPathLexer0.not();
      assertEquals(23, token11.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token12 = xPathLexer2.minus();
      assertEquals(6, token12.getTokenType());
      
      xPathLexer2.div();
      Token token13 = xPathLexer2.star();
      assertEquals(20, token13.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.0561774276369764
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a6}!Vx:RD`1x <Fko*5");
      xPathLexer0.leftBracket();
      xPathLexer0.div();
      xPathLexer0.or();
      xPathLexer0.at();
      xPathLexer0.consume((-910));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.9358086749176813
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("equ*XT\"On8D?dDvV[");
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("*X", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      Token token1 = xPathLexer1.slashes();
      assertEquals("c", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer1.not();
      xPathLexer0.number();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token4 = xPathLexer1.dots();
      assertEquals("m.", token4.getTokenText());
      assertEquals(14, token4.getTokenType());
      
      String string0 = token2.toString();
      assertEquals("[ (23) (o)", string0);
      
      xPathLexer0.nextToken();
      Token token5 = xPathLexer1.comma();
      assertEquals("w", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.or();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.Token");
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      assertEquals("e", token6.getTokenText());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("rken.saxpath.Token", token7.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token8 = xPathLexer7.dots();
      assertEquals(13, token8.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      XPathLexer xPathLexer9 = new XPathLexer();
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token9 = xPathLexer2.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer8.colon();
      assertEquals(18, token10.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.8302493187424063
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"sOEOh %}2");
      Token token0 = xPathLexer0.rightParen();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.nextToken();
      String string0 = token0.toString();
      assertEquals("[ (2) (\")", string0);
      
      Token token2 = xPathLexer0.star();
      String string1 = token2.toString();
      assertEquals("[ (20) (s)", string1);
      
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token1);
      assertEquals("sOEOh %}2", token1.getTokenText());
      
      Token token3 = xPathLexer0.literal();
      assertNotNull(token3);
      assertEquals(27, token3.getTokenType());
      assertEquals("E", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("h", token4.getTokenText());
      
      Token token5 = xPathLexer0.pipe();
      assertEquals(" ", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer2.at();
      assertEquals(16, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("p");
      Token token7 = xPathLexer2.not();
      assertEquals(23, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token8 = xPathLexer3.star();
      assertEquals(20, token8.getTokenType());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.123481160803532
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"sOEOh %}2");
      Token token0 = xPathLexer0.doubleColon();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.equals();
      token1.toString();
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.identifierOrOperatorName();
      token0.toString();
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.identifier();
      token0.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      xPathLexer0.notEquals();
      token0.toString();
      xPathLexer0.whitespace();
      Token token3 = xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer1.setPreviousToken(token3);
      XPathLexer xPathLexer2 = new XPathLexer("aHW\"s%.Bb");
      xPathLexer2.literal();
      xPathLexer1.operatorName();
      xPathLexer1.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.or();
      Token token4 = xPathLexer1.relationalOperator();
      assertNull(token4);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.637816061035879
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.identifier();
      xPathLexer0.doubleColon();
      xPathLexer0.not();
      xPathLexer0.and();
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.and();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.pipe();
      xPathLexer0.and();
      xPathLexer1.at();
      xPathLexer1.isIdentifierChar('_');
      xPathLexer0.consume((-1387));
      xPathLexer1.rightParen();
      xPathLexer0.notEquals();
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.1219104975603145
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.div();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("~ojR6Ya~A");
      Token token3 = xPathLexer1.notEquals();
      assertEquals("~o", token3.getTokenText());
      
      Token token4 = xPathLexer1.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals("j", token4.getTokenText());
      
      Token token5 = xPathLexer0.notEquals();
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      assertEquals("we", token6.getTokenText());
      
      token5.toString();
      Token token7 = xPathLexer0.nextToken();
      assertEquals("rken.saxpath.XPathLexer", token7.getTokenText());
      
      xPathLexer1.setPreviousToken(token5);
      Token token8 = xPathLexer0.literal();
      assertNull(token8);
      
      Token token9 = xPathLexer1.nextToken();
      assertEquals("R6Ya", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
      
      Token token10 = xPathLexer0.not();
      assertEquals(23, token10.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.div();
      Token token11 = xPathLexer1.star();
      assertEquals(20, token11.getTokenType());
      
      Token token12 = xPathLexer2.dollar();
      assertEquals(26, token12.getTokenType());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.0569487584195496
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.div();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.and();
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("erken.saxpath.XPathLexer", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("9230+'D8`0`b,jr|?");
      Token token8 = xPathLexer1.leftParen();
      assertEquals("9", token8.getTokenText());
      
      xPathLexer1.setXPath("p0/J)gu9$Dh}");
      xPathLexer1.endPosition();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      Token token9 = xPathLexer2.colon();
      assertEquals("c", token9.getTokenText());
      assertEquals(18, token9.getTokenType());
      
      xPathLexer2.or();
      Token token10 = xPathLexer1.whitespace();
      assertEquals((-2), token10.getTokenType());
      
      xPathLexer1.and();
      xPathLexer0.endPosition();
      Token token11 = xPathLexer1.slashes();
      assertEquals(12, token11.getTokenType());
      assertEquals("0/", token11.getTokenText());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.7836591160302824
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      xPathLexer0.consume();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.doubleColon();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer("[ (19) ((y)");
      xPathLexer1.and();
      xPathLexer1.dollar();
      xPathLexer1.pipe();
      xPathLexer1.and();
      xPathLexer0.at();
      xPathLexer0.isIdentifierChar('S');
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.consume((-3449));
      XPathLexer xPathLexer3 = new XPathLexer("[ (19) ((y)");
      xPathLexer3.rightParen();
      xPathLexer3.notEquals();
      xPathLexer3.or();
      xPathLexer1.slashes();
      xPathLexer0.rightParen();
      xPathLexer0.literal();
      xPathLexer1.star();
      xPathLexer1.slashes();
      // Undeclared exception!
      try { 
        xPathLexer2.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.6476396782149227
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"sOEOh %}2");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("\"", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.at();
      Token token1 = xPathLexer0.slashes();
      assertEquals("O", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals("E", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer0.whitespace();
      String string0 = token3.toString();
      assertEquals("[ (-2) ()", string0);
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token5 = xPathLexer0.at();
      assertEquals("%", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token6 = xPathLexer2.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token7 = xPathLexer3.leftParen();
      assertEquals(1, token7.getTokenType());
      
      Token token8 = xPathLexer3.notEquals();
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer0.equals();
      assertEquals("}", token9.getTokenText());
      
      Token token10 = xPathLexer2.equals();
      assertEquals(21, token10.getTokenType());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.570195235690666
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";',!");
      xPathLexer0.or();
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals("'", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(";',!");
      Token token2 = xPathLexer1.nextToken();
      String string0 = token2.toString();
      assertEquals("[ (-1) (;',!)", string0);
      
      Token token3 = xPathLexer1.notEquals();
      assertEquals(";'", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      assertEquals("!", token5.getTokenText());
      
      String string1 = token4.toString();
      assertEquals("[ (32) (,)", string1);
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.nextToken();
      Token token6 = xPathLexer2.number();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      xPathLexer2.comma();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer3.pipe();
      assertEquals(17, token8.getTokenType());
      
      xPathLexer1.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token9 = xPathLexer1.star();
      assertEquals(20, token9.getTokenType());
      assertEquals("!", token9.getTokenText());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.8105619219299403
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"sOEOh %}2");
      Token token0 = xPathLexer0.dots();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.nextToken();
      token1.toString();
      xPathLexer0.whitespace();
      token1.toString();
      xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.literal();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-335));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.5822007274841887
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"sOEOh %}2");
      Token token0 = xPathLexer0.plus();
      assertEquals("\"", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("sO", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      xPathLexer1.dots();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("\"sOEOh %}2");
      Token token2 = xPathLexer1.plus();
      assertEquals(5, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("EOh", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(" ", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token5 = xPathLexer4.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer4.dots();
      assertEquals(13, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token7 = xPathLexer6.at();
      assertEquals(16, token7.getTokenType());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.679041682015884
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(@*vGC)}),");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.dollar();
      token0.toString();
      token0.toString();
      xPathLexer0.at();
      xPathLexer0.slashes();
      xPathLexer0.not();
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.endPosition();
      xPathLexer1.relationalOperator();
      xPathLexer1.leftParen();
      token0.toString();
      xPathLexer1.leftParen();
      xPathLexer0.div();
      xPathLexer0.mod();
      xPathLexer1.getPreviousToken();
      xPathLexer0.at();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer1.endPosition();
      xPathLexer1.minus();
      xPathLexer1.and();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.4593439611789951
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";',!");
      xPathLexer0.or();
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals(";", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(";',!");
      Token token3 = xPathLexer1.nextToken();
      token3.toString();
      String string0 = token3.toString();
      assertEquals("[ (-1) (;',!)", string0);
      
      Token token4 = xPathLexer1.notEquals();
      assertEquals(";'", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token1);
      assertEquals("", token1.getTokenText());
      
      Token token5 = xPathLexer1.comma();
      assertEquals(",", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("7+-\u0002VR");
      Token token6 = xPathLexer2.equals();
      assertEquals("7", token6.getTokenText());
      assertEquals(21, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals(23, token7.getTokenType());
      assertEquals("!", token7.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token8 = xPathLexer2.star();
      assertEquals(20, token8.getTokenType());
      
      Token token9 = xPathLexer2.rightBracket();
      assertEquals(4, token9.getTokenType());
      assertEquals("-", token9.getTokenText());
      
      Token token10 = xPathLexer4.comma();
      assertEquals(32, token10.getTokenType());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.6837782050660763
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.notEquals();
      xPathLexer0.relationalOperator();
      String string0 = token0.toString();
      assertEquals("[ (2) ())", string0);
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("R");
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token3 = xPathLexer1.nextToken();
      assertEquals("R", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer1.not();
      assertEquals(23, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer2.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer2.dots();
      assertEquals(13, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.relationalOperator();
      Token token7 = xPathLexer3.at();
      assertEquals(16, token7.getTokenType());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.0427769647134193
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.number();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("co", token1.getTokenText());
      
      xPathLexer0.notEquals();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("er", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals("k", token4.getTokenText());
      assertEquals(1, token4.getTokenType());
      
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals("e", token5.getTokenText());
      
      xPathLexer0.operatorName();
      String string0 = token0.toString();
      assertEquals("[ (30) ()", string0);
      
      Token token6 = xPathLexer0.nextToken();
      String string1 = token6.toString();
      assertEquals("[ (15) (n.saxpath.XPathLexer)", string1);
      
      xPathLexer0.setPreviousToken(token6);
      Token token7 = xPathLexer0.literal();
      assertNull(token7);
      
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token8 = xPathLexer1.rightBracket();
      assertEquals(4, token8.getTokenType());
      
      xPathLexer1.slashes();
      Token token9 = xPathLexer1.plus();
      assertEquals(5, token9.getTokenType());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.2915055844627896
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      xPathLexer0.relationalOperator();
      xPathLexer0.literal();
      XPathLexer xPathLexer1 = new XPathLexer("4f(y@*vGC)}),");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.at();
      xPathLexer1.colon();
      XPathLexer xPathLexer3 = new XPathLexer("4f(y@*vGC)}),");
      xPathLexer2.star();
      xPathLexer0.slashes();
      XPathLexer xPathLexer4 = new XPathLexer("4f(y@*vGC)}),");
      xPathLexer4.nextToken();
      xPathLexer3.plus();
      xPathLexer3.leftParen();
      xPathLexer1.and();
      xPathLexer4.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer("4f(y@*vGC)}),");
      xPathLexer5.and();
      xPathLexer4.dots();
      xPathLexer3.dots();
      xPathLexer5.slashes();
      XPathLexer xPathLexer6 = new XPathLexer("rPgZj_MD'e#z9`< =");
      xPathLexer6.nextToken();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer3.not();
      XPathLexer xPathLexer8 = new XPathLexer("");
      xPathLexer0.doubleColon();
      xPathLexer0.minus();
      XPathLexer xPathLexer9 = new XPathLexer();
      xPathLexer1.star();
      XPathLexer xPathLexer10 = new XPathLexer();
      xPathLexer0.star();
      xPathLexer1.at();
      xPathLexer6.colon();
      Token token0 = xPathLexer3.and();
      assertNull(token0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.716777279368308
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      Token token0 = xPathLexer0.slashes();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (11) (4)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifier();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("(", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      String string1 = token3.toString();
      assertEquals("[ (15) (y)", string1);
      
      xPathLexer0.setPreviousToken(token3);
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals("@", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(20, token5.getTokenType());
      assertEquals("*", token5.getTokenText());
      
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      assertEquals("v", token6.getTokenText());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.9551876106114512
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("4f(y@*vGC)}),");
      XPathLexer xPathLexer2 = new XPathLexer("O5Lg-YY@q");
      Token token1 = xPathLexer2.slashes();
      xPathLexer0.not();
      Token token2 = xPathLexer2.number();
      xPathLexer0.dots();
      XPathLexer xPathLexer3 = new XPathLexer();
      String string0 = token1.toString();
      assertEquals("[ (11) (O)", string0);
      
      Token token3 = xPathLexer2.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("Lg-YY", token3.getTokenText());
      
      String string1 = token2.toString();
      assertEquals("[ (30) (5)", string1);
      
      Token token4 = xPathLexer3.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("^aE9");
      Token token5 = xPathLexer5.dots();
      assertEquals(13, token5.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token6 = xPathLexer2.pipe();
      assertEquals(17, token6.getTokenType());
      assertEquals("@", token6.getTokenText());
      
      xPathLexer2.at();
      Token token7 = xPathLexer5.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer4.notEquals();
      assertEquals(22, token8.getTokenType());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.4191225417740867
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+%/ FhB?VWnO.l;");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.comma();
      XPathLexer xPathLexer2 = new XPathLexer("^K:or");
      xPathLexer1.not();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer2.nextToken();
      xPathLexer3.leftParen();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer3.and();
      xPathLexer2.dots();
      xPathLexer0.dots();
      xPathLexer0.slashes();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer3.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer0.not();
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer2.minus();
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer6.star();
      xPathLexer4.colon();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.8803415496015474
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      xPathLexer0.dots();
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertNull(token7);
      
      Token token8 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer0.at();
      assertEquals(16, token10.getTokenType());
      
      xPathLexer0.operatorName();
      Token token11 = xPathLexer0.plus();
      assertEquals(5, token11.getTokenType());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.7651818664501546
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.div();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("co", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals("m.", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer0.not();
      xPathLexer0.endPosition();
      xPathLexer0.and();
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("e", token4.getTokenText());
      
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      
      String string0 = token3.toString();
      assertEquals("[ (23) (w)", string0);
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token6 = xPathLexer1.whitespace();
      assertEquals((-2), token6.getTokenType());
      
      xPathLexer1.nextToken();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.hasMoreChars();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token7 = xPathLexer1.comma();
      assertEquals(32, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("TP2nWMfn*{");
      Token token8 = xPathLexer1.pipe();
      assertEquals(17, token8.getTokenType());
      
      Token token9 = xPathLexer4.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      Token token10 = xPathLexer5.star();
      assertEquals(20, token10.getTokenType());
      assertEquals("T", token10.getTokenText());
      
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.endPosition();
      XPathLexer xPathLexer7 = new XPathLexer("");
      Token token11 = xPathLexer7.notEquals();
      assertEquals(22, token11.getTokenType());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.0808369935576017
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"sOEOh %}2");
      Token token0 = xPathLexer0.plus();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.comma();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.7812805001245993
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      String string0 = "com.werken.saxpath.XPathLexer";
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.div();
      xPathLexer0.dots();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.div();
      xPathLexer0.div();
      xPathLexer0.and();
      xPathLexer0.dollar();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.and();
      xPathLexer0.comma();
      xPathLexer0.at();
      xPathLexer0.isIdentifierChar('!');
      xPathLexer0.consume((-3449));
      xPathLexer0.rightParen();
      xPathLexer0.notEquals();
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.0879439277948477
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-\"sOEOh %}2");
      Token token0 = xPathLexer0.nextToken();
      Token token1 = xPathLexer0.leftParen();
      assertEquals("\"", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.dots();
      Token token2 = xPathLexer1.star();
      assertEquals(20, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("xM;RnZD|Z");
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("s", token3.getTokenText());
      
      Token token4 = xPathLexer2.not();
      assertEquals("x", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer1.number();
      assertEquals(30, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer0.dots();
      assertEquals("O", token6.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (6) (-)", string0);
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer1.comma();
      assertEquals(32, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("xM;RnZD|Z");
      xPathLexer0.or();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token9 = xPathLexer6.pipe();
      assertEquals(17, token9.getTokenType());
      
      Token token10 = xPathLexer2.nextToken();
      assertEquals("M", token10.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token11 = xPathLexer7.dots();
      assertEquals(13, token11.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      XPathLexer xPathLexer9 = new XPathLexer();
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token12 = xPathLexer6.at();
      assertEquals(16, token12.getTokenType());
      
      Token token13 = xPathLexer4.colon();
      assertEquals("x", token13.getTokenText());
      assertEquals(18, token13.getTokenType());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.3239024648003332
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.rightParen();
      xPathLexer0.getXPath();
      xPathLexer0.star();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.pipe();
      xPathLexer0.and();
      xPathLexer1.notEquals();
      xPathLexer1.colon();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.6054108649142456
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z+!ylRlTLM}");
      xPathLexer0.mod();
      xPathLexer0.rightParen();
      xPathLexer0.getXPath();
      xPathLexer0.star();
      xPathLexer0.minus();
      xPathLexer0.doubleColon();
      xPathLexer0.pipe();
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.colon();
      xPathLexer0.not();
      xPathLexer0.and();
      xPathLexer0.dollar();
      xPathLexer0.dollar();
      xPathLexer0.colon();
      xPathLexer0.and();
      xPathLexer0.comma();
      xPathLexer0.at();
      xPathLexer0.isIdentifierChar('!');
      xPathLexer0.consume((-3449));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.7989446432306178
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"sOEOh %}2");
      Token token0 = xPathLexer0.dots();
      String string0 = token0.toString();
      assertEquals("[ (13) (\")", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.nextToken();
      token1.toString();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      String string1 = token1.toString();
      assertEquals("[ (-1) (sOEOh %}2)", string1);
      
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token1);
      Token token3 = xPathLexer0.literal();
      assertEquals(27, token3.getTokenType());
      assertEquals("E", token3.getTokenText());
      
      char char0 = xPathLexer0.LA(1);
      assertEquals('h', char0);
      
      Token token4 = xPathLexer0.comma();
      assertEquals("h", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.2564311677956814
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("R");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.dots();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken((Token) null);
      Token token2 = xPathLexer0.at();
      // Undeclared exception!
      try { 
        token2.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.111064103449319
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-\"sOEOh %}2");
      Token token0 = xPathLexer0.nextToken();
      Token token1 = xPathLexer0.leftParen();
      assertEquals("\"", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.dots();
      Token token2 = xPathLexer1.star();
      assertEquals(20, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("xM;RnZD|Z");
      Token token3 = xPathLexer0.slashes();
      assertEquals("s", token3.getTokenText());
      
      Token token4 = xPathLexer2.not();
      assertEquals("x", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer1.number();
      assertEquals(30, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer1.leftParen();
      assertEquals(1, token6.getTokenType());
      
      String string0 = token0.toString();
      assertEquals("[ (6) (-)", string0);
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer1.comma();
      assertEquals(32, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("xM;RnZD|Z");
      xPathLexer0.or();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token9 = xPathLexer6.pipe();
      assertEquals(17, token9.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("fFSWI-+Or:5(![!0o$");
      Token token10 = xPathLexer7.nextToken();
      assertEquals("fFSWI-", token10.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token11 = xPathLexer2.dots();
      assertEquals(13, token11.getTokenType());
      assertEquals("M", token11.getTokenText());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      XPathLexer xPathLexer10 = new XPathLexer();
      XPathLexer xPathLexer11 = new XPathLexer();
      Token token12 = xPathLexer9.at();
      assertEquals(16, token12.getTokenType());
      
      Token token13 = xPathLexer3.colon();
      assertEquals(18, token13.getTokenType());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.9576835564577637
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-\"sOEOh %}2");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(6, token0.getTokenType());
      assertEquals("-", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("\"", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.dots();
      assertEquals(13, token2.getTokenType());
      
      xPathLexer1.star();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("s", token3.getTokenText());
      
      Token token4 = xPathLexer2.not();
      assertEquals("c", token4.getTokenText());
      
      Token token5 = xPathLexer1.number();
      assertEquals(30, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("C6~GCt|5Bnnm`r$;V");
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token6 = xPathLexer4.literal();
      assertNull(token6);
      
      xPathLexer3.operatorName();
      xPathLexer1.pipe();
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token7 = xPathLexer1.pipe();
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer1.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token9 = xPathLexer0.literal();
      assertEquals("E", token9.getTokenText());
      assertEquals(27, token9.getTokenType());
      assertNotNull(token9);
      
      Token token10 = xPathLexer2.not();
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer0.rightBracket();
      assertEquals(4, token11.getTokenType());
      assertEquals("h", token11.getTokenText());
      
      Token token12 = xPathLexer2.star();
      assertEquals(20, token12.getTokenType());
      assertEquals("m", token12.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer4.relationalOperator();
      Token token13 = xPathLexer0.colon();
      assertEquals(18, token13.getTokenType());
      assertEquals(" ", token13.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer("");
      Token token14 = xPathLexer8.comma();
      assertEquals(32, token14.getTokenType());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=3.4764162752694916
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8)26/Ih8Jw*JDqc4h");
      xPathLexer0.equals();
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("2", token0.getTokenText());
      
      xPathLexer0.equals();
      Token token1 = xPathLexer0.equals();
      assertEquals("/", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("Ih", token2.getTokenText());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.identifier();
      assertEquals(15, token4.getTokenType());
      assertEquals("Jw", token4.getTokenText());
      
      Token token5 = xPathLexer0.not();
      assertEquals("*", token5.getTokenText());
      assertEquals(23, token5.getTokenType());
      
      xPathLexer0.mod();
      Token token6 = xPathLexer0.pipe();
      assertEquals("J", token6.getTokenText());
      
      Token token7 = xPathLexer0.leftParen();
      assertEquals("D", token7.getTokenText());
      
      Token token8 = xPathLexer0.plus();
      assertEquals(5, token8.getTokenType());
      assertEquals("q", token8.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      Token token9 = xPathLexer0.rightParen();
      assertEquals(2, token9.getTokenType());
      assertEquals("c", token9.getTokenText());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.0948770401163617
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-\"sOEOh %}2");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("-", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("\"", token1.getTokenText());
      
      xPathLexer0.dots();
      xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer("xM;RnZD|Z");
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer1.not();
      assertEquals("x", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      assertEquals("O", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.or();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token8 = xPathLexer4.pipe();
      assertEquals(17, token8.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("fFSWI8G-+Or:5(![!0o$");
      xPathLexer5.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token9 = xPathLexer6.minus();
      assertEquals(6, token9.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = new XPathLexer();
      XPathLexer xPathLexer9 = new XPathLexer();
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token10 = xPathLexer10.at();
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer5.colon();
      assertEquals("+", token11.getTokenText());
      assertEquals(18, token11.getTokenType());
      
      Token token12 = xPathLexer6.star();
      assertEquals(20, token12.getTokenType());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=3.4472329712311893
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B[9i%<tVEVoubQ{1K");
      xPathLexer0.dollar();
      xPathLexer0.minus();
      xPathLexer0.star();
      xPathLexer0.dollar();
      xPathLexer0.mod();
      xPathLexer0.isIdentifierChar('p');
      xPathLexer0.slashes();
      xPathLexer0.doubleColon();
      xPathLexer0.leftBracket();
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dollar();
      xPathLexer0.leftBracket();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.92819476520619
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("iWMSd(Ou2<]YX|U");
      xPathLexer0.div();
      xPathLexer0.consume((-264));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.886087861236122
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k=GB)`){g|\"");
      xPathLexer0.relationalOperator();
      xPathLexer0.literal();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.at();
      xPathLexer1.colon();
      XPathLexer xPathLexer2 = new XPathLexer("k=GB)`){g|\"");
      Token token1 = xPathLexer2.star();
      assertEquals("k", token1.getTokenText());
      
      xPathLexer0.slashes();
      XPathLexer xPathLexer3 = new XPathLexer("k=GB)`){g|\"");
      Token token2 = xPathLexer3.nextToken();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer2.leftParen();
      assertEquals("=", token4.getTokenText());
      
      xPathLexer2.and();
      Token token5 = xPathLexer3.nextToken();
      assertEquals(21, token5.getTokenType());
      assertEquals("=", token5.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer3.and();
      Token token6 = xPathLexer3.dots();
      assertEquals("G", token6.getTokenText());
      
      Token token7 = xPathLexer4.dots();
      assertEquals(13, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer(")");
      Token token8 = xPathLexer5.slashes();
      assertEquals(11, token8.getTokenType());
      assertEquals(")", token8.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token9 = xPathLexer4.not();
      assertEquals(23, token9.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("MI%3 }{{1");
      Token token10 = xPathLexer3.minus();
      assertEquals("B", token10.getTokenText());
      assertEquals(6, token10.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      xPathLexer1.star();
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token11 = xPathLexer1.star();
      assertEquals(20, token11.getTokenType());
      
      Token token12 = xPathLexer10.at();
      assertEquals(16, token12.getTokenType());
      
      Token token13 = xPathLexer8.colon();
      assertEquals("", token13.getTokenText());
      assertEquals(18, token13.getTokenType());
      
      xPathLexer3.and();
      int int0 = xPathLexer3.currentPosition();
      assertEquals(4, int0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.7937952391516694
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-\"sOEOh %}2");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("-", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("\"", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("sO", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("T3ZNO,U");
      Token token3 = xPathLexer0.slashes();
      assertEquals("E", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer1.not();
      Token token5 = xPathLexer0.number();
      xPathLexer0.dots();
      XPathLexer xPathLexer2 = new XPathLexer();
      token5.toString();
      Token token6 = xPathLexer1.nextToken();
      assertEquals(30, token6.getTokenType());
      
      String string0 = token4.toString();
      assertEquals("[ (23) (T)", string0);
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token7 = xPathLexer3.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("1C;v/4'N#iu");
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token8 = xPathLexer5.identifier();
      assertEquals(15, token8.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("ggNXVxN(m");
      Token token9 = xPathLexer0.dots();
      assertEquals("h", token9.getTokenText());
      assertEquals(13, token9.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token10 = xPathLexer3.pipe();
      assertEquals(17, token10.getTokenType());
      
      Token token11 = xPathLexer7.at();
      assertEquals(16, token11.getTokenType());
      
      Token token12 = xPathLexer1.colon();
      assertEquals("Z", token12.getTokenText());
      
      Token token13 = xPathLexer2.notEquals();
      assertEquals(22, token13.getTokenType());
      
      boolean boolean0 = xPathLexer2.isIdentifierStartChar('Z');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.3669089009846074
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("(y", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.not();
      assertEquals(23, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("4f(y@*vGC)}),");
      Token token2 = xPathLexer2.nextToken();
      assertEquals("4", token2.getTokenText());
      
      xPathLexer2.identifierOrOperatorName();
      Token token3 = xPathLexer1.identifier();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer2.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer2.equals();
      assertEquals("f", token5.getTokenText());
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer2.plus();
      assertEquals(5, token6.getTokenType());
      
      xPathLexer1.leftParen();
      XPathLexer xPathLexer3 = new XPathLexer("4f(y@*vGC)}),");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.endPosition();
      xPathLexer4.and();
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
      assertEquals("*", token8.getTokenText());
      
      xPathLexer4.or();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token9 = xPathLexer3.minus();
      assertEquals(6, token9.getTokenType());
      
      Token token10 = xPathLexer0.notEquals();
      assertEquals(22, token10.getTokenType());
      
      Token token11 = xPathLexer0.comma();
      assertEquals(32, token11.getTokenType());
      assertEquals("C", token11.getTokenText());
      
      Token token12 = xPathLexer0.pipe();
      assertEquals(")", token12.getTokenText());
      assertEquals(17, token12.getTokenType());
      
      xPathLexer2.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.dots();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer3.relationalOperator();
      xPathLexer6.literal();
      Token token13 = xPathLexer2.at();
      assertEquals(16, token13.getTokenType());
      assertEquals("y", token13.getTokenText());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.4279862851366896
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      xPathLexer0.consume(61);
      Token token6 = xPathLexer0.equals();
      assertEquals(21, token6.getTokenType());
      
      xPathLexer0.and();
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.318162447316147
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      xPathLexer0.whitespace();
      xPathLexer0.mod();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      xPathLexer0.slashes();
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      
      Token token6 = xPathLexer0.minus();
      assertEquals(6, token6.getTokenType());
      
      Token token7 = xPathLexer0.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      Token token8 = xPathLexer0.rightParen();
      assertEquals(2, token8.getTokenType());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.2799175487010044
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.div();
      Token token0 = xPathLexer0.number();
      Token token1 = xPathLexer0.doubleColon();
      xPathLexer0.notEquals();
      Token token2 = xPathLexer0.equals();
      assertEquals("w", token2.getTokenText());
      
      xPathLexer0.notEquals();
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("ke", token3.getTokenText());
      
      xPathLexer0.doubleColon();
      Token token4 = xPathLexer0.colon();
      assertEquals("s", token4.getTokenText());
      
      xPathLexer0.operatorName();
      String string0 = token0.toString();
      assertEquals("[ (30) ()", string0);
      
      xPathLexer0.setPreviousToken(token1);
      assertEquals("co", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      Token token5 = xPathLexer0.literal();
      assertEquals(27, token5.getTokenType());
      assertEquals("xp", token5.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("[ (30) ()");
      Token token6 = xPathLexer1.pipe();
      assertEquals("[", token6.getTokenText());
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("h.XPathLexer", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      xPathLexer0.star();
      xPathLexer1.relationalOperator();
      Token token9 = xPathLexer0.colon();
      assertEquals(18, token9.getTokenType());
      
      Token token10 = xPathLexer1.comma();
      assertEquals(" ", token10.getTokenText());
      assertEquals(32, token10.getTokenType());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.725193095204504
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"sOEOh %}2");
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer("C");
      XPathLexer xPathLexer2 = new XPathLexer("C");
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.rightParen();
      xPathLexer3.dots();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("C");
      xPathLexer1.plus();
      xPathLexer4.relationalOperator();
      xPathLexer2.nextToken();
      xPathLexer1.not();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer2.nextToken();
      xPathLexer4.dots();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer8 = new XPathLexer("J?|y:QEnV(f7aiq");
      xPathLexer5.at();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.4910416801080744
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"sOEOh %}2");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("\"", token0.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.at();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("O", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals("E", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("\"sOEOh %}2");
      xPathLexer0.pipe();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("%}2", token3.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("Bdjb");
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals("%", token4.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer("Bdjb");
      Token token5 = xPathLexer7.pipe();
      assertEquals(17, token5.getTokenType());
      assertEquals("B", token5.getTokenText());
      
      Token token6 = xPathLexer0.at();
      assertEquals("}", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer1.colon();
      assertEquals(18, token7.getTokenType());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.3164287386971576
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      String string0 = ";',\\!";
      XPathLexer xPathLexer0 = new XPathLexer(";',!");
      xPathLexer0.or();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.and();
      xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer();
      String string1 = null;
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.9835978279007598
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.div();
      Token token0 = xPathLexer0.dots();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("o", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("~ojR6Ya~A");
      Token token3 = xPathLexer1.notEquals();
      assertEquals("~o", token3.getTokenText());
      
      Token token4 = xPathLexer1.equals();
      assertEquals("j", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
      
      xPathLexer0.notEquals();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      assertEquals("we", token5.getTokenText());
      
      Token token6 = xPathLexer1.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer1.slashes();
      assertEquals(11, token8.getTokenType());
      assertEquals("6", token8.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("~ojR6Ya~A");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("~ojR6Ya~A");
      Token token9 = xPathLexer0.nextToken();
      assertEquals(15, token9.getTokenType());
      assertEquals("en.saxpath.XPathLexer", token9.getTokenText());
      
      Token token10 = xPathLexer1.not();
      assertEquals(23, token10.getTokenType());
      assertEquals("Y", token10.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token11 = xPathLexer2.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      xPathLexer4.dots();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer4.relationalOperator();
      Token token12 = xPathLexer4.at();
      assertEquals(16, token12.getTokenType());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.616805395554847
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.dots();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("Hr15C\"](-Q3x}a\"k");
      xPathLexer1.nextToken();
      xPathLexer1.plus();
      XPathLexer xPathLexer2 = new XPathLexer("Hr15C\"](-Q3x}a\"k");
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.plus();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.6911465246498016
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"sOEOh %}2");
      xPathLexer0.equals();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("sOEOh", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(" ", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.dollar();
      assertEquals(26, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.relationalOperator();
      Token token3 = xPathLexer2.at();
      assertEquals(16, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer3.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.leftParen();
      Token token5 = xPathLexer4.notEquals();
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      
      Token token7 = xPathLexer3.comma();
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer0.equals();
      assertEquals("}", token8.getTokenText());
      
      Token token9 = xPathLexer3.equals();
      assertEquals(21, token9.getTokenType());
      
      Token token10 = xPathLexer3.leftParen();
      assertEquals(1, token10.getTokenType());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.312033603355515
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"sOEOh %}2");
      xPathLexer0.or();
      xPathLexer0.at();
      Token token0 = xPathLexer0.slashes();
      xPathLexer0.not();
      xPathLexer0.at();
      token0.toString();
      xPathLexer0.relationalOperator();
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.doubleColon();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.leftParen();
      xPathLexer2.notEquals();
      xPathLexer0.equals();
      xPathLexer1.equals();
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.440791407120694
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+%/ FhB?VWnO.l;");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.comma();
      XPathLexer xPathLexer2 = new XPathLexer("^K:or");
      xPathLexer1.not();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.slashes();
      XPathLexer xPathLexer4 = new XPathLexer("qrDmJe1;x");
      Token token0 = xPathLexer3.pipe();
      assertEquals(17, token0.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token1 = xPathLexer2.nextToken();
      assertEquals("^K:or", token1.getTokenText());
      
      Token token2 = xPathLexer1.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer2.notEquals();
      assertEquals("^K", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("+", token4.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token5 = xPathLexer5.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer6.not();
      assertEquals(23, token6.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer1.or();
      XPathLexer xPathLexer8 = new XPathLexer("JB_*?*4*ll^uworc4@f");
      xPathLexer2.relationalOperator();
      Token token7 = xPathLexer1.at();
      assertEquals(16, token7.getTokenType());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.6938195833149725
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      Token token0 = xPathLexer0.slashes();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.getPreviousToken();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (11) (4)", string0);
      
      xPathLexer0.at();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("y", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token3);
      xPathLexer0.comma();
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals("v", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("GC", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      assertEquals(")", token6.getTokenText());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.413640440780802
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+%/ FhB?VWnO.l;");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.comma();
      XPathLexer xPathLexer2 = new XPathLexer("^K:or");
      xPathLexer1.not();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.slashes();
      XPathLexer xPathLexer4 = new XPathLexer("qrDmJe1;x");
      xPathLexer3.pipe();
      xPathLexer2.doubleColon();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.rightBracket();
      XPathLexer xPathLexer7 = new XPathLexer("");
      xPathLexer7.dots();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer8.pipe();
      xPathLexer3.at();
      xPathLexer4.colon();
      xPathLexer8.colon();
      xPathLexer0.equals();
      Token token0 = xPathLexer8.getPreviousToken();
      assertNull(token0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.8750324650539385
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.identifier();
      xPathLexer0.doubleColon();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer(")6R4**V9VjD7");
      xPathLexer0.star();
      xPathLexer0.slashes();
      XPathLexer xPathLexer2 = new XPathLexer(")6R4**V9VjD7");
      xPathLexer0.nextToken();
      xPathLexer2.plus();
      xPathLexer2.leftParen();
      xPathLexer2.and();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.and();
      xPathLexer1.identifier();
      xPathLexer4.dollar();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer(")6R4**V9VjD7");
      xPathLexer4.comma();
      XPathLexer xPathLexer7 = new XPathLexer("[ (");
      xPathLexer1.or();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer3.pipe();
      xPathLexer8.nextToken();
      XPathLexer xPathLexer9 = new XPathLexer();
      xPathLexer5.dots();
      XPathLexer xPathLexer10 = new XPathLexer();
      XPathLexer xPathLexer11 = new XPathLexer();
      XPathLexer xPathLexer12 = new XPathLexer();
      xPathLexer10.at();
      xPathLexer7.colon();
      xPathLexer3.rightBracket();
      // Undeclared exception!
      try { 
        xPathLexer11.LA((-787));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.035756188183491
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.doubleColon();
      xPathLexer2.notEquals();
      xPathLexer2.star();
      Token token1 = xPathLexer0.notEquals();
      assertEquals("om", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      xPathLexer2.identifier();
      Token token2 = xPathLexer0.number();
      assertEquals(31, token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token3 = xPathLexer3.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("c", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("werken.saxpath.XPathLexer", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("Ru*|C,B*Q#M@=4`");
      xPathLexer4.and();
      xPathLexer0.identifier();
      Token token5 = xPathLexer2.dollar();
      assertEquals(26, token5.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("Ru*|C,B*Q#M@=4`");
      xPathLexer1.or();
      Token token7 = xPathLexer6.pipe();
      assertEquals(17, token7.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer0.identifier();
      Token token8 = xPathLexer1.dots();
      assertEquals(13, token8.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      XPathLexer xPathLexer10 = new XPathLexer("\"uI+k*il:&2");
      xPathLexer10.relationalOperator();
      Token token9 = xPathLexer8.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer8.star();
      assertEquals(20, token10.getTokenType());
      
      char char0 = xPathLexer1.LA(9);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.660483894158463
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer1.not();
      assertEquals("c", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("C6~GCt|5Bnnm`r$;V");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token3 = xPathLexer3.dots();
      assertEquals(13, token3.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer3.colon();
      assertEquals(18, token5.getTokenType());
      
      Token token6 = xPathLexer3.notEquals();
      assertEquals(22, token6.getTokenType());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.9479561944379862
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.div();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("o", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("m.werken.saxpath.XPathLexer", token2.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.dollar();
      xPathLexer0.rightBracket();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      
      xPathLexer0.and();
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      xPathLexer0.isIdentifierChar('!');
      xPathLexer0.consume(4);
      xPathLexer0.rightParen();
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.slashes();
      Token token8 = xPathLexer0.rightParen();
      assertEquals(2, token8.getTokenType());
      
      Token token9 = xPathLexer0.literal();
      assertNull(token9);
      
      Token token10 = xPathLexer0.star();
      assertEquals(20, token10.getTokenType());
      
      Token token11 = xPathLexer0.slashes();
      assertEquals(11, token11.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token12 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token12.getTokenType());
      
      Token token13 = xPathLexer0.comma();
      assertEquals(32, token13.getTokenType());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.444282029818317
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("equ*XT\"On8D?dDvV[");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer0.comma();
      assertEquals("e", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("9z@|4JSc5{7huFF");
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("q", token1.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("QX~S^][`p");
      XPathLexer xPathLexer5 = new XPathLexer("^K:or");
      Token token2 = xPathLexer3.pipe();
      assertEquals(17, token2.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token3 = xPathLexer2.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("9", token3.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer("-`!a6Q`b%)pv");
      Token token4 = xPathLexer4.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals("Q", token4.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token5 = xPathLexer7.at();
      assertEquals("-", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer0.colon();
      assertEquals("u", token6.getTokenText());
      assertEquals(18, token6.getTokenType());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.8609075434234903
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.9747025681553483
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.or();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.7683694476603784
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      Token token1 = xPathLexer2.nextToken();
      assertEquals(3, token1.getTokenType());
      assertEquals("[", token1.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer(".-#kA5D2W");
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token3 = xPathLexer1.nextToken();
      assertEquals("com.werken.saxpath.XPathLexer", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("\"sOEOh %}2");
      Token token5 = xPathLexer5.nextToken();
      assertEquals("", token5.getTokenText());
      assertEquals((-1), token5.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("[ (");
      Token token6 = xPathLexer6.dots();
      assertEquals(13, token6.getTokenType());
      assertEquals("[", token6.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer4.relationalOperator();
      Token token7 = xPathLexer6.at();
      assertEquals(" ", token7.getTokenText());
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer0.minus();
      assertEquals(6, token8.getTokenType());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.0147988035767197
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      xPathLexer0.relationalOperator();
      xPathLexer0.literal();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.at();
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer1.colon();
      assertEquals(18, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("4f(y@*vGC)}),");
      xPathLexer0.star();
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("4f(y@*vGC)}),");
      xPathLexer3.nextToken();
      Token token4 = xPathLexer3.plus();
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer3.leftParen();
      assertEquals("(", token5.getTokenText());
      
      xPathLexer3.and();
      Token token6 = xPathLexer2.nextToken();
      assertEquals("4", token6.getTokenText());
      assertEquals(30, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer2.and();
      Token token7 = xPathLexer2.identifier();
      assertEquals("f", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer3.dollar();
      assertEquals("y", token8.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("7k=.I.5vL");
      xPathLexer5.comma();
      xPathLexer5.consume();
      Token token9 = xPathLexer5.pipe();
      assertEquals(17, token9.getTokenType());
      
      xPathLexer6.relationalOperator();
      Token token10 = xPathLexer5.star();
      assertEquals(20, token10.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer8.comma();
      xPathLexer8.leftParen();
      Token token11 = xPathLexer3.notEquals();
      assertEquals("@*", token11.getTokenText());
      assertEquals(22, token11.getTokenType());
      
      Token token12 = xPathLexer6.equals();
      assertEquals("7", token12.getTokenText());
      
      Token token13 = xPathLexer5.equals();
      assertEquals(21, token13.getTokenType());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.632268085469991
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"sOEOh %}2");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      
      xPathLexer0.setXPath(".-#kA5D2W");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(13, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(".-#kA5D2W");
      XPathLexer xPathLexer2 = new XPathLexer("\"sOEOh %}2");
      xPathLexer2.comma();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.star();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer2.setXPath("t>^B:qo+$");
      Token token2 = xPathLexer2.identifier();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer3.dollar();
      assertEquals(26, token3.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer("");
      XPathLexer xPathLexer8 = new XPathLexer("u,");
      Token token4 = xPathLexer8.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals("u", token4.getTokenText());
      
      Token token5 = xPathLexer1.pipe();
      assertEquals(".", token5.getTokenText());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token6 = xPathLexer2.not();
      assertEquals(23, token6.getTokenType());
      assertEquals(">", token6.getTokenText());
      
      XPathLexer xPathLexer10 = new XPathLexer("s9;\"MkP");
      Token token7 = xPathLexer4.minus();
      assertEquals(6, token7.getTokenType());
      
      XPathLexer xPathLexer11 = new XPathLexer();
      XPathLexer xPathLexer12 = new XPathLexer("u,");
      xPathLexer12.star();
      XPathLexer xPathLexer13 = new XPathLexer();
      Token token8 = xPathLexer7.star();
      assertEquals(20, token8.getTokenType());
      
      Token token9 = xPathLexer10.at();
      assertEquals(16, token9.getTokenType());
      assertEquals("s", token9.getTokenText());
      
      Token token10 = xPathLexer12.colon();
      assertEquals(",", token10.getTokenText());
      assertEquals(18, token10.getTokenType());
      
      xPathLexer9.and();
      xPathLexer3.notEquals();
      Token token11 = xPathLexer8.notEquals();
      assertEquals(22, token11.getTokenType());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.693519353293057
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z+!ylRlTLM}");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("Z+", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals("!", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.getXPath();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("y", token2.getTokenText());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals("l", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      xPathLexer0.and();
      Token token5 = xPathLexer0.notEquals();
      assertEquals("TL", token5.getTokenText());
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      assertEquals("M", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer0.leftBracket();
      assertEquals("}", token8.getTokenText());
      assertEquals(3, token8.getTokenType());
      
      Token token9 = xPathLexer0.dollar();
      assertEquals(26, token9.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.comma();
      Token token10 = xPathLexer1.plus();
      assertEquals(5, token10.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.relationalOperator();
      xPathLexer2.nextToken();
      xPathLexer2.not();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token11 = xPathLexer4.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token12 = xPathLexer5.dots();
      assertEquals(13, token12.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.comma();
      xPathLexer5.relationalOperator();
      Token token13 = xPathLexer1.at();
      assertEquals(16, token13.getTokenType());
      
      Token token14 = xPathLexer2.minus();
      assertEquals(6, token14.getTokenType());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.2283385567718543
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-\"sOEOh %}2");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("-", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("\"", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.dots();
      Token token2 = xPathLexer1.star();
      assertEquals(20, token2.getTokenType());
      
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("xM;RnZD|Z");
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("s", token3.getTokenText());
      
      Token token4 = xPathLexer2.not();
      assertEquals("x", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer1.number();
      assertEquals(30, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer0.dots();
      assertEquals("O", token6.getTokenText());
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer1.comma();
      assertEquals(32, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("xM;RnZD|Z");
      xPathLexer0.or();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token9 = xPathLexer6.pipe();
      assertEquals(17, token9.getTokenType());
      
      Token token10 = xPathLexer0.nextToken();
      assertEquals("%}2", token10.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = new XPathLexer();
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token11 = xPathLexer0.at();
      assertEquals(16, token11.getTokenType());
      assertEquals("%", token11.getTokenText());
      
      Token token12 = xPathLexer7.colon();
      assertEquals(18, token12.getTokenType());
      
      xPathLexer0.nextToken();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('%');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.6520088233982395
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      xPathLexer0.slashes();
      xPathLexer0.not();
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      xPathLexer0.slashes();
      xPathLexer0.and();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.endPosition();
      xPathLexer0.dollar();
      xPathLexer0.literal();
      xPathLexer0.LA(21);
      xPathLexer0.leftParen();
      xPathLexer0.comma();
      xPathLexer0.dots();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.identifier();
      xPathLexer1.whitespace();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.830426139666595
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[.");
      Token token0 = xPathLexer0.slashes();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (11) ([)", string0);
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token1);
      
      token1.toString();
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      xPathLexer0.setPreviousToken(token1);
      Token token3 = xPathLexer0.identifier();
      token1.toString();
      token1.toString();
      String string1 = token1.toString();
      assertEquals("[ (15) (.)", string1);
      
      token3.toString();
      token3.toString();
      Token token4 = xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token4);
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=2.3124912791377352
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer2 = new XPathLexer();
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
      
      xPathLexer0.and();
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer1.slashes();
      assertEquals(11, token7.getTokenType());
      assertEquals("c", token7.getTokenText());
      
      xPathLexer1.or();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer3.minus();
      assertEquals(6, token8.getTokenType());
      
      Token token9 = xPathLexer3.notEquals();
      assertEquals(22, token9.getTokenType());
      
      Token token10 = xPathLexer0.comma();
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer3.pipe();
      assertEquals(17, token11.getTokenType());
      
      xPathLexer3.nextToken();
      xPathLexer0.dots();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.relationalOperator();
      xPathLexer4.literal();
      Token token12 = xPathLexer2.at();
      assertEquals(16, token12.getTokenType());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=3.609511871449878
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      xPathLexer0.slashes();
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      xPathLexer0.consume();
      xPathLexer0.hasMoreChars();
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      xPathLexer0.getXPath();
      xPathLexer0.star();
      xPathLexer0.consume();
      xPathLexer0.whitespace();
      xPathLexer0.setXPath("");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      xPathLexer0.slashes();
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token5);
      assertEquals(15, token5.getTokenType());
      
      xPathLexer0.getXPath();
      xPathLexer0.leftParen();
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      xPathLexer0.minus();
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer0.minus();
      assertEquals(6, token8.getTokenType());
      
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
      
      char char0 = xPathLexer0.LA(21);
      assertEquals('\uFFFF', char0);
      
      Token token10 = xPathLexer0.dots();
      assertEquals(13, token10.getTokenType());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.3314748295885792
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+%/ FhB?VWnO.l;");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.comma();
      assertEquals(32, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("^K:or");
      Token token1 = xPathLexer1.not();
      assertEquals(23, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token2 = xPathLexer3.slashes();
      assertEquals(11, token2.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("qrDmJe1;x");
      xPathLexer3.pipe();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token3 = xPathLexer2.nextToken();
      assertEquals("^K:or", token3.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer("");
      Token token4 = xPathLexer7.dots();
      assertEquals(13, token4.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token5 = xPathLexer8.pipe();
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer3.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer4.colon();
      assertEquals("q", token7.getTokenText());
      assertEquals(18, token7.getTokenType());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.230678929594414
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      xPathLexer0.not();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      xPathLexer0.identifier();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      
      Token token7 = xPathLexer0.leftParen();
      assertEquals(1, token7.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.dots();
      Token token8 = xPathLexer1.notEquals();
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer2.slashes();
      assertEquals(11, token9.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token10 = xPathLexer1.nextToken();
      assertEquals("m.werken.saxpath.XPathLexer", token10.getTokenText());
      
      Token token11 = xPathLexer3.not();
      assertEquals(23, token11.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token12 = xPathLexer4.nextToken();
      assertEquals(15, token12.getTokenType());
      
      Token token13 = xPathLexer4.dots();
      assertEquals(13, token13.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer7.relationalOperator();
      Token token14 = xPathLexer5.at();
      assertEquals(16, token14.getTokenType());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=3.182399225379008
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer0.notEquals();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.leftParen();
      Token token5 = xPathLexer0.leftParen();
      assertEquals(1, token5.getTokenType());
      
      xPathLexer0.and();
      Token token6 = xPathLexer0.equals();
      assertEquals(21, token6.getTokenType());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=3.318496323197788
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"sOEOh %}2");
      Token token0 = xPathLexer0.equals();
      assertEquals("\"", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.not();
      assertEquals("s", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.dollar();
      assertEquals(26, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.relationalOperator();
      Token token3 = xPathLexer2.at();
      assertEquals(16, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer3.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.leftParen();
      Token token5 = xPathLexer4.notEquals();
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer0.plus();
      assertEquals("O", token6.getTokenText());
      assertEquals(5, token6.getTokenType());
      
      Token token7 = xPathLexer3.comma();
      assertEquals(32, token7.getTokenType());
      
      xPathLexer0.equals();
      Token token8 = xPathLexer3.equals();
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer3.leftParen();
      assertEquals(1, token9.getTokenType());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=3.309858901004112
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.rightParen();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      xPathLexer0.notEquals();
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      
      xPathLexer0.mod();
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=2.113348250462586
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k=GB)`){g|\"");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("klKH$Ji");
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      xPathLexer1.slashes();
      Token token4 = xPathLexer1.dollar();
      String string0 = token4.toString();
      assertEquals("[ (26) (l)", string0);
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals("KH", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer1.slashes();
      assertEquals("$", token6.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (26) (l)");
      Token token7 = xPathLexer2.plus();
      assertEquals(5, token7.getTokenType());
      assertEquals("[", token7.getTokenText());
      
      xPathLexer1.relationalOperator();
      Token token8 = xPathLexer1.nextToken();
      assertEquals("Ji", token8.getTokenText());
      
      xPathLexer0.not();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.nextToken();
      Token token9 = xPathLexer2.dots();
      assertEquals(13, token9.getTokenType());
      assertEquals(" ", token9.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.relationalOperator();
      Token token10 = xPathLexer3.at();
      assertEquals(16, token10.getTokenType());
      
      xPathLexer3.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer3.notEquals();
      Token token11 = xPathLexer2.notEquals();
      assertEquals("(2", token11.getTokenText());
      
      Token token12 = xPathLexer0.notEquals();
      assertEquals(22, token12.getTokenType());
      
      Token token13 = xPathLexer1.not();
      assertEquals(23, token13.getTokenType());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.3871160010589108
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"sOEOh %}2");
      Token token0 = xPathLexer0.doubleColon();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.equals();
      String string0 = token1.toString();
      assertEquals("[ (21) (O)", string0);
      
      xPathLexer0.setPreviousToken(token1);
      token0.toString();
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken(token1);
      Token token3 = xPathLexer0.identifier();
      token3.toString();
      token0.toString();
      String string1 = token0.toString();
      assertEquals("[ (19) (\"s)", string1);
      
      String string2 = token2.toString();
      assertEquals("[ (4) (E)", string2);
      
      String string3 = token3.toString();
      assertEquals("[ (15) (Oh)", string3);
      
      xPathLexer0.doubleColon();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("}2", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token5);
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      assertEquals("}", token6.getTokenText());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      assertEquals("2", token7.getTokenText());
      
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.6899882601778624
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      Token token0 = xPathLexer0.slashes();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (11) (4)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifier();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("(", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token3);
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals("*", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.at();
      assertEquals(")", token6.getTokenText());
  }
}
