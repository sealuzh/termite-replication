/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 11:38:11 GMT 2019
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.firebirdsql.jdbc.FBProcedureCall;
import org.firebirdsql.jdbc.FBProcedureParam;
import org.firebirdsql.jdbc.FBSQLException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBProcedureCall_ESTest extends FBProcedureCall_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.0449572502428013
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(2726, "4B?VQ0cbhi_");
      fBProcedureParam0.setIndex(2726);
      fBProcedureParam0.setType(2726);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.addParam(255, "4B?VQ0cbhi_");
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.mapOutParamIndexToPosition((-327));
      fBProcedureCall0.mapOutParamIndexToPosition(2726, false);
      fBProcedureCall0.mapOutParamIndexToPosition(2726, false);
      fBProcedureCall0.clone();
      fBProcedureCall0.clone();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      // Undeclared exception!
      fBProcedureCall0.mapOutParamIndexToPosition((-327), true);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.6019887510761586
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(8, "z.I?JE$PJu0(BV>E");
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureParam0.setType(8);
      fBProcedureCall1.addOutputParam(fBProcedureParam0);
      fBProcedureCall1.addParam(8, "not");
      fBProcedureCall0.getSQL(true);
      fBProcedureParam0.setIndex(1);
      fBProcedureCall0.setName("r&");
      fBProcedureParam0.setValue(fBProcedureCall1);
      fBProcedureCall0.getName();
      fBProcedureCall1.registerOutParam(1, (-73968128));
      fBProcedureCall1.addInputParam(fBProcedureParam0);
      assertEquals((-73968128), fBProcedureParam0.getType());
      
      fBProcedureCall0.mapOutParamIndexToPosition(1, true);
      List<FBProcedureParam> list0 = fBProcedureCall1.getOutputParams();
      assertEquals(9, list0.size());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.3948733781430205
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(30, "NuSK~fgU*9f'ip");
      fBProcedureCall0.getSQL(false);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(3499, "nus");
      Object object3 = new Object();
      fBProcedureParam0.setType(30);
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      fBProcedureParam1.setIndex((-1441));
      fBProcedureParam0.setIndex(30);
      fBProcedureParam0.setType(3499);
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(1, "nus");
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.registerOutParam((-1441), 3499);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.addParam(37, "SELECT * FROM null(nus, NuSK~fgU*9f'ip, nus)");
      fBProcedureCall0.addOutputParam(fBProcedureParam2);
      fBProcedureCall0.clone();
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      fBProcedureCall1.addInputParam(fBProcedureParam1);
      // Undeclared exception!
      fBProcedureCall0.getInputParam(1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.3681869696640425
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getSQL(true);
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(0, "You cannt set value f an non-exising parameter.");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureParam0.setIndex(0);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.registerOutParam(0, 168);
      fBProcedureCall0.getOutputParam(0);
      boolean boolean0 = false;
      try { 
        fBProcedureParam0.setValue(fBProcedureCall0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot set parameter, since it is constant.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureParam", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.1412113361534284
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(2, "z.I?JE$PJN0(BV>E");
      fBProcedureParam0.setIndex(2);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.getInputParam(2);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      // Undeclared exception!
      try { 
        fBProcedureCall1.registerOutParam((-73968137), 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -73968138
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.303719704745008
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(2, "z.I?JE$PJN0(BV>E");
      fBProcedureParam0.setIndex(2);
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall1.addOutputParam(fBProcedureParam0);
      fBProcedureCall1.getOutputParam(2);
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      FBProcedureCall fBProcedureCall2 = new FBProcedureCall();
      // Undeclared exception!
      try { 
        fBProcedureCall2.registerOutParam((-73968137), 16);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -73968138
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.041147726433277
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(2732, "4B?VQ0cbhi_");
      fBProcedureParam0.setIndex(2732);
      fBProcedureParam0.setType(2732);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition((-305));
      assertEquals((-305), int0);
      
      fBProcedureCall0.mapOutParamIndexToPosition(2732, false);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(578, "4B?VQ0cbhi_");
      assertEquals(578, fBProcedureParam1.getPosition());
      
      int int1 = fBProcedureCall0.mapOutParamIndexToPosition(2732, false);
      assertEquals(1, int1);
      
      fBProcedureCall0.clone();
      Object object0 = fBProcedureCall0.clone();
      assertTrue(object0.equals((Object)fBProcedureCall0));
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.3697518709893073
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(2732, "4B?VQ0cbhi_");
      fBProcedureParam0.setType((-2954));
      fBProcedureParam0.setType(2732);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.mapOutParamIndexToPosition((-305));
      fBProcedureCall0.mapOutParamIndexToPosition(2732, true);
      fBProcedureCall0.addParam(578, "4B?VQ0cbhi_");
      fBProcedureCall0.mapOutParamIndexToPosition(2732, true);
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam((-305), 40);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -306
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.227525576720211
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(948, "NuS8K~f*9f'2b");
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureParam1.setIndex(948);
      fBProcedureCall1.addInputParam(fBProcedureParam1);
      FBProcedureCall fBProcedureCall2 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam2 = new FBProcedureParam();
      fBProcedureParam2.setIndex(948);
      fBProcedureCall1.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.addParam(948, "t");
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.getSQL(true);
      fBProcedureCall1.registerOutParam(948, 1785);
      assertNotSame(fBProcedureCall1, fBProcedureCall2);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.505402594883787
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(948, "NS8K~f*9'2b");
      fBProcedureParam0.setType(948);
      fBProcedureParam0.setIndex(37);
      int int0 = (-131696406);
      fBProcedureParam0.setIndex((-131696406));
      fBProcedureParam0.setIndex((-131696406));
      fBProcedureParam0.setType((-131696406));
      fBProcedureParam0.setType((-131696406));
      fBProcedureParam0.setIndex(37);
      fBProcedureParam0.setIndex(37);
      fBProcedureParam0.setIndex(37);
      fBProcedureParam0.setIndex((-131696406));
      fBProcedureParam0.setIndex(948);
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureParam0.setIndex(37);
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      fBProcedureParam1.setType((-131696406));
      fBProcedureParam1.setIndex(948);
      fBProcedureParam1.setIndex(2);
      fBProcedureParam0.setType((-4182052));
      fBProcedureParam1.setIndex((-131696406));
      fBProcedureParam1.setIndex(37);
      fBProcedureParam1.setType(1);
      fBProcedureCall0.addParam(208, ".? E-");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      try { 
        fBProcedureCall0.getSQL(true);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Value of parameter -1 not set and it was not registered as output parameter.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.0930338503415746
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(2, "z.I?JE$PJN0(BV>E");
      fBProcedureParam0.setIndex(2);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      // Undeclared exception!
      try { 
        fBProcedureCall1.registerOutParam((-73968137), 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -73968138
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.8323649625844876
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = 0;
      String string0 = " not set and ";
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(0, " not set and ");
      fBProcedureParam0.setType(0);
      fBProcedureParam0.setIndex(0);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureParam0.setIndex(907);
      fBProcedureCall0.registerOutParam(907, 0);
      int int1 = 34;
      fBProcedureParam0.setIndex(4);
      fBProcedureParam0.setType(0);
      fBProcedureParam0.setIndex(0);
      fBProcedureParam0.setIndex(34);
      int int2 = 4;
      fBProcedureParam0.setType(0);
      int int3 = (-699);
      fBProcedureParam0.setType((-699));
      try { 
        fBProcedureParam0.setValue("el");
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot set parameter, since it is constant.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureParam", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.527699454962953
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(948, "NS8K~f*9'2b");
      fBProcedureParam0.setType(948);
      fBProcedureParam0.setIndex(37);
      int int0 = (-131696406);
      fBProcedureParam0.setIndex((-131696406));
      fBProcedureParam0.setIndex((-131696406));
      fBProcedureParam0.setType((-131696406));
      fBProcedureParam0.setType(63);
      fBProcedureParam0.setIndex(63);
      fBProcedureParam0.setIndex((-2057));
      fBProcedureParam0.setIndex(37);
      fBProcedureParam0.setIndex((-131696406));
      fBProcedureParam0.setIndex(948);
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureParam0.setIndex(37);
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      fBProcedureParam1.setType((-131696406));
      fBProcedureParam1.setIndex(948);
      fBProcedureParam1.setIndex(2);
      fBProcedureParam0.setType((-4182052));
      fBProcedureParam1.setType((-711));
      fBProcedureParam1.setIndex((-131696406));
      fBProcedureParam1.setIndex(37);
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      fBProcedureParam1.setType(1);
      fBProcedureCall0.addParam(208, ".? E-");
      // Undeclared exception!
      try { 
        fBProcedureCall0.getSQL(true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 208
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.9257282837199994
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(0, " not set and ");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureParam0.setIndex(0);
      fBProcedureParam0.setIndex(441);
      fBProcedureCall0.registerOutParam(441, 168);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureParam0.setIndex(0);
      assertEquals(168, fBProcedureParam0.getType());
      
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getInputParam(0);
      assertEquals(168, fBProcedureParam1.getType());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.6800209166999553
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(2, "z.I?JE$PJu0(BV>E");
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall1.addOutputParam(fBProcedureParam0);
      fBProcedureParam0.setValue(fBProcedureCall1);
      fBProcedureCall1.addParam(2, "not");
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM null(z.I?JE$PJu0(BV>E)", string0);
      
      fBProcedureCall1.addInputParam(fBProcedureParam0);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(1372, "z.I?JE$PJu0(BV>E");
      assertEquals(1372, fBProcedureParam1.getPosition());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.5193049737362245
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(948, "NuS8K~f*9f'2b");
      fBProcedureParam0.setType(948);
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      fBProcedureParam0.clone();
      fBProcedureParam0.setIndex((-131696406));
      fBProcedureParam0.setType((-131696406));
      fBProcedureParam1.setIndex((-231700146));
      fBProcedureParam0.setIndex((-131696406));
      fBProcedureParam0.setIndex(948);
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureParam1.setIndex((-231700146));
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(37, "NuS8K~f*9f'2b");
      fBProcedureParam2.setType((-131696406));
      fBProcedureParam2.setIndex(948);
      fBProcedureParam2.setIndex((-231700146));
      fBProcedureParam2.setIndex((-131696406));
      fBProcedureCall0.addParam(208, ".? E-");
      fBProcedureCall0.addInputParam(fBProcedureParam1);
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.registerOutParam((-131696406), (-131696406));
      fBProcedureCall0.addOutputParam(fBProcedureParam2);
      assertEquals((-131696406), fBProcedureParam2.getType());
      
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall2 = (FBProcedureCall)fBProcedureCall0.clone();
      fBProcedureCall1.getInputParam(37);
      fBProcedureCall1.getSQL(false);
      FBProcedureParam fBProcedureParam3 = fBProcedureCall0.getInputParam(948);
      fBProcedureCall2.addInputParam(fBProcedureParam3);
      fBProcedureCall2.getOutputParams();
      FBProcedureParam fBProcedureParam4 = fBProcedureCall0.getOutputParam((-131696406));
      assertEquals((-131696406), fBProcedureParam4.getType());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.6844640583096615
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(948, "q[*");
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      fBProcedureParam1.setType(1448);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      FBProcedureParam fBProcedureParam2 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureParam0.setType((-12457231));
      fBProcedureParam1.clone();
      fBProcedureParam0.setType(1448);
      assertEquals(948, fBProcedureParam0.getPosition());
      
      Object object0 = fBProcedureCall0.clone();
      assertNotSame(object0, fBProcedureCall0);
      assertTrue(object0.equals((Object)fBProcedureCall0));
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.3681869696640425
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getSQL(true);
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(0, "You cannt set value f an non-exising parameter.");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureParam0.setIndex(441);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.registerOutParam(441, 168);
      fBProcedureCall0.getOutputParam(441);
      boolean boolean0 = false;
      try { 
        fBProcedureParam0.setValue(fBProcedureCall0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot set parameter, since it is constant.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureParam", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.1272144585364807
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(0, " not set and ");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureParam0.setIndex(441);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.registerOutParam(441, 168);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      assertEquals(168, fBProcedureParam0.getType());
      
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getInputParam(441);
      assertEquals(168, fBProcedureParam1.getType());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.1443511266235658
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(948, "NuS8K~f*9f'2b");
      fBProcedureParam0.setType(948);
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(948, "NuS8K~f*9f'2b");
      fBProcedureParam0.setType((-336167300));
      fBProcedureParam2.setType(948);
      fBProcedureParam0.setIndex(948);
      fBProcedureParam0.setIndex(948);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      FBProcedureParam fBProcedureParam3 = fBProcedureCall0.getInputParam(948);
      fBProcedureParam3.setIndex(948);
      fBProcedureCall0.addOutputParam(fBProcedureParam3);
      fBProcedureCall0.registerOutParam(948, (-336167300));
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam((-3449), "08S01");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3449
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.178389173824872
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = 0;
      String string0 = " not set and ";
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(0, " not set and ");
      int int1 = 907;
      fBProcedureParam0.setType(907);
      fBProcedureParam0.setType(0);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureParam0.setIndex(0);
      fBProcedureCall0.addParam(2560, " not set and ");
      fBProcedureParam0.setIndex(0);
      fBProcedureParam0.setIndex(907);
      fBProcedureCall0.registerOutParam(907, 0);
      int int2 = 34;
      fBProcedureParam0.setIndex(0);
      fBProcedureParam0.setIndex(34);
      int int3 = 4;
      fBProcedureCall0.getOutputParam(34);
      fBProcedureParam0.setType(0);
      fBProcedureParam0.setType(13);
      int int4 = (-657);
      fBProcedureParam0.setType((-657));
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam((-28770116), 2560);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -28770117
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      Object object27 = new Object();
      Object object28 = new Object();
      Object object29 = new Object();
      Object object30 = new Object();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam((-3613), "T5 p*;L[W+-");
      // Undeclared exception!
      try { 
        fBProcedureCall0.addOutputParam(fBProcedureParam0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3613
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.9299476476416482
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(0, "You cannt set value f an non-exising parameter.");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureParam0.clone();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureParam0.setType(3);
      fBProcedureParam0.clone();
      fBProcedureParam0.setType((-4515));
      fBProcedureParam0.setType(0);
      fBProcedureParam0.setType(4);
      fBProcedureParam0.setType((-1691));
      fBProcedureParam0.setType((-271));
      assertEquals("You cannt set value f an non-exising parameter.", fBProcedureParam0.getParamValue());
      
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam(441, "You cannt set value f an non-exising parameter.");
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(0, "it was not registered as output parameter.");
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      fBProcedureCall0.getOutputParams();
      fBProcedureCall1.addOutputParam(fBProcedureParam2);
      assertTrue(fBProcedureCall1.equals((Object)fBProcedureCall0));
      assertEquals(0, fBProcedureParam2.getPosition());
      assertNotSame(fBProcedureCall1, fBProcedureCall0);
      assertEquals("it was not registered as output parameter.", fBProcedureParam2.getParamValue());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5601507502065712
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(948, "q[*");
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      fBProcedureParam1.setType(1448);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      FBProcedureParam fBProcedureParam2 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureParam0.setType((-12457231));
      fBProcedureParam1.clone();
      fBProcedureParam0.setType(1448);
      fBProcedureParam0.setType((-1855));
      fBProcedureParam0.clone();
      fBProcedureParam0.setIndex(948);
      fBProcedureParam0.setType((-1641));
      fBProcedureParam1.setType((-1691));
      FBProcedureParam fBProcedureParam3 = new FBProcedureParam((-731), "You cannt set value f an non-exising parameter.");
      FBProcedureParam fBProcedureParam4 = fBProcedureCall0.addParam(948, "it was not registered as output parameter.");
      assertEquals("it was not registered as output parameter.", fBProcedureParam4.getParamValue());
      
      List<FBProcedureParam> list0 = fBProcedureCall0.getInputParams();
      assertEquals(949, list0.size());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.431746084123851
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(8, "z.I?JE$PJu0(BV>E");
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureParam0.setType(8);
      fBProcedureCall1.addOutputParam(fBProcedureParam0);
      fBProcedureCall1.addParam(8, "not");
      fBProcedureCall0.getSQL(true);
      fBProcedureParam0.setIndex(1);
      fBProcedureCall0.setName("r&");
      fBProcedureCall0.getName();
      fBProcedureCall1.registerOutParam(1, (-73968128));
      fBProcedureCall1.addInputParam(fBProcedureParam0);
      assertEquals((-73968128), fBProcedureParam0.getType());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.308841156174199
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(37);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.getOutputParam(526);
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall0.equals(fBProcedureCall0);
      FBProcedureCall fBProcedureCall2 = new FBProcedureCall();
      fBProcedureCall0.clone();
      // Undeclared exception!
      try { 
        fBProcedureCall2.addOutputParam((FBProcedureParam) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.008104467783631
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(948, "NS8K~f*9'2b");
      fBProcedureParam0.setType(948);
      fBProcedureParam0.setIndex(37);
      fBProcedureParam0.setIndex((-131696406));
      fBProcedureParam0.setIndex((-131696406));
      fBProcedureParam0.setType((-131696406));
      fBProcedureParam0.setType(63);
      fBProcedureParam0.setIndex(63);
      fBProcedureParam0.setIndex((-2057));
      fBProcedureParam0.setIndex(37);
      fBProcedureParam0.setIndex((-131696406));
      fBProcedureParam0.setIndex(948);
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureParam0.setIndex(37);
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      fBProcedureParam1.setType((-131696406));
      fBProcedureParam1.setIndex(948);
      fBProcedureParam1.setIndex(2);
      fBProcedureParam0.setType((-4182052));
      fBProcedureParam1.setType((-711));
      fBProcedureParam1.setIndex((-131696406));
      fBProcedureParam1.setIndex(37);
      fBProcedureParam1.setType(1);
      fBProcedureCall0.addParam(208, ".? E-");
      fBProcedureCall0.getSQL(true);
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam((-131696406), (-131696406));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -131696407
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam(1, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.036961695625775
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      Object object0 = fBProcedureCall0.clone();
      fBProcedureCall0.setName("HY002");
      fBProcedureCall0.clone();
      fBProcedureCall0.equals(object0);
      fBProcedureCall0.getSQL(false);
      object0.equals(fBProcedureCall0);
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam((-14506108), "z.i");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -14506108
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.43750346191921
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      String string0 = "01S00";
      fBProcedureCall0.setName("01S00");
      fBProcedureCall0.hashCode();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(1164);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureParam0.setIndex(1164);
      fBProcedureCall0.clone();
      int int0 = 41;
      fBProcedureParam0.setIndex(41);
      fBProcedureCall0.getSQL(false);
      boolean boolean0 = FBProcedureCall.OLD_CALLABLE_STATEMENT_COMPATIBILITY;
      fBProcedureCall0.hashCode();
      fBProcedureCall0.getSQL(true);
      int int1 = 1723;
      fBProcedureParam0.setIndex(41);
      try { 
        fBProcedureCall0.registerOutParam(1723, (-1));
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      String string0 = fBProcedureCall0.getName();
      assertNull(string0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      assertNull(fBProcedureCall0.getName());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = "z.I?JE$PJu0(BV\\>E";
      int int0 = (-699);
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int1 = (-2031);
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam((-2031));
      fBProcedureParam0.setType((-2031));
      try { 
        fBProcedureParam0.setValue("z.I?JE$PJu0(BV>E");
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot set value of an non-existing parameter.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall$NullParam", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(30, "n-");
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      Object object27 = new Object();
      Object object28 = new Object();
      Object object29 = new Object();
      Object object30 = new Object();
      Object object31 = new Object();
      Object object32 = new Object();
      Object object33 = new Object();
      Object object34 = new Object();
      Object object35 = new Object();
      assertFalse(object35.equals((Object)object17));
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      Object object27 = new Object();
      Object object28 = new Object();
      Object object29 = new Object();
      Object object30 = new Object();
      Object object31 = new Object();
      Object object32 = new Object();
      Object object33 = new Object();
      Object object34 = new Object();
      Object object35 = new Object();
      Object object36 = new Object();
      Object object37 = new Object();
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition((-266), true);
      assertEquals((-266), int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      Object object27 = new Object();
      Object object28 = new Object();
      Object object29 = new Object();
      Object object30 = new Object();
      Object object31 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam((-2218), "26000");
      // Undeclared exception!
      try { 
        fBProcedureCall0.addInputParam(fBProcedureParam0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2218
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.9899328221488908
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(948, "NS8K~f*9'2b");
      fBProcedureParam0.setType(948);
      fBProcedureParam0.setIndex(37);
      fBProcedureParam0.setIndex((-131696406));
      fBProcedureParam0.setType(887);
      fBProcedureParam0.setIndex((-131696406));
      fBProcedureParam0.setType((-131696406));
      fBProcedureParam0.setType(63);
      fBProcedureParam0.setIndex(63);
      fBProcedureParam0.setIndex(37);
      fBProcedureParam0.setIndex((-131696406));
      fBProcedureParam0.setIndex(948);
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureParam0.setIndex(37);
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      fBProcedureParam1.setType((-131696406));
      fBProcedureParam1.setIndex(948);
      fBProcedureParam1.setIndex(2);
      fBProcedureParam1.setType((-711));
      fBProcedureParam1.setIndex((-131696406));
      fBProcedureParam1.setType(1);
      fBProcedureCall0.addParam(208, ".? E-");
      fBProcedureCall0.addParam(37, ".? E-");
      fBProcedureCall0.getSQL(true);
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam((-131696406), (-131696406));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -131696407
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.2060220445111107
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(948, "NS8K~f*9'2b");
      fBProcedureParam0.setType(948);
      fBProcedureParam0.setIndex(37);
      fBProcedureParam0.setIndex(948);
      fBProcedureParam0.setType(948);
      fBProcedureParam0.setType(37);
      fBProcedureParam0.setIndex(37);
      fBProcedureParam0.setIndex(37);
      fBProcedureParam0.setIndex(37);
      fBProcedureParam0.setIndex(948);
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureParam0.setIndex(37);
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      fBProcedureParam1.setType(37);
      fBProcedureParam0.setIndex(948);
      fBProcedureParam0.setIndex(37);
      fBProcedureParam0.setType(948);
      fBProcedureParam1.setIndex((-908));
      fBProcedureParam0.setType(37);
      fBProcedureCall0.addParam(18, "07005");
      fBProcedureCall0.getSQL(true);
      try { 
        fBProcedureCall0.registerOutParam(37, 1723);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.008104467783631
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(948, "NuS8K~f*9f'2b");
      fBProcedureParam0.setType(948);
      fBProcedureParam0.setIndex(37);
      fBProcedureParam0.setIndex((-131696406));
      fBProcedureParam0.setType((-131696406));
      fBProcedureParam0.setType(63);
      fBProcedureParam0.setIndex(63);
      fBProcedureParam0.setIndex(37);
      fBProcedureParam0.setIndex((-131696406));
      fBProcedureParam0.setIndex(948);
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureParam0.setIndex(37);
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      fBProcedureParam1.setType((-131696406));
      fBProcedureParam1.setIndex(948);
      fBProcedureParam1.setIndex(2);
      fBProcedureParam1.setIndex((-131696406));
      fBProcedureParam1.setType(1);
      fBProcedureCall0.addParam(208, ".? E-");
      fBProcedureCall0.getSQL(true);
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam((-131696406), (-131696406));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -131696407
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.mapOutParamIndexToPosition(1515);
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      Object object27 = new Object();
      Object object28 = new Object();
      Object object29 = new Object();
      Object object30 = new Object();
      Object object31 = new Object();
      Object object32 = new Object();
      Object object33 = new Object();
      Object object34 = new Object();
      assertFalse(object34.equals((Object)object11));
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(0);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(0, true);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.hashCode();
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall0.equals(fBProcedureCall1);
      // Undeclared exception!
      try { 
        fBProcedureCall1.addInputParam((FBProcedureParam) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Object object0 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      boolean boolean0 = fBProcedureCall0.equals(object0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      List<FBProcedureParam> list0 = fBProcedureCall0.getOutputParams();
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getInputParams();
      List<FBProcedureParam> list0 = fBProcedureCall0.getInputParams();
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.7108816926060224
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.mapOutParamIndexToPosition(19, true);
      int int0 = 47;
      String string0 = "!,1-y@3";
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(47, "!,1-y@3");
      fBProcedureParam0.setIndex((-1472));
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam1);
      fBProcedureParam1.setIndex((-1299));
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      int int1 = 4;
      fBProcedureParam1.setType(1325);
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition(4, false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.8053415898278653
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(0, "can");
      fBProcedureCall0.addParam(30, "NuSK~fgU*9f'ip");
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      assertFalse(object25.equals((Object)object8));
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.410015058995706
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getInputParam(957);
      fBProcedureCall0.getInputParam(5);
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      assertFalse(object26.equals((Object)object24));
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.7767701612564368
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam((-80), "RG6yimo(sp");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -80
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.410015058995706
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getInputParam(2037);
      fBProcedureCall0.getInputParam(531);
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      Object object27 = new Object();
      Object object28 = new Object();
      Object object29 = new Object();
      Object object30 = new Object();
      assertFalse(object30.equals((Object)object8));
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.6082873972465446
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam(0, 2545);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.394714983677679
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      Object object27 = new Object();
      Object object28 = new Object();
      Object object29 = new Object();
      Object object30 = new Object();
      Object object31 = new Object();
      Object object32 = new Object();
      Object object33 = new Object();
      Object object34 = new Object();
      Object object35 = new Object();
      Object object36 = new Object();
      Object object37 = new Object();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(18);
      assertFalse(fBProcedureParam0.isValueSet());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      // Undeclared exception!
      try { 
        fBProcedureCall0.getInputParam((-93));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -94
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.6082873972465446
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      Object object5 = new Object();
      Object object6 = new Object();
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam((-1484), (-1484));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1485
         //
         verifyException("java.util.Vector", e);
      }
  }
}
