/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 09:32:45 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.io.SyncFailedException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Enumeration;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.030232382252353
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player((-10751), "?a$DE\u0003#q}=eT4X=p1", "?a$DE\u0003#q}=eT4X=p1", 257);
      player0.getX();
      player0.setY((-10751));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player1 = new Player((-1441), "?a$DE\u0003#q}=eT4X=p1", "?a$DE\u0003#q}=eT4X=p1", (-1441), (short)4919);
      player1.remove((Party) null);
      player1.boss = (Party) player0;
      player1.getSubparty();
      player0.isJoinOK(player1, false);
      player1.gangStrength();
      player0.getY();
      player1.getY();
      player0.gangStrength();
      player1.type();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)1;
      player1.unpack(byteArray0);
      player1.type();
      PipedInputStream pipedInputStream0 = new PipedInputStream(1);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      player0.unpack(dataInputStream0);
      player0.gangStrength();
      player1.isJoinOK(player0, false);
      assertEquals((-10751.0F), player0.getY(), 0.01F);
      
      player1.pack();
      player1.gangStrength();
      int int0 = player1.gangStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{nwrGo/0[Azrp");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{nwrGo/0[Azrp");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":!2");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "KUsFvw/!vi0(");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player();
      player0.setX((-2524.6394F));
      player0.pack();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "KUsFvw/!vi0(");
      float float0 = player0.getX();
      assertEquals((-2524.6394F), float0, 0.01F);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(0, "state.Party", "x@4B<`$<)/}", 9199, 0);
      player0.getSubparty();
      int int0 = player0.gangStrength();
      assertEquals(0, int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(9199, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      
      int int1 = Packable.UNDEFINED;
      assertTrue(int1 == int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.128419031742918
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player((-1256));
      player0.setDead((long) (-1256), false);
      Player player1 = new Player((-1468), "", 1380);
      player1.setConnected(false);
      player1.next = (Party) player0;
      player0.setJoinOK(player1, false);
      player0.setDead(1080L, false);
      Player player2 = new Player(1673);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-97);
      byteArray0[1] = (byte)4;
      player2.unpack(byteArray0);
      player0.setJoinOK(player2, false);
      player1.id = (int) (short)4919;
      player2.setDead(1392409296320L, true);
      player1.isConnected();
      player0.isJoinOK(player1, false);
      player0.getTimeOfDeath();
      player0.isJoinOK(player1, false);
      System.setCurrentTimeMillis((byte) (-97));
      Player player3 = new Player((-1468), "", "w)a RF AOP$A%qI{6>", (byte)4);
      player2.pack();
      assertEquals(1392409296320L, player2.getTimeOfDeath());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.6422165264472737
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player((-4014), "Player", 1014);
      player0.setY(1646.2582F);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-119);
      byteArray0[1] = (byte) (-121);
      byteArray0[2] = (byte)111;
      player0.unpack(byteArray0);
      player0.setMoney(2123.7524F);
      player0.setY(0.0F);
      player0.isConnected();
      player0.getMoney();
      player0.gangStrength();
      System.setCurrentTimeMillis(84L);
      float float0 = player0.getMoney();
      assertEquals(2123.7524F, float0, 0.01F);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(2294, "", "", 2294, (-199));
      player0.setDead();
      player0.setX(0.0F);
      player0.getY();
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-809), 1);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player((-1256));
      player0.setZ((-1256));
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      player0.getX();
      float float0 = player0.getZ();
      assertEquals((-1256.0F), float0, 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player(9509, "", "", (-2634), (-1));
      int int0 = player0.getStrength();
      assertEquals((-1), int0);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-2634), player0.getPictureId());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player((-1256));
      player0.setDead((long) (-1256), true);
      Player player1 = new Player((-1468), "", 1334);
      Player player2 = new Player(0, "+eu}vq8", ".*[.]class$", (short)4919);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)35;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte) (-46);
      byteArray0[6] = (byte) (-42);
      byteArray0[7] = (byte)35;
      player2.getY();
      Player player3 = new Player((byte)1, (String) null, (-1244));
      player3.setDead((long) (byte)35, true);
      player0.setZ(0.2F);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      player2.getX();
      float float0 = player0.getZ();
      assertEquals((-1256L), player0.getTimeOfDeath());
      assertEquals(0.2F, float0, 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(4780);
      player0.setDead(1478L, false);
      Player player1 = new Player(4357, (String) null, (-2336));
      player0.setJoinOK(player1, true);
      player1.setDead((-1L), true);
      player0.isConnected();
      player1.isJoinOK(player0, true);
      player0.getTimeOfDeath();
      player1.isJoinOK(player0, true);
      System.setCurrentTimeMillis(1392409281320L);
      player1.toString();
      float float0 = player0.getX();
      assertEquals(1478L, player0.getTimeOfDeath());
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.9149040208486974
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(0, ".*[.]class$", ".*[.]class$", 0);
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      Player player1 = new Player((byte) (-42), "", "", (byte) (-97), (-10593));
      player0.setJoinOK(player1, false);
      player0.setDead((long) (byte) (-1), false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.isJoinOK(player1, false);
      player0.getTimeOfDeath();
      player0.isJoinOK(player1, false);
      System.setCurrentTimeMillis((-917L));
      Player player2 = new Player();
      player2.prev = (Party) player0;
      assertTrue(player0.isDead());
      
      player1.pack();
      Player player3 = new Player(984, "&TX;*en", (byte) (-1));
      player1.isJoinOK(player3, false);
      assertEquals((-97), player1.getPictureId());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.304704691639832
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player((-1256));
      player0.setDead((long) (-1256), false);
      String string0 = "";
      Player player1 = new Player((-1256), "", (-1256));
      player1.setJoinOK(player0, false);
      player1.setDead((long) (-1256), false);
      player1.isConnected();
      player1.isJoinOK(player0, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      InputStream inputStream0 = null;
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      byte byte0 = (byte) (-16);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        dataInputStream0.readFully(byteArray0, (int) (short)4919, (-17151));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{6P%b1;;");
      Player player0 = new Player(4243, (String) null, (String) null, 0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)58;
      byteArray0[3] = (byte) (-1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[4] = (byte)7;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1594), (-1594));
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      
      player0.getIP();
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.9454908168625717
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "sp1P}Yb");
      Player player0 = new Player(3583, "sp1P}Yb", 3);
      player0.getSubparty();
      player0.gangStrength();
      player0.setDead();
      player0.getSubparty();
      Party party0 = player0.head;
      player0.prev = null;
      player0.setDead();
      player0.pack();
      player0.getIP();
      player0.gangStrength();
      player0.setMoney(3583);
      Party party1 = new Party();
      party1.getSubparty();
      player0.boss = party1;
      party1.head = (Party) player0;
      player0.getX();
      player0.getIP();
      System.setCurrentTimeMillis(1658L);
      player0.getY();
      player0.getX();
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{nwrGo/0[Azrp");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{nwrGo/0[Azrp");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{nwrGo/0[Azrp");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{nwrGo/0[Azrp");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)82;
      byteArray0[2] = (byte) (-9);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player();
      player0.pack();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "v3m??Hapj5-83U%s");
      player0.pack();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("v3m??Hapj5-83U%s", false);
      mockFileOutputStream0.flush();
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 5);
      pipedInputStream0.close();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      player0.unpack(dataInputStream0);
      System.setCurrentTimeMillis(995L);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{nwrGo/0[Azrp");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{nwrGo/0[Azrp");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":!2");
      String string0 = "KUsFvw/!vi0(";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "KUsFvw/!vi0(");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{nwrGo/0[Azrp");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(9174, "Ke`8()eP<Cy1$g", (-2636));
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)34;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-9);
      byteArray0[3] = (byte)99;
      byteArray0[4] = (byte)5;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)30;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)55;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 3);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(1, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = "~XB{^";
      String string1 = "module.ModuleBrowserDialod$ModuleFilter";
      Player player0 = new Player(5194, "~XB{^", "module.ModuleBrowserDialod$ModuleFilter", 5194, (-35));
      player0.pack();
      try { 
        MockURI.URI("module.ModuleBrowserDialod$ModuleFilter", "module.ModuleBrowserDialod$ModuleFilter", "~XB{^", "~XB{^");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: module.ModuleBrowserDialod$ModuleFilter://module.ModuleBrowserDialod$ModuleFilter~XB%7B%5E#~XB%7B%5E
         //
         verifyException("java.net.URI", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.9421822974250196
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player(4, "", "", 4, 254);
      player0.setY(4);
      byte[] byteArray0 = new byte[1];
      player0.setJoinOK(player0, true);
      byteArray0[0] = (byte)0;
      player0.getY();
      byte[] byteArray1 = player0.pack();
      player0.gangStrength();
      System.setCurrentTimeMillis(0L);
      player0.getY();
      MockFile mockFile0 = new MockFile("", "qW8qF<2+");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      mockPrintStream0.println((Object) null);
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0);
      player0.pack();
      PrintStream printStream0 = mockPrintStream1.append((CharSequence) "");
      DataOutputStream dataOutputStream0 = new DataOutputStream(printStream0);
      dataOutputStream0.writeBoolean(false);
      mockPrintStream0.write(byteArray1, 4, 3);
      MockPrintStream mockPrintStream2 = new MockPrintStream("qW8qF<2+");
      float float0 = player0.getX();
      assertEquals(4.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = "~XBL~@m";
      String string1 = "module.ModuleBrowserDialog$ModuleFilter";
      String string2 = null;
      Player player0 = new Player((-1256), (String) null, (String) null, 5237, (-2076));
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = "~XB{^";
      String string1 = "-@-^j[LxfKMm";
      Player player0 = new Player(5194, "~XB{^", "-@-^j[LxfKMm", 5194, (-35));
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(2959, "", 2959);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, false);
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0);
      Locale locale0 = Locale.FRENCH;
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) mockPrintStream1;
      objectArray0[1] = (Object) locale0;
      objectArray0[2] = (Object) locale0;
      PrintStream printStream0 = mockPrintStream1.format(locale0, "", objectArray0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(printStream0);
      player0.pack(dataOutputStream0);
      assertEquals("\u00137\uFFFD\u0000\u0001\u000B\uFFFDA \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", byteArrayOutputStream0.toString());
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.384415616105067
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player((-4054));
      player0.setY(0.0F);
      int int0 = Packable.PLAYER;
      Player player1 = new Player();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      int int1 = player1.gangStrength();
      assertEquals(1, int1);
      
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      player0.unpack(dataInputStream0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      
      Player player2 = new Player(3791, "", "", (-381));
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      dataInputStream0.markSupported();
      player1.unpack(dataInputStream1);
      assertEquals(0, player1.getPictureId());
      assertEquals("Player-1", player1.toString());
      assertEquals("0.0.0.0", player1.getIP());
      
      player2.getIP();
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals(0L, player2.getTimeOfDeath());
      assertFalse(player2.isDead());
      assertTrue(player2.isConnected());
      assertEquals((-381), player2.getPictureId());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(1);
      Player player1 = new Player((-1733), "", (short)4919);
      player1.reset(false);
      player0.isJoinOK(player1, false);
      player1.prev = (Party) player0;
      player1.setMoney((-1733));
      player1.getMoney();
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals((-1733.0F), player1.getMoney(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{nwrGo/0[Azrp");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{nwrGo/0[Azrp");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{nwrGo/0[Azrp");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{nwrGo/0[Azrp");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)5;
      URI uRI0 = MockURI.aHttpURI;
      URI uRI1 = MockURI.URI("WtI");
      MockURI.create("WtI");
      MockURI.resolve(uRI1, uRI1);
      Player player0 = new Player((byte)5, "WtI", "2+}HB", (byte)5, (byte)5);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.939792811164566
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(734, (String) null, "eQ^", 563);
      Player player1 = new Player();
      player0.boss = (Party) player1;
      player0.reset(true);
      player1.setX(0.2F);
      player1.setZ((short)4919);
      player0.isJoinOK(player1, false);
      player0.head = (Party) player1;
      assertEquals(4919.0F, player1.getZ(), 0.01F);
      
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-12);
      byteArray0[1] = (byte)55;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte) (-72);
      byteArray0[5] = (byte) (-82);
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte)48;
      player0.unpack(byteArray0);
      player0.gangStrength();
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player((-2002), "<Y&txC[w<bOK:", "y*+Cwqk#Coa J", 3, 3137);
      int int0 = player0.getStrength();
      assertTrue(player0.isConnected());
      assertEquals(3137, int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(3, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("<Y&txC[w<bOK:", player0.getIP());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(0, "\"l[8f_^NkLaL8rd", "49oQ9IK=l3yz=c", 10516, 0);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.071668046441627
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead(1L, true);
      Player player1 = new Player(1334, "{6P%b1;;", (short)4919);
      player1.setJoinOK(player0, true);
      player0.setDead((long) (short)4919, true);
      player1.isConnected();
      player1.pack();
      player1.isJoinOK(player0, true);
      player0.getTimeOfDeath();
      player1.isJoinOK(player0, false);
      assertEquals(4919L, player0.getTimeOfDeath());
      
      player1.isConnected();
      player1.getY();
      Player player2 = new Player(1059, "{6P%b1;;", (short)4919);
      Player player3 = new Player((short)4919, "s`Jh3$^<x", 1159);
      player3.setZ(0.1F);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      player2.getX();
      float float0 = player1.getZ();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(1212, "gc&\\HH}", "gc&\\HH}", (-2260));
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)41;
      byteArray0[2] = (byte)41;
      byteArray0[3] = (byte)0;
      player0.getX();
      player0.getPictureId();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0, (byte)41);
      try { 
        fileDescriptor0.sync();
        fail("Expecting exception: SyncFailedException");
      
      } catch(SyncFailedException e) {
         //
         // sync failed
         //
         verifyException("java.io.FileDescriptor", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{nwrGo/0[Azrp");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{nwrGo/0[Azrp");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":!2");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "KUsFvw/!vi0(");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      Player player0 = new Player(1025, "{nwrGo/0[Azrp", (String) null, 1025);
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      float float1 = player0.getZ();
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, float1, 0.01F);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1025, player0.getPictureId());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".6,F 8/M5Ev0(HC");
      Player player0 = new Player(2201, (String) null, 2201);
      float float0 = player0.getMoney();
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(2201, player0.getPictureId());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(729, "<Y&txC[w<bOK:", "<Y&txC[w<bOK:", 3);
      long long0 = player0.getTimeOfDeath();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(3, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.2394714949802967
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player(107, "", "", 1386, 1386);
      player0.toString();
      assertEquals(0L, player0.getTimeOfDeath());
      
      player0.setDead((long) 1386);
      player0.getName();
      player0.getPictureId();
      Player player1 = new Player();
      player1.getStrength();
      Player player2 = new Player(5, ">+z!5B;|4u", 1);
      player2.getZ();
      player1.getX();
      player1.gangStrength();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)82;
      byteArray0[1] = (byte)16;
      byteArray0[2] = (byte) (-109);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)16;
      byteArray0[5] = (byte) (-109);
      player0.unpack(byteArray0);
      System.setCurrentTimeMillis(0L);
      int int0 = player2.gangStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.1282294761213207
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead(1L, true);
      Player player1 = new Player(1334, "{6P%b1;;", (short)4919);
      player1.setJoinOK(player0, true);
      player0.setDead((long) (short)4919, true);
      player1.isConnected();
      byte[] byteArray0 = player1.pack();
      player1.isJoinOK(player0, true);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.available();
      player1.unpack(dataInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      player0.isConnected();
      player1.getY();
      Player player2 = new Player(626, " <T~Ls]Hvg<*z{MF", (short)4919);
      player2.setZ(1809.9F);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      player2.getX();
      float float0 = player0.getZ();
      assertEquals(4919L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{6P%b1;;");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player();
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Player player1 = new Player(5, "{6P%b1;;", " R}5", 35);
      player1.id = 9622;
      String string0 = player1.getIP();
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertTrue(player1.isConnected());
      assertEquals(1, player1.getStrength());
      assertEquals(35, player1.getPictureId());
      assertEquals("{6P%b1;;", string0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = "f";
      String string1 = "~XBL~@m";
      Player player0 = new Player(0, "f", "f", 0, (-1256));
      URI uRI0 = MockURI.aFTPURI;
      MockURI.parseServerAuthority(uRI0);
      URI uRI1 = MockURI.aHttpURI;
      URI uRI2 = MockURI.aHttpURI;
      player0.gangStrength();
      URI uRI3 = MockURI.relativize(uRI1, uRI0);
      MockURI.parseServerAuthority(uRI3);
      try { 
        MockURI.URI("f", "~XBL~@m", "%l^<Clzl?}zP", "(NTA.d[(M~Q-Mf7");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: f://~XBL~@m%25l%5E%3CClzl%3F%7DzP#(NTA.d[(M~Q-%7FMf7
         //
         verifyException("java.net.URI", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = "~XB{^";
      Player player0 = new Player(28371, "~XB{^", "~XB{^", 28371, (-35));
      Player player1 = new Player(1317);
      player0.setJoinOK(player1, true);
      URI uRI0 = MockURI.aFileURI;
      URI uRI1 = MockURI.resolve(uRI0, uRI0);
      MockURI.resolve(uRI1, uRI1);
      URI uRI2 = MockURI.aHttpURI;
      MockURI.normalize(uRI2);
      String string1 = "";
      String string2 = "e|VL]?]_d?+HhLoLC";
      String string3 = "";
      String string4 = "`6Ca`\\@a>IG#GfK";
      try { 
        MockURI.URI("e|VL]?]_d?+HhLoLC", "", "Oo\"Dj*;2-A|U{", "`6Ca`@a>IG#GfK");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: e|VL]?]_d?+HhLoLC://Oo%22Dj*;2-A%7CU%7B#%606Ca%60@a%3EIG%23GfK
         //
         verifyException("java.net.URI", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = "~XB{^";
      Player player0 = new Player(5174, "~XB{^", "~XB{^", 5174, 5174);
      player0.gangStrength();
      player0.remove((Party) null);
      try { 
        MockURI.URI("~XB{^", "~XB{^", "~XB{^", "~XB{^");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: ~XB{^://~XB{^~XB%7B%5E#~XB%7B%5E
         //
         verifyException("java.net.URI", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.2394714949802967
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player((-2353), ";AZpjT%fZ4R", ";AZpjT%fZ4R", (-2353), (-2353));
      player0.getName();
      player0.setDead(1L, false);
      player0.setDead(0L, true);
      player0.setDead((-1L));
      player0.reset(false);
      player0.setZ(730.0F);
      player0.gangStrength();
      player0.isDead();
      Player player1 = new Player(0);
      player0.setJoinOK(player1, true);
      player0.getX();
      player0.getPictureId();
      player0.getY();
      float float0 = player0.getX();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(0, "6L[/6<:v5W@88v", "6L[/6<:v5W@88v", 0);
      player0.next = null;
      player0.reset(false);
      String string0 = "`W+'.";
      // Undeclared exception!
      try { 
        MockURI.create("{nwrGo/0[Azrp");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal character in path at index 0: {nwrGo/0[Azrp
         //
         verifyException("java.net.URI", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player((-2646));
      player0.setDead();
      player0.getZ();
      player0.getY();
      player0.toString();
      player0.setDead((long) (-2646));
      player0.getName();
      player0.getPictureId();
      player0.setDead((-1L));
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-84);
      byteArray0[2] = (byte)117;
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.8493821196946767
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player();
      player0.gangStrength();
      player0.setDead(2189L);
      player0.gangStrength();
      player0.isConnected();
      player0.getY();
      player0.setX(0.0F);
      player0.setZ(0.0F);
      player0.isDead();
      float float0 = player0.getZ();
      assertEquals(2189L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String string0 = "module.ModuleBrowserDialod$ModuleFilter";
      Player player0 = new Player(5194, "~XB{^", "module.ModuleBrowserDialod$ModuleFilter", 5194, (-35));
      player0.reset(true);
      try { 
        MockURI.URI("module.ModuleBrowserDialod$ModuleFilter", "module.ModuleBrowserDialod$ModuleFilter", "~XB{^", "~XB{^");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: module.ModuleBrowserDialod$ModuleFilter://module.ModuleBrowserDialod$ModuleFilter~XB%7B%5E#~XB%7B%5E
         //
         verifyException("java.net.URI", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player((-5), "state.Party", "", (-5), (-2220));
      Player player1 = new Player((short)4919, "state.Party", "", (-2220));
      player0.remove(player1);
      assertEquals(1, player1.getStrength());
      assertEquals((-2220), player1.getPictureId());
      
      player0.getPictureId();
      float float0 = player0.getX();
      assertTrue(player0.isConnected());
      assertEquals((-2220), player0.getStrength());
      assertEquals(10.0F, float0, 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("state.Party", player0.getIP());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player(0, ".*[.]class$", ".*[.]class$", 0, 0);
      player0.setY(0);
      player0.getSubparty();
      Party party0 = player0.boss;
      player0.add((Party) null);
      Player player1 = new Player((-452), "URUtq+wt\"dV", "WF;9lg>zfU7\" ", (short)4919, 319);
      player0.next = (Party) player1;
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0);
      player0.getPictureId();
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player(3, "state.Party", "", 3, (-2220));
      int int0 = player0.getPictureId();
      assertEquals((-2220), player0.getStrength());
      assertEquals(3, int0);
      assertEquals("state.Party", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player(1212, "gc&\\HH}", "gc&\\HH}", (-2260));
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)41;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)12;
      byteArray0[6] = (byte) (-38);
      byteArray0[7] = (byte) (-58);
      player0.unpack(byteArray0);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-2260), player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player(822);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-97);
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte) (-10);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte) (-55);
      byteArray0[5] = (byte) (-3);
      byteArray0[6] = (byte)69;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0, 822);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player822", player0.toString());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player(1217, "", "Pt;%ClXJxe}^2R3", (-19126));
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertTrue(player0.isConnected());
      assertEquals((-19126), player0.getPictureId());
      assertFalse(boolean0);
      assertEquals(1, player0.getStrength());
      assertEquals("", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String string0 = "~XB{^";
      Player player0 = new Player(5194, "~XB{^", "~XB{^", 5194, (-35));
      Party party0 = player0.gangBoss();
      Player player1 = new Player(1);
      player0.isJoinOK(player1, false);
      player0.boss = party0;
      try { 
        MockURI.URI("~XB{^", "~XB{^", "~XB{^", "~XB{^");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: ~XB{^://~XB{^~XB%7B%5E#~XB%7B%5E
         //
         verifyException("java.net.URI", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{nwrGo/0[Azrp");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{nwrGo/0[Azrp");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":!2");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "KUsFvw/!vi0(");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      Player player0 = new Player(1025, "{nwrGo/0[Azrp", (String) null, 1025);
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      float float1 = player0.getZ();
      assertTrue(player0.isConnected());
      assertEquals(0.0F, float1, 0.01F);
      assertEquals(1025, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{6P%b1;;");
      Player player0 = new Player(4919, ".0q=FQA", 4919);
      player0.toString();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      System.setCurrentTimeMillis(5);
      System.setCurrentTimeMillis(5);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Player player0 = new Player(5, "module.ModuleBrowserDialog$ModuleFilter", 1);
      int int0 = player0.type();
      assertEquals(1, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(5, int0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      String string0 = "~Xf@m>GB{^";
      Player player0 = new Player();
      Party party0 = player0.boss;
      player0.head = null;
      player0.add((Party) null);
      player0.setConnected(false);
      try { 
        MockURI.URI("~Xf@m>GB{^", "~Xf@m>GB{^", "~Xf@m>GB{^", "~Xf@m>GB{^");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: ~Xf@m>GB{^://~Xf@m>GB{^~Xf@m%3EGB%7B%5E#~Xf@m%3EGB%7B%5E
         //
         verifyException("java.net.URI", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      String string0 = "~Xf@m>GB{^";
      Player player0 = new Player();
      player0.setMoney(10.0F);
      try { 
        MockURI.URI("~Xf@m>GB{^", "~Xf@m>GB{^", "~Xf@m>GB{^", "~Xf@m>GB{^");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: ~Xf@m>GB{^://~Xf@m>GB{^~Xf@m%3EGB%7B%5E#~Xf@m%3EGB%7B%5E
         //
         verifyException("java.net.URI", e);
      }
  }
}
