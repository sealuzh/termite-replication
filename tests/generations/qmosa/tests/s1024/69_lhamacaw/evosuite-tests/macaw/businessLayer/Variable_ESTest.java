/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 10:56:29 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.List;
import java.util.function.Consumer;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.1475837365690835
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      User user0 = new User("bv7y<4*j5E", "bv7y<4*j5E");
      user0.setCity("-`SXoTQ7%<~c|*");
      user0.setAddressLine2("4a");
      user0.setUserID("4a");
      user0.setLastName("bv7y<4*j5E");
      user0.setStatus("bv7y<4*j5E");
      User user1 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user1.setPostCode("4a");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-1994091956));
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user2 = new User("JfA2ZgFy]q!L", "JfA2ZgFy]q!L");
      user0.setPassword("JfA2ZgFy]q!L");
      user1.setAddressLine2("rmA#bT%2 9a");
      user2.setCity("&$jv$r/7@");
      user0.setAffiliation("4a");
      user2.setStatus((String) null);
      user0.setCity("user-status.savChaLges");
      user0.setCounty("ZX</.3]Nqwiq");
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, derivedVariable0);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.785694393057566
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("variable.isCleaned.saveChanges.changedToNotClean", "variable.isCleaned.saveChanges.changedToNotClean");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getForm();
      rawVariable0.setQuestionNumber("NO_SUPPORTING_DOCUMENT_FILTER");
      rawVariable0.setAlias("UNABLE_TO_CHECK_USER_EXISTS");
      rawVariable0.getQuestionNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.7504376155314803
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription((String) null);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getOntologyTerms();
      String string0 = derivedVariable0.getCleaningDescription();
      assertNull(string0);
      
      derivedVariable0.clone();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.82537498038621
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.setCleaned(true);
      rawVariable0.setName("8z");
      User user0 = new User("8z", "");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("8z", rawVariable0.getDisplayName());
      
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      linkedList0.add(ontologyTerm0);
      linkedList0.listIterator();
      LinkedList<OntologyTerm> linkedList1 = new LinkedList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      linkedList0.add(ontologyTerm1);
      linkedList0.add(ontologyTerm1);
      LinkedList<OntologyTerm> linkedList2 = new LinkedList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      LinkedList<OntologyTerm> linkedList3 = new LinkedList<OntologyTerm>();
      linkedList0.add(ontologyTerm2);
      LinkedList<OntologyTerm> linkedList4 = new LinkedList<OntologyTerm>();
      LinkedList<OntologyTerm> linkedList5 = new LinkedList<OntologyTerm>();
      linkedList5.spliterator();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      LinkedList<OntologyTerm> linkedList6 = new LinkedList<OntologyTerm>();
      linkedList1.add(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>(linkedList3);
      User user1 = new User();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      rawVariable1.containsSupportingDocument(supportingDocument0);
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.0977122171201152
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      User user0 = new User();
      user0.setPostCode(":W%d=*Y>tw");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user0.setPostCode("variable.notes.label");
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user1 = new User();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList1 = RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable1);
      assertEquals(0, arrayList1.size());
      
      user1.setPassword("variable.questionNumber.label");
      User user2 = new User();
      user2.setAddressLine2("variable.notes.label");
      user0.setStatus("7RY!GO$yJ+(");
      user2.setCounty("UNABLE_TO_GET_VALUE_LABELS");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user2, derivedVariable0, derivedVariable0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setNewRecord(true);
      ontologyTerm0.setIdentifier(629);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable1.containsOntologyTerm(ontologyTerm4);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm3);
      assertFalse(boolean0);
      
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      rawVariable1.getCodeBookNumber();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.8980785733293697
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertFalse(arrayList0.isEmpty());
      
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList1);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList1.sort(comparator0);
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.getIdentifier();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      derivedVariable0.setName((String) null);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList2.forEach(consumer0);
      arrayList2.parallelStream();
      derivedVariable0.removeOntologyTerms(arrayList2);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      String string0 = derivedVariable0.getDisplayName();
      assertNull(string0);
      
      derivedVariable1.getSupportingDocuments();
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.clear();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-880));
      supportingDocument0.getDisplayName();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      User user0 = new User();
      user0.setFirstName("general.fieldValue.unknown");
      User user1 = new User();
      User user2 = new User();
      User user3 = new User();
      User user4 = new User((String) null, "user.affiliation.label");
      user4.setCounty("CAN=CEL");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertTrue(boolean0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.1521471532120247
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.setCleaned(true);
      rawVariable0.setName("");
      User user0 = new User("", (String) null);
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      arrayList0.add(supportingDocument0);
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.setColumnStart((String) null);
      user0.setAddressLine1("");
      User user1 = new User();
      User.checkValidUserIDField("");
      user0.setPassword((String) null);
      user1.setCounty((String) null);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      User user2 = new User();
      RawVariable.detectFieldChanges(user2, rawVariable0, rawVariable0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument2);
      rawVariable0.getFilePath();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel((String) null);
      User user3 = new User((String) null, "");
      User user4 = new User("Oo~LU9", "");
      user4.setPassword("");
      User user5 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, rawVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.959993082823579
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.setCleaned(true);
      rawVariable0.setName("8z");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      arrayList0.add(supportingDocument0);
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.setColumnStart("");
      User user1 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      arrayList0.add(supportingDocument2);
      SupportingDocument supportingDocument4 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument4);
      assertTrue(rawVariable0.isCleaned());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.624728496322497
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCleaningStatus();
      derivedVariable0.clone();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>(156);
      arrayList0.iterator();
      derivedVariable0.notes = "Unknown";
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getNotes();
      assertEquals("Unknown", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.308322129259889
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setPostCode("general.fieldValue.blank");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user0.setPostCode("general.fieldValue.blank");
      rawVariable0.setAlternativeVariable(derivedVariable0);
      user0.setIdentifier(2057);
      User user1 = new User();
      user1.setStatus((String) null);
      user0.setCounty("user.affiliation.label");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace("user.affiliation.label");
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm0.setIdentifier(2057);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>(arrayList0);
      rawVariable0.removeOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setIdentifier((-126));
      arrayList0.add(ontologyTerm2);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      arrayList0.add(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList2.add(ontologyTerm0);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList1.add(ontologyTerm4);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm5);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm8.getNameSpace());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.9487455628433286
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      rawVariable0.setIdentifier(2147483645);
      rawVariable0.setNotes("blank");
      ValueLabel.validateFields(valueLabel0);
      rawVariable0.setValueLabels(arrayList0);
      derivedVariable0.addValueLabel(valueLabel0);
      rawVariable0.getOntologyTerms();
      derivedVariable0.setCleaningStatus("blank");
      rawVariable0.getFilePath();
      rawVariable0.getForm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addValueLabel(valueLabel0);
      derivedVariable1.clone();
      derivedVariable1.hasSameDisplayName(derivedVariable0);
      rawVariable0.clone();
      derivedVariable0.getCategory();
      derivedVariable1.getValueLabels();
      rawVariable0.getDisplayName();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals(2147483645, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.019802231647596
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getFilePath();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user1 = new User();
      user1.setCounty("hRg&`0s");
      User user2 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getAlias();
      user0.setAddressLine1("");
      derivedVariable0.containsSourceVariable(derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable2.containsOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user1, rawVariable2, rawVariable1);
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.setAvailability("");
      RawVariable.detectFieldChanges(user2, rawVariable0, rawVariable3);
      rawVariable0.getDisplayName();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument1.clone();
      derivedVariable3.setCleaned(true);
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      try { 
        DerivedVariable.validateFields(derivedVariable3);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.6851309643957646
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      user0.setLastName("bv7y<4*j5E");
      user0.setStatus("bv7y<4*j5E");
      user0.setFirstName("bv7y<4*j5E");
      User user1 = new User();
      User user2 = new User("ZM-qiqNVmlp|R{Q+V", "ZM-qiqNVmlp|R{Q+V");
      user2.setCounty("SyT}lUwmroPrEHsF");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      User user3 = new User();
      ArrayList<MacawChangeEvent> arrayList1 = new ArrayList<MacawChangeEvent>();
      supportingDocument0.setFileName("]q\"L}wSXQrwO%$afS");
      arrayList0.ensureCapacity((-1952257859));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument0.clone();
      derivedVariable0.setCleaned(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user4 = new User();
      Variable.detectFieldChanges(user4, derivedVariable1, rawVariable0);
      derivedVariable0.isCleaned();
      derivedVariable0.getQuestionNumber();
      assertTrue(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      User user0 = new User();
      user0.setStatus("N^SZ");
      User.detectFieldChanges(user0, user0, user0);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getAlternativeVariable();
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.7783183644505427
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.setCleaned(true);
      rawVariable0.setName("8z");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      arrayList0.add(supportingDocument0);
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.setColumnStart("");
      User user1 = new User();
      user0.setPassword("Vm~#feE~v4J)_?");
      user0.setCounty(";#{Hbf");
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable0);
      User user2 = new User();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable1);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable1.setAlternativeVariable(rawVariable0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.clone();
      RawVariable rawVariable3 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.0401765061351447
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      User user0 = new User("", (String) null);
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      arrayList0.add(supportingDocument0);
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.setCleaningDescription("U7;@");
      rawVariable0.setColumnStart((String) null);
      User user1 = new User();
      user0.setPassword((String) null);
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      rawVariable0.getAvailability();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getFilePath();
      rawVariable0.getColumnStart();
      RawVariable rawVariable1 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.82537498038621
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.setCleaned(true);
      rawVariable0.setName("8z");
      User user0 = new User("", (String) null);
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      arrayList0.add(supportingDocument0);
      assertEquals("8z", rawVariable0.getDisplayName());
      
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      linkedList0.listIterator();
      LinkedList<OntologyTerm> linkedList1 = new LinkedList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      linkedList0.add(ontologyTerm0);
      linkedList0.add(ontologyTerm0);
      LinkedList<OntologyTerm> linkedList2 = new LinkedList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      LinkedList<OntologyTerm> linkedList3 = new LinkedList<OntologyTerm>();
      linkedList0.add(ontologyTerm1);
      LinkedList<OntologyTerm> linkedList4 = new LinkedList<OntologyTerm>();
      LinkedList<OntologyTerm> linkedList5 = new LinkedList<OntologyTerm>();
      linkedList5.spliterator();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      LinkedList<OntologyTerm> linkedList6 = new LinkedList<OntologyTerm>();
      linkedList1.add(ontologyTerm3);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>(linkedList3);
      User user1 = new User();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      boolean boolean0 = rawVariable1.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.695893718013999
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("b$10\"");
      rawVariable0.setNotes("l6Q[-bYDu3");
      rawVariable0.getCodeBookNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.isCoded();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setQuestionNumber("l6Q[-bYDu3");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.getSourceVariables();
      rawVariable0.setFilePath("M4a a{P:;@Q%METL");
      rawVariable0.clone();
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.isCoded();
      User user0 = new User();
      user0.setAddressLine1("");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.getAvailability();
      derivedVariable0.clone();
      assertEquals("l6Q[-bYDu3", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.718338850880901
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setLabel("general.error.promotesSecurityRisk");
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable1.questionNumber = "MWVA";
      derivedVariable0.getLabel();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getCleaningStatus();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.add((Variable) derivedVariable1);
      derivedVariable0.setSourceVariables(arrayList1);
      rawVariable0.getColumnStart();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      derivedVariable1.setCleaningStatus("general.error.promotesSecurityRisk");
      derivedVariable1.getValueLabels();
      derivedVariable1.getColumnEnd();
      derivedVariable1.hasSameDisplayName(derivedVariable0);
      RawVariable rawVariable2 = (RawVariable)rawVariable0.clone();
      rawVariable0.clone();
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable2);
      rawVariable1.cloneAttributes(rawVariable2);
      derivedVariable0.addSourceVariables(arrayList1);
      assertEquals("general.error.promotesSecurityRisk", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user1 = new User("a>]ji+6SY0af Z", "variabe.cleaningStatus.label");
      User.detectFieldChanges(user1, user1, user1);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.setIdentifier((-1884227406));
      rawVariable0.setAlternativeVariable(derivedVariable0);
      user0.setCounty("a>]ji+6SY0af Z");
      User user2 = new User();
      User user3 = new User("j%|", "user.lastName.saveChanges");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable1 = (DerivedVariable)rawVariable0.getAlternativeVariable();
      derivedVariable1.hasSameDisplayName(derivedVariable0);
      assertEquals("-1884227406", derivedVariable0.getDisplayItemIdentifier());
      assertEquals((-1884227406), derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.771127612177703
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("Unknown");
      rawVariable0.codeBookNumber = "@b!tTlxj!5_0";
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable0.getName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("@b!tTlxj!5_0", "Unknown");
      rawVariable0.setName("variable.questionNumber.label");
      user0.setPostCode("Vm~#fe@~v4J)_?");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable1.getCleaningDescription();
      derivedVariable1.getFilePath();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getNotes();
      rawVariable1.isCoded();
      derivedVariable0.getColumnStart();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable1);
      rawVariable1.getNotes();
      assertEquals("@b!tTlxj!5_0", rawVariable1.getCodeBookNumber());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.1931737420535486
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(false);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setName("bmnnk");
      User user0 = new User("-)!!rd2", "UNABLE_TO_FILTER_SUPPORTING_DOCUMENTS");
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.removeSupportingDocuments(arrayList1);
      rawVariable0.setColumnStart("+Rz*Q");
      user0.setAddressLine1("bmnnk");
      User user1 = new User();
      rawVariable2.setCategory("/+tOa:beeDN'$:vZ'L");
      user1.setPassword("UNABLE_TO_FILTER_SUPPORTING_DOCUMENTS");
      user0.setCounty("-)!!rd2");
      user1.setUserID("bmnnk");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable2);
      User user2 = new User("UNABLE_TO_FILTER_SUPPORTING_DOCUMENTS", "+Rz*Q");
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable2);
      assertEquals("+Rz*Q", rawVariable0.getColumnStart());
      
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.containsSupportingDocument(supportingDocument1);
      rawVariable1.getFilePath();
      RawVariable rawVariable4 = new RawVariable();
      rawVariable1.createVariableSummary();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      supportingDocument0.getDisplayName();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument1);
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "~";
      derivedVariable0.removeSourceVariable((Variable) null);
      String string0 = derivedVariable0.getFilePath();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", string0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getOntologyTerms();
      User user1 = new User();
      user0.setLastName("blank");
      user1.setStatus("variable.cleaningStatus.label");
      user1.setFirstName("variable.cleaningStatus.label");
      User user2 = new User();
      String string0 = "UNABLE_TO_CHECK_USER_EXISTS";
      User user3 = new User("UNABLE_TO_CHECK_USER_EXISTS", "blank");
      user0.setCounty("variable.questionNumber.label");
      User user4 = new User();
      RawVariable rawVariable1 = new RawVariable();
      user3.setPostCode("UNABLE_TO_GET_ALL_SUPPORTING_DOCUMENTS");
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "variable.questionNumber.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerm(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier((-1));
      derivedVariable0.createVariableSummary();
      derivedVariable0.getSourceVariables();
      assertEquals("-1", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.663704181251252
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("");
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList0.add(supportingDocument2);
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      arrayList0.remove((Object) macawChangeEvent0);
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      supportingDocument3.setDocumentCode("variable.cleaningStatus.label");
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      derivedVariable0.setCleaned(true);
      derivedVariable0.removeSupportingDocument(supportingDocument9);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.1380501687234124
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("dB[M$gG]'&X(qBS", "variable.availability.label");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.form = "variable.availability.label";
      derivedVariable1.getSourceVariables();
      derivedVariable1.createVariableSummary();
      RawVariable rawVariable0 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      String string0 = "bv7y<4*j5E";
      User user0 = new User("bv7y<4*j5E", "bv7y<4*j5E");
      user0.setLastName("bv7y<4*j5E");
      user0.setStatus("bv7y<4*j5E");
      User user1 = new User();
      user1.setStatus("bv7y<4*j5E");
      String string1 = "general.fieldValue.unknown";
      String string2 = "MWVA";
      user1.setFirstName("MWVA");
      User user2 = new User();
      String string3 = "ZM-qiqNVmlp|R{Q+V";
      User user3 = new User("JfA2ZgFy]q!L", "JfA2ZgFy]q!L");
      user2.setCounty("MWVA");
      User user4 = new User();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.736982761732671
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.columnStart = "variable.questionNumber.label";
      derivedVariable0.columnEnd = "variable.questionNumber.label";
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      User user0 = new User("variable.questionNumber.label", "DUPLICATE_AVAILABILITY_STATE");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable3, derivedVariable2);
      User user1 = new User();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable1, derivedVariable0);
      derivedVariable0.getSourceVariables();
      assertEquals("variable.questionNumber.label", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.568413258053965
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(false);
      rawVariable0.setName("bmnk");
      User user0 = new User("-)!!rd2", "UNABLE_TO_FILTER_SUPPORTING_DOCUMENTS");
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList2 = rawVariable0.getSupportingDocuments();
      arrayList2.add(supportingDocument0);
      User user1 = new User();
      User user2 = new User("B", "JfA2ZgFy]q!L");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument2);
      ArrayList<String> arrayList3 = Variable.validateFields(rawVariable0);
      assertEquals("bmnk", rawVariable0.getName());
      assertEquals(0, arrayList3.size());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.088984713404248
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.setAvailability("");
      rawVariable0.setCleaned(true);
      User user0 = new User("", (String) null);
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      arrayList0.add(supportingDocument0);
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.setColumnStart((String) null);
      User user1 = new User();
      user0.setPassword((String) null);
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      rawVariable0.getAvailability();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getFilePath();
      RawVariable rawVariable1 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.671370141384828
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable1);
      rawVariable0.setCategory("i ZwnQ*;_xFf");
      derivedVariable0.setCleaningDescription("NO_ONTOLOGY_TERM_FILTER");
      rawVariable0.getCleaningStatus();
      rawVariable0.clone();
      derivedVariable0.getCategory();
      derivedVariable0.setQuestionNumber("Unknown");
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        arrayList0.subList(1, 2554);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 2554
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.6989155386203247
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      user0.setLastName("blank");
      user0.setCounty("a>]ji+6SY0af Z");
      User user1 = new User();
      rawVariable0.cloneAttributes(derivedVariable0);
      user0.setCounty("user.affiliation.label");
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.2347178220285757
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(false);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setName("bmnk");
      User user0 = new User("-)!!rd2", "UNABLE_TO_FILTER_SUPPORTING_DOCUMENTS");
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.removeSupportingDocuments(arrayList1);
      rawVariable1.setColumnStart("valueLabel.isMissingValue.saveChanges");
      user0.setAddressLine1("-`SXoTQ7%<~c|*");
      User user1 = new User();
      user1.setPassword("-)!!rd2");
      user1.setCounty("-`SXoTQ7%<~c|*");
      User user2 = new User();
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable2);
      User user3 = new User();
      rawVariable0.setCodeBookNumber("Q|1 ");
      RawVariable.detectFieldChanges(user2, rawVariable1, rawVariable0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument0);
      rawVariable2.getFilePath();
      RawVariable rawVariable3 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      supportingDocument1.getDisplayName();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument1);
      rawVariable0.createVariableSummary();
      rawVariable2.containsSupportingDocument(supportingDocument2);
      rawVariable1.getSupportingDocuments();
      boolean boolean0 = rawVariable1.containsSupportingDocument(supportingDocument2);
      assertEquals("valueLabel.isMissingValue.saveChanges", rawVariable1.getColumnStart());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.6218996193725506
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getFilePath();
      derivedVariable0.addSupportingDocument((SupportingDocument) null);
      User user0 = new User();
      derivedVariable0.setIdentifier((-2075900857));
      user0.setAffiliation("G0m*$;R5&~<UJ");
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getForm();
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.499814992492946
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>(arrayList0);
      rawVariable0.removeOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      arrayList0.add(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList2.add(ontologyTerm0);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList1.add(ontologyTerm4);
      assertEquals(2, arrayList0.size());
      
      arrayList2.add(ontologyTerm1);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm5);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      rawVariable0.removeOntologyTerms(arrayList2);
      rawVariable0.getColumnEnd();
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.setCounty("UNABLE_TO_GET_VARIABLE_NAMES");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      User user1 = new User("E]>", "tk)DjGPkC]`#H");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.5543914566255155
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("62NoF%s@%c", "variable.columnStart.label");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.form = "S9hLEP\"xnrPI/#OV,/";
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      System.setCurrentTimeMillis((-265L));
      rawVariable0.getForm();
      assertEquals("S9hLEP\"xnrPI/#OV,/", rawVariable0.getForm());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.041560533833002
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList1 = new ArrayList<MacawChangeEvent>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument1);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      rawVariable1.removeSupportingDocuments(arrayList3);
      rawVariable0.setColumnStart("macaw.system.MacawMessages");
      user0.setAddressLine1("user.city.label");
      User user1 = new User();
      user0.setPassword("l6Q[-bYDu3");
      user1.setCounty("R0");
      User user2 = new User();
      Variable.detectChangesInAlternativeVariable(user2, rawVariable1, rawVariable1);
      User user3 = new User();
      RawVariable.detectFieldChanges(user2, rawVariable0, rawVariable1);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument1);
      rawVariable0.getFilePath();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.createVariableSummary();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      supportingDocument2.getDisplayName();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument2);
      rawVariable0.createVariableSummary();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("macaw.system.MacawMessages", rawVariable0.getColumnStart());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.7852027308481446
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      derivedVariable0.getFilePath();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable1.getFilePath();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.66448821243766
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getOntologyTerms();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable0.setForm("variable.notes.label");
      RawVariable rawVariable2 = (RawVariable)rawVariable0.clone();
      rawVariable0.getCodeBookNumber();
      rawVariable0.getAlias();
      User user0 = new User("variable.label.label", ">e");
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable2);
      assertEquals("variable.notes.label", rawVariable0.getForm());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.82537498038621
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.setYear("MWVA");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.addSupportingDocument(supportingDocument0);
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable1.setQuestionNumber("-2IhQ");
      user0.setAffiliation("N5ul5$`>'q@|S6\"cx");
      derivedVariable1.getSupportingDocuments();
      assertEquals("-2IhQ", derivedVariable1.getQuestionNumber());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.8790891801877403
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.columnStart = "variable.questionNumber.label";
      derivedVariable0.columnEnd = "variable.questionNumber.label";
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.ensureCapacity((-1864));
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getAvailability();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable2);
      derivedVariable1.form = "0";
      derivedVariable0.getAlias();
      derivedVariable2.containsSourceVariable(derivedVariable0);
      derivedVariable1.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.getColumnStart();
      assertEquals("variable.questionNumber.label", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.3653496399444975
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.containsSourceVariable(derivedVariable1);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.clone();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      assertFalse(arrayList0.contains(ontologyTerm0));
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.6682829980805476
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      User user0 = new User();
      user0.setLastName("bv7y<4*j5E");
      user0.setStatus("bv7y<4*j5E");
      user0.setFirstName("general.fieldValue.unknown");
      User user1 = new User();
      rawVariable0.notes = "JfA2ZgFy]q!L";
      User user2 = new User("ZM-qiqNVmlp|R{Q+V", "ZM-qiqNVmlp|R{Q+V");
      user2.setCounty("SyT}lUwmroPrEHsF");
      User user3 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      User user4 = new User("general.fieldValue.unknown", "user.affiliation.label");
      user4.setCounty("ZM-qiqNVmlp|R{Q+V");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable.detectFieldChanges(user3, rawVariable0, rawVariable1);
      rawVariable0.containsSupportingDocument(supportingDocument1);
      User user5 = new User("NON_EXISTENT_AVAILABILITY_STATE", "Unknown");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
      assertEquals("JfA2ZgFy]q!L", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.852140740384332
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      supportingDocument0.setFilePath("9,P{\"fR");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getFilePath();
      supportingDocument0.setTitle((String) null);
      derivedVariable1.setQuestionNumber("variable.isCoded.label");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.setCleaningDescription("variable.isCoded.label");
      derivedVariable0.getLabel();
      assertEquals("variable.isCoded.label", derivedVariable0.getCleaningDescription());
      
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocuments(arrayList1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getForm();
      boolean boolean0 = derivedVariable2.isNewRecord();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.6930121983106288
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.codeBookNumber = null;
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.setAlias("}Bl<M");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setForm("VALUE_LABEL");
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      LinkedList<DerivedVariable> linkedList0 = new LinkedList<DerivedVariable>();
      linkedList0.removeFirstOccurrence(arrayList0);
      arrayList0.addAll((Collection<? extends Variable>) linkedList0);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.questionNumber = "({/Vr";
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.createVariableSummary();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.5773139552883233
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDescription("UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_EXISTS");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(arrayList0);
      arrayList0.add(supportingDocument0);
      arrayList1.add(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList0.add(supportingDocument2);
      arrayList1.add(supportingDocument2);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument5 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument4);
      assertTrue(boolean0);
      
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.setCategory("CQj?R8LKH!$|d");
      derivedVariable0.getColumnEnd();
      derivedVariable0.setCleaned(true);
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.isNewRecord();
      derivedVariable0.getValueLabels();
      int int0 = derivedVariable0.getIdentifier();
      assertEquals("CQj?R8LKH!$|d", derivedVariable0.getCategory());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCleaningStatus();
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.setCleaningDescription("Unknown");
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.setCoded(true);
      derivedVariable0.getColumnEnd();
      derivedVariable0.getCategory();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setCoded(false);
      derivedVariable0.removeSourceVariables(arrayList0);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(3019L);
      derivedVariable0.getCleaningDescription();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.7119336862547123
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "";
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      String string1 = "bv7y<4*j5E";
      String string2 = "\\yj4";
      arrayList0.add(supportingDocument0);
      User user0 = new User("bv7y<4*j5E", "yj4");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.1488608757772574
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setPostCode("general.fieldValue.blank");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("general.fieldValue.blank");
      user0.setPostCode("general.fieldValue.blank");
      rawVariable0.setAlternativeVariable(derivedVariable0);
      assertEquals("general.fieldValue.blank", derivedVariable0.getNotes());
      
      User user1 = new User();
      user1.setPassword("l6Q[-bYDu3");
      user1.setAddressLine2("a>]ji+6SY0af Z");
      user1.setStatus((String) null);
      rawVariable0.columnEnd = "Unknown";
      user0.setCounty("user.affiliation.label");
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable0);
      User user2 = new User("DUPLICATE_VALUE_LABEL", "BAJ");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.getAlternativeVariable();
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.852140740384332
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable1.removeOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("UNABLE_TO_GET_CATEGORY_NAME");
      arrayList0.add(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      rawVariable1.updateOntologyTerm(ontologyTerm2);
      arrayList2.add(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setOntologyName("variable.alternativeVariable.label");
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      arrayList4.add(ontologyTerm0);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      rawVariable0.setColumnStart("variable.saveChanges.valueChanged");
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList5 = new ArrayList<OntologyTerm>();
      rawVariable0.containsOntologyTerm(ontologyTerm7);
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      rawVariable1.getName();
      rawVariable0.getColumnEnd();
      rawVariable0.getAlias();
      assertEquals("variable.saveChanges.valueChanged", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.105879217605106
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeSupportingDocuments(arrayList0);
      rawVariable0.setColumnStart("+Rz*Q");
      User user0 = new User();
      user0.setAddressLine1("+Rz*Q");
      User user1 = new User();
      user0.setPassword("G");
      user1.setCounty("G");
      User user2 = new User();
      Variable.detectChangesInAlternativeVariable(user2, rawVariable1, rawVariable1);
      User user3 = new User();
      RawVariable.detectFieldChanges(user3, rawVariable0, rawVariable0);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      RawVariable rawVariable2 = new RawVariable();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument4);
      rawVariable2.getFilePath();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.createVariableSummary();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      supportingDocument1.getDisplayName();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.9938645907671435
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      User user0 = new User();
      user0.setLastName("bv7y<4*j5E");
      user0.setStatus("bv7y<4*j5E");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = (SupportingDocument)supportingDocument1.clone();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      supportingDocument3.setDocumentCode("blank");
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      supportingDocument8.clone();
      derivedVariable0.setCleaned(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeSupportingDocument(supportingDocument7);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.createVariableSummary();
      rawVariable1.columnEnd = "/";
      System.setCurrentTimeMillis(5952L);
      rawVariable0.getSupportingDocuments();
      user0.setPassword((String) null);
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("/", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getAlias());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.4340181248336115
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.columnStart = "variable.questionNumber.label";
      derivedVariable0.columnEnd = "variable.questionNumber.label";
      derivedVariable0.createVariableSummary();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm3);
      assertEquals(2, arrayList0.size());
      
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm6.setTerm("[b8");
      ontologyTerm1.setNewRecord(true);
      rawVariable0.addOntologyTerm(ontologyTerm4);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      rawVariable0.containsOntologyTerm(ontologyTerm6);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getCodeBookNumber();
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>(arrayList0);
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList1.add(ontologyTerm3);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList1.add(ontologyTerm4);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm2);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList3 = rawVariable1.getOntologyTerms();
      arrayList3.add(ontologyTerm1);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable1.addOntologyTerm(ontologyTerm1);
      rawVariable1.setCategory("l6Q[-bYDu3");
      assertEquals("l6Q[-bYDu3", rawVariable1.getCategory());
      
      System.setCurrentTimeMillis(0L);
      rawVariable0.getForm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.3597473990481395
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>(arrayList0);
      rawVariable0.removeOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      arrayList0.add(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList2.add(ontologyTerm0);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList1.add(ontologyTerm4);
      assertTrue(arrayList0.contains(ontologyTerm0));
      
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm5);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      derivedVariable0.getYear();
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.80563593490601
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCoded(true);
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      rawVariable1.form = "Fv^[qsO|~\r";
      rawVariable1.questionNumber = "_ydT``GkC";
      user0.setCity("");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable2);
      rawVariable0.hasSameDisplayName(rawVariable1);
      rawVariable0.getDisplayItemIdentifier();
      rawVariable1.setIsNewRecord(true);
      assertEquals("Fv^[qsO|~\r", rawVariable1.getForm());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>(arrayList0);
      rawVariable0.removeOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList1.add(ontologyTerm1);
      arrayList0.addAll((Collection<? extends OntologyTerm>) arrayList1);
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.1488608757772574
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.setPostCode("general.fieldValue.blank");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      user0.setCounty("a>]ji+6SY0af Z");
      rawVariable0.setFilePath("F1$&()jA?ppowQ");
      User user1 = new User();
      user0.setCounty("user.affiliation.label");
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable0);
      User user2 = new User("DUPLICATE_VALUE_LABEL", "BAJ");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.getAlternativeVariable();
      assertEquals("F1$&()jA?ppowQ", rawVariable0.getFilePath());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.4869548922107656
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList0.add(supportingDocument2);
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      supportingDocument3.setDocumentCode("variable.cleaningStatus.label");
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument9);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.814628403296218
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getFilePath();
      supportingDocument0.setTitle("");
      derivedVariable0.setQuestionNumber("");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.setCleaningDescription("UNABLE_TO_UPDATE_DERIVED_VARIABLE");
      derivedVariable0.getLabel();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      arrayList1.add(supportingDocument3);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList2);
      derivedVariable0.getForm();
      derivedVariable0.getSourceVariables();
      derivedVariable0.getYear();
      derivedVariable0.clone();
      assertEquals("UNABLE_TO_UPDATE_DERIVED_VARIABLE", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.665708904138292
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      User user0 = new User();
      user0.setLastName("bv7y<4*j5E");
      user0.setFirstName("general.fieldValue.unknown");
      User user1 = new User();
      rawVariable0.questionNumber = "bv7y<4*j5E";
      rawVariable0.notes = "JfA2ZgFy]q!L";
      User user2 = new User("ZM-qiqNVmlp|R{Q+V", "ZM-qiqNVmlp|R{Q+V");
      user2.setCounty("SyT}lUwmroPrEHsF");
      User user3 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      User user4 = new User("general.fieldValue.unknown", "user.affiliation.label");
      user4.setCounty("ZM-qiqNVmlp|R{Q+V");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable.detectFieldChanges(user3, rawVariable0, rawVariable1);
      rawVariable0.containsSupportingDocument(supportingDocument1);
      User user5 = new User("NON_EXISTENT_AVAILABILITY_STATE", "Unknown");
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1357L);
      rawVariable1.getAvailability();
      boolean boolean0 = rawVariable1.containsSupportingDocument(supportingDocument1);
      assertEquals("JfA2ZgFy]q!L", rawVariable1.getNotes());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.7905828621222337
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.setCleaned(true);
      rawVariable0.setName("8z");
      User user0 = new User("", (String) null);
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      user0.setAddressLine2("8z");
      arrayList0.add(supportingDocument0);
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.setColumnStart("");
      User user1 = new User();
      user0.setCounty("UNABLE_TO_FILTER_SUPPORTING_DOCUMENTS");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      User user2 = new User();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      rawVariable1.containsSupportingDocument(supportingDocument0);
      rawVariable1.setAlternativeVariable(rawVariable0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.clone();
      rawVariable2.getFilePath();
      RawVariable rawVariable3 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "~";
      derivedVariable0.setFilePath("~");
      derivedVariable0.removeSourceVariable((Variable) null);
      derivedVariable0.getFilePath();
      assertEquals("~", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setNewRecord(true);
      arrayList1.add(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      arrayList0.add(ontologyTerm2);
      rawVariable0.setColumnEnd((String) null);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm0.setOntologyName("plCh-%nO;Eg(;Njp@");
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm5);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      rawVariable0.containsOntologyTerm(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList5 = new ArrayList<OntologyTerm>();
      assertFalse(arrayList5.equals((Object)arrayList1));
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.7478641359161475
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-1));
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User("lha.mrc.ac.uk:LHA", "lha.mrc.ac.uk:LHA");
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel0);
      valueLabel0.setLabel("}`");
      valueLabel0.setIdentifier(1219);
      valueLabel0.setLabel("user.affiliation.label");
      valueLabel0.setValue("user.affiliation.label");
      rawVariable0.setIsNewRecord(false);
      ValueLabel.validateFields((ValueLabel) null);
      valueLabel0.setLabel("opGth");
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.clone();
      rawVariable0.getIdentifier();
      rawVariable0.setName("user.affiliation.label");
      rawVariable0.getDisplayName();
      rawVariable0.addValueLabel((ValueLabel) null);
      assertEquals("-1", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      System.setCurrentTimeMillis(0L);
      derivedVariable0.getLabel();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>(linkedList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm2.setNewRecord(true);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      arrayList0.add((OntologyTerm) null);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm4.setOntologyName("b$10\"");
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm5);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm(ontologyTerm11);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.2827174188993857
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      User user0 = new User("bv7y<4*j5E", "bv7y<4*j5E");
      user0.setCity("-`SXoTQ7%<~c|*");
      user0.setAddressLine2("4a");
      user0.setUserID("4a");
      user0.setLastName("bv7y<4*j5E");
      user0.setStatus("bv7y<4*j5E");
      User user1 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user1.setPostCode("4a");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user2 = new User("JfA2ZgFy]q!L", "JfA2ZgFy]q!L");
      user0.setPassword("JfA2ZgFy]q!L");
      user1.setAddressLine2("rmA#bT%2 9a");
      user2.setCity("3&$jv$re/7@");
      user0.setAffiliation("4a");
      user2.setStatus((String) null);
      user0.setCity("user-status.savChaLges");
      derivedVariable0.setAvailability((String) null);
      user0.setCounty("ZX</.3]Nqwiq");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, rawVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(0L);
      rawVariable0.getYear();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.1488608757772574
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.setPostCode("general.fieldValue.blank");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "b$10\"";
      user0.setPostCode("general.fieldValue.blank");
      rawVariable0.setAlternativeVariable(derivedVariable0);
      user0.setCounty("a>]ji+6SY0af Z");
      User user1 = new User();
      user1.setStatus((String) null);
      user0.setCounty("user.affiliation.label");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertNotNull(macawChangeEvent0);
      
      User user2 = new User("DUPLICATE_VALUE_LABEL", "BAJ");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.getAlternativeVariable();
      boolean boolean0 = rawVariable0.isCoded();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlias("variable.questionNumber.label");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.containsSourceVariable(derivedVariable0);
      assertEquals("variable.questionNumber.label", derivedVariable0.getAlias());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.6601609159707396
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>(arrayList0);
      rawVariable0.removeOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.setIdentifier(129);
      arrayList1.add(ontologyTerm0);
      arrayList0.add(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList2.addAll((Collection<? extends OntologyTerm>) arrayList1);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      LinkedList<OntologyTerm> linkedList1 = new LinkedList<OntologyTerm>();
      linkedList0.listIterator();
      LinkedList<OntologyTerm> linkedList2 = new LinkedList<OntologyTerm>();
      linkedList2.add(ontologyTerm2);
      linkedList2.add(ontologyTerm0);
      LinkedList<OntologyTerm> linkedList3 = new LinkedList<OntologyTerm>();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      linkedList3.add(ontologyTerm2);
      LinkedList<OntologyTerm> linkedList4 = new LinkedList<OntologyTerm>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      linkedList1.add(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>(arrayList2);
      User user0 = new User();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals(129, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.834150161805991
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      user0.setCounty("a>]ji+6SY0af Z");
      User user1 = new User();
      user0.setCounty("user.affiliation.label");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertNotNull(macawChangeEvent0);
      
      User user2 = new User("DUPLICATE_VALUE_LABEL", "b$10\"");
      user1.setPhone("variable.questionNumber.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user2, derivedVariable0, derivedVariable0);
      assertEquals(0, arrayList0.size());
      
      boolean boolean0 = derivedVariable1.isCleaned();
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(boolean0);
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      User user0 = new User("bv7y<4*j5E", "bv7y<4*j5E");
      user0.setCity("-`SXoTQ7%<~c|*");
      user0.setAddressLine2("4a");
      user0.setUserID("4a");
      user0.setLastName("bv7y<4*j5E");
      user0.setStatus("bv7y<4*j5E");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.add((SupportingDocument) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add((SupportingDocument) null);
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      arrayList1.add(supportingDocument2);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.3597473990481395
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList2.add(ontologyTerm0);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      rawVariable0.setIsNewRecord(false);
      arrayList1.add(ontologyTerm4);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setTerm("variable.label.label");
      rawVariable0.addOntologyTerm(ontologyTerm5);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      assertFalse(arrayList3.contains(ontologyTerm1));
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("NON_EXISTENT_ALIAS_FILE_PATH");
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.setSupportingDocuments(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>(linkedList0);
      derivedVariable0.columnEnd = "6m%p4!Jp9W!";
      User user0 = new User("DUPLICATE_SUPPORTING_DOCUMENT", "dB[M$gG]'&X(qBS");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.3105624464720997
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm2);
      assertFalse(arrayList0.contains(ontologyTerm1));
      
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm4);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.getAlias();
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      arrayList0.retainAll(linkedList0);
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      arrayList0.add(valueLabel0);
      rawVariable0.setName("user.affiliation.label");
      arrayList0.trimToSize();
      arrayList0.add(valueLabel0);
      arrayList0.add(valueLabel0);
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.setCodeBookNumber("user.affiliation.label");
      rawVariable0.setQuestionNumber("user.affiliation.label");
      rawVariable0.setCleaningDescription((String) null);
      rawVariable0.getCodeBookNumber();
      rawVariable0.getAlias();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      assertEquals("user.affiliation.label", rawVariable0.getName());
      
      rawVariable1.getCodeBookNumber();
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.5545558491949714
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("bv7y<4*j5E", "bv7y<4*j5E");
      user0.setLastName("bv7y<4*j5E");
      user0.setStatus("bv7y<4*j5E");
      User user1 = new User("bv7y<4*j5E", "JfA2ZgFy]q!L");
      user1.setAddressLine2("JfA2ZgFy]q!L");
      User.checkValidUserIDField("sGAN0Heg");
      user1.setUserID("bv7y<4*j5E");
      User user2 = new User("Y^O(+3VZQ+s/>6", "JfA2ZgFy]q!L");
      user0.setAddressLine1("JfA2ZgFy]q!L");
      User user3 = new User();
      User user4 = new User("UNABLE_TO_GET_CLEANING_STATES", "bv7y<4*j5E");
      user3.setPostCode("");
      User user5 = new User();
      user5.setCounty("Op}%M?hiQ0;*8>F");
      User user6 = new User();
      user3.setPhone("bv7y<4*j5E");
      User user7 = new User("JfA2ZgFy]q!L", "Y^O(+3VZQ+s/>6");
      user5.setFirstName("Y^O(+3VZQ+s/>6");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user8 = new User("JL-;b;Oz:KB", "");
      derivedVariable0.questionNumber = "Op}%M?hiQ0;*8>F";
      user3.setPassword("B[iQM,}DRmKnKp");
      Variable.detectFieldChanges(user5, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertEquals("Op}%M?hiQ0;*8>F", derivedVariable0.getQuestionNumber());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.969849579660301
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>(arrayList0);
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList1.add(ontologyTerm3);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      arrayList0.add(ontologyTerm2);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      arrayList2.add(ontologyTerm5);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      arrayList2.add(ontologyTerm3);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      rawVariable0.getDisplayItemIdentifier();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("0");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getQuestionNumber();
      assertEquals("0", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.711933686254712
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      User user0 = new User();
      user0.setLastName("bv7y<4*j5E");
      user0.setStatus("bv7y<4*j5E");
      user0.setFirstName("general.fieldValue.unknown");
      User user1 = new User();
      rawVariable0.notes = "JfA2ZgFy]q!L";
      User user2 = new User("ZM-qiqNVmlp|R{Q+V", "ZM-qiqNVmlp|R{Q+V");
      user2.setCounty("CANCEL");
      User user3 = new User();
      User user4 = new User("general.fieldValue.unknown", "user.affiliation.label");
      user4.setCounty("ZM-qiqNVmlp|R{Q+V");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      RawVariable.detectFieldChanges(user4, rawVariable0, rawVariable0);
      rawVariable0.containsSupportingDocument(supportingDocument2);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.getLabel();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.4553949936248007
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>(arrayList0);
      rawVariable0.removeOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      arrayList0.add(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      ArrayList<ValueLabel> arrayList3 = rawVariable0.getValueLabels();
      arrayList2.containsAll(arrayList3);
      arrayList2.add(ontologyTerm0);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList1.add(ontologyTerm4);
      assertEquals(2, arrayList0.size());
      
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm5);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      rawVariable0.updateOntologyTerm(ontologyTerm5);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.554218296452355
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("bv7y<4*j5E", "bv7y<4*j5E");
      user0.setLastName("bv7y<4*j5E");
      user0.setStatus("bv7y<4*j5E");
      User user1 = new User();
      User user2 = new User("bv7y<4*j5E", "w4Q%ic'");
      user0.setUserID("variable.name.label");
      User user3 = new User("bv7y<4*j5E", "JYoX]");
      user3.setAddressLine1("IU&wIU>fL");
      User user4 = new User();
      User user5 = new User("MWVA", "w4Q%ic'");
      user0.setCounty("variable.name.label");
      User user6 = new User();
      User user7 = new User("JYoX]", "/;");
      user1.setCounty("variable.saveChanges.valueChanged");
      User user8 = new User();
      user1.setPhone("/;");
      User user9 = new User("`m", "variable.columnStart.label");
      user9.setFirstName("");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user10 = new User("MWVA", "`m");
      user4.setPassword("_;}*=?v)[iAsf;-5.%");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user10, rawVariable0, derivedVariable0);
      assertTrue(arrayList1.isEmpty());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.805383313963734
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.codeBookNumber = "variable.cleaningStatus.label";
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList1);
      rawVariable0.getYear();
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      System.setCurrentTimeMillis(1400L);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("bvY7y<4*j5E", "bvY7y<4*j5E");
      user0.setAddressLine1("L");
      user0.setLastName("bvY7y<4*j5E");
      User user1 = new User();
      User user2 = new User("bvY7y<4*j5E", "w4Q%ic'");
      user0.setUserID("variable.name.label");
      User user3 = new User("bvY7y<4*j5E", "JYoX]");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setOntologyName("variable.name.label");
      derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList2.add(ontologyTerm3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.containsOntologyTerm(ontologyTerm3);
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      assertFalse(arrayList4.equals((Object)arrayList2));
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.9602574582366654
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace("0q:N*zywkjq;92siG");
      arrayList0.add(ontologyTerm1);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList2.add(supportingDocument1);
      rawVariable0.addSupportingDocuments(arrayList2);
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      arrayList3.add(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm4);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      arrayList1.add(ontologyTerm5);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm6);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList5 = new ArrayList<OntologyTerm>();
      assertFalse(arrayList5.contains(ontologyTerm8));
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setNewRecord(true);
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      rawVariable0.setOntologyTerms(arrayList0);
      arrayList0.add(ontologyTerm2);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm2.setOntologyName("plChJ%nO;Eg(;Njpc");
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      arrayList3.add(ontologyTerm5);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm7);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.5914980348569427
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("");
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList0.add(supportingDocument2);
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      supportingDocument5.setDocumentCode("");
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      derivedVariable0.setCleaned(false);
      derivedVariable0.removeSupportingDocument(supportingDocument7);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.8212255045191412
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      valueLabel0.setLabel((String) null);
      valueLabel0.setIdentifier((-1789569704));
      valueLabel0.setLabel("}Az.~(ONg-");
      valueLabel0.setValue((String) null);
      RawVariable rawVariable1 = new RawVariable();
      ValueLabel.validateFields(valueLabel0);
      valueLabel0.setLabel("'\"YY&Hnm8");
      rawVariable0.removeValueLabel((ValueLabel) null);
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = (RawVariable)rawVariable2.clone();
      assertEquals(0, rawVariable3.getIdentifier());
      assertEquals("Unknown", rawVariable3.getCleaningStatus());
      assertEquals("Unknown", rawVariable3.getCategory());
      assertEquals("Unknown", rawVariable3.getAvailability());
      
      rawVariable2.setCoded(false);
      rawVariable0.getIdentifier();
      rawVariable2.getDisplayName();
      rawVariable1.addValueLabel((ValueLabel) null);
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      User user0 = new User("bv7y<4*j5E", "bv7y<4*j5E");
      user0.setLastName("bv7y<4*j5E");
      user0.setStatus("bv7y<4*j5E");
      User user1 = new User("bv7y<4*j5E", "JfA2ZgFy]q!L");
      user1.setAddressLine2("JfA2ZgFy]q!L");
      User.checkValidUserIDField("sGAN0Heg");
      user1.setUserID("bv7y<4*j5E");
      User user2 = new User("Y^O(+3VZQ+s/>6", "JfA2ZgFy]q!L");
      user0.setAddressLine1("JfA2ZgFy]q!L");
      User user3 = new User();
      User user4 = new User("UNABLE_TO_GET_CLEANING_STTES", "bv7y<4*j5E");
      user3.setPostCode("");
      User user5 = new User();
      user5.setCounty("Op}%M?hiQ0;*8>F");
      User user6 = new User();
      user2.setAddressLine2("");
      user6.setStatus("b$10\"");
      user2.setCity(" Y7J{4f1G`G[");
      user0.setCounty("[ph7~Wu:~");
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user5, (Variable) null, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.6626721480467936
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>(arrayList0);
      rawVariable0.removeOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      arrayList1.addAll((Collection<? extends OntologyTerm>) arrayList0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      LinkedList<OntologyTerm> linkedList1 = new LinkedList<OntologyTerm>();
      linkedList0.listIterator();
      LinkedList<OntologyTerm> linkedList2 = new LinkedList<OntologyTerm>();
      linkedList2.add(ontologyTerm1);
      LinkedList<OntologyTerm> linkedList3 = new LinkedList<OntologyTerm>();
      linkedList3.add(ontologyTerm1);
      LinkedList<OntologyTerm> linkedList4 = new LinkedList<OntologyTerm>();
      linkedList3.spliterator();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.containsOntologyTerm(ontologyTerm0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.containsOntologyTerm(ontologyTerm2);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable2.setQuestionNumber("2e<OQZ+8xO,95m");
      derivedVariable0.removeOntologyTerms(arrayList0);
      assertEquals(1, arrayList0.size());
      
      rawVariable2.updateOntologyTerm(ontologyTerm4);
      derivedVariable0.getCodeBookNumber();
      rawVariable2.getAlternativeVariable();
      assertEquals("2e<OQZ+8xO,95m", rawVariable2.getQuestionNumber());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("variable.year.label");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("");
      rawVariable0.addValueLabel(valueLabel0);
      assertEquals("variable.year.label", rawVariable0.getForm());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.1475837365690835
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      User user0 = new User("bv7y<4*j5E", "bv7y<4*j5E");
      user0.setUserID("4a");
      user0.setLastName("bv7y<4*j5E");
      user0.setStatus("bv7y<4*j5E");
      User user1 = new User("bv7y<4*j5E", "JfA2ZgFy]q!L");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user1.setPostCode("4a");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user2 = new User("JfA2ZgFy]q!L", "JfA2ZgFy]q!L");
      user0.setPassword("JfA2ZgFy]q!L");
      user1.setAddressLine2("rmA#bT%2 9a");
      user2.setCity("3&$jv$re/7@");
      user0.setAffiliation("4a");
      derivedVariable0.setCodeBookNumber("JfA2ZgFy]q!L");
      user2.setStatus((String) null);
      user0.setCity("user.status.saveChaLges");
      user0.setCounty("ZX</.3]Nqwiq");
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, derivedVariable0);
      System.setCurrentTimeMillis((-1L));
      derivedVariable0.getSourceVariables();
      assertEquals("JfA2ZgFy]q!L", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.576943995983847
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      User user0 = new User();
      user0.setLastName("bv7y<4*j5E");
      user0.setStatus("bv7y<4*j5E");
      user0.setFirstName("general.fieldValue.unknown");
      User user1 = new User();
      rawVariable0.notes = "JfA2ZgFy]q!L";
      User user2 = new User("ZM-qiqNVmlp|R{Q+V", "ZM-qiqNVmlp|R{Q+V");
      user2.setCounty("SyT}lUwmroPrEHsF");
      User user3 = new User();
      rawVariable0.cloneAttributes(rawVariable0);
      User user4 = new User("general.fieldValue.unknown", "user.affiliation.label");
      user4.setCounty("ZM-qiqNVmlp|R{Q+V");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      User.detectFieldChanges(user4, user0, user2);
      rawVariable0.containsSupportingDocument(supportingDocument1);
      User user5 = new User("NON_EXISTENT_AVAILABILITY_STATE", "Unknown");
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.688514447186191
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.setLabel("0=oT37dr$");
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.createVariableSummary();
      derivedVariable0.isCoded();
      derivedVariable0.getDisplayName();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      User user0 = new User("bv7y<4*j5E", "bv7y<4*j5E");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setCleaningDescription("bv7y<4*j5E");
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList0.add(supportingDocument2);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      arrayList0.add(supportingDocument2);
      User user1 = new User("variable.questionNumber.label", "6wFYewY");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument1);
      int int0 = rawVariable0.getIdentifier();
      assertEquals("bv7y<4*j5E", rawVariable0.getCleaningDescription());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.7037071384514393
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      user0.setCounty("a>]ji+6SY0af Z");
      User user1 = new User();
      user0.setCounty("user.affiliation.label");
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable0);
      user1.setPhone("a>]ji+6SY0af Z");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      
      derivedVariable1.setCleaningStatus("macaw.system.MacawMessages");
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      derivedVariable1.isCleaned();
      derivedVariable1.cloneAttributes(derivedVariable0);
      assertEquals("macaw.system.MacawMessages", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.203456186693981
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>(arrayList0);
      rawVariable0.removeOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      arrayList0.add(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList2.addAll((Collection<? extends OntologyTerm>) arrayList1);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      LinkedList<OntologyTerm> linkedList1 = new LinkedList<OntologyTerm>();
      linkedList0.listIterator();
      LinkedList<OntologyTerm> linkedList2 = new LinkedList<OntologyTerm>();
      linkedList2.add(ontologyTerm2);
      linkedList2.add(ontologyTerm0);
      LinkedList<OntologyTerm> linkedList3 = new LinkedList<OntologyTerm>();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      LinkedList<OntologyTerm> linkedList4 = new LinkedList<OntologyTerm>();
      linkedList4.add(ontologyTerm3);
      LinkedList<OntologyTerm> linkedList5 = new LinkedList<OntologyTerm>();
      linkedList4.spliterator();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      LinkedList<OntologyTerm> linkedList6 = new LinkedList<OntologyTerm>();
      linkedList6.add(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>(linkedList4);
      User user0 = new User();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getQuestionNumber();
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.785782440993072
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-1));
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User("lha.mrc.ac.uk:LHA", "lha.mrc.ac.uk:LHA");
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel0);
      rawVariable0.setQuestionNumber("lha.mrc.ac.uk:LHA");
      rawVariable0.getAlias();
      rawVariable0.setNotes("");
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setLabel("lha.mrc.ac.uk:LHA");
      rawVariable0.removeValueLabel(valueLabel1);
      rawVariable0.clone();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getIdentifier();
      rawVariable1.setName("");
      rawVariable1.getDisplayName();
      rawVariable0.addValueLabel(valueLabel1);
      assertEquals((-1), rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.733261585592958
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.setCleaned(true);
      rawVariable0.setName("");
      User user0 = new User("", (String) null);
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      arrayList0.add(supportingDocument0);
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.setColumnStart((String) null);
      user0.setAddressLine1("");
      User user1 = new User();
      user0.setPassword((String) null);
      user1.setCounty((String) null);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      User user2 = new User();
      RawVariable.detectFieldChanges(user2, rawVariable0, rawVariable0);
      rawVariable0.containsSupportingDocument(supportingDocument1);
      User user3 = new User("UNABLE_TO_GET_ORIGINAL_CATEGORY", "JfA2ZgFy]q!L");
      user2.setCounty("JfA2ZgFy]q!L");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument3);
      rawVariable0.clone();
      assertTrue(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.8172042140912064
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.clone();
      derivedVariable0.codeBookNumber = "R{DA+Yu!cq#^|Gb";
      derivedVariable0.getAvailability();
      derivedVariable0.cloneAttributes(rawVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable2.notes = "R{DA+Yu!cq#^|Gb";
      derivedVariable3.containsSourceVariable(derivedVariable1);
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      derivedVariable2.removeOntologyTerm(ontologyTerm1);
      derivedVariable3.getOntologyTerms();
      rawVariable0.getLabel();
      assertEquals("R{DA+Yu!cq#^|Gb", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.5806560020475704
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "/Xnr``N=;G,@|C}*YI";
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.createVariableSummary();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.819132321388333
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.columnEnd = "variable.questionNumber.label";
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getYear());
      
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList1);
      User user0 = new User("", "Unknown");
      user0.setCounty("");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable1);
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getForm());
      assertEquals("variable.questionNumber.label", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertNotNull(macawChangeEvent0);
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.clone();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.removeOntologyTerm(ontologyTerm1);
      derivedVariable2.getOntologyTerms();
      assertEquals(0, derivedVariable2.getIdentifier());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.8141894835335037
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      supportingDocument0.setFilePath("9,P{\"fR");
      derivedVariable0.getFilePath();
      supportingDocument0.setTitle("9,P{\"fR");
      derivedVariable0.setQuestionNumber("");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.setCleaningDescription("");
      derivedVariable0.getLabel();
      derivedVariable0.getSupportingDocuments();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.isCleaned();
      assertFalse(derivedVariable0.isNewRecord());
      
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.getCleaningStatus();
      derivedVariable0.setIdentifier(0);
      derivedVariable0.getName();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable1);
      DerivedVariable derivedVariable2 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable2.getCategory());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getFilePath();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>(linkedList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      linkedList0.add(ontologyTerm1);
      LinkedList<OntologyTerm> linkedList1 = new LinkedList<OntologyTerm>();
      List<OntologyTerm> list0 = new LinkedList<OntologyTerm>();
      linkedList1.listIterator();
      LinkedList<OntologyTerm> linkedList2 = new LinkedList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      linkedList0.add(ontologyTerm2);
      LinkedList<OntologyTerm> linkedList3 = new LinkedList<OntologyTerm>();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.setFilePath("");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>(linkedList2);
      User user1 = new User("", "NO_ONTOLOGY_TERM_FILTER");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      assertFalse(ontologyTerm7.equals((Object)ontologyTerm2));
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.7941820653816287
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "UNABLE_TO_CREATE_USER";
      derivedVariable0.addOntologyTerms(arrayList0);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(derivedVariable1);
      DerivedVariable derivedVariable2 = (DerivedVariable)derivedVariable1.clone();
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertFalse(derivedVariable2.isNewRecord());
      assertEquals("Unknown", derivedVariable2.getCategory());
      assertEquals(0, derivedVariable2.getIdentifier());
      assertFalse(derivedVariable2.isCoded());
      assertFalse(derivedVariable2.isCleaned());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }
}
