/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 10:55:30 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SupportingDocument_ESTest extends SupportingDocument_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.576534609090467
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      System.setCurrentTimeMillis(1096L);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName((String) null);
      supportingDocument0.getDisplayItemIdentifier();
      supportingDocument0.setDocumentCode("T7V@");
      String string0 = "Rx| ,E]>3id0:eyl";
      supportingDocument0.getFileName();
      supportingDocument0.getDisplayItemIdentifier();
      supportingDocument0.getDisplayName();
      long long0 = 1L;
      // Undeclared exception!
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.9491835823232266
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("B BZ");
      supportingDocument0.setDocumentCode("B BZ");
      User user0 = new User("J~VNwo", "B BZ");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDocumentCode("");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      user0.setCounty((String) null);
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument2);
      assertEquals(2, arrayList0.size());
      
      supportingDocument0.setFileName("B BZ");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument0.setTitle("{");
      SupportingDocument supportingDocument4 = (SupportingDocument)supportingDocument0.clone();
      assertEquals("B BZ", supportingDocument4.getDocumentCode());
      
      supportingDocument4.setDocumentCode((String) null);
      assertNotSame(supportingDocument4, supportingDocument0);
      
      SupportingDocument.validateFields(supportingDocument0);
      supportingDocument2.setFilePath("B BZ");
      User user1 = new User("J~VNwo", "mOI\r r");
      User user2 = new User();
      ArrayList<MacawChangeEvent> arrayList1 = SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument4);
      assertEquals(1, arrayList1.size());
      
      SupportingDocument supportingDocument5 = new SupportingDocument();
      supportingDocument5.getFileName();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      supportingDocument4.getTitle();
      SupportingDocument.detectFieldChanges(user0, supportingDocument5, supportingDocument4);
      supportingDocument4.getDocumentCode();
      assertEquals(0, supportingDocument4.getIdentifier());
      
      System.setCurrentTimeMillis(1L);
      supportingDocument3.getFileName();
      User user3 = new User("supportingDocument.description.saveChanges", "tKo0c!PBJ;}R\"]^K*I");
      ArrayList<MacawChangeEvent> arrayList2 = SupportingDocument.detectFieldChanges(user3, supportingDocument6, supportingDocument0);
      assertFalse(supportingDocument6.isNewRecord());
      assertEquals(3, arrayList2.size());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.211979894836506
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("\"&%U\"oxXo{E{?7dah");
      supportingDocument0.setDocumentCode("DUPLICATE_ONTOLOGY_TERM_ASSOCIATION");
      supportingDocument0.setFilePath("\"&%U\"oxXo{E{?7dah");
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.setDocumentCode("DUPLICATE_ONTOLOGY_TERM_ASSOCIATION");
      supportingDocument0.setFileName("\"&%U\"oxXo{E{?7dah");
      supportingDocument0.setFileName("\"&%U\"oxXo{E{?7dah");
      supportingDocument0.getIdentifier();
      supportingDocument0.setIdentifier(0);
      supportingDocument0.setDescription("-");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument1.setFileName("DUPLICATE_ONTOLOGY_TERM_ASSOCIATION");
      supportingDocument2.setFileName("DUPLICATE_ONTOLOGY_TERM_ASSOCIATION");
      supportingDocument2.setDocumentCode("\"&%U\"oxXo{E{?7dah");
      supportingDocument0.getDescription();
      boolean boolean0 = supportingDocument1.isNewRecord();
      assertFalse(boolean0);
      
      supportingDocument1.setDescription((String) null);
      SupportingDocument.validateFields(supportingDocument0);
      assertTrue(supportingDocument0.isNewRecord());
      
      supportingDocument2.clone();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setFilePath("\"&%U\"oxXo{E{?7dah");
      supportingDocument2.getDisplayName();
      String string0 = supportingDocument2.getDisplayName();
      supportingDocument2.getDescription();
      supportingDocument1.getDescription();
      String string1 = supportingDocument2.getDocumentCode();
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.8721266929167064
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      int int0 = (-1958081657);
      supportingDocument0.setIsNewRecord(false);
      supportingDocument0.clone();
      supportingDocument0.setIdentifier((-1958081657));
      supportingDocument0.setFilePath("[jLkJo^J{_+");
      supportingDocument0.setFilePath((String) null);
      supportingDocument0.setFileName("[jLkJo^J{_+");
      supportingDocument0.clone();
      supportingDocument0.setDescription("[jLkJo^J{_+");
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      supportingDocument0.getFilePath();
      supportingDocument1.getFileName();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.0110987648519973
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDocumentCode("w");
      String string0 = "v";
      User user0 = new User("w", "w");
      user0.setAddressLine2((String) null);
      supportingDocument1.clone();
      supportingDocument1.setDescription("v");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      user0.setAddressLine2("%");
      user0.setLastName("w");
      User user1 = new User("v", "%");
      User.detectFieldChanges(user1, user1, user0);
      User user2 = new User("%", (String) null);
      String string1 = null;
      user2.setCity((String) null);
      User user3 = new User("%", "v");
      user2.setAddressLine2("w");
      User user4 = new User();
      User user5 = new User(")!:[hn}FR/nnUE", "v");
      User user6 = new User("v", (String) null);
      // Undeclared exception!
      try { 
        User.detectFieldChanges(user0, user6, user0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.990588409735848
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("\"&%U\"oxXo{E{?7dah");
      supportingDocument0.setDocumentCode("DUPLICATE_ONTOLOGY_TERM_ASSOCIATION");
      supportingDocument0.setFilePath("UNABLE_TO_GET_AVAILABILITY_STATES");
      supportingDocument0.setIdentifier(0);
      supportingDocument0.setFileName("tHbx?z+p#Z47f");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.clone();
      User user0 = new User("DUPLICATE_ONTOLOGY_TERM_ASSOCIATION", "tHbx?z+p#Z47f");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      supportingDocument1.setIdentifier((-2028178998));
      supportingDocument1.setTitle((String) null);
      supportingDocument0.setIdentifier((-1333));
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument1.setFileName("\"&%U\"oxXo{E{?7dah");
      supportingDocument0.getDescription();
      user0.setUserID("\"&%U\"oxXo{E{?7dah");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.isNewRecord();
      supportingDocument3.setDescription("c?}N");
      SupportingDocument.validateFields(supportingDocument0);
      SupportingDocument supportingDocument4 = (SupportingDocument)supportingDocument0.clone();
      supportingDocument4.setIsNewRecord(true);
      supportingDocument2.setTitle("UNABLE_TO_CHECK_DATABASE_EXISTS");
      supportingDocument1.getTitle();
      supportingDocument4.getFilePath();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      supportingDocument2.getFileName();
      // Undeclared exception!
      try { 
        SupportingDocument.validateFields(supportingDocument1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.960636855842596
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDocumentCode("w");
      User user0 = new User("w", "w");
      SupportingDocument supportingDocument2 = (SupportingDocument)supportingDocument1.clone();
      supportingDocument1.clone();
      supportingDocument0.setDocumentCode("v");
      supportingDocument1.setFilePath("v");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.7284027148859837
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      String string0 = "DUPLICATE_ONTOLOGY_TERM_ASSOCIATION";
      supportingDocument0.setDocumentCode("DUPLICATE_ONTOLOGY_TERM_ASSOCIATION");
      supportingDocument0.setFilePath("DUPLICATE_ONTOLOGY_TERM_ASSOCIATION");
      supportingDocument0.setIdentifier(0);
      supportingDocument0.setFileName("tHbx?z+p#Z47f");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      User user0 = new User("DUPLICATE_ONTOLOGY_TERM_ASSOCIATION", "tHbx?z+p#Z47f");
      user0.setFirstName("supportingDocument.title.saveChanges");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      supportingDocument0.setIdentifier((-2028178998));
      supportingDocument0.getIdentifier();
      supportingDocument0.setIdentifier((-1333));
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.getDocumentCode();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.349421283797024
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      User user0 = new User("J~VNwo", "Se-f");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      int int0 = 1029;
      supportingDocument0.setIdentifier(1029);
      supportingDocument0.getIdentifier();
      supportingDocument0.getFilePath();
      supportingDocument0.setIdentifier(1029);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setFileName("J~VNwo");
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.8669922924334683
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("\"&%U\"oxXo{E{?7dah");
      String string0 = "";
      supportingDocument0.setFilePath("\"&%U\"oxXo{E{?7dah");
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.setFileName("\"&%U\"oxXo{E{?7dah");
      supportingDocument0.setFilePath("");
      supportingDocument0.setFileName("\"&%U\"oxXo{E{?7dah");
      supportingDocument0.setTitle("qAJm~A:<6hnQ");
      supportingDocument0.setIdentifier((-2087831322));
      supportingDocument0.setFilePath("0$7d5mu3Q_");
      supportingDocument0.getIdentifier();
      supportingDocument0.getFilePath();
      supportingDocument0.setIdentifier((-814));
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFileName("DUPLICATE_ONTOLOGY_TERM_ASSOCIATION");
      supportingDocument1.getDescription();
      supportingDocument0.setDescription("INVALID_SUPPORTING_DOCUMENT");
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.05569358184064
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      User user0 = new User("tHbx?z+p#Z47f", "SR^*4u>+q\"");
      user0.setPhone("tHbx?z+p#Z47f");
      user0.setAffiliation("SR^*4u>+q\"");
      user0.setAddressLine1("tHbx?z+p#Z47f");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("H+HK= #mXr^ygoeggz");
      System.setCurrentTimeMillis(3954L);
      supportingDocument0.getDescription();
      System.setCurrentTimeMillis(16L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-703L));
      System.setCurrentTimeMillis(1254L);
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.8862673658216265
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.setDescription("de'u?I");
      supportingDocument0.isNewRecord();
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      supportingDocument0.getDescription();
      SupportingDocument supportingDocument2 = (SupportingDocument)supportingDocument1.clone();
      assertTrue(supportingDocument0.isNewRecord());
      assertFalse(supportingDocument2.isNewRecord());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.012966178484117
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      User user0 = new User("w", "w");
      supportingDocument1.clone();
      supportingDocument1.clone();
      supportingDocument0.setDocumentCode("v");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      User user1 = new User("v", "w");
      user1.setEmail("!vHv");
      User user2 = new User("v", "w");
      user2.setAddressLine2("");
      User user3 = new User();
      user3.setUserID("v");
      User user4 = new User("v", ")!:[hn}FR/nnUE");
      User user5 = new User("v", "oo$_F\"g*FKjge.");
      User user6 = new User("!vHv", (String) null);
      User.detectFieldChanges(user4, user2, user6);
      User.detectFieldChanges(user3, user5, user6);
      user5.setAddressLine1(")!:[hn}FR/nnUE");
      User.detectFieldChanges(user1, user5, user4);
      User user7 = new User("", (String) null);
      User user8 = new User("UNABLE_TO_UPDATE_AVAILABILITY_STATE", "w");
      User.detectFieldChanges(user8, user0, user2);
      User.detectFieldChanges(user1, user8, user7);
      User.detectFieldChanges(user4, user8, user1);
      user6.setCounty("YQk&8`_2VJv$C o");
      // Undeclared exception!
      try { 
        User.detectFieldChanges(user1, user7, user5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.5514375623539958
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("[bL$");
      String string0 = "SeV@";
      supportingDocument0.setDocumentCode("SeV@");
      User user0 = new User("[bL$", "[bL$");
      User user1 = new User();
      User.detectFieldChanges(user1, user1, user1);
      user0.setPassword("[bL$");
      user0.setUserID("$o");
      User.detectFieldChanges(user1, user1, user1);
      user1.setStatus("SeV@");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      user1.setPhone("[bL$");
      user0.setPostCode("^i$EUmV");
      user1.setAddressLine2("oYK{m;I0Nk#");
      supportingDocument1.setTitle("SeV@");
      supportingDocument1.setDocumentCode("[bL$");
      user1.setUserID("[bL$");
      String string1 = ">_<b;(1UrOY/P&Gvr;";
      String string2 = "^wiNBsp2uy2Bc,sC1=";
      User user2 = new User("^wiNBsp2uy2Bc,sC1=", "o");
      user0.setUserID("oYK{m;I0Nk#");
      User user3 = new User();
      user3.setStatus("^wiNBsp2uy2Bc,sC1=");
      user0.setFirstName(">_<b;(1UrOY/P&Gvr;");
      SupportingDocument.detectFieldChanges(user1, supportingDocument1, supportingDocument0);
      try { 
        User.validateFields(user3);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.576161705877183
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("BbL$");
      supportingDocument0.setDocumentCode("BbL$");
      User user0 = new User("user.phone.saveChanges", "SeV@");
      User user1 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      User.detectFieldChanges(user1, user1, user1);
      supportingDocument0.setFileName("SeV@");
      user1.setAddressLine1("BbL$");
      user1.setAddressLine2("");
      supportingDocument0.setTitle("SeV@");
      supportingDocument0.setDocumentCode("BbL$");
      SupportingDocument.validateFields(supportingDocument0);
      User user2 = new User("", "supportNngDocument.title.saveChanges");
      user2.setUserID("SeV@");
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user1, supportingDocument0, supportingDocument0);
      assertTrue(arrayList0.isEmpty());
      
      user2.clone();
      User user3 = new User("BbL$", "supportNngDocument.title.saveChanges");
      user1.setFirstName("qKV%V~`bc");
      ArrayList<MacawChangeEvent> arrayList1 = SupportingDocument.detectFieldChanges(user1, supportingDocument1, supportingDocument0);
      assertEquals(3, arrayList1.size());
      
      User user4 = new User();
      System.setCurrentTimeMillis(0L);
      supportingDocument0.getFileName();
      assertEquals(0, supportingDocument0.getIdentifier());
      assertFalse(supportingDocument0.isNewRecord());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getTitle();
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals(0, supportingDocument0.getIdentifier());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.640300748749712
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      String string0 = "DUPLICATE_ONTOLOGY_TERM_ASSOCIATION";
      supportingDocument0.setDocumentCode("DUPLICATE_ONTOLOGY_TERM_ASSOCIATION");
      supportingDocument0.setIdentifier(0);
      supportingDocument0.setFileName("tHbx?z+p#Z47f");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      User user0 = new User("DUPLICATE_ONTOLOGY_TERM_ASSOCIATION", "tHbx?z+p#Z47f");
      user0.setFirstName("supportingDocument.title.saveChanges");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      supportingDocument0.getIdentifier();
      supportingDocument0.setIdentifier((-1333));
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.getDocumentCode();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.9366390044422475
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDocumentCode("w");
      User user0 = new User();
      supportingDocument0.setDescription("w");
      SupportingDocument supportingDocument2 = (SupportingDocument)supportingDocument1.clone();
      supportingDocument1.setTitle("UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES");
      supportingDocument2.setTitle("v");
      supportingDocument0.setTitle("supportingDocument.documentCode.saveChanges");
      supportingDocument1.setDescription("nvGfWE5oW");
      supportingDocument1.clone();
      supportingDocument2.setDocumentCode("w");
      SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument1);
      supportingDocument1.getTitle();
      System.setCurrentTimeMillis(5717L);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.05569358184064
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = "eRz*4u&>+q\"";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      String string1 = "BbL$";
      String string2 = "general.error.blankField";
      supportingDocument0.setTitle("general.error.blankField");
      supportingDocument0.setDocumentCode("general.error.blankField");
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = "SR^*4u>+q\"";
      User user0 = new User();
      // Undeclared exception!
      try { 
        SupportingDocument.detectFieldChanges(user0, (SupportingDocument) null, (SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.010698604787972
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDocumentCode("w");
      User user0 = new User("w", "w");
      supportingDocument1.clone();
      supportingDocument0.setDocumentCode("v");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      User user1 = new User("v", "w");
      user1.setEmail("!vHv");
      User user2 = new User("v", "w");
      user2.setAddressLine2("");
      User user3 = new User();
      user3.setUserID("v");
      User user4 = new User("v", ")!:[hn}FR/nnUE");
      User user5 = new User("v", "oo$_F\"g*FKjge.");
      User user6 = new User("!vHv", (String) null);
      User.detectFieldChanges(user4, user2, user6);
      User.detectFieldChanges(user3, user5, user6);
      User.detectFieldChanges(user1, user5, user4);
      User user7 = new User("", (String) null);
      User user8 = new User("UNABLE_TO_UPDATE_AVAILABILITY_STATE", "");
      try { 
        User.checkValidUserIDField("[\"JbL2");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The field \"User ID\" value \"[\"JbL2\" may present a security risk.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.6856761338830344
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.clone();
      supportingDocument1.setFileName("J2'3Bck*P");
      supportingDocument0.setFileName("MacawProperties");
      try { 
        SupportingDocument.validateFields(supportingDocument1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }
}
