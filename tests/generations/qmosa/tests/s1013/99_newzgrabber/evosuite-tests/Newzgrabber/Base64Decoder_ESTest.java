/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 01:05:11 GMT 2019
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.Base64Decoder;
import Newzgrabber.BufferedCustomInputStream;
import Newzgrabber.Newzgrabber;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.OutputStream;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Locale;
import java.util.Stack;
import java.util.Vector;
import java.util.function.Predicate;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Base64Decoder_ESTest extends Base64Decoder_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.5788449127168476
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "D");
      byte[] byteArray0 = new byte[12];
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "HsxY/T8eRS~4j9`?@");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "HsxY/T8eRS~4j9`?@");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ":;gKxTluW,Vi[A?E");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ":;gKxTluW,Vi[A?E");
      byteArray0[1] = (byte)14;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "V/9P2>");
      byteArray0[3] = (byte)67;
      byteArray0[4] = (byte)14;
      byteArray0[5] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, false);
      byteArrayInputStream0.skip((byte)1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder0.setLineCount((-1L));
      base64Decoder0.decodeStream();
      System.setCurrentTimeMillis((byte)0);
      System.setCurrentTimeMillis((-24L));
      System.setCurrentTimeMillis((-1204L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((byte)67);
      System.setCurrentTimeMillis((byte)10);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.567944147734173
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "D");
      byte[] byteArray0 = new byte[6];
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "HsxY/T8eRS~4j9`?@");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "HsxY/T8eRS~4j9`?@");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "D");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ":;gKxTluW,Vi[A?E");
      byteArray0[1] = (byte)1;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "V/9P2>");
      byteArray0[3] = (byte)99;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((byte)1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      System.setCurrentTimeMillis((byte)0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ":;gKxTluW,Vi[A?E");
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, 3, false);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6997608016132726
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)46;
      byteArray0[3] = (byte)10;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte)10;
      byteArray0[6] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, false);
      byteArrayInputStream0.skip(0L);
      byteArrayInputStream0.skip(0L);
      Vector<Integer> vector0 = new Vector<Integer>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream((byte)10);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) "Getting batch info from ";
      byteArray0[5] = (byte)10;
      objectArray0[2] = (Object) "Getting batch info from ";
      objectArray0[3] = (Object) (byte)10;
      objectArray0[5] = (Object) mockPrintStream0;
      mockPrintStream0.printf("Getting batch info from ", objectArray0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(5L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5676322270261697
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) stack0, (Collection<String>) arrayList0, locale_FilteringMode0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte) (-6);
      byteArray0[3] = (byte) (-58);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, false);
      byteArrayInputStream0.skip(1L);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      Newzgrabber.IsBatch = true;
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(0L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.8791326374377332
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) ".r");
      Predicate<Object> predicate1 = predicate0.negate();
      predicate0.or(predicate1);
      Predicate<Object> predicate2 = predicate0.and(predicate0);
      Predicate<Object> predicate3 = predicate2.or(predicate0);
      predicate0.negate();
      Predicate<Object> predicate4 = predicate3.negate();
      arrayList0.add(".q");
      linkedHashSet0.removeIf(predicate4);
      arrayList0.removeAll(linkedHashSet0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)50;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)10;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ".r");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, true);
      byteArrayInputStream0.close();
      byteArrayInputStream0.skip(1L);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder0.ABORT = true;
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(0L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6997608016132726
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)52;
      byteArray0[3] = (byte)10;
      byteArray0[5] = (byte)10;
      byteArray0[6] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, false);
      byteArrayInputStream0.skip(0L);
      Long long0 = new Long((byte)3);
      Vector<Integer> vector0 = new Vector<Integer>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream((byte)0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) "Getting batch info from ";
      objectArray0[1] = (Object) (byte)10;
      objectArray0[2] = (Object) "Getting batch info from ";
      objectArray0[3] = (Object) (byte)10;
      byteArrayInputStream0.read();
      objectArray0[5] = (Object) mockPrintStream0;
      PrintStream printStream0 = mockPrintStream0.printf("Getting batch info from ", objectArray0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder0.LineCount = 3172L;
      base64Decoder0.os = (OutputStream) printStream0;
      mockPrintStream0.print('q');
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      System.setCurrentTimeMillis(25L);
      System.setCurrentTimeMillis((byte)3);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6573186405438316
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)52;
      byteArray0[5] = (byte)10;
      byteArray0[6] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, false);
      byteArrayInputStream0.skip(0L);
      Long long0 = new Long((byte)3);
      Vector<Integer> vector0 = new Vector<Integer>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream((byte)0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      byteArrayOutputStream0.write(byteArray0);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) "Geting batch info from ";
      objectArray0[1] = (Object) (byte)10;
      objectArray0[2] = (Object) "Geting batch info from ";
      objectArray0[3] = (Object) (byte)0;
      mockPrintStream0.println((float) (byte)3);
      objectArray0[5] = (Object) mockPrintStream0;
      PrintStream printStream0 = mockPrintStream0.printf("Geting batch info from ", objectArray0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder0.os = (OutputStream) printStream0;
      mockPrintStream0.print('q');
      base64Decoder0.decodeStream();
      assertEquals(3L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.5357939587515939
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) ".r");
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate2.negate();
      arrayList0.add(".q");
      linkedHashSet0.removeIf(predicate3);
      arrayList0.removeAll(linkedHashSet0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) stack0, (Collection<String>) arrayList0, locale_FilteringMode0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte) (-6);
      byteArray0[3] = (byte) (-58);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, false);
      byteArrayInputStream0.skip(1L);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.7695274178358926
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("\u0001/\u0001");
      FileSystemHandling.createFolder(evoSuiteFile0);
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)10;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("Pk8a7F_EYWI)&l/Pk8a7F_EYWI)&l");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, (String) null);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, false);
      Byte byte0 = new Byte((byte)10);
      MockFile mockFile0 = new MockFile("Pk8a7F_EYWI)&l", "Pk8a7F_EYWI)&l");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Pk8a7F_EYWI)&l");
      File file0 = MockFile.createTempFile("Pk8a7F_EYWI)&l", "Pk8a7F_EYWI)&l", (File) mockFile0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);
      mockFileOutputStream0.write(byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockFileOutputStream0);
      base64Decoder0.setLineCount((byte)10);
      base64Decoder0.decodeStream();
      byteArrayInputStream0.reset();
      MockFile mockFile1 = new MockFile("\u0001", "\u0001");
      mockFile1.createNewFile();
      file0.renameTo(mockFile1);
      base64Decoder0.setLineCount((-2458L));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      System.setCurrentTimeMillis((byte)10);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals((-2457L), base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.7154074116275893
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      String[] stringArray0 = new String[2];
      stack0.add((Locale.LanguageRange) null);
      stringArray0[0] = ">!bx'&n|";
      stringArray0[0] = "\u0001\u0000\u00C8\u0002\u0000\u0000";
      Locale.getISOLanguages();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) stack0, (Collection<String>) arrayList0, locale_FilteringMode0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)30;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)119;
      byteArray0[5] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream1, false);
      byteArrayInputStream1.reset();
      byteArrayInputStream0.skip((byte)2);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      byteArrayInputStream1.mark(43);
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      Newzgrabber.verbose = true;
      base64Decoder0.decodeStream();
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      MockFile mockFile0 = new MockFile("2*HqM0Az\"ST8EiT|puH");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      Object[] objectArray0 = new Object[10];
      objectArray0[0] = (Object) "2*HqM0Az\"ST8EiT|puH";
      objectArray0[1] = (Object) "2*HqM0Az\"ST8EiT|puH";
      objectArray0[2] = (Object) "2*HqM0Az\"ST8EiT|puH";
      objectArray0[3] = (Object) mockFile0;
      objectArray0[4] = (Object) null;
      objectArray0[5] = (Object) mockPrintStream0;
      objectArray0[6] = (Object) "2*HqM0Az\"ST8EiT|puH";
      Object object0 = new Object();
      objectArray0[7] = object0;
      objectArray0[8] = (Object) "Newsgroups.ini";
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-65);
      byteArray0[1] = (byte)48;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)122;
      objectArray0[3] = (Object) (byte) (-7);
      byteArray0[5] = (byte)70;
      byteArray0[6] = (byte) (-33);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      PrintStream printStream0 = mockPrintStream0.printf("Newsgroups.ini", objectArray0);
      Base64Decoder base64Decoder0 = new Base64Decoder((BufferedCustomInputStream) null, printStream0);
      // Undeclared exception!
      try { 
        base64Decoder0.decodeStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.Base64Decoder", e);
      }
  }
}
