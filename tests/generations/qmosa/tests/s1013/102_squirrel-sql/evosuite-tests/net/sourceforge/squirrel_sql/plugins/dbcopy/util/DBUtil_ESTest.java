/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 02:25:10 GMT 2019
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.CallableStatementWrapper;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.awt.AWTEventMulticaster;
import java.awt.Button;
import java.awt.HeadlessException;
import java.awt.Insets;
import java.awt.event.ComponentListener;
import java.beans.PropertyChangeListener;
import java.io.FileFilter;
import java.io.FilenameFilter;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.DriverPropertyInfo;
import java.sql.Time;
import java.time.LocalTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Properties;
import java.util.Stack;
import java.util.Vector;
import javax.swing.Icon;
import javax.swing.JScrollPane;
import javax.swing.JSpinner;
import javax.swing.JTree;
import javax.swing.JViewport;
import javax.swing.plaf.basic.BasicTreeUI;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.TreeModel;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasColorProperties;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasSchemaDetailProperties;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasSchemaProperties;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.util.ApplicationFileWrappersImpl;
import net.sourceforge.squirrel_sql.fw.id.IIdentifier;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ISQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverProperty;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.util.FileWrapper;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperFactoryImpl;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperImpl;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.time.MockLocalTime;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jboss.util.file.FilePrefixFilter;
import org.jboss.util.file.FileSuffixFilter;
import org.jfree.date.SerialDate;
import org.jfree.ui.FilesystemFilter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("s$\",p  N!WVK~n^0");
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      JScrollPane jScrollPane0 = new JScrollPane();
      DBUtil.typesAreEquivalent(16, (-673));
      jScrollPane0.validate();
      JViewport jViewport0 = jScrollPane0.getViewport();
      Insets insets0 = new Insets(11448517, (-6), 726, 168);
      jViewport0.getInsets(insets0);
      JSpinner jSpinner0 = new JSpinner();
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      jSpinner0.addComponentListener((ComponentListener) null);
      uidIdentifier0.setString("s$\",p  N!WVK~n^0");
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      uidIdentifier1.setString("2\"Vt9");
      uidIdentifier0.setString("Index 'series' out of range.");
      uidIdentifier0.setString("2\"Vt9");
      uidIdentifier2.setString("\rXp>=nZW=e");
      assertEquals("\rXp>=nZW=e", uidIdentifier2.toString());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapper fileWrapper0 = fileWrapperFactoryImpl0.create("^liW", "^liW");
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getEditWhereColsFile();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("^liW");
      FilesystemFilter filesystemFilter0 = new FilesystemFilter("^liW", "^liW", true);
      fileWrapper0.listFiles((FilenameFilter) filesystemFilter0);
      FileWrapperImpl.createTempFile("^liW", "^liW", fileWrapper0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("^liW", "^liW", "^liW", " )", 57, " )", (-542), 3, (-542), (-542), "SPATIAL", " )", 2162, 2162, "^liW");
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo(" holdlock", "b:m+!Z['", "9GO`,lg6iZ8*jhHGG3", "i&&,l` R{S20D;{= ", (-4), " )", 171, (-177), 1308, 2162, (String) null, "max", 3, 1308, "DS>L(");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.FUNCTION;
      tableColumnInfo1.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.isBinaryType(tableColumnInfo1);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.DATATYPE;
      Button button0 = null;
      try {
        button0 = new Button();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(connection0).getAutoCommit();
      doReturn((DatabaseMetaData) null).when(connection0).getMetaData();
      SQLDriver sQLDriver0 = new SQLDriver();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE;
      IIdentifier iIdentifier0 = databaseObjectType0.getIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias(iIdentifier0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      SQLConnection sQLConnection0 = new SQLConnection(connection0, sQLDriverPropertyCollection0, sQLDriver0);
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("HASHED", "HASHED");
      SQLAlias sQLAlias1 = new SQLAlias(iIdentifier0);
      sQLAlias1.setUserName("HASHED");
      DriverPropertyInfo driverPropertyInfo1 = new DriverPropertyInfo("^+9J90", "HASHED");
      DriverPropertyInfo driverPropertyInfo2 = new DriverPropertyInfo("HASHED", "3Yp^>");
      DriverPropertyInfo driverPropertyInfo3 = new DriverPropertyInfo("4^wo2q`kz", (String) null);
      DriverPropertyInfo driverPropertyInfo4 = new DriverPropertyInfo("^+9J90", "^+9J90");
      DriverPropertyInfo driverPropertyInfo5 = new DriverPropertyInfo((String) null, "lf");
      sQLConnection0.getAutoCommit();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo(sQLConnection0, "fXo1jnM", (String) null);
      // Undeclared exception!
      try { 
        DBUtil.getPKColumnString(sQLConnection0, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".D9+LV*>vIQH4");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      DBUtil.typesAreEquivalent(17, 17);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setPasteMenuEnabled(false);
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.replaceOtherDataType((TableColumnInfo) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias((IIdentifier) null);
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = sQLAlias0.getSchemaProperties();
      sQLAlias0.setSchemaProperties(sQLAliasSchemaProperties0);
      SQLAliasSchemaProperties sQLAliasSchemaProperties1 = new SQLAliasSchemaProperties();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      sQLAliasSchemaProperties0.getSchemaLoadInfos(sQLAliasSchemaProperties1, stringArray0, stringArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      byte[] byteArray0 = new byte[23];
      byteArray0[2] = (byte)45;
      byteArray0[3] = (byte) (-86);
      byteArray0[5] = (byte)69;
      byteArray0[5] = (byte) (-39);
      byteArray0[6] = (byte) (-102);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "No layout set for the appender named [", ". sng'Ba", "No layout set for the appender named [", 3, ". sng'Ba", (-34), (-1073741802), 2, (-2181), "", "No layout set for the appender named [", 1, 3, "V9JV E77Ds[lYXm.(L");
      // Undeclared exception!
      try { 
        DBUtil.replaceDistinctDataType(2001, tableColumnInfo0, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[7];
      byteArray0[2] = (byte)45;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((byte)45);
      SQLAlias sQLAlias0 = new SQLAlias(integerIdentifier0);
      sQLAlias0.getDriverPropertiesClone();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER;
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null, "DBUtil.info.bindblobmem");
      String string0 = DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      assertNull(string0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      SQLAlias sQLAlias0 = new SQLAlias();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      DriverPropertyInfo[] driverPropertyInfoArray0 = new DriverPropertyInfo[6];
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      sQLAlias0.setUserName("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      driverPropertyInfoArray0[0] = driverPropertyInfo0;
      DriverPropertyInfo driverPropertyInfo1 = new DriverPropertyInfo("4^wo2q`kz", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      driverPropertyInfoArray0[1] = driverPropertyInfo1;
      DriverPropertyInfo driverPropertyInfo2 = new DriverPropertyInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "GlqRf )1D||[");
      driverPropertyInfoArray0[2] = driverPropertyInfo2;
      driverPropertyInfo2.required = false;
      Properties properties0 = new Properties();
      sQLDriverPropertyCollection0.applyTo(properties0);
      DriverPropertyInfo driverPropertyInfo3 = new DriverPropertyInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "");
      driverPropertyInfoArray0[3] = driverPropertyInfo3;
      DriverPropertyInfo driverPropertyInfo4 = new DriverPropertyInfo("Fa", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      driverPropertyInfo4.value = "";
      driverPropertyInfo4.required = true;
      DriverPropertyInfo driverPropertyInfo5 = new DriverPropertyInfo("`j/9vw.xi:<'9h=B", "");
      driverPropertyInfoArray0[5] = driverPropertyInfo5;
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLDriver sQLDriver0 = new SQLDriver(uidIdentifier0);
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection0, sQLDriver0);
      dBCopyPlugin0.getPasteToTableInfo(sQLConnection0, "4^wo2q`kz", "s+D`vg.ZxYv");
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount(sQLConnection0, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4393680770162196
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      DBUtil.typesAreEquivalent(3, 1);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getApplication();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo1 = new SchemaInfo((IApplication) null);
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", ",tlj");
      DriverPropertyInfo driverPropertyInfo1 = new DriverPropertyInfo("X7xnblxxTS*~p[VV#-C", "mYir2sT>#G");
      DriverPropertyInfo driverPropertyInfo2 = new DriverPropertyInfo("mYir2sT>#G", "mYir2sT>#G");
      DriverPropertyInfo driverPropertyInfo3 = new DriverPropertyInfo("mYir2sT>#G", (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      DriverPropertyInfo driverPropertyInfo4 = new DriverPropertyInfo((String) null, (String) null);
      DriverPropertyInfo driverPropertyInfo5 = new DriverPropertyInfo("mYir2sT>#G", "M7B[\"&X(ELrtJ&WX");
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getSourceSession();
      String string0 = null;
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, (String) null, ",tlj", (String) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(connection0).getAutoCommit();
      doReturn((DatabaseMetaData) null).when(connection0).getMetaData();
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      SQLAlias sQLAlias0 = new SQLAlias();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection0, sQLDriver0);
      DriverPropertyInfo[] driverPropertyInfoArray0 = new DriverPropertyInfo[6];
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      sQLAlias0.setUserName("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      driverPropertyInfoArray0[0] = driverPropertyInfo0;
      DriverPropertyInfo driverPropertyInfo1 = new DriverPropertyInfo("4^wo2q`kz", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      driverPropertyInfoArray0[1] = driverPropertyInfo1;
      DriverPropertyInfo driverPropertyInfo2 = new DriverPropertyInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "GlqRf )1D||[");
      driverPropertyInfoArray0[2] = driverPropertyInfo2;
      driverPropertyInfo2.required = false;
      DriverPropertyInfo driverPropertyInfo3 = new DriverPropertyInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "");
      driverPropertyInfoArray0[3] = driverPropertyInfo3;
      DriverPropertyInfo driverPropertyInfo4 = new DriverPropertyInfo("Fa", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      driverPropertyInfo4.value = "";
      driverPropertyInfoArray0[4] = driverPropertyInfo4;
      driverPropertyInfo4.required = true;
      DriverPropertyInfo driverPropertyInfo5 = new DriverPropertyInfo("`/9v.xi:'9=B", "");
      driverPropertyInfoArray0[5] = driverPropertyInfo5;
      sQLConnection0.getAutoCommit();
      dBCopyPlugin0.getPasteToTableInfo(sQLConnection0, "4^wo2q`kz", "Fa");
      // Undeclared exception!
      try { 
        DBUtil.getPKColumnString(sQLConnection0, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // metaData
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.DatabaseMetaDataWrapper", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/102_squirrel-sql");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-128);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)70;
      byteArray0[3] = (byte)79;
      byteArray0[4] = (byte) (-65);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      fileWrapperFactoryImpl0.create("^liW", "^liW");
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)applicationFileWrappersImpl0.getEditWhereColsFile();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl("^liW");
      FileWrapperImpl fileWrapperImpl2 = new FileWrapperImpl("^liW");
      fileWrapperImpl0.getParentFile();
      FileWrapperImpl fileWrapperImpl3 = new FileWrapperImpl(fileWrapperImpl0);
      FileWrapperImpl fileWrapperImpl4 = new FileWrapperImpl(fileWrapperImpl0, "");
      MockFileWriter mockFileWriter0 = new MockFileWriter("^liW");
      FileWrapperImpl fileWrapperImpl5 = new FileWrapperImpl("", "");
      FilePrefixFilter filePrefixFilter0 = new FilePrefixFilter("J|dqsM}&-',^r'a");
      fileWrapperImpl0.listFiles((FileFilter) filePrefixFilter0);
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/102_squirrel-sql");
      FileWrapperImpl fileWrapperImpl6 = new FileWrapperImpl(fileWrapperImpl3);
      FileWrapperImpl fileWrapperImpl7 = (FileWrapperImpl)fileWrapperFactoryImpl0.create("^liW");
      fileWrapperImpl1.getFileWriter();
      FileWrapperImpl fileWrapperImpl8 = (FileWrapperImpl)applicationFileWrappersImpl0.getLibraryDirectory();
      FileWrapperImpl fileWrapperImpl9 = new FileWrapperImpl(fileWrapperImpl8, "");
      fileWrapperImpl9.listFiles((FileFilter) filePrefixFilter0);
      FileSystemHandling.createFolder(evoSuiteFile1);
      fileWrapperFactoryImpl0.create((FileWrapper) fileWrapperImpl7, "");
      fileWrapperFactoryImpl0.create("J|dqsM}&-',^r'a");
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      // Undeclared exception!
      try { 
        DBUtil.getColumnName((ISQLConnection) null, (ITableInfo) null, 1993);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/102_squirrel-sql");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-128);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-68);
      byteArray0[3] = (byte)79;
      byteArray0[4] = (byte) (-65);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      fileWrapperFactoryImpl0.create("^liW", "^liW");
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)applicationFileWrappersImpl0.getEditWhereColsFile();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl("^liW");
      applicationFileWrappersImpl0.getLicenceFile();
      fileWrapperImpl0.getParentFile();
      FileWrapperImpl fileWrapperImpl2 = new FileWrapperImpl(fileWrapperImpl0);
      FileWrapperImpl fileWrapperImpl3 = new FileWrapperImpl(fileWrapperImpl0, "");
      MockFileWriter mockFileWriter0 = new MockFileWriter("^liW");
      FileWrapperImpl fileWrapperImpl4 = new FileWrapperImpl("", "");
      FilePrefixFilter filePrefixFilter0 = new FilePrefixFilter("J|dqsM}&-',^r'a");
      fileWrapperImpl0.listFiles((FileFilter) filePrefixFilter0);
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/102_squirrel-sql");
      fileWrapperImpl0.getAbsoluteFile();
      FileWrapperImpl fileWrapperImpl5 = (FileWrapperImpl)fileWrapperFactoryImpl0.create("^liW");
      fileWrapperImpl1.getFileWriter();
      FileWrapperImpl fileWrapperImpl6 = (FileWrapperImpl)applicationFileWrappersImpl0.getLibraryDirectory();
      FileWrapperImpl fileWrapperImpl7 = new FileWrapperImpl(fileWrapperImpl6, "");
      fileWrapperImpl7.listFiles((FileFilter) filePrefixFilter0);
      FileSystemHandling.createFolder(evoSuiteFile1);
      fileWrapperFactoryImpl0.create((FileWrapper) fileWrapperImpl5, "");
      fileWrapperFactoryImpl0.create("J|dqsM}&-',^r'a");
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      // Undeclared exception!
      try { 
        DBUtil.getColumnName((ISQLConnection) null, (ITableInfo) null, 1993);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "{~)qZsU_D.r6kwPn1K", "{~)qZsU_D.r6kwPn1K");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy";
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = 3839;
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, 3839);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DBUtil.typesAreEquivalent(3, 3);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("values ( )");
      uidIdentifier0.setString(")B39,=<N^Ko0N@%0*$");
      uidIdentifier0.setString("FFz");
      uidIdentifier0.setString("FFz");
      uidIdentifier0.setString("FFz");
      uidIdentifier0.setString("MB");
      assertEquals("MB", uidIdentifier0.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      SQLAlias sQLAlias0 = new SQLAlias();
      // Undeclared exception!
      try { 
        DBUtil.tableHasPrimaryKey((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)fileWrapperFactoryImpl0.create("^liW", "^liW");
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl1 = (FileWrapperImpl)applicationFileWrappersImpl0.getEditWhereColsFile();
      FileWrapperImpl fileWrapperImpl2 = new FileWrapperImpl("^liW");
      fileWrapperImpl0.getCanonicalFile();
      FileWrapperImpl fileWrapperImpl3 = new FileWrapperImpl(fileWrapperImpl1, " )");
      MockFileWriter mockFileWriter0 = new MockFileWriter("^liW");
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/102_squirrel-sql");
      fileWrapperFactoryImpl0.create("^liW");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, false);
      FileWrapperImpl fileWrapperImpl4 = new FileWrapperImpl(fileWrapperImpl0);
      FileWrapperImpl fileWrapperImpl5 = new FileWrapperImpl(fileWrapperImpl0);
      FileWrapperImpl fileWrapperImpl6 = new FileWrapperImpl(fileWrapperImpl1, "^liW");
      FileWrapperImpl.listRoots();
      FileWrapperFactoryImpl fileWrapperFactoryImpl2 = new FileWrapperFactoryImpl();
      fileWrapperFactoryImpl2.create(" )", "^liW");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("^liW", " in schema ", "}mdn");
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject((IDatabaseObjectInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SYNONYM_TYPE_DBO;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.TRIGGER;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.TRIGGER;
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      fileWrapperFactoryImpl0.create("vo?");
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("vo?", "", "vo?");
      String string0 = DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("b<%WFO;w+gn&.k~xV");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("t:");
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("t:", "b<%WFO;w+gn&.k~xV", "T# ");
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      String string0 = DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      assertEquals("b<%WFO;w+gn&.k~xV", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.isBinaryType((TableColumnInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(connection0).getCatalog();
      doReturn(0).when(connection0).getTransactionIsolation();
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      SQLAlias sQLAlias0 = new SQLAlias();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection0, sQLDriver0);
      DriverPropertyInfo[] driverPropertyInfoArray0 = new DriverPropertyInfo[6];
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      sQLAlias0.setUserName("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      driverPropertyInfoArray0[0] = driverPropertyInfo0;
      DriverPropertyInfo driverPropertyInfo1 = new DriverPropertyInfo("4^io2q`fz", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      driverPropertyInfoArray0[1] = driverPropertyInfo1;
      DriverPropertyInfo driverPropertyInfo2 = new DriverPropertyInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "GlqRf )1D||[");
      DriverPropertyInfo driverPropertyInfo3 = new DriverPropertyInfo("$xoE^bI=2/4Y^dA{/pY", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      connectionWrapper0.getTransactionIsolation();
      DriverPropertyInfo driverPropertyInfo4 = new DriverPropertyInfo("4^io2q`fz", "8u.D/?MV");
      sQLAlias0.removePropertyChangeListener((PropertyChangeListener) null);
      driverPropertyInfo1.required = false;
      DriverPropertyInfo driverPropertyInfo5 = new DriverPropertyInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      SQLDriverProperty sQLDriverProperty0 = new SQLDriverProperty(driverPropertyInfo2);
      sQLDriverPropertyCollection0.addDriverProperty(sQLDriverProperty0);
      SQLDriver sQLDriver1 = new SQLDriver();
      SQLConnection sQLConnection1 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection0, sQLDriver1);
      driverPropertyInfo3.value = "8u.D/?MV";
      sQLConnection1.getCatalog();
      driverPropertyInfo3.required = false;
      dBCopyPlugin0.getPasteToTableInfo(sQLConnection0, "8u.D/?MV", "8u.D/?MV");
      SerialDate.getMonths();
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) sQLConnection1, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = new SQLAliasSchemaProperties();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "getProcedureTerm";
      stringArray0[1] = "";
      sQLAliasSchemaProperties0.getAllSchemaProceduresNotToBeCached();
      stringArray0[2] = "}tlmK}j{5-y7D.sj";
      stringArray0[3] = "}tlmK}j{5-y7D.sj";
      stringArray0[2] = "MojD4";
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString());
      byte[] byteArray0 = new byte[7];
      byteArray0[2] = (byte)45;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((byte)45);
      SQLAlias sQLAlias0 = new SQLAlias(integerIdentifier0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "1ar");
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection0, (ISQLDriver) null);
      String string0 = "cbrt";
      dBCopyPlugin0.getPasteToTableInfo(sQLConnection0, "cbrt", "pyi(Ol");
      DBUtil.getColumnType((ISQLConnection) sQLConnection0, (ITableInfo) null, "n@5;5(~569zD:~!");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("ax1", "ax1");
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("&BUm");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Vector<ITableInfo> vector0 = new Vector<ITableInfo>();
      vector0.add((ITableInfo) null);
      vector0.stream();
      List<IDatabaseObjectInfo> list0 = DBUtil.convertTableToObjectList(vector0);
      assertFalse(list0.isEmpty());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("mf %`|X9ZMhPqcn", "mf %`|X9ZMhPqcn", "mf %`|X9ZMhPqcn");
      stack0.add((IDatabaseObjectInfo) databaseObjectInfo0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(stack0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = sQLAlias0.getSchemaProperties();
      String[] stringArray0 = sQLAliasSchemaProperties0.getAllSchemaProceduresNotToBeCached();
      sQLAliasSchemaProperties0.getAllSchemaTableTypeCombinationsNotToBeCached(stringArray0, stringArray0);
      sQLAliasSchemaProperties0.setGlobalState((-1789569704));
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties0 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties1 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties2 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties3 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties4 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties5 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties6 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties7 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties[] sQLAliasSchemaDetailPropertiesArray0 = new SQLAliasSchemaDetailProperties[3];
      sQLAliasSchemaDetailPropertiesArray0[0] = sQLAliasSchemaDetailProperties6;
      sQLAliasSchemaDetailPropertiesArray0[1] = sQLAliasSchemaDetailProperties3;
      sQLAliasSchemaDetailPropertiesArray0[2] = sQLAliasSchemaDetailProperties2;
      sQLAliasSchemaProperties0.setSchemaDetails(sQLAliasSchemaDetailPropertiesArray0);
      String[] stringArray1 = sQLAliasSchemaProperties0.getAllSchemaProceduresNotToBeCached();
      sQLAliasSchemaProperties0.getAllSchemaTableTypeCombinationsNotToBeCached(stringArray1, stringArray1);
      DBUtil.typesAreEquivalent(2, 906);
      SQLAlias sQLAlias1 = new SQLAlias();
      SQLAliasColorProperties sQLAliasColorProperties0 = sQLAlias0.getColorProperties();
      sQLAliasColorProperties0.setOverrideToolbarBackgroundColor(false);
      sQLAliasColorProperties0.setOverrideStatusBarBackgroundColor(true);
      assertEquals(0, sQLAliasColorProperties0.getToolbarBackgroundColorRgbValue());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = new SQLAliasSchemaProperties();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "getProcedureTerm";
      stringArray0[1] = "";
      String[] stringArray1 = sQLAliasSchemaProperties0.getAllSchemaProceduresNotToBeCached();
      stringArray0[2] = "}tlmK}j{5-y7D.sj";
      stringArray0[3] = "Converting type code for column ";
      stringArray0[4] = "MojD4";
      sQLAliasSchemaProperties0.getAllSchemaTableTypeCombinationsNotToBeCached(stringArray1, stringArray0);
      sQLAliasSchemaProperties0.setGlobalState(2);
      SQLAliasSchemaDetailProperties[] sQLAliasSchemaDetailPropertiesArray0 = new SQLAliasSchemaDetailProperties[8];
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties0 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[0] = sQLAliasSchemaDetailProperties0;
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties1 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[1] = sQLAliasSchemaDetailProperties1;
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties2 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[2] = sQLAliasSchemaDetailProperties2;
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties3 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[3] = sQLAliasSchemaDetailProperties3;
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties4 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[4] = sQLAliasSchemaDetailProperties4;
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties5 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[5] = sQLAliasSchemaDetailProperties5;
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties6 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[6] = sQLAliasSchemaDetailProperties6;
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties7 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[7] = sQLAliasSchemaDetailProperties7;
      sQLAliasSchemaProperties0.setSchemaDetails(sQLAliasSchemaDetailPropertiesArray0);
      stringArray0[5] = ")@gh.,";
      stringArray0[6] = "QVYns-S(F=?*";
      stringArray0[7] = "";
      stringArray0[8] = "Xs\"[POu-F=`%fO9j2Qc";
      sQLAliasSchemaProperties0.getAllSchemaProceduresNotToBeCached();
      sQLAliasSchemaProperties0.getAllSchemaTableTypeCombinationsNotToBeCached(stringArray0, stringArray0);
      DBUtil.typesAreEquivalent(2, 2);
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAliasColorProperties sQLAliasColorProperties0 = sQLAlias0.getColorProperties();
      sQLAliasColorProperties0.setObjectTreeBackgroundColorRgbValue((-744));
      sQLAliasColorProperties0.setOverrideToolbarBackgroundColor(true);
      sQLAliasColorProperties0.setOverrideStatusBarBackgroundColor(true);
      sQLAlias0.setColorProperties(sQLAliasColorProperties0);
      SQLAliasSchemaProperties sQLAliasSchemaProperties1 = sQLAlias0.getSchemaProperties();
      assertFalse(sQLAliasSchemaProperties1.isCacheSchemaIndependentMetaData());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      fileWrapperFactoryImpl0.create("^lc)i", "^lc)i");
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)applicationFileWrappersImpl0.getEditWhereColsFile();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl("^lc)i");
      applicationFileWrappersImpl0.getCellImportExportSelectionsFile();
      applicationFileWrappersImpl0.getLicenceFile();
      fileWrapperImpl0.getParentFile();
      FileWrapperImpl fileWrapperImpl2 = new FileWrapperImpl(fileWrapperImpl0);
      fileWrapperImpl0.createNewFile();
      fileWrapperImpl0.getCanonicalFile();
      FileWrapperImpl fileWrapperImpl3 = new FileWrapperImpl(fileWrapperImpl0, "");
      applicationFileWrappersImpl0.getPluginsUserSettingsDirectory();
      MockFileWriter mockFileWriter0 = new MockFileWriter("^lc)i");
      FileWrapperImpl fileWrapperImpl4 = new FileWrapperImpl("", "");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("^lc)i");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "*!cvlZ)S+9");
      FilePrefixFilter filePrefixFilter0 = new FilePrefixFilter("J|dqsM}&-',^r'a");
      fileWrapperImpl0.listFiles((FileFilter) filePrefixFilter0);
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginAppSettingsFolder();
      dBCopyPlugin0.getPluginAppSettingsFolder();
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, ".EY?X~PV!{7`g", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROC_TYPE_DBO;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = "";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("oid", "m&", "m&", "7_QB", 11448505, "V9JV E77Ds[lYXm.(L", (-741), (-741), 32000, (-2303), "m&", "oid", 11448505, (-13), "No layout set for the appender named [");
      DBUtil.replaceDistinctDataType(2006, tableColumnInfo0, (ISession) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString() , anyInt() , anyInt());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("V9JV E77Ds[lYXm.(L", 2006, (-2450));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Setting additivity for \"", "nQ[U@DKv~1B2=*yr*!", "`0ZY8t_5ia:", "M?", 91, "s+D`vg.ZxYv", (-215), 91, (-6853), 4, "Length function is null for dialect=", "*Be.k?y1]*}[{", (-22), 1459, "Setting additivity for \"");
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultLeafIcon();
      defaultTreeCellRenderer0.firePropertyChange("M?", (double) (-215), (double) (-22));
      defaultTreeCellRenderer0.firePropertyChange("b~:,7", true, true);
      DatabaseObjectType.createNewDatabaseObjectType("nQ[U@DKv~1B2=*yr*!", icon0);
      DatabaseObjectType.createNewDatabaseObjectType("s+D`vg.ZxYv");
      int int0 = DBUtil.replaceDistinctDataType(1136, tableColumnInfo0, (ISession) null);
      assertEquals(1136, int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(connection0).getTransactionIsolation();
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("ZT4wje:.)af)uJR", "A+/0Ln");
      DriverPropertyInfo driverPropertyInfo1 = new DriverPropertyInfo((String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DriverPropertyInfo driverPropertyInfo2 = new DriverPropertyInfo("*Be.k?y1]*}[{", "4^wo2q`kz");
      connectionWrapper0.getTransactionIsolation();
      DriverPropertyInfo driverPropertyInfo3 = new DriverPropertyInfo("6&.$&6,.ShjH-.OP58", "*Be.k?y1]*}[{");
      DriverPropertyInfo driverPropertyInfo4 = new DriverPropertyInfo("+]';:#z1dnd;R", "GlqRf )1D||[");
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLDriver sQLDriver1 = new SQLDriver();
      SerialDate.getMonths();
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "AyK~2?[88BiI>gMA'|");
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(linkedList0);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.INDEX_TYPE_DBO;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("t:");
      DatabaseObjectType.createNewDatabaseObjectType("b<%FO;w+gn&.k~xV");
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("t:", "b<%FO;w+gn&.k~xV", "D# ");
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      String string0 = DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      assertEquals("b<%FO;w+gn&.k~xV", string0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("b<%WFO;w+gn&.k~xV", " tableNameX= ");
      DriverPropertyInfo driverPropertyInfo1 = new DriverPropertyInfo("b<%WFO;w+gn&.k~xV", "float8");
      DriverPropertyInfo driverPropertyInfo2 = new DriverPropertyInfo("29 =39@G'2q)zm", ". Skipping FK constraint");
      DriverPropertyInfo driverPropertyInfo3 = new DriverPropertyInfo("3)1~Hw}q", "float8");
      DriverPropertyInfo driverPropertyInfo4 = new DriverPropertyInfo("\"[&/@~2HnogxI3M", ",kRNrg=Z");
      driverPropertyInfo0.description = null;
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriverProperty[] sQLDriverPropertyArray0 = new SQLDriverProperty[1];
      SQLDriverProperty sQLDriverProperty0 = new SQLDriverProperty("insert into ", (String) null);
      driverPropertyInfo4.description = " tableNameX= ";
      sQLDriverPropertyArray0[0] = sQLDriverProperty0;
      sQLDriverPropertyCollection0.setDriverProperties(sQLDriverPropertyArray0);
      DriverPropertyInfo[] driverPropertyInfoArray0 = new DriverPropertyInfo[9];
      driverPropertyInfoArray0[0] = driverPropertyInfo3;
      driverPropertyInfo4.choices = null;
      driverPropertyInfoArray0[1] = driverPropertyInfo2;
      driverPropertyInfoArray0[2] = driverPropertyInfo4;
      driverPropertyInfoArray0[3] = driverPropertyInfo4;
      driverPropertyInfoArray0[4] = driverPropertyInfo4;
      driverPropertyInfoArray0[5] = driverPropertyInfo1;
      driverPropertyInfoArray0[6] = driverPropertyInfo2;
      driverPropertyInfoArray0[7] = driverPropertyInfo2;
      driverPropertyInfoArray0[8] = driverPropertyInfo0;
      sQLDriverPropertyCollection0.applyDriverPropertynfo(driverPropertyInfoArray0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, " ( ", (ITableInfo) null, (-4));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)fileWrapperFactoryImpl0.create("^liW", "^liW");
      String[] stringArray0 = new String[0];
      FileSuffixFilter fileSuffixFilter0 = new FileSuffixFilter(stringArray0);
      MockFile mockFile0 = new MockFile((String) null, "^liW");
      fileSuffixFilter0.accept(mockFile0);
      fileWrapperImpl0.listFiles((FileFilter) fileSuffixFilter0);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl1 = (FileWrapperImpl)applicationFileWrappersImpl0.getEditWhereColsFile();
      FileWrapperImpl fileWrapperImpl2 = new FileWrapperImpl("^liW");
      fileWrapperImpl0.getCanonicalFile();
      FileWrapperImpl fileWrapperImpl3 = new FileWrapperImpl(fileWrapperImpl1, " )");
      MockFileWriter mockFileWriter0 = new MockFileWriter("^liW");
      fileWrapperFactoryImpl0.create((FileWrapper) fileWrapperImpl1, " )");
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/102_squirrel-sql");
      fileWrapperImpl1.getAbsoluteFile();
      fileWrapperFactoryImpl0.create("^liW");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      FileWrapperImpl fileWrapperImpl4 = new FileWrapperImpl(fileWrapperImpl0);
      FileWrapperImpl fileWrapperImpl5 = new FileWrapperImpl(fileWrapperImpl0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "^liW");
      FileWrapperImpl fileWrapperImpl6 = new FileWrapperImpl(fileWrapperImpl1, "^liW");
      FileWrapperImpl.listRoots();
      FileWrapperFactoryImpl fileWrapperFactoryImpl2 = new FileWrapperFactoryImpl();
      fileWrapperFactoryImpl2.create(" )", "^liW");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL(dBCopyPlugin0, (ITableInfo) null, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ZoneId zoneId0 = ZoneId.systemDefault();
      ZoneId.getAvailableZoneIds();
      zoneId0.getId();
      zoneId0.getId();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("TW8{H@!lmGl(bC", (String) null, "(", (String) null, (byte) (-39), "(", (byte)69, (-3384), (-3384), (-3384), "TW8{H@!lmGl(bC", (String) null, 1337, (-3384), (String) null);
      int int0 = DBUtil.replaceDistinctDataType((-2103657448), tableColumnInfo0, (ISession) null);
      assertEquals((-2103657448), int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)102;
      byteArray0[1] = (byte) (-114);
      byteArray0[3] = (byte)13;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("1>V^2 LWy_T-&lP", (String) null, ", 'COLUMN'", "`Wf2wP!@+T W", 2004, "|;.CB", 304, (byte)13, 1, (-1722), "=a3HsGELYNQ", "`Wf2wP!@+T W", 3486, 2, "=a3HsGELYNQ");
      DBUtil.isBinaryType(tableColumnInfo0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.DATATYPE;
      Button button0 = null;
      try {
        button0 = new Button("i-V]j}tf\"}9n7");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("[K~aS! 7Ft%)|Hq", "long ascCi", "ywHG/Lu|.c_]B)[E", "4^wo2q`kz", (-3), "k;k]+w1h|Z!6vtY", 1308, (-3), (-542), 2331, "k;k]+w1h|Z!6vtY", "k;k]+w1h|Z!6vtY", (-3), 3747, "long ascCi");
      DBUtil.isBinaryType(tableColumnInfo0);
      Button button0 = null;
      try {
        button0 = new Button("k;k]+w1h|Z!6vtY");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", " that matched ", "y8D\"{rLmJ@cnl", ".", 2005, (String) null, (-267), 2001, (-858), (-784), "hi0E", "~*._~(<LS<NGeZBV\"5", (-1571), (-811), "|N1");
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultClosedIcon();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType("~*._~(<LS<NGeZBV\"5", icon0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.isBinaryType(tableColumnInfo0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.DATATYPE;
      Button button0 = null;
      try {
        button0 = new Button();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("G`u,#kvGitA`uTee4", "q]mC)V", "", "KJhgU06)[gq$", (-9999), "G`u,#kvGitA`uTee4", (-9999), (-9999), (-6), (-9999), "Ega {N!?xXK=A2Gb2.", "peAmitted. ry usingtNe add[rUY|ateBm+thd", (-1982292593), (-1982292593), "Ega {N!?xXK=A2Gb2.");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[6];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(tableColumnInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "peAmitted. ry usingtNe add[rUY|ateBm+thd", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "peAmitted. ry usingtNe add[rUY|ateBm+thd", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROC_TYPE_DBO;
      SQLDriver sQLDriver0 = new SQLDriver();
      // Undeclared exception!
      try { 
        DBUtil.convertTableToObjectList((List<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-1673));
      System.setCurrentTimeMillis((-678L));
      Stack<ITableInfo> stack0 = new Stack<ITableInfo>();
      List<IDatabaseObjectInfo> list0 = DBUtil.convertTableToObjectList(stack0);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.USER;
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[4];
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      assertEquals(4, list0.size());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("float8", "float8");
      DriverPropertyInfo driverPropertyInfo1 = new DriverPropertyInfo(")B39,=<N^Ko0N@%0*$", "DBUtil.error.unknowntype");
      DriverPropertyInfo driverPropertyInfo2 = new DriverPropertyInfo(";C'Hmb,", "LI[x8#B>%4ZHk?):,Jx");
      DriverPropertyInfo driverPropertyInfo3 = new DriverPropertyInfo(" in schema ", (String) null);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriverProperty sQLDriverProperty0 = new SQLDriverProperty("S%=4", "insert into ");
      SQLDriverProperty[] sQLDriverPropertyArray0 = new SQLDriverProperty[2];
      sQLDriverPropertyArray0[0] = sQLDriverProperty0;
      sQLDriverPropertyArray0[1] = sQLDriverProperty0;
      sQLDriverPropertyCollection0.setDriverProperties(sQLDriverPropertyArray0);
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "Couldn't find an exact match or destination tab ", "PJ#3OJ;+c", "Couldn't find an exact match or destination tab ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getColumnNames((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, (String) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null, "", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 1154, (String) null, 1154, 1154, 1154, 8, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "}UjTY", 2642, 200, (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[5];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy, net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy, net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy, net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy, net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", string0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      fileWrapperFactoryImpl0.create("^liW", "^liW");
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)applicationFileWrappersImpl0.getEditWhereColsFile();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl("^liW");
      applicationFileWrappersImpl0.getLicenceFile();
      FileWrapperImpl fileWrapperImpl2 = (FileWrapperImpl)fileWrapperImpl0.getParentFile();
      FileWrapperImpl fileWrapperImpl3 = new FileWrapperImpl(fileWrapperImpl0);
      FileWrapperImpl fileWrapperImpl4 = new FileWrapperImpl(fileWrapperImpl0, "");
      MockFileWriter mockFileWriter0 = new MockFileWriter("^liW");
      FileWrapperImpl fileWrapperImpl5 = new FileWrapperImpl("", "");
      FilePrefixFilter filePrefixFilter0 = new FilePrefixFilter("J|dqsM}&-',^r'a");
      fileWrapperImpl0.listFiles((FileFilter) filePrefixFilter0);
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/102_squirrel-sql");
      fileWrapperImpl0.getAbsoluteFile();
      FileWrapperImpl fileWrapperImpl6 = (FileWrapperImpl)fileWrapperFactoryImpl0.create("^liW");
      fileWrapperImpl1.getFileWriter();
      applicationFileWrappersImpl0.getLibraryDirectory();
      fileWrapperImpl2.listFiles((FileFilter) filePrefixFilter0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      fileWrapperFactoryImpl0.create((FileWrapper) fileWrapperImpl6, "");
      fileWrapperFactoryImpl0.create("J|dqsM}&-',^r'a");
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, "", "org.jfree.data.time.TimePeriodValues", "^liW");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DBUtil.typesAreEquivalent(450, 3);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("");
      uidIdentifier0.setString("79}b");
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      uidIdentifier1.setString("");
      uidIdentifier1.setString("M");
      uidIdentifier1.setString("values ( )");
      uidIdentifier0.setString("W2.pyA_[,");
      uidIdentifier0.setString("YMzZJRZg|GjlJi?y");
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      uidIdentifier2.setString("Z)2Ku");
      uidIdentifier0.setString("Null key passed");
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      uidIdentifier3.setString("ALTER TABLE ");
      uidIdentifier3.setString("HSQLDB");
      assertFalse(uidIdentifier3.equals((Object)uidIdentifier2));
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DBUtil.typesAreEquivalent((-13), (-13));
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("u6EJky%&7_X/(#;Ur");
      uidIdentifier0.setString("values ( )");
      uidIdentifier0.setString(")B39,=<NCKo0A@%0*$");
      uidIdentifier0.setString("FFz");
      uidIdentifier0.setString("FFz");
      uidIdentifier0.setString("FFz");
      uidIdentifier0.setString("FFz");
      uidIdentifier0.setString("MB");
      assertEquals("MB", uidIdentifier0.toString());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DBUtil.typesAreEquivalent(3, 3);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("values ( )");
      uidIdentifier0.setString("W2.pyA_[,");
      uidIdentifier0.setString("L!FG5>]EK");
      uidIdentifier0.setString("L!FG5>]EK");
      uidIdentifier0.setString(">v!K}FRztu");
      uidIdentifier0.setString(")B39,=<N^Ko0N@%0*$");
      uidIdentifier0.setString("Fz");
      uidIdentifier0.setString("Fz");
      uidIdentifier0.setString("Fz");
      uidIdentifier0.setString("MB");
      assertEquals("MB", uidIdentifier0.toString());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DBUtil.typesAreEquivalent((-7), 115);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("wq3fg[,");
      uidIdentifier0.setString("Couldn't fino an exact match or destQnation tab ");
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      JScrollPane jScrollPane0 = new JScrollPane();
      DBUtil.typesAreEquivalent((-7), (-7));
      jScrollPane0.validate();
      jScrollPane0.getViewport();
      uidIdentifier0.setString((String) null);
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      uidIdentifier2.setString(">2NF|m|hS&rQ,");
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      uidIdentifier2.setString("extract(second from ?1)");
      uidIdentifier1.setString("Ewn6");
      uidIdentifier0.setString("");
      uidIdentifier3.setString((String) null);
      assertFalse(uidIdentifier3.equals((Object)uidIdentifier0));
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(1919);
      boolean boolean0 = DBUtil.typesAreEquivalent((-3), (-1104));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SYNONYM_TYPE_DBO;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.TRIGGER;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.TRIGGER;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.COLUMN;
      String string0 = DBUtil.fixCase((ISession) null, (String) null);
      assertNull(string0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      System.setCurrentTimeMillis(2683L);
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getFwJarFile();
      applicationFileWrappersImpl0.getDTPropertiesFile();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      DBUtil.validateColumnNames((ITableInfo) null, (SessionInfoProvider) null);
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      fileWrapperFactoryImpl0.create((FileWrapper) null, "Label.font");
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      FileWrapperImpl fileWrapperImpl0 = fileWrapperFactoryImpl1.createTempFile("v3?{KG'r93<WH;^m", "v3?{KG'r93<WH;^m", (FileWrapper) null);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "T@^Wr";
      stringArray0[1] = "select ";
      stringArray0[2] = "from_unixtime";
      stringArray0[3] = "from_unixtime";
      stringArray0[4] = "v3?{KG'r93<WH;^m";
      stringArray0[5] = "from_unixtime";
      fileWrapperImpl0.createNewFile();
      stringArray0[6] = "v3?{KG'r93<WH;^m";
      stringArray0[7] = "select ";
      FilesystemFilter filesystemFilter0 = new FilesystemFilter(stringArray0, "T@^Wr", false);
      fileWrapperImpl0.listFiles((FilenameFilter) filesystemFilter0);
      FileWrapper fileWrapper0 = fileWrapperFactoryImpl0.create(fileWrapperImpl0);
      fileWrapper0.getCanonicalFile();
      fileWrapperFactoryImpl1.create(")", "~q>&5eAop|=WF\"");
      fileWrapperFactoryImpl0.create(fileWrapper0, "select ");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(")", "SCdL$xa{C:\"W5", "5zG:~", "Label.font", (-7), "v3?{KG'r93<WH;^m", (-7), (-7), (-7), (-7), ")2p", "SCdL$xa{C:\"W5", 9, (-7), "T@^Wr");
      DBUtil.isBinaryType(tableColumnInfo0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.DATATYPE;
      Button button0 = null;
      try {
        button0 = new Button("v3?{KG'r93<WH;^m");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Setting additivity for \"", "nQ[U@DKv~1B2=*yr*!", "`0ZY8t_5ia:", "M?", 91, "s+D`vg.ZxYv", (-215), 91, (-6853), 4, "Length function is null for dialect=", "*Be.k?y1]*}[{", (-22), 1459, "Setting additivity for \"");
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultLeafIcon();
      defaultTreeCellRenderer0.firePropertyChange("M?", (double) (-215), (double) (-22));
      defaultTreeCellRenderer0.firePropertyChange("b~:,7", true, true);
      DatabaseObjectType.createNewDatabaseObjectType("nQ[U@DKv~1B2=*yr*!", icon0);
      DatabaseObjectType.createNewDatabaseObjectType("s+D`vg.ZxYv");
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, tableColumnInfo0, "+H", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      SQLAliasColorProperties sQLAliasColorProperties0 = new SQLAliasColorProperties();
      SQLAlias sQLAlias0 = new SQLAlias();
      sQLAlias0.removePropertyChangeListener((PropertyChangeListener) null);
      sQLAlias0.setColorProperties(sQLAliasColorProperties0);
      SQLAlias sQLAlias1 = new SQLAlias();
      sQLAlias1.getSchemaProperties();
      String string0 = DBUtil.getLastStatement();
      assertNull(string0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getSourceSession();
      String string0 = DBUtil.fixCase((ISession) null, "");
      assertEquals("", string0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROC_TYPE_DBO;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.INDEX_TYPE_DBO;
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultLeafIcon();
      DatabaseObjectType.createNewDatabaseObjectType("UF=F>!Q", icon0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("UF=F>!Q", "52LkN8#+`twU", "52LkN8#+`twU", "b}L", 726, "`0ZY8t_5ia:", (-1151), (-1151), (-129), (-3290), "P|<9Wz", "5\n", (-129), (-1151), "UF=F>!Q");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("`0ZY8t_5ia:");
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.COLUMN;
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      JTree jTree0 = new JTree((TreeModel) null);
      basicTreeUI0.stopEditing(jTree0);
      basicTreeUI0.getCollapsedIcon();
      DatabaseObjectType.createNewDatabaseObjectType("52LkN8#+`twU");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      defaultTreeCellRenderer1.getDefaultLeafIcon();
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      fileWrapperFactoryImpl0.create("^liW", "^liW");
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getEditWhereColsFile();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("^liW");
      FileWrapper fileWrapper0 = FileWrapperImpl.createTempFile("^liW", "^liW", (FileWrapper) fileWrapperImpl0);
      fileWrapper0.getFileWriter();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl(fileWrapper0, "^liW");
      MockFileWriter mockFileWriter0 = new MockFileWriter(" )");
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      FileWrapperImpl fileWrapperImpl2 = new FileWrapperImpl("Tcvy");
      fileWrapperFactoryImpl0.create("sNDt*|#,|A]au`5e%", " )");
      fileWrapperFactoryImpl0.create(fileWrapperImpl1);
      fileWrapperFactoryImpl0.create("Tcvy", ". Using 'max'");
      FileWrapperFactoryImpl fileWrapperFactoryImpl2 = new FileWrapperFactoryImpl();
      fileWrapperFactoryImpl0.create("sNDt*|#,|A]au`5e%");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl2);
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      System.setCurrentTimeMillis((-2406L));
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias((IIdentifier) null);
      sQLAlias0.setUserName("Ib~Z&#=gypX+g+`Ny@");
      DBUtil dBUtil0 = new DBUtil();
      sQLAlias0.equals(dBUtil0);
      sQLAlias0.equals((Object) null);
      sQLAlias0.getDriverPropertiesClone();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-215));
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "_)H|]DmQ(FaXU:~2", "|m^N");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      DBUtil.getColumnList(tableColumnInfoArray0);
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROC_TYPE_DBO;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      String string0 = "sNDt*|#,|A]au`5e%";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("\n", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "fixCase: unexpected exception: ", "fixCase: unexpected exception: ", 1353, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-3303), 726, Integer.MIN_VALUE, 36, "A5l@", "fixCase: unex&ected exceptio8: ", 36, 36, "sNDt*|#,|A]au`5e%");
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin0, tableColumnInfo0, "newObjectName", "=sFq!3DX");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate((ISQLConnection) null, "storageOption", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[19];
      // Undeclared exception!
      try { 
        DBUtil.getColumnList(tableColumnInfoArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      System.setCurrentTimeMillis(2683L);
      LocalTime localTime0 = MockLocalTime.ofNanoOfDay(0L);
      Time.valueOf(localTime0);
      System.setCurrentTimeMillis(0L);
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, ")B39,=<N^Ko0N@%0*$");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      System.setCurrentTimeMillis(2683L);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("The following classpath entries are available to the bundle loader:\n", "select @@identity", "C", "select @@identity", (-759), "values ( )", (-759), (-759), (-571), 123, "8H", "3e,1(", (-571), (-310), "BjmU-3");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.DATABASE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("mfX5jJvm:[\"_1f");
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.SESSION;
      DatabaseObjectType.createNewDatabaseObjectType("select @@identity");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      defaultTreeCellRenderer0.getDefaultLeafIcon();
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.SYNONYM_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROC_TYPE_DBO;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.INDEX_TYPE_DBO;
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultLeafIcon();
      DatabaseObjectType.createNewDatabaseObjectType("UF=F>!Q", icon0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("UF=F>!Q", "52LkN8#+`twU", "52LkN8#+`twU", "b}L", 726, "iK", (-1151), (-1151), (-129), (-3290), "P|<9_k", "5\n", (-129), (-1151), "UF=F>!Q");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("iK");
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.COLUMN;
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      JTree jTree0 = new JTree((TreeModel) null);
      basicTreeUI0.stopEditing(jTree0);
      basicTreeUI0.getCollapsedIcon();
      DatabaseObjectType.createNewDatabaseObjectType("52LkN8#+`twU");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      defaultTreeCellRenderer1.getDefaultLeafIcon();
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.SYNONYM_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      System.setCurrentTimeMillis(1430L);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROC_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.COLUMN;
      DatabaseObjectType.createNewDatabaseObjectType("=/8:q< HN%j<.4");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType((String) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("_0", "_0", (String) null, "${", 4698, "=/8:q< HN%j<.4", 4698, (-3847), (-3303), (-3303), "_0", "select ", (byte)3, (-166), "|<9A+");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("=/8:q< HN%j<.4");
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer1.getDefaultLeafIcon();
      DatabaseObjectType.createNewDatabaseObjectType("lng ascii", icon0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.DATABASE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType4);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey("org.hibernate.dialect.InformixDialect$1", "org.hibernate.dialect.InformixDialect$1", "org.hibernate.dialect.InformixDialect$1", foreignKeyInfo0, dBCopyPlugin0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, " /cRT_W/up$Q1", "GENN9IPf\"`KeYP\"5", "GENN9IPf\"`KeYP\"5", (-2857));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, " [", "5j$1'|[", (String) null, 162);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("'oiJu_(7}Lf.<}w 0", "D&", "D&", "org.jfree.data.xy.CategoryTableXYDataset", (-1054), "'oiJu_(7}Lf.<}w 0", 0, 23505, 2908, 2520, "org.jfree.data.xy.CategoryTableXYDataset", "org.jfree.data.xy.CategoryTableXYDataset", 23505, 2496, "'oiJu_(7}Lf.<}w 0");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject((IDatabaseObjectInfo) null, (SchemaInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setAutoCommitEnabled(true);
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = null;
      try {
        connectionWrapper0 = new ConnectionWrapper((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      String string0 = "";
      DBUtil.setLastStatementValues("");
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      String string1 = "xu58hMaS? #H";
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("xu58hMaS? #H");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ZoneId zoneId0 = ZoneId.systemDefault();
      ZoneId.getAvailableZoneIds();
      zoneId0.getId();
      zoneId0.getId();
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "iN");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = new SQLAliasSchemaProperties();
      SQLAliasSchemaProperties sQLAliasSchemaProperties1 = new SQLAliasSchemaProperties();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "MojD4";
      SQLAliasSchemaDetailProperties[] sQLAliasSchemaDetailPropertiesArray0 = new SQLAliasSchemaDetailProperties[4];
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties0 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[0] = sQLAliasSchemaDetailProperties0;
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties1 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[1] = sQLAliasSchemaDetailProperties1;
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties2 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[2] = sQLAliasSchemaDetailProperties2;
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties3 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[3] = sQLAliasSchemaDetailProperties3;
      sQLAliasSchemaProperties1.setSchemaDetails(sQLAliasSchemaDetailPropertiesArray0);
      stringArray0[1] = "KGI2M$8kArC<yXH $>";
      sQLAliasSchemaProperties1.getAllSchemaTableTypeCombinationsNotToBeCached(stringArray0, stringArray0);
      stringArray0[2] = "The following classpath entries are available to the bundle loader:\n";
      stringArray0[3] = "The following classpath entries are available to the bundle loader:\n";
      stringArray0[4] = "The following classpath entries are available to the bundle loader:\n";
      sQLAliasSchemaProperties0.getSchemaLoadInfos(sQLAliasSchemaProperties1, stringArray0, stringArray0);
      String[] stringArray1 = new String[5];
      stringArray1[0] = "The following classpath entries are available to the bundle loader:\n";
      stringArray1[1] = "The following classpath entries are available to the bundle loader:\n";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Encountered unexpected exception when attempting to call schemaInfo.getTables with catalog = ", "A{[", "substr(", "k;k]+w1h|Z!6vtY", 2, "sNDt*|#,|A]au`5e%", 2, 1, (-1536), 1308, ")|.", "MojD4", 2, 3747, "sNDt*|#,|A]au`5e%");
      DBUtil.isBinaryType(tableColumnInfo0);
      Button button0 = null;
      try {
        button0 = new Button("The following classpath entries are available to the bundle loader:\n");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      System.setCurrentTimeMillis(2683L);
      LocalTime localTime0 = MockLocalTime.ofNanoOfDay(0L);
      Time.valueOf(localTime0);
      System.setCurrentTimeMillis(1L);
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, "MB", "|>Sm^a", "org.jfree.data.time.TimePeriodFormatException");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, "s$\",p  N!WVK~n^0", "s$\",p  N!WVK~n^0");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      DBUtil.getLastStatementValues();
      DBUtil.setLastStatement("ALTER TABLE ");
      DBUtil.getLastStatement();
      DBUtil.setLastStatement("add_months");
      SQLDriver sQLDriver0 = new SQLDriver();
      Stack<ITableInfo> stack0 = new Stack<ITableInfo>();
      assertEquals(0, stack0.size());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      System.setCurrentTimeMillis(2683L);
      LocalTime localTime0 = MockLocalTime.ofNanoOfDay(0L);
      Time.valueOf(localTime0);
      System.setCurrentTimeMillis(2683L);
      // Undeclared exception!
      try { 
        DBUtil.dropTable("|>Sm^a", "|>Sm^a", "", (ISession) null, false, (-2390));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }
}
