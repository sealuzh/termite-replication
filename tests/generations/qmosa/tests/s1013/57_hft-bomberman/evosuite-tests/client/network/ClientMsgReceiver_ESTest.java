/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 02:08:11 GMT 2019
 */

package client.network;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import client.BomberClient;
import client.network.ClientMsgReceiver;
import java.awt.HeadlessException;
import java.net.Proxy;
import java.net.Socket;
import java.sql.ClientInfoStatus;
import java.sql.SQLClientInfoException;
import java.sql.SQLException;
import java.sql.SQLIntegrityConstraintViolationException;
import java.sql.SQLTransactionRollbackException;
import java.util.Map;
import java.util.Stack;
import messages.global.GlobalStateMsg;
import messages.round.BombExplodedMsg;
import messages.round.RoundTimeOneSecondLeftMsg;
import messages.session.SessionParticipationMsg;
import org.apache.log4j.LogManager;
import org.apache.log4j.helpers.LogLog;
import org.apache.log4j.spi.RepositorySelector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClientMsgReceiver_ESTest extends ClientMsgReceiver_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int int0 = 0;
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(0);
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      boolean boolean0 = false;
      LogLog.setInternalDebugging(false);
      LogLog.setInternalDebugging(false);
      String string0 = "messages.round.RoundScoreMsg";
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      int int1 = (-1);
      String string1 = "client.network.ClientMsgReceiver";
      SessionParticipationMsg sessionParticipationMsg0 = new SessionParticipationMsg(boolean0, int1, string1);
      clientMsgReceiver0.processMsg(sessionParticipationMsg0);
      SQLClientInfoException sQLClientInfoException0 = new SQLClientInfoException();
      Map<String, ClientInfoStatus> map0 = sQLClientInfoException0.getFailedProperties();
      SQLClientInfoException sQLClientInfoException1 = new SQLClientInfoException(map0, sQLClientInfoException0);
      sQLClientInfoException1.getFailedProperties();
      String string2 = "";
      SQLException sQLException0 = new SQLException(string2, string0, int0, sQLClientInfoException1);
      assertEquals(0, sQLException0.getErrorCode());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      int int0 = 2263;
      Stack<Integer> stack0 = new Stack<Integer>();
      boolean boolean0 = true;
      BombExplodedMsg bombExplodedMsg0 = new BombExplodedMsg(int0, stack0, stack0, stack0, boolean0);
      clientMsgReceiver0.processMsg(bombExplodedMsg0);
      assertFalse(clientMsgReceiver0.isInterrupted());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Proxy.Type proxy_Type0 = Proxy.Type.SOCKS;
      int int0 = 0;
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(0);
      Proxy proxy0 = new Proxy(proxy_Type0, mockInetSocketAddress0);
      MockSocket mockSocket0 = new MockSocket(proxy0);
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      GlobalStateMsg globalStateMsg0 = new GlobalStateMsg(int0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(globalStateMsg0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      System.setCurrentTimeMillis(1484L);
      MockSocket mockSocket0 = new MockSocket();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      RoundTimeOneSecondLeftMsg roundTimeOneSecondLeftMsg0 = new RoundTimeOneSecondLeftMsg(1484L);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(roundTimeOneSecondLeftMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      MockThread.interrupted();
      SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException("&", "&");
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[12];
      StackTraceElement stackTraceElement0 = new StackTraceElement("&", "", "PZ? #IA%u", 1);
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement[] stackTraceElementArray1 = sQLTransactionRollbackException0.getStackTrace();
      StackTraceElement stackTraceElement1 = new StackTraceElement("&", "avL4Vj", "&", 1);
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("&", "", "&", (-2275));
      StackTraceElement stackTraceElement3 = new StackTraceElement("PZ? #IA%u", "", "", (-2275));
      stackTraceElementArray0[3] = stackTraceElement3;
      sQLTransactionRollbackException0.setStackTrace(stackTraceElementArray1);
      StackTraceElement stackTraceElement4 = new StackTraceElement("avL4Vj", "&", "Suoa.+S/\bp", 0);
      sQLTransactionRollbackException0.setStackTrace(stackTraceElementArray1);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.displayErrorMessage();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      System.setCurrentTimeMillis(1484L);
      ClientMsgReceiver clientMsgReceiver0 = null;
      try {
        clientMsgReceiver0 = new ClientMsgReceiver((Socket) null, (BomberClient) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("common.network.MsgReceiver", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "J(");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "J(");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "J(");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "J)bE`5ayjjk");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "J(");
      RepositorySelector repositorySelector0 = mock(RepositorySelector.class, new ViolatedAssumptionAnswer());
      LogManager.setRepositorySelector(repositorySelector0, mockSocket0);
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException0 = new SQLIntegrityConstraintViolationException("CONNECTION LOST", ",-YJ");
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.closeConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MockThread.interrupted();
      MockThread.interrupted();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&");
      SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException("&", "&");
      sQLTransactionRollbackException0.getLocalizedMessage();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[12];
      StackTraceElement stackTraceElement0 = new StackTraceElement("&", "", "PZ? #IA%u", 1);
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement[] stackTraceElementArray1 = sQLTransactionRollbackException0.getStackTrace();
      StackTraceElement stackTraceElement1 = new StackTraceElement("&", "avL4Vj", "&", 1);
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("&", "", "&", (-2272));
      stackTraceElementArray0[2] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("PZ? #IA%u", "", "", 1878);
      stackTraceElementArray0[3] = stackTraceElement3;
      sQLTransactionRollbackException0.setStackTrace(stackTraceElementArray1);
      StackTraceElement stackTraceElement4 = new StackTraceElement("", "&", "h$}MZ>rx]", 0);
      sQLTransactionRollbackException0.setStackTrace(stackTraceElementArray1);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.handleConnectionLoss(sQLTransactionRollbackException0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }
}
