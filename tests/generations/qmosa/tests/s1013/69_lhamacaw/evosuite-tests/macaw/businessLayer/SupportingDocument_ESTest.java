/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 02:15:49 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SupportingDocument_ESTest extends SupportingDocument_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath((String) null);
      supportingDocument0.setFileName("=kZ?[ER");
      supportingDocument0.getDisplayName();
      supportingDocument0.setFileName("/%<JxRK*].!EJf+");
      String string0 = supportingDocument0.getDisplayName();
      assertEquals("-", string0);
      
      supportingDocument0.getFilePath();
      String string1 = supportingDocument0.getDisplayItemIdentifier();
      assertEquals("0", string1);
      assertFalse(supportingDocument0.isNewRecord());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.4422633938438842
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("-NON_EXISTENT_ONTOLOGY_TERM_ASSOCIATION", "-NON_EXISTENT_ONTOLOGY_TERM_ASSOCIATION");
      supportingDocument0.setDescription("-NON_EXISTENT_ONTOLOGY_TERM_ASSOCIATION");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.0287771788074767
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("NON_EXISTENT_CATEGORY");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.getDisplayItemIdentifier();
      supportingDocument0.getDisplayName();
      supportingDocument1.setFileName((String) null);
      supportingDocument0.getFilePath();
      supportingDocument0.getDisplayItemIdentifier();
      supportingDocument1.getFileName();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.getFileName();
      User user0 = new User();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument1.clone();
      supportingDocument1.setDocumentCode("-");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument4.getDisplayName();
      supportingDocument4.getFileName();
      SupportingDocument.detectFieldChanges(user0, supportingDocument3, supportingDocument3);
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.718412944101992
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      User user0 = new User("UNABLE_TO_CHECK_USER_EXISTS", "UNABLE_TO_CHECK_USER_EXISTS");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("UNABLE_TO_CHECK_USER_EXISTS");
      supportingDocument0.setTitle("UNABLE_TO_CHECK_USER_EXISTS");
      User user1 = new User("UNABLE_TO_CHECK_USER_EXISTS", "UNABLE_TO_CHECK_USER_EXISTS");
      user1.setPhone("~s");
      user1.setAddressLine1("user.fh/tame.saveChanges");
      user0.setPassword("~s");
      user0.setEmail("W`?BcfgKg0$");
      user1.setUserID("UNABLE_TO_CHECK_USER_EXISTS");
      user1.setAddressLine1("~s");
      user1.setAddressLine2("W#.^uI=!vNRl3p?iRe3");
      User user2 = (User)user1.clone();
      supportingDocument0.setDocumentCode("user.status.unverified");
      SupportingDocument.validateFields(supportingDocument0);
      user1.setAffiliation("~s");
      User user3 = new User();
      user3.setPassword(" t2w BZ:W");
      user3.setAddressLine1("1a[snk;7BtCs");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      User.detectFieldChanges(user0, user0, user3);
      User user4 = new User("~s", "W#.^uI=!vNRl3p?iRe3");
      User user5 = new User("UNABLE_TO_CHECK_USER_EXISTS", "W`?BcfgKg0$");
      user4.setCity("1a[snk;7BtCs");
      user4.setPhone("?oFoe#`YjJH#@57[-%\"");
      User.checkValidUserIDField("UNABLE_TO_CHECK_USER_EXISTS");
      User user6 = new User();
      user2.setFirstName("user.city.saveChanges");
      User.detectFieldChanges(user1, user2, user0);
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user2, supportingDocument0, supportingDocument1);
      assertEquals(0, supportingDocument1.getIdentifier());
      assertEquals(3, arrayList0.size());
      assertFalse(supportingDocument1.isNewRecord());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.9587692484551713
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      System.setCurrentTimeMillis((-419L));
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument0.setDocumentCode("supportingDocument.fileName.saveChanges");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.getFileName();
      User user0 = new User("RuNs:)=#d8qQLrMr", "supportingDocument.fileName.saveChanges");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument2);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.5491065600229934
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      User user0 = new User("UNABLE_TO_CHECK_USER_EXISTS", "UNABLE_TO_CHECK_USER_EXISTS");
      user0.setIdentifier((-1670));
      user0.setPassword("l2|#n+VZdgq&b");
      user0.setAddressLine2("l2|#n+VZdgq&b");
      user0.setIdentifier((-1670));
      user0.setPhone("l2|#n+VZdgq&b");
      User.detectFieldChanges(user0, user0, user0);
      user0.setLastName("UNABLE_TO_CHECK_USER_EXISTS");
      user0.setPhone("70>tV/r\"AhM{_#Fr");
      user0.setUserID("UNABLE_TO_CHECK_USER_EXISTS");
      user0.setStatus("iqS~jB?u 8");
      user0.setStatus("UNABLE_TO_CHECK_USER_EXISTS");
      user0.setPhone("x8FHPF=YJ@jJggW\"1");
      User user1 = (User)user0.clone();
      user0.setLastName("70>tV/r\"AhM{_#Fr");
      user0.setUserID("#s,>2/tg.");
      User.checkValidUserIDField("UNABLE_T_GET_RIGINL_VALUE_LABEL");
      user1.setFirstName("user.addressLine2.label");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user2 = null;
      User.detectFieldChanges((User) null, user0, user0);
      supportingDocument0.getDisplayItemIdentifier();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDocumentCode("0");
      user0.setCounty("l2|#n+VZdgq&b");
      user0.setStatus("UNABLE_TO_CHECK_USER_EXISTS");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      // Undeclared exception!
      try { 
        User.detectFieldChanges(user0, (User) null, user0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.718412944101992
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      User user0 = new User("U{ABLE_Tt_CHECK_USER_EXISTS", "U{ABLE_Tt_CHECK_USER_EXISTS");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("U{ABLE_Tt_CHECK_USER_EXISTS");
      supportingDocument0.setTitle("U{ABLE_Tt_CHECK_USER_EXISTS");
      User user1 = new User("U{ABLE_Tt_CHECK_USER_EXISTS", "U{ABLE_Tt_CHECK_USER_EXISTS");
      user1.setPhone(" ?NDB9oq:&1_ccNsq/p");
      user0.setAffiliation("6ej>722b");
      user1.setAddressLine1("user.firstNaue.saveChanges");
      user0.setPassword(" ?NDB9oq:&1_ccNsq/p");
      user0.setEmail(" ?NDB9oq:&1_ccNsq/p");
      user1.setUserID("U{ABLE_Tt_CHECK_USER_EXISTS");
      user0.setUserID("W#.^uI=!vNRl3p?iRe3");
      user1.setAddressLine1(" ?NDB9oq:&1_ccNsq/p");
      user1.setAddressLine2("W#.^uI=!vNRl3p?iRe3");
      user1.clone();
      supportingDocument0.setDocumentCode("user.status.unve(ified");
      SupportingDocument.validateFields(supportingDocument0);
      user1.setAffiliation(" ?NDB9oq:&1_ccNsq/p");
      User user2 = new User();
      user2.setPassword("{)|C/j\"mH");
      user2.setAddressLine1("<wSbz7dOAweiu/-");
      User.detectFieldChanges(user0, user0, user2);
      User user3 = new User(" ?NDB9oq:&1_ccNsq/p", "W#.^uI=!vNRl3p?iRe3");
      User user4 = new User("U{ABLE_Tt_CHECK_USER_EXISTS", "{)|C/j\"mH");
      user3.setPostCode("U{ABLE_Tt_CHECK_USER_EXISTS");
      user3.setCity("<wSbz7dOAweiu/-");
      user3.setPhone("?oFoe#`YjJH#@57[-%\"");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user1, supportingDocument1, supportingDocument0);
      try { 
        User.checkValidUserIDField("U{ABLE_Tt_CHECK_USER_EXISTS");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The field \"User ID\" value \"U{ABLE_Tt_CHECK_USER_EXISTS\" may present a security risk.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.0286127862380208
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("supportingDocument.documentCode.label");
      supportingDocument0.getDisplayItemIdentifier();
      supportingDocument0.getFilePath();
      supportingDocument0.setFileName("");
      supportingDocument0.getFilePath();
      supportingDocument0.getDisplayItemIdentifier();
      supportingDocument0.getFileName();
      supportingDocument0.getFileName();
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = (SupportingDocument)supportingDocument0.clone();
      supportingDocument2.setFileName("");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument0.getFileName();
      SupportingDocument.detectFieldChanges(user0, supportingDocument3, supportingDocument0);
      SupportingDocument supportingDocument4 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.0947696682745556
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      supportingDocument0.getDisplayItemIdentifier();
      supportingDocument0.getDisplayItemIdentifier();
      supportingDocument0.getDisplayName();
      supportingDocument0.getDisplayName();
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setTitle("-");
      supportingDocument1.getDisplayName();
      supportingDocument0.getDisplayName();
      supportingDocument0.setTitle((String) null);
      supportingDocument1.setTitle("0");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument1.getDisplayName();
      SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument0);
      supportingDocument1.getDisplayName();
      supportingDocument0.getDisplayName();
      SupportingDocument supportingDocument3 = (SupportingDocument)supportingDocument2.clone();
      supportingDocument3.getDisplayName();
      supportingDocument3.getDisplayItemIdentifier();
      supportingDocument2.getDisplayName();
      supportingDocument2.getDisplayName();
      supportingDocument0.setDocumentCode("-");
      supportingDocument1.getDisplayName();
      supportingDocument0.getDisplayName();
      supportingDocument2.getDocumentCode();
      supportingDocument1.getDisplayName();
      supportingDocument0.getTitle();
      supportingDocument1.getDisplayName();
      try { 
        SupportingDocument.validateFields(supportingDocument1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.688750001065033
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle((String) null);
      supportingDocument0.setDocumentCode((String) null);
      supportingDocument0.setFilePath((String) null);
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      supportingDocument1.clone();
      supportingDocument0.getDocumentCode();
      SupportingDocument supportingDocument2 = (SupportingDocument)supportingDocument0.clone();
      assertFalse(supportingDocument2.isNewRecord());
      assertEquals("0", supportingDocument2.getDisplayItemIdentifier());
      assertNotSame(supportingDocument2, supportingDocument1);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.isNewRecord();
      System.setCurrentTimeMillis(20L);
      System.setCurrentTimeMillis(20L);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.156128503695672
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      assertFalse(supportingDocument1.isNewRecord());
      assertEquals("0", supportingDocument1.getDisplayItemIdentifier());
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object object0 = new Object();
      User user0 = new User("NON_EXISTENT_ONTsLOGYxTERM_AJSOCIATION", (String) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      // Undeclared exception!
      try { 
        SupportingDocument.detectFieldChanges(user0, supportingDocument0, (SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.442888784713178
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      System.setCurrentTimeMillis((-419L));
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("UNABLE_TO_CHECK_VARIABLE_DUPLICATES");
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.getDocumentCode();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.8867841616872596
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-2927));
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      supportingDocument0.getIdentifier();
      supportingDocument0.getDescription();
      supportingDocument1.setDescription("");
      supportingDocument1.clone();
      supportingDocument0.setIsNewRecord(true);
      User user0 = new User("", "");
      try { 
        User.validateFields(user0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.441570393150884
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = "UNABLE_TO_CHECK_USER_EXISTS";
      User user0 = new User("UNABLE_TO_CHECK_USER_EXISTS", "UNABLE_TO_CHECK_USER_EXISTS");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("UNABLE_TO_CHECK_USER_EXISTS");
      User user1 = new User("UNABLE_TO_CHECK_USER_EXISTS", "UNABLE_TO_CHECK_USER_EXISTS");
      String string1 = "~s";
      user1.setCity((String) null);
      user1.setPhone("~s");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      user1.setLastName("W&T'(~A|&L");
      user0.setPassword("~s");
      user0.setEmail("Lav?Ycf?Kg0$");
      user1.setUserID("UNABLE_TO_CHECK_USER_EXISTS");
      user1.setAddressLine2("W#.^uI=!vNRl3p?iRe3");
      user1.clone();
      supportingDocument0.setDocumentCode("user.status.unverified");
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.9720861369674885
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-2888));
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      supportingDocument0.setDocumentCode("E3kT");
      supportingDocument1.setFileName("E3kT");
      supportingDocument1.setIdentifier(645);
      supportingDocument0.getIdentifier();
      supportingDocument0.getDescription();
      supportingDocument0.setIdentifier(1385);
      supportingDocument0.setIsNewRecord(true);
      supportingDocument1.getFilePath();
      supportingDocument0.getIdentifier();
      User user0 = new User();
      try { 
        User.validateFields(user0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.7313362783027224
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getIdentifier();
      User user0 = new User();
      user0.setPostCode("");
      user0.setPostCode("");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      supportingDocument0.setFilePath("");
      user0.setCounty(",6]&bC.-)S1C9]na");
      supportingDocument0.setFileName("-");
      supportingDocument0.getDisplayName();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      user0.clone();
      supportingDocument0.getDisplayName();
      supportingDocument0.getFileName();
      supportingDocument0.getDocumentCode();
      supportingDocument0.getFilePath();
      supportingDocument0.setDescription("M-}+ZD0#;3 X%6T`");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.718412944101992
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      User user0 = new User("UNABLE_TO_CHECK_USER_EXISTS", "UNABLE_TO_CHECK_USER_EXISTS");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("UNABLE_TO_CHECK_USER_EXISTS");
      supportingDocument0.setTitle("UNABLE_TO_CHECK_USER_EXISTS");
      User user1 = new User("UNABLE_TO_CHECK_USER_EXISTS", "UNABLE_TO_CHECK_USER_EXISTS");
      user1.setPhone("~s");
      user1.setAddressLine1("user.firstName.saveChanges");
      user0.setPassword("~s");
      user0.setEmail("W`?BcfgKg0$");
      user1.setUserID("UNABLE_TO_CHECK_USER_EXISTS");
      user1.setAddressLine1("~s");
      user1.setAddressLine2("W#.^uI=!vNRl3p?iRe3");
      User user2 = (User)user1.clone();
      supportingDocument0.setDocumentCode("user.status.unverified");
      SupportingDocument.validateFields(supportingDocument0);
      user1.setAffiliation("~s");
      User user3 = new User();
      user3.setPassword(" t2w BZ:W");
      user3.setAddressLine1("1a[snk;7BtCs");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      User.detectFieldChanges(user0, user0, user3);
      User user4 = new User("~s", "W#.^uI=!vNRl3p?iRe3");
      User user5 = new User("UNABLE_TO_CHECK_USER_EXISTS", "W`?BcfgKg0$");
      user4.setCity("1a[snk;7BtCs");
      user4.setPhone("?oFoe#`YjJH#@57[-%\"");
      User.checkValidUserIDField("UNABLE_TO_CHECK_USER_EXISTS");
      User user6 = new User();
      user2.setFirstName("user.city.saveChanges");
      User.detectFieldChanges(user1, user2, user0);
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user2, supportingDocument0, supportingDocument1);
      assertFalse(supportingDocument1.isNewRecord());
      assertEquals(3, arrayList0.size());
      assertEquals(0, supportingDocument1.getIdentifier());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.331766800413848
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      User user0 = new User("UNABLE_TO_CHECK_USER_EXISTS", "UNABLE_TO_CHECK_USER_EXISTS");
      User user1 = new User("UNABLE_TO_CHECK_USER_EXISTS", "UNABLE_TO_CHECK_USER_EXISTS");
      user1.setPhone("~s");
      user0.setPassword("~s");
      user0.setEmail("|U9\u0001d?^");
      User user2 = new User("~s", "B9?{NIK Y-dl#N1K");
      user2.setAddressLine2("UNABLE_TO_CHECK_USER_EXISTS");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("Z2QE(_^D");
      user1.setAffiliation("B9?{NIK Y-dl#N1K");
      User user3 = new User();
      SupportingDocument.detectFieldChanges(user3, supportingDocument0, supportingDocument0);
      User user4 = new User();
      user4.setPassword("Z2QE(_^D");
      user4.setAffiliation("UNABLE_TO_CHECK_USER_EXISTS");
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.05569358184064
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = "UNABLE_TO_CHECK_USER_EXISTS";
      User user0 = new User("UNABLE_TO_CHECK_USER_EXISTS", "UNABLE_TO_CHECK_USER_EXISTS");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("UNABLE_TO_CHECK_USER_EXISTS");
      User user1 = new User("UNABLE_TO_CHECK_USER_EXISTS", "UNABLE_TO_CHECK_USER_EXISTS");
      String string1 = " ?NDB9oq:&1_ccNsq/p";
      user1.setPhone(" ?NDB9oq:&1_ccNsq/p");
      user0.setAffiliation("6ej>722b");
      user1.setAddressLine1("user.firstNaue.saveChanges");
      user0.setPassword(" ?NDB9oq:&1_ccNsq/p");
      String string2 = "{)|C/j\"mH";
      user0.setEmail(" ?NDB9oq:&1_ccNsq/p");
      user1.setUserID("UNABLE_TO_CHECK_USER_EXISTS");
      String string3 = "W#.^uI=!vNRl3p?iRe3";
      user1.setAddressLine1(" ?NDB9oq:&1_ccNsq/p");
      user1.setAddressLine2("W#.^uI=!vNRl3p?iRe3");
      user1.clone();
      supportingDocument0.setDocumentCode("user.status.unve(ified");
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.094360879311858
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      supportingDocument0.setFilePath("NON_EXISTENT_ONTOLOGY_TERM_ASSOCIATION");
      supportingDocument0.getDisplayItemIdentifier();
      supportingDocument0.setFileName("-");
      System.setCurrentTimeMillis(6239L);
      supportingDocument0.setFilePath("NON_EXISTENT_ONTOLOGY_TERM_ASSOCIATION");
      supportingDocument0.setFilePath("lm*f3&/kM@ZfsPqQ<a");
      supportingDocument0.getFileName();
      supportingDocument0.setFilePath("0");
      supportingDocument0.getFileName();
      User user0 = new User();
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      supportingDocument0.setFilePath("supportingDocument.filePath.saveChangGS");
      supportingDocument0.setDescription("-");
      supportingDocument0.setFilePath("-");
      supportingDocument0.setFilePath((String) null);
      supportingDocument0.setFilePath("jc,(,b_x^iMmIEA");
      supportingDocument0.setDocumentCode("-");
      supportingDocument0.setDescription("-");
      supportingDocument1.setDocumentCode("0");
      supportingDocument0.setFilePath("-");
      supportingDocument0.getDescription();
      SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument0);
      supportingDocument0.getFilePath();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.146332585328325
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      User user0 = new User("NON_EXISTENT_ONTOLOGY_TERM_ASSOCIATION", "NON_EXISTENT_ONTOLOGY_TERM_ASSOCIATION");
      User.checkValidUserIDField("NON_EXISTENT_ONTOLOGY_TERM_ASSOCIATION");
      user0.setUserID("NON_EXISTENT_ONTOLOGY_TERM_ASSOCIATION");
      user0.setAffiliation("NON_EXISTENT_ONTOLOGY_TERM_ASSOCIATION");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user1 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals(0, arrayList0.size());
      assertEquals(0, supportingDocument0.getIdentifier());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(false);
      supportingDocument0.isNewRecord();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.7858722246752183
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      supportingDocument0.getDocumentCode();
      supportingDocument0.getDisplayName();
      supportingDocument0.getDisplayName();
      User user0 = new User();
      supportingDocument0.getDisplayName();
      supportingDocument0.getDisplayName();
      supportingDocument0.setTitle("-");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      supportingDocument0.getDisplayName();
      supportingDocument0.getDisplayName();
      SupportingDocument supportingDocument2 = (SupportingDocument)supportingDocument1.clone();
      supportingDocument2.getDisplayName();
      supportingDocument1.getDisplayName();
      supportingDocument1.getDisplayName();
      supportingDocument0.setDocumentCode("-");
      supportingDocument0.getDisplayName();
      supportingDocument0.getDisplayName();
      supportingDocument1.getDocumentCode();
      supportingDocument0.getDisplayName();
      supportingDocument0.getTitle();
      supportingDocument0.getDisplayName();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.881766240540306
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName((String) null);
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      supportingDocument1.setDescription("supportingDocument.documentCode.saveChanges");
      supportingDocument0.setDescription((String) null);
      supportingDocument0.getDocumentCode();
      supportingDocument0.getDescription();
      supportingDocument1.getFilePath();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.689067872995674
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getTitle();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      long long0 = (-1054L);
      System.setCurrentTimeMillis((-1054L));
      // Undeclared exception!
      try { 
        SupportingDocument.validateFields((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Object object0 = new Object();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-450));
      supportingDocument0.getDisplayItemIdentifier();
      supportingDocument0.getDisplayItemIdentifier();
      assertEquals((-450), supportingDocument0.getIdentifier());
  }
}
