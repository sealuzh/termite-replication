/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 00:52:52 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.function.Consumer;
import java.util.function.Predicate;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.150495390937043
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("o$");
      User user0 = new User();
      derivedVariable0.setName("#");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User();
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.setTerm("#");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setDescription("UNABLE_TO_DISASSOCIATE_DOCUMENT");
      ontologyTerm1.setOntologyName("RP(0;z}d(_(J'%)V");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable1.removeOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      arrayList2.trimToSize();
      rawVariable1.removeOntologyTerms(arrayList2);
      rawVariable1.getOntologyTerms();
      user1.setAffiliation("UNABLE_TO_DISASSOCIATE_DOCUMENT");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable1);
      assertEquals("o$", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.864929326407318
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.clone();
      derivedVariable0.setCoded(true);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      valueLabel0.setLabel("&(UKns|}9fZc`!");
      derivedVariable0.addValueLabel(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      ValueLabel.validateFields(valueLabel0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.removeValueLabel(valueLabel1);
      derivedVariable0.isCoded();
      derivedVariable0.getCleaningDescription();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.5841760603850883
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      derivedVariable0.getName();
      arrayList0.stream();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      User.detectFieldChanges(user0, user0, user0);
      user0.setCounty("");
      String string0 = "user.lastName.label";
      String string1 = "tv5OB^Gx[b))1CQ8`>`";
      user0.setLastName("tv5OB^Gx[b))1CQ8`>`");
      // Undeclared exception!
      try { 
        User.checkValidUserIDField((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6969987794394545
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("(cnxG]'8+{-J-");
      ontologyTerm0.setOntologyName("(cnxG]'8+{-J-");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setOntologyName("(cnxG]'8+{-J-");
      ontologyTerm0.setOntologyName("$JI78Xlf`");
      ontologyTerm0.setNewRecord(true);
      ontologyTerm1.setDescription("0o8JH9uxV");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1355));
      ontologyTerm1.setOntologyName("$JI78Xlf`");
      ontologyTerm0.setOntologyName("H[3+r]~83~zIW*!)|");
      ontologyTerm0.setOntologyName("bV.enZyq#u mF2R;m");
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      arrayList4.add(ontologyTerm1);
      rawVariable0.removeOntologyTerms(arrayList2);
      ontologyTerm0.setNameSpace("3:9iable.name.la+bel");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm5);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm4);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(boolean0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.6082873972465446
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("(cnxG0]'8+{-J-");
      ontologyTerm0.setOntologyName("(cnxG0]'8+{-J-");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setOntologyName("(cnxG0]'8+{-J-");
      ontologyTerm0.setOntologyName("$lf`");
      ontologyTerm0.setNewRecord(true);
      ontologyTerm1.setDescription("0o8JH9uxV");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm1.setOntologyName("$lf`");
      ontologyTerm0.setOntologyName("H[3+r]~83~zIW*!)|");
      ontologyTerm1.setTerm("Z");
      ontologyTerm0.setOntologyName("bV.enZyq#u mF2R;m");
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      arrayList4.add(ontologyTerm1);
      rawVariable0.removeOntologyTerms(arrayList2);
      ontologyTerm0.setNameSpace("3:9iable.name.la+bel");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setIdentifier((-1968526675));
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm5);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      boolean boolean1 = rawVariable0.containsOntologyTerm(ontologyTerm4);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(boolean1 == boolean0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertTrue(boolean1);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.883731678155643
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.parallelStream();
      arrayList0.add(ontologyTerm0);
      arrayList0.trimToSize();
      arrayList0.subList(0, 0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.getDisplayItemIdentifier();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable1.addSourceVariable(derivedVariable0);
      derivedVariable1.setLabel("0");
      derivedVariable1.getCodeBookNumber();
      derivedVariable1.getLabel();
      derivedVariable0.getColumnEnd();
      derivedVariable1.getCleaningDescription();
      assertEquals("0", derivedVariable1.getLabel());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.5689236586565656
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) valueLabel1);
      ValueLabel valueLabel2 = new ValueLabel();
      Predicate<Object> predicate1 = Predicate.isEqual((Object) user0);
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      Predicate<Object> predicate3 = Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate4 = predicate2.or(predicate3);
      predicate0.or(predicate4);
      predicate3.negate();
      ValueLabel valueLabel3 = new ValueLabel();
      Predicate<Object> predicate5 = Predicate.isEqual((Object) "#");
      predicate0.negate();
      Predicate<Object> predicate6 = predicate5.negate();
      Predicate<Object> predicate7 = predicate6.or(predicate4);
      predicate0.and(predicate7);
      Predicate<Object> predicate8 = predicate3.and(predicate6);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.removeIf(predicate8);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      arrayList2.add((SupportingDocument) null);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      arrayList3.iterator();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList4 = derivedVariable1.getSourceVariables();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.containsSupportingDocument(supportingDocument1);
      derivedVariable1.setSourceVariables(arrayList4);
      derivedVariable1.removeSupportingDocuments(arrayList0);
      derivedVariable1.addSourceVariables(arrayList4);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.2162443181522673
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User();
      user0.setLastName("ky\"dFUDab");
      User.checkValidUserIDField("variable.isCleaned.saveChanges.changedToNotClean");
      RawVariable rawVariable1 = new RawVariable();
      User user1 = new User();
      User user2 = new User("ky\"dFUDab", "variable.year.label");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user2, derivedVariable0, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      Variable variable0 = rawVariable0.getAlternativeVariable();
      assertFalse(variable0.isNewRecord());
      assertFalse(variable0.isCleaned());
      assertFalse(variable0.isCoded());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.05569358184064
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      User user0 = new User("variable.label.label", "variable.label.label");
      user0.setLastName("general.fieldValue.blank");
      User.checkValidUserIDField("variable.label.label");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(128);
      User user1 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals(128, rawVariable0.getIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.625071549495739
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("variable.codeBookNumber.label");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.getSourceVariables();
      assertEquals("variable.codeBookNumber.label", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.6497049730961213
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.getDisplayName();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("");
      ontologyTerm1.setTerm("G;-fA~>Q@i^ru?q6");
      ontologyTerm1.setTerm("");
      ontologyTerm1.setNameSpace("#|h#y");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setOntologyName("");
      ontologyTerm2.setIdentifier(124);
      ontologyTerm0.setTerm("UJAA");
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      String string0 = "*=kpk P";
      ontologyTerm0.setOntologyName("*=kpk P");
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.getSourceVariables();
      User user0 = new User();
      User.detectFieldChanges(user0, user0, user0);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.625071549495739
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("hq");
      ontologyTerm1.setDescription("hq");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("Zq+i'hT6y3mA'Zzb");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.setYear(";*}@>p9+<[4\u0006uyzy");
      derivedVariable0.isCoded();
      derivedVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.getYear();
      assertEquals(";*}@>p9+<[4\u0006uyzy", derivedVariable0.getYear());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.882952808886431
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getAvailability();
      long long0 = (-1L);
      System.setCurrentTimeMillis((-1L));
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCoded(true);
      derivedVariable1.setForm("\u0001$5M");
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable0.getFilePath();
      derivedVariable1.getFilePath();
      User user0 = new User("uqZ$}D#K?\"?=kKT", "");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable1.getColumnStart();
      System.setCurrentTimeMillis((-1L));
      derivedVariable1.isNewRecord();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.218655583840207
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      derivedVariable0.getName();
      arrayList0.stream();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.530923372695805
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      User user0 = new User("variable.label.label", "variable.label.label");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = null;
      arrayList0.add((SupportingDocument) null);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add((SupportingDocument) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments(arrayList1);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      Consumer<SupportingDocument> consumer0 = (Consumer<SupportingDocument>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      arrayList2.iterator();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes(rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.304704691639832
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      String string0 = "#";
      derivedVariable0.setName("#");
      String string1 = "i+'cjgeCW%F)";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User("i+'cjgeCW%F)", "i+'cjgeCW%F)");
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      derivedVariable1.setCleaned(false);
      derivedVariable0.getName();
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.754319571349252
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("U1!aVnR&?)1X:");
      ontologyTerm1.setNameSpace("U1!aVnR&?)1X:");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      ontologyTerm1.setNewRecord(true);
      ontologyTerm0.setTerm("UJAA");
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setOntologyName("U1!aVnR&?)1X:");
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.trimToSize();
      rawVariable0.removeOntologyTerms(arrayList1);
      rawVariable0.getOntologyTerms();
      ontologyTerm0.setTerm("UJAA");
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      ArrayList<Variable> arrayList3 = new ArrayList<Variable>();
      arrayList2.parallelStream();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm4);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm4);
      assertFalse(boolean0);
      
      User user0 = new User("Y.JnIY", "UJAA");
      user0.setPassword("Y.JnIY");
      RawVariable rawVariable1 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable1, (Variable) null);
      assertNull(macawChangeEvent0);
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.84308325811639
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.setName("#|#");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User();
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      user0.setCounty("i+'cjgeCW%F)");
      user1.setLastName("user.lastName.label");
      User.checkValidUserIDField("user.lastName.label");
      RawVariable rawVariable0 = new RawVariable();
      User user2 = new User();
      derivedVariable0.getName();
      assertEquals("#|#", derivedVariable0.getName());
      
      DerivedVariable.validateFields(derivedVariable0);
      DerivedVariable.validateFields(derivedVariable0);
      derivedVariable0.createVariableSummary();
      Variable.validateFields(derivedVariable0);
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      User user0 = new User("variable.labe.labl", "variable.labe.labl");
      user0.setLastName("genpral>fieldVelue.blank");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add((OntologyTerm) null);
      arrayList0.add((OntologyTerm) null);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList3 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList3);
      ArrayList<Variable> arrayList4 = new ArrayList<Variable>();
      ArrayList<Variable> arrayList5 = new ArrayList<Variable>();
      arrayList4.parallelStream();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.6611728056747617
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument2);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument1);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addSupportingDocument(supportingDocument2);
      arrayList0.add(supportingDocument3);
      rawVariable0.setSupportingDocuments(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.iterator();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(rawVariable1);
      assertFalse(rawVariable1.isNewRecord());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
      
      SupportingDocument supportingDocument4 = new SupportingDocument();
      arrayList1.add(supportingDocument2);
      SupportingDocument supportingDocument5 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument5);
      assertTrue(boolean0);
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.removeSupportingDocuments(arrayList1);
      assertFalse(derivedVariable2.isCleaned());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.330091187063569
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      User user0 = new User("variable.labe.labl", "variable.labe.labl");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("variable.labe.labl");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("$lf`");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setNewRecord(true);
      ontologyTerm0.setDescription("UNABLE_TO_UPDATE_AVAILABILITY_STATE");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm1.setOntologyName("UNABLE_TO_CHECK_ALIAS_FILE_PATH_EXISTS");
      ontologyTerm2.setOntologyName("UNABLE_TO_CHECK_ALIAS_FILE_PATH_EXISTS");
      ontologyTerm4.setOntologyName("jC:],gEyMz");
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable1.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = rawVariable1.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList1);
      ontologyTerm2.setNameSpace("3a9riable.name.label");
      ontologyTerm2.setTerm("UNABLE_TO_CHECK_ALIAS_FILE_PATH_EXISTS");
      ArrayList<String> arrayList2 = new ArrayList<String>();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      rawVariable1.updateOntologyTerm(ontologyTerm3);
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setSourceVariables(arrayList0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      rawVariable0.addValueLabel(valueLabel0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getValueLabels();
      rawVariable0.getYear();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(boolean0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.7826362251488446
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-2141));
      rawVariable0.setForm("");
      rawVariable0.notes = "INVALID_ALIAS_FILE_PATH";
      rawVariable0.createVariableSummary();
      rawVariable0.isNewRecord();
      rawVariable0.getCodeBookNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      derivedVariable0.removeValueLabel(valueLabel0);
      ValueLabel valueLabel2 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel2);
      derivedVariable0.clone();
      rawVariable0.isCleaned();
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.58530528444094
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      arrayList0.add((Variable) rawVariable0);
      derivedVariable0.questionNumber = "EZ*tqUq$eG";
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.getName();
      derivedVariable0.setIsNewRecord(true);
      // Undeclared exception!
      try { 
        arrayList0.subList(2147483645, 2147483645);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 2147483645
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.365349639944498
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("(cnxG0]'8+{-J-");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setOntologyName("(cnxG0]'8+{-J-");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setOntologyName("(cnxG0]'8+{-J-");
      ontologyTerm0.setNewRecord(true);
      ontologyTerm2.setDescription("(cnxG0]'8+{-J-");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm4.setOntologyName("P0o8JH9uxV");
      ontologyTerm3.setOntologyName("P0o8JH9uxV");
      ontologyTerm0.setOntologyName("1ulqw>*.EogU");
      rawVariable0.removeOntologyTerm(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList2.add(ontologyTerm3);
      arrayList2.retainAll(arrayList0);
      rawVariable1.getOntologyTerms();
      arrayList1.add(ontologyTerm3);
      rawVariable0.removeOntologyTerms(arrayList2);
      ontologyTerm0.setNameSpace("+A#8+Jv5FBCM H/\"f4J");
      ontologyTerm1.setTerm("+A#8+Jv5FBCM H/\"f4J");
      ArrayList<String> arrayList3 = new ArrayList<String>();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      rawVariable1.updateOntologyTerm(ontologyTerm3);
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.5068077022515487
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("(cnxG0]'8+{-J-");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setOntologyName("(cnxG0]'8+{-J-");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setOntologyName("(cnxG0]'8+{-J-");
      ontologyTerm0.setOntologyName("$lf`");
      ontologyTerm0.setNewRecord(true);
      ontologyTerm1.setDescription("0o8JH9uxV");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm1.setOntologyName("$lf`");
      ontologyTerm4.setOntologyName("0o8JH9uxV");
      ontologyTerm0.setOntologyName("variable.name.label");
      rawVariable0.removeOntologyTerm(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList4 = rawVariable0.getOntologyTerms();
      arrayList4.add(ontologyTerm1);
      assertEquals(1, arrayList4.size());
      
      rawVariable1.removeOntologyTerms(arrayList2);
      ontologyTerm0.setNameSpace("3:9iable.name.la+bel");
      ontologyTerm0.setTerm("0o8JH9uxV");
      ArrayList<String> arrayList5 = new ArrayList<String>();
      rawVariable0.updateOntologyTerm(ontologyTerm4);
      int int0 = rawVariable1.getIdentifier();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.896934599451277
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setCity("{=4OU4xok2=0IzC");
      derivedVariable0.setAvailability("{=4OU4xok2=0IzC");
      derivedVariable0.setName("#|h#y");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User();
      DerivedVariable.detectFieldChanges(user1, derivedVariable1, derivedVariable0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDocumentCode("variable.columnEnd.label");
      DerivedVariable.validateFields(derivedVariable0);
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.8153930863959413
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("U1!aVnR&?)1X:");
      ontologyTerm1.setNameSpace("U1!aVnR&?)1X:");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      ontologyTerm1.setOntologyName("blank");
      ontologyTerm1.setNewRecord(true);
      ontologyTerm0.setTerm("UJAA");
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setOntologyName("U1!aVnR&?)1X:");
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.trimToSize();
      rawVariable0.removeOntologyTerms(arrayList1);
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      assertFalse(arrayList2.contains(ontologyTerm0));
      
      ontologyTerm0.setTerm("UJAA");
      derivedVariable0.getSourceVariables();
      ArrayList<Variable> arrayList3 = new ArrayList<Variable>();
      arrayList3.parallelStream();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm4);
      User user0 = new User("U1!aVnR&?)1X:", "'Y");
      User.detectFieldChanges(user0, user0, user0);
      User user1 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.527062838287056
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("(cnIxG0#]'+{-J-");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setOntologyName("(cnIxG0#]'+{-J-");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setOntologyName("$lf`");
      ontologyTerm1.setDescription("sUaG.sXcV.d_");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm0.setOntologyName("variable.name.label");
      rawVariable0.removeOntologyTerm(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList3 = rawVariable0.getOntologyTerms();
      arrayList3.add(ontologyTerm1);
      assertEquals(1, arrayList3.size());
      
      rawVariable2.getOntologyTerms();
      rawVariable1.removeOntologyTerms(arrayList2);
      ontologyTerm0.setTerm("sUaG.sXcV.d_");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList4 = new ArrayList<Variable>();
      arrayList4.add((Variable) derivedVariable1);
      derivedVariable1.removeSourceVariables(arrayList4);
      rawVariable2.getQuestionNumber();
      assertEquals(0, rawVariable2.getIdentifier());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.3448446247581223
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      User.detectFieldChanges(user0, user0, user0);
      rawVariable0.notes = "DRw";
      user0.setCity("c5=YVdC6Skxt4]P");
      User.detectFieldChanges(user0, user0, user0);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.form = "1`d(bc/Zlt0oh:Gd";
      rawVariable0.setCleaningDescription("@EZz!\"7a*m");
      rawVariable0.getSupportingDocuments();
      rawVariable0.getLabel();
      assertEquals("@EZz!\"7a*m", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.7480682592066143
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      derivedVariable0.createVariableSummary();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable1.setIdentifier((-1623456325));
      RawVariable rawVariable0 = new RawVariable();
      arrayList0.add((Variable) rawVariable0);
      derivedVariable1.questionNumber = "D?nD18s)U[Wfs>7@";
      arrayList0.add((Variable) derivedVariable1);
      derivedVariable0.setSourceVariables(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.clone();
      derivedVariable0.setAlias("WqcYki/;TV;7ai^m|");
      derivedVariable1.containsOntologyTerm(ontologyTerm1);
      derivedVariable1.setNotes("EZ*tqUq$eG");
      derivedVariable0.getAlias();
      derivedVariable1.getAlias();
      derivedVariable0.getSourceVariables();
      derivedVariable1.getCleaningDescription();
      System.setCurrentTimeMillis((-1623456325));
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      String string0 = "Vc}";
      ontologyTerm0.setTerm("Vc}");
      String string1 = "y5ux5[S&UqsS";
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, (Variable) null, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.320521931670143
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("variable.name.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("1ulqw>*.EogU");
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      derivedVariable0.setYear("UNABLE_TO_DISASSOCIATE_DOCUMENT");
      derivedVariable0.setCleaningDescription("#Mzh");
      Variable.validateFields(derivedVariable0);
      DerivedVariable.validateFields(derivedVariable1);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable0.setCoded(false);
      derivedVariable1.getFilePath();
      derivedVariable0.createVariableSummary();
      derivedVariable0.getSupportingDocuments();
      derivedVariable1.setCleaningStatus("#Mzh");
      User user0 = new User("j", (String) null);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("UNABLE_TO_DISASSOCIATE_DOCUMENT", derivedVariable0.getYear());
      assertEquals("#Mzh", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.320412168210399
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("variable.name.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("1ulqw>*.EogU");
      derivedVariable0.removeSourceVariable(derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      derivedVariable2.setYear("");
      derivedVariable2.setCleaningDescription("");
      DerivedVariable derivedVariable3 = new DerivedVariable();
      Variable.validateFields(derivedVariable3);
      DerivedVariable.validateFields(derivedVariable1);
      derivedVariable1.hasSameDisplayName(derivedVariable2);
      derivedVariable0.setCoded(false);
      derivedVariable0.getFilePath();
      derivedVariable3.createVariableSummary();
      derivedVariable0.getSupportingDocuments();
      assertEquals("variable.name.label", derivedVariable0.getFilePath());
      
      User user0 = new User("UNABLE_TO_GET_ALIAS_FILE_PATH_NAME", "");
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable4.setForm("UNABLE_TO_GET_ALTERNATIVE_VARIABLE");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable4);
      User user1 = new User(";t[5IV*>-Mk&pB~", ";t[5IV*>-Mk&pB~");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user1, rawVariable0, derivedVariable2);
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.579755221006731
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setForm("general.fieldValue.unknown");
      rawVariable0.setNotes(" VEwABMdE C5'hx");
      rawVariable0.questionNumber = "general.fieldValue.unknown";
      rawVariable0.getFilePath();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.8343680544678524
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "EZ*tqUq$eG";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      derivedVariable1.columnStart = "7~On;";
      derivedVariable0.setName("#|#");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable1.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.remove((Object) supportingDocument0);
      arrayList0.iterator();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.setAvailability("7~On;");
      derivedVariable0.cloneAttributes(derivedVariable2);
      derivedVariable1.getSourceVariables();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      derivedVariable2.isCleaned();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable2);
      derivedVariable2.getFilePath();
      derivedVariable1.removeSupportingDocument(supportingDocument1);
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.666463936478623
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.setName("#|#");
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument1);
      rawVariable0.setSupportingDocuments(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      Consumer<SupportingDocument> consumer0 = (Consumer<SupportingDocument>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      arrayList0.iterator();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("#|#", rawVariable0.getName());
      
      derivedVariable1.containsSupportingDocument(supportingDocument1);
      derivedVariable1.removeSupportingDocuments(arrayList1);
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.8614779147721503
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      derivedVariable1.columnStart = "7~On;";
      derivedVariable0.setName("#|#");
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable2);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("#|#");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm1);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable1, derivedVariable0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable1.getOntologyTerms();
      arrayList2.retainAll(arrayList0);
      rawVariable0.removeOntologyTerms(arrayList2);
      ArrayList<Variable> arrayList3 = new ArrayList<Variable>();
      ArrayList<Variable> arrayList4 = new ArrayList<Variable>();
      arrayList4.parallelStream();
      derivedVariable2.addSourceVariables(arrayList4);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      User user1 = new User("Y.cJRnIY", "#|#");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals("#|#", derivedVariable0.getName());
      
      DerivedVariable derivedVariable3 = (DerivedVariable)derivedVariable1.clone();
      assertEquals("Unknown", derivedVariable3.getAvailability());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.6878286039611448
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.setName("#");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      user1.setAddressLine2((String) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      user1.setCounty((String) null);
      user1.setLastName("{z#DN['beY|c848");
      String string0 = "user.status.label";
      User.checkValidUserIDField("user.status.label");
      RawVariable rawVariable0 = new RawVariable();
      User user2 = new User("{z#DN['beY|c848", "UNABLE_TO_CHECK_DOCUMENT_EXISTS");
      DerivedVariable.detectFieldChanges(user2, derivedVariable1, derivedVariable0);
      user1.setAddressLine1("#");
      derivedVariable1.getSourceVariables();
      User user3 = new User();
      User.detectFieldChanges(user0, user0, user3);
      User user4 = new User("eA}zZ{Or<", " type=");
      User user5 = new User("#", "");
      try { 
        User.validateFields(user4);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.0704527827019104
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "EZ*tqUq$eG";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      derivedVariable1.columnStart = "7~On;";
      derivedVariable0.setName("#|h#y");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("{=4OU4xok2=0IzC");
      derivedVariable1.createVariableSummary();
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      supportingDocument0.setTitle("EZ*tqUq$eG");
      derivedVariable1.isCleaned();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable1);
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      DerivedVariable.validateFields(derivedVariable0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList2);
      assertEquals("#|h#y", derivedVariable0.getName());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.874405118093503
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.listIterator();
      User user0 = new User((String) null, "UNABLE_TO_CHECK_ALIAS_FILE_PATH_EXISTS");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      arrayList0.subList(0, 0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setIdentifier(0);
      User user1 = new User();
      user1.setPostCode((String) null);
      user1.setLastName("");
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.setColumnEnd((String) null);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("variable.category.label");
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      assertFalse(arrayList0.contains(ontologyTerm0));
      
      ontologyTerm0.setTerm("");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertNotNull(macawChangeEvent0);
      
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.282019298640932
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("variable.name.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("1ulqw>*.EogU");
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      derivedVariable0.setYear("UNABLE_TO_DISASSOCIATE_DOCUMENT");
      derivedVariable0.setCleaningDescription("#Mzh");
      Variable.validateFields(derivedVariable0);
      DerivedVariable.validateFields(derivedVariable1);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable0.setCoded(false);
      derivedVariable1.getFilePath();
      derivedVariable0.createVariableSummary();
      derivedVariable0.getSupportingDocuments();
      User user0 = new User("j", (String) null);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("UNABLE_TO_DISASSOCIATE_DOCUMENT", derivedVariable0.getYear());
      assertEquals("variable.name.label", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.7222343866167273
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.listIterator();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setIdentifier(513);
      User user0 = new User();
      user0.setLastName("_)`UFA`faZ");
      user0.setAddressLine1("7icuk");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable0.createVariableSummary();
      user0.setStatus("nA");
      User user1 = new User();
      User user2 = new User("_)`UFA`faZ", "dL&-f_{Uj");
      User.detectFieldChanges(user2, user0, user2);
      User user3 = new User();
      Variable.detectChangesInAlternativeVariable(user3, rawVariable1, (Variable) null);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals(513, rawVariable0.getIdentifier());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.6683905069672833
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("");
      rawVariable0.setCodeBookNumber("");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = ",j[1GEnzKFH+$";
      stringArray0[2] = ",j[1GEnzKFH+$";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = ",j[1GEnzKFH+$";
      stringArray0[6] = "";
      arrayList0.toArray(stringArray0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setNotes(stringArray0[0]);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      
      rawVariable0.setIdentifier(1153);
      rawVariable0.clone();
      rawVariable0.getNotes();
      rawVariable0.getFilePath();
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("#|h#y");
      rawVariable0.codeBookNumber = "UNABLE_TO_ASSOCIATE_SOURCE_VARIABLE";
      rawVariable0.getQuestionNumber();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.setOntologyTerms(arrayList0);
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.7147872622089504
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("3-+f7VKxZY -Go,uv#");
      User user0 = new User();
      derivedVariable0.setName("#|#");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User();
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      assertEquals("#|#", derivedVariable0.getName());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      user0.setCounty("i+'cjgeCW%F)");
      user1.setLastName("user.lastName.label");
      User.checkValidUserIDField("user.lastName.label");
      RawVariable rawVariable0 = new RawVariable();
      User user2 = new User("user.status.label", "user.status.label");
      User.detectFieldChanges(user1, user2, user1);
      User user3 = new User("i+'cjgeCW%F)", "#|h#y");
      user3.setCity("X^5Hj,@k05j!)RH");
      Variable.detectChangesInAlternativeVariable(user3, derivedVariable1, rawVariable0);
      derivedVariable1.createVariableSummary();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.7862384035025665
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "py-3B]";
      rawVariable0.setNotes("user.lastName.label");
      rawVariable0.getCleaningStatus();
      rawVariable0.getYear();
      User user0 = new User((String) null, "");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      rawVariable0.getYear();
      RawVariable rawVariable2 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.6678860933481157
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("}1h=ntY");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable1.hasSameDisplayName(derivedVariable0);
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable1.getColumnEnd();
      assertEquals("}1h=ntY", derivedVariable1.getYear());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName((String) null);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setOntologyName((String) null);
      ontologyTerm0.setOntologyName("5_=%RQGBWn3");
      ontologyTerm0.setNewRecord(true);
      ontologyTerm0.setDescription("UNABLE_TO_CHECK_DOCUMENT_EXISTS");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm4.setOntologyName("bV.enZyq#u mF2R;m");
      ontologyTerm2.setOntologyName("UNABLE_TO_GET_VARIABLE_NAMES");
      ontologyTerm0.setOntologyName("`df}");
      ontologyTerm0.setOntologyName("UNABLE_TO_GET_VARIABLE_NAMES");
      // Undeclared exception!
      try { 
        rawVariable1.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.822917567628981
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ValueLabel valueLabel0 = new ValueLabel();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) arrayList0);
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      Predicate<Object> predicate1 = Predicate.isEqual((Object) valueLabel2);
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate2.negate();
      ValueLabel valueLabel3 = new ValueLabel();
      Predicate.isEqual((Object) derivedVariable0);
      Predicate<Object> predicate4 = predicate2.and(predicate0);
      predicate0.and(predicate3);
      arrayList0.removeIf(predicate4);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      rawVariable0.clone();
      rawVariable0.createVariableSummary();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setIdentifier((-1073741822));
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      assertEquals((-1073741822), rawVariable0.getIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.7031817257086974
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument1);
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      arrayList0.retainAll(arrayList1);
      arrayList0.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList2.add(supportingDocument2);
      ArrayList<SupportingDocument> arrayList3 = rawVariable0.getSupportingDocuments();
      arrayList3.iterator();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument1.setDocumentCode("variable.alternativeVariable.label");
      arrayList3.add(supportingDocument1);
      SupportingDocument supportingDocument4 = new SupportingDocument();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.form = "variable.alternativeVariable.label";
      derivedVariable2.containsSupportingDocument(supportingDocument2);
      derivedVariable1.removeSupportingDocuments(arrayList3);
      derivedVariable2.getForm();
      assertEquals("variable.alternativeVariable.label", derivedVariable2.getForm());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.6765518215297917
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      String string0 = "#|#";
      user0.setCity("DUPLICATE_DOCUMENT_ASSOCIATION");
      derivedVariable0.setName("#|#");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      String string1 = "5_=%RQGBWn3";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlias("5_=%RQGBWn3");
      User user1 = new User("#|#", "#|#");
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      User user0 = new User("variable.label.label", "variable.label.label");
      user0.setCity("iFCy'K~&8+");
      user0.setLastName("#|h#y");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "#|h#y";
      String string0 = "B_";
      User user1 = new User("B_", "#|h#y");
      derivedVariable0.setYear("5_=%RQGBWn3");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      user1.setCounty("uo]B8%'SYW$hBJB<{");
      user0.setLastName("uo]B8%'SYW$hBJB<{");
      try { 
        User.checkValidUserIDField("uo]B8%'SYW$hBJB<{");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The field \"User ID\" value \"uo]B8%'SYW$hBJB<{\" may present a security risk.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.1983163518663957
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument1);
      User user0 = new User();
      User user1 = new User();
      user1.setLastName("variable.form.label");
      user1.setAddressLine1("variable.questionNumber.label");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setDescription("variable.form.label");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm1.setOntologyName("variable.questionNumber.label");
      rawVariable2.removeOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm1);
      arrayList0.add(ontologyTerm1);
      rawVariable2.getOntologyTerms();
      rawVariable2.removeOntologyTerms(arrayList0);
      ontologyTerm1.setTerm("UNABLE_TO_CHECK_DOCUMENT_EXISTS");
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      rawVariable2.setColumnEnd("UNABLE_TO_CHECK_DOCUMENT_EXISTS");
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      arrayList1.parallelStream();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable1.containsOntologyTerm(ontologyTerm3);
      rawVariable2.getForm();
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable2);
      assertEquals("UNABLE_TO_CHECK_DOCUMENT_EXISTS", rawVariable2.getColumnEnd());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.544417446805663
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("U1!aVnR&?)1X:");
      ontologyTerm1.setNameSpace("U1!aVnR&?)1X:");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      ontologyTerm1.setOntologyName("blank");
      ontologyTerm1.setNewRecord(true);
      ontologyTerm0.setTerm("UJAA");
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setOntologyName("U1!aVnR&?)1X:");
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.trimToSize();
      rawVariable0.removeOntologyTerms(arrayList1);
      User.checkValidUserIDField("blank");
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User("U1!aVnR&?)1X:", "variable.notes.label");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.8478417157946807
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("U1!aVnkR&?)1X:");
      ontologyTerm1.setNameSpace("U1!aVnkR&?)1X:");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      ontologyTerm2.setDescription("8}Q0");
      ontologyTerm1.setOntologyName("blank");
      ontologyTerm1.setNewRecord(true);
      ontologyTerm0.setTerm("UJAA");
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setOntologyName("U1!aVnkR&?)1X:");
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm1);
      arrayList1.trimToSize();
      rawVariable0.removeOntologyTerms(arrayList1);
      rawVariable0.getOntologyTerms();
      ontologyTerm0.setTerm("UJAA");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm4.setTerm("UJAA");
      derivedVariable0.updateOntologyTerm(ontologyTerm4);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm2);
      assertFalse(boolean0);
      
      User user0 = new User("Y.JnIY", "UJAA");
      user0.setAffiliation("Y.JnIY");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertNotNull(macawChangeEvent0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.976847273992764
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.setName("#|#");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User();
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      user0.setCounty("i+'cjgeCW%F)");
      user1.setLastName("user.lastName.label");
      User.checkValidUserIDField("user.lastName.label");
      RawVariable rawVariable0 = new RawVariable();
      User user2 = new User("#|#", "#|#");
      rawVariable0.getNotes();
      rawVariable0.getFilePath();
      User user3 = new User("", "h^5\"-wp4LJ/F\"l");
      User user4 = new User("#Mzh", "variable.notes.label");
      Variable.detectChangesInAlternativeVariable(user4, rawVariable0, derivedVariable0);
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.6286003732844097
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("(cnxG0]'8+{-J-");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setOntologyName("(cnxG0]'8+{-J-");
      ontologyTerm0.setOntologyName("$lf`");
      ontologyTerm0.setNewRecord(true);
      ontologyTerm1.setDescription("0o8JH9uxV");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm1.setOntologyName("$lf`");
      ontologyTerm4.setOntologyName("0o8JH9uxV");
      ontologyTerm0.setOntologyName("sa\"8eeq%H");
      rawVariable0.removeOntologyTerm(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList4 = rawVariable0.getOntologyTerms();
      arrayList4.add(ontologyTerm1);
      assertEquals(1, arrayList4.size());
      
      rawVariable1.removeOntologyTerms(arrayList2);
      ontologyTerm0.setNameSpace("3:9iable.name.la+bel");
      ontologyTerm0.setTerm("0o8JH9uxV");
      ArrayList<String> arrayList5 = new ArrayList<String>();
      ArrayList<OntologyTerm> arrayList6 = new ArrayList<OntologyTerm>();
      rawVariable0.updateOntologyTerm(ontologyTerm4);
      rawVariable0.getDisplayItemIdentifier();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable1);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.3823452227303257
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("(cnxG0]'8+{-J-");
      ontologyTerm0.setOntologyName("(cnxG0]'8+{-J-");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setOntologyName("(cnxG0]'8+{-J-");
      ontologyTerm0.setOntologyName("$lf`");
      ontologyTerm0.setNewRecord(true);
      ontologyTerm1.setDescription("0o8JH9uxV");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm1.setOntologyName("$lf`");
      ontologyTerm0.setOntologyName("H[3+r]83~zIW*!)|");
      ontologyTerm3.setOntologyName("0o8JH9uxV");
      rawVariable0.setCleaned(true);
      ontologyTerm0.setOntologyName("bV.enZyq#u mF2R;m");
      rawVariable0.removeOntologyTerm(ontologyTerm3);
      assertTrue(rawVariable0.isCleaned());
      
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      arrayList4.add(ontologyTerm1);
      rawVariable1.removeOntologyTerms(arrayList2);
      ontologyTerm0.setNameSpace("3:9iable.name.la+bel");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable1.containsOntologyTerm(ontologyTerm4);
      boolean boolean0 = rawVariable1.containsOntologyTerm(ontologyTerm3);
      assertFalse(rawVariable1.isCleaned());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.6877020590587954
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      User user0 = new User("]s\"`Oj", "variable.category.label");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("|t0");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User("5_=%RQGBWn3", "y<&z%F'@X]v-}GeP");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      user1.setCounty("");
      user1.setLastName("");
      String string0 = "user.status.label";
      derivedVariable1.setIdentifier((-1));
      try { 
        User.checkValidUserIDField("]s\"`Oj");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The field \"User ID\" value \"]s\"`Oj\" may present a security risk.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.726472047437398
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "EZ*tqUq$eG";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      derivedVariable1.columnStart = "7~On;";
      derivedVariable0.setName("#|#");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.iterator();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable2);
      derivedVariable1.getSourceVariables();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("#|h#y");
      User.detectFieldChanges(user0, user0, user0);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable3, rawVariable0);
      Variable.validateFields(derivedVariable0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      assertEquals(0, arrayList2.size());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.9627336194695197
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.listIterator();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      arrayList1.subList(0, 0);
      rawVariable0.setOntologyTerms(arrayList1);
      rawVariable0.setIdentifier(0);
      user0.setPostCode((String) null);
      user0.setAddressLine1("7icuk");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setCoded(false);
      rawVariable0.questionNumber = null;
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      rawVariable1.removeOntologyTerms(arrayList2);
      ontologyTerm0.setTerm("");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      rawVariable1.getCleaningDescription();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument1);
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.notes = null;
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      Consumer<SupportingDocument> consumer0 = (Consumer<SupportingDocument>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      boolean boolean0 = derivedVariable1.containsSupportingDocument(supportingDocument0);
      derivedVariable1.setSourceVariables(arrayList2);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable2.addSourceVariables(arrayList2);
      boolean boolean1 = derivedVariable0.isNewRecord();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.5053262207700673
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("(cnxG0]'8+{-J-");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setOntologyName("(cnxG0]'8+{-J-");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setOntologyName("(cnxG0]'8+{-J-");
      ontologyTerm0.setNewRecord(true);
      ontologyTerm1.setDescription("P0o8JH9uxV");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm1.setOntologyName("$lf`");
      ontologyTerm4.setOntologyName("P0o8JH9uxV");
      ontologyTerm0.setOntologyName("P0o8JH9uxV");
      rawVariable0.removeOntologyTerm(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList4 = rawVariable0.getOntologyTerms();
      arrayList4.add(ontologyTerm1);
      assertEquals(1, arrayList4.size());
      
      rawVariable1.removeOntologyTerms(arrayList2);
      ontologyTerm0.setNameSpace("3:9iable.name.la+bel");
      ontologyTerm0.setTerm("P0o8JH9uxV");
      ArrayList<String> arrayList5 = new ArrayList<String>();
      ArrayList<OntologyTerm> arrayList6 = new ArrayList<OntologyTerm>();
      rawVariable0.updateOntologyTerm(ontologyTerm4);
      rawVariable0.getForm();
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.695917355993095
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      User user0 = new User();
      user0.setPostCode("user.addressLine1.label");
      user0.setLastName("UNABLE_TO_CHECK_DOCUMENT_EXISTS");
      user0.setLastName("uo]B8%'SYW$hBJB<{");
      user0.setAddressLine1("UNABLE_TO_CHECK_DOCUMENT_EXISTS");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("variable.questionNumber.label");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.addOntologyTerm(ontologyTerm1);
      rawVariable0.removeValueLabel((ValueLabel) null);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setOntologyName("(cnIxG0#]'+{-J-");
      rawVariable0.removeOntologyTerm(ontologyTerm3);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm2);
      rawVariable2.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList1);
      ontologyTerm3.setTerm("uo]B8%'SYW$hBJB<{");
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      ArrayList<String> arrayList3 = new ArrayList<String>();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      rawVariable2.updateOntologyTerm(ontologyTerm3);
      System.setCurrentTimeMillis((-1944L));
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      supportingDocument1.setTitle("variable.year.label");
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList2.add(supportingDocument1);
      rawVariable0.setSupportingDocuments(arrayList2);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      Consumer<SupportingDocument> consumer0 = (Consumer<SupportingDocument>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      arrayList3.iterator();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.getSourceVariables();
      // Undeclared exception!
      try { 
        derivedVariable1.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("(cnxG0]'8+{-J-");
      ontologyTerm0.setOntologyName("(cnxG0]'8+{-J-");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setOntologyName("(cnxG0]'8+{-J-");
      ontologyTerm0.setOntologyName("$lf`");
      ontologyTerm0.setNewRecord(true);
      ontologyTerm1.setDescription("0o8JH9uxV");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm1.setOntologyName("$lf`");
      ontologyTerm0.setOntologyName("H[3+r]~83~zIW*!)|");
      ontologyTerm0.setOntologyName("bV.enZyq#u mF2R;m");
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      arrayList4.add(ontologyTerm1);
      rawVariable0.setIdentifier(173);
      rawVariable0.removeOntologyTerms(arrayList2);
      ontologyTerm3.setNameSpace("+A#8+Jv5FBCM H/\"f4J");
      ontologyTerm1.setTerm("]@cBmNi_N]-T#<^$u");
      ArrayList<String> arrayList5 = new ArrayList<String>();
      ArrayList<OntologyTerm> arrayList6 = new ArrayList<OntologyTerm>();
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      assertEquals(173, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.6908693869137443
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      LinkedList<DerivedVariable> linkedList0 = new LinkedList<DerivedVariable>();
      arrayList0.retainAll(linkedList0);
      rawVariable0.setSupportingDocuments(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList0.iterator();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      supportingDocument0.setDescription("/HBQK_l\"Th}&TOy7FF");
      supportingDocument0.setTitle("/HBQK_l\"Th}&TOy7FF");
      derivedVariable0.isCleaned();
      User user0 = new User("/HBQK_l\"Th}&TOy7FF", "Cbq");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable2, derivedVariable2);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable2.removeSupportingDocument(supportingDocument1);
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.7091117567012413
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument2);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument1);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      arrayList1.iterator();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setIsNewRecord(true);
      derivedVariable1.cloneAttributes(rawVariable1);
      assertFalse(rawVariable1.isNewRecord());
      
      ArrayList<Variable> arrayList4 = derivedVariable0.getSourceVariables();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      derivedVariable0.setSourceVariables(arrayList4);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.removeSupportingDocuments(arrayList3);
      derivedVariable2.addSourceVariables(arrayList4);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.4587156921078983
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("(cnIxG0#]'+{-J-");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setOntologyName("(cnIxG0#]'+{-J-");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.setColumnEnd("(cnIxG0#]'+{-J-");
      rawVariable3.addOntologyTerm(ontologyTerm0);
      assertEquals("(cnIxG0#]'+{-J-", rawVariable3.getColumnEnd());
      
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm2.setOntologyName("(cnIxG0#]'+{-J-");
      rawVariable1.removeOntologyTerm(ontologyTerm3);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      arrayList4.add(ontologyTerm1);
      arrayList2.add(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList5 = new ArrayList<OntologyTerm>();
      rawVariable2.removeOntologyTerms(arrayList0);
      ArrayList<Variable> arrayList6 = new ArrayList<Variable>();
      ArrayList<Variable> arrayList7 = new ArrayList<Variable>();
      arrayList6.parallelStream();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerms(arrayList3);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable1.containsOntologyTerm(ontologyTerm5);
      derivedVariable0.getSourceVariables();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm3);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.621091680197683
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("(cnxG0]'8+{-J-");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setOntologyName("(cnxG0]'8+{-J-");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setOntologyName("(cnxG0]'8+{-J-");
      ontologyTerm0.setNewRecord(true);
      ontologyTerm1.setDescription("P0o8JH9uxV");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm1.setOntologyName("$lf`");
      ontologyTerm4.setOntologyName("P0o8JH9uxV");
      ontologyTerm0.setOntologyName("P0o8JH9uxV");
      rawVariable0.removeOntologyTerm(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList4 = rawVariable0.getOntologyTerms();
      arrayList4.add(ontologyTerm1);
      assertEquals(1, arrayList4.size());
      
      rawVariable1.removeOntologyTerms(arrayList2);
      ontologyTerm0.setNameSpace("3:9iable.name.la+bel");
      ontologyTerm0.setTerm("P0o8JH9uxV");
      ArrayList<String> arrayList5 = new ArrayList<String>();
      ArrayList<OntologyTerm> arrayList6 = new ArrayList<OntologyTerm>();
      rawVariable0.updateOntologyTerm(ontologyTerm4);
      rawVariable0.getName();
      rawVariable1.removeOntologyTerms(arrayList2);
      boolean boolean0 = rawVariable1.containsOntologyTerm(ontologyTerm4);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.9173385067639175
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.setName("#");
      derivedVariable0.columnStart = "#";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User();
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      user0.setCounty("i+'cjgeCW%F)");
      user1.setLastName("user.lastName.label");
      User.checkValidUserIDField("user.lastName.label");
      RawVariable rawVariable0 = new RawVariable();
      User user2 = new User("user.status.label", "user.status.label");
      User.detectFieldChanges(user1, user2, user1);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "user.lastName.label");
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      predicate2.and(predicate1);
      predicate1.and(predicate2);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.removeIf(predicate1);
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      arrayList1.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList2);
      assertEquals("#", derivedVariable0.getName());
      
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      arrayList0.iterator();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<Variable> arrayList4 = derivedVariable1.getSourceVariables();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument1);
      derivedVariable2.setSourceVariables(arrayList4);
      ArrayList<SupportingDocument> arrayList5 = new ArrayList<SupportingDocument>();
      derivedVariable1.removeSupportingDocuments(arrayList5);
      derivedVariable1.addSourceVariables(arrayList4);
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.5821447072671853
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument1);
      arrayList1.add(supportingDocument0);
      arrayList1.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList1);
      rawVariable0.notes = null;
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      Consumer<SupportingDocument> consumer0 = (Consumer<SupportingDocument>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList2.forEach(consumer0);
      Variable.validateFields(rawVariable0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.7938482125840185
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      User user0 = new User();
      user0.setPostCode("macaw.businessLayer.VariableSummary");
      user0.setLastName("UNABLE_TO_CHECK_DOCUMENT_EXISTS");
      user0.setLastName("uo]B8%'SYW$hBJB<{");
      user0.setAddressLine1("UNABLE_TO_CHECK_DOCUMENT_EXISTS");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("variable.questionNumber.label");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setOntologyName("(cnIxG0#]'+{-J-");
      rawVariable0.removeOntologyTerm(ontologyTerm3);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      assertTrue(arrayList1.equals((Object)arrayList0));
      
      arrayList1.add(ontologyTerm2);
      rawVariable3.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList1);
      ontologyTerm3.setTerm("uo]B8%'SYW$hBJB<{");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      ArrayList<Variable> arrayList3 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList3);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable3.addValueLabel(valueLabel0);
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      boolean boolean0 = rawVariable3.containsOntologyTerm(ontologyTerm1);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.455760027083268
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("(cnIxG0#]'+{-J-");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setOntologyName("j]9MAL");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable1.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm3.setOntologyName("(cnIxG0#]'+{-J-");
      rawVariable2.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      arrayList3.add(ontologyTerm3);
      arrayList2.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList5 = new ArrayList<OntologyTerm>();
      rawVariable2.removeOntologyTerms(arrayList4);
      ArrayList<Variable> arrayList6 = new ArrayList<Variable>();
      ArrayList<Variable> arrayList7 = new ArrayList<Variable>();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ArrayList<ValueLabel> arrayList8 = new ArrayList<ValueLabel>();
      rawVariable2.setValueLabels(arrayList8);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm3);
      boolean boolean1 = rawVariable2.containsOntologyTerm(ontologyTerm7);
      assertFalse(boolean1 == boolean0);
      
      int int0 = rawVariable3.getIdentifier();
      assertEquals(0, int0);
      assertFalse(rawVariable3.isCleaned());
      assertFalse(rawVariable3.isCoded());
      assertFalse(rawVariable3.isNewRecord());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getValueLabels();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.2090584275903393
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("(cnxG0]'8+{-J-");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setOntologyName("(cnxG0]'8+{-J-");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setOntologyName("(cnxG0]'8+{-J-");
      ontologyTerm0.setOntologyName("$lf`");
      ontologyTerm0.setNewRecord(true);
      ontologyTerm1.setDescription("0o8JH9uxV");
      arrayList2.add(ontologyTerm2);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm1.setOntologyName("$lf`");
      ontologyTerm0.setOntologyName("H[3+r]~83~zIW*!)|");
      ontologyTerm4.setOntologyName("0o8JH9uxV");
      ontologyTerm0.setOntologyName("bV.enZyq#u mF2R;m");
      rawVariable0.removeOntologyTerm(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      arrayList4.add(ontologyTerm1);
      rawVariable1.removeOntologyTerms(arrayList2);
      ontologyTerm0.setNameSpace("3:9iable.name.la+bel");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable1.containsOntologyTerm(ontologyTerm5);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      assertEquals("", ontologyTerm6.getDescription());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.702194618476915
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument1);
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.notes = null;
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      Consumer<SupportingDocument> consumer0 = (Consumer<SupportingDocument>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      arrayList1.iterator();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.setLabel((String) null);
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      derivedVariable0.setSourceVariables(arrayList2);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      
      derivedVariable0.addSourceVariables(arrayList2);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.685495723446485
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("(cnIxG0#]'+{-J-");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setOntologyName("j]9MAL");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable1.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm3.setOntologyName("(cnIxG0#]'+{-J-");
      rawVariable2.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      arrayList3.add(ontologyTerm3);
      arrayList2.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList5 = new ArrayList<OntologyTerm>();
      rawVariable2.removeOntologyTerms(arrayList4);
      ArrayList<Variable> arrayList6 = new ArrayList<Variable>();
      ArrayList<Variable> arrayList7 = new ArrayList<Variable>();
      arrayList6.parallelStream();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm3);
      boolean boolean1 = rawVariable2.containsOntologyTerm(ontologyTerm7);
      assertFalse(boolean1 == boolean0);
      
      rawVariable0.cloneAttributes(rawVariable1);
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.320521931670143
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("vLriable.name.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("1ulqw>*.EogU");
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      derivedVariable0.setYear("UNABLE_TO_DISASSOCIATE_DOCUMENT");
      derivedVariable0.setCleaningDescription("#Mzh");
      Variable.validateFields(derivedVariable0);
      DerivedVariable.validateFields(derivedVariable1);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable0.setCoded(false);
      derivedVariable1.getFilePath();
      derivedVariable0.createVariableSummary();
      derivedVariable0.getSupportingDocuments();
      derivedVariable1.setCleaningStatus("#Mzh");
      User user0 = new User("j", (String) null);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("vLriable.name.label", derivedVariable0.getFilePath());
      assertEquals("#Mzh", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.889354696329235
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.getDisplayName();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("");
      ontologyTerm1.setTerm("G;-fA~>Q@i^ru?q6");
      ontologyTerm1.setTerm("");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setOntologyName("");
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      ontologyTerm0.setTerm("UJAA");
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setOntologyName("*=kpk P");
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      rawVariable0.setQuestionNumber("*=kpk P");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.trimToSize();
      rawVariable0.removeOntologyTerms(arrayList1);
      rawVariable0.getOntologyTerms();
      ontologyTerm0.setTerm("*=kpk P");
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      ArrayList<Variable> arrayList3 = new ArrayList<Variable>();
      arrayList3.parallelStream();
      derivedVariable0.addSourceVariables(arrayList3);
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      System.setCurrentTimeMillis((-167L));
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      ValueLabel valueLabel0 = new ValueLabel();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      ValueLabel valueLabel1 = new ValueLabel();
      Predicate<Object> predicate1 = Predicate.isEqual((Object) valueLabel1);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate1.negate();
      ValueLabel valueLabel2 = new ValueLabel();
      Predicate.isEqual((Object) "f]sR>|hz(h4X?!\"C");
      Predicate<Object> predicate4 = predicate3.and(predicate1);
      Predicate<Object> predicate5 = predicate4.negate();
      Predicate<Object> predicate6 = predicate4.negate();
      predicate6.and(predicate3);
      predicate6.and(predicate5);
      arrayList0.removeIf(predicate2);
      arrayList0.add(supportingDocument2);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList1.iterator();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList3 = derivedVariable1.getSourceVariables();
      derivedVariable1.setSourceVariables(arrayList3);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.3558258304206885
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("(cnxG0]'8+{-J-");
      ontologyTerm0.setOntologyName("(cnxG0]'8+{-J-");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ontologyTerm0.setDescription("variable.alias.label");
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setNewRecord(false);
      ontologyTerm0.setDescription("(cnxG0]'8+{-J-");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm2.setOntologyName("0o8JH9uxV");
      ontologyTerm4.setOntologyName("0o8JH9uxV");
      ontologyTerm4.setOntologyName("j6x^eJi=");
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      arrayList3.add(ontologyTerm4);
      arrayList2.add(ontologyTerm3);
      rawVariable0.removeOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setNameSpace("j6x^eJi=");
      ArrayList<String> arrayList5 = new ArrayList<String>();
      ArrayList<OntologyTerm> arrayList6 = new ArrayList<OntologyTerm>();
      rawVariable0.updateOntologyTerm(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList7 = rawVariable0.getOntologyTerms();
      assertFalse(arrayList7.contains(ontologyTerm2));
      
      boolean boolean0 = rawVariable0.isCleaned();
      assertFalse(boolean0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.206552161926179
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      ValueLabel valueLabel0 = new ValueLabel();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      ValueLabel valueLabel1 = new ValueLabel();
      Predicate<Object> predicate1 = Predicate.isEqual((Object) valueLabel1);
      Predicate<Object> predicate2 = predicate0.negate();
      ValueLabel valueLabel2 = new ValueLabel();
      Predicate<Object> predicate3 = Predicate.isEqual((Object) valueLabel2);
      predicate1.and(predicate3);
      Predicate<Object> predicate4 = predicate1.and(predicate2);
      arrayList0.removeIf(predicate4);
      arrayList0.add(supportingDocument1);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      arrayList2.add(supportingDocument1);
      rawVariable0.setSupportingDocuments(arrayList1);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      arrayList0.iterator();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList4 = derivedVariable1.getSourceVariables();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument4);
      derivedVariable0.setCleaningDescription("UNABLE_TO_GET_CLEANING_STATE_IDENTIFIER");
      derivedVariable0.setSourceVariables(arrayList4);
      derivedVariable0.removeSupportingDocuments(arrayList2);
      assertEquals("UNABLE_TO_GET_CLEANING_STATE_IDENTIFIER", derivedVariable0.getCleaningDescription());
      
      derivedVariable1.addSourceVariables(arrayList4);
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add((Variable) derivedVariable0);
      ontologyTerm0.setOntologyName("^f");
      ontologyTerm0.setNewRecord(false);
      // Undeclared exception!
      try { 
        derivedVariable1.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.206552161926179
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      User user0 = new User("variable.label.label", "variable.label.label");
      user0.setLastName("general.fieldValue.blank");
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setOntologyName("UNABLE_TO_GET_CHANGES_FOR_DOCUMENT");
      ontologyTerm3.setOntologyName("UNABLE_TO_GET_CHANGES_FOR_DOCUMENT");
      String string0 = "DUPLICATE_DOCUMENT_ASSOCIATION";
      ontologyTerm3.setOntologyName("DUPLICATE_DOCUMENT_ASSOCIATION");
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList2);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.203456186693981
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      ValueLabel valueLabel0 = new ValueLabel();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      ValueLabel valueLabel1 = new ValueLabel();
      Predicate<Object> predicate1 = Predicate.isEqual((Object) valueLabel1);
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate0.negate();
      ValueLabel valueLabel2 = new ValueLabel();
      Predicate.isEqual((Object) valueLabel2);
      predicate2.negate();
      predicate3.and(predicate0);
      Predicate<Object> predicate4 = predicate1.and(predicate3);
      arrayList0.removeIf(predicate4);
      arrayList0.add(supportingDocument1);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      arrayList2.add(supportingDocument1);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      arrayList0.iterator();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList4 = derivedVariable1.getSourceVariables();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument4);
      assertTrue(boolean0);
      
      derivedVariable0.setSourceVariables(arrayList4);
      derivedVariable0.removeSupportingDocuments(arrayList2);
      derivedVariable1.addSourceVariables(arrayList4);
      derivedVariable1.getDisplayName();
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.384415616105067
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument2);
      rawVariable0.setYear("UNABLE_TO_GET_ONTOLOGY_TERMS");
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument2);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument2);
      rawVariable0.setSupportingDocuments(arrayList1);
      assertEquals("UNABLE_TO_GET_ONTOLOGY_TERMS", rawVariable0.getYear());
      
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList2.forEach(consumer0);
      arrayList1.iterator();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<Variable> arrayList3 = derivedVariable1.getSourceVariables();
      derivedVariable0.containsSupportingDocument(supportingDocument2);
      derivedVariable0.setSourceVariables(arrayList3);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.removeSupportingDocuments(arrayList2);
      derivedVariable0.addSourceVariables(arrayList3);
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "variable.notes.label";
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      Integer integer0 = new Integer((-1));
      Predicate<Object> predicate0 = Predicate.isEqual((Object) integer0);
      predicate0.test("ZV#,X ;j}N\"y");
      arrayList0.removeIf(predicate0);
      derivedVariable0.addSourceVariables(arrayList0);
      String string0 = derivedVariable0.getColumnStart();
      assertEquals("", string0);
      
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertEquals("", derivedVariable0.getDisplayName());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.756289927232241
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setAlias("macaw.businessLayer.SupportingDocument");
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("(cnIxG0#]'+{-J-");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setOntologyName("(cnIxG0#]'+{-J-");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList2.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList2);
      ontologyTerm0.setTerm("(cnIxG0#]'+{-J-");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      ArrayList<String> arrayList3 = new ArrayList<String>();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("macaw.businessLayer.SupportingDocument", rawVariable0.getAlias());
      
      DerivedVariable derivedVariable2 = (DerivedVariable)derivedVariable1.clone();
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.542117779761874
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "nPQkqSxtqPvABRs";
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      derivedVariable1.codeBookNumber = "EZ*tqUq$eG";
      derivedVariable1.cloneAttributes(derivedVariable0);
      DerivedVariable derivedVariable2 = (DerivedVariable)derivedVariable1.clone();
      derivedVariable0.clone();
      derivedVariable2.getSourceVariables();
      assertEquals("nPQkqSxtqPvABRs", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      User user0 = new User("D3&I_N$Kg#M,$Y }.", "P$=$%d<==1nb F?;");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("|a");
      derivedVariable0.createVariableSummary();
      Variable.validateFields(derivedVariable0);
      assertEquals("|a", derivedVariable0.getLabel());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.893262170170108
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      User user0 = new User("variable.label.label", "variable.label.label");
      user0.setAffiliation("general.fieldValue.blank");
      user0.setCounty("variable.columnStart.label");
      user0.setLastName("general.fieldValue.blank");
      User.checkValidUserIDField("variable.label.label");
      RawVariable rawVariable0 = new RawVariable();
      User user1 = new User("W<", "variable.columnStart.label");
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      rawVariable0.setName("general.fieldValue.blank");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.createVariableSummary();
      assertEquals("general.fieldValue.blank", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.1341286000959614
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("(cnxG0]'8+{-J-");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setDescription("UNABLE_TO_CHECK_ALIAS_FILE_PATH_DUPLICATE");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setOntologyName("var?abve.year.label");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm8.setOntologyName("tw9dvLK7?69h");
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.8926062044475165
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      rawVariable0.setOntologyTerms(arrayList0);
      User user0 = new User();
      user0.setPassword("variable.columnStart.label");
      user0.setLastName("variable.columnStart.label");
      user0.setAddressLine1((String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setColumnStart("#[s\\@A k9Dh");
      ontologyTerm0.setDescription("(cnIxG0#]'+{-J-");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setOntologyName("UNABLE_TO_GET_DERIVED_VARIABLE");
      rawVariable1.removeOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      rawVariable1.removeOntologyTerms(arrayList2);
      ontologyTerm0.setTerm("(cnIxG0#]'+{-J-");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, rawVariable0);
      ArrayList<String> arrayList3 = new ArrayList<String>();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("#[s\\@A k9Dh", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument2);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument2);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument2);
      rawVariable0.setSupportingDocuments(arrayList1);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList1.iterator();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList3.add(ontologyTerm0);
      arrayList3.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList4);
      ArrayList<Variable> arrayList5 = new ArrayList<Variable>();
      ArrayList<Variable> arrayList6 = new ArrayList<Variable>();
      arrayList6.add((Variable) rawVariable0);
      arrayList6.parallelStream();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.setCodeBookNumber("NON_EXISTENT_VARIABLE_ASSOCIATION");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setFilePath("d0Zt;P{J<=KWEZgi6`A");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      rawVariable0.setOntologyTerms(arrayList0);
      assertEquals("d0Zt;P{J<=KWEZgi6`A", derivedVariable0.getFilePath());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("(cnIxG0#]'+{-J-");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setOntologyName("UNABLE_TO_GET_DERIVED_VARIABLE");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList2);
      ontologyTerm1.setTerm("variable.columnEnd.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable2 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      ArrayList<String> arrayList3 = new ArrayList<String>();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=3.708665825820528
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("_)`UFA`faZ");
      rawVariable0.setCodeBookNumber("_)`UFA`faZ");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "_)`UFA`faZ";
      stringArray0[1] = ",j[1GEnzKFH+$";
      stringArray0[2] = "_)`UFA`faZ";
      stringArray0[3] = "_)`UFA`faZ";
      stringArray0[4] = "_)`UFA`faZ";
      stringArray0[5] = "_)`UFA`faZ";
      stringArray0[6] = "_)`UFA`faZ";
      stringArray0[7] = "_)`UFA`faZ";
      arrayList0.toArray(stringArray0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setNotes("_)`UFA`faZ");
      rawVariable0.clone();
      rawVariable0.getNotes();
      rawVariable0.getFilePath();
      rawVariable0.getColumnStart();
      assertEquals("_)`UFA`faZ", rawVariable0.getNotes());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.701916763517204
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "vn\">QXs?*wP!6i;>";
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument2);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      arrayList0.add(supportingDocument3);
      rawVariable0.setSupportingDocuments(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument3);
      arrayList0.iterator();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getLabel());
      
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument4.setDocumentCode("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      arrayList1.add(supportingDocument4);
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      derivedVariable0.removeSupportingDocuments(arrayList1);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      User user0 = new User("variable.labe.labl", "variable.labe.labl");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      ontologyTerm0.setDescription("variable.labe.labl");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setOntologyName("UNABLE_TO_CHECK_CLEANING_STATE_DUPLICATE");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setOntologyName("UNABLE_TO_DISASSOCIATE_ONTOLOGY_TERM");
      ontologyTerm2.setOntologyName("UNABLE_TO_CHECK_CLEANING_STATE_DUPLICATE");
      rawVariable0.removeOntologyTerm(ontologyTerm3);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm1);
      rawVariable0.removeOntologyTerms(arrayList0);
      ontologyTerm3.setNameSpace("3:9iable.name.la+bel");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm4);
      assertFalse(boolean0);
      
      rawVariable0.getFilePath();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("(cnxG0]'8+{-J-");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setDescription("UNABLE_TO_CHECK_ALIAS_FILE_PATH_DUPLICATE");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm6.setOntologyName("UNABLE_TO_CHECK_ALIAS_FILE_PATH_DUPLICATE");
      ontologyTerm7.setOntologyName("H[3+r]~83~zIW*!)|");
      ontologyTerm5.setDescription("(cnxG0]'8+{-J-");
      ontologyTerm7.setOntologyName("Sc-@5|L9Dh#W6E;#");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList3 = derivedVariable0.getOntologyTerms();
      arrayList3.add(ontologyTerm5);
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.620343052891363
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList0.iterator();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.cloneAttributes(rawVariable0);
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable2.setSourceVariables(arrayList2);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.setCategory("variable.category.label");
      derivedVariable3.addSourceVariables(arrayList2);
      assertEquals("variable.category.label", derivedVariable3.getCategory());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.questionNumber = "UNABLE_TO_CHECK_CLEANING_STATE_EXISTS";
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.addOntologyTerms(arrayList1);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.addSourceVariables(arrayList0);
      System.setCurrentTimeMillis(2256L);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.742278093806249
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument1);
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument1);
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable2.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList1);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      arrayList1.iterator();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable2.setNotes("#Mzh");
      derivedVariable3.cloneAttributes(rawVariable0);
      derivedVariable0.getSourceVariables();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable4.containsSupportingDocument(supportingDocument1);
      ArrayList<Variable> arrayList3 = derivedVariable2.getSourceVariables();
      derivedVariable1.setSourceVariables(arrayList3);
      arrayList3.add((Variable) derivedVariable0);
      derivedVariable3.removeSupportingDocuments(arrayList0);
      derivedVariable1.addSourceVariables(arrayList3);
      assertEquals("#Mzh", derivedVariable2.getNotes());
      
      derivedVariable0.getCodeBookNumber();
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("(cnxG0]'8+{-J-");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setDescription("UNABLE_TO_CHECK_ALIAS_FILE_PATH_DUPLICATE");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setOntologyName("var?abveNyear.laJel");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm8.setOntologyName("tw9dvLK7?69h");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "UNABLE_TO_CREATE_DERIVED_VARIABLE";
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("UNABLE_TO_CREATE_DERIVED_VARIABLE", derivedVariable1.getColumnStart());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getAlias());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("", derivedVariable1.getFilePath());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("", derivedVariable1.getDisplayName());
      assertEquals("", derivedVariable1.getNotes());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = derivedVariable0.getCategory();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", string0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertNotNull(string0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.759673390745343
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("UNABLE_TO_DISASSOCIATE_DOCUMENT", "UNABLE_TO_DISASSOCIATE_DOCUMENT");
      user0.setAddressLine1((String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setDescription("UNABLE_TO_DISASSOCIATE_DOCUMENT");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm1.setOntologyName((String) null);
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm1);
      arrayList0.add(ontologyTerm3);
      derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.removeOntologyTerms(arrayList0);
      ontologyTerm1.setTerm((String) null);
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      ArrayList<Variable> arrayList3 = new ArrayList<Variable>();
      arrayList2.parallelStream();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList4 = new ArrayList<Variable>();
      derivedVariable1.addSourceVariables(arrayList2);
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      rawVariable3.setForm("UNABLE_TO_DISASSOCIATE_DOCUMENT");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable3.containsOntologyTerm(ontologyTerm4);
      assertEquals("UNABLE_TO_DISASSOCIATE_DOCUMENT", rawVariable3.getForm());
      
      derivedVariable1.createVariableSummary();
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.327701700803115
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("#Mzh");
      ontologyTerm0.setOntologyName("7uG;TpuS'KeJR1%,*");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(true);
      ontologyTerm0.setDescription("#Mzh");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAvailability("#Mzh");
      rawVariable1.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setOntologyName("UNABLE_TO_GET_AVAILABILITY_STATE_IDENTIFIER");
      ontologyTerm0.setOntologyName("0o8JH9uxV");
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.removeOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      derivedVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      User user0 = new User(":p[TwTZ(H^e", ",%fFThq:x8");
      User.detectFieldChanges(user0, user0, user0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = ":p[TwTZ(H^e";
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals(":p[TwTZ(H^e", derivedVariable0.getNotes());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("(cnxG0]'8+{-J-");
      ontologyTerm0.setOntologyName("(cnxG0]'8+{-J-");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setOntologyName("(cnxG0]'8+{-J-");
      User user0 = new User();
      user0.setAddressLine2("$lf`");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user1 = new User();
      user0.setLastName("$lf`");
      User.checkValidUserIDField("UNABLE_TO_GET_CHANGES_FOR_DOCUMENT");
      User user2 = new User("general.fieldValue.blank", "(cnxG0]'8+{-J-");
      User user3 = new User("$lf`", "UNABLE_TO_GET_CHANGES_FOR_DOCUMENT");
      user3.setAffiliation("(cnxG0]'8+{-J-");
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user0, (Variable) null, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }
}
