/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 03:31:47 GMT 2019
 */

package net.sf.xbus.protocol.records;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.net.URL;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Locale;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import javax.activation.FileDataSource;
import javax.xml.namespace.QName;
import javax.xml.soap.MimeHeaders;
import javax.xml.stream.util.EventReaderDelegate;
import net.sf.xbus.base.bytearraylist.ByteArrayList;
import net.sf.xbus.base.xbussystem.XBUSSystem;
import net.sf.xbus.protocol.records.RecordTypeMessage;
import org.apache.axis.configuration.BasicClientConfig;
import org.apache.axis.deployment.wsdd.WSDDConstants;
import org.apache.axis.deployment.wsdd.WSDDService;
import org.apache.axis.handlers.soap.SOAPService;
import org.apache.axis.message.Detail;
import org.apache.axis.message.RPCElement;
import org.apache.axis.schema.SchemaVersion;
import org.apache.axis.schema.SchemaVersion1999;
import org.apache.axis.soap.SOAP12Constants;
import org.apache.commons.httpclient.ConnectMethod;
import org.apache.commons.httpclient.util.HttpURLConnection;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.xerces.dom.CoreDocumentImpl;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.parsers.CachingParserPool;
import org.apache.xerces.parsers.DTDConfiguration;
import org.apache.xerces.parsers.SecurityConfiguration;
import org.apache.xerces.parsers.XMLGrammarCachingConfiguration;
import org.apache.xerces.util.SymbolTable;
import org.apache.xerces.util.XMLGrammarPoolImpl;
import org.apache.xerces.xni.grammars.XMLGrammarPool;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RecordTypeMessage_ESTest extends RecordTypeMessage_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("dP>}q6D", (XBUSSystem) null, "1d&Xc5%fMWO^Ej");
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseDocument(deferredDocumentImpl0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("d0>}q66", (XBUSSystem) null, "1d&Xc5%fWMWO^Ej");
      recordTypeMessage0.setResponseDocument(coreDocumentImpl0, (XBUSSystem) null);
      recordTypeMessage0.getResponseText();
      SOAP12Constants sOAP12Constants0 = new SOAP12Constants();
      SchemaVersion1999 schemaVersion1999_0 = (SchemaVersion1999)SchemaVersion.SCHEMA_1999;
      SOAP12Constants sOAP12Constants1 = new SOAP12Constants();
      MimeHeaders mimeHeaders0 = new MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders1 = new org.apache.axis.message.MimeHeaders(mimeHeaders0);
      mimeHeaders1.addHeader("]0", "E3xkm-;A&i8IBe");
      recordTypeMessage0.getResponseObject();
      org.apache.axis.message.MimeHeaders mimeHeaders2 = new org.apache.axis.message.MimeHeaders();
      mimeHeaders2.addHeader("E3xkm-;A&i8IBe", "=<aAb81K0lQ");
      org.apache.axis.message.MimeHeaders mimeHeaders3 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders4 = new org.apache.axis.message.MimeHeaders(mimeHeaders2);
      org.apache.axis.message.MimeHeaders mimeHeaders5 = new org.apache.axis.message.MimeHeaders();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      org.apache.axis.message.MimeHeaders mimeHeaders6 = new org.apache.axis.message.MimeHeaders();
      MimeHeaders mimeHeaders7 = new MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders8 = new org.apache.axis.message.MimeHeaders(mimeHeaders7);
      org.apache.axis.message.MimeHeaders mimeHeaders9 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders10 = new org.apache.axis.message.MimeHeaders();
      mimeHeaders8.removeAllHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders11 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders12 = new org.apache.axis.message.MimeHeaders(mimeHeaders3);
      MimeHeaders mimeHeaders13 = new MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders14 = new org.apache.axis.message.MimeHeaders(mimeHeaders13);
      mimeHeaders12.removeAllHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders15 = new org.apache.axis.message.MimeHeaders(mimeHeaders14);
      org.apache.axis.message.MimeHeaders mimeHeaders16 = new org.apache.axis.message.MimeHeaders(mimeHeaders9);
      org.apache.axis.message.MimeHeaders mimeHeaders17 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders18 = new org.apache.axis.message.MimeHeaders();
      System.setCurrentTimeMillis((-1904L));
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("&o!B?G -\"^_9|1S", (XBUSSystem) null, "&o!B?G -\"^_9|1S");
      byte[] byteArray0 = new byte[9];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byteArray0[1] = (byte)83;
      byteArray0[2] = (byte)83;
      byteArray0[3] = (byte)48;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&o!B?G -\"^_9|1S");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Boolean boolean0 = new Boolean("&o!B?G -\"^_9|1S");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byteArray0[3] = (byte) (-122);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "OrqM,EK]m={Anc");
      ByteArrayList byteArrayList0 = new ByteArrayList();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      EventReaderDelegate eventReaderDelegate0 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate1 = new EventReaderDelegate();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      byteArrayList1.add(byteArray0);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestObject(byteArrayList1, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$56^B/");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byte[] byteArray0 = new byte[14];
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-33);
      byteArray0[6] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("!)|z[:E` xl+K<kXAv|0", (XBUSSystem) null, "!)|z[:E` xl+K<kXAv|0");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "$56^B/");
      Boolean boolean0 = new Boolean("!)|z[:E` xl+K<kXAv|0");
      Boolean boolean1 = new Boolean("!)[:E` xl+K<kXSAv|0");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "!)|z[:E` xl+K<kXAv|0");
      EventReaderDelegate eventReaderDelegate0 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate1 = new EventReaderDelegate();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      recordTypeMessage0.setRequestObject(byteArrayList0, (XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("nsn[XQ?>v)|u9NmsqC2", (XBUSSystem) null, "nsn[XQ?>v)|u9NmsqC2");
      WSDDService wSDDService0 = new WSDDService();
      Locale locale0 = Locale.ENGLISH;
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      SymbolTable symbolTable0 = new SymbolTable(0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'e';
      charArray0[2] = 'T';
      charArray0[3] = '+';
      charArray0[4] = ':';
      charArray0[5] = 'U';
      charArray0[6] = '<';
      charArray0[7] = 'z';
      charArray0[8] = 'k';
      symbolTable0.hash(charArray0, 1, (-1305));
      XMLGrammarPoolImpl xMLGrammarPoolImpl0 = new XMLGrammarPoolImpl(933);
      CachingParserPool.SynchronizedGrammarPool cachingParserPool_SynchronizedGrammarPool0 = new CachingParserPool.SynchronizedGrammarPool(xMLGrammarPoolImpl0);
      SymbolTable symbolTable1 = new SymbolTable();
      XMLGrammarCachingConfiguration xMLGrammarCachingConfiguration0 = new XMLGrammarCachingConfiguration(symbolTable1, cachingParserPool_SynchronizedGrammarPool0);
      xMLGrammarCachingConfiguration0.addRecognizedFeatures((String[]) null);
      CachingParserPool.SynchronizedGrammarPool cachingParserPool_SynchronizedGrammarPool1 = new CachingParserPool.SynchronizedGrammarPool((XMLGrammarPool) null);
      DTDConfiguration dTDConfiguration0 = new DTDConfiguration(symbolTable0, (XMLGrammarPool) null);
      SecurityConfiguration securityConfiguration0 = new SecurityConfiguration(symbolTable1, xMLGrammarPoolImpl0, dTDConfiguration0);
      locale0.getUnicodeLocaleAttributes();
      BasicClientConfig basicClientConfig0 = new BasicClientConfig();
      BasicClientConfig basicClientConfig1 = new BasicClientConfig();
      try { 
        recordTypeMessage0.setRequestObject(securityConfiguration0, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 org.apache.xerces.parsers.SecurityConfiguration cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setResponseText((String) null, (XBUSSystem) null);
      QName qName0 = WSDDConstants.QNAME_OPERATION;
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false);
      DeferredDocumentImpl deferredDocumentImpl1 = new DeferredDocumentImpl();
      DeferredDocumentImpl deferredDocumentImpl2 = new DeferredDocumentImpl(true);
      DeferredDocumentImpl deferredDocumentImpl3 = new DeferredDocumentImpl(false);
      DeferredDocumentImpl deferredDocumentImpl4 = new DeferredDocumentImpl();
      deferredDocumentImpl2.getNodeURI((-1));
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      deferredDocumentImpl4.setStrictErrorChecking(false);
      DeferredDocumentImpl deferredDocumentImpl5 = new DeferredDocumentImpl();
      deferredDocumentImpl5.getDomConfig();
      DeferredDocumentImpl deferredDocumentImpl6 = new DeferredDocumentImpl();
      DeferredDocumentImpl deferredDocumentImpl7 = new DeferredDocumentImpl(true, false);
      DeferredDocumentImpl deferredDocumentImpl8 = new DeferredDocumentImpl();
      // Undeclared exception!
      try { 
        deferredDocumentImpl1.insertBefore(deferredDocumentImpl5, deferredDocumentImpl8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setResponseText((String) null, (XBUSSystem) null);
      QName qName0 = WSDDConstants.QNAME_OPERATION;
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false);
      DeferredDocumentImpl deferredDocumentImpl1 = new DeferredDocumentImpl();
      DeferredDocumentImpl deferredDocumentImpl2 = new DeferredDocumentImpl(false);
      DeferredDocumentImpl deferredDocumentImpl3 = new DeferredDocumentImpl(false);
      DeferredDocumentImpl deferredDocumentImpl4 = new DeferredDocumentImpl();
      deferredDocumentImpl2.getNodeURI((-1));
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      deferredDocumentImpl4.setStrictErrorChecking(false);
      DeferredDocumentImpl deferredDocumentImpl5 = new DeferredDocumentImpl();
      deferredDocumentImpl5.getDomConfig();
      DeferredDocumentImpl deferredDocumentImpl6 = new DeferredDocumentImpl();
      DeferredDocumentImpl deferredDocumentImpl7 = new DeferredDocumentImpl(true, false);
      DeferredDocumentImpl deferredDocumentImpl8 = new DeferredDocumentImpl();
      // Undeclared exception!
      try { 
        deferredDocumentImpl1.insertBefore(deferredDocumentImpl5, deferredDocumentImpl8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      coreDocumentImpl0.setNodeValue("enter HttpURLConnection.getContent(Class[])");
      FileSystemHandling.shouldAllThrowIOExceptions();
      RPCElement rPCElement0 = new RPCElement("");
      rPCElement0.getAttributeNS("GnEFQndg^M7.}", "volatile");
      rPCElement0.addAttribute("|D`=KZ+&0Y)1} LM", (String) null, "enter HttpURLConnection.getContent(Class[])");
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setResponseDocument(coreDocumentImpl0, (XBUSSystem) null);
      org.apache.axis.message.MimeHeaders mimeHeaders0 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders1 = new org.apache.axis.message.MimeHeaders();
      mimeHeaders1.removeAllHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders2 = new org.apache.axis.message.MimeHeaders();
      String[] stringArray0 = new String[0];
      mimeHeaders1.getMatchingHeaders(stringArray0);
      org.apache.axis.message.MimeHeaders mimeHeaders3 = new org.apache.axis.message.MimeHeaders(mimeHeaders0);
      org.apache.axis.message.MimeHeaders mimeHeaders4 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders5 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders6 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders7 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders8 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders9 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders10 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders11 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders12 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders13 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders14 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders15 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders16 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders17 = new org.apache.axis.message.MimeHeaders();
      assertFalse(mimeHeaders17.equals((Object)mimeHeaders11));
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.143654440989084
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XBUSSystem xBUSSystem0 = null;
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-27);
      byteArray0[2] = (byte) (-27);
      recordTypeMessage0.setResponseObject((Object) null, (XBUSSystem) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byteArrayList0.toString();
      byteArrayList0.add(byteArray0);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getResponseText();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, (byte)106);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
          String string0 = "\\fV~";
          recordTypeMessage0.setRequestText((String) null, (XBUSSystem) null);
          ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
          byte[] byteArray0 = new byte[4];
          byteArray0[0] = (byte) (-92);
          byteArray0[1] = (byte) (-92);
          byteArray0[2] = (byte) (-92);
          byteArray0[3] = (byte) (-92);
          byteArrayOutputStream0.write(byteArray0);
          boolean boolean0 = false;
          String string1 = "I";
          MockFile mockFile0 = new MockFile("I", "\fV~");
          FileDataSource fileDataSource0 = new FileDataSource(mockFile0);
          FileDataSource fileDataSource1 = new FileDataSource(mockFile0);
          // Undeclared exception!
          try { 
            fileDataSource1.getOutputStream();
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.io.FilePermission\" \"/home/ubuntu/termite/projects/83_xbus/I/\fV~\" \"write\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
             // java.io.FileOutputStream.<init>(FileOutputStream.java:200)
             // java.io.FileOutputStream.<init>(FileOutputStream.java:162)
             // javax.activation.FileDataSource.getOutputStream(FileDataSource.java:109)
             // sun.reflect.GeneratedMethodAccessor173.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = "Z3V%RS6/-b;;L}`P";
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("Z3V%RS6/-b;;L}`P", (XBUSSystem) null, "Z3V%RS6/-b;;L}`P");
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestText("Z3V%RS6/-b;;L}`P", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      Integer integer0 = new Integer(0);
      recordTypeMessage0.synchronizeResponseFields((XBUSSystem) null);
      ConnectMethod connectMethod0 = new ConnectMethod();
      URL uRL0 = MockURL.getFtpExample();
      HttpURLConnection httpURLConnection0 = new HttpURLConnection(connectMethod0, uRL0);
      assertEquals((-1), httpURLConnection0.getContentLength());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      Integer integer0 = new Integer((-28));
      recordTypeMessage0.synchronizeResponseFields((XBUSSystem) null);
      ConnectMethod connectMethod0 = new ConnectMethod();
      URL uRL0 = MockURL.getFtpExample();
      HttpURLConnection httpURLConnection0 = new HttpURLConnection(connectMethod0, uRL0);
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      byte[] byteArray0 = new byte[9];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byteArray0[1] = (byte)106;
      byteArray0[2] = (byte)106;
      org.apache.axis.message.MimeHeaders mimeHeaders0 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders1 = new org.apache.axis.message.MimeHeaders();
      mimeHeaders0.removeHeader((String) null);
      MimeHeaders mimeHeaders2 = new MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders3 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders4 = new org.apache.axis.message.MimeHeaders(mimeHeaders3);
      org.apache.axis.message.MimeHeaders mimeHeaders5 = new org.apache.axis.message.MimeHeaders(mimeHeaders0);
      org.apache.axis.message.MimeHeaders mimeHeaders6 = new org.apache.axis.message.MimeHeaders(mimeHeaders2);
      org.apache.axis.message.MimeHeaders mimeHeaders7 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders8 = new org.apache.axis.message.MimeHeaders();
      MimeHeaders mimeHeaders9 = new MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders10 = new org.apache.axis.message.MimeHeaders(mimeHeaders6);
      org.apache.axis.message.MimeHeaders mimeHeaders11 = new org.apache.axis.message.MimeHeaders(mimeHeaders10);
      org.apache.axis.message.MimeHeaders mimeHeaders12 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders13 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders14 = new org.apache.axis.message.MimeHeaders();
      mimeHeaders10.removeAllHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders15 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders16 = new org.apache.axis.message.MimeHeaders(mimeHeaders12);
      org.apache.axis.message.MimeHeaders mimeHeaders17 = new org.apache.axis.message.MimeHeaders(mimeHeaders8);
      org.apache.axis.message.MimeHeaders mimeHeaders18 = new org.apache.axis.message.MimeHeaders(mimeHeaders7);
      org.apache.axis.message.MimeHeaders mimeHeaders19 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders20 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders21 = new org.apache.axis.message.MimeHeaders(mimeHeaders2);
      org.apache.axis.message.MimeHeaders mimeHeaders22 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders23 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders24 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders25 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders26 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders27 = new org.apache.axis.message.MimeHeaders();
      recordTypeMessage0.getRequestTextAsXML((XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      byte[] byteArray0 = new byte[9];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byteArray0[4] = (byte)106;
      byteArray0[2] = (byte)106;
      byteArray0[3] = (byte)41;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#SdyZB% PDa&6d:");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Boolean boolean0 = new Boolean(false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#SdyZB% PDa&6d:");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#SdyZB% PDa&6d:");
      ByteArrayList byteArrayList0 = new ByteArrayList();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      EventReaderDelegate eventReaderDelegate0 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate1 = new EventReaderDelegate();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      recordTypeMessage0.setRequestObject((Object) null, (XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayList.createByteArrayList(byteArray0, (byte) (-122));
      Integer integer0 = new Integer((byte) (-122));
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("", (XBUSSystem) null, "d");
      ConnectMethod connectMethod0 = new ConnectMethod();
      URL uRL0 = MockURL.getFtpExample();
      HttpURLConnection httpURLConnection0 = new HttpURLConnection(connectMethod0, uRL0);
      httpURLConnection0.getInputStream();
      recordTypeMessage0.setRequestObject((Object) null, (XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$56^B/");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$56^B/");
      byte[] byteArray0 = new byte[14];
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-33);
      byteArray0[6] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("!)|z[:E` xl+K<kXAv|0", (XBUSSystem) null, "!)|z[:E` xl+K<kXAv|0");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "$56^B/");
      Boolean boolean0 = new Boolean("!)|z[:E` xl+K<kXAv|0");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Boolean boolean1 = new Boolean("!)[:E` xl+K<kXSAv|0");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "!)|z[:E` xl+K<kXAv|0");
      EventReaderDelegate eventReaderDelegate0 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate1 = new EventReaderDelegate();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      recordTypeMessage0.setRequestObject(byteArrayList0, (XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("ns}[(Q?>v)|u9Nmsqu2", (XBUSSystem) null, "ns}[(Q?>v)|u9Nmsqu2");
      WSDDService wSDDService0 = new WSDDService();
      Locale locale0 = Locale.ENGLISH;
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      SymbolTable symbolTable0 = new SymbolTable(0);
      CachingParserPool.SynchronizedGrammarPool cachingParserPool_SynchronizedGrammarPool0 = new CachingParserPool.SynchronizedGrammarPool((XMLGrammarPool) null);
      XMLGrammarCachingConfiguration xMLGrammarCachingConfiguration0 = new XMLGrammarCachingConfiguration(symbolTable0, cachingParserPool_SynchronizedGrammarPool0);
      xMLGrammarCachingConfiguration0.addRecognizedFeatures((String[]) null);
      SecurityConfiguration securityConfiguration0 = new SecurityConfiguration(symbolTable0, cachingParserPool_SynchronizedGrammarPool0, xMLGrammarCachingConfiguration0);
      locale0.getUnicodeLocaleAttributes();
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      BasicClientConfig basicClientConfig0 = new BasicClientConfig();
      BasicClientConfig basicClientConfig1 = new BasicClientConfig();
      // Undeclared exception!
      try { 
        basicClientConfig1.getServiceByNamespaceURI((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // local part cannot be \"null\" when creating a QName
         //
         verifyException("javax.xml.namespace.QName", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      Integer integer0 = new Integer((-25));
      recordTypeMessage0.synchronizeRequestFields((XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      byte[] byteArray0 = new byte[4];
      ByteArrayList byteArrayList0 = ByteArrayList.createByteArrayList(byteArray0, (byte)18);
      byteArrayList0.toString();
      recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false);
      org.apache.axis.message.MimeHeaders mimeHeaders0 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders1 = new org.apache.axis.message.MimeHeaders(mimeHeaders0);
      org.apache.axis.message.MimeHeaders mimeHeaders2 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders3 = new org.apache.axis.message.MimeHeaders();
      mimeHeaders1.removeHeader("");
      MimeHeaders mimeHeaders4 = new MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders5 = new org.apache.axis.message.MimeHeaders(mimeHeaders2);
      org.apache.axis.message.MimeHeaders mimeHeaders6 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders7 = new org.apache.axis.message.MimeHeaders(mimeHeaders1);
      org.apache.axis.message.MimeHeaders mimeHeaders8 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders9 = new org.apache.axis.message.MimeHeaders();
      MimeHeaders mimeHeaders10 = new MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders11 = new org.apache.axis.message.MimeHeaders(mimeHeaders4);
      org.apache.axis.message.MimeHeaders mimeHeaders12 = new org.apache.axis.message.MimeHeaders(mimeHeaders7);
      org.apache.axis.message.MimeHeaders mimeHeaders13 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders14 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders15 = new org.apache.axis.message.MimeHeaders();
      mimeHeaders3.removeAllHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders16 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders17 = new org.apache.axis.message.MimeHeaders(mimeHeaders15);
      MimeHeaders mimeHeaders18 = new MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders19 = new org.apache.axis.message.MimeHeaders(mimeHeaders10);
      org.apache.axis.message.MimeHeaders mimeHeaders20 = new org.apache.axis.message.MimeHeaders();
      mimeHeaders17.removeAllHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders21 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders22 = new org.apache.axis.message.MimeHeaders(mimeHeaders9);
      org.apache.axis.message.MimeHeaders mimeHeaders23 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders24 = new org.apache.axis.message.MimeHeaders(mimeHeaders20);
      org.apache.axis.message.MimeHeaders mimeHeaders25 = new org.apache.axis.message.MimeHeaders(mimeHeaders1);
      org.apache.axis.message.MimeHeaders mimeHeaders26 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders27 = new org.apache.axis.message.MimeHeaders();
      assertFalse(mimeHeaders27.equals((Object)mimeHeaders13));
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) arrayList0, (Collection<Locale>) null, locale_FilteringMode0);
      Locale locale1 = Locale.KOREA;
      locale0.getDisplayCountry(locale1);
      CachingParserPool.SynchronizedGrammarPool cachingParserPool_SynchronizedGrammarPool0 = new CachingParserPool.SynchronizedGrammarPool((XMLGrammarPool) null);
      locale0.getUnicodeLocaleAttributes();
      BasicClientConfig basicClientConfig0 = new BasicClientConfig();
      BasicClientConfig basicClientConfig1 = new BasicClientConfig();
      SOAPService sOAPService0 = new SOAPService();
      BasicClientConfig basicClientConfig2 = new BasicClientConfig();
      basicClientConfig2.getDeployedServices();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      Integer integer0 = new Integer(1);
      try { 
        recordTypeMessage0.setResponseObject(integer0, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 java.lang.Integer cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.938619582733753
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-4);
      byteArray0[2] = (byte)13;
      byteArrayList1.add(byteArray0);
      byteArrayList1.toString();
      byteArrayList0.addAll(byteArrayList1);
      byteArrayList0.toString();
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("", (XBUSSystem) null, "IM=V%1TSF*nd");
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseText("IM=V%1TSF*nd", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      byte[] byteArray0 = new byte[4];
      ByteArrayList byteArrayList0 = ByteArrayList.createByteArrayList(byteArray0, (byte)0);
      byteArrayList0.add(byteArray0);
      byteArrayList0.toString();
      SchemaVersion1999 schemaVersion1999_0 = (SchemaVersion1999)SchemaVersion.SCHEMA_1999;
      Detail detail0 = new Detail();
      SOAP12Constants sOAP12Constants0 = new SOAP12Constants();
      org.apache.axis.message.MimeHeaders mimeHeaders0 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders1 = new org.apache.axis.message.MimeHeaders(mimeHeaders0);
      mimeHeaders0.addHeader("-]oZs38[", "soap12.webmethod");
      recordTypeMessage0.getResponseObject();
      org.apache.axis.message.MimeHeaders mimeHeaders2 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders3 = new org.apache.axis.message.MimeHeaders(mimeHeaders1);
      org.apache.axis.message.MimeHeaders mimeHeaders4 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders5 = new org.apache.axis.message.MimeHeaders(mimeHeaders0);
      org.apache.axis.message.MimeHeaders mimeHeaders6 = new org.apache.axis.message.MimeHeaders();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      org.apache.axis.message.MimeHeaders mimeHeaders7 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders8 = new org.apache.axis.message.MimeHeaders(mimeHeaders5);
      org.apache.axis.message.MimeHeaders mimeHeaders9 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders10 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders11 = new org.apache.axis.message.MimeHeaders(mimeHeaders3);
      mimeHeaders11.removeAllHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders12 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders13 = new org.apache.axis.message.MimeHeaders();
      mimeHeaders13.removeAllHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders14 = new org.apache.axis.message.MimeHeaders(mimeHeaders7);
      org.apache.axis.message.MimeHeaders mimeHeaders15 = new org.apache.axis.message.MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders16 = new org.apache.axis.message.MimeHeaders();
      assertFalse(mimeHeaders16.equals((Object)mimeHeaders6));
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getResponseObject();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = null;
      int int0 = (-1297);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedInputStream pipedInputStream2 = null;
      try {
        pipedInputStream2 = new PipedInputStream((PipedOutputStream) null, (-1297));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getRequestObject((XBUSSystem) null);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = null;
      int int0 = (-1304);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedInputStream pipedInputStream2 = null;
      try {
        pipedInputStream2 = new PipedInputStream((PipedOutputStream) null, (-1304));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }
}
