/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 03:15:12 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.4618309798807103
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.identifier();
      xPathLexer0.equals();
      xPathLexer0.not();
      xPathLexer0.mod();
      xPathLexer0.identifier();
      xPathLexer0.div();
      xPathLexer0.slashes();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.pipe();
      xPathLexer0.consume((-1760));
      xPathLexer0.endPosition();
      xPathLexer0.not();
      xPathLexer0.colon();
      xPathLexer0.currentPosition();
      xPathLexer0.star();
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.1347961933225443
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l!q)-9\"C!Xd");
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.whitespace();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (-2) ()", string0);
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.minus();
      Token token2 = xPathLexer0.star();
      token2.toString();
      String string1 = token1.toString();
      assertEquals("[ (6) (q)", string1);
      
      Token token3 = xPathLexer0.dots();
      String string2 = token3.toString();
      assertEquals("[ (13) (-)", string2);
      
      Token token4 = xPathLexer0.star();
      String string3 = token4.toString();
      assertEquals("[ (20) (9)", string3);
      
      xPathLexer0.setPreviousToken(token1);
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      assertEquals("\"", token5.getTokenText());
      
      xPathLexer0.number();
      Token token6 = xPathLexer0.pipe();
      assertEquals("C", token6.getTokenText());
      
      Token token7 = xPathLexer0.equals();
      assertEquals(21, token7.getTokenType());
      assertEquals("!", token7.getTokenText());
      
      xPathLexer0.and();
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
      assertEquals("X", token8.getTokenText());
      
      Token token9 = xPathLexer0.number();
      assertEquals(30, token9.getTokenType());
      assertEquals("", token9.getTokenText());
      
      Token token10 = xPathLexer0.comma();
      assertEquals("d", token10.getTokenText());
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token11.getTokenType());
      
      xPathLexer0.star();
      Token token12 = xPathLexer0.notEquals();
      assertEquals(22, token12.getTokenType());
      
      Token token13 = xPathLexer0.nextToken();
      assertEquals((-1), token13.getTokenType());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.191344353177447
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.or();
      xPathLexer0.whitespace();
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume((-3883));
      xPathLexer0.equals();
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.164128769953755
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("be {,F^");
      xPathLexer0.whitespace();
      xPathLexer0.number();
      xPathLexer0.rightBracket();
      xPathLexer0.div();
      xPathLexer0.dots();
      xPathLexer0.mod();
      xPathLexer0.star();
      xPathLexer0.comma();
      xPathLexer0.identifier();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.colon();
      xPathLexer0.star();
      xPathLexer0.whitespace();
      xPathLexer0.slashes();
      xPathLexer0.dollar();
      xPathLexer0.or();
      xPathLexer0.dollar();
      Token token0 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.doubleColon();
      xPathLexer0.endPosition();
      xPathLexer0.relationalOperator();
      xPathLexer0.dots();
      xPathLexer0.leftBracket();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.rightParen();
      xPathLexer0.mod();
      xPathLexer0.colon();
      xPathLexer0.pipe();
      xPathLexer0.minus();
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7981623574298768
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l!q)-9\"C!Xd");
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.whitespace();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.operatorName();
      xPathLexer0.minus();
      token0.toString();
      token0.toString();
      xPathLexer0.dots();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.at();
      xPathLexer0.number();
      xPathLexer0.pipe();
      xPathLexer0.equals();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.not();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.701613551324523
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5qfB*N<9{ZbP':w9/");
      xPathLexer0.or();
      Token token0 = xPathLexer0.identifier();
      Token token1 = xPathLexer0.at();
      String string0 = token1.toString();
      assertEquals("[ (16) (*)", string0);
      
      String string1 = token0.toString();
      assertEquals("[ (15) (5qfB)", string1);
      
      Token token2 = xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.star();
      assertEquals("9", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (15) (5)");
      xPathLexer1.doubleColon();
      xPathLexer0.setPreviousToken(token2);
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("{", token4.getTokenText());
      
      xPathLexer0.dots();
      XPathLexer xPathLexer2 = new XPathLexer("d`ZY");
      Token token5 = xPathLexer2.nextToken();
      assertEquals("d", token5.getTokenText());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("[ (15) (5)");
      Token token6 = xPathLexer1.dots();
      assertEquals(13, token6.getTokenType());
      assertEquals("(", token6.getTokenText());
      
      Token token7 = xPathLexer1.doubleColon();
      assertEquals(19, token7.getTokenType());
      assertEquals("15", token7.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token8 = xPathLexer4.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer2.pipe();
      assertEquals(17, token9.getTokenType());
      assertEquals("`", token9.getTokenText());
      
      Token token10 = xPathLexer0.notEquals();
      assertEquals("bP", token10.getTokenText());
      assertEquals(22, token10.getTokenType());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.438554418617578
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.notEquals();
      xPathLexer1.leftBracket();
      xPathLexer1.equals();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer1.at();
      xPathLexer0.number();
      xPathLexer1.pipe();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.162523693994194
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l!q)-9\"C!Xd");
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.whitespace();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.operatorName();
      xPathLexer0.minus();
      token0.toString();
      token0.toString();
      xPathLexer0.dots();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.at();
      xPathLexer0.number();
      xPathLexer0.pipe();
      xPathLexer0.equals();
      xPathLexer0.and();
      xPathLexer0.dollar();
      Token token1 = xPathLexer0.number();
      xPathLexer0.comma();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.star();
      xPathLexer0.notEquals();
      Token token2 = xPathLexer0.nextToken();
      assertFalse(token2.equals((Object)token1));
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7796382027229964
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("OREe8");
      XPathLexer xPathLexer1 = new XPathLexer("OREe8");
      xPathLexer0.rightParen();
      XPathLexer xPathLexer2 = new XPathLexer("qDwc7+veh^B,<");
      xPathLexer0.div();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer2.doubleColon();
      xPathLexer3.operatorName();
      XPathLexer xPathLexer4 = new XPathLexer("OREe8");
      xPathLexer2.nextToken();
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.or();
      xPathLexer0.nextToken();
      xPathLexer1.nextToken();
      xPathLexer2.slashes();
      xPathLexer1.slashes();
      xPathLexer1.nextToken();
      xPathLexer0.nextToken();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer3.not();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token0 = xPathLexer3.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.031756325105033
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.rightParen();
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.div();
      XPathLexer xPathLexer2 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("2q", token1.getTokenText());
      
      xPathLexer1.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer("$l%%N.Yl m=%klM>k");
      Token token2 = xPathLexer3.nextToken();
      assertEquals("$", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals("f", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.or();
      xPathLexer0.nextToken();
      xPathLexer1.nextToken();
      Token token4 = xPathLexer4.minus();
      assertEquals(6, token4.getTokenType());
      
      xPathLexer0.slashes();
      xPathLexer4.slashes();
      Token token5 = xPathLexer4.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer3.nextToken();
      assertEquals(15, token6.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      assertEquals("N", token7.getTokenText());
      
      Token token8 = xPathLexer3.at();
      assertEquals(16, token8.getTokenType());
      assertEquals("%", token8.getTokenText());
      
      Token token9 = xPathLexer3.plus();
      assertEquals(5, token9.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.8919362599791498
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V>V");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("V>", token0.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("U+T");
      xPathLexer1.plus();
      XPathLexer xPathLexer3 = new XPathLexer("U+T");
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token1 = xPathLexer4.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      xPathLexer4.operatorName();
      XPathLexer xPathLexer5 = new XPathLexer("$l%%N.Yl m=%klM>k");
      xPathLexer1.nextToken();
      Token token2 = xPathLexer5.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("$", token2.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer0.or();
      Token token3 = xPathLexer6.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer3.nextToken();
      assertEquals("U", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = new XPathLexer("");
      Token token5 = xPathLexer8.slashes();
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer4.plus();
      assertEquals(5, token6.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token7 = xPathLexer9.star();
      assertEquals(20, token7.getTokenType());
      
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token8 = xPathLexer3.dots();
      assertEquals("+", token8.getTokenText());
      
      XPathLexer xPathLexer11 = new XPathLexer("");
      xPathLexer1.identifier();
      xPathLexer8.dots();
      Token token9 = xPathLexer7.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer9.dots();
      assertEquals(13, token10.getTokenType());
      
      Token token11 = xPathLexer3.dollar();
      assertEquals(26, token11.getTokenType());
      assertEquals("T", token11.getTokenText());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7933541529902213
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6>BJubQPSLdW1pz*");
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer("-x$\"-0{>GGS0\"uWS");
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer1.equals();
      xPathLexer0.slashes();
      xPathLexer1.nextToken();
      xPathLexer0.nextToken();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.not();
      xPathLexer2.relationalOperator();
      xPathLexer1.plus();
      Token token0 = xPathLexer2.at();
      xPathLexer1.doubleColon();
      xPathLexer0.rightBracket();
      xPathLexer0.mod();
      Token token1 = xPathLexer2.comma();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5470933197654226
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      XPathLexer xPathLexer1 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token0 = xPathLexer2.rightParen();
      assertEquals(2, token0.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.div();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer3.doubleColon();
      xPathLexer3.operatorName();
      XPathLexer xPathLexer5 = new XPathLexer("$l%%N.Yl m=%klM>k");
      xPathLexer5.relationalOperator();
      Token token1 = xPathLexer5.nextToken();
      assertEquals("$", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      xPathLexer3.leftBracket();
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token2 = xPathLexer6.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer2.not();
      assertEquals(23, token3.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("-[rQj:[>GIhG(T>#H3q");
      Token token4 = xPathLexer7.leftBracket();
      assertEquals("-", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals("2", token5.getTokenText());
      
      Token token6 = xPathLexer6.at();
      assertEquals(16, token6.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token7 = xPathLexer8.doubleColon();
      assertEquals("2q", token7.getTokenText());
      assertEquals(19, token7.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.4768899235216244
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5qfB*N<9{ZbP':w9/");
      xPathLexer0.or();
      Token token0 = xPathLexer0.identifier();
      assertEquals("5qfB", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      Token token2 = xPathLexer0.notEquals();
      assertEquals("N<", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      String string0 = token1.toString();
      assertEquals("[ (16) (*)", string0);
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals("9", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("!%.#ou@vMX");
      xPathLexer1.relationalOperator();
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      assertEquals("{", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      Token token5 = xPathLexer2.not();
      assertEquals(23, token5.getTokenType());
      assertEquals(")", token5.getTokenText());
      
      Token token6 = xPathLexer1.plus();
      assertEquals(5, token6.getTokenType());
      assertEquals("!", token6.getTokenText());
      
      Token token7 = xPathLexer1.dots();
      assertEquals("%.", token7.getTokenText());
      assertEquals(14, token7.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer1.dollar();
      assertEquals("#", token8.getTokenText());
      
      Token token9 = xPathLexer0.slashes();
      assertEquals("Z", token9.getTokenText());
      assertEquals(11, token9.getTokenType());
      
      xPathLexer1.at();
      Token token10 = xPathLexer1.doubleColon();
      assertEquals(19, token10.getTokenType());
      assertEquals("u@", token10.getTokenText());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.9692937143543787
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.div();
      xPathLexer0.dollar();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.doubleColon();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.leftBracket();
      xPathLexer1.or();
      xPathLexer0.nextToken();
      xPathLexer1.nextToken();
      xPathLexer2.slashes();
      xPathLexer1.plus();
      xPathLexer1.star();
      xPathLexer2.dots();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.relationalOperator();
      xPathLexer3.leftParen();
      xPathLexer1.not();
      xPathLexer1.at();
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer3.div();
      assertNull(token0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5451945792082955
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("l!q)-9\"C!Xd");
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer1.leftBracket();
      assertEquals("l", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      xPathLexer1.operatorName();
      Token token3 = xPathLexer1.rightBracket();
      assertEquals("!", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      xPathLexer1.minus();
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals(")", token6.getTokenText());
      assertEquals(2, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals("-", token7.getTokenText());
      assertEquals(6, token7.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.not();
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token9 = xPathLexer1.pipe();
      assertEquals("9", token9.getTokenText());
      assertEquals(17, token9.getTokenType());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.0491645551250395
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qDwc7+ve^B,<");
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.star();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.doubleColon();
      xPathLexer2.dots();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer4 = null;
      try {
        xPathLexer4 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.6589673579397586
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5qfB*N<9{ZbP':w9/");
      xPathLexer0.notEquals();
      xPathLexer0.or();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.at();
      xPathLexer0.notEquals();
      token0.toString();
      xPathLexer0.leftBracket();
      xPathLexer0.consume((-600));
      XPathLexer xPathLexer1 = new XPathLexer("!%.#ou@vMX");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.slashes();
      xPathLexer0.rightParen();
      xPathLexer1.nextToken();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.pipe();
      xPathLexer0.pipe();
      xPathLexer2.leftParen();
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.6719007612948003
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("=s+");
      Token token0 = xPathLexer1.identifier();
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      Token token1 = xPathLexer1.nextToken();
      assertEquals(21, token1.getTokenType());
      assertEquals("=", token1.getTokenText());
      
      xPathLexer1.slashes();
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals("(", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("#.x&9S63kO2");
      Token token4 = xPathLexer2.leftBracket();
      assertEquals(3, token4.getTokenType());
      assertEquals("#", token4.getTokenText());
      
      Token token5 = xPathLexer1.slashes();
      assertEquals("+", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer2.at();
      assertEquals(16, token6.getTokenType());
      assertEquals(".", token6.getTokenText());
      
      Token token7 = xPathLexer2.plus();
      assertEquals("x", token7.getTokenText());
      assertEquals(5, token7.getTokenType());
      
      Token token8 = xPathLexer2.nextToken();
      assertEquals("&9S63kO2", token8.getTokenText());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.478037216550732
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.star();
      assertEquals("2", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer(":aU;'d]c");
      Token token1 = xPathLexer0.slashes();
      assertEquals("q", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token2 = xPathLexer3.rightParen();
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer2.nextToken();
      assertEquals(18, token3.getTokenType());
      assertEquals(":", token3.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("F-}S7N");
      Token token4 = xPathLexer1.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("[", token4.getTokenText());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals(1, token5.getTokenType());
      assertEquals("(", token5.getTokenText());
      
      Token token6 = xPathLexer5.comma();
      assertEquals("F", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5256539084028926
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qDwc7+ve^B,<");
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("qDwc7+ve^B,<");
      xPathLexer0.equals();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer2.nextToken();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.star();
      xPathLexer1.not();
      Token token0 = xPathLexer3.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.8760024645494642
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hM^iIuMb");
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.div();
      xPathLexer0.dollar();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("hM^iIuMb");
      xPathLexer0.colon();
      token0.toString();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      xPathLexer1.nextToken();
      xPathLexer1.nextToken();
      xPathLexer2.slashes();
      xPathLexer0.star();
      xPathLexer1.doubleColon();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.dots();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.not();
      xPathLexer3.rightBracket();
      xPathLexer4.rightParen();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.6132355355581343
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      XPathLexer xPathLexer2 = new XPathLexer("I>n`Bt#");
      Token token1 = xPathLexer2.nextToken();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer1.equals();
      assertEquals("2", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer1.slashes();
      assertEquals("q", token3.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("EP8o|'");
      Token token4 = xPathLexer0.leftBracket();
      assertEquals("q", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      xPathLexer1.setPreviousToken(token0);
      assertEquals("2", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      xPathLexer3.nextToken();
      xPathLexer2.pipe();
      Token token5 = xPathLexer3.nextToken();
      assertEquals("|", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer1.not();
      assertEquals(23, token6.getTokenType());
      assertEquals("f", token6.getTokenText());
      
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      assertEquals("f", token7.getTokenText());
      
      Token token8 = xPathLexer3.leftParen();
      assertEquals("'", token8.getTokenText());
      assertEquals(1, token8.getTokenType());
      
      Token token9 = xPathLexer3.slashes();
      assertEquals(11, token9.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("EP8o|'");
      Token token10 = xPathLexer4.at();
      assertEquals("E", token10.getTokenText());
      assertEquals(16, token10.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.9350581380677399
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hM^iIuMb");
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("HVQ)pJ~lw;ik");
      xPathLexer0.identifier();
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer1.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals(")", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer1.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals("J~lw;ik", token4.getTokenText());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("HVQ)pJ~lw;ik");
      Token token5 = xPathLexer2.rightParen();
      assertEquals("H", token5.getTokenText());
      assertEquals(2, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("HVQ)pJ~lw;ik");
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token6 = xPathLexer4.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      xPathLexer4.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token7 = xPathLexer4.not();
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer4.dots();
      assertEquals(13, token8.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.7712856384601157
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l!q)-9\"C!Xd");
      Token token0 = xPathLexer0.dollar();
      assertEquals("l", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.slashes();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("q)", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("-", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("9", token3.getTokenText());
      
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("l!q)-9\"C!Xd");
      Token token4 = xPathLexer1.at();
      assertEquals("l", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer2.nextToken();
      assertEquals("com.werken.saxpath.XPathLexer", token6.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("USXt25y~TehMcX'R-k");
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token7 = xPathLexer4.not();
      assertEquals(23, token7.getTokenType());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token8 = xPathLexer5.whitespace();
      assertEquals((-2), token8.getTokenType());
      
      Token token9 = xPathLexer5.plus();
      assertEquals(5, token9.getTokenType());
      
      Token token10 = xPathLexer1.slashes();
      assertEquals("!", token10.getTokenText());
      assertEquals(11, token10.getTokenType());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.341512030608877
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5qfB*N<9{ZbP':w9/");
      xPathLexer0.notEquals();
      xPathLexer0.or();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.at();
      xPathLexer0.notEquals();
      token0.toString();
      xPathLexer0.leftBracket();
      xPathLexer0.consume((-600));
      XPathLexer xPathLexer1 = new XPathLexer("!%.#ou@vMX");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.slashes();
      xPathLexer0.rightParen();
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.1165027695922842
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.whitespace();
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume((-3883));
      xPathLexer0.equals();
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.6616198935849062
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3Piq<hm,i-");
      Token token0 = xPathLexer0.dollar();
      assertEquals("3", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("3Piq<hm,i-");
      Token token1 = xPathLexer1.notEquals();
      assertEquals("3P", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("P", token2.getTokenText());
      
      Token token3 = xPathLexer0.equals();
      assertEquals("i", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer1.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("i", token4.getTokenText());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals(7, token6.getTokenType());
      assertEquals("<", token6.getTokenText());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      assertEquals("q", token7.getTokenText());
      
      xPathLexer1.relationalOperator();
      Token token8 = xPathLexer0.plus();
      assertEquals(5, token8.getTokenType());
      assertEquals("<", token8.getTokenText());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.2276029093593737
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5qfB*N<9{ZbP':w9/");
      xPathLexer0.notEquals();
      xPathLexer0.or();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.at();
      xPathLexer0.notEquals();
      token0.toString();
      xPathLexer0.leftBracket();
      xPathLexer0.consume((-600));
      XPathLexer xPathLexer1 = new XPathLexer("!%.#ou@vMX");
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.8866055083855675
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6(?B0T|z");
      Token token0 = xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("6(?B0T|z");
      Token token1 = xPathLexer1.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("6", token1.getTokenText());
      
      xPathLexer0.div();
      XPathLexer xPathLexer2 = new XPathLexer("6(?B0T|z");
      Token token2 = xPathLexer1.colon();
      String string0 = token2.toString();
      assertEquals("[ (18) (()", string0);
      
      Token token3 = xPathLexer2.leftBracket();
      assertEquals("6", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      String string1 = token0.toString();
      assertEquals("[ (17) (6)", string1);
      
      xPathLexer0.setPreviousToken(token2);
      Token token4 = xPathLexer1.nextToken();
      assertEquals("?B0T|z", token4.getTokenText());
      
      xPathLexer2.pipe();
      Token token5 = xPathLexer0.nextToken();
      assertEquals("(", token5.getTokenText());
      
      Token token6 = xPathLexer1.dots();
      assertEquals(13, token6.getTokenType());
      assertEquals("?", token6.getTokenText());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token7 = xPathLexer0.at();
      assertEquals("?", token7.getTokenText());
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals("B0T", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer3.doubleColon();
      assertEquals(19, token9.getTokenType());
      assertEquals("co", token9.getTokenText());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.3023911183014363
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|PT");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("|", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("PT", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.22663891292892
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("co", token0.getTokenText());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer1.colon();
      assertEquals("c", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer2.notEquals();
      assertEquals("co", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer1.leftBracket();
      assertEquals("o", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      xPathLexer1.operatorName();
      xPathLexer2.not();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("v6cLco");
      Token token4 = xPathLexer1.dots();
      assertEquals(14, token4.getTokenType());
      assertEquals("m.", token4.getTokenText());
      
      Token token5 = xPathLexer1.not();
      assertEquals("w", token5.getTokenText());
      assertEquals(23, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer(")");
      Token token6 = xPathLexer4.slashes();
      assertEquals(")", token6.getTokenText());
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      assertEquals("m", token7.getTokenText());
      
      Token token8 = xPathLexer4.doubleColon();
      assertEquals(19, token8.getTokenType());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.958896084997511
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qDwc7+ve^B,<");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("qD", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals("w", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("qDwc7+ve^B,<");
      Token token4 = xPathLexer0.star();
      assertEquals("e", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer1.doubleColon();
      assertEquals("qD", token5.getTokenText());
      assertEquals(19, token5.getTokenType());
      
      xPathLexer1.setPreviousToken(token2);
      Token token6 = xPathLexer0.slashes();
      assertEquals("^", token6.getTokenText());
      assertEquals(11, token6.getTokenType());
      
      xPathLexer0.dots();
      Token token7 = xPathLexer1.nextToken();
      assertEquals("wc7+ve^B,<", token7.getTokenText());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("qDwc7+ve^B,<");
      Token token8 = xPathLexer2.dots();
      assertEquals("q", token8.getTokenText());
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer2.not();
      assertEquals("D", token9.getTokenText());
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer0.rightBracket();
      assertEquals(",", token10.getTokenText());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.834020905590099
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X'bkq/}<(");
      xPathLexer0.dots();
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("/", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("}", token2.getTokenText());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("<", token3.getTokenText());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals("(", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer("X'bkq/}<(");
      Token token5 = xPathLexer1.leftBracket();
      assertEquals("X", token5.getTokenText());
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer0.rightParen();
      assertEquals(2, token8.getTokenType());
      
      Token token9 = xPathLexer1.dots();
      assertEquals(13, token9.getTokenType());
      assertEquals("'", token9.getTokenText());
      
      xPathLexer0.not();
      Token token10 = xPathLexer1.rightBracket();
      assertEquals("b", token10.getTokenText());
      assertEquals(4, token10.getTokenType());
      
      Token token11 = xPathLexer0.not();
      assertEquals(23, token11.getTokenType());
      
      Token token12 = xPathLexer1.doubleColon();
      assertEquals(19, token12.getTokenType());
      assertEquals("kq", token12.getTokenText());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5741004656516362
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      XPathLexer xPathLexer2 = new XPathLexer("I>n`Bt#");
      xPathLexer1.star();
      Token token0 = xPathLexer1.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("q", token0.getTokenText());
      
      Token token1 = xPathLexer1.slashes();
      assertEquals("f", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer2.doubleColon();
      assertEquals("I>", token2.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token3 = xPathLexer3.star();
      assertEquals("2", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer1.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      xPathLexer3.dots();
      xPathLexer3.nextToken();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token5 = xPathLexer1.at();
      assertEquals(16, token5.getTokenType());
      assertEquals("N", token5.getTokenText());
      
      Token token6 = xPathLexer2.nextToken();
      assertEquals("n", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      assertEquals("q", token7.getTokenText());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.9888677974160751
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X'bkq/}<(");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("'b", token1.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      xPathLexer0.slashes();
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("q", token2.getTokenText());
      
      xPathLexer0.at();
      Token token3 = xPathLexer0.dollar();
      assertEquals("}", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("k@n29APS##V]#?s");
      Token token4 = xPathLexer1.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("k", token4.getTokenText());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer1.slashes();
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      
      xPathLexer1.nextToken();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("X'bkq/}<(");
      Token token8 = xPathLexer2.at();
      assertEquals("X", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer1.nextToken();
      assertEquals("n29APS", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.807378819562917
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("c", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer("j`AYG");
      Token token1 = xPathLexer1.colon();
      assertEquals("c", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      xPathLexer1.nextToken();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("m.werken.saxpath.Token", token3.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("JT#GDxdX+YJ^$$");
      Token token4 = xPathLexer2.nextToken();
      assertEquals("j", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("fc;IEdH@`-^FJG");
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer4.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer1.slashes();
      assertEquals(11, token7.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer(") (");
      Token token8 = xPathLexer6.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer3.doubleColon();
      assertEquals(19, token9.getTokenType());
      assertEquals("JT", token9.getTokenText());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.8959913704417235
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5qfB*N<9{ZbP':w9/");
      xPathLexer0.notEquals();
      xPathLexer0.or();
      xPathLexer0.identifier();
      xPathLexer0.at();
      Token token0 = xPathLexer0.notEquals();
      assertEquals("N<", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer0.equals();
      assertEquals("9", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("{", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      xPathLexer1.identifier();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer3 = new XPathLexer("/Kc5N7OT8%=R&nGe");
      Token token3 = xPathLexer2.star();
      assertEquals(")", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("P", token4.getTokenText());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      assertEquals("':", token5.getTokenText());
      
      Token token6 = xPathLexer1.slashes();
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer3.rightParen();
      assertEquals(2, token7.getTokenType());
      assertEquals("/", token7.getTokenText());
      
      Token token8 = xPathLexer3.nextToken();
      assertEquals(15, token8.getTokenType());
      assertEquals("Kc5N7OT8", token8.getTokenText());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer("");
      XPathLexer xPathLexer5 = new XPathLexer("(k,0Bz*eWUu* .e");
      Token token9 = xPathLexer5.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer2.nextToken();
      assertEquals(1, token10.getTokenType());
      assertEquals("(", token10.getTokenText());
      
      xPathLexer1.pipe();
      XPathLexer xPathLexer6 = new XPathLexer("(k,0Bz*eWUu* .e");
      Token token11 = xPathLexer6.pipe();
      assertEquals(17, token11.getTokenType());
      assertEquals("(", token11.getTokenText());
      
      Token token12 = xPathLexer1.equals();
      assertEquals(21, token12.getTokenType());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.770753089814994
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("[ ", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer2.comma();
      assertEquals(32, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("YKKrav1)NK4DqD`>S");
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("(", token2.getTokenText());
      
      xPathLexer1.or();
      Token token3 = xPathLexer2.notEquals();
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals("[", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer1.slashes();
      assertEquals(" ", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer2.rightParen();
      assertEquals(2, token6.getTokenType());
      
      Token token7 = xPathLexer3.nextToken();
      assertEquals(15, token7.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token8 = xPathLexer5.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer2.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      Token token10 = xPathLexer4.identifier();
      assertEquals("com.werken.saxpath.XPathLexer", token10.getTokenText());
      
      Token token11 = xPathLexer5.doubleColon();
      assertEquals(19, token11.getTokenType());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.0097469842536673
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qDwc7+ve^B,<");
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.colon();
      assertEquals("w", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("c", token1.getTokenText());
      
      Token token2 = xPathLexer0.equals();
      Token token3 = xPathLexer0.slashes();
      assertEquals("+", token3.getTokenText());
      
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer("qDwc7+ve^B,<");
      String string0 = token2.toString();
      assertEquals("[ (21) (7)", string0);
      
      Token token4 = xPathLexer0.at();
      assertEquals("^", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer2.star();
      assertEquals(20, token5.getTokenType());
      
      xPathLexer1.doubleColon();
      xPathLexer1.setPreviousToken(token2);
      Token token6 = xPathLexer2.slashes();
      assertEquals(11, token6.getTokenType());
      
      xPathLexer0.dots();
      Token token7 = xPathLexer1.nextToken();
      assertEquals("wc7", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("qDwc7+ve^B,<");
      Token token8 = xPathLexer3.dots();
      assertEquals("q", token8.getTokenText());
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer3.doubleColon();
      assertEquals("Dw", token9.getTokenText());
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer2.not();
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer3.pipe();
      assertEquals(17, token11.getTokenType());
      assertEquals("c", token11.getTokenText());
      
      Token token12 = xPathLexer1.notEquals();
      assertEquals("+v", token12.getTokenText());
      assertEquals(22, token12.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.4121807617693114
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.comma();
      xPathLexer0.dollar();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer1.whitespace();
      xPathLexer1.or();
      xPathLexer2.star();
      xPathLexer2.doubleColon();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.dots();
      xPathLexer1.not();
      xPathLexer4.slashes();
      xPathLexer2.at();
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer2.plus();
      xPathLexer4.equals();
      xPathLexer4.at();
      Token token1 = xPathLexer1.dots();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.7033657139025193
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qDwc7+ve^B,<");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("qD", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("w", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("c", token2.getTokenText());
      
      xPathLexer0.equals();
      xPathLexer0.slashes();
      xPathLexer0.identifier();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("^B", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("qDwc7+ve^B,<");
      XPathLexer xPathLexer2 = new XPathLexer("5Y=G*3t=hEenIP");
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals(",", token4.getTokenText());
      
      xPathLexer2.identifier();
      Token token5 = xPathLexer1.nextToken();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("<", token6.getTokenText());
      assertEquals(7, token6.getTokenType());
      
      Token token7 = xPathLexer2.nextToken();
      assertEquals("=", token7.getTokenText());
      assertEquals(21, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer3.dots();
      assertEquals(13, token9.getTokenType());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.8551889965139927
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token1 = xPathLexer0.notEquals();
      assertEquals("om", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer1.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer1.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer1.slashes();
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(13, token5.getTokenType());
      assertEquals(".", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertNotSame(token6, token5);
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token7 = xPathLexer2.not();
      assertEquals(23, token7.getTokenType());
      
      xPathLexer1.relationalOperator();
      xPathLexer2.plus();
      Token token8 = xPathLexer2.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer1.plus();
      assertEquals(5, token9.getTokenType());
      
      Token token10 = xPathLexer2.doubleColon();
      assertEquals(19, token10.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.9998959665651983
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hM^iIuMb");
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.div();
      Token token1 = xPathLexer0.dollar();
      assertEquals("M", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("hM^iIuMb");
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("^", token2.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (2) (h)", string0);
      
      Token token3 = xPathLexer1.leftBracket();
      String string1 = token3.toString();
      assertEquals("[ (3) (h)", string1);
      
      xPathLexer0.setPreviousToken(token3);
      Token token4 = xPathLexer1.nextToken();
      assertEquals("M", token4.getTokenText());
      
      Token token5 = xPathLexer1.pipe();
      assertEquals(17, token5.getTokenType());
      assertEquals("^", token5.getTokenText());
      
      xPathLexer1.nextToken();
      Token token6 = xPathLexer1.dots();
      assertEquals(13, token6.getTokenType());
      assertEquals("i", token6.getTokenText());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("[ (2) (h)");
      Token token7 = xPathLexer2.at();
      assertEquals("[", token7.getTokenText());
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals("iIuMb", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer2.doubleColon();
      assertEquals(" (", token9.getTokenText());
      assertEquals(19, token9.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.0471083343099443
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6(?B0T|z");
      Token token0 = xPathLexer0.dollar();
      assertEquals("6", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("6(?B0T|z");
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.pipe();
      Token token2 = xPathLexer1.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("6", token2.getTokenText());
      
      xPathLexer1.operatorName();
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("0", token3.getTokenText());
      
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      
      xPathLexer1.pipe();
      Token token5 = xPathLexer1.slashes();
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(17, token6.getTokenType());
      assertEquals("|", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("z", token7.getTokenText());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token9 = xPathLexer2.dots();
      assertEquals(13, token9.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.562037553241585
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("[ ", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("=LRc");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token2 = xPathLexer1.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("=", token2.getTokenText());
      
      xPathLexer3.or();
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("LRc", token4.getTokenText());
      
      xPathLexer1.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token5 = xPathLexer2.not();
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer4.dots();
      assertEquals(13, token6.getTokenType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.2449208855544063
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V>V");
      xPathLexer0.relationalOperator();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.at();
      xPathLexer0.notEquals();
      token0.toString();
      xPathLexer0.leftBracket();
      xPathLexer0.consume((-600));
      XPathLexer xPathLexer1 = new XPathLexer("V>V");
      XPathLexer xPathLexer2 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.8353690124154791
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("5q", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer0.plus();
      assertEquals("*", token2.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer3.equals();
      assertEquals(21, token3.getTokenType());
      
      xPathLexer3.slashes();
      xPathLexer2.identifier();
      xPathLexer2.doubleColon();
      XPathLexer xPathLexer4 = new XPathLexer("!8\"f34;t/");
      Token token4 = xPathLexer4.star();
      assertEquals("!", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer2.dots();
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer3.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      xPathLexer1.slashes();
      Token token7 = xPathLexer1.rightParen();
      assertEquals(2, token7.getTokenType());
      
      Token token8 = xPathLexer2.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("_fFDUgzlkGv;^,|U0;,");
      Token token9 = xPathLexer0.at();
      assertEquals("N", token9.getTokenText());
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer5.nextToken();
      assertEquals(15, token10.getTokenType());
      assertEquals("_fFDUgzlkGv", token10.getTokenText());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.82086103626992
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yB[K!JRK*,#d8>");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("yB", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("[", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("K!JRK*,#d8>", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("yB[K!JRK*,#d8>");
      xPathLexer1.at();
      Token token3 = xPathLexer1.not();
      assertEquals("B", token3.getTokenText());
      
      Token token4 = xPathLexer1.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("[", token4.getTokenText());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer2.not();
      assertEquals(23, token5.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.1118942681930224
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer0.notEquals();
      xPathLexer0.leftParen();
      xPathLexer0.dollar();
      xPathLexer0.rightParen();
      xPathLexer0.rightParen();
      xPathLexer0.whitespace();
      xPathLexer0.colon();
      xPathLexer0.whitespace();
      xPathLexer0.pipe();
      xPathLexer0.identifier();
      xPathLexer0.operatorName();
      xPathLexer0.setXPath(":FuPr&Y0\"Iy");
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.slashes();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.nextToken();
      xPathLexer1.relationalOperator();
      xPathLexer0.slashes();
      xPathLexer1.at();
      xPathLexer0.plus();
      Token token0 = xPathLexer1.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.25206926012034
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X'bkq/}<(");
      Token token0 = xPathLexer0.dots();
      assertEquals("X", token0.getTokenText());
      
      xPathLexer0.slashes();
      xPathLexer0.or();
      Token token1 = xPathLexer0.notEquals();
      assertEquals("bk", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(12, token2.getTokenType());
      assertEquals("q/", token2.getTokenText());
      
      xPathLexer0.leftParen();
      Token token3 = xPathLexer0.leftParen();
      assertEquals("<", token3.getTokenText());
      
      xPathLexer0.at();
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifier();
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("(JN-");
      Token token6 = xPathLexer2.not();
      assertEquals("(", token6.getTokenText());
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer2.dots();
      assertEquals(13, token7.getTokenType());
      
      Token token8 = xPathLexer1.leftParen();
      assertEquals(1, token8.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.Token");
      Token token9 = xPathLexer3.slashes();
      assertEquals("c", token9.getTokenText());
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer3.at();
      assertEquals(16, token10.getTokenType());
      assertEquals("o", token10.getTokenText());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.8209581401467922
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("HVQ)pJ~lw;k");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("HVQ", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals(")", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("pJ~lw;k", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("HVQ)pJ~lw;k");
      Token token3 = xPathLexer1.not();
      assertEquals("H", token3.getTokenText());
      
      Token token4 = xPathLexer1.at();
      assertEquals("V", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer2.not();
      assertEquals(23, token5.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.4335655267365297
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("HVQ)pJ~lw;k");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("HVQ", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals(")", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals("p", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("J", token3.getTokenText());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.9758891862638668
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qDwc7+ve^B,<");
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("qDwc7+ve^B,<");
      xPathLexer1.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer1.equals();
      XPathLexer xPathLexer2 = new XPathLexer("qDwc7+ve^B,<");
      xPathLexer2.slashes();
      xPathLexer2.nextToken();
      xPathLexer0.nextToken();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.not();
      xPathLexer1.relationalOperator();
      xPathLexer2.plus();
      XPathLexer xPathLexer4 = new XPathLexer("qDwc7+ve^B,<");
      xPathLexer4.at();
      xPathLexer4.doubleColon();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.598681264050305
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.star();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.plus();
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer2 = new XPathLexer("6(?B0T|z");
      xPathLexer2.nextToken();
      Token token2 = xPathLexer2.nextToken();
      assertEquals("(", token2.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("hvk2/DA3T4VwC");
      Token token3 = xPathLexer3.doubleColon();
      assertEquals("hv", token3.getTokenText());
      
      Token token4 = xPathLexer3.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("k", token4.getTokenText());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer3.nextToken();
      assertEquals(30, token7.getTokenType());
      assertEquals("2", token7.getTokenText());
      
      Token token8 = xPathLexer3.not();
      assertEquals(23, token8.getTokenType());
      assertEquals("/", token8.getTokenText());
      
      Token token9 = xPathLexer2.plus();
      assertEquals("?", token9.getTokenText());
      assertEquals(5, token9.getTokenType());
      
      Token token10 = xPathLexer1.number();
      assertEquals(30, token10.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.729617385606498
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l!q)-9\"C!Xd");
      Token token0 = xPathLexer0.dollar();
      assertEquals("l", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("*k.h]");
      xPathLexer0.not();
      Token token1 = xPathLexer0.notEquals();
      assertEquals("q)", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("-", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer1.equals();
      assertEquals("*", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer1.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("k", token4.getTokenText());
      
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer("sHGagY9A");
      Token token5 = xPathLexer2.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("sHGagY9A", token5.getTokenText());
      
      Token token6 = xPathLexer2.nextToken();
      assertEquals("", token6.getTokenText());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token7 = xPathLexer3.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      assertEquals("9", token8.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token9 = xPathLexer2.plus();
      assertEquals(5, token9.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.815532624330628
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X'bkq/}<(");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("X", token0.getTokenText());
      
      xPathLexer0.slashes();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      Token token1 = xPathLexer0.notEquals();
      assertEquals("bk", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("q", token2.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.doubleColon();
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer1.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("X'bkq/}<(");
      Token token4 = xPathLexer2.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("X", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("wJO3qod\"^N{]t");
      Token token5 = xPathLexer3.slashes();
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer3.rightParen();
      assertEquals("J", token6.getTokenText());
      assertEquals(2, token6.getTokenType());
      
      Token token7 = xPathLexer3.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("O3qod", token7.getTokenText());
      
      xPathLexer2.relationalOperator();
      Token token8 = xPathLexer0.nextToken();
      assertEquals(7, token8.getTokenType());
      assertEquals("<", token8.getTokenText());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.9781154960425518
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ |(");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("[ ", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals("|", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("l-0}bMN)&y'LOo\"L");
      Token token2 = xPathLexer0.colon();
      assertEquals("(", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("l-0", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token4 = xPathLexer1.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("}", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer3.equals();
      assertEquals(21, token5.getTokenType());
      
      xPathLexer1.slashes();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.identifier();
      xPathLexer2.doubleColon();
      XPathLexer xPathLexer5 = new XPathLexer("[ |(");
      Token token6 = xPathLexer5.star();
      assertEquals("[", token6.getTokenText());
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer1.not();
      assertEquals(23, token7.getTokenType());
      assertEquals("M", token7.getTokenText());
      
      Token token8 = xPathLexer0.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer4.slashes();
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer4.rightParen();
      assertEquals(2, token10.getTokenType());
      
      Token token11 = xPathLexer5.nextToken();
      assertEquals("|", token11.getTokenText());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer("%y/q7!U3");
      Token token12 = xPathLexer5.at();
      assertEquals(16, token12.getTokenType());
      assertEquals("(", token12.getTokenText());
      
      Token token13 = xPathLexer0.pipe();
      assertEquals(17, token13.getTokenType());
      
      Token token14 = xPathLexer6.dollar();
      assertEquals("%", token14.getTokenText());
      assertEquals(26, token14.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.1627928822555713
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5qfB*N<9{ZbP':w9/");
      xPathLexer0.notEquals();
      xPathLexer0.or();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.at();
      xPathLexer0.notEquals();
      token0.toString();
      xPathLexer0.leftBracket();
      xPathLexer0.consume((-600));
      String string0 = "!%.#ou@vMX";
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.6264504262131518
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qDwc7+ve^B,<");
      xPathLexer0.star();
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.identifier();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer2 = new XPathLexer("qDwc7+ve^B,<");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      String string0 = "hvk2/DA3T4VwC";
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer1.not();
      xPathLexer1.dots();
      xPathLexer2.leftParen();
      xPathLexer0.slashes();
      XPathLexer xPathLexer4 = null;
      try {
        xPathLexer4 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.8153463804614067
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("2q", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.identifier();
      assertEquals("fB", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("N", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifier();
      assertEquals(15, token4.getTokenType());
      
      String string0 = token2.toString();
      assertEquals("[ (16) (*)", string0);
      
      char char0 = xPathLexer0.LA(10);
      assertEquals('9', char0);
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(7, token5.getTokenType());
      
      Token token6 = xPathLexer0.whitespace();
      xPathLexer0.setPreviousToken(token6);
      assertEquals("", token6.getTokenText());
      assertEquals((-2), token6.getTokenType());
      
      Token token7 = xPathLexer0.number();
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer0.not();
      assertEquals("{", token8.getTokenText());
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
      assertEquals("Z", token9.getTokenText());
      
      Token token10 = xPathLexer0.pipe();
      assertEquals(17, token10.getTokenType());
      assertEquals("b", token10.getTokenText());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.515517053904182
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.star();
      assertEquals("2", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      XPathLexer xPathLexer2 = new XPathLexer("I>n`Bt#");
      xPathLexer2.nextToken();
      Token token1 = xPathLexer1.equals();
      assertEquals("2", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      xPathLexer1.slashes();
      Token token2 = xPathLexer2.doubleColon();
      assertEquals(">n", token2.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      XPathLexer xPathLexer4 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      xPathLexer1.star();
      Token token3 = xPathLexer2.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      xPathLexer1.slashes();
      XPathLexer xPathLexer5 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token4 = xPathLexer2.star();
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer5.slashes();
      assertEquals("2", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer3.at();
      assertEquals("2", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      assertEquals("*", token8.getTokenText());
      
      Token token9 = xPathLexer2.plus();
      assertEquals(5, token9.getTokenType());
      assertEquals("#", token9.getTokenText());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.9308805932984319
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[8X'bkq/}<(");
      Token token0 = xPathLexer0.dots();
      assertEquals("[", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("8X", token1.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals("'b", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("k", token3.getTokenText());
      
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.equals();
      assertEquals("q", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
      
      xPathLexer0.slashes();
      Token token5 = xPathLexer0.identifier();
      assertEquals(15, token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("[8X'bkq/}<(");
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      assertEquals("(", token7.getTokenText());
      
      Token token8 = xPathLexer1.slashes();
      assertEquals("[", token8.getTokenText());
      assertEquals(11, token8.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token9 = xPathLexer2.rightParen();
      assertEquals(2, token9.getTokenType());
      
      Token token10 = xPathLexer0.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token11 = xPathLexer1.nextToken();
      assertEquals(30, token11.getTokenType());
      assertEquals("8", token11.getTokenText());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.6349332211485885
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X'bkq/}<(");
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token0 = xPathLexer1.pipe();
      assertEquals(17, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer1.comma();
      assertEquals(32, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("X'bkq/}<(");
      xPathLexer2.colon();
      xPathLexer1.or();
      Token token2 = xPathLexer2.notEquals();
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer3.nextToken();
      assertEquals("X", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token5 = xPathLexer2.not();
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer2.dots();
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer2.minus();
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer1.colon();
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer4.doubleColon();
      assertEquals(19, token9.getTokenType());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.8227473684046311
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l!q)-9\"C!Xd");
      Token token0 = xPathLexer0.dollar();
      assertEquals("l", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("*k.h]");
      xPathLexer0.slashes();
      xPathLexer1.relationalOperator();
      xPathLexer0.notEquals();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("-", token1.getTokenText());
      
      Token token2 = xPathLexer1.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("*", token2.getTokenText());
      
      xPathLexer1.slashes();
      Token token3 = xPathLexer1.slashes();
      assertEquals(".", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals("h", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token6 = xPathLexer2.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer2.pipe();
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.5844867125140645
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5qfB*N<9{ZbP':w9/");
      xPathLexer0.or();
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      token1.toString();
      Token token2 = xPathLexer0.notEquals();
      assertEquals("N<", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      String string0 = token1.toString();
      assertEquals("[ (16) (*)", string0);
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("9", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("!%.#ou@vMX");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token4 = xPathLexer1.nextToken();
      assertEquals(23, token4.getTokenType());
      assertEquals("!", token4.getTokenText());
      
      xPathLexer2.relationalOperator();
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      assertEquals("{", token5.getTokenText());
      
      xPathLexer0.not();
      Token token6 = xPathLexer1.slashes();
      assertEquals(11, token6.getTokenType());
      assertEquals("%", token6.getTokenText());
      
      xPathLexer1.at();
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(19, token7.getTokenType());
      assertEquals("bP", token7.getTokenText());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.6623156480367198
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token1 = xPathLexer1.comma();
      assertEquals("2", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("G,]gQ=M+`!Uc#w$*|#");
      Token token2 = xPathLexer1.colon();
      assertEquals("q", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer1.plus();
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer3.equals();
      assertEquals(21, token4.getTokenType());
      
      xPathLexer1.literal();
      Token token5 = xPathLexer3.identifier();
      assertEquals(15, token5.getTokenType());
      
      xPathLexer3.doubleColon();
      XPathLexer xPathLexer4 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token6 = xPathLexer4.star();
      assertEquals(20, token6.getTokenType());
      assertEquals("2", token6.getTokenText());
      
      Token token7 = xPathLexer2.doubleColon();
      assertEquals(19, token7.getTokenType());
      assertEquals("G,", token7.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.slashes();
      Token token8 = xPathLexer4.rightParen();
      assertEquals(2, token8.getTokenType());
      assertEquals("q", token8.getTokenText());
      
      Token token9 = xPathLexer1.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      xPathLexer5.relationalOperator();
      Token token10 = xPathLexer2.nextToken();
      assertEquals("]", token10.getTokenText());
      assertEquals(4, token10.getTokenType());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.8320878357133705
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6(?B0T|z");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("6(?B0T|z");
      Token token1 = xPathLexer0.notEquals();
      assertEquals("(?", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer1.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("6", token2.getTokenText());
      
      xPathLexer1.operatorName();
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("B", token3.getTokenText());
      
      xPathLexer0.equals();
      Token token4 = xPathLexer0.star();
      assertEquals("T", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer1.equals();
      assertEquals(21, token5.getTokenType());
      assertEquals("(", token5.getTokenText());
      
      Token token6 = xPathLexer1.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer0.slashes();
      assertEquals("|", token7.getTokenText());
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer1.rightParen();
      assertEquals("0", token8.getTokenText());
      assertEquals(2, token8.getTokenType());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals(15, token9.getTokenType());
      assertEquals("z", token9.getTokenText());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("PqLuLmtk");
      Token token10 = xPathLexer2.at();
      assertEquals(16, token10.getTokenType());
      assertEquals("P", token10.getTokenText());
      
      xPathLexer2.nextToken();
      Token token11 = xPathLexer1.not();
      assertEquals(23, token11.getTokenType());
      assertEquals("T", token11.getTokenText());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.4975089546946343
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qDwc7+ve^B,<");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("qD", token0.getTokenText());
      
      xPathLexer0.colon();
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("7", token1.getTokenText());
      
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("e", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.plus();
      Token token4 = xPathLexer0.equals();
      assertEquals("^", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
      
      Token token5 = xPathLexer1.literal();
      assertNull(token5);
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals("B,", token6.getTokenText());
      assertEquals(19, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token7 = xPathLexer2.star();
      assertEquals(20, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token8 = xPathLexer4.slashes();
      assertEquals(11, token8.getTokenType());
      
      Token token9 = xPathLexer3.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer1.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      Token token11 = xPathLexer4.not();
      assertEquals(23, token11.getTokenType());
      
      Token token12 = xPathLexer3.plus();
      assertEquals(5, token12.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.511614062668312
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qDwc7+ve^B,<");
      Token token0 = xPathLexer0.notEquals();
      Token token1 = xPathLexer0.at();
      token1.toString();
      token0.toString();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      xPathLexer1.nextToken();
      xPathLexer0.slashes();
      xPathLexer1.relationalOperator();
      xPathLexer0.slashes();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.doubleColon();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.not();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token2 = xPathLexer6.relationalOperator();
      assertNull(token2);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.6205767023828397
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V>V");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("V>", token0.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      xPathLexer0.div();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("V", token1.getTokenText());
      
      char char0 = xPathLexer0.LA(0);
      assertEquals('V', char0);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.consume((-2785));
      xPathLexer0.setXPath("!%.#ou@vMX");
      Token token4 = xPathLexer0.star();
      assertEquals("!", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.8829195707388995
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hM^iIuMb");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("h", token0.getTokenText());
      
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("G,]gQ=M+`!Uc#w$*|#");
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer2.plus();
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer2.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer2.literal();
      assertNull(token4);
      
      xPathLexer0.doubleColon();
      Token token5 = xPathLexer2.rightParen();
      assertEquals(2, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer3.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer("KQ3@gY");
      Token token7 = xPathLexer4.doubleColon();
      assertEquals("KQ", token7.getTokenText());
      assertEquals(19, token7.getTokenType());
      
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      assertEquals("i", token8.getTokenText());
      
      Token token9 = xPathLexer1.nextToken();
      assertEquals(32, token9.getTokenType());
      assertEquals(",", token9.getTokenText());
      
      Token token10 = xPathLexer4.nextToken();
      assertEquals(30, token10.getTokenType());
      assertEquals("3", token10.getTokenText());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.3769906212178853
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V>V");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("V>V");
      xPathLexer1.notEquals();
      xPathLexer0.or();
      xPathLexer0.identifier();
      Token token0 = xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer("V>V");
      xPathLexer2.notEquals();
      token0.toString();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.consume((-2031));
      XPathLexer xPathLexer4 = new XPathLexer("Gx@rbMrhGUA6#Gf=x7");
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer2.slashes();
      xPathLexer3.rightParen();
      // Undeclared exception!
      try { 
        xPathLexer3.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.3730224853307136
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.comma();
      XPathLexer xPathLexer3 = new XPathLexer("%y/q7!U3");
      Token token0 = xPathLexer2.at();
      assertEquals(16, token0.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token1 = xPathLexer2.comma();
      assertEquals(32, token1.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token2 = xPathLexer4.colon();
      assertEquals(18, token2.getTokenType());
      
      xPathLexer2.or();
      Token token3 = xPathLexer3.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("%y", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("(", token4.getTokenText());
      assertEquals(1, token4.getTokenType());
      
      Token token5 = xPathLexer3.nextToken();
      assertEquals(11, token5.getTokenType());
      assertEquals("/", token5.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token6 = xPathLexer6.minus();
      assertEquals(6, token6.getTokenType());
      
      Token token7 = xPathLexer1.not();
      assertEquals("[", token7.getTokenText());
      assertEquals(23, token7.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token8 = xPathLexer7.dots();
      assertEquals(13, token8.getTokenType());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.6409469071644311
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("5q", token0.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.at();
      token1.toString();
      xPathLexer0.notEquals();
      String string0 = token1.toString();
      assertEquals("[ (16) (*)", string0);
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("9", token2.getTokenText());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("bP", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("", token5.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.8529826616230223
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      XPathLexer xPathLexer2 = new XPathLexer("I>n`Bt#");
      Token token0 = xPathLexer2.nextToken();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer1.equals();
      assertEquals("2", token1.getTokenText());
      
      Token token2 = xPathLexer1.slashes();
      assertEquals("q", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer2.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals(">n", token3.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      XPathLexer xPathLexer4 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token4 = xPathLexer1.star();
      assertEquals("f", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      xPathLexer2.nextToken();
      Token token5 = xPathLexer3.nextToken();
      assertEquals(30, token5.getTokenType());
      assertEquals("2", token5.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token6 = xPathLexer5.at();
      assertEquals(16, token6.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token7 = xPathLexer6.not();
      assertEquals(23, token7.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token8 = xPathLexer7.dots();
      assertEquals(13, token8.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token9 = xPathLexer8.minus();
      assertEquals(6, token9.getTokenType());
      assertEquals("2", token9.getTokenText());
      
      Token token10 = xPathLexer4.colon();
      assertEquals(18, token10.getTokenType());
      assertEquals("2", token10.getTokenText());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.7964951566591725
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6(?B0T|z");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("6", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer0.notEquals();
      assertEquals("(?", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer1.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      xPathLexer1.operatorName();
      Token token3 = xPathLexer0.minus();
      assertEquals("B", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals("0", token4.getTokenText());
      
      xPathLexer1.slashes();
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("T", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("6(?B0T|z");
      Token token6 = xPathLexer1.dots();
      assertEquals(13, token6.getTokenType());
      
      xPathLexer0.not();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.Token");
      Token token7 = xPathLexer3.slashes();
      assertEquals("c", token7.getTokenText());
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer2.at();
      assertEquals("6", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer1.doubleColon();
      assertEquals(19, token9.getTokenType());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.7715838489623297
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer("HVQ)pJ~lw;k");
      xPathLexer0.notEquals();
      xPathLexer1.leftBracket();
      xPathLexer1.operatorName();
      xPathLexer1.minus();
      xPathLexer0.equals();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.operatorName();
      xPathLexer2.slashes();
      xPathLexer1.nextToken();
      xPathLexer1.nextToken();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.not();
      Token token0 = xPathLexer3.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.6850282051418002
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X'bkq/}<(");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("X'", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.plus();
      Token token1 = xPathLexer1.equals();
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer1.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer3.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("X'bkq/}<(");
      Token token4 = xPathLexer4.star();
      assertEquals("X", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer1.slashes();
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer1.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("bkq", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer3.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer4.plus();
      assertEquals("'", token9.getTokenText());
      assertEquals(5, token9.getTokenType());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.099625376333917
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5qfB*N<9{ZbP':w9/");
      XPathLexer xPathLexer1 = new XPathLexer("{G?hyCcVX");
      Token token0 = xPathLexer1.notEquals();
      String string0 = token0.toString();
      assertEquals("[ (22) ({G)", string0);
      
      xPathLexer1.slashes();
      xPathLexer1.relationalOperator();
      Token token1 = xPathLexer1.slashes();
      assertEquals("h", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer1.doubleColon();
      assertEquals("yC", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("cVX", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      assertEquals("q", token5.getTokenText());
      
      Token token6 = xPathLexer2.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer1.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals("B*N<9{ZbP':w9/", token9.getTokenText());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.899275895933485
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      xPathLexer0.star();
      XPathLexer xPathLexer2 = new XPathLexer(":aU;'d]c");
      xPathLexer0.slashes();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.rightParen();
      xPathLexer2.nextToken();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.rightBracket();
      XPathLexer xPathLexer5 = new XPathLexer("");
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer6.rightBracket();
      xPathLexer6.relationalOperator();
      xPathLexer3.pipe();
      xPathLexer0.leftParen();
      Token token0 = xPathLexer2.or();
      assertNull(token0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.613940845615571
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      xPathLexer0.or();
      Token token0 = xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("q", token1.getTokenText());
      
      token0.toString();
      Token token2 = xPathLexer0.notEquals();
      assertEquals("fB", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      String string0 = token0.toString();
      assertEquals("[ (3) (2)", string0);
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(20, token3.getTokenType());
      assertEquals("*", token3.getTokenText());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals("N", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.relationalOperator();
      assertEquals("<", token5.getTokenText());
      assertEquals(7, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token6 = xPathLexer2.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.leftBracket();
      Token token7 = xPathLexer3.not();
      assertEquals(23, token7.getTokenType());
      
      xPathLexer2.relationalOperator();
      int int0 = xPathLexer1.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.8760026279118458
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6(?B0T|z");
      Token token0 = xPathLexer0.dollar();
      assertEquals("6", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("6(?B0T|z");
      Token token1 = xPathLexer1.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("6", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("6(?B0T|z");
      Token token2 = xPathLexer2.nextToken();
      assertEquals(30, token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer1.plus();
      assertEquals(5, token3.getTokenType());
      assertEquals("(", token3.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token4 = xPathLexer5.equals();
      assertEquals(21, token4.getTokenType());
      
      xPathLexer4.slashes();
      XPathLexer xPathLexer6 = new XPathLexer("]");
      Token token5 = xPathLexer1.identifier();
      assertEquals(15, token5.getTokenType());
      
      xPathLexer3.doubleColon();
      XPathLexer xPathLexer7 = new XPathLexer("]");
      Token token6 = xPathLexer7.star();
      assertEquals(20, token6.getTokenType());
      assertEquals("]", token6.getTokenText());
      
      Token token7 = xPathLexer1.not();
      assertEquals("?", token7.getTokenText());
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer5.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("(ld>%m");
      Token token9 = xPathLexer8.slashes();
      assertEquals(11, token9.getTokenType());
      assertEquals("(", token9.getTokenText());
      
      Token token10 = xPathLexer7.rightParen();
      assertEquals(2, token10.getTokenType());
      
      Token token11 = xPathLexer4.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer9 = new XPathLexer("");
      Token token12 = xPathLexer3.at();
      assertEquals(16, token12.getTokenType());
      
      XPathLexer xPathLexer10 = new XPathLexer("");
      Token token13 = xPathLexer10.pipe();
      assertEquals(17, token13.getTokenType());
      
      Token token14 = xPathLexer5.dollar();
      assertEquals(26, token14.getTokenType());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.983275016000868
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hM^iIuMb");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("h", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("G,]gQ=M+`!Uc#w$*|#");
      Token token1 = xPathLexer1.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("G", token1.getTokenText());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals(",", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.plus();
      Token token3 = xPathLexer2.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer2.literal();
      assertNull(token4);
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals("M^", token5.getTokenText());
      assertEquals(19, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("hM^iIuMb");
      Token token6 = xPathLexer3.star();
      assertEquals(20, token6.getTokenType());
      assertEquals("h", token6.getTokenText());
      
      Token token7 = xPathLexer1.slashes();
      assertEquals("]", token7.getTokenText());
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer3.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer1.nextToken();
      assertEquals(15, token9.getTokenType());
      
      Token token10 = xPathLexer2.not();
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer1.plus();
      assertEquals("=", token11.getTokenText());
      assertEquals(5, token11.getTokenType());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.376953357670018
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hM^iIuMb");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("h", token0.getTokenText());
      
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("G,]gQ=M+`!Uc#w$*|#");
      Token token1 = xPathLexer1.colon();
      assertEquals("G", token1.getTokenText());
      
      xPathLexer1.consume(116);
      Token token2 = xPathLexer1.dollar();
      assertEquals(26, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer1.slashes();
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer2.colon();
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer2.comma();
      assertEquals(32, token5.getTokenType());
      
      xPathLexer2.relationalOperator();
      xPathLexer2.leftParen();
      xPathLexer2.and();
      xPathLexer2.consume(2);
      xPathLexer0.operatorName();
      Token token6 = xPathLexer2.minus();
      assertEquals(6, token6.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(1, int0);
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.6282675347286728
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5qfB*N<9{ZbP':w9/");
      XPathLexer xPathLexer1 = new XPathLexer("{G?hyCcVX");
      Token token0 = xPathLexer1.notEquals();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (22) ({G)", string0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (22) ({G)");
      Token token3 = xPathLexer2.nextToken();
      assertEquals(3, token3.getTokenType());
      assertEquals("[", token3.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer("ci0{SSY");
      Token token4 = xPathLexer4.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals("c", token4.getTokenText());
      
      Token token5 = xPathLexer0.not();
      assertEquals("q", token5.getTokenText());
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer4.slashes();
      assertEquals("i", token6.getTokenText());
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer4.at();
      assertEquals("0", token7.getTokenText());
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer4.doubleColon();
      assertEquals("{S", token8.getTokenText());
      assertEquals(19, token8.getTokenType());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.5830249126670717
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.star();
      assertEquals("5", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("q", token1.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("{G?hyCcVX");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.at();
      Token token2 = xPathLexer1.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("G", token2.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("{G?hyCcVX");
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer("5qfB*N<9{ZbP':w9/");
      XPathLexer xPathLexer5 = new XPathLexer("+s");
      Token token3 = xPathLexer5.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("+", token3.getTokenText());
      
      Token token4 = xPathLexer1.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("?", token4.getTokenText());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer1.equals();
      assertEquals("h", token6.getTokenText());
      assertEquals(21, token6.getTokenType());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.3042395325100231
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.comma();
      XPathLexer xPathLexer3 = new XPathLexer("%y/q7!U3");
      xPathLexer2.colon();
      xPathLexer3.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.plus();
      xPathLexer0.equals();
      xPathLexer2.literal();
      // Undeclared exception!
      try { 
        xPathLexer3.LA((-1));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.945940621241247
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6>BJubQPSLdW1pz*");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.slashes();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals(">B", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals("J", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer1.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer1.slashes();
      assertEquals(11, token4.getTokenType());
      
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer("0HH bB%kB`+h/7E'#");
      Token token5 = xPathLexer2.nextToken();
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("ubQPSLdW1pz", token6.getTokenText());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("6>BJubQPSLdW1pz*");
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      assertEquals("*", token7.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer0.plus();
      assertEquals(5, token9.getTokenType());
      
      Token token10 = xPathLexer4.doubleColon();
      assertEquals(19, token10.getTokenType());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.8218731661135668
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5qfB*N<9{ZbP':w9/");
      XPathLexer xPathLexer1 = new XPathLexer("CIjz<1oFKk`tPpbO$vW");
      Token token0 = xPathLexer1.colon();
      assertEquals("C", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals("Ijz", token1.getTokenText());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer1.nextToken();
      assertEquals("<", token2.getTokenText());
      assertEquals(7, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer1.nextToken();
      assertEquals(30, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token4 = xPathLexer0.not();
      assertEquals("q", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer3.slashes();
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer3.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer1.doubleColon();
      assertEquals(19, token7.getTokenType());
      assertEquals("oF", token7.getTokenText());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.094324069369136
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      String string0 = "qDwc7+ve^B,<";
      XPathLexer xPathLexer0 = new XPathLexer("qDwc7+ve^B,<");
      xPathLexer0.notEquals();
      xPathLexer0.or();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.at();
      xPathLexer0.notEquals();
      token0.toString();
      XPathLexer xPathLexer1 = new XPathLexer("qDwc7+ve^B,<");
      xPathLexer1.leftBracket();
      xPathLexer1.consume((-600));
      XPathLexer xPathLexer2 = new XPathLexer("qDwc7+ve^B,<");
      // Undeclared exception!
      try { 
        xPathLexer1.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.178849523634588
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X'bkq/}<(");
      xPathLexer0.dots();
      xPathLexer0.slashes();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.notEquals();
      xPathLexer0.slashes();
      xPathLexer0.leftParen();
      xPathLexer0.leftParen();
      xPathLexer0.at();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.identifier();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.0804545448013276
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("5", token0.getTokenText());
      
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer("5qfB*N<9{ZbP':w9/");
      Token token1 = xPathLexer1.colon();
      assertEquals("5", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals("q", token2.getTokenText());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("*", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("N", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer2.equals();
      assertEquals(21, token5.getTokenType());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("5qfB*N<9{ZbP':w9/");
      Token token6 = xPathLexer3.literal();
      assertNull(token6);
      
      Token token7 = xPathLexer1.dots();
      assertEquals(13, token7.getTokenType());
      assertEquals("q", token7.getTokenText());
      
      Token token8 = xPathLexer1.not();
      assertEquals(23, token8.getTokenType());
      assertEquals("f", token8.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("Hiz^");
      Token token9 = xPathLexer4.slashes();
      assertEquals("H", token9.getTokenText());
      assertEquals(11, token9.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("Hiz^");
      Token token10 = xPathLexer5.at();
      assertEquals(16, token10.getTokenType());
      assertEquals("H", token10.getTokenText());
      
      Token token11 = xPathLexer0.doubleColon();
      assertEquals(19, token11.getTokenType());
      assertEquals("<9", token11.getTokenText());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.9195564984622666
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      xPathLexer0.or();
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.at();
      xPathLexer0.notEquals();
      token0.toString();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.not();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.9315813157625517
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X'bkq/}<(");
      xPathLexer0.dots();
      xPathLexer0.rightBracket();
      xPathLexer0.consume((-1806));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.0903584225172325
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6(?B0T|z");
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer("6(?B0T|z");
      xPathLexer0.notEquals();
      xPathLexer1.leftBracket();
      xPathLexer1.operatorName();
      xPathLexer0.minus();
      xPathLexer0.consume((-998));
      xPathLexer0.equals();
      xPathLexer1.slashes();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.4437330190257502
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l!q)-9\"C!Xd");
      Token token0 = xPathLexer0.dollar();
      assertEquals("l", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("*k.h]");
      xPathLexer0.slashes();
      xPathLexer1.relationalOperator();
      Token token1 = xPathLexer0.notEquals();
      assertEquals("q)", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("-", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer1.equals();
      assertEquals("*", token3.getTokenText());
      
      Token token4 = xPathLexer1.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("k", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.at();
      xPathLexer2.or();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.and();
      Token token5 = xPathLexer1.nextToken();
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer1.pipe();
      assertEquals("h", token6.getTokenText());
      assertEquals(17, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("USXt25y~TehMcX'R-k");
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token7 = xPathLexer5.not();
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer5.equals();
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer2.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer0.dots();
      assertEquals("9", token10.getTokenText());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.866502387926292
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.plus();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      xPathLexer0.operatorName();
      xPathLexer0.dots();
      int int0 = (-309);
      xPathLexer0.consume((-309));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.8085103598477708
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5qfB*N<9{ZbP':w9/");
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("5", token0.getTokenText());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.plus();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token2 = xPathLexer1.equals();
      assertEquals(21, token2.getTokenType());
      
      xPathLexer2.consume(642);
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.mod();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.plus();
      Token token3 = xPathLexer1.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer5.rightParen();
      assertEquals(2, token4.getTokenType());
      
      xPathLexer3.literal();
      XPathLexer xPathLexer6 = new XPathLexer("d#~M1]%[F\"c^;vvbe}");
      Token token5 = xPathLexer6.star();
      assertEquals(20, token5.getTokenType());
      
      xPathLexer5.getPreviousToken();
      xPathLexer6.currentPosition();
      Token token6 = xPathLexer6.comma();
      assertEquals(32, token6.getTokenType());
      assertEquals("#", token6.getTokenText());
      
      xPathLexer1.and();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token7 = xPathLexer2.doubleColon();
      xPathLexer7.setPreviousToken(token7);
      assertEquals(19, token7.getTokenType());
      
      xPathLexer4.getXPath();
      XPathLexer xPathLexer8 = new XPathLexer("5qfB*N<9{ZbP':w9/");
      xPathLexer8.currentPosition();
      xPathLexer1.div();
      xPathLexer1.leftParen();
      Token token8 = xPathLexer6.dots();
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer0.plus();
      assertEquals("q", token9.getTokenText());
      assertEquals(5, token9.getTokenType());
      
      xPathLexer2.div();
      Token token10 = xPathLexer0.at();
      assertEquals(16, token10.getTokenType());
      assertEquals("f", token10.getTokenText());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=3.595180916472146
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.pipe();
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      xPathLexer0.leftParen();
      xPathLexer0.star();
      xPathLexer0.at();
      xPathLexer0.or();
      xPathLexer0.identifier();
      xPathLexer0.colon();
      xPathLexer0.isIdentifierStartChar('o');
      xPathLexer0.dollar();
      xPathLexer0.plus();
      xPathLexer0.literal();
      xPathLexer0.getXPath();
      xPathLexer0.comma();
      xPathLexer0.LA(23);
      xPathLexer0.colon();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.8513709663768858
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.star();
      xPathLexer0.or();
      Token token1 = xPathLexer0.notEquals();
      assertEquals("qf", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (20) (2)", string0);
      
      xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token0);
      Token token2 = xPathLexer0.nextToken();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("N", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.getXPath();
      xPathLexer0.currentPosition();
      xPathLexer0.div();
      Token token5 = xPathLexer0.leftParen();
      assertEquals("9", token5.getTokenText());
      
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      assertEquals("{", token6.getTokenText());
      
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
      assertEquals("Z", token7.getTokenText());
      
      Token token8 = xPathLexer0.leftBracket();
      assertEquals("b", token8.getTokenText());
      assertEquals(3, token8.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(17, int0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.6778307633395149
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l!q)-9\"C!Xd");
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer("*k.h]");
      xPathLexer0.slashes();
      xPathLexer1.relationalOperator();
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer1.equals();
      xPathLexer1.slashes();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.at();
      xPathLexer2.or();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer3.identifier();
      xPathLexer1.nextToken();
      xPathLexer1.pipe();
      XPathLexer xPathLexer4 = new XPathLexer("USXt25y~TehMcX'R-k");
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.not();
      xPathLexer5.equals();
      xPathLexer2.at();
      xPathLexer0.dots();
      Token token0 = xPathLexer4.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=3.478476371807211
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      xPathLexer0.operatorName();
      xPathLexer0.leftBracket();
      xPathLexer0.slashes();
      xPathLexer0.doubleColon();
      xPathLexer0.comma();
      xPathLexer0.at();
      xPathLexer0.identifier();
      xPathLexer0.operatorName();
      xPathLexer0.leftBracket();
      xPathLexer0.plus();
      xPathLexer0.star();
      xPathLexer0.dots();
      xPathLexer0.pipe();
      xPathLexer0.rightBracket();
      xPathLexer0.consume((-2478));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.7526490611190857
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("co", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer1.colon();
      assertEquals("c", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      xPathLexer1.nextToken();
      xPathLexer1.nextToken();
      Token token3 = xPathLexer0.identifier();
      assertEquals(".werken.saxpath.XPathLexer", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("H^,j");
      Token token5 = xPathLexer1.dots();
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer3.minus();
      assertEquals("H", token6.getTokenText());
      assertEquals(6, token6.getTokenType());
      
      Token token7 = xPathLexer3.not();
      assertEquals(23, token7.getTokenType());
      assertEquals("^", token7.getTokenText());
      
      Token token8 = xPathLexer3.slashes();
      assertEquals(",", token8.getTokenText());
      assertEquals(11, token8.getTokenType());
      
      Token token9 = xPathLexer1.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer3.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer1.getPreviousToken();
      assertEquals("", token11.getTokenText());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.0310278577717016
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer0.rightParen();
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      
      xPathLexer0.dots();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.rightBracket();
      Token token6 = xPathLexer1.rightParen();
      assertEquals(2, token6.getTokenType());
      
      Token token7 = xPathLexer1.dots();
      assertEquals(13, token7.getTokenType());
      
      Token token8 = xPathLexer1.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer0.rightBracket();
      assertEquals(4, token9.getTokenType());
      
      Token token10 = xPathLexer0.comma();
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer1.pipe();
      assertEquals(17, token11.getTokenType());
      
      Token token12 = xPathLexer0.slashes();
      assertEquals(11, token12.getTokenType());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.7483647022479698
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.rightParen();
      xPathLexer2.pipe();
      xPathLexer1.nextToken();
      xPathLexer2.plus();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.literal();
      xPathLexer0.slashes();
      xPathLexer1.identifier();
      xPathLexer1.doubleColon();
      xPathLexer3.slashes();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer1.star();
      xPathLexer0.dots();
      xPathLexer3.doubleColon();
      xPathLexer3.slashes();
      xPathLexer2.rightParen();
      xPathLexer3.nextToken();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("5Y=G*3t=hEenIP");
      xPathLexer1.at();
      xPathLexer4.nextToken();
      xPathLexer0.mod();
      xPathLexer4.operatorName();
      xPathLexer0.not();
      xPathLexer4.pipe();
      int int0 = xPathLexer3.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.7542536772193125
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      String string0 = "V>V";
      XPathLexer xPathLexer0 = new XPathLexer("V>V");
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.slashes();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.8619334430857268
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.or();
      xPathLexer0.plus();
      xPathLexer0.minus();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.dots();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token3);
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      xPathLexer0.or();
      xPathLexer0.or();
      char char0 = xPathLexer0.LA(1542);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.colon();
      xPathLexer0.minus();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.rightBracket();
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer0.rightBracket();
      assertEquals(4, token9.getTokenType());
      
      xPathLexer0.nextToken();
      Token token10 = xPathLexer0.notEquals();
      assertEquals(22, token10.getTokenType());
      
      Token token11 = xPathLexer0.equals();
      assertEquals(21, token11.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.isIdentifierStartChar('\uFFFF');
      xPathLexer0.getPreviousToken();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('\uFFFF');
      assertFalse(boolean0);
      
      Token token12 = xPathLexer0.number();
      assertEquals(30, token12.getTokenType());
      
      xPathLexer0.endPosition();
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.8349723493139298
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.star();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("6(?B0T|z");
      Token token2 = xPathLexer2.nextToken();
      assertEquals("6", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer2.nextToken();
      assertEquals(1, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("hvk2/DA3T4VwC");
      Token token4 = xPathLexer3.star();
      assertEquals("h", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer3.nextToken();
      assertEquals("vk2", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer3.not();
      assertEquals("/", token8.getTokenText());
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer2.plus();
      assertEquals(5, token9.getTokenType());
      assertEquals("?", token9.getTokenText());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.7082806604098653
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ |(");
      xPathLexer0.notEquals();
      xPathLexer0.comma();
      XPathLexer xPathLexer1 = new XPathLexer("l-0}bMN)&y'LOo\"L");
      xPathLexer0.slashes();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.plus();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.equals();
      xPathLexer1.slashes();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer2.notEquals();
      xPathLexer2.doubleColon();
      XPathLexer xPathLexer5 = new XPathLexer("[ |(");
      xPathLexer5.star();
      xPathLexer4.nextToken();
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer("l-0}bMN)&y'LOo\"L");
      xPathLexer7.not();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.8860373237201904
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V>V");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("V>", token0.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("V", token1.getTokenText());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("V>V");
      Token token4 = xPathLexer1.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("V", token4.getTokenText());
      
      xPathLexer1.mod();
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.literal();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer1.dollar();
      assertEquals(26, token6.getTokenType());
      assertEquals(">", token6.getTokenText());
      
      xPathLexer1.operatorName();
      Token token7 = xPathLexer1.whitespace();
      assertEquals((-2), token7.getTokenType());
      
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
      
      Token token9 = xPathLexer2.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      xPathLexer1.slashes();
      Token token10 = xPathLexer1.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      Token token11 = xPathLexer1.notEquals();
      assertEquals(22, token11.getTokenType());
      
      xPathLexer1.slashes();
      xPathLexer0.isIdentifierChar(';');
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.literal();
      Token token12 = xPathLexer0.slashes();
      assertEquals(11, token12.getTokenType());
      
      xPathLexer3.consume();
      xPathLexer1.consume();
      Token token13 = xPathLexer0.not();
      assertEquals(23, token13.getTokenType());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.059583357751075
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume();
      xPathLexer0.doubleColon();
      xPathLexer0.mod();
      xPathLexer0.or();
      xPathLexer0.pipe();
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifier();
      xPathLexer0.operatorName();
      xPathLexer0.rightParen();
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.isIdentifierChar('-');
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      xPathLexer0.comma();
      xPathLexer0.rightParen();
      xPathLexer0.colon();
      xPathLexer0.mod();
      xPathLexer0.or();
      xPathLexer0.literal();
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.whitespace();
      xPathLexer0.star();
      xPathLexer0.star();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.slashes();
      xPathLexer0.isIdentifierChar('-');
      xPathLexer0.literal();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume();
      xPathLexer0.consume();
      assertEquals("", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.9179040183908693
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.star();
      assertEquals("5", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.notEquals();
      String string0 = token1.toString();
      assertEquals("[ (22) (qf)", string0);
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("B", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token3);
      assertEquals("*N", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("<", token4.getTokenText());
      assertEquals(7, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("9", token5.getTokenText());
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer0.not();
      assertEquals("{", token6.getTokenText());
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer0.dots();
      assertEquals("Z", token7.getTokenText());
      assertEquals(13, token7.getTokenType());
      
      Token token8 = xPathLexer0.leftParen();
      assertEquals(1, token8.getTokenType());
      assertEquals("b", token8.getTokenText());
      
      Token token9 = xPathLexer0.slashes();
      assertEquals(11, token9.getTokenType());
      assertEquals("P", token9.getTokenText());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.856888992815281
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.identifier();
      Token token1 = xPathLexer0.at();
      String string0 = token1.toString();
      assertEquals("[ (16) (*)", string0);
      
      token0.toString();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("{Z", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("bP':w9/", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("s%{(yk%");
      Token token5 = xPathLexer1.dots();
      assertEquals("s", token5.getTokenText());
      
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      assertEquals("b", token6.getTokenText());
      
      Token token7 = xPathLexer1.slashes();
      assertEquals(11, token7.getTokenType());
      assertEquals("%", token7.getTokenText());
      
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token8 = xPathLexer2.dots();
      assertEquals(13, token8.getTokenType());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.8184130955542184
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.star();
      assertEquals("2", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.identifier();
      Token token2 = xPathLexer0.at();
      Token token3 = xPathLexer0.dollar();
      assertEquals("N", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
      
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer("5XAr8oz);`H){,Z&");
      String string0 = token2.toString();
      assertEquals("[ (16) (*)", string0);
      
      Token token4 = xPathLexer1.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("5", token4.getTokenText());
      
      xPathLexer1.or();
      Token token5 = xPathLexer1.notEquals();
      assertEquals("XA", token5.getTokenText());
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("<", token6.getTokenText());
      assertEquals(7, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("r8oz", token7.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer3.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer0.dots();
      assertEquals("9", token9.getTokenText());
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer1.literal();
      assertEquals(27, token10.getTokenType());
      assertNotNull(token10);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.6270560405779593
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l!q)-9\"C!Xd");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("l", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("*k.h]");
      xPathLexer0.slashes();
      xPathLexer1.relationalOperator();
      Token token1 = xPathLexer0.notEquals();
      assertEquals("q)", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("-", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer1.equals();
      assertEquals("*", token3.getTokenText());
      
      Token token4 = xPathLexer1.slashes();
      assertEquals("k", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token5 = xPathLexer2.dots();
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer2.equals();
      assertEquals(21, token6.getTokenType());
      
      Token token7 = xPathLexer0.minus();
      assertEquals(6, token7.getTokenType());
      assertEquals("9", token7.getTokenText());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals((-1), token8.getTokenType());
      assertEquals("", token8.getTokenText());
      
      Token token9 = xPathLexer2.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token10 = xPathLexer2.not();
      assertEquals(23, token10.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token11 = xPathLexer3.pipe();
      assertEquals(17, token11.getTokenType());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=3.1590150894423834
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.or();
      xPathLexer0.consume();
      xPathLexer0.consume();
      xPathLexer0.or();
      xPathLexer0.or();
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.number();
      xPathLexer0.leftParen();
      xPathLexer0.literal();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.star();
      xPathLexer0.setXPath("");
      xPathLexer0.dots();
      xPathLexer0.dollar();
      xPathLexer0.number();
      xPathLexer0.minus();
      xPathLexer0.plus();
      xPathLexer0.at();
      xPathLexer0.literal();
      xPathLexer0.consume();
      xPathLexer0.consume((-1540));
      xPathLexer0.plus();
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.613704814145975
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("co", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("m.werken.saxpath.XPathLexer", token1.getTokenText());
      assertNotNull(token1);
      assertEquals(15, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer1.colon();
      assertEquals(18, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token3 = xPathLexer2.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("co", token3.getTokenText());
      
      Token token4 = xPathLexer1.leftBracket();
      assertEquals("o", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      xPathLexer0.or();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer3.star();
      assertEquals(20, token5.getTokenType());
      
      xPathLexer2.doubleColon();
      Token token6 = xPathLexer0.rightParen();
      assertEquals(2, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.dots();
      Token token7 = xPathLexer1.not();
      assertEquals(23, token7.getTokenType());
      assertEquals("m", token7.getTokenText());
      
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
      
      xPathLexer4.at();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token9 = xPathLexer5.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer5.plus();
      assertEquals(5, token10.getTokenType());
      
      Token token11 = xPathLexer0.equals();
      assertEquals(21, token11.getTokenType());
      
      Token token12 = xPathLexer0.at();
      assertEquals(16, token12.getTokenType());
      
      Token token13 = xPathLexer1.dots();
      assertEquals(13, token13.getTokenType());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=3.0934195741586183
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.doubleColon();
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token3 = xPathLexer1.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      xPathLexer0.or();
      Token token4 = xPathLexer1.comma();
      assertEquals(32, token4.getTokenType());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=3.2318345466005614
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("NTZz\u0003v");
      xPathLexer0.plus();
      xPathLexer0.not();
      xPathLexer0.pipe();
      xPathLexer0.equals();
      xPathLexer0.slashes();
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      xPathLexer0.colon();
      xPathLexer0.comma();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.8488818298422884
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("l-0}bMN)&y'LOo\"L");
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer1.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("l", token2.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      xPathLexer2.slashes();
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token4 = xPathLexer4.identifier();
      assertEquals(15, token4.getTokenType());
      
      xPathLexer3.and();
      xPathLexer3.doubleColon();
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token5 = xPathLexer2.star();
      assertEquals(20, token5.getTokenType());
      
      xPathLexer3.not();
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer2.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer2.rightParen();
      assertEquals(2, token8.getTokenType());
      
      xPathLexer4.nextToken();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer("_q<jj8tiv'tX}j[dDB");
      Token token9 = xPathLexer0.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer5.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      xPathLexer6.pipe();
      Token token11 = xPathLexer1.pipe();
      assertEquals("-", token11.getTokenText());
      assertEquals(17, token11.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(33, int0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.8199221021319785
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.comma();
      XPathLexer xPathLexer3 = new XPathLexer("%y/q7!U3");
      xPathLexer1.relationalOperator();
      xPathLexer2.colon();
      xPathLexer3.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.plus();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer2.equals();
      xPathLexer1.slashes();
      xPathLexer5.identifier();
      xPathLexer4.doubleColon();
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer3.star();
      xPathLexer3.not();
      xPathLexer2.doubleColon();
      xPathLexer6.or();
      xPathLexer3.slashes();
      xPathLexer5.rightParen();
      xPathLexer6.nextToken();
      xPathLexer2.relationalOperator();
      xPathLexer6.endPosition();
      XPathLexer xPathLexer7 = null;
      try {
        xPathLexer7 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.6173271492059498
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("[ ", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer2.comma();
      assertEquals(32, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("%y/q7!U3");
      Token token2 = xPathLexer2.colon();
      assertEquals(18, token2.getTokenType());
      
      xPathLexer3.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token3 = xPathLexer1.plus();
      assertEquals("[", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token4 = xPathLexer2.equals();
      assertEquals(21, token4.getTokenType());
      
      xPathLexer1.slashes();
      xPathLexer5.identifier();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.identifier();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer7 = new XPathLexer("%y/q7!U3");
      Token token5 = xPathLexer7.star();
      assertEquals("%", token5.getTokenText());
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer3.doubleColon();
      assertEquals("%y", token7.getTokenText());
      assertEquals(19, token7.getTokenType());
      
      Token token8 = xPathLexer1.slashes();
      assertEquals(11, token8.getTokenType());
      assertEquals("(", token8.getTokenText());
      
      Token token9 = xPathLexer4.rightParen();
      assertEquals(2, token9.getTokenType());
      
      Token token10 = xPathLexer5.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer8 = new XPathLexer("[ (");
      Token token11 = xPathLexer7.at();
      assertEquals(16, token11.getTokenType());
      assertEquals("y", token11.getTokenText());
      
      xPathLexer8.consume();
      xPathLexer5.nextToken();
      Token token12 = xPathLexer8.pipe();
      assertEquals(" ", token12.getTokenText());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token13 = xPathLexer9.pipe();
      assertEquals(17, token13.getTokenType());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=3.034289177384199
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer0.leftParen();
      assertEquals(1, token5.getTokenType());
      
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=3.313459549163335
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("co", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals("m", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer1.colon();
      assertEquals(18, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.consume(510);
      Token token3 = xPathLexer2.notEquals();
      assertEquals(22, token3.getTokenType());
      
      xPathLexer0.slashes();
      xPathLexer1.operatorName();
      Token token4 = xPathLexer2.equals();
      assertEquals(21, token4.getTokenType());
      
      xPathLexer2.not();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("v6cLco");
      Token token5 = xPathLexer1.dots();
      assertEquals(13, token5.getTokenType());
      assertEquals("o", token5.getTokenText());
      
      Token token6 = xPathLexer1.not();
      assertEquals(23, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer(")");
      Token token7 = xPathLexer4.slashes();
      assertEquals(")", token7.getTokenText());
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer0.at();
      assertEquals("w", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer4.doubleColon();
      assertEquals(19, token9.getTokenType());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-758));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=3.3284514392943114
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.div();
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      xPathLexer0.hasMoreChars();
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.7770747043790411
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      xPathLexer1.colon();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.plus();
      xPathLexer1.equals();
      xPathLexer1.equals();
      xPathLexer1.LA((-1));
      xPathLexer2.slashes();
      xPathLexer1.minus();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.number();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.pipe();
      xPathLexer2.doubleColon();
      xPathLexer4.slashes();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer4.comma();
      xPathLexer5.nextToken();
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer("");
      XPathLexer xPathLexer7 = new XPathLexer("");
      xPathLexer7.at();
      xPathLexer2.nextToken();
      Token token0 = xPathLexer7.or();
      assertNull(token0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=3.511879395517017
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      xPathLexer0.rightParen();
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token7 = xPathLexer1.dots();
      assertEquals(13, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token8 = xPathLexer2.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer0.slashes();
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer2.at();
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer1.doubleColon();
      assertEquals(19, token11.getTokenType());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.2892046838472415
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V>V");
      xPathLexer0.minus();
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      Token token1 = xPathLexer0.dollar();
      token1.toString();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("[ (26) (V)");
      xPathLexer1.slashes();
      xPathLexer1.relationalOperator();
      xPathLexer1.slashes();
      xPathLexer0.nextToken();
      xPathLexer1.doubleColon();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.642459578718724
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("[ ", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer2.comma();
      assertEquals(32, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("%y/q7!U3");
      xPathLexer2.colon();
      xPathLexer3.nextToken();
      Token token2 = xPathLexer1.colon();
      assertEquals("[", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals("(", token3.getTokenText());
      
      xPathLexer3.nextToken();
      Token token4 = xPathLexer1.nextToken();
      assertEquals("(", token4.getTokenText());
      assertEquals(1, token4.getTokenType());
      
      xPathLexer2.nextToken();
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("+35/r~_G,W/I$M$E;");
      Token token6 = xPathLexer1.dots();
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer2.not();
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer1.slashes();
      assertEquals(11, token8.getTokenType());
      
      Token token9 = xPathLexer3.at();
      assertEquals("%", token9.getTokenText());
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer2.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer2.minus();
      assertEquals(6, token11.getTokenType());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.6245826190137862
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.7788755038522637
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hM^iIuMb");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("h", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.not();
      assertEquals("M", token1.getTokenText());
      
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("hM^iIuMb");
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("^", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("iIuMb", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token4 = xPathLexer2.dots();
      assertEquals(13, token4.getTokenType());
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer0.literal();
      assertNull(token6);
      
      Token token7 = xPathLexer2.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      xPathLexer1.consume(109);
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token10 = xPathLexer4.pipe();
      assertEquals(17, token10.getTokenType());
      
      Token token11 = xPathLexer4.comma();
      assertEquals(32, token11.getTokenType());
      
      boolean boolean0 = xPathLexer3.isIdentifierStartChar('S');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.6387855682369659
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.or();
      xPathLexer0.leftBracket();
      xPathLexer0.at();
      Token token0 = xPathLexer0.notEquals();
      token0.toString();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.not();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.8295129500853142
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.identifier();
      Token token1 = xPathLexer0.at();
      token1.toString();
      String string0 = token0.toString();
      assertEquals("[ (15) (5qfB)", string0);
      
      xPathLexer0.nextToken();
      String string1 = token1.toString();
      assertEquals("[ (16) (*)", string1);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(7, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals("9", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("{ZbP':w9/", token4.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer1.not();
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer1.notEquals();
      assertEquals(22, token7.getTokenType());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=3.3433357320468162
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.star();
      assertEquals("2", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("q", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("f", token2.getTokenText());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      assertEquals("B", token3.getTokenText());
      
      Token token4 = xPathLexer0.dots();
      assertEquals("*", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.plus();
      Token token5 = xPathLexer1.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer1.identifier();
      assertEquals(15, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token7 = xPathLexer2.plus();
      assertEquals("2", token7.getTokenText());
      assertEquals(5, token7.getTokenType());
      
      Token token8 = xPathLexer1.slashes();
      assertEquals(11, token8.getTokenType());
      
      Token token9 = xPathLexer1.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer1.dots();
      assertEquals(13, token10.getTokenType());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.9202219170993118
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.identifier();
      Token token1 = xPathLexer0.at();
      String string0 = token1.toString();
      assertEquals("[ (16) (*)", string0);
      
      String string1 = token0.toString();
      assertEquals("[ (15) (5qfB)", string1);
      
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("9", token2.getTokenText());
      
      Token token3 = xPathLexer0.minus();
      assertEquals("{", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals("Z", token4.getTokenText());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      
      xPathLexer0.nextToken();
      Token token6 = xPathLexer0.nextToken();
      assertEquals("P':w9/", token6.getTokenText());
      
      xPathLexer0.identifier();
      Token token7 = xPathLexer0.not();
      assertEquals("'", token7.getTokenText());
      assertEquals(23, token7.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer0.pipe();
      assertEquals(":", token8.getTokenText());
      assertEquals(17, token8.getTokenType());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=3.517172024574893
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      xPathLexer0.comma();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer1.leftParen();
      xPathLexer0.at();
      xPathLexer0.dollar();
      xPathLexer0.identifier();
      XPathLexer xPathLexer3 = new XPathLexer("");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer(";4@Tjb1m(7M");
      xPathLexer4.not();
      xPathLexer0.not();
      xPathLexer1.dots();
      xPathLexer3.leftParen();
      xPathLexer3.slashes();
      xPathLexer1.at();
      xPathLexer5.doubleColon();
      xPathLexer3.rightParen();
      Token token0 = xPathLexer2.and();
      assertNull(token0);
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.857672456640043
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.identifier();
      Token token1 = xPathLexer0.at();
      String string0 = token1.toString();
      assertEquals("[ (16) (*)", string0);
      
      String string1 = token0.toString();
      assertEquals("[ (15) (5qfB)", string1);
      assertEquals("5qfB", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.slashes();
      assertEquals("<", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("{Z", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("s%{(yk%");
      Token token4 = xPathLexer1.dots();
      assertEquals("s", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      assertEquals("b", token5.getTokenText());
      
      Token token6 = xPathLexer1.slashes();
      assertEquals(11, token6.getTokenType());
      
      xPathLexer1.at();
      Token token7 = xPathLexer1.nextToken();
      assertEquals("(", token7.getTokenText());
  }
}
