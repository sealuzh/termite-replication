/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 11 01:35:48 GMT 2020
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.1639556568820564
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.dollar();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5qfB*N<9{ZbP':w9/");
      xPathLexer0.at();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V>V");
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V>V");
      xPathLexer0.consume();
      assertEquals("V>V", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.750214000894922
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qDwc7+ve^B,<");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("qD", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("w", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("7", token3.getTokenText());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("+", token4.getTokenText());
      
      Token token5 = xPathLexer0.identifier();
      assertEquals("ve", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals("^B", token6.getTokenText());
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer0.dots();
      assertEquals(",", token7.getTokenText());
      assertEquals(13, token7.getTokenType());
      
      Token token8 = xPathLexer0.relationalOperator();
      assertEquals("<", token8.getTokenText());
      assertNotNull(token8);
      assertEquals(7, token8.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.031759218569271
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qDwc7+ve^B,<");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hM^iIuMb");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('S');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('\uFFFF');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      boolean boolean0 = xPathLexer0.isIdentifierChar('-');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V>V");
      boolean boolean0 = xPathLexer0.isIdentifierChar(';');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.2756476269599046
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      xPathLexer0.star();
      xPathLexer0.star();
      xPathLexer0.at();
      xPathLexer0.dollar();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hM^iIuMb");
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      String string0 = xPathLexer0.getXPath();
      assertNull(string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      String string0 = xPathLexer0.getXPath();
      assertEquals("", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.getPreviousToken();
      assertNull(token0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3955852454859713
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token0.getTokenType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AdD%#jr[]sI~lHeljd<");
      int int0 = xPathLexer0.endPosition();
      assertEquals(19, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hM^iIuMb");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("h", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.1639556568820564
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V>V");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("V", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(">", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      char char0 = xPathLexer0.LA(0);
      assertEquals('>', char0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.3639211032839484
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.identifier();
      assertEquals("2qfB", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals("*", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("N", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      char char0 = xPathLexer0.LA(10);
      assertEquals('9', char0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V>V");
      Token token0 = xPathLexer0.equals();
      assertEquals("V", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      char char0 = xPathLexer0.LA(0);
      assertEquals('V', char0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.2718685126965625
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X'bkq/}<(");
      xPathLexer0.consume((-1806));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.consume((-3734));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hM^iIuMb");
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume((-258));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V>V");
      xPathLexer0.consume((-2785));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.consume((-1));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X'bkq/}<(");
      xPathLexer0.consume((-1227));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-2031));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5qfB*N<9{ZbP':w9/");
      xPathLexer0.consume((-600));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume((-536));
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.1639556568820564
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X'bkq/}<(");
      xPathLexer0.consume((-1654));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-3883));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      xPathLexer0.consume((-304));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume((-1540));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-2478));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-758));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = null;
      try {
        xPathLexer0 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      String string0 = xPathLexer0.getXPath();
      assertEquals("2qfB*N<9{ZbP':w9/", string0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.3693821196946767
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X'bkq/}<(");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("X'", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("b", token1.getTokenText());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("k", token2.getTokenText());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals("q/", token3.getTokenText());
      assertEquals(12, token3.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.4791263041556139
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!3.#ou@vMX");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("3.", token1.getTokenText());
      assertEquals(14, token1.getTokenType());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.8310204811135162
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hM^iIuMb");
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.1454597239090567
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("2", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("q", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals("fB", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals("*", token3.getTokenText());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("N", token4.getTokenText());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      Token token6 = xPathLexer0.star();
      assertEquals("9", token6.getTokenText());
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals("{", token7.getTokenText());
      assertEquals(17, token7.getTokenType());
      
      xPathLexer0.doubleColon();
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
      assertEquals("P", token8.getTokenText());
      
      Token token9 = xPathLexer0.doubleColon();
      assertEquals("':", token9.getTokenText());
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer0.rightParen();
      assertEquals(2, token10.getTokenType());
      
      Token token11 = xPathLexer0.nextToken();
      assertEquals("9", token11.getTokenText());
      assertEquals(30, token11.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!3.#ou@vMX");
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!3.#ou@vMX");
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.0791512728828505
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.1114225708704473
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hM^iIuMb");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("h", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("M", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals("^", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("iIuMb", token4.getTokenText());
      assertEquals((-1), token4.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.228078328803077
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qDwc7+ve^B,<");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("qD", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("w", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("c", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("+", token4.getTokenText());
      
      xPathLexer0.setPreviousToken(token3);
      assertEquals("7", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("ve", token5.getTokenText());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.290883322757301
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("2", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("qf", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("B", token2.getTokenText());
      
      Token token3 = xPathLexer0.colon();
      assertEquals("*", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("N", token4.getTokenText());
      
      Token token5 = xPathLexer0.pipe();
      xPathLexer0.setPreviousToken(token5);
      assertEquals(17, token5.getTokenType());
      assertEquals("<", token5.getTokenText());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals("9{", token6.getTokenText());
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer0.leftBracket();
      assertEquals(3, token7.getTokenType());
      assertEquals("Z", token7.getTokenText());
      
      xPathLexer0.notEquals();
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals(15, token9.getTokenType());
      assertEquals("w9", token9.getTokenText());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.1784448654657247
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6(?B0T|z");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("6", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("(?", token1.getTokenText());
      
      xPathLexer0.identifier();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("|", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("z", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.243038197004626
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("I>n`Bt#");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("I", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(">", token1.getTokenText());
      assertEquals(9, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("n", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals("`", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("Bt", token4.getTokenText());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.2233038222491686
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.identifier();
      assertEquals("2qfB", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("*", token1.getTokenText());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals("N", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(7, token3.getTokenType());
      assertEquals("<", token3.getTokenText());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      assertEquals("9{", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("ZbP", token5.getTokenText());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0554668553362125
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X'bkq/}<(");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("X'", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(4, token1.getTokenType());
      assertEquals("b", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("kq/}<(", token2.getTokenText());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.1224275114908304
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c4PBDfb5xj@'y:?");
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(3, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("4", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("PBDfb5xj", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.1424503349041377
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6(?B0T|z");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("6", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals("?", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("B0T", token3.getTokenText());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.8476521847776651
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!.ou@vMX");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("!.", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("ou", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("@v", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.7810925852737755
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.identifier();
      assertEquals("2qfB", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals("*", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals("N", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("<9", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("{ZbP':w9/", token4.getTokenText());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.7810925852737755
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%y/q7!U3");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("%", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("y", token1.getTokenText());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0658770961100856
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.dollar();
      assertEquals("c", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      Token token3 = xPathLexer0.literal();
      assertEquals(27, token3.getTokenType());
      assertEquals("werken", token3.getTokenText());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      assertEquals("sa", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("xpath.XPathLexer", token5.getTokenText());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.8177174986975012
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qDwc7+ve^B,<");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("q", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("D", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("wc7", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.2386219919853
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qDwc7+ve^B,<");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("qD", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("w", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("c", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("ve", token5.getTokenText());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.8177174986975012
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!.ou@vMX");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals(".o", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("u", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.8538765137493306
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wR4sF\"B|j4&/qPi=D}");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("w", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("R", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("4", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("sF", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.8177174986975012
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5XAr8oz);`H){,Z&");
      Token token0 = xPathLexer0.colon();
      assertEquals("5", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("XA", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("r8oz", token2.getTokenText());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.1629572146254827
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k@n29APS##V]#?s");
      Token token0 = xPathLexer0.star();
      assertEquals("k", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("@", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("n29APS", token3.getTokenText());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.8466584464538924
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("co", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("m.werken.saxpath.XPathLexer", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.7439920825769217
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lt]Z'6:4\u0002~wl$!:");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("lt", token0.getTokenText());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.7711904826943476
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dZp");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("dZp", token0.getTokenText());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.8177174986975012
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qDwc7+ve^B,<");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("qD", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals("w", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("c7", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.7810925852737755
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X'bkq/}<(");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("X'", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("bkq", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0328898684533847
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("co", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.literal();
      assertEquals("werken", token2.getTokenText());
      assertEquals(27, token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      assertEquals("s", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("axpath.XPathLexer", token4.getTokenText());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.7164516354046382
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_fFDUgzlkGv;^,|U0;,");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("_fFDUgzlkGv", token0.getTokenText());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.7503520167076843
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hM^iIuMb");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("hM", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("^iIuMb", token1.getTokenText());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.7722458213295293
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("QL1K1B];>*a/t@py9cm");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("QL1K1B", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("]", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.7863721925375565
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("I>n`Bt#");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("I", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals(">n", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("`Bt#", token2.getTokenText());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.4129957254335754
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.identifier();
      assertEquals("5qfB", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("*", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals("N<", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("9", token3.getTokenText());
      
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("{", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("ZbP':w9/", token5.getTokenText());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.8441138774034159
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'5YEv@?FL<`h=yyuH");
      Token token0 = xPathLexer0.colon();
      assertEquals("'", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("5", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("YEv", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.7439920825769217
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X'bkq/}<(");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("X", token0.getTokenText());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.7711904826943476
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("WU");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("WU", token0.getTokenText());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.7439920825769217
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V>V");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.getPreviousToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("V", token0.getTokenText());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.8798846890844252
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6(?B0T|z");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("6", token0.getTokenText());
      
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("?B", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("0", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("T", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.7439920825769217
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("S@!`H},BFl'@NdZiAEe");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("S", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.7810925852737755
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("eRT?W^yy^Z");
      Token token0 = xPathLexer0.equals();
      assertEquals("e", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("RT", token1.getTokenText());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.8441138774034159
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wJO3qod\"^N{]t");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("w", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("J", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("O3qod", token2.getTokenText());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.7810925852737755
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hM^iIuMb");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("h", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("M", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.7810925852737755
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("QL1K1B];>*a/t@py9cm");
      Token token0 = xPathLexer0.dollar();
      assertEquals("Q", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("L1K1B", token1.getTokenText());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.7711904826943476
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("KXZt");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("KXZt", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.1800450633502244
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("HVQ)pJ~lw;ik");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("HVQ", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(")", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("pJ~lw;ik", token2.getTokenText());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.7439920825769217
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G,]gQ=M+`!Uc#w$*|#");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("G", token0.getTokenText());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.8538765137493306
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'5YEv@?FL<`h=yyuH");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("'", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("5Y", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals("Ev", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("FL", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.7439920825769217
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("EV::]it=.a<j!0Sw}");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("EV", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.7439920825769217
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AdD%#jr[]sI~lHeljd<");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("AdD", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.5221396172997409
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!.ou@vMX");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(13, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
      
      xPathLexer0.at();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(16, token3.getTokenType());
      assertEquals("@", token3.getTokenText());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.7503520167076843
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("eRT?W^yy^Z");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("eRT", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("?W^yy^Z", token1.getTokenText());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.6437387087178319
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5Y=G*3t=hEenIP");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      assertEquals("5Y", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(21, token1.getTokenType());
      assertEquals("=", token1.getTokenText());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.6497265626321663
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("2", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("qf", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("B", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      xPathLexer0.colon();
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      assertEquals("N", token3.getTokenText());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("<", token4.getTokenText());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      assertEquals("9{", token5.getTokenText());
      
      xPathLexer0.notEquals();
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(":", token7.getTokenText());
      assertEquals(18, token7.getTokenType());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.7390550555431371
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[8X'bkq/}<(");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("8", token1.getTokenText());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.7123333326585803
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("U-7UYWGA%MQH>n");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("U-", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("7", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.6755920761612467
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6(?B0T|z");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("6", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.7123333326585803
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'5YEv@?FL<`h=yyuH");
      Token token0 = xPathLexer0.colon();
      assertEquals("'", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("5", token1.getTokenText());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.7123333326585803
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c4PBDfb5xj@'y:?");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("c", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("4", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.6755920761612467
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("2", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.7583989331519824
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (16) (*)");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("[ ", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("16", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.8104093922397677
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6(?B0T|z");
      Token token0 = xPathLexer0.pipe();
      assertEquals("6", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("(?", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("B", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("0", token3.getTokenText());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.48213452706026033
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%y/q7!U3");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("%y", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(11, token1.getTokenType());
      assertEquals("/", token1.getTokenText());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.0849871545661693
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-tfB22i,'Q!n!");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(6, token0.getTokenType());
      assertEquals("-", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("tfB22i", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.1629572146254827
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G,]gQ=M+`!Uc#w$*|#");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("G", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(32, token1.getTokenType());
      assertEquals(",", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("]", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("gQ", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.8347103140780441
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("2", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("qfB", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(20, token2.getTokenType());
      assertEquals("*", token2.getTokenText());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=0.4089388914174921
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(")", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.56217493659866
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'5YEv@?FL<`h=yyuH");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("", token0.getTokenText());
      assertEquals((-1), token0.getTokenType());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.47912630415561397
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V>V");
      xPathLexer0.setXPath("!%.#ou@vMX");
      Token token0 = xPathLexer0.star();
      assertEquals("!", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("%.#ou@vMX", token1.getTokenText());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.4089388914174921
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("S$P=O7V\u0006~Au9x:g");
      Token token0 = xPathLexer0.dollar();
      assertEquals("S", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(26, token1.getTokenType());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.7784090622011562
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!3.#ou@vMX");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("!", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("3.", token1.getTokenText());
      assertEquals(31, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("#ou@vMX", token2.getTokenText());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.4821345270602604
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("", token0.getTokenText());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=0.6370050474223353
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("[", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume((-5321));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.7810925852737755
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qDwc7+ve^B,<");
      Token token0 = xPathLexer0.minus();
      assertEquals("q", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Dwc7", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.36060911398924
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H0RP4G;-fA~");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token0);
      assertEquals(15, token0.getTokenType());
      assertEquals("H0RP4G", token0.getTokenText());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.3101446100511098
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!3.#ou@vMX");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("3.", token1.getTokenText());
      assertEquals(31, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("#", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("ou@vMX", token3.getTokenText());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.14839214282331
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.070250381853813
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!.ou@vMX");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(".", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("ou@vMX", token2.getTokenText());
  }
}
