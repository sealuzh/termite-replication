/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 02:16:37 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lowagie.text.pdf.PdfGraphics2D;
import java.awt.AWTEventMulticaster;
import java.awt.Graphics;
import java.awt.HeadlessException;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.ScrollPane;
import java.awt.event.ActionEvent;
import java.awt.event.ComponentListener;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelListener;
import java.awt.geom.AffineTransform;
import java.awt.image.renderable.ParameterBlock;
import java.net.Proxy;
import java.time.chrono.ChronoLocalDate;
import java.util.ArrayDeque;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.Consumer;
import javax.media.jai.CollectionOp;
import javax.media.jai.OperationRegistry;
import javax.media.jai.operator.FPXDescriptor;
import javax.media.jai.operator.IIPResolutionDescriptor;
import javax.swing.DebugGraphics;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JLayeredPane;
import javax.swing.JList;
import javax.swing.JRadioButtonMenuItem;
import javax.swing.JTextField;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.event.MenuDragMouseEvent;
import javax.swing.event.PopupMenuListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultEditorKit;
import javax.swing.text.StyledEditorKit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      JList<VisualPageListItem> jList0 = new JList<VisualPageListItem>(visualListModel0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      PriorityQueue<VisualPageListItem> priorityQueue1 = new PriorityQueue<VisualPageListItem>(priorityQueue0);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) priorityQueue1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // bitIndex < 0: -1
         //
         verifyException("java.util.BitSet", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.784463929257947
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[11];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      int[] intArray1 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.removeElements(intArray1, true);
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.removeElements(0, 4, true);
      visualListModel0.removeElements(405, 2592, true);
      visualListModel0.removeElements(376, 3206, true);
      visualListModel0.undeleteElements(intArray1);
      visualListModel0.removeElements(405, 5, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.2623477045221727
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(3278);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      VisualListModel visualListModel1 = new VisualListModel();
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey3 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey4 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey5 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey6 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey7 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey8 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey9 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      visualListModel0.moveUpIndex(3278);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey10 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey11 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      int[] intArray0 = new int[0];
      visualListModel1.moveUpIndexes(intArray0);
      PdfGraphics2D.HyperLinkKey[] pdfGraphics2D_HyperLinkKeyArray0 = new PdfGraphics2D.HyperLinkKey[3];
      pdfGraphics2D_HyperLinkKeyArray0[0] = pdfGraphics2D_HyperLinkKey0;
      pdfGraphics2D_HyperLinkKeyArray0[1] = pdfGraphics2D_HyperLinkKey10;
      pdfGraphics2D_HyperLinkKeyArray0[2] = pdfGraphics2D_HyperLinkKey3;
      stack0.toArray(pdfGraphics2D_HyperLinkKeyArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = 3278;
      visualListModel1.moveDownIndexes(intArray1);
      try { 
        visualListModel0.reverseElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 3278
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.9708118853160022
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[0] = null;
      PdfGraphics2D.HyperLinkKey[] pdfGraphics2D_HyperLinkKeyArray0 = new PdfGraphics2D.HyperLinkKey[5];
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[1] = pdfGraphics2D_HyperLinkKey1;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey3 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      intArray0[2] = 1;
      visualListModel0.moveUpIndexes(intArray0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      // Undeclared exception!
      try { 
        visualListModel0.appendAllElements(vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7315566134489517
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.moveDownIndexes(intArray0);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey3 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey[] pdfGraphics2D_HyperLinkKeyArray0 = new PdfGraphics2D.HyperLinkKey[6];
      pdfGraphics2D_HyperLinkKeyArray0[0] = pdfGraphics2D_HyperLinkKey0;
      pdfGraphics2D_HyperLinkKeyArray0[1] = pdfGraphics2D_HyperLinkKey3;
      pdfGraphics2D_HyperLinkKeyArray0[2] = pdfGraphics2D_HyperLinkKey3;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey4 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[3] = pdfGraphics2D_HyperLinkKey4;
      pdfGraphics2D_HyperLinkKeyArray0[4] = pdfGraphics2D_HyperLinkKey3;
      pdfGraphics2D_HyperLinkKeyArray0[5] = pdfGraphics2D_HyperLinkKey3;
      stack0.toArray(pdfGraphics2D_HyperLinkKeyArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = 1;
      visualListModel0.moveDownIndexes(intArray1);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.364046985865184
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.updateElementAt(0, (VisualPageListItem) null);
      byte[] byteArray0 = new byte[17];
      byteArray0[0] = (byte)72;
      byteArray0[1] = (byte)72;
      byteArray0[15] = (byte)72;
      visualListModel0.addElementAt((VisualPageListItem) null, 1532);
      intArray0[0] = (int) (byte)72;
      byteArray0[4] = (byte)1;
      visualListModel0.updateElementAt((-452), (VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[9];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualListModel0.moveDownIndex(1);
      visualPageListItemArray0[7] = null;
      visualListModel0.setData(visualPageListItemArray0);
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 72
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.967125460663457
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.clone();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.appendAllElements(linkedHashSet0);
      visualListModel0.addAllElements((-3), (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.moveDownIndex(0);
      int[] intArray0 = new int[9];
      intArray0[0] = (-1954);
      intArray0[1] = (-1954);
      intArray0[2] = (-3);
      intArray0[8] = 0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      intArray0[4] = (-3);
      intArray0[5] = (-3);
      intArray0[6] = (-3);
      intArray0[7] = 0;
      intArray0[8] = 1;
      visualListModel0.reverseElements(intArray0);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.addElementAt((VisualPageListItem) null, (-1487));
      visualListModel0.moveUpIndex(1721);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.elementChanged((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel1.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.9487205928347628
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[19];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(937);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      int int0 = 21;
      visualListModel0.removeElements(intArray0, true);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(21, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.69208484551288
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.getSize();
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.parallelStream();
      LinkedHashSet<PdfGraphics2D.HyperLinkKey> linkedHashSet1 = new LinkedHashSet<PdfGraphics2D.HyperLinkKey>();
      linkedHashSet0.add((VisualPageListItem) null);
      Boolean boolean0 = new Boolean(true);
      VisualListModel visualListModel1 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = new Vector<VisualPageListItem>();
      visualListModel0.reverseElements(intArray0);
      visualListModel0.data = null;
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      visualListModel1.getElements();
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.getElements();
      visualListModel1.getElements();
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.getElements();
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel1.undeleteElements(intArray0);
      visualListModel0.prependAllElements(collection0);
      int[] intArray1 = new int[9];
      intArray1[0] = 9;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 56;
      intArray1[4] = 0;
      intArray1[5] = 0;
      intArray1[6] = (-4051);
      intArray1[7] = (-208);
      intArray1[8] = 3335;
      visualListModel1.reverseElements(intArray1);
      assertFalse(intArray1.equals((Object)intArray0));
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.0499251260871434
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      linkedHashSet0.clone();
      linkedHashSet0.add((VisualPageListItem) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = 0;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.removeElementAt(0, true);
      visualListModel1.clearData();
      visualListModel1.rotateClockwiseElements(intArray0);
      assertEquals(0, visualListModel1.getSize());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.8323649625844873
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      PdfGraphics2D.HyperLinkKey[] pdfGraphics2D_HyperLinkKeyArray0 = new PdfGraphics2D.HyperLinkKey[5];
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[0] = pdfGraphics2D_HyperLinkKey0;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[1] = pdfGraphics2D_HyperLinkKey1;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey3 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey4 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey5 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      stack0.toArray(pdfGraphics2D_HyperLinkKeyArray0);
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 11;
      intArray0[3] = 1;
      intArray0[4] = (-4194);
      intArray0[5] = 1;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray1 = new int[7];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray1[2] = 1;
      intArray1[3] = 1;
      intArray1[4] = 1;
      intArray1[5] = 1;
      intArray1[6] = 180;
      try { 
        visualListModel0.moveUpIndexes(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 180
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.042901725385895
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[0] = null;
      PdfGraphics2D.HyperLinkKey[] pdfGraphics2D_HyperLinkKeyArray0 = new PdfGraphics2D.HyperLinkKey[5];
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[1] = pdfGraphics2D_HyperLinkKey1;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey3 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      intArray0[2] = 1;
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5981863871455344
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(93);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      int[] intArray0 = new int[4];
      intArray0[0] = 93;
      intArray0[1] = 93;
      intArray0[2] = 3278;
      intArray0[3] = 3278;
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 93
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.235998921362983
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      PdfGraphics2D.HyperLinkKey[] pdfGraphics2D_HyperLinkKeyArray0 = new PdfGraphics2D.HyperLinkKey[8];
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey3 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = (-3827);
      intArray0[2] = 1;
      intArray0[3] = 1;
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveUpIndexes(intArray0);
      visualListModel1.undeleteElements(intArray0);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey4 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey5 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualListModel visualListModel2 = new VisualListModel();
      stack0.stream();
      visualListModel2.rotateClockwiseElements(intArray0);
      stack0.toArray(pdfGraphics2D_HyperLinkKeyArray0);
      try { 
        visualListModel0.moveDownIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3827
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.772969799011699
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[12];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(3278);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.590498607142004
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack0.ensureCapacity(568);
      stack1.add((VisualPageListItem) null);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData((Vector<VisualPageListItem>) stack1);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      int[] intArray0 = new int[2];
      intArray0[0] = 568;
      intArray0[1] = 568;
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel0.setData(visualPageListItemArray0);
      try { 
        visualListModel0.moveUpIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 567
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.8232350921682932
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      PdfGraphics2D.HyperLinkKey[] pdfGraphics2D_HyperLinkKeyArray0 = new PdfGraphics2D.HyperLinkKey[8];
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey3 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      int int0 = (-3827);
      intArray0[1] = (-3827);
      intArray0[2] = 1;
      intArray0[3] = 1;
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.9280478396261032
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      PdfGraphics2D.HyperLinkKey[] pdfGraphics2D_HyperLinkKeyArray0 = new PdfGraphics2D.HyperLinkKey[8];
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey3 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[5];
      intArray0[0] = (-13);
      int int0 = (-3827);
      intArray0[1] = (-13);
      intArray0[2] = (-13);
      intArray0[3] = (-13);
      visualListModel0.moveUpIndexes(intArray0);
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -13
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = Integer.MAX_VALUE;
      Object[] objectArray0 = new Object[5];
      OperationRegistry operationRegistry0 = OperationRegistry.getThreadSafeOperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getParameters();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0, vector0);
      Vector<Object> vector1 = parameterBlock1.getSources();
      ParameterBlock parameterBlock2 = new ParameterBlock(vector1);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, vector1);
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "log4j.additivity.", parameterBlock2, renderingHints0, false);
      // Undeclared exception!
      try { 
        visualListModel0.prependAllElements(collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"log4j.additivity.\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.2488215410938253
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      int int0 = 568;
      stack0.ensureCapacity(568);
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      stack0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.addAllElements(8, (Collection<VisualPageListItem>) linkedHashSet0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[0];
      stack0.add(0, (VisualPageListItem) null);
      visualListModel0.moveUpIndexes(intArray0);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(3278);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.retainAll(stack0);
      linkedHashSet0.add((VisualPageListItem) null);
      stack0.containsAll(linkedHashSet0);
      stack0.ensureCapacity(568);
      stack0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet1.add((VisualPageListItem) null);
      linkedHashSet1.add((VisualPageListItem) null);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedHashSet1.forEach(consumer0);
      linkedHashSet1.add((VisualPageListItem) null);
      linkedHashSet1.add((VisualPageListItem) null);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack1.add((VisualPageListItem) null);
      stack1.add((VisualPageListItem) null);
      stack1.spliterator();
      visualListModel0.data = (Vector<VisualPageListItem>) stack1;
      Stack<VisualPageListItem> stack2 = new Stack<VisualPageListItem>();
      int[] intArray0 = new int[1];
      intArray0[0] = 568;
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 568
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5179872908529675
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(937);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      int int0 = 0;
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.9824884367461533
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.402886181440778
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.retainAll(stack0);
      linkedHashSet0.add((VisualPageListItem) null);
      stack0.containsAll(linkedHashSet0);
      stack0.ensureCapacity(568);
      stack0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet1.add((VisualPageListItem) null);
      linkedHashSet1.add((VisualPageListItem) null);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedHashSet1.forEach(consumer0);
      linkedHashSet1.add((VisualPageListItem) null);
      linkedHashSet1.add((VisualPageListItem) null);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack1.add((VisualPageListItem) null);
      stack1.add((VisualPageListItem) null);
      stack1.spliterator();
      visualListModel0.data = (Vector<VisualPageListItem>) stack1;
      int[] intArray0 = new int[1];
      intArray0[0] = 568;
      visualListModel0.moveDownIndexes(intArray0);
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 568
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5179872908529677
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "log4j.reset");
      int[] intArray0 = new int[1];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(3278);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements(3278, (Collection<VisualPageListItem>) stack0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.515260359474346
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Proxy.Type proxy_Type0 = Proxy.Type.DIRECT;
      FileSystemHandling.shouldAllThrowIOExceptions();
      stack0.setSize(937);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.removeElements(0, 0, true);
      Boolean boolean0 = new Boolean(true);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(componentListener0, componentListener0);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, componentListener0);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[0];
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel1.moveUpIndexes(intArray1);
      visualListModel1.undeleteElements(intArray1);
      visualListModel0.moveDownIndexes(intArray1);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.4968325557927025
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Proxy.Type proxy_Type0 = Proxy.Type.DIRECT;
      stack0.removeElement(proxy_Type0);
      stack0.setSize(937);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.removeElements(0, 0, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(componentListener0, componentListener0);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[0];
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel1.moveUpIndexes(intArray1);
      visualListModel1.undeleteElements(intArray1);
      visualListModel0.moveDownIndexes(intArray1);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.7991124902786995
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.getListDataListeners();
      visualListModel0.getSize();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.clone();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.appendAllElements(linkedHashSet0);
      visualListModel0.addAllElements(1, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndex(0);
      int[] intArray1 = new int[9];
      intArray1[0] = (-1954);
      intArray1[1] = (-1954);
      intArray1[2] = 1;
      intArray1[8] = 0;
      intArray1[4] = 1;
      intArray1[5] = 1;
      intArray1[6] = 1;
      intArray1[7] = 0;
      intArray1[8] = 1;
      visualListModel0.reverseElements(intArray1);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.addElementAt((VisualPageListItem) null, (-1487));
      visualListModel0.moveUpIndex(1721);
      VisualListModel visualListModel1 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel1.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.305563508570234
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateClockwiseElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel0.moveUpIndexes(intArray0);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey3 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey4 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey5 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey6 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey7 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey8 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey9 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey10 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey11 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey[] pdfGraphics2D_HyperLinkKeyArray0 = new PdfGraphics2D.HyperLinkKey[6];
      pdfGraphics2D_HyperLinkKeyArray0[0] = pdfGraphics2D_HyperLinkKey5;
      pdfGraphics2D_HyperLinkKeyArray0[1] = pdfGraphics2D_HyperLinkKey2;
      pdfGraphics2D_HyperLinkKeyArray0[2] = pdfGraphics2D_HyperLinkKey11;
      pdfGraphics2D_HyperLinkKeyArray0[3] = pdfGraphics2D_HyperLinkKey0;
      pdfGraphics2D_HyperLinkKeyArray0[4] = pdfGraphics2D_HyperLinkKey0;
      pdfGraphics2D_HyperLinkKeyArray0[5] = pdfGraphics2D_HyperLinkKey5;
      stack0.toArray(pdfGraphics2D_HyperLinkKeyArray0);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.moveDownIndexes(intArray0);
      visualListModel2.rotateAnticlockwiseElements(intArray0);
      visualListModel3.reverseElements(intArray0);
      assertEquals(1, intArray0.length);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.009653988412479
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(937);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.moveDownIndexes(intArray0);
      int int0 = 0;
      visualListModel0.removeElements(intArray0, true);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.4780709313740186
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey3 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = (-3827);
      intArray0[2] = 1;
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction0 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedAction0.putValue("v8W%:bvwk:/", "v8W%:bvwk:/");
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction1 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedAction1.getKeys();
      ActionEvent actionEvent0 = new ActionEvent(defaultEditorKit_DefaultKeyTypedAction0, (-2444), "", (-3827), 2729);
      defaultEditorKit_DefaultKeyTypedAction1.actionPerformed(actionEvent0);
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction2 = new DefaultEditorKit.DefaultKeyTypedAction();
      actionEvent0.paramString();
      defaultEditorKit_DefaultKeyTypedAction0.getPropertyChangeListeners();
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction3 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedAction3.actionPerformed(actionEvent0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.ensureCapacity((-51));
      Boolean boolean0 = new Boolean(true);
      Boolean boolean1 = new Boolean(false);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.setData(visualPageListItemArray0);
      visualListModel0.clearData();
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.3419408569062177
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      hashSet0.add((VisualPageListItem) null);
      hashSet0.add((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveUpIndex(3);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.updateElementAt(3, (VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      assertEquals("[]", stack0.toString());
      assertEquals(0, stack0.size());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultEditorKit.DefaultKeyTypedAction[] defaultEditorKit_DefaultKeyTypedActionArray0 = new DefaultEditorKit.DefaultKeyTypedAction[9];
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction0 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedActionArray0[0] = defaultEditorKit_DefaultKeyTypedAction0;
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction1 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedActionArray0[1] = defaultEditorKit_DefaultKeyTypedAction1;
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction2 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedActionArray0[2] = defaultEditorKit_DefaultKeyTypedAction2;
      defaultEditorKit_DefaultKeyTypedAction2.isEnabled();
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction3 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedAction1.getValue("");
      defaultEditorKit_DefaultKeyTypedActionArray0[5] = defaultEditorKit_DefaultKeyTypedAction3;
      defaultEditorKit_DefaultKeyTypedAction3.getKeys();
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction4 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedAction3.getValue("");
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction5 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedActionArray0[5] = defaultEditorKit_DefaultKeyTypedAction0;
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction6 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedActionArray0[5] = defaultEditorKit_DefaultKeyTypedAction1;
      defaultEditorKit_DefaultKeyTypedAction6.putValue("", (Object) null);
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction7 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedActionArray0[7] = defaultEditorKit_DefaultKeyTypedAction7;
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction8 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedAction6.getKeys();
      defaultEditorKit_DefaultKeyTypedAction7.setEnabled(true);
      defaultEditorKit_DefaultKeyTypedAction8.actionPerformed((ActionEvent) null);
      defaultEditorKit_DefaultKeyTypedActionArray0[8] = defaultEditorKit_DefaultKeyTypedAction8;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      PdfGraphics2D.HyperLinkKey[] pdfGraphics2D_HyperLinkKeyArray0 = new PdfGraphics2D.HyperLinkKey[0];
      stack0.toArray(pdfGraphics2D_HyperLinkKeyArray0);
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.5879923414778436
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      PdfGraphics2D.HyperLinkKey[] pdfGraphics2D_HyperLinkKeyArray0 = new PdfGraphics2D.HyperLinkKey[5];
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey3 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[23];
      int int0 = (-3827);
      intArray0[1] = (-3827);
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = 1;
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey4 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey5 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.rotateClockwiseElements(intArray0);
      stack0.toArray(pdfGraphics2D_HyperLinkKeyArray0);
      visualListModel0.moveDownIndexes(intArray0);
      int[] intArray1 = new int[3];
      intArray1[0] = 1;
      DefaultTableModel[] defaultTableModelArray0 = new DefaultTableModel[1];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      defaultTableModelArray0[0] = defaultTableModel0;
      stack0.toArray(defaultTableModelArray0);
      intArray1[1] = 1;
      intArray1[2] = (-3827);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray1, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1) > toIndex(-3826)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.873029116491111
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[7];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(937);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      int int0 = 0;
      visualListModel0.removeElements(intArray0, true);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.clear();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      stack0.containsAll(hashSet0);
      stack0.ensureCapacity(568);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedHashSet0.forEach(consumer0);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack1.add((VisualPageListItem) null);
      stack1.spliterator();
      visualListModel0.data = (Vector<VisualPageListItem>) stack1;
      Stack<VisualPageListItem> stack2 = new Stack<VisualPageListItem>();
      int[] intArray0 = new int[1];
      intArray0[0] = 568;
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 569
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.448090131104659
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(3278);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.reverseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel1.moveUpIndexes(intArray0);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey3 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey4 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey5 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey6 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey7 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey8 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey9 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey10 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey11 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey[] pdfGraphics2D_HyperLinkKeyArray0 = new PdfGraphics2D.HyperLinkKey[7];
      pdfGraphics2D_HyperLinkKeyArray0[0] = pdfGraphics2D_HyperLinkKey4;
      pdfGraphics2D_HyperLinkKeyArray0[1] = pdfGraphics2D_HyperLinkKey2;
      pdfGraphics2D_HyperLinkKeyArray0[2] = pdfGraphics2D_HyperLinkKey6;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey12 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[3] = pdfGraphics2D_HyperLinkKey12;
      pdfGraphics2D_HyperLinkKeyArray0[4] = pdfGraphics2D_HyperLinkKey0;
      pdfGraphics2D_HyperLinkKeyArray0[5] = pdfGraphics2D_HyperLinkKey9;
      pdfGraphics2D_HyperLinkKeyArray0[6] = pdfGraphics2D_HyperLinkKey10;
      stack0.toArray(pdfGraphics2D_HyperLinkKeyArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.moveDownIndexes(intArray0);
      visualListModel2.rotateAnticlockwiseElements(intArray0);
      System.setCurrentTimeMillis(3278);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.8791326374377332
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Vector<ChronoLocalDate> vector0 = new Vector<ChronoLocalDate>();
      linkedHashSet0.retainAll(vector0);
      vector0.parallelStream();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Boolean boolean0 = new Boolean(true);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedHashSet1.add((VisualPageListItem) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      LinkedHashSet<String> linkedHashSet2 = new LinkedHashSet<String>();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet1);
      System.setCurrentTimeMillis(0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.3869878672794815
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int[] intArray0 = new int[1];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(3278);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.clearData();
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey3 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey4 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey5 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      stack0.add((VisualPageListItem) null);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey6 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey7 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey8 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey9 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey10 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey11 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey[] pdfGraphics2D_HyperLinkKeyArray0 = new PdfGraphics2D.HyperLinkKey[7];
      pdfGraphics2D_HyperLinkKeyArray0[0] = pdfGraphics2D_HyperLinkKey4;
      pdfGraphics2D_HyperLinkKeyArray0[1] = pdfGraphics2D_HyperLinkKey2;
      pdfGraphics2D_HyperLinkKeyArray0[2] = pdfGraphics2D_HyperLinkKey6;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey12 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[3] = pdfGraphics2D_HyperLinkKey12;
      pdfGraphics2D_HyperLinkKeyArray0[4] = pdfGraphics2D_HyperLinkKey0;
      pdfGraphics2D_HyperLinkKeyArray0[5] = pdfGraphics2D_HyperLinkKey9;
      pdfGraphics2D_HyperLinkKeyArray0[6] = pdfGraphics2D_HyperLinkKey10;
      stack0.toArray(pdfGraphics2D_HyperLinkKeyArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      System.setCurrentTimeMillis(3278);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.3988054013171336
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = 568;
      intArray0[1] = 568;
      intArray0[2] = 568;
      intArray0[3] = 568;
      intArray0[4] = 568;
      intArray0[5] = 568;
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      stack0.stream();
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey3 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey4 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey5 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey6 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey7 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey[] pdfGraphics2D_HyperLinkKeyArray0 = new PdfGraphics2D.HyperLinkKey[3];
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey8 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[0] = pdfGraphics2D_HyperLinkKey8;
      pdfGraphics2D_HyperLinkKeyArray0[1] = pdfGraphics2D_HyperLinkKey0;
      pdfGraphics2D_HyperLinkKeyArray0[2] = pdfGraphics2D_HyperLinkKey6;
      stack0.toArray(pdfGraphics2D_HyperLinkKeyArray0);
      visualListModel0.moveDownIndexes(intArray0);
      int[] intArray1 = new int[3];
      intArray1[0] = 568;
      intArray1[1] = 568;
      intArray1[2] = 568;
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.prependAllElements(stack0);
      visualListModel0.reverseElements(intArray0);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5164586295246056
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(3278);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      VisualListModel visualListModel1 = new VisualListModel();
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey3 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey4 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey5 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey6 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey7 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey8 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey9 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey10 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey11 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey[] pdfGraphics2D_HyperLinkKeyArray0 = new PdfGraphics2D.HyperLinkKey[7];
      pdfGraphics2D_HyperLinkKeyArray0[0] = pdfGraphics2D_HyperLinkKey4;
      pdfGraphics2D_HyperLinkKeyArray0[1] = pdfGraphics2D_HyperLinkKey2;
      pdfGraphics2D_HyperLinkKeyArray0[2] = pdfGraphics2D_HyperLinkKey6;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey12 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[3] = pdfGraphics2D_HyperLinkKey12;
      pdfGraphics2D_HyperLinkKeyArray0[4] = pdfGraphics2D_HyperLinkKey0;
      pdfGraphics2D_HyperLinkKeyArray0[5] = pdfGraphics2D_HyperLinkKey9;
      pdfGraphics2D_HyperLinkKeyArray0[6] = pdfGraphics2D_HyperLinkKey10;
      stack0.toArray(pdfGraphics2D_HyperLinkKeyArray0);
      System.setCurrentTimeMillis(3278);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer[] integerArray0 = new Integer[6];
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      Integer integer1 = JLayeredPane.PALETTE_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      Integer.toUnsignedLong((int) integerArray0[1]);
      Integer integer3 = Integer.getInteger("rwDe-W", (int) integerArray0[1]);
      Integer.getInteger("rwDe-W");
      integerArray0[2] = integer1;
      Integer integer4 = FPXDescriptor.MAX_RESOLUTION;
      Integer.getInteger("iUhF\"Koy,<yAkn[<`W3", integer1);
      Integer.sum((int) integer3, (int) integer3);
      Integer.getInteger("", integer4);
      integerArray0[3] = integer4;
      Integer.sum((int) integer3, (int) integerArray0[3]);
      Integer integer5 = JLayeredPane.POPUP_LAYER;
      Integer.divideUnsigned((int) integer3, (int) integer3);
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.5693997521856344
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(3278);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.reverseElements(intArray0);
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey3 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey4 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey5 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey6 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey7 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey8 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey9 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey10 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey11 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey[] pdfGraphics2D_HyperLinkKeyArray0 = new PdfGraphics2D.HyperLinkKey[3];
      pdfGraphics2D_HyperLinkKeyArray0[0] = pdfGraphics2D_HyperLinkKey0;
      pdfGraphics2D_HyperLinkKeyArray0[1] = pdfGraphics2D_HyperLinkKey10;
      pdfGraphics2D_HyperLinkKeyArray0[2] = pdfGraphics2D_HyperLinkKey3;
      stack0.toArray(pdfGraphics2D_HyperLinkKeyArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = 3278;
      visualListModel1.moveDownIndexes(intArray1);
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      try { 
        visualListModel0.reverseElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 3278
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.305651171183146
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(3278);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.reverseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel1.moveUpIndexes(intArray0);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey3 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey4 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey5 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey6 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey7 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey8 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey9 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey10 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey11 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey[] pdfGraphics2D_HyperLinkKeyArray0 = new PdfGraphics2D.HyperLinkKey[7];
      pdfGraphics2D_HyperLinkKeyArray0[0] = pdfGraphics2D_HyperLinkKey4;
      pdfGraphics2D_HyperLinkKeyArray0[1] = pdfGraphics2D_HyperLinkKey2;
      pdfGraphics2D_HyperLinkKeyArray0[2] = pdfGraphics2D_HyperLinkKey6;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey12 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      pdfGraphics2D_HyperLinkKeyArray0[3] = pdfGraphics2D_HyperLinkKey12;
      pdfGraphics2D_HyperLinkKeyArray0[4] = pdfGraphics2D_HyperLinkKey0;
      pdfGraphics2D_HyperLinkKeyArray0[5] = pdfGraphics2D_HyperLinkKey9;
      pdfGraphics2D_HyperLinkKeyArray0[6] = pdfGraphics2D_HyperLinkKey10;
      stack0.toArray(pdfGraphics2D_HyperLinkKeyArray0);
      visualListModel1.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.retainAll(stack0);
      linkedHashSet0.add((VisualPageListItem) null);
      stack0.containsAll(linkedHashSet0);
      stack0.ensureCapacity(568);
      stack0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet1.add((VisualPageListItem) null);
      linkedHashSet1.add((VisualPageListItem) null);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedHashSet1.forEach(consumer0);
      linkedHashSet1.add((VisualPageListItem) null);
      linkedHashSet1.add((VisualPageListItem) null);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack1.add((VisualPageListItem) null);
      stack1.add((VisualPageListItem) null);
      stack1.spliterator();
      visualListModel0.data = (Vector<VisualPageListItem>) stack1;
      Stack<VisualPageListItem> stack2 = new Stack<VisualPageListItem>();
      int[] intArray0 = new int[1];
      intArray0[0] = 568;
      Stack<VisualPageListItem> stack3 = new Stack<VisualPageListItem>();
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.9193618394362675
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      stack0.containsAll(linkedHashSet0);
      stack0.ensureCapacity(568);
      stack0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet1.add((VisualPageListItem) null);
      linkedHashSet1.add((VisualPageListItem) null);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedHashSet1.forEach(consumer0);
      linkedHashSet1.add((VisualPageListItem) null);
      linkedHashSet1.add((VisualPageListItem) null);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      LinkedHashSet<String> linkedHashSet2 = new LinkedHashSet<String>();
      visualListModel0.addAllElements(568, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.addElement((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualPageListItemArray0[0] = null;
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.8885995049191862
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Object[] objectArray0 = new Object[1];
      DefaultComboBoxModel<Object> defaultComboBoxModel0 = new DefaultComboBoxModel<Object>(objectArray0);
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(defaultComboBoxModel0);
      JComboBox<Object> jComboBox1 = new JComboBox<Object>(defaultComboBoxModel0);
      jComboBox1.removeMouseWheelListener((MouseWheelListener) null);
      defaultComboBoxModel0.removeListDataListener(jComboBox1);
      jComboBox0.requestFocus(true);
      jComboBox0.setAlignmentY(2140.0486F);
      visualListModel0.addListDataListener(jComboBox1);
      visualListModel0.subList((-1472), 9, false);
      visualListModel0.moveUpIndex((-803));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      visualListModel0.moveDownIndex(849);
      visualListModel0.getElementAt(2027);
      // Undeclared exception!
      try { 
        visualListModel0.subList(2015, (-2639), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(2015) > toIndex(-2639)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DefaultEditorKit.DefaultKeyTypedAction[] defaultEditorKit_DefaultKeyTypedActionArray0 = new DefaultEditorKit.DefaultKeyTypedAction[9];
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction0 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedActionArray0[0] = defaultEditorKit_DefaultKeyTypedAction0;
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction1 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedActionArray0[1] = defaultEditorKit_DefaultKeyTypedAction1;
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction2 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedActionArray0[2] = defaultEditorKit_DefaultKeyTypedAction2;
      defaultEditorKit_DefaultKeyTypedAction2.isEnabled();
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction3 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedAction1.getValue("");
      defaultEditorKit_DefaultKeyTypedActionArray0[5] = defaultEditorKit_DefaultKeyTypedAction3;
      defaultEditorKit_DefaultKeyTypedAction3.getKeys();
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction4 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedAction3.getValue("\" object is not assignable to a \"");
      ActionEvent actionEvent0 = new ActionEvent(defaultEditorKit_DefaultKeyTypedAction2, 14, "id,Qo`\"s", 14, 22);
      defaultEditorKit_DefaultKeyTypedAction3.actionPerformed(actionEvent0);
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction5 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedActionArray0[5] = defaultEditorKit_DefaultKeyTypedAction5;
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction6 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedActionArray0[5] = defaultEditorKit_DefaultKeyTypedAction6;
      defaultEditorKit_DefaultKeyTypedAction6.putValue("", (Object) null);
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction7 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedActionArray0[7] = defaultEditorKit_DefaultKeyTypedAction7;
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction8 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedAction8.actionPerformed((ActionEvent) null);
      defaultEditorKit_DefaultKeyTypedActionArray0[8] = defaultEditorKit_DefaultKeyTypedAction8;
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.ensureCapacity(2943);
      Boolean boolean0 = new Boolean("\" object is not assignable to a \"");
      Boolean boolean1 = new Boolean(true);
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DefaultEditorKit.DefaultKeyTypedAction[] defaultEditorKit_DefaultKeyTypedActionArray0 = new DefaultEditorKit.DefaultKeyTypedAction[9];
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction0 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedActionArray0[0] = defaultEditorKit_DefaultKeyTypedAction0;
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction1 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedActionArray0[1] = defaultEditorKit_DefaultKeyTypedAction1;
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction2 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedActionArray0[2] = defaultEditorKit_DefaultKeyTypedAction2;
      defaultEditorKit_DefaultKeyTypedAction2.isEnabled();
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction3 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedAction1.getValue("");
      defaultEditorKit_DefaultKeyTypedActionArray0[5] = defaultEditorKit_DefaultKeyTypedAction3;
      defaultEditorKit_DefaultKeyTypedAction3.getKeys();
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction4 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedAction3.getValue("\" object is not assignable to a \"");
      ActionEvent actionEvent0 = new ActionEvent(defaultEditorKit_DefaultKeyTypedAction2, 14, "id,Qo`\"s", 14, 1);
      defaultEditorKit_DefaultKeyTypedAction3.actionPerformed(actionEvent0);
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction5 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedActionArray0[5] = defaultEditorKit_DefaultKeyTypedAction5;
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction6 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedActionArray0[5] = defaultEditorKit_DefaultKeyTypedAction6;
      defaultEditorKit_DefaultKeyTypedAction6.putValue("", (Object) null);
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction7 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedActionArray0[7] = defaultEditorKit_DefaultKeyTypedAction7;
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction8 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedAction8.actionPerformed((ActionEvent) null);
      defaultEditorKit_DefaultKeyTypedActionArray0[8] = defaultEditorKit_DefaultKeyTypedAction8;
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.ensureCapacity(2943);
      Boolean boolean0 = new Boolean("\" object is not assignable to a \"");
      Boolean boolean1 = new Boolean(true);
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(937);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      Proxy.Type proxy_Type0 = Proxy.Type.SOCKS;
      Proxy.Type proxy_Type1 = Proxy.Type.HTTP;
      Proxy.Type proxy_Type2 = Proxy.Type.SOCKS;
      Proxy.Type proxy_Type3 = Proxy.Type.DIRECT;
      Proxy.Type[] proxy_TypeArray0 = new Proxy.Type[9];
      proxy_TypeArray0[0] = proxy_Type2;
      proxy_TypeArray0[1] = proxy_Type3;
      proxy_TypeArray0[2] = proxy_Type0;
      proxy_TypeArray0[3] = proxy_Type1;
      proxy_TypeArray0[4] = proxy_Type1;
      proxy_TypeArray0[5] = proxy_Type2;
      proxy_TypeArray0[6] = proxy_Type2;
      proxy_TypeArray0[7] = proxy_Type3;
      proxy_TypeArray0[8] = proxy_Type0;
      stack0.toArray(proxy_TypeArray0);
      int int0 = visualListModel0.getSize();
      assertEquals(937, int0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.2967440325775823
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(componentListener0, componentListener0);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel0.moveDownIndexes(intArray0);
      Vector<VisualPageListItem> vector0 = visualListModel1.data;
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel2.undeleteElements(intArray0);
      visualListModel1.rotateClockwiseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      JList<VisualPageListItem> jList0 = new JList<VisualPageListItem>(visualListModel0);
      jList0.getLastVisibleIndex();
      DebugGraphics debugGraphics0 = new DebugGraphics((Graphics) null);
      Point point0 = new Point((-1), (-1));
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.9907867545761526
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      stack0.containsAll(linkedHashSet0);
      stack0.ensureCapacity(568);
      stack0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet1.add((VisualPageListItem) null);
      linkedHashSet1.add((VisualPageListItem) null);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedHashSet1.forEach(consumer0);
      linkedHashSet1.add((VisualPageListItem) null);
      linkedHashSet1.add((VisualPageListItem) null);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack1.add((VisualPageListItem) null);
      stack1.spliterator();
      visualListModel0.data = (Vector<VisualPageListItem>) stack1;
      Stack<VisualPageListItem> stack2 = new Stack<VisualPageListItem>();
      int[] intArray0 = new int[1];
      intArray0[0] = 568;
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 568
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      stack0.containsAll(linkedHashSet0);
      stack0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet1.add((VisualPageListItem) null);
      linkedHashSet1.add((VisualPageListItem) null);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedHashSet1.forEach(consumer0);
      linkedHashSet1.add((VisualPageListItem) null);
      linkedHashSet1.add((VisualPageListItem) null);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack1.add((VisualPageListItem) null);
      stack1.spliterator();
      visualListModel0.data = (Vector<VisualPageListItem>) stack1;
      Stack<VisualPageListItem> stack2 = new Stack<VisualPageListItem>();
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.0516819854659416
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      DefaultComboBoxModel<Object> defaultComboBoxModel0 = new DefaultComboBoxModel<Object>();
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      defaultComboBoxModel0.addListDataListener(jComboBox0);
      StyledEditorKit.UnderlineAction styledEditorKit_UnderlineAction0 = new StyledEditorKit.UnderlineAction();
      int[] intArray0 = new int[0];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      AffineTransform affineTransform0 = new AffineTransform();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "UkiKxdNtPXH 8SEf9 [");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "H&}iUy{#6E");
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      int int0 = 9;
      int int1 = (-1);
      // Undeclared exception!
      try { 
        visualListModel0.subList(9, (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(9) > toIndex(-1)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Integer[] integerArray0 = new Integer[10];
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      integerArray0[1] = integer0;
      Integer integer2 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer3 = Integer.getInteger("rwDe-W", (int) integerArray0[1]);
      Integer.getInteger("rwDe-W");
      integerArray0[2] = integer3;
      Integer integer4 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer5 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer.sum((int) integer3, (int) integer3);
      Integer.compareUnsigned((-2), 0);
      Integer integer6 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[3] = integer6;
      Integer.sum((int) integer3, (int) integer3);
      Integer integer7 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer.max((-2), (int) integer3);
      Integer integer8 = JLayeredPane.DEFAULT_LAYER;
      Integer integer9 = JLayeredPane.PALETTE_LAYER;
      Integer integer10 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer.getInteger("", integer9);
      Integer.getInteger("_#I-fm6CRP>,\"(Mfpb", integer8);
      Integer.compare((int) integer3, (int) integer3);
      Integer.sum((int) integer3, (int) integer3);
      Integer.getInteger("_#I-fm6CRP>,\"(Mfpb");
      Integer integer11 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer.getInteger("zc", (-2));
      Integer integer12 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer13 = JLayeredPane.POPUP_LAYER;
      Integer.compare((-2), (int) integer3);
      Integer.divideUnsigned((-2), (int) integer3);
      Integer integer14 = JLayeredPane.FRAME_CONTENT_LAYER;
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(0, 0, false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.ensureCapacity(568);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack1.add((VisualPageListItem) null);
      visualListModel0.data = (Vector<VisualPageListItem>) stack1;
      AffineTransform affineTransform0 = new AffineTransform();
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      assertEquals(1, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.9289738521096165
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      DefaultComboBoxModel<Object> defaultComboBoxModel0 = new DefaultComboBoxModel<Object>();
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      PriorityQueue<String> priorityQueue0 = new PriorityQueue<String>();
      Vector<String> vector0 = new Vector<String>(priorityQueue0);
      JComboBox<String> jComboBox1 = new JComboBox<String>(vector0);
      defaultComboBoxModel0.removeListDataListener(jComboBox1);
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      defaultComboBoxModel0.addListDataListener(jComboBox0);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      jComboBox0.removeKeyListener((KeyListener) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      StyledEditorKit.UnderlineAction styledEditorKit_UnderlineAction0 = new StyledEditorKit.UnderlineAction();
      AffineTransform affineTransform0 = new AffineTransform();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "UkiKxdNtPXH 8SEf9 [");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "H&}iUy{#6E");
      Vector<String> vector1 = new Vector<String>();
      JComboBox<String> jComboBox2 = new JComboBox<String>(vector1);
      PopupMenuListener popupMenuListener0 = mock(PopupMenuListener.class, new ViolatedAssumptionAnswer());
      jComboBox2.getGraphicsConfiguration();
      jComboBox2.addPopupMenuListener(popupMenuListener0);
      visualListModel0.removeElements(1805, (-160), false);
      visualListModel0.removeElements((-2268), (-160), false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Integer[] integerArray0 = new Integer[10];
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      integerArray0[1] = integer0;
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      Integer integer3 = Integer.getInteger("rwDe-W", (int) integerArray0[1]);
      Integer.getInteger("rwDe-W");
      integerArray0[2] = integer3;
      Integer integer4 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer5 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer.sum((int) integer3, (int) integer3);
      Integer integer6 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[3] = integer3;
      Integer.sum((int) integer3, (int) integer3);
      Integer integer7 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer.max((-2), (int) integer3);
      Integer integer8 = JLayeredPane.DEFAULT_LAYER;
      Integer integer9 = JLayeredPane.PALETTE_LAYER;
      Integer.min(1, (-1));
      Integer.getInteger("", integer9);
      Integer.getInteger("_#I-fm6CRP>,\"(Mfpb", integer8);
      Integer.compare((int) integer3, (int) integer3);
      Integer.sum((int) integer3, (int) integer3);
      Integer integer10 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer.getInteger("c", (-2));
      Integer.getInteger("rwDe-W");
      Integer integer11 = JLayeredPane.POPUP_LAYER;
      Integer.compare((-2), (int) integer3);
      Integer.divideUnsigned((-2), (int) integer3);
      Integer integer12 = JLayeredPane.POPUP_LAYER;
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel0 = new VisualListModel();
      List<VisualPageListItem> list0 = visualListModel0.getValidElements();
      assertNull(list0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-896));
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " xn;xsJ$");
      visualListModel0.subList((-896), (-896));
      byteArray0[0] = (byte) (-63);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Stack<String> stack0 = new Stack<String>();
      visualListModel0.moveDownIndex((byte) (-63));
      visualListModel0.moveUpIndex(2340);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-896), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -896
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.5100200881344885
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction0 = new DefaultEditorKit.DefaultKeyTypedAction();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Integer integer1 = new Integer((-2229));
      Integer.sum((-1), (-1));
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      ComponentListener componentListener1 = AWTEventMulticaster.add(componentListener0, componentListener0);
      AWTEventMulticaster.remove(componentListener1, componentListener1);
      ComponentListener componentListener2 = AWTEventMulticaster.add((ComponentListener) null, componentListener1);
      AWTEventMulticaster.remove(componentListener2, componentListener2);
      AWTEventMulticaster.remove((ComponentListener) null, componentListener1);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, componentListener1);
      AWTEventMulticaster.remove(componentListener2, componentListener2);
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "_fr<18:jw:KV/`&J");
      visualListModel0.subList((-1), 9);
      int[] intArray0 = new int[2];
      intArray0[0] = (-934);
      visualListModel1.rotateClockwiseElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.moveUpIndexes(intArray0);
      visualListModel2.moveDownIndexes(intArray0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel2.rotateAnticlockwiseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel2.reverseElements(intArray0);
      assertFalse(visualListModel2.equals((Object)visualListModel1));
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Integer[] integerArray0 = new Integer[10];
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer1 = JLayeredPane.PALETTE_LAYER;
      integerArray0[1] = integer0;
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      Integer integer3 = Integer.getInteger("Appender \"", (int) integerArray0[1]);
      Integer.getInteger("Appender \"");
      integerArray0[2] = integer3;
      Integer integer4 = JLayeredPane.MODAL_LAYER;
      Integer integer5 = IIPResolutionDescriptor.MAX_RESOLUTION;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer.sum((int) integer3, (int) integer3);
      Integer integer6 = FPXDescriptor.MAX_RESOLUTION;
      Integer.getInteger("WQ", integer6);
      Integer.toUnsignedString((int) integer3);
      integerArray0[3] = integer4;
      Integer integer7 = new Integer((int) integer3);
      Boolean boolean0 = new Boolean("q!Rz$T{C Gu?6");
      Integer integer8 = new Integer((int) integerArray0[3]);
      Integer.sum((int) integer3, (int) integerArray0[3]);
      Integer integer9 = new Integer(199);
      Integer.max((-2), (int) integer3);
      Integer.compare((int) integerArray0[3], (int) integerArray0[3]);
      Integer.sum((-2), (int) integerArray0[3]);
      Integer integer10 = new Integer(198);
      Integer.getInteger("Appender \"");
      Integer.divideUnsigned((int) integer3, 1207);
      Integer.getInteger("WQ", (Integer) null);
      Integer.compare(198, (int) integer3);
      Integer.divideUnsigned(199, (int) integer3);
      integerArray0[4] = null;
      Integer integer11 = FPXDescriptor.MAX_RESOLUTION;
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.removeElements(intArray0, (boolean) boolean0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      JList<VisualPageListItem> jList0 = new JList<VisualPageListItem>(visualListModel0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      PriorityQueue<VisualPageListItem> priorityQueue1 = new PriorityQueue<VisualPageListItem>(priorityQueue0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      jList0.getLastVisibleIndex();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      Point point0 = new Point((-1), (-1));
      point0.move(1603, (-1));
      ScrollPane scrollPane0 = null;
      try {
        scrollPane0 = new ScrollPane(1603);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      Boolean boolean0 = new Boolean(false);
      linkedHashSet0.add((VisualPageListItem) null);
      LinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList((-5), (-5), true);
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction0 = new DefaultEditorKit.DefaultKeyTypedAction();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Integer integer1 = new Integer((-2229));
      Integer.sum((-1), (-1));
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      ComponentListener componentListener1 = AWTEventMulticaster.add(componentListener0, componentListener0);
      AWTEventMulticaster.remove(componentListener1, componentListener1);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) null, componentListener1);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster0, componentListener1);
      AWTEventMulticaster.remove((ComponentListener) null, componentListener1);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster1, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add(componentListener1, (ComponentListener) aWTEventMulticaster0);
      JTextField jTextField0 = new JTextField("t5 'wg^D~");
      MouseEvent mouseEvent0 = new MouseEvent(jTextField0, (-934), (-1849L), (-1646), (-2), (-2), (-631), false);
      // Undeclared exception!
      try { 
        aWTEventMulticaster0.mousePressed(mouseEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // codegen.java.awt.event.ComponentListener$MockitoMock$241360981 cannot be cast to java.awt.event.MouseListener
         //
         verifyException("java.awt.AWTEventMulticaster", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.subList(10, (-31), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(10) > toIndex(-31)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(componentListener0, componentListener0);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      Boolean boolean0 = new Boolean(false);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(1806, (-1), false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction0 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedAction0.actionPerformed((ActionEvent) null);
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel0 = new VisualListModel();
      List<VisualPageListItem> list0 = new Stack<VisualPageListItem>();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 843, true);
      assertNull(collection0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Integer[] integerArray0 = new Integer[10];
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer1 = JLayeredPane.PALETTE_LAYER;
      integerArray0[1] = integer0;
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      Integer integer3 = Integer.getInteger("rwDe-W", (int) integerArray0[1]);
      Integer.getInteger("rwDe-W");
      integerArray0[2] = integer3;
      Integer integer4 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer5 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer.sum((int) integer3, (int) integer3);
      Integer integer6 = FPXDescriptor.MAX_RESOLUTION;
      Integer.getInteger("", integer6);
      integerArray0[3] = integer4;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Integer integer7 = new Integer((int) integer3);
      Integer.sum((int) integer3, (int) integer3);
      Integer integer8 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer.max((-2), (int) integer3);
      Integer.compare(646, 646);
      Integer.sum(646, (int) integer3);
      Integer integer9 = new Integer((-2));
      Integer.getInteger("rwDe-W");
      Integer.getInteger("", (Integer) null);
      Integer.compare(645, (int) integer3);
      Integer.divideUnsigned(646, (int) integer3);
      integerArray0[4] = null;
      Integer integer10 = FPXDescriptor.MAX_RESOLUTION;
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.removeElements(0, 1, false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.4993646124305886
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(11);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      Object[] objectArray0 = new Object[23];
      objectArray0[0] = (Object) " xn;xsJ$";
      objectArray0[1] = (Object) pdfGraphics2D_HyperLinkKey0;
      objectArray0[2] = (Object) null;
      objectArray0[3] = (Object) null;
      objectArray0[4] = (Object) pdfGraphics2D_HyperLinkKey0;
      objectArray0[5] = (Object) null;
      objectArray0[6] = (Object) null;
      objectArray0[7] = (Object) null;
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(objectArray0);
      jComboBox0.setAlignmentY(11);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addListDataListener(jComboBox0);
      visualListModel0.moveUpIndex(11);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Proxy.Type[] proxy_TypeArray0 = new Proxy.Type[6];
      Proxy.Type proxy_Type0 = Proxy.Type.SOCKS;
      proxy_TypeArray0[0] = proxy_Type0;
      Proxy.Type proxy_Type1 = Proxy.Type.HTTP;
      proxy_TypeArray0[1] = proxy_Type1;
      Proxy.Type proxy_Type2 = Proxy.Type.DIRECT;
      proxy_TypeArray0[2] = proxy_Type2;
      Proxy.Type proxy_Type3 = Proxy.Type.SOCKS;
      proxy_TypeArray0[3] = proxy_Type3;
      proxy_TypeArray0[4] = proxy_Type2;
      Proxy.Type proxy_Type4 = Proxy.Type.DIRECT;
      proxy_TypeArray0[5] = proxy_Type4;
      Proxy.Type.values();
      int[] intArray0 = new int[1];
      intArray0[0] = (-1);
      visualListModel0.removeElements(intArray0, false);
      assertArrayEquals(new int[] {(-1)}, intArray0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(0);
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " xn;xsJ$");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      visualListModel0.moveUpIndex(0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Proxy.Type[] proxy_TypeArray0 = new Proxy.Type[6];
      Proxy.Type proxy_Type0 = Proxy.Type.SOCKS;
      proxy_TypeArray0[0] = proxy_Type0;
      Proxy.Type proxy_Type1 = Proxy.Type.HTTP;
      proxy_TypeArray0[1] = proxy_Type1;
      Proxy.Type proxy_Type2 = Proxy.Type.DIRECT;
      proxy_TypeArray0[2] = proxy_Type2;
      Proxy.Type proxy_Type3 = Proxy.Type.SOCKS;
      proxy_TypeArray0[3] = proxy_Type3;
      Proxy.Type proxy_Type4 = Proxy.Type.DIRECT;
      proxy_TypeArray0[4] = proxy_Type4;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Integer.compare(44, Integer.MIN_VALUE);
      Integer.divideUnsigned((-1262), (-4241));
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      int[] intArray0 = new int[0];
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.elementsChanged();
      visualListModel2.reverseElements(intArray0);
      assertEquals(0, intArray0.length);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.646084939249829
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(3278);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.reverseElements(intArray0);
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey3 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey4 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey5 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey6 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      HashMap<Object, VisualPageListItem> hashMap0 = new HashMap<Object, VisualPageListItem>();
      Collection<VisualPageListItem> collection0 = hashMap0.values();
      visualListModel0.appendAllElements(collection0);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey7 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey8 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey9 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey10 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey11 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey[] pdfGraphics2D_HyperLinkKeyArray0 = new PdfGraphics2D.HyperLinkKey[3];
      pdfGraphics2D_HyperLinkKeyArray0[0] = pdfGraphics2D_HyperLinkKey0;
      pdfGraphics2D_HyperLinkKeyArray0[1] = pdfGraphics2D_HyperLinkKey10;
      pdfGraphics2D_HyperLinkKeyArray0[2] = pdfGraphics2D_HyperLinkKey3;
      stack0.toArray(pdfGraphics2D_HyperLinkKeyArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = 3278;
      visualListModel1.moveDownIndexes(intArray1);
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray1);
      assertFalse(visualListModel0.equals((Object)visualListModel1));
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.7039917864324614
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      JList<VisualPageListItem> jList0 = new JList<VisualPageListItem>(visualListModel0);
      jList0.getLastVisibleIndex();
      DebugGraphics debugGraphics0 = new DebugGraphics((Graphics) null);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      // Undeclared exception!
      try { 
        visualListModel0.appendAllElements(vector0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // bitIndex < 0: -1
         //
         verifyException("java.util.BitSet", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<String> vector0 = new Vector<String>();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Object object0 = visualListModel0.getElementAt(0);
      assertNull(object0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(0, 0, false);
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction0 = new DefaultEditorKit.DefaultKeyTypedAction();
      Integer integer0 = new Integer((-2229));
      Integer integer1 = new Integer(0);
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      ComponentListener componentListener1 = AWTEventMulticaster.add(componentListener0, componentListener0);
      ComponentListener componentListener2 = AWTEventMulticaster.add(componentListener1, componentListener1);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-96);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)49;
      byteArray0[3] = (byte) (-37);
      ImageIcon imageIcon0 = new ImageIcon(byteArray0);
      JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem("org.pdfsam.guiclient.commons.models.VisualListModel", imageIcon0);
      MenuElement[] menuElementArray0 = new MenuElement[5];
      menuElementArray0[0] = (MenuElement) jRadioButtonMenuItem0;
      menuElementArray0[1] = (MenuElement) jRadioButtonMenuItem0;
      menuElementArray0[2] = (MenuElement) jRadioButtonMenuItem0;
      menuElementArray0[3] = (MenuElement) jRadioButtonMenuItem0;
      menuElementArray0[4] = (MenuElement) jRadioButtonMenuItem0;
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(jRadioButtonMenuItem0, (-380), (-1197L), 12, (-2229), (byte) (-1), (-1546), true, menuElementArray0, menuSelectionManager0);
      componentListener2.componentHidden(menuDragMouseEvent0);
      AWTEventMulticaster.add(componentListener2, componentListener1);
      AWTEventMulticaster.remove(componentListener1, componentListener1);
      ImageIcon imageIcon1 = null;
      try {
        imageIcon1 = new ImageIcon((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name can't be null
         //
         verifyException("java.io.FilePermission", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      boolean boolean0 = true;
      visualListModel0.subList(0, 0, true);
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction0 = new DefaultEditorKit.DefaultKeyTypedAction();
      int int1 = (-2229);
      int int2 = (-934);
      Integer integer0 = new Integer((-2229));
      Integer integer1 = new Integer(0);
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      ComponentListener componentListener1 = AWTEventMulticaster.add(componentListener0, componentListener0);
      ComponentListener componentListener2 = AWTEventMulticaster.add(componentListener1, componentListener1);
      AWTEventMulticaster.add(componentListener2, componentListener1);
      AWTEventMulticaster.remove(componentListener1, componentListener1);
      ImageIcon imageIcon0 = null;
      try {
        imageIcon0 = new ImageIcon((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name can't be null
         //
         verifyException("java.io.FilePermission", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.171218111933964
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(0);
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " xn;xsJ$");
      visualListModel0.subList(0, 0);
      byteArray0[0] = (byte) (-63);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Stack<String> stack0 = new Stack<String>();
      visualListModel0.moveDownIndex((byte) (-63));
      visualListModel0.moveUpIndex(2340);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Proxy.Type[] proxy_TypeArray0 = new Proxy.Type[6];
      Proxy.Type proxy_Type0 = Proxy.Type.SOCKS;
      proxy_TypeArray0[0] = proxy_Type0;
      Proxy.Type proxy_Type1 = Proxy.Type.HTTP;
      proxy_TypeArray0[1] = proxy_Type1;
      Proxy.Type proxy_Type2 = Proxy.Type.DIRECT;
      proxy_TypeArray0[2] = proxy_Type2;
      Proxy.Type proxy_Type3 = Proxy.Type.SOCKS;
      proxy_TypeArray0[3] = proxy_Type3;
      Proxy.Type proxy_Type4 = Proxy.Type.SOCKS;
      proxy_TypeArray0[4] = proxy_Type4;
      Proxy.Type proxy_Type5 = Proxy.Type.DIRECT;
      proxy_TypeArray0[5] = proxy_Type5;
      // Undeclared exception!
      try { 
        visualListModel0.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      visualListModel0.addListDataListener(jComboBox0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-358), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -358
         //
         verifyException("java.util.Vector", e);
      }
  }
}
