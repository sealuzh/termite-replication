/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 01:29:51 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = (-2192);
      String string0 = "L]Aic!";
      Player player0 = new Player((-2192), "L]Aic!", (-2192));
      Party party0 = new Party(4);
      party0.remove(player0);
      party0.id = 2;
      player0.boss = party0;
      boolean boolean0 = true;
      player0.setConnected(true);
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.888488895463434
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[11];
      byteArray0[0] = (byte)1;
      Player player1 = new Player((-1817));
      player0.setJoinOK(player1, true);
      byteArray0[1] = (byte) (-102);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-102);
      player1.setZ(1649.7698F);
      byteArray0[5] = (byte) (-120);
      player0.setMoney((-77.1F));
      player0.isJoinOK(player1, true);
      player1.setY((byte) (-102));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("tae.Payer");
      DataOutputStream dataOutputStream1 = new DataOutputStream(pipedOutputStream0);
      player1.pack(dataOutputStream0);
      Player player2 = new Player();
      player1.pack();
      player1.getY();
      float float0 = player1.getZ();
      assertEquals((-102.0F), player1.getY(), 0.01F);
      assertEquals(1649.7698F, float0, 0.01F);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.7268441941800825
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[11];
      byteArray0[0] = (byte)1;
      Player player1 = new Player((-1817));
      player0.setJoinOK(player1, true);
      byteArray0[1] = (byte) (-102);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-102);
      player1.setZ(1649.7698F);
      byteArray0[5] = (byte) (-120);
      player0.setMoney((-77.1F));
      player0.isJoinOK(player1, true);
      player1.setY((byte) (-102));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("tae.Payer");
      DataOutputStream dataOutputStream1 = new DataOutputStream(pipedOutputStream0);
      player1.pack(dataOutputStream0);
      Player player2 = new Player();
      player1.getY();
      player1.getZ();
      boolean boolean0 = player2.isJoinOK(player1, false);
      assertEquals((-102.0F), player1.getY(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.9727115278367817
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "hMIlyF)$IV)@");
      Player player0 = new Player(237, "hMIlyF)$IV)@", "hMIlyF)$IV)@", (-336), 237);
      System.setCurrentTimeMillis((short)4919);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player1 = new Player(237, (String) null, (String) null, 148);
      player0.pack();
      player1.getIP();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Player player2 = new Player(237, "", "", (-2757));
      player2.remove(player0);
      player2.setJoinOK(player0, false);
      int int0 = player2.type();
      assertEquals(5, int0);
      
      float float0 = player1.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      boolean boolean0 = player0.isJoinOK(player2, false);
      assertFalse(boolean0);
      
      player0.pack();
      assertEquals(237, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals((-336), player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.973176228217073
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(2589);
      player0.setJoinOK(player0, true);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-102);
      byteArray0[1] = (byte) (-102);
      byteArray0[2] = (byte)107;
      byteArray0[3] = (byte)0;
      player0.unpack(byteArray0);
      player0.isDead();
      player0.setDead((long) (byte) (-102));
      player0.setMoney(0.0F);
      player0.isJoinOK(player0, true);
      MockPrintStream mockPrintStream0 = new MockPrintStream("state.Player");
      mockPrintStream0.println(1552);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("gui.ModuleBrowserDialog$ModuleFilter");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      player0.pack();
      mockFileOutputStream0.getChannel();
      player0.pack();
      player0.getTimeOfDeath();
      DataOutputStream dataOutputStream1 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream1);
      System.setCurrentTimeMillis(2589);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.099501544769486
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(2147340491, "Z", "Z", (-74), (-10122));
      byte[] byteArray0 = new byte[6];
      player0.setDead();
      player0.getSubparty();
      byteArray0[0] = (byte) (-101);
      byteArray0[1] = (byte) (-52);
      byteArray0[2] = (byte) (-102);
      byteArray0[3] = (byte)93;
      byteArray0[4] = (byte)39;
      player0.setY((-74));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "B_(`a1l");
      byteArray0[5] = (byte)2;
      player0.unpack(byteArray0);
      player0.getIP();
      player0.gangStrength();
      player0.type();
      player0.getTimeOfDeath();
      System.setCurrentTimeMillis((byte) (-101));
      System.setCurrentTimeMillis(5);
      int int0 = player0.type();
      assertEquals((-74.0F), player0.getY(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.6401461330725327
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      Player player0 = new Player();
      player0.setX((-1.0F));
      String string0 = "module.ModuleBrowserDialog$ModuleFilter";
      Player player1 = new Player((short)4919, "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 4, (short)4919);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.head = (Party) player1;
      player0.gangStrength();
      player0.getX();
      player0.type();
      MockFile mockFile0 = new MockFile("module.ModuleBrowserDialog$ModuleFilter");
      mockFile0.createNewFile();
      mockFile0.setWritable(false);
      MockFileOutputStream mockFileOutputStream0 = null;
      try {
        mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.4435896416877303
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[14];
      byteArray0[0] = (byte)1;
      player0.setJoinOK(player0, true);
      byteArray0[3] = (byte)0;
      player0.isJoinOK(player0, true);
      byteArray0[4] = (byte) (-58);
      byteArray0[5] = (byte) (-58);
      player0.setMoney((-3586.9187F));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0, true);
      PipedInputStream pipedInputStream1 = new PipedInputStream((byte)1);
      mockPrintStream0.print((Object) pipedInputStream1);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      dataOutputStream0.write(byteArray0, (int) (byte)0, 5);
      player0.pack(dataOutputStream0);
      float float0 = player0.getMoney();
      assertEquals((-3586.9187F), float0, 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      System.setCurrentTimeMillis(0L);
      Player player0 = new Player();
      player0.setZ((-1889.2596F));
      player0.type();
      player0.getY();
      player0.getZ();
      player0.pack();
      float float0 = Player.MOVE_DISTANCE;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(29, byteArrayOutputStream0.size());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object[] objectArray0 = new Object[20];
      Object object0 = new Object();
      objectArray0[3] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      objectArray0[2] = (Object) "yw";
      Player player0 = new Player(853, "wMOIVMULl\"6Wbc[^K9z", "wMOIVMULl\"6Wbc[^K9z", (-25877));
      player0.getSubparty();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(0);
      player0.pack();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("XJL3");
      mockPrintStream0.append((CharSequence) "XJL3");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(dataOutputStream0);
      Player player1 = new Player(4919, "w;;{1KY5,l5g x}n]Gf", "w;;{1KY5,l5g x}n]Gf", 0, 0);
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertFalse(boolean0);
      
      int int0 = player1.getStrength();
      assertEquals(0, int0);
      
      String string0 = player0.getIP();
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", string0);
      assertEquals("Player0", player0.getName());
      
      float float0 = player1.getZ();
      assertEquals(0, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals(0.0F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player((-413));
      player0.setConnected(false);
      Party party0 = new Party((short)4919);
      player0.head = party0;
      player0.setX((-413));
      player0.getTimeOfDeath();
      System.setCurrentTimeMillis(2034L);
      player0.isConnected();
      Player player1 = new Player();
      player0.isJoinOK(player1, false);
      assertEquals((-413.0F), player0.getX(), 0.01F);
      
      int int0 = player1.gangStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)112;
      byteArray0[1] = (byte)36;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte)13;
      Party party0 = player0.head;
      player0.boss = null;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)10;
      byteArray0[6] = (byte) (-8);
      byteArray0[7] = (byte)55;
      player0.unpack(byteArray0);
      player0.getSubparty();
      player0.getSubparty();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.970620935502287
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(4919, "module.ModuleBrowserDialog$ModuleFilter", 4919);
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      Player player1 = new Player((short)4919);
      player1.setJoinOK(player0, true);
      byte byte0 = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark(0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      player1.unpack(dataInputStream1);
      player1.setDead((long) (short)4919, true);
      player0.getStrength();
      player1.getIP();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      DataOutputStream dataOutputStream1 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        dataOutputStream0.writeInt(6682);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.8550964054089625
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(2063, "module.ModuleBrowserDialog$ModuleFilter", (-2677));
      player0.setY(2063);
      player0.id = (-1800);
      Player player1 = new Player((-2294));
      player1.remove(player0);
      player0.setDead(1L, false);
      player0.setDead(0L, true);
      player0.isConnected();
      player1.getTimeOfDeath();
      player0.getMoney();
      player0.gangStrength();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      player1.remove((Party) null);
      player0.isConnected();
      Player player2 = new Player(3, "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 307);
      player2.isJoinOK(player1, true);
      player2.getMoney();
      float float0 = player0.getY();
      assertFalse(player0.isDead());
      assertEquals(2063.0F, float0, 0.01F);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.884381759284857
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Player player0 = new Player((-717), "", "", (-887));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(4919);
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      player0.getIP();
      player0.getY();
      player0.getIP();
      Party party0 = new Party();
      player0.add(party0);
      System.setCurrentTimeMillis(1168L);
      player0.getZ();
      player0.getX();
      Player player1 = new Player((-717), "", (String) null, (-887));
      player0.prev = (Party) player1;
      Player player2 = new Player((short)4919);
      player2.setZ((-1.0F));
      player0.isJoinOK(player2, false);
      player1.isJoinOK(player0, false);
      player2.pack();
      assertEquals((-1.0F), player2.getZ(), 0.01F);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.360365006943756
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead(1392409296320L);
      player0.setX(1777.0F);
      Player player1 = new Player();
      player0.setDead(2079L, false);
      player1.gangStrength();
      player1.setY(530.72766F);
      Player player2 = new Player((short)4919, "_q,_9M9", (String) null, (short)4919, (-2624));
      player2.getStrength();
      player0.getIP();
      player1.reset(false);
      player1.getName();
      player0.setZ(530.72766F);
      player2.toString();
      player0.type();
      System.setCurrentTimeMillis((short)4919);
      boolean boolean0 = player0.isJoinOK(player2, true);
      assertEquals(2079L, player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      Object object0 = new Object();
      objectArray0[3] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      objectArray0[2] = (Object) "";
      Player player0 = new Player(36, "S\"@;kyek/E`b[", 5);
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      Object object0 = new Object();
      objectArray0[3] = (Object) "sXXv";
      Object object1 = new Object();
      objectArray0[3] = object1;
      objectArray0[0] = (Object) "sXXv";
      Player player0 = new Player(2, (String) null, 2);
      int int0 = Packable.GAME_EVENT;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)20;
      player0.unpack(byteArray0);
      int int1 = Packable.GAME_EVENT;
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockFile mockFile0 = new MockFile(" ", " ");
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFile mockFile1 = new MockFile(mockFile0, " ");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile1, true);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      Player player0 = new Player();
      player0.pack();
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-118);
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)70;
      byteArray0[3] = (byte)10;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)2;
      byteArray0[6] = (byte)102;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      player0.setJoinOK(player0, false);
      player0.isJoinOK(player0, false);
      PipedInputStream pipedInputStream0 = new PipedInputStream(2589);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedInputStream pipedInputStream2 = new PipedInputStream(2589);
      // Undeclared exception!
      try { 
        pipedInputStream2.read((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.InputStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.9138518014559747
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player(2589);
      Player player1 = new Player((short)4919, "gui.ModuleBrowserDialog$ModuleFilter", "gui.ModuleBrowserDialog$ModuleFilter", (byte) (-102), (short)4919);
      player0.setJoinOK(player1, true);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-102);
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)107;
      player0.isDead();
      player1.isDead();
      player1.setDead(1392409281320L);
      player0.setMoney((byte) (-102));
      player0.isJoinOK(player1, true);
      player1.isDead();
      MockPrintStream mockPrintStream0 = new MockPrintStream("-mX5H#O");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      DataOutputStream dataOutputStream1 = new DataOutputStream(mockPrintStream0);
      player0.pack(dataOutputStream1);
      Player player2 = new Player(2589, "46iN[8T1=k_$zO>e.4~", "module.ModuleBrowserDialog$ModuleFilter", (byte) (-102));
      player1.pack();
      boolean boolean0 = player2.isJoinOK(player1, false);
      assertEquals(1392409281320L, player1.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.301608716407634
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player((byte) (-102));
      Player player1 = new Player(2958, "gui.ModuleBrowserDialog$ModuleFilter", "gui.ModuleBrowserDialog$ModuleFilter", (-1372), (byte) (-102));
      player0.setJoinOK(player1, false);
      player0.isJoinOK(player1, false);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedInputStream pipedInputStream2 = new PipedInputStream(1837);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream1);
      pipedOutputStream0.write(1404);
      pipedOutputStream0.flush();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      pipedOutputStream1.close();
      System.setCurrentTimeMillis((byte) (-102));
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, true);
      player0.isJoinOK(player0, false);
      PipedInputStream pipedInputStream0 = new PipedInputStream(5);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedInputStream pipedInputStream2 = new PipedInputStream(5);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream2);
      pipedOutputStream0.flush();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream(pipedInputStream1);
      PipedInputStream pipedInputStream3 = null;
      try {
        pipedInputStream3 = new PipedInputStream(pipedOutputStream1);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.973278742811257
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)1;
      Player player1 = new Player((-1817));
      player0.setJoinOK(player1, true);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-58);
      Player player2 = new Player((byte)1, "`", "`", (byte) (-58));
      player2.remove(player0);
      player2.isConnected();
      Player player3 = new Player((byte)1, "}.75eODZWrP?S@BSXH", "`", (byte)1);
      player0.setMoney(3405.375F);
      Player player4 = new Player((byte) (-58), "}.75eODZWrP?S@BSXH", (String) null, (short)4919, (-2912));
      player0.isJoinOK(player4, true);
      player0.getMoney();
      player2.getY();
      boolean boolean0 = player0.isJoinOK(player4, true);
      assertEquals(3405.375F, player0.getMoney(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.943159814531569
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(0, "(F>;MBZp", 5);
      player0.gangStrength();
      player0.setDead();
      player0.pack();
      player0.setDead((long) 5);
      player0.setZ((-921.9387F));
      player0.getPictureId();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      player0.unpack(dataInputStream0);
      player0.setMoney(5);
      player0.getName();
      MockFile mockFile0 = new MockFile("(F>;MBZp");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      mockFileOutputStream0.release();
      Party party0 = new Party();
      player0.remove(party0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      dataOutputStream0.write(1);
      player0.pack(dataOutputStream0);
      assertEquals(5L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Party party0 = new Party();
      party0.getSubparty();
      party0.getSubparty();
      Player player0 = new Player(4, (String) null, (String) null, 4, 0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      byteArrayOutputStream0.close();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player();
      player0.getZ();
      player0.setZ(0.0F);
      player0.remove((Party) null);
      player0.setZ((-2700.456F));
      player0.reset(true);
      player0.getPictureId();
      player0.setDead((long) 0, true);
      int int0 = player0.type();
      assertEquals((-2700.456F), player0.getZ(), 0.01F);
      assertEquals(5, int0);
      
      int int1 = player0.type();
      assertEquals((-2700.456F), player0.getZ(), 0.01F);
      assertEquals(5, int1);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(4, "", "", (-437));
      player0.getPictureId();
      player0.pack();
      player0.getY();
      player0.getY();
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("Mv7j!OO(]HEQ2&@+n");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte byte0 = (byte) (-102);
      Player player0 = new Player(2589);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(0);
      assertEquals("Player0", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      
      byte[] byteArray0 = new byte[1];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/27_gangup");
      FileSystemHandling.createFolder(evoSuiteFile0);
      byteArray0[0] = (byte)3;
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      int int0 = Packable.ACTION;
      Player player1 = new Player(0, "<DUHRVN=", "", 2147340491);
      int int1 = player1.getStrength();
      assertTrue(player1.isConnected());
      assertEquals(1, int1);
      assertEquals("<DUHRVN=", player1.getIP());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(2147340491, player1.getPictureId());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      Object object0 = new Object();
      objectArray0[3] = object0;
      Object object1 = new Object();
      objectArray0[3] = object1;
      objectArray0[0] = (Object) "";
      Player player0 = new Player(36, "s$1^5kl?L{ikM", 2147340491);
      player0.setConnected(false);
      int int0 = Packable.GAME_EVENT;
      int int1 = Packable.GAME_EVENT;
      System.setCurrentTimeMillis(3);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.175307026797448
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(4919, "module.ModuleBrowserDialog$ModuleFilter", 4919);
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      player0.setDead((-3278L));
      player0.setX(0.0F);
      Player player1 = new Player();
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)1;
      byteArray1[1] = (byte) (-105);
      player1.gangStrength();
      player0.getZ();
      Player player2 = new Player(0, "module.ModuleBrowserDialog$ModuleFilter", ".*[.]class$", 10);
      player1.getZ();
      player2.pack();
      player2.getStrength();
      float float0 = player0.getX();
      assertEquals((-3278L), player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(4919, "", "", 4919);
      player0.getStrength();
      int int0 = player0.type();
      assertEquals(5, int0);
      
      System.setCurrentTimeMillis(1L);
      player0.getName();
      int int1 = player0.getStrength();
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, int1);
      assertEquals(4919, player0.getPictureId());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.6467142775717116
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, "state.Player$JoinInfo", "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", (-1795), 0);
      player1.setX(0.2F);
      player0.getIP();
      player1.gangStrength();
      player1.getZ();
      assertEquals(0.2F, player1.getX(), 0.01F);
      
      Player player2 = new Player(3798, ".*[.]class$", "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", (-1795));
      float float0 = player2.getZ();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("`8:*mkO@:M*lU;J");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "X\"@PDX^NF+1xt+");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("`8:*mkO@:M*lU;J");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      Player player0 = new Player(5, "state.Party", "`8:*mkO@:M*lU;J", 1150, 3700);
      System.setCurrentTimeMillis((byte)0);
      int int0 = player0.gangStrength();
      assertEquals(3700, int0);
      assertEquals(1150, player0.getPictureId());
      
      Player player1 = new Player();
      assertEquals("Player-1", player1.toString());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertTrue(player1.isConnected());
      assertFalse(player1.isDead());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      Object object0 = new Object();
      objectArray0[3] = object0;
      Object object1 = new Object();
      objectArray0[3] = object1;
      objectArray0[0] = (Object) "";
      Player player0 = new Player(4919, "S\"@;kyek/E`b[", (-461));
      player0.setMoney(0.0F);
      int int0 = Packable.GAME_EVENT;
      assertEquals(3, int0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player((-1343), "|", (-1343));
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Player player0 = new Player(36, "s$1^5kl?L{ikM", 2147340491);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      player0.unpack(dataInputStream0);
      System.setCurrentTimeMillis(3362L);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.124771615329544
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player(806);
      player0.getSubparty();
      player0.id = 2355;
      player0.setDead((-1365L));
      player0.setX(2355);
      Player player1 = new Player();
      player0.boss = (Party) player1;
      player0.setDead(15000L, true);
      player0.setY((-1.0F));
      player0.getStrength();
      player1.setZ(1);
      player0.getIP();
      player0.reset(false);
      player0.getName();
      player0.getX();
      player0.getZ();
      player1.getY();
      float float0 = player1.getX();
      assertEquals(1.0F, player1.getZ(), 0.01F);
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(426, (String) null, 0);
      player0.getName();
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Party party0 = new Party();
      Party party1 = new Party((-24830));
      party1.id = 4919;
      Player player0 = new Player(1100);
      party1.boss = (Party) player0;
      party0.next = party1;
      party0.getSubparty();
      int int0 = Packable.GAME_EVENT;
      int int1 = player0.type();
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player1100", player0.getName());
      assertEquals(5, int1);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player(4919);
      Party party0 = new Party();
      party0.getSubparty();
      party0.getSubparty();
      player0.prev = party0;
      player0.setDead();
      party0.getSubparty();
      party0.add(player0);
      party0.getSubparty();
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.toString();
      player0.pack();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player((-1));
      Player player1 = new Player();
      player0.boss = (Party) player1;
      player0.setDead(1392409281320L, true);
      long long0 = player0.getTimeOfDeath();
      assertEquals(1392409281320L, long0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player(10, "hMIlyF)$IV)@", "R6", 1153, (-1371));
      System.setCurrentTimeMillis(1182L);
      System.setCurrentTimeMillis(1L);
      player0.getX();
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Party party0 = new Party();
      party0.getSubparty();
      Player player0 = new Player((-10), "%/`Ms~e:(jI", (-10));
      player0.reset(false);
      int int0 = Packable.ACTION;
      assertEquals(2, int0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      Object object0 = new Object();
      objectArray0[3] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      objectArray0[2] = (Object) "";
      Player player0 = new Player(36, "S\"@;kyek/E`b[", 5);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)45;
      byteArray0[3] = (byte)99;
      player0.unpack(byteArray0);
      int int0 = Packable.GAME_EVENT;
      assertEquals(3, int0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      Object object0 = new Object();
      objectArray0[3] = object0;
      Object object1 = new Object();
      objectArray0[3] = object1;
      objectArray0[0] = (Object) "";
      Player player0 = new Player(36, "", 2147340491);
      player0.setZ(1.0F);
      int int0 = Packable.GAME_EVENT;
      int int1 = Packable.GAME_EVENT;
      assertTrue(int1 == int0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      Object object0 = new Object();
      objectArray0[3] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      objectArray0[2] = (Object) "";
      Player player0 = new Player(36, "S\"@;kyek/E`b[", (-10));
      player0.reset(true);
      int int0 = Packable.TEXT_MESSAGE;
      assertEquals(1, int0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player((-14694), "", 0);
      player0.setY(1201.6202F);
      player0.setZ(10.0F);
      Object[] objectArray0 = new Object[4];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      objectArray0[2] = (Object) "";
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "gui.ModuleBrowserDialog$ModuleFilter");
      System.setCurrentTimeMillis((-1L));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "mh+T@>7\"Zhqsr d?u@a");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player((-2643), "L/@`m8F#", 1038);
      player0.setDead();
      player0.setDead((-1L));
      int int0 = Packable.GAME_EVENT;
      assertEquals(3, int0);
  }
}
