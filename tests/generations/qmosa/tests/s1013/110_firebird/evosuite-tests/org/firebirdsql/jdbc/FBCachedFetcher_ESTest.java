/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 02:00:44 GMT 2019
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Clob;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.LinkedBlockingDeque;
import java.util.concurrent.SynchronousQueue;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.firebirdsql.gds.DatabaseParameterBuffer;
import org.firebirdsql.gds.GDS;
import org.firebirdsql.gds.XSQLDA;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.AbstractIscTrHandle;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.GDSType;
import org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.jni.LocalGDSImpl;
import org.firebirdsql.gds.impl.wire.EventHandleImp;
import org.firebirdsql.gds.impl.wire.JavaGDSImpl;
import org.firebirdsql.gds.impl.wire.isc_db_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_svc_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_tr_handle_impl;
import org.firebirdsql.jca.FBConnectionRequestInfo;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jdbc.DummyCallableStatementMetaData;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBConnection;
import org.firebirdsql.jdbc.FBDriverNotCapableException;
import org.firebirdsql.jdbc.FBFetcher;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.FBSQLException;
import org.firebirdsql.jdbc.InternalTransactionCoordinator;
import org.firebirdsql.jdbc.field.FBBlobField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      FileSystemHandling.shouldAllThrowIOExceptions();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.getRsr_rdb();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl2.getOutSqlda();
      isc_stmt_handle_impl2.setOutSqlda((XSQLDA) null);
      isc_stmt_handle_impl2.registerTransaction(isc_tr_handle_impl0);
      isc_stmt_handle_impl isc_stmt_handle_impl3 = new isc_stmt_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      isc_stmt_handle_impl0.registerTransaction(isc_tr_handle_impl0);
      isc_stmt_handle_impl isc_stmt_handle_impl4 = new isc_stmt_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl2 = new isc_tr_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl5 = new isc_stmt_handle_impl();
      isc_tr_handle_impl0.unregisterStatementFromTransaction(isc_stmt_handle_impl5);
      isc_stmt_handle_impl4.removeRows();
      isc_stmt_handle_impl3.statement = null;
      isc_stmt_handle_impl isc_stmt_handle_impl6 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl7 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl3.setInsertCount(1371);
      isc_stmt_handle_impl isc_stmt_handle_impl8 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl8.unregisterTransaction();
      isc_stmt_handle_impl8.setDeleteCount(1234);
      System.setCurrentTimeMillis(5);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.first();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.3238614379613667
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl1.getRsr_rdb();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_stmt_handle_impl1.setRsr_rdb(isc_db_handle_impl0);
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_stmt_handle_impl1.registerTransaction((AbstractIscTrHandle) null);
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl2.setDeleteCount(2);
      System.setCurrentTimeMillis(0L);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArrayArray0 = null;
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      linkedList0.listIterator();
      fBCachedFetcher0.updateRow((byte[][]) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.beforeFirst();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[3][9];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[23];
      byteArray2[1] = (byte)100;
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      Integer integer0 = new Integer((-4021));
      databaseParameterBufferImp1.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.deepCopy();
      databaseParameterBufferImp2.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp3.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      EventHandleImp eventHandleImp0 = new EventHandleImp("+i-VNLS-v(");
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute((byte)100);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.537885213635233
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[] byteArray0 = new byte[6];
      byte[][] byteArray1 = new byte[3][2];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      linkedList0.add(byteArray1);
      linkedList0.stream();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " [ForatId=");
      byteArray0[0] = (byte)0;
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[2] = (byte) (-39);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " [ForatId=");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " [ForatId=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      linkedList0.add((byte[][]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " [ForatId=");
      fBCachedFetcher0.relative(4095);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.deleteRow();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.521605162527086
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[9][0];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte) (-9);
      byteArray1[1] = (byte)18;
      byteArray1[2] = (byte) (-39);
      byteArray1[3] = (byte) (-79);
      byteArray1[4] = (byte) (-58);
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList0.add(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "SELECT   RF.RDB$RELATION_NAME as RELATION_NAME, RF.RDB$FIELD_NAME as FIELD_NAME, F.RDB$FIELD_LENGTH as FIELD_LENGTH, F.RDB$FIELD_PRECISION as FIELD_PRECISION, F.RDB$FIELD_SCALE as FIELD_SCALE, F.RDB$FIELD_SUB_TYPE as FIELD_SUB_TYPE, F.RDB$CHARACTER_LENGTH as CHAR_LEN, F.RDB$CHARACTER_SET_ID as CHARACTER_SET_ID FROM  RDB$RELATION_FIELDS RF , RDB$FIELDS F  WHERE   RF.RDB$FIELD_SOURCE = F.RDB$FIELD_NAME AND  RF.RDB$FIELD_NAME = ? AND  RF.RDB$RELATION_NAME = ?");
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.listIterator();
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.deleteRow();
      boolean boolean0 = fBCachedFetcher0.previous();
      assertTrue(fBCachedFetcher0.isFirst());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.3822194921698756
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[] byteArray0 = new byte[6];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " [ForatId=");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[0] = (byte) (-9);
      byteArray0[0] = (byte) (-9);
      FBBlobField[] fBBlobFieldArray0 = new FBBlobField[1];
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      fBBlobFieldArray0[0] = fBBlobField0;
      linkedList0.toArray(fBBlobFieldArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[2] = (byte) (-39);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " [ForatId=");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " [ForatId=");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " [ForatId=");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "bZ,HG)!Qt^D]");
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " [ForatId=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " [ForatId=");
      FileSystemHandling.shouldAllThrowIOExceptions();
      fBCachedFetcher0.deleteRow();
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertTrue(fBCachedFetcher0.isAfterLast());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.9983916035564593
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[5][3];
      linkedList0.add(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.listIterator();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.removeExtensionParams();
      databaseParameterBufferImp0.removeExtensionParams();
      linkedList0.add(byteArray0);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      linkedList1.add((byte[][]) null);
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      linkedList2.add((byte[][]) null);
      FBResultSet fBResultSet1 = new FBResultSet(fBResultSet0.xsqlvars, linkedList0);
      boolean boolean0 = fBCachedFetcher0.absolute((-1));
      assertEquals(0, fBResultSet0.getRow());
      assertTrue(fBCachedFetcher0.isLast());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.3601445521722115
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[9][0];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-9);
      byteArray1[1] = (byte)18;
      byteArray1[2] = (byte) (-39);
      byteArray1[3] = (byte) (-79);
      byteArray1[4] = (byte) (-58);
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList0.add(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "SELECT   RF.RDB$RELATION_NAME as RELATION_NAME, RF.RDB$FIELD_NAME as FIELD_NAME, F.RDB$FIELD_LENGTH as FIELD_LENGTH, F.RDB$FIELD_PRECISION as FIELD_PRECISION, F.RDB$FIELD_SCALE as FIELD_SCALE, F.RDB$FIELD_SUB_TYPE as FIELD_SUB_TYPE, F.RDB$CHARACTER_LENGTH as CHAR_LEN, F.RDB$CHARACTER_SET_ID as CHARACTER_SET_ID FROM  RDB$RELATION_FIELDS RF , RDB$FIELDS F  WHERE   RF.RDB$FIELD_SOURCE = F.RDB$FIELD_NAME AND  RF.RDB$FIELD_NAME = ? AND  RF.RDB$RELATION_NAME = ?");
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.listIterator();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.insertRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isFirst());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.726802768294397
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[0][3];
      linkedList0.add(byteArray0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList1, fBResultSet0);
      FBCachedFetcher fBCachedFetcher2 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher2.isAfterLast();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher1.isLast();
      fBCachedFetcher2.previous();
      fBCachedFetcher2.relative(3097);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher2.isBeforeFirst();
      System.setCurrentTimeMillis(0L);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher1.getRowNum();
      FBCachedFetcher fBCachedFetcher3 = new FBCachedFetcher(linkedList1, fBResultSet0);
      fBCachedFetcher0.isAfterLast();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection((FBManagedConnection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.3885352816435597
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[0][3];
      FileSystemHandling.shouldAllThrowIOExceptions();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      fBCachedFetcher0.insertRow(byteArray0);
      fBCachedFetcher0.isLast();
      FileSystemHandling.shouldAllThrowIOExceptions();
      fBCachedFetcher0.isBeforeFirst();
      linkedList0.add(byteArray0);
      System.setCurrentTimeMillis((-2644L));
      fBCachedFetcher0.deleteRow();
      linkedList0.iterator();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      int int0 = 336330785;
      ThreadPoolExecutor.AbortPolicy threadPoolExecutor_AbortPolicy0 = new ThreadPoolExecutor.AbortPolicy();
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread("Xji9n<_");
      MockThread mockThread1 = new MockThread(threadGroup0, mockThread0);
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      SynchronousQueue<Runnable> synchronousQueue0 = new SynchronousQueue<Runnable>();
      ThreadPoolExecutor threadPoolExecutor0 = null;
      try {
        threadPoolExecutor0 = new ThreadPoolExecutor(4096, 4096, (-2644L), timeUnit0, synchronousQueue0, threadPoolExecutor_AbortPolicy0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ThreadPoolExecutor", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.884867300418826
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedBlockingDeque<byte[][]> linkedBlockingDeque0 = new LinkedBlockingDeque<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.listIterator();
      linkedList0.parallelStream();
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList0.addLast((byte[][]) null);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      linkedList3.addFirst((byte[][]) null);
      linkedList1.add((byte[][]) null);
      linkedList3.add((byte[][]) null);
      FBResultSet fBResultSet1 = new FBResultSet(fBResultSet0.xsqlvars, linkedList1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, fBResultSet0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = fBCachedFetcher0.relative((-40));
      assertFalse(boolean0);
      assertTrue(fBCachedFetcher0.isBeforeFirst());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.8195163165257857
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.deepCopy();
      isc_db_handle_impl0.getOpenTransactionCount();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      Integer integer0 = new Integer((byte) (-41));
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp3.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp5.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      javaGDSImpl0.createEventHandle("f3q9QWUxMvQMvZA &0");
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[3][7];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte) (-41);
      byteArray1[1] = (byte) (-41);
      byteArray1[2] = (byte) (-41);
      byteArray1[3] = (byte) (-41);
      byteArray1[4] = (byte) (-41);
      byteArray1[5] = (byte) (-41);
      byteArray1[6] = (byte) (-41);
      byteArray1[7] = (byte) (-41);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[6];
      byteArray2[0] = (byte) (-41);
      byteArray2[1] = (byte) (-41);
      byteArray2[2] = (byte) (-41);
      byteArray2[3] = (byte) (-41);
      byteArray2[4] = (byte) (-41);
      byteArray2[5] = (byte) (-41);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[8];
      byteArray3[0] = (byte) (-41);
      byteArray3[1] = (byte) (-41);
      byteArray3[2] = (byte) (-41);
      byteArray3[3] = (byte) (-41);
      byteArray3[4] = (byte) (-66);
      byteArray3[5] = (byte) (-41);
      byteArray3[6] = (byte) (-41);
      byteArray3[7] = (byte) (-41);
      byteArray0[2] = byteArray3;
      linkedList1.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.relative(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.9983916035564593
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedBlockingDeque<byte[][]> linkedBlockingDeque0 = new LinkedBlockingDeque<byte[][]>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.listIterator();
      linkedList0.parallelStream();
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList0.addLast((byte[][]) null);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      linkedList3.addFirst((byte[][]) null);
      linkedList1.add((byte[][]) null);
      linkedList3.add((byte[][]) null);
      FBResultSet fBResultSet1 = new FBResultSet(fBResultSet0.xsqlvars, linkedList1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, fBResultSet0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = fBCachedFetcher0.relative((-1));
      assertEquals(1, fBCachedFetcher0.getRowNum());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.995295628324261
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " [ForatId=");
      FBBlobField[] fBBlobFieldArray0 = new FBBlobField[8];
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      fBBlobFieldArray0[0] = fBBlobField0;
      fBBlobFieldArray0[1] = fBBlobField0;
      fBBlobFieldArray0[2] = fBBlobField0;
      fBBlobFieldArray0[3] = fBBlobField0;
      fBBlobFieldArray0[4] = fBBlobField0;
      fBBlobFieldArray0[5] = fBBlobField0;
      fBBlobFieldArray0[6] = fBBlobField0;
      fBBlobFieldArray0[7] = fBBlobField0;
      linkedList0.toArray(fBBlobFieldArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " [ForatId=");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " [ForatId=");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " [ForatId=");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " [ForatId=");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[0][9];
      linkedList1.add(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.absolute(3413);
      assertEquals(2, fBCachedFetcher0.getRowNum());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[0][6];
      linkedList0.add(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      fBCachedFetcher0.isLast();
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator();
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = null;
      try {
        internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator(internalTransactionCoordinator0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.InternalTransactionCoordinator$MetaDataTransactionCoordinator", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.3648713335781606
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[] byteArray0 = new byte[8];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " [ForatId=");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Ta4j'U)6NzZ!?W");
      byteArray0[0] = (byte) (-9);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[2] = (byte) (-39);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " [ForatId=");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " [ForatId=");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " [ForatId=");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " [ForatId=");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " [ForatId=");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "SELECT   RF.RDB$RELATION_NAME as RELATION_NAME, RF.RDB$FIELD_NAME as FIELD_NAME, F.RDB$FIELD_LENGTH as FIELD_LENGTH, F.RDB$FIELD_PRECISION as FIELD_PRECISION, F.RDB$FIELD_SCALE as FIELD_SCALE, F.RDB$FIELD_SUB_TYPE as FIELD_SUB_TYPE, F.RDB$CHARACTER_LENGTH as CHAR_LEN, F.RDB$CHARACTER_SET_ID as CHARACTER_SET_ID FROM  RDB$RELATION_FIELDS RF , RDB$FIELDS F  WHERE   RF.RDB$FIELD_SOURCE = F.RDB$FIELD_NAME AND  RF.RDB$FIELD_NAME = ? AND  RF.RDB$RELATION_NAME = ?");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "SELECT   RF.RDB$RELATION_NAME as RELATION_NAME, RF.RDB$FIELD_NAME as FIELD_NAME, F.RDB$FIELD_LENGTH as FIELD_LENGTH, F.RDB$FIELD_PRECISION as FIELD_PRECISION, F.RDB$FIELD_SCALE as FIELD_SCALE, F.RDB$FIELD_SUB_TYPE as FIELD_SUB_TYPE, F.RDB$CHARACTER_LENGTH as CHAR_LEN, F.RDB$CHARACTER_SET_ID as CHARACTER_SET_ID FROM  RDB$RELATION_FIELDS RF , RDB$FIELDS F  WHERE   RF.RDB$FIELD_SOURCE = F.RDB$FIELD_NAME AND  RF.RDB$FIELD_NAME = ? AND  RF.RDB$RELATION_NAME = ?");
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " [ForatId=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " [ForatId=");
      FileSystemHandling.shouldAllThrowIOExceptions();
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.updateRow((byte[][]) null);
      byte[][] byteArray1 = new byte[5][6];
      byte[] byteArray2 = new byte[2];
      byteArray2[0] = (byte) (-39);
      byteArray2[1] = (byte) (-39);
      byteArray1[0] = byteArray2;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      byte[] byteArray3 = new byte[2];
      byteArray3[0] = (byte) (-9);
      byteArray3[1] = (byte) (-9);
      byteArray1[4] = byteArray3;
      fBCachedFetcher0.updateRow(byteArray1);
      assertFalse(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.3885352816435597
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[] byteArray0 = new byte[8];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " [ForatId=");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Ta4j'U)6NzZ!?W");
      byteArray0[0] = (byte) (-9);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[2] = (byte) (-39);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " [ForatId=");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " [ForatId=");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " [ForatId=");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " [ForatId=");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " [ForatId=");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "SELECT   RF.RDB$RELATION_NAME as RELATION_NAME, RF.RDB$FIELD_NAME as FIELD_NAME, F.RDB$FIELD_LENGTH as FIELD_LENGTH, F.RDB$FIELD_PRECISION as FIELD_PRECISION, F.RDB$FIELD_SCALE as FIELD_SCALE, F.RDB$FIELD_SUB_TYPE as FIELD_SUB_TYPE, F.RDB$CHARACTER_LENGTH as CHAR_LEN, F.RDB$CHARACTER_SET_ID as CHARACTER_SET_ID FROM  RDB$RELATION_FIELDS RF , RDB$FIELDS F  WHERE   RF.RDB$FIELD_SOURCE = F.RDB$FIELD_NAME AND  RF.RDB$FIELD_NAME = ? AND  RF.RDB$RELATION_NAME = ?");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "SELECT   RF.RDB$RELATION_NAME as RELATION_NAME, RF.RDB$FIELD_NAME as FIELD_NAME, F.RDB$FIELD_LENGTH as FIELD_LENGTH, F.RDB$FIELD_PRECISION as FIELD_PRECISION, F.RDB$FIELD_SCALE as FIELD_SCALE, F.RDB$FIELD_SUB_TYPE as FIELD_SUB_TYPE, F.RDB$CHARACTER_LENGTH as CHAR_LEN, F.RDB$CHARACTER_SET_ID as CHARACTER_SET_ID FROM  RDB$RELATION_FIELDS RF , RDB$FIELDS F  WHERE   RF.RDB$FIELD_SOURCE = F.RDB$FIELD_NAME AND  RF.RDB$FIELD_NAME = ? AND  RF.RDB$RELATION_NAME = ?");
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " [ForatId=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " [ForatId=");
      fBCachedFetcher0.updateRow((byte[][]) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      fBCachedFetcher0.deleteRow();
      assertFalse(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      Integer integer0 = new Integer((-915));
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp5.removeExtensionParams();
      databaseParameterBufferImp0.deepCopy();
      databaseParameterBufferImp4.deepCopy();
      databaseParameterBufferImp4.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp6.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp9.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      javaGDSImpl0.createEventHandle("+i-VNLS-v(");
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp14 = new DatabaseParameterBufferImp();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.relative((-915));
      assertFalse(boolean0);
      assertFalse(fBCachedFetcher0.isFirst());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.7754337976947767
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl2 = new isc_tr_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl3 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl2.getOutSqlda();
      isc_stmt_handle_impl2.registerTransaction(isc_tr_handle_impl0);
      isc_stmt_handle_impl isc_stmt_handle_impl4 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl5 = new isc_stmt_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl3 = new isc_tr_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl6 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl6.ensureCapacity(1874);
      isc_stmt_handle_impl6.registerTransaction(isc_tr_handle_impl0);
      isc_stmt_handle_impl isc_stmt_handle_impl7 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl8 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl9 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl10 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl4.removeRows();
      isc_stmt_handle_impl9.removeRows();
      isc_stmt_handle_impl isc_stmt_handle_impl11 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl11.registerTransaction(isc_tr_handle_impl0);
      isc_stmt_handle_impl isc_stmt_handle_impl12 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl13 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl11.setInsertCount((-5345));
      isc_stmt_handle_impl isc_stmt_handle_impl14 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl15 = new isc_stmt_handle_impl();
      isc_tr_handle_impl0.unregisterStatementFromTransaction(isc_stmt_handle_impl8);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[0][6];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.3326567725582157
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedBlockingDeque<byte[][]> linkedBlockingDeque0 = new LinkedBlockingDeque<byte[][]>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[][] byteArray0 = new byte[0][3];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.offer(byteArray0);
      linkedList1.add(byteArray0);
      linkedList1.parallelStream();
      linkedList1.addLast(byteArray0);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      linkedList0.add(byteArray0);
      LinkedList<byte[][]> linkedList4 = new LinkedList<byte[][]>();
      linkedList4.iterator();
      FBResultSet fBResultSet1 = new FBResultSet(fBResultSet0.xsqlvars, linkedList4);
      LinkedList<byte[][]> linkedList5 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet1);
      fBCachedFetcher0.beforeFirst();
      int int0 = 1761;
      int int1 = 133;
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      doReturn((FBConnectionRequestInfo) null).when(fBManagedConnection0).getConnectionRequestInfo();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection(fBManagedConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.3526418957132877
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[14][0];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-9);
      byteArray1[1] = (byte) (-9);
      byteArray1[5] = (byte) (-39);
      byteArray1[3] = (byte) (-79);
      byteArray1[4] = (byte) (-58);
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList0.add(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "SELECT   RF.RDB$RELATION_NAME as RELATION_NAME, RF.RDB$FIELD_NAME as FIELD_NAME, F.RDB$FIELD_LENGTH as FIELD_LENGTH, F.RDB$FIELD_PRECISION as FIELD_PRECISION, F.RDB$FIELD_SCALE as FIELD_SCALE, F.RDB$FIELD_SUB_TYPE as FIELD_SUB_TYPE, F.RDB$CHARACTER_LENGTH as CHAR_LEN, F.RDB$CHARACTER_SET_ID as CHARACTER_SET_ID FROM  RDB$RELATION_FIELDS RF , RDB$FIELDS F  WHERE   RF.RDB$FIELD_SOURCE = F.RDB$FIELD_NAME AND  RF.RDB$FIELD_NAME = ? AND  RF.RDB$RELATION_NAME = ?");
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.listIterator();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.next();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = (DatabaseParameterBufferImp)databaseParameterBufferImp0.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      Integer integer0 = new Integer((-915));
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.deepCopy();
      databaseParameterBufferImp5.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = (DatabaseParameterBufferImp)databaseParameterBufferImp5.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp7.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals(0, int0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.next();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator();
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = null;
      try {
        internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator(internalTransactionCoordinator0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.InternalTransactionCoordinator$MetaDataTransactionCoordinator", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.9469989525125873
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[] byteArray0 = new byte[8];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " [ForatId=");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Ta4j'U)6NzZ!?W");
      byteArray0[0] = (byte) (-9);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[2] = (byte) (-39);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " [ForatId=");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " [ForatId=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " [ForatId=");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " [ForatId=");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " [ForatId=");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.firebirdsql.jdbc.FBCachedFetcher");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.firebirdsql.jdbc.FBCachedFetcher");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.firebirdsql.jdbc.FBCachedFetcher");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      System.setCurrentTimeMillis(2614L);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.995295628324261
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.addFirst((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.first();
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator();
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = null;
      try {
        internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator(internalTransactionCoordinator0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.InternalTransactionCoordinator$MetaDataTransactionCoordinator", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4993646124305886
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.isBeforeFirst();
      byte[][] byteArray0 = new byte[2][3];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)8;
      byteArray1[1] = (byte) (-118);
      byteArray1[2] = (byte)47;
      byteArray1[3] = (byte)8;
      byteArray0[0] = byteArray1;
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.add((byte[][]) null);
      linkedList1.addFirst((byte[][]) null);
      try { 
        fBResultSet0.updateClob("Y;Z6ZNqKW+ar!r`y/", (Clob) null);
        fail("Expecting exception: FBDriverNotCapableException");
      
      } catch(FBDriverNotCapableException e) {
         //
         // Not yet implemented.
         //
         verifyException("org.firebirdsql.jdbc.AbstractResultSet", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.isBeforeFirst();
      byte[][] byteArray0 = new byte[2][3];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)8;
      byteArray1[1] = (byte) (-118);
      byteArray1[2] = (byte)47;
      byteArray1[3] = (byte) (-5);
      byteArray0[0] = byteArray1;
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.add((byte[][]) null);
      try { 
        fBResultSet0.updateClob("Y;Z6ZNqKW+ar!r`y/", (Clob) null);
        fail("Expecting exception: FBDriverNotCapableException");
      
      } catch(FBDriverNotCapableException e) {
         //
         // Not yet implemented.
         //
         verifyException("org.firebirdsql.jdbc.AbstractResultSet", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.9487205928347628
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[9][6];
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte)65;
      byteArray1[1] = (byte)58;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[9];
      byteArray2[0] = (byte)58;
      byteArray2[1] = (byte)58;
      byteArray2[2] = (byte)65;
      byteArray2[3] = (byte)58;
      byteArray2[4] = (byte)65;
      byteArray2[5] = (byte)58;
      byteArray2[6] = (byte)58;
      byteArray2[7] = (byte)58;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[3];
      byteArray3[0] = (byte)65;
      byteArray3[1] = (byte)65;
      byteArray3[2] = (byte)65;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[0];
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[0];
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[0];
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[8];
      byteArray7[0] = (byte)65;
      byteArray7[1] = (byte)65;
      byteArray7[2] = (byte)58;
      byteArray7[3] = (byte)58;
      byteArray7[4] = (byte)58;
      byteArray7[5] = (byte)58;
      byteArray7[6] = (byte)58;
      byteArray7[7] = (byte)58;
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[8];
      byteArray8[0] = (byte)65;
      byteArray8[1] = (byte)65;
      byteArray8[2] = (byte)58;
      byteArray8[3] = (byte)22;
      byteArray8[4] = (byte)58;
      byteArray8[5] = (byte)58;
      byteArray8[6] = (byte)58;
      byteArray8[7] = (byte)65;
      byteArray0[7] = byteArray8;
      byte[] byteArray9 = new byte[5];
      byteArray9[0] = (byte)65;
      byteArray2[7] = (byte)65;
      byteArray9[2] = (byte)22;
      byteArray9[3] = (byte)65;
      byteArray9[4] = (byte)58;
      byteArray0[8] = byteArray9;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.isEmpty();
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      doReturn((FBConnectionRequestInfo) null).when(fBManagedConnection0).getConnectionRequestInfo();
      doReturn((GDSHelper) null).when(fBManagedConnection0).getGDSHelper();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection(fBManagedConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-9);
      byteArray0[1] = (byte)18;
      linkedList0.add((byte[][]) null);
      byteArray0[2] = (byte) (-9);
      byteArray0[3] = (byte) (-79);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.isEmpty();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection((FBManagedConnection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.4741050341006434
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[9][0];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-9);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator0);
      byteArray1[2] = (byte) (-39);
      byteArray1[3] = (byte)0;
      byteArray1[4] = (byte) (-58);
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList0.add(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.addFirst(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.deleteRow();
      int int0 = fBCachedFetcher0.getRowNum();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.162409200836301
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.listIterator();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.isFirst();
      GDSType.getType("org.firebirdsql.jdbc.FBCachedFetcher");
      LocalGDSImpl localGDSImpl0 = null;
      try {
        localGDSImpl0 = new LocalGDSImpl((GDSType) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_stmt_handle_impl0.registerTransaction(isc_tr_handle_impl0);
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl2 = new isc_tr_handle_impl();
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      isc_db_handle_impl1.setResp_blob_id((-2560L));
      System.setCurrentTimeMillis(5150L);
      javaGDSImpl0.receiveResponse(isc_db_handle_impl0, 6);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[0][9];
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      fBCachedFetcher0.isFirst();
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      doReturn((FBConnectionRequestInfo) null).when(fBManagedConnection0).getConnectionRequestInfo();
      doReturn((GDSHelper) null).when(fBManagedConnection0).getGDSHelper();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection(fBManagedConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.2218396677739918
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[] byteArray0 = new byte[23];
      byteArray0[1] = (byte)0;
      byte[] byteArray1 = new byte[7];
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " [oatId=");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Oa^rH?1p");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Oa^rH?1p");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " [oatId=");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " [oatId=");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Oa^rH?1p");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " [oatId=");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " [oatId=");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Oa^rH?1p");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Oa^rH?1p");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " [oatId=");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Oa^rH?1p");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " [oatId=");
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " [oatId=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " [oatId=");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      fBCachedFetcher0.deleteRow();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[3][9];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[23];
      byteArray2[1] = (byte)100;
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      Integer integer0 = new Integer((-4021));
      databaseParameterBufferImp1.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      byte[][] byteArray3 = new byte[4][5];
      byteArray3[0] = byteArray2;
      byteArray3[1] = byteArray1;
      byteArray3[2] = byteArray2;
      byteArray3[3] = byteArray1;
      linkedList0.add(byteArray3);
      databaseParameterBufferImp1.deepCopy();
      databaseParameterBufferImp2.removeExtensionParams();
      databaseParameterBufferImp0.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp3.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      EventHandleImp eventHandleImp0 = new EventHandleImp("+i-VNLS-v(");
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.relative(335544796);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.6036051515160747
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.last();
      FBManagedConnection fBManagedConnection0 = null;
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator();
      DummyCallableStatementMetaData dummyCallableStatementMetaData0 = new DummyCallableStatementMetaData();
      // Undeclared exception!
      try { 
        internalTransactionCoordinator0.getConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.InternalTransactionCoordinator", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.354640740535752
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.addLast((byte[][]) null);
      Object object0 = new Object();
      Predicate<byte[][]> predicate0 = Predicate.isEqual(object0);
      Predicate<byte[][]> predicate1 = predicate0.negate();
      Predicate<byte[][]> predicate2 = predicate0.and(predicate1);
      Predicate<byte[][]> predicate3 = predicate0.or(predicate2);
      linkedList0.removeIf(predicate3);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.afterLast();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      linkedList2.listIterator();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection((FBManagedConnection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.add((byte[][]) null);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.setFetchSize((-281));
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      linkedList2.listIterator();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.deepCopy();
      databaseParameterBufferImp0.removeExtensionParams();
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList4 = new LinkedList<byte[][]>();
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator();
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = null;
      try {
        internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator(internalTransactionCoordinator0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.InternalTransactionCoordinator$MetaDataTransactionCoordinator", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.toArray();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl3 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl4 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl2.setInsertCount(2004);
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.close();
      byte[][] byteArray0 = new byte[9][9];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte)1;
      byteArray2[1] = (byte) (-19);
      byteArray2[2] = (byte) (-89);
      byteArray2[3] = (byte)107;
      byteArray2[4] = (byte) (-60);
      byteArray2[5] = (byte)19;
      byteArray2[6] = (byte)33;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[9];
      byteArray3[0] = (byte)3;
      byteArray3[1] = (byte) (-19);
      byteArray3[2] = (byte)19;
      byteArray3[3] = (byte)19;
      byteArray3[4] = (byte) (-60);
      byteArray3[5] = (byte)33;
      byteArray3[6] = (byte) (-60);
      byteArray3[7] = (byte)1;
      byteArray3[8] = (byte) (-89);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[4];
      byteArray4[0] = (byte)33;
      byteArray4[1] = (byte) (-60);
      byteArray4[2] = (byte)1;
      byteArray4[3] = (byte) (-94);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[4];
      byteArray5[0] = (byte) (-94);
      byteArray5[1] = (byte)107;
      byteArray5[2] = (byte) (-55);
      byteArray5[3] = (byte) (-89);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[9];
      byteArray6[0] = (byte)107;
      byteArray6[1] = (byte) (-55);
      byteArray6[2] = (byte) (-94);
      byteArray6[3] = (byte) (-127);
      byteArray6[4] = (byte)107;
      byteArray6[5] = (byte)1;
      byteArray6[6] = (byte)3;
      byteArray6[8] = (byte)19;
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[0];
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[5];
      byteArray8[0] = (byte) (-127);
      byteArray8[1] = (byte) (-94);
      byteArray8[2] = (byte) (-127);
      byteArray8[3] = (byte) (-55);
      byteArray8[4] = (byte)19;
      byteArray0[7] = byteArray8;
      byte[] byteArray9 = new byte[6];
      byteArray9[0] = (byte) (-19);
      byteArray9[1] = (byte) (-19);
      byteArray9[2] = (byte) (-97);
      byteArray9[3] = (byte)33;
      byteArray9[4] = (byte) (-127);
      byteArray9[5] = (byte) (-94);
      byteArray0[8] = byteArray9;
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl2 = new isc_tr_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl3 = new isc_stmt_handle_impl();
      byte[][] byteArray0 = new byte[5][9];
      byte[] byteArray1 = new byte[24];
      byteArray1[0] = (byte) (-40);
      byteArray1[1] = (byte)123;
      byteArray1[2] = (byte)25;
      byteArray1[3] = (byte)114;
      byteArray1[4] = (byte)29;
      byteArray1[5] = (byte)0;
      byteArray1[5] = (byte) (-123);
      byteArray1[7] = (byte)44;
      byteArray1[3] = (byte)15;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[2];
      byteArray2[0] = (byte)25;
      byteArray2[1] = (byte)25;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[7];
      byteArray2[1] = (byte)73;
      byteArray3[1] = (byte) (-54);
      byteArray1[1] = (byte) (-123);
      byteArray3[3] = (byte)40;
      byteArray3[4] = (byte)114;
      byteArray3[5] = (byte)114;
      byteArray3[6] = (byte)25;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[1];
      byteArray4[0] = (byte) (-54);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[2];
      byteArray5[0] = (byte)29;
      byteArray5[1] = (byte)15;
      byteArray0[3] = byteArray5;
      isc_stmt_handle_impl.printRow(byteArray0);
      isc_stmt_handle_impl2.getOutSqlda();
      isc_stmt_handle_impl2.registerTransaction(isc_tr_handle_impl0);
      isc_stmt_handle_impl isc_stmt_handle_impl4 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl5 = new isc_stmt_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl3 = new isc_tr_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl6 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl6.ensureCapacity(1874);
      isc_stmt_handle_impl6.registerTransaction(isc_tr_handle_impl0);
      isc_stmt_handle_impl isc_stmt_handle_impl7 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl8 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl9 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl10 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl4.removeRows();
      isc_stmt_handle_impl9.removeRows();
      isc_stmt_handle_impl isc_stmt_handle_impl11 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl11.registerTransaction(isc_tr_handle_impl0);
      isc_stmt_handle_impl isc_stmt_handle_impl12 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl13 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl14 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl15 = new isc_stmt_handle_impl();
      isc_tr_handle_impl0.unregisterStatementFromTransaction(isc_stmt_handle_impl8);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.previous();
      assertFalse(boolean0);
      assertFalse(fBCachedFetcher0.isFirst());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5935041414150646
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.deepCopy();
      int int0 = FBFetcher.MAX_FETCH_ROWS;
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      Integer integer0 = new Integer((byte) (-41));
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp5.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      javaGDSImpl0.createEventHandle("f3q9QWUxvQMvZA &0");
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.relative(0);
      assertFalse(boolean0);
      assertTrue(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5504384368836852
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[3][9];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[23];
      byteArray2[1] = (byte)100;
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      Integer integer0 = new Integer((-4021));
      databaseParameterBufferImp1.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.deepCopy();
      databaseParameterBufferImp2.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp3.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      EventHandleImp eventHandleImp0 = new EventHandleImp("+i-VNLS-v(");
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.absolute((-4021));
      try { 
        fBCachedFetcher0.absolute((-1));
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[23];
      byteArray0[1] = (byte)0;
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.deepCopy();
      int int0 = FBFetcher.MAX_FETCH_ROWS;
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      Integer integer0 = new Integer((-4021));
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp3.deepCopy();
      databaseParameterBufferImp3.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp1.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl0, databaseParameterBuffer0, isc_db_handle_impl0, (GDSHelper.GDSHelperErrorListener) null);
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      javaGDSImpl0.createEventHandle("");
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) null, (FBObjectListener.FetcherListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = (DatabaseParameterBufferImp)databaseParameterBufferImp0.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.deepCopy();
      Integer integer0 = new Integer((-888));
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp7.removeExtensionParams();
      databaseParameterBufferImp7.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = (DatabaseParameterBufferImp)databaseParameterBufferImp6.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp14 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp10.removeExtensionParams();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, databaseParameterBufferImp10, isc_db_handle_impl0, gDSHelper_GDSHelperErrorListener0);
      DatabaseParameterBufferImp databaseParameterBufferImp15 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp16 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp17 = new DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher(gDSHelper0, 1816, (-888), isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp5.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp7.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp6.deepCopy();
      databaseParameterBufferImp8.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp7.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp4.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp14 = new DatabaseParameterBufferImp();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp15 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp16 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp17 = new DatabaseParameterBufferImp();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      
      boolean boolean0 = fBCachedFetcher0.absolute(1309);
      assertTrue(fBCachedFetcher0.isLast());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.6675530205253588
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.first();
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator();
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = null;
      try {
        internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator(internalTransactionCoordinator0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.InternalTransactionCoordinator$MetaDataTransactionCoordinator", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.995295628324261
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[9][9];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[8];
      byteArray2[0] = (byte) (-115);
      byteArray2[1] = (byte)12;
      byteArray2[2] = (byte) (-81);
      byteArray2[3] = (byte) (-46);
      byteArray2[4] = (byte) (-118);
      byteArray2[5] = (byte) (-43);
      byteArray2[6] = (byte)103;
      byteArray2[7] = (byte) (-1);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[6];
      byteArray3[0] = (byte) (-43);
      byteArray3[1] = (byte) (-118);
      byteArray3[2] = (byte) (-81);
      byteArray3[3] = (byte) (-81);
      byteArray3[4] = (byte) (-118);
      byteArray3[5] = (byte) (-81);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[4];
      byteArray4[0] = (byte)12;
      byteArray4[1] = (byte) (-81);
      byteArray4[2] = (byte)103;
      byteArray4[3] = (byte) (-115);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[4];
      byteArray5[0] = (byte) (-43);
      byteArray5[1] = (byte) (-81);
      byteArray5[2] = (byte) (-1);
      byteArray5[3] = (byte)12;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[8];
      byteArray6[0] = (byte) (-1);
      byteArray6[1] = (byte) (-81);
      byteArray6[2] = (byte)12;
      byteArray6[3] = (byte) (-115);
      byteArray6[4] = (byte) (-81);
      byteArray6[5] = (byte) (-46);
      byteArray6[6] = (byte) (-81);
      byteArray6[7] = (byte) (-118);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[23];
      byteArray7[0] = (byte) (-115);
      byteArray7[1] = (byte) (-19);
      byteArray7[2] = (byte) (-81);
      byteArray7[3] = (byte) (-81);
      byteArray7[4] = (byte) (-43);
      byteArray7[5] = (byte) (-81);
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[2];
      byteArray8[0] = (byte) (-19);
      byteArray8[1] = (byte) (-81);
      byteArray0[7] = byteArray8;
      byte[] byteArray9 = new byte[3];
      byteArray9[0] = (byte)12;
      byteArray9[1] = (byte) (-43);
      byteArray9[2] = (byte) (-81);
      byteArray0[8] = byteArray9;
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.last();
      FBManagedConnection fBManagedConnection0 = null;
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection((FBManagedConnection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.6036051515160747
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread(threadGroup0, (Runnable) null);
      MockThread mockThread1 = new MockThread(threadGroup0, mockThread0, "");
      linkedList0.removeLastOccurrence(mockThread1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.last();
      System.setCurrentTimeMillis(1L);
  }
}
