/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 00:37:43 GMT 2019
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.util.Collection;
import java.util.Iterator;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import java.util.stream.Stream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSPredicateForm;
import umd.cs.shop.JSSubstitution;
import umd.cs.shop.JSTerm;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSPredicateForm_ESTest extends JSPredicateForm_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.8791326374377332
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m<2l07BYAi5,[");
      char[] charArray0 = new char[2];
      stringReader0.read(charArray0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      jSTerm0.stream();
      jSTerm0.addElement((Object) null);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSTerm0.equals((JSPredicateForm) jSTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.15040557251542
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m<2l07BYAi5,[");
      char[] charArray0 = new char[2];
      stringReader0.read(charArray0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) jSTerm1);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      jSTerm0.stream();
      jSTerm0.addElement(jSTerm0);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSTerm jSTerm2 = new JSTerm();
      jSTerm0.add((Object) jSTerm2);
      jSTerm0.equals((JSPredicateForm) jSTerm0);
      // Undeclared exception!
      try { 
        jSPredicateForm0.clonePF();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.8791326374377332
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m<2l07BYAi5,[");
      char[] charArray0 = new char[2];
      stringReader0.read(charArray0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.makeFunction();
      stringReader0.read();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      jSTerm0.stream();
      jSTerm0.addElement(jSTerm0);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSTerm0.equals((JSPredicateForm) jSTerm0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.8943679997946905
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m<207BYA5,");
      char[] charArray0 = new char[2];
      stringReader0.read(charArray0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer1.parseNumbers();
      JSTerm jSTerm1 = new JSTerm(streamTokenizer1);
      boolean boolean0 = jSTerm0.equals((JSPredicateForm) jSTerm1);
      jSTerm0.print();
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      jSTerm0.stream();
      jSTerm0.addElement(jSTerm0);
      jSTerm0.makeVariable();
      boolean boolean1 = jSTerm0.equals((JSPredicateForm) jSTerm0);
      assertFalse(boolean1 == boolean0);
      
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSTerm0.listIterator();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = jSTerm0.matches(jSPredicateForm0, jSSubstitution0);
      assertFalse(jSSubstitution1.isEmpty());
      
      jSTerm0.isEmpty();
      JSPredicateForm jSPredicateForm1 = jSTerm0.standarizerPredicateForm();
      assertEquals("[207.0, [207.00]]", jSPredicateForm1.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0730116670092564
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.iterator();
      Iterator iterator0 = jSSubstitution0.iterator();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSSubstitution0.iterator();
      Object object0 = new Object();
      jSSubstitution1.add(object0);
      jSSubstitution1.add((Object) iterator0);
      jSSubstitution1.add((Object) "(");
      jSSubstitution0.clear();
      jSSubstitution0.add((Object) iterator0);
      jSSubstitution1.add((Object) iterator0);
      UnaryOperator.identity();
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m<2l07BYAi5,[");
      char[] charArray0 = new char[2];
      stringReader0.read(charArray0);
      stringReader0.read(charArray0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm();
      stringReader0.skip(2);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      jSTerm0.stream();
      jSTerm0.addElement(jSTerm0);
      // Undeclared exception!
      try { 
        jSTerm0.equals((JSPredicateForm) jSTerm0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSTerm cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.2068342391007003
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m<2l07BYAi5,[");
      char[] charArray0 = new char[2];
      stringReader0.read(charArray0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSJshopVars.flagLevel = (-2);
      jSTerm0.addElement(jSTerm0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      JSSubstitution jSSubstitution1 = jSPredicateForm0.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
      jSPredicateForm1.equals(jSPredicateForm0);
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.clonePF();
      jSPredicateForm1.iterator();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      jSTerm0.matches(jSPredicateForm1, jSSubstitution2);
      jSTerm0.addAll((Collection) jSSubstitution1);
      jSTerm0.clonePF();
      jSTerm0.matches(jSPredicateForm2);
      JSPredicateForm jSPredicateForm3 = jSPredicateForm1.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm4 = jSPredicateForm2.applySubstitutionPF(jSSubstitution1);
      jSPredicateForm2.applySubstitutionPF(jSSubstitution0);
      jSPredicateForm3.matches(jSPredicateForm4, jSSubstitution1);
      jSPredicateForm1.standarizerPredicateForm();
      jSPredicateForm4.applySubstitutionPF(jSSubstitution0);
      // Undeclared exception!
      try { 
        jSTerm0.subList(2, 62);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 62
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.6643722735914648
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "m<2l07BYAi5,[";
      StringReader stringReader0 = new StringReader("m<2l07BYAi5,[");
      char[] charArray0 = new char[2];
      stringReader0.read(charArray0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.stream();
      jSTerm0.addElement(jSTerm0);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSTerm0.equals((JSPredicateForm) jSTerm0);
      JSPredicateForm jSPredicateForm1 = jSTerm0.clonePF();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.matches(jSPredicateForm1, jSSubstitution0);
      // Undeclared exception!
      try { 
        jSPredicateForm0.equals(jSPredicateForm1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSJshopVars.interrogation = 2;
      jSPredicateForm0.parallelStream();
      StringReader stringReader0 = new StringReader("sm3NZ.yzctW");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.eolIsSignificant(false);
      stringReader0.close();
      streamTokenizer0.resetSyntax();
      // Undeclared exception!
      try { 
        jSPredicateForm0.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.9459947988923698
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m<2l07BYAi5,[");
      char[] charArray0 = new char[2];
      stringReader0.read(charArray0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer0.pushBack();
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      jSTerm1.stream();
      jSTerm1.clone();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.add((Object) streamTokenizer1);
      streamTokenizer1.parseNumbers();
      JSPredicateForm jSPredicateForm0 = jSTerm1.applySubstitutionPF(jSSubstitution0);
      jSPredicateForm0.addElement(jSTerm0);
      jSTerm1.standarizerPredicateForm();
      streamTokenizer1.whitespaceChars((-2), 2);
      jSTerm1.equals((JSPredicateForm) jSTerm0);
      System.setCurrentTimeMillis(1094L);
      jSTerm1.clonePF();
      jSTerm0.clonePF();
      System.setCurrentTimeMillis(1094L);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.521586834652811
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m<2l07BYAi5,[");
      char[] charArray0 = new char[2];
      stringReader0.read(charArray0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer0.pushBack();
      JSTerm jSTerm1 = new JSTerm(streamTokenizer1);
      streamTokenizer0.lowerCaseMode(true);
      streamTokenizer1.pushBack();
      JSTerm jSTerm2 = new JSTerm(streamTokenizer0);
      jSTerm0.stream();
      jSTerm1.clonePF();
      jSTerm1.clone();
      JSJshopVars.verticalL = (-2);
      jSTerm0.addElement((Object) null);
      System.setCurrentTimeMillis((-2));
      // Undeclared exception!
      try { 
        jSTerm0.standarizerPredicateForm();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0290018112854749
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m<2l07BYAi5,[");
      char[] charArray0 = new char[2];
      stringReader0.read(charArray0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer0.pushBack();
      JSTerm jSTerm1 = new JSTerm(streamTokenizer1);
      streamTokenizer0.lowerCaseMode(true);
      streamTokenizer1.pushBack();
      JSTerm jSTerm2 = new JSTerm(streamTokenizer0);
      jSTerm0.stream();
      jSTerm1.clonePF();
      jSTerm1.clone();
      JSJshopVars.verticalL = (-2);
      jSTerm0.addElement((Object) null);
      System.setCurrentTimeMillis((-2));
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0290018112854749
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m<2l07BYAi5,[");
      char[] charArray0 = new char[2];
      stringReader0.read(charArray0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSJshopVars.flagLevel = (-2);
      jSTerm0.stream();
      jSTerm0.addElement(jSTerm0);
      System.setCurrentTimeMillis((-4));
      jSTerm0.clonePF();
      streamTokenizer0.slashStarComments(true);
      JSTerm jSTerm1 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm1.clonePF();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.addElement((Object) null);
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      jSPredicateForm0.iterator();
      UnaryOperator.identity();
      UnaryOperator.identity();
      // Undeclared exception!
      try { 
        jSPredicateForm0.toStr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.add((Object) " expected");
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      jSPredicateForm0.addElement((Object) null);
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      // Undeclared exception!
      try { 
        jSPredicateForm0.toStr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.add((Object) " expected");
      UnaryOperator.identity();
      JSJshopVars.slash = (-182);
      jSPredicateForm0.add((Object) " expected");
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      // Undeclared exception!
      try { 
        jSPredicateForm0.toStr();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0809586127392572
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m12l0NBOAi5,[");
      char[] charArray0 = new char[2];
      stringReader0.read(charArray0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer0.pushBack();
      jSTerm0.add((Object) streamTokenizer1);
      streamTokenizer0.ordinaryChar((-4));
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm2 = new JSTerm(streamTokenizer1);
      jSTerm1.ensureCapacity((-2));
      Stream stream0 = jSTerm0.stream();
      jSTerm0.clone();
      stringReader0.read();
      jSTerm0.trimToSize();
      streamTokenizer1.wordChars((-1719869114), 0);
      jSTerm0.spliterator();
      jSTerm0.addElement(stream0);
      jSTerm1.equals((JSPredicateForm) jSTerm0);
      UnaryOperator.identity();
      Integer integer0 = new Integer(235);
      Integer integer1 = new Integer(2);
      UnaryOperator.identity();
      Integer integer2 = new Integer((-2177));
      System.setCurrentTimeMillis(235);
      System.setCurrentTimeMillis((-2));
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.455848709151796
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" . ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.ordinaryChar((-140));
      stringReader0.ready();
      streamTokenizer0.slashSlashComments(true);
      stringReader0.ready();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer1.sval = " . ";
      streamTokenizer1.ordinaryChars((-4), (-4));
      JSTerm jSTerm0 = new JSTerm(streamTokenizer1);
      streamTokenizer1.pushBack();
      streamTokenizer1.nextToken();
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSPredicateForm0.addElement((Object) null);
      streamTokenizer0.nextToken();
      jSTerm0.stream();
      streamTokenizer0.nval = 0.0;
      jSPredicateForm0.toArray();
      streamTokenizer1.parseNumbers();
      // Undeclared exception!
      try { 
        jSPredicateForm0.print();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.3026182558037673
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m<2l07BYAi5,[");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.stream();
      jSTerm0.addElement(jSTerm0);
      stringReader0.read();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.isEmpty();
      JSPredicateForm jSPredicateForm1 = jSTerm0.clonePF();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.stream();
      JSPredicateForm jSPredicateForm2 = jSTerm0.clonePF();
      JSPredicateForm jSPredicateForm3 = jSPredicateForm1.standarizerPredicateForm();
      streamTokenizer0.quoteChar((-2222));
      jSPredicateForm3.listIterator();
      jSTerm0.listIterator();
      jSPredicateForm1.equals(jSPredicateForm2);
      UnaryOperator.identity();
      jSPredicateForm3.toStr();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSPredicateForm3.applySubstitutionPF(jSSubstitution1);
      jSPredicateForm0.toStr();
      JSPredicateForm jSPredicateForm4 = new JSPredicateForm();
      JSPredicateForm jSPredicateForm5 = jSPredicateForm3.clonePF();
      jSPredicateForm5.print();
      jSTerm0.print();
      jSPredicateForm1.equals(jSPredicateForm2);
      jSPredicateForm1.equals(jSPredicateForm0);
      System.setCurrentTimeMillis((-2488L));
      jSTerm0.standarizerPredicateForm();
      jSPredicateForm2.clonePF();
      jSPredicateForm0.toStr();
      // Undeclared exception!
      try { 
        jSPredicateForm4.standarizerPredicateForm();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.ensureCapacity((-1844352676));
      Iterator iterator0 = jSSubstitution0.iterator();
      Iterator iterator1 = jSSubstitution0.iterator();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSSubstitution0.removeElements(jSSubstitution1);
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      jSSubstitution0.iterator();
      jSSubstitution2.add((Object) iterator1);
      jSSubstitution2.add((Object) iterator0);
      jSSubstitution2.add((Object) "p<q");
      jSSubstitution0.clear();
      jSSubstitution2.add((Object) iterator1);
      jSSubstitution0.add((Object) iterator1);
      jSSubstitution2.add((Object) iterator1);
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(<cCqW77h}.9<Xs[");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0809586127392572
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m<2l07BYAi5,[");
      char[] charArray0 = new char[5];
      charArray0[0] = 'M';
      charArray0[3] = '@';
      stringReader0.read(charArray0);
      System.setCurrentTimeMillis(5);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer1);
      JSTerm jSTerm1 = jSTerm0.standardizerTerm();
      Integer integer0 = new Integer(5);
      jSTerm1.add((Object) integer0);
      // Undeclared exception!
      try { 
        jSTerm1.standarizerPredicateForm();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringReader stringReader0 = new StringReader("q D`AYZSsssQs");
      UnaryOperator.identity();
      UnaryOperator.identity();
      Function.identity();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.pushBack();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      jSPredicateForm0.listIterator();
      jSPredicateForm0.addElement((Object) null);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.2569938028235406
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ub$QcuXr)lW4c{]Mb");
      char[] charArray0 = new char[5];
      stringReader0.read(charArray0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSPredicateForm0.equals((JSPredicateForm) jSTerm0);
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      JSSubstitution jSSubstitution0 = jSTerm0.matches(jSPredicateForm1);
      JSPredicateForm jSPredicateForm2 = jSTerm0.clonePF();
      JSPredicateForm jSPredicateForm3 = jSPredicateForm1.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm4 = jSPredicateForm3.clonePF();
      JSSubstitution jSSubstitution1 = jSPredicateForm4.matches(jSPredicateForm1, jSSubstitution0);
      jSPredicateForm0.equals(jSPredicateForm3);
      JSPredicateForm jSPredicateForm5 = jSPredicateForm1.clonePF();
      jSPredicateForm5.iterator();
      JSSubstitution jSSubstitution2 = jSPredicateForm4.matches(jSPredicateForm1, jSSubstitution1);
      jSTerm0.addAll((Collection) jSPredicateForm2);
      JSPredicateForm jSPredicateForm6 = jSPredicateForm3.clonePF();
      jSSubstitution2.add((Object) jSPredicateForm2);
      jSTerm0.matches(jSPredicateForm1);
      jSPredicateForm4.standarizerPredicateForm();
      jSPredicateForm0.applySubstitutionPF(jSSubstitution2);
      JSPredicateForm jSPredicateForm7 = jSPredicateForm4.applySubstitutionPF(jSSubstitution2);
      // Undeclared exception!
      try { 
        jSPredicateForm7.matches(jSPredicateForm6, jSSubstitution2);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSPredicateForm cannot be cast to umd.cs.shop.JSPairVarTerm
         //
         verifyException("umd.cs.shop.JSSubstitution", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7914765784434397
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b$QcuXVf)lW4c{]Mb");
      char[] charArray0 = new char[5];
      charArray0[0] = 'M';
      stringReader0.read(charArray0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      jSTerm0.clonePF();
      JSJshopVars.semicolon = 2919;
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      streamTokenizer0.parseNumbers();
      jSTerm0.print();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      System.setCurrentTimeMillis((-1407L));
      JSSubstitution jSSubstitution4 = new JSSubstitution();
      streamTokenizer0.pushBack();
      JSSubstitution jSSubstitution5 = new JSSubstitution();
      JSSubstitution jSSubstitution6 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution6);
      jSTerm0.print();
      jSSubstitution6.listIterator();
      jSTerm0.applySubstitutionPF(jSSubstitution3);
      jSPredicateForm0.add((Object) jSSubstitution1);
      JSJshopVars.coma = (-2964);
      JSJshopVars.apostrophe = 1;
      UnaryOperator.identity();
      // Undeclared exception!
      try { 
        jSPredicateForm0.print();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSSubstitution cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0067795890632527
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b$QcuXVf)lW4c{]Mb");
      char[] charArray0 = new char[5];
      stringReader0.ready();
      charArray0[0] = 'y';
      stringReader0.read(charArray0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      jSTerm0.add((Object) "b$QcuXVf)lW4c{]Mb");
      JSTerm jSTerm1 = new JSTerm();
      JSJshopVars.coma = (-3617);
      jSTerm0.add((Object) "");
      int int0 = 2962;
      streamTokenizer1.nextToken();
      Integer integer0 = new Integer(5);
      jSTerm0.add((Object) integer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSJshopVars.greaterT = (-3);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      streamTokenizer0.parseNumbers();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      JSSubstitution jSSubstitution4 = new JSSubstitution();
      streamTokenizer0.pushBack();
      JSSubstitution jSSubstitution5 = new JSSubstitution();
      JSSubstitution jSSubstitution6 = new JSSubstitution();
      JSSubstitution jSSubstitution7 = new JSSubstitution();
      jSSubstitution7.retainAll(jSSubstitution3);
      JSSubstitution jSSubstitution8 = new JSSubstitution();
      JSSubstitution jSSubstitution9 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution9);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      System.setCurrentTimeMillis(1L);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      boolean boolean0 = jSPredicateForm0.equals((JSPredicateForm) null);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%vaFzg");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.markSupported();
      stringReader0.close();
      streamTokenizer0.resetSyntax();
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.507738249093631
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ub$QcuXr)lW4c{]Mb");
      char[] charArray0 = new char[5];
      stringReader0.read(charArray0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSPredicateForm0.equals((JSPredicateForm) jSTerm0);
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      JSSubstitution jSSubstitution0 = jSTerm0.matches(jSPredicateForm1);
      JSPredicateForm jSPredicateForm2 = jSTerm0.clonePF();
      JSPredicateForm jSPredicateForm3 = jSPredicateForm1.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm4 = jSPredicateForm3.clonePF();
      JSPredicateForm jSPredicateForm5 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSSubstitution jSSubstitution1 = jSPredicateForm4.matches(jSPredicateForm1, jSSubstitution0);
      jSTerm0.stream();
      jSPredicateForm0.equals(jSPredicateForm3);
      JSPredicateForm jSPredicateForm6 = jSPredicateForm1.clonePF();
      jSPredicateForm6.iterator();
      JSSubstitution jSSubstitution2 = jSPredicateForm4.matches(jSPredicateForm1, jSSubstitution1);
      jSTerm0.addAll((Collection) jSPredicateForm2);
      JSPredicateForm jSPredicateForm7 = jSPredicateForm3.clonePF();
      jSTerm0.matches(jSPredicateForm5);
      JSJshopVars.backquote = (-1303);
      JSPredicateForm jSPredicateForm8 = jSPredicateForm4.standarizerPredicateForm();
      jSPredicateForm0.applySubstitutionPF(jSSubstitution2);
      jSPredicateForm4.applySubstitutionPF(jSSubstitution2);
      JSSubstitution jSSubstitution3 = jSPredicateForm1.matches(jSPredicateForm8, jSSubstitution1);
      jSPredicateForm8.standarizerPredicateForm();
      jSPredicateForm3.applySubstitutionPF(jSSubstitution3);
      jSPredicateForm7.matches(jSPredicateForm5, jSSubstitution1);
      JSPredicateForm jSPredicateForm9 = null;
      try {
        jSPredicateForm9 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5631877804301968
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m<2l07BYAi5,[");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      jSTerm0.stream();
      jSTerm0.addElement(jSTerm0);
      jSTerm0.equals((JSPredicateForm) jSTerm0);
      Function<Object, Object> function0 = Function.identity();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Function<Integer, Object> function1 = function0.compose((Function<? super Integer, ?>) unaryOperator0);
      Integer integer0 = new Integer((-1));
      function1.apply(integer0);
      Function<Object, Integer> function2 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null).when(function2).apply(any());
      Function<Object, Integer> function3 = unaryOperator0.andThen((Function<? super Object, ? extends Integer>) function2);
      Function<Object, String> function4 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Integer, String> function5 = function1.andThen((Function<? super Object, ? extends String>) function4);
      function3.compose((Function<? super Integer, ?>) unaryOperator0);
      Function<Object, String> function6 = function3.andThen((Function<? super Integer, ? extends String>) function5);
      Integer integer1 = new Integer((-1));
      Function<Object, Integer> function7 = function3.compose((Function<? super Object, ?>) function0);
      function7.apply(function6);
      Function<Integer, String> function8 = function6.compose((Function<? super Integer, ?>) function1);
      Function<Object, Integer> function9 = function7.compose((Function<? super Object, ?>) function0);
      Function<Object, String> function10 = function6.andThen((Function<? super String, ? extends String>) function6);
      Function<Object, Integer> function11 = unaryOperator0.andThen((Function<? super Object, ? extends Integer>) function9);
      function11.apply(function10);
      Function<Object, Object> function12 = function7.andThen((Function<? super Integer, ?>) function3);
      function9.compose((Function<? super Object, ?>) function3);
      function11.compose((Function<? super Integer, ?>) function8);
      Function<Object, Integer> function13 = unaryOperator0.andThen((Function<? super Object, ? extends Integer>) function11);
      Function<Object, Integer> function14 = function10.andThen((Function<? super String, ? extends Integer>) function3);
      function14.compose((Function<? super String, ?>) function0);
      Function<Object, Integer> function15 = unaryOperator0.andThen((Function<? super Object, ? extends Integer>) function9);
      function13.andThen((Function<? super Integer, ?>) function15);
      function12.compose((Function<? super Integer, ?>) function3);
      function7.compose((Function<? super String, ?>) function6);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("m<2l07BYAi5,[");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      JSTerm jSTerm0 = new JSTerm();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      // Undeclared exception!
      try { 
        jSTerm0.toStr();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b$QcuXVf)lW4c{]Mb");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      UnaryOperator.identity();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      jSSubstitution2.removeAll(jSSubstitution1);
      jSSubstitution0.addElement(jSSubstitution2);
      jSSubstitution2.iterator();
      jSSubstitution2.add((Object) jSSubstitution0);
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      jSSubstitution3.removeElement(jSSubstitution0);
      jSTerm0.applySubstitutionT(jSSubstitution3);
      jSSubstitution1.add((Object) "b$QcuXVf)lW4c{]Mb");
      JSSubstitution jSSubstitution4 = new JSSubstitution();
      jSSubstitution2.removeElements(jSSubstitution2);
      jSSubstitution2.add((Object) jSSubstitution1);
      streamTokenizer0.slashSlashComments(true);
      System.setCurrentTimeMillis(4619);
      System.setCurrentTimeMillis(1797L);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      Integer integer0 = new Integer(93);
      jSPredicateForm0.add((Object) integer0);
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      // Undeclared exception!
      try { 
        jSPredicateForm0.toStr();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.add((Object) " ex`eced");
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      jSPredicateForm0.print();
      assertFalse(jSPredicateForm0.isEmpty());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      UnaryOperator.identity();
      jSPredicateForm0.add(0, (Object) unaryOperator0);
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      // Undeclared exception!
      try { 
        jSPredicateForm0.print();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.function.UnaryOperator$$Lambda$50/754562364 cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m<2l07BYAij15,[");
      char[] charArray0 = new char[2];
      stringReader0.read(charArray0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.ready();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer1.ttype = (-4);
      streamTokenizer0.ttype = 2;
      streamTokenizer0.parseNumbers();
      JSTerm jSTerm0 = new JSTerm();
      streamTokenizer0.slashStarComments(true);
      streamTokenizer0.parseNumbers();
      streamTokenizer1.lowerCaseMode(true);
      jSTerm0.stream();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      System.setCurrentTimeMillis(2);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer1);
      JSSubstitution jSSubstitution1 = jSTerm0.matches((JSPredicateForm) jSTerm1, jSSubstitution0);
      assertTrue(jSSubstitution1.fail());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.2508570947192676
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m<2l07BYAij15,[");
      char[] charArray0 = new char[2];
      stringReader0.read(charArray0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.ready();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer1.ttype = (-4);
      streamTokenizer0.pushBack();
      streamTokenizer0.ttype = 2;
      streamTokenizer0.parseNumbers();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      streamTokenizer0.slashStarComments(true);
      streamTokenizer0.parseNumbers();
      streamTokenizer1.lowerCaseMode(true);
      jSTerm0.stream();
      JSSubstitution jSSubstitution0 = jSTerm0.matches((JSPredicateForm) jSTerm0);
      System.setCurrentTimeMillis((-2));
      JSTerm jSTerm1 = new JSTerm(streamTokenizer1);
      JSSubstitution jSSubstitution1 = jSTerm0.matches((JSPredicateForm) jSTerm1, jSSubstitution0);
      assertFalse(jSSubstitution0.fail());
      assertTrue(jSSubstitution1.fail());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m<2l07BYAij15,[");
      char[] charArray0 = new char[2];
      stringReader0.read(charArray0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.ready();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer1.ttype = (-4);
      streamTokenizer0.pushBack();
      streamTokenizer0.ttype = 2;
      streamTokenizer0.parseNumbers();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      streamTokenizer0.slashStarComments(true);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      streamTokenizer0.parseNumbers();
      StringReader stringReader1 = new StringReader("]e'qZ6fmf`/pB");
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader1);
      streamTokenizer2.lowerCaseMode(true);
      jSTerm0.stream();
      jSTerm1.matches((JSPredicateForm) jSTerm0);
      System.setCurrentTimeMillis(1081L);
      System.setCurrentTimeMillis((-4));
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      jSPredicateForm0.listIterator();
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches((JSPredicateForm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StringReader stringReader0 = new StringReader("jrIfG*AKyTK1~T");
      char[] charArray0 = new char[3];
      charArray0[0] = 'd';
      charArray0[1] = '7';
      charArray0[2] = ']';
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer0.pushBack();
      streamTokenizer0.quoteChar((-650));
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      streamTokenizer2.parseNumbers();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer2);
      streamTokenizer0.slashStarComments(true);
      streamTokenizer2.parseNumbers();
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(stringReader0);
      streamTokenizer3.eolIsSignificant(false);
      streamTokenizer3.lowerCaseMode(true);
      jSTerm0.stream();
      JSTerm jSTerm1 = new JSTerm();
      jSTerm1.matches((JSPredicateForm) jSTerm0);
      System.setCurrentTimeMillis((-1));
      System.setCurrentTimeMillis('d');
      System.setCurrentTimeMillis((-1));
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      Function.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      unaryOperator1.compose((Function<? super Integer, ?>) unaryOperator0);
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) jSPredicateForm0);
      jSTerm0.stream();
      jSTerm0.matches(jSPredicateForm0);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ub$QcuXr)lW4c{]Mb");
      char[] charArray0 = new char[5];
      stringReader0.read(charArray0);
      stringReader0.read(charArray0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      jSTerm0.addElement(stringReader0);
      System.setCurrentTimeMillis(5);
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      char[] charArray0 = new char[1];
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.listIterator();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm1 = null;
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches((JSPredicateForm) null, jSSubstitution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      char[] charArray0 = new char[1];
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.addAll((Collection) jSPredicateForm0);
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches(jSPredicateForm0, jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      jSPredicateForm0.toStr();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      assertSame(unaryOperator1, unaryOperator0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      JSTerm jSTerm0 = new JSTerm();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      // Undeclared exception!
      try { 
        jSTerm0.print();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSSubstitution0.removeAll(jSSubstitution1);
      jSSubstitution1.removeAll(jSSubstitution0);
      jSSubstitution1.iterator();
      Iterator iterator0 = jSSubstitution1.iterator();
      jSSubstitution0.addElements(jSSubstitution1);
      jSSubstitution1.add((Object) jSSubstitution0);
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      jSSubstitution0.spliterator();
      jSSubstitution0.add((Object) jSSubstitution0);
      jSSubstitution0.add((Object) null);
      jSSubstitution2.add((Object) iterator0);
      jSSubstitution1.clear();
      jSSubstitution1.add((Object) iterator0);
      jSSubstitution2.add((Object) iterator0);
      jSSubstitution0.removeElements(jSSubstitution2);
      jSSubstitution2.add((Object) jSSubstitution0);
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      UnaryOperator.identity();
      UnaryOperator.identity();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.print();
      assertEquals(0, jSPredicateForm0.size());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSSubstitution0.removeAllElements();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      UnaryOperator.identity();
      JSSubstitution jSSubstitution4 = new JSSubstitution();
      JSSubstitution jSSubstitution5 = new JSSubstitution();
      JSSubstitution jSSubstitution6 = new JSSubstitution();
      JSSubstitution jSSubstitution7 = new JSSubstitution();
      JSSubstitution jSSubstitution8 = new JSSubstitution();
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m<2l07BYAij15,[");
      char[] charArray0 = new char[2];
      stringReader0.read(charArray0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer1.ttype = (-4);
      streamTokenizer0.pushBack();
      streamTokenizer0.parseNumbers();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) stringReader0);
      streamTokenizer0.slashStarComments(true);
      streamTokenizer0.parseNumbers();
      streamTokenizer1.lowerCaseMode(true);
      jSTerm0.stream();
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) jSTerm0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.io.StringReader cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches(jSPredicateForm1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(function0).apply(any());
      Function<Object, Integer> function1 = unaryOperator0.andThen((Function<? super Object, ? extends Integer>) function0);
      Function<Integer, Integer> function2 = Function.identity();
      Function<Integer, String> function3 = (Function<Integer, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(function3).apply(anyInt());
      Function<Object, String> function4 = function1.andThen((Function<? super Integer, ? extends String>) function3);
      Function<Integer, Integer> function5 = function1.compose((Function<? super Integer, ?>) function1);
      Function<Object, Integer> function6 = function1.andThen((Function<? super Integer, ? extends Integer>) function1);
      Function<Integer, Integer> function7 = function1.compose((Function<? super Integer, ?>) function2);
      function6.compose((Function<? super Integer, ?>) function4);
      Integer integer0 = new Integer(1);
      function4.apply(integer0);
      Function<Object, Integer> function8 = function1.andThen((Function<? super Integer, ? extends Integer>) function1);
      Integer integer1 = new Integer(1);
      Function<Object, Integer> function9 = function1.andThen((Function<? super Integer, ? extends Integer>) function2);
      Function<Object, Integer> function10 = function1.andThen((Function<? super Integer, ? extends Integer>) function1);
      Function<Object, String> function11 = function1.andThen((Function<? super Integer, ? extends String>) function4);
      Integer integer2 = new Integer(1);
      Function<Integer, Integer> function12 = function5.andThen((Function<? super Integer, ? extends Integer>) function7);
      function7.compose((Function<? super Object, ? extends Integer>) function9);
      Integer integer3 = new Integer(1);
      function9.andThen((Function<? super Integer, ?>) function12);
      function10.andThen((Function<? super Integer, ?>) function9);
      function10.andThen((Function<? super Integer, ? extends String>) function4);
      Integer integer4 = new Integer(1);
      function5.compose((Function<? super Integer, ? extends Integer>) function6);
      function1.compose((Function<? super Object, ?>) function6);
      function1.andThen((Function<? super Integer, ?>) function6);
      Function<Integer, Integer> function13 = function10.compose((Function<? super Integer, ?>) function11);
      Integer integer5 = new Integer(1);
      Function<Object, Integer> function14 = function10.andThen((Function<? super Integer, ? extends Integer>) function2);
      function8.andThen((Function<? super Integer, ? extends Integer>) function13);
      function9.andThen((Function<? super Integer, ? extends Integer>) function12);
      function6.compose((Function<? super String, ?>) function1);
      function6.andThen((Function<? super Integer, ?>) function11);
      unaryOperator0.andThen((Function<? super Object, ? extends Integer>) function14);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm((StreamTokenizer) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      System.setCurrentTimeMillis(0L);
      StringReader stringReader0 = new StringReader("ID^93#bbbXb<+cf51'");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      // Undeclared exception!
      try { 
        jSPredicateForm0.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.8293230219306162
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      UnaryOperator.identity();
      Integer integer0 = new Integer(1);
      Integer integer1 = new Integer(1);
      Integer integer2 = new Integer(1);
      Integer integer3 = new Integer(1);
      Integer integer4 = new Integer(1);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(Cmgj_YYE^");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }
}
