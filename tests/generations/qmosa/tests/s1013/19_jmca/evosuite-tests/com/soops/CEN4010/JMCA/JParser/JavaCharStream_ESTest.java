/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 00:36:26 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.net.URI;
import java.net.URISyntaxException;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockRandomAccessFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringReader stringReader0 = new StringReader("C1ZB");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2238), (-2238), 1);
      String string0 = "";
      int int0 = 647;
      javaCharStream0.inBuf = 647;
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.readChar();
      MockFile mockFile0 = new MockFile((File) null, "");
      int int1 = (-281);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-281), (-2238));
      javaCharStream0.BeginToken();
      javaCharStream1.ExpandBuff(false);
      InputStream inputStream0 = null;
      JavaCharStream javaCharStream2 = null;
      try {
        javaCharStream2 = new JavaCharStream((InputStream) null, (-2238), '\u0000');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.919236679962589
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      bufferedInputStream0.markSupported();
      bufferedInputStream0.close();
      StringReader stringReader0 = new StringReader("(S!EJ2MX[OEr=@e4w");
      StringReader stringReader1 = new StringReader("<ktgb0Aj7r0^6EA%");
      StringReader stringReader2 = new StringReader("i>");
      int int0 = 358;
      stringReader2.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, (-2706), 358);
      javaCharStream0.ReInit((Reader) null);
      stringReader2.markSupported();
      int int1 = 1;
      javaCharStream0.backup(1);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 358, 358, 358);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 1292, 358, (-2706));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.459186140032453
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\\1ZB");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<2T;6&tX@|MZ$");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)92, 96);
      javaCharStream0.BeginToken();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream1);
      String string0 = null;
      URI uRI0 = MockURI.URI((String) null, "\\1ZB", "Th|#EK");
      MockURI.normalize(uRI0);
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI is not absolute
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.147576009616535
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringReader stringReader0 = new StringReader("C1ZB");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2238), (-2238), 1);
      String string0 = "";
      javaCharStream0.inBuf = 647;
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.readChar();
      int int0 = (-281);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-281), (-2238));
      javaCharStream0.readChar();
      javaCharStream1.ExpandBuff(false);
      InputStream inputStream0 = null;
      javaCharStream1.AdjustBuffSize();
      JavaCharStream javaCharStream2 = null;
      try {
        javaCharStream2 = new JavaCharStream((InputStream) null, (-2238), (-638));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringReader stringReader0 = new StringReader("C1ZB");
      StringReader stringReader1 = new StringReader("");
      MockFile mockFile0 = new MockFile((File) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[9];
      stringReader0.reset();
      charArray0[0] = '^';
      charArray0[1] = 'b';
      charArray0[2] = '*';
      charArray0[3] = '<';
      int[] intArray0 = new int[4];
      intArray0[0] = (int) '^';
      intArray0[1] = (-1);
      intArray0[2] = (int) 'b';
      intArray0[3] = (int) '^';
      javaCharStream0.bufline = intArray0;
      charArray0[4] = 'y';
      charArray0[5] = '+';
      charArray0[6] = 'F';
      charArray0[7] = 'K';
      charArray0[8] = '3';
      javaCharStream0.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.864620610112212
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader("C1ZB");
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)9;
      byteArray0[4] = (byte)9;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)9, (-3708), 75);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("-U}<e[:42uX\")z2(hc");
      javaCharStream0.ReadByte();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (byte)9, (byte)9);
      javaCharStream0.readChar();
      javaCharStream1.ExpandBuff(false);
      javaCharStream0.maxNextCharInd = 0;
      javaCharStream1.tokenBegin = (int) (byte)9;
      javaCharStream1.readChar();
      javaCharStream0.getColumn();
      javaCharStream1.GetImage();
      stringReader1.reset();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 4070, (-2341), 4073);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      javaCharStream2.ReInit((InputStream) sequenceInputStream0, 4075, 0);
      javaCharStream1.BeginToken();
      javaCharStream1.GetImage();
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, javaCharStream0.bufpos);
      
      char char0 = javaCharStream1.BeginToken();
      assertEquals('}', char0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.2256965672453437
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      String string0 = "\\\\1ZB";
      StringReader stringReader0 = new StringReader("\\1ZB");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-12), (byte)3, 7);
      javaCharStream0.bufpos = 5427;
      javaCharStream0.BeginToken();
      MockFile mockFile0 = new MockFile("\\1ZB", "\\1ZB");
      String string1 = "Y";
      javaCharStream0.adjustBeginLineColumn((-1674), 1310);
      mockFile0.mkdir();
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile(mockFile0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.95668684206645
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StringReader stringReader0 = new StringReader("C1ZB");
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-455), 73);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (-455), 74);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginColumn();
      int int0 = javaCharStream0.getBeginLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-455), int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.321613019380618
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      JavaCharStream.hexval('4');
      StringReader stringReader0 = new StringReader(" column ");
      stringReader0.markSupported();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-3116));
      javaCharStream0.ReInit((Reader) stringReader0);
      stringReader0.markSupported();
      javaCharStream0.backup(5);
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.getEndColumn();
      javaCharStream0.GetImage();
      javaCharStream0.ReInit((Reader) stringReader0, 4096, 4096, 4096);
      assertEquals(0, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      int int0 = 5;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 92);
      char[] charArray0 = new char[8];
      charArray0[0] = ' ';
      charArray0[1] = '0';
      charArray0[2] = 'J';
      charArray0[3] = '6';
      charArray0[4] = 'i';
      charArray0[5] = '*';
      charArray0[6] = 'Q';
      charArray0[7] = ':';
      javaCharStream0.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.9478799568155343
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\\1ZB");
      int int0 = 7;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-12), (byte)3, 7);
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.readChar();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockFile mockFile0 = new MockFile((File) null, "\\1ZB");
      String string0 = "dG0ThbEenJ";
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      MockFile mockFile1 = new MockFile((File) null, "dG0ThbEenJ");
      mockFile1.setReadable(true, true);
      MockFile mockFile2 = new MockFile("");
      MockFile mockFile3 = new MockFile(mockFile0, "dG0ThbEenJ");
      mockFile3.renameTo(mockFile0);
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile(mockFile3, "Yu}y[");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"Yu}y[\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.057941779994331
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StringReader stringReader0 = new StringReader("C1ZB");
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)9;
      byteArray0[4] = (byte)9;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)9, (-3708), 61);
      StringReader stringReader1 = new StringReader("-U}<e[:42uX\")z2(hc");
      javaCharStream0.ReadByte();
      javaCharStream0.prevCharIsCR = true;
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (byte)9, (byte)9);
      javaCharStream0.readChar();
      // Undeclared exception!
      try { 
        javaCharStream1.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader("58hMa");
      StringReader stringReader1 = new StringReader("58hMa");
      JavaCharStream.hexval('b');
      MockFile mockFile0 = new MockFile("S^Q", "k`J't](9+p]q");
      mockFile0.toPath();
      MockFile mockFile1 = new MockFile(mockFile0, "qL0N+X]1og _#{?");
      mockFile1.setWritable(false, false);
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile(mockFile1, " column ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \" column \" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StringReader stringReader0 = new StringReader("C1ZB");
      JavaCharStream.hexval('C');
      MockFile mockFile0 = new MockFile((String) null, "C1ZB");
      MockFile mockFile1 = new MockFile("qL0N+X]1og _#{?");
      mockFile1.toPath();
      mockFile0.setWritable(false, true);
      mockFile0.getCanonicalPath();
      MockFile mockFile2 = null;
      try {
        mockFile2 = new MockFile(mockFile0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.713537065092644
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-81);
      byteArray0[3] = (byte) (-81);
      byteArray0[4] = (byte) (-81);
      byteArray0[5] = (byte) (-81);
      byteArray0[6] = (byte) (-81);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 2442, (byte) (-81));
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (-2650), 55);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      int int0 = javaCharStream0.getEndLine();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals((-2650), int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.0210240418924035
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      bufferedInputStream0.close();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte) (-58);
      byteArray0[3] = (byte) (-125);
      byteArray0[5] = (byte) (-58);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 56, (byte)0);
      byteArrayInputStream0.reset();
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 74, 4094);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginColumn();
      javaCharStream0.getBeginLine();
      javaCharStream0.getColumn();
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) null, 95, 4096, (-1115));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      String string0 = "JOduzzT3=~JTEtgY";
      StringReader stringReader0 = new StringReader("JOduzzT3=~JTEtgY");
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.Done();
      javaCharStream0.backup((-295));
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0600453218480865
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      JavaCharStream.hexval('f');
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)117;
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte)81;
      byteArray0[3] = (byte) (-95);
      byteArray0[4] = (byte)91;
      byteArray0[5] = (byte)57;
      byteArray0[6] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 102, (byte)13);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      char[] charArray0 = new char[7];
      charArray0[0] = '^';
      charArray0[1] = '^';
      charArray0[2] = 'C';
      charArray0[3] = 'g';
      charArray0[4] = '1';
      charArray0[5] = 'f';
      charArray0[6] = '^';
      javaCharStream0.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      JavaCharStream.hexval('E');
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.815640124187054
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      bufferedInputStream0.close();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte) (-58);
      byteArray0[3] = (byte) (-125);
      byteArray0[4] = (byte)27;
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)27;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 56, (byte)0);
      int[] intArray0 = new int[4];
      intArray0[0] = (int) (byte)27;
      intArray0[1] = 74;
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      javaCharStream0.bufcolumn = intArray0;
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 74, 4094);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StringReader stringReader0 = new StringReader("58hMa");
      int int0 = JavaCharStream.hexval('d');
      assertEquals(13, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.7221425569193896
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      bufferedInputStream0.markSupported();
      bufferedInputStream0.close();
      byte byte0 = (byte)9;
      StringReader stringReader0 = new StringReader("(S!EJ2MX[OEr=@e4w");
      StringReader stringReader1 = new StringReader("<ktgb0Aj7r0^6EA%");
      StringReader stringReader2 = new StringReader("i>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, (-2730), 358);
      javaCharStream0.ReInit((Reader) null);
      stringReader2.markSupported();
      javaCharStream0.backup(1);
      javaCharStream0.BeginToken();
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.8874762677165355
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      bufferedInputStream0.close();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte) (-58);
      byteArray0[3] = (byte) (-125);
      byteArray0[4] = (byte)27;
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)27;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 56, (byte)0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 74, 4094);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(4096, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      bufferedInputStream0.close();
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.4098490955258454
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader("58hMa");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.Done();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (byte)92, (-2230));
      javaCharStream1.getBeginLine();
      javaCharStream1.BeginToken();
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-81);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.902043617517886
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      bufferedInputStream0.close();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte) (-125);
      byteArray0[3] = (byte) (-125);
      byteArray0[4] = (byte)27;
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)27;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 56, (byte)0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 74, 4094);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getLine();
      javaCharStream0.adjustBeginLineColumn(56, (byte)27);
      assertEquals(27, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.8534936998608185
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader("C1ZB");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0);
      stringReader0.markSupported();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)3;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C1ZB");
      byteArray0[3] = (byte)78;
      byteArray0[4] = (byte)3;
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (byte)3, (-3708), 61);
      StringReader stringReader1 = new StringReader("C1ZB");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1, 93, (byte)3);
      javaCharStream2.getBeginLine();
      javaCharStream2.BeginToken();
      javaCharStream2.BeginToken();
      stringReader1.reset();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream2.getLine();
      javaCharStream2.adjustBeginLineColumn((-3708), (byte)3);
      assertEquals(0, javaCharStream2.bufpos);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      char char0 = 'c';
      JavaCharStream.hexval('c');
      int int0 = (-1438);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-1438));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Sy&~zedGz=>");
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.4454115408640784
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StringReader stringReader0 = new StringReader("9");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1), 7);
      javaCharStream0.available = 0;
      javaCharStream0.BeginToken();
      stringReader0.markSupported();
      char[] charArray0 = new char[1];
      stringReader0.read(charArray0);
      javaCharStream0.backup(3690);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn(7, 3498);
      assertEquals(3498, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      JavaCharStream.hexval('D');
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " column ");
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int int0 = JavaCharStream.hexval('1');
      assertEquals(1, int0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.977500522076773
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileDescriptor fileDescriptor1 = new FileDescriptor();
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 63, 62);
      javaCharStream0.nextCharInd = 1886;
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      JavaCharStream.hexval('4');
      MockFile mockFile0 = new MockFile("qL0N+X]1og _#{?", " column ");
      mockFile0.toPath();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "qL0N+X]1og _#{?");
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringReader stringReader0 = new StringReader("58hMa");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " column ");
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.9980021697522963
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringReader stringReader0 = new StringReader("58hMa");
      StringReader stringReader1 = new StringReader("58hMa");
      char[] charArray0 = new char[5];
      charArray0[0] = '#';
      charArray0[1] = 'k';
      charArray0[2] = ' ';
      charArray0[3] = 'W';
      charArray0[4] = ':';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader1.read(charBuffer0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 0, 8);
      javaCharStream0.adjustBeginLineColumn(0, 0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 96, 96);
      javaCharStream1.BeginToken();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream2.bufsize = 0;
      javaCharStream1.GetImage();
      javaCharStream2.AdjustBuffSize();
      try { 
        JavaCharStream.hexval('#');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.8874762677165355
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      bufferedInputStream0.close();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte) (-58);
      byteArray0[3] = (byte) (-125);
      byteArray0[4] = (byte)27;
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)27;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 56, (byte)0);
      javaCharStream0.available = (int) (byte)27;
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 74, 4094);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginColumn();
      int int0 = javaCharStream0.getBeginLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(74, int0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.6136940964716731
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream.hexval('2');
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.1675069751831566
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringReader stringReader0 = new StringReader("G)z+{*96");
      stringReader0.read();
      stringReader0.mark(71);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.read();
      stringReader0.skip((-1L));
      javaCharStream0.adjustBeginLineColumn(2444, 2444);
      javaCharStream0.AdjustBuffSize();
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      JavaCharStream.hexval('A');
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      MockFile mockFile0 = new MockFile("", "");
      mockFile0.setReadable(false, false);
      mockFile0.setWritable(false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      MockFile mockFile1 = new MockFile("");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StringReader stringReader0 = new StringReader("C1ZB");
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte)3;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      JavaCharStream.hexval('f');
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      String string0 = "58hMa";
      StringReader stringReader0 = new StringReader("58hMa");
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.2352081111079474
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringReader stringReader0 = new StringReader("#x");
      byte[] byteArray0 = new byte[7];
      byteArray0[5] = (byte)1;
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte) (-9);
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte) (-58);
      byteArray0[5] = (byte)92;
      byteArray0[6] = (byte)4;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-1), 672);
      StringReader stringReader1 = new StringReader("#x");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 98, (byte) (-58), 1);
      javaCharStream0.getBeginLine();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      stringReader1.reset();
      javaCharStream0.available = (int) (byte)4;
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-56), int0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      String string0 = "G)z+{*96";
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.5053262207700673
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte) (-81);
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReadByte();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (byte)12, 6);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1), 572);
      int int0 = (-1979);
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, 6, (-1979));
      // Undeclared exception!
      try { 
        javaCharStream2.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      bufferedInputStream0.close();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-81);
      byteArray0[1] = (byte) (-110);
      byteArray0[2] = (byte)12;
      byteArray0[3] = (byte)93;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-110), (byte) (-110));
      javaCharStream0.ReInit((Reader) null, (-94), (int) (byte) (-110));
      InputStream inputStream0 = null;
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 63, 63);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.5117592185692716
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Sy&~zedGz=>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)69;
      byteArray0[1] = (byte)32;
      byteArray0[2] = (byte)65;
      byteArray0[3] = (byte)69;
      byteArray0[4] = (byte)32;
      byteArray0[5] = (byte)65;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-1), (-1));
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (-1), 0, (byte)69);
      javaCharStream2.ReadByte();
      try { 
        javaCharStream2.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      String string0 = "";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      char char0 = 'P';
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.6798139591112977
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      bufferedInputStream0.close();
      byte byte0 = (byte) (-1);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte) (-58);
      StringReader stringReader0 = new StringReader("<ktgb0Aj7r0^6EA%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-58), (byte) (-1));
      javaCharStream0.ReInit((Reader) stringReader0);
      stringReader0.markSupported();
      javaCharStream0.backup(1);
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.bufpos = (int) (byte) (-58);
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.6498198746522927
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader("58hM");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'I';
      charArray0[1] = '.';
      charArray0[2] = 'F';
      javaCharStream0.ReInit((Reader) stringReader0);
      stringReader0.markSupported();
      javaCharStream0.backup(7);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 4699, 226);
      javaCharStream1.BeginToken();
      javaCharStream1.GetImage();
      javaCharStream0.adjustBeginLineColumn(7, 76);
      assertEquals(4088, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.65010838746784
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader("58hMa");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.backup(0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)87;
      byteArray0[1] = (byte)27;
      byteArray0[2] = (byte)27;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte) (-125);
      javaCharStream0.prevCharIsLF = true;
      byteArray0[5] = (byte) (-58);
      byteArray0[6] = (byte)9;
      byteArray0[7] = (byte) (-1);
      byteArray0[8] = (byte) (-121);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(3882, (byte) (-121));
      assertEquals(3882, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)2;
      byte byte0 = (byte) (-81);
      byteArray0[1] = (byte) (-81);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream.hexval('B');
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "I7Ry1Vm]RzL~'7,");
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-81);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.5760898974011934
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte) (-81);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)12, (byte)12);
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      InputStream inputStream0 = null;
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (byte) (-81), (-1386));
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)79;
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream.hexval('a');
      int int0 = JavaCharStream.hexval('a');
      assertEquals(10, int0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.1766453509367873
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream((InputStream) null);
      bufferedInputStream1.close();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream2 = new BufferedInputStream(bufferedInputStream1);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)9, 4080);
      javaCharStream0.BeginToken();
      InputStream inputStream0 = null;
      SequenceInputStream sequenceInputStream0 = null;
      try {
        sequenceInputStream0 = new SequenceInputStream((InputStream) null, (InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      JavaCharStream.hexval('A');
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      MockFile mockFile0 = new MockFile("", "");
      mockFile0.setReadable(false, false);
      mockFile0.setWritable(false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      JavaCharStream.hexval('4');
      MockFile mockFile0 = new MockFile("", "");
      MockFile mockFile1 = new MockFile(mockFile0, " column ");
      mockFile1.toPath();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.450507848988659
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("58hMa");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      boolean boolean0 = javaCharStream0.prevCharIsCR;
      char[] charArray0 = new char[1];
      charArray0[0] = '5';
      stringReader0.read(charArray0);
      javaCharStream0.backup(3690);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(true);
      assertEquals(4096, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.3982352446165143
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StringReader stringReader0 = new StringReader("9");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1), 7);
      javaCharStream0.available = 0;
      javaCharStream0.BeginToken();
      stringReader0.markSupported();
      char[] charArray0 = new char[1];
      charArray0[0] = '9';
      stringReader0.read(charArray0);
      javaCharStream0.backup(3690);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      String string0 = " column ";
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-866), 4299, 1689);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.7289188130102984
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader("C1ZB");
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte)3;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)3;
      stringReader0.markSupported();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3116), (byte)3);
      javaCharStream0.ReInit((Reader) stringReader0);
      stringReader0.markSupported();
      int int0 = 1;
      javaCharStream0.backup(1);
      javaCharStream0.BeginToken();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      bufferedInputStream0.close();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte) (-58);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      int int0 = JavaCharStream.hexval('9');
      assertEquals(9, int0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.727483660799123
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      bufferedInputStream0.close();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte) (-58);
      byteArray0[3] = (byte) (-125);
      byteArray0[4] = (byte)27;
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)27;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 56, (byte)0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 74, 4094);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      byteArrayInputStream0.markSupported();
      javaCharStream0.UpdateLineColumn('|');
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)53;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (-75));
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 95);
      StringReader stringReader0 = new StringReader("m0s");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-75), (byte)53);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.991650292958688
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0Av5tXV9c-Dtyh");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1034), (-1));
      javaCharStream1.ReInit((Reader) stringReader0);
      javaCharStream1.backup((-1034));
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix(3077);
      PipedInputStream pipedInputStream0 = new PipedInputStream(884);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      JavaCharStream javaCharStream2 = new JavaCharStream(pipedInputStream0);
      javaCharStream1.ReInit((InputStream) dataInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(dataInputStream0);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, (-25), 0);
      JavaCharStream.hexval('0');
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      JavaCharStream.hexval('8');
      MockFile mockFile0 = new MockFile("`~Me");
      mockFile0.deleteOnExit();
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile(mockFile0, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = JavaCharStream.hexval('e');
      assertEquals(14, int0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.3420158589513322
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader("58hMa");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      boolean boolean0 = javaCharStream0.prevCharIsCR;
      char[] charArray0 = new char[1];
      charArray0[0] = '5';
      stringReader0.read(charArray0);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(true);
      assertEquals(4096, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-111);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-2240), (byte) (-111), (byte) (-111));
      char char0 = javaCharStream0.ReadByte();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('\u0000', char0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileDescriptor fileDescriptor1 = new FileDescriptor();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)67;
      byteArray0[1] = (byte)49;
      byteArray0[2] = (byte) (-8);
      byteArray0[3] = (byte) (-21);
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-1), (byte)10);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-8), (-1));
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0676032882216056
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A58{a");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, (-1427));
      javaCharStream0.adjustBeginLineColumn(70, 69);
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.7414180849434708
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("C1ZB");
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)0;
      String string0 = "com.soops.CEN4010.JMCA.JParser.JavaCharStream";
      StringReader stringReader1 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 100, 100, 2476);
      javaCharStream0.readChar();
      File file0 = null;
      MockFile mockFile0 = new MockFile((File) null, "Invalid escape character at line ");
      String string1 = " column ";
      String string2 = ",l5A5f)=FREvIss65P";
      try { 
        MockURI.URI(" column ", ",l5A5f)=FREvIss65P", "=$");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in scheme name at index 0:  column :,l5A5f)=FREvIss65P#=$
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.4522469794234416
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader(".Gt");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      stringReader0.markSupported();
      javaCharStream0.backup(7);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-1122));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.7013090971439206
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)3;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C1ZB");
      int int0 = JavaCharStream.hexval('F');
      assertEquals(15, int0);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, (byte)3);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, (-5929), 15);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.8200609906768856
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringReader stringReader0 = new StringReader("58hMa");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.backup(0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)87;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte) (-125);
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)9;
      byteArray0[7] = (byte) (-1);
      javaCharStream0.buffer = null;
      byteArray0[8] = (byte) (-121);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 100, (int) (byte) (-125));
      javaCharStream0.getBeginLine();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      assertEquals((-124), javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.7414180849434708
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader("58hMa");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, (-1), 4096);
      String string0 = "";
      javaCharStream0.readChar();
      File file0 = null;
      MockFile mockFile0 = new MockFile((File) null, "");
      String string1 = "=$";
      try { 
        MockURI.URI("=$", "58hMa", "/X9Ww9C|;");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in scheme name at index 0: =$:58hMa#/X9Ww9C%7C;
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.3654819933311897
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String string0 = "9";
      StringReader stringReader0 = new StringReader("9");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1), 7);
      javaCharStream0.available = 0;
      javaCharStream0.BeginToken();
      String string1 = "L=Cq";
      MockFile mockFile0 = new MockFile("L=Cq");
      StringReader stringReader1 = new StringReader("L=Cq");
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.6136940964716731
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringReader stringReader0 = new StringReader("58hMa");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream.hexval('5');
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader("a+:-D!31dQy");
      stringReader0.markSupported();
      char[] charArray0 = new char[3];
      charArray0[1] = 'j';
      charArray0[1] = '`';
      charArray0[2] = 'n';
      stringReader0.read(charArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 442, 442);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.901773211243061
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringReader stringReader0 = new StringReader("t9xmtp.1&&~On-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-5), (byte)3, 7);
      javaCharStream0.BeginToken();
      MockFile mockFile0 = new MockFile("t9xmtp.1&&~On-", "t9xmtp.1&&~On-");
      mockFile0.mkdir();
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile(mockFile0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.8744413050311617
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      JavaCharStream.hexval('D');
      StringReader stringReader0 = new StringReader("TCa*Xq&<k?x`thYs/");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 83, 13);
      javaCharStream0.getBeginLine();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-2230), (-2230), 0);
      javaCharStream1.GetImage();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (-1), (-2715), 53);
      javaCharStream2.ReInit((Reader) stringReader0);
      try { 
        javaCharStream2.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.0516819854659416
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)59;
      byteArray0[1] = (byte)70;
      byteArray0[2] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (byte)70);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, 4096, (-1));
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), (byte)59, (byte)1);
      javaCharStream0.ReadByte();
      try { 
        javaCharStream1.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.9825734513679603
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("");
      JavaCharStream.hexval('7');
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      mockFileInputStream0.release();
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 1178, 1, 4068);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1), 0);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 15);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      javaCharStream0.bufpos = 0;
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.1999387844239364
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringReader stringReader0 = new StringReader("C1ZB");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2238), 1377, 1);
      javaCharStream0.readChar();
      File file0 = null;
      MockFile mockFile0 = new MockFile((File) null, "");
      mockFile0.getAbsolutePath();
      javaCharStream0.readChar();
      try { 
        MockURI.URI("", "", "C1ZB", "");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: ://C1ZB#
         //
         verifyException("java.net.URI", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.024402353455851
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte) (-81);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)12, (byte)12);
      javaCharStream0.ReInit((Reader) null, 67, 74);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 4094, 74);
      javaCharStream0.BeginToken();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0);
      javaCharStream1.GetImage();
      javaCharStream1.AdjustBuffSize();
      javaCharStream0.GetSuffix((byte)12);
      assertEquals(4094, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 14, 14, 14);
      javaCharStream0.inBuf = 0;
      char[] charArray0 = javaCharStream0.GetSuffix(14);
      assertEquals(14, charArray0.length);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1), 0);
      byte[] byteArray0 = new byte[0];
      int int0 = 15;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 15);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      javaCharStream0.bufpos = 0;
      stringReader0.read();
      byteArrayInputStream0.close();
      pushbackInputStream0.read(byteArray0);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.924886245768638
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StringReader stringReader0 = new StringReader("EI%qrS+.e%Q'hg_U");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 82, (-1));
      javaCharStream1.ReInit((Reader) null);
      javaCharStream1.backup((byte)97);
      javaCharStream1.BeginToken();
      javaCharStream1.GetSuffix((byte)97);
      PipedInputStream pipedInputStream0 = new PipedInputStream(80);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      JavaCharStream javaCharStream2 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.ReInit((InputStream) pipedInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.4541430534399398
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader("C1ZB");
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)3;
      byteArray0[4] = (byte)3;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)3, (-3708), 61);
      StringReader stringReader1 = new StringReader("-U}<e[:42uX\")z2(hc");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (byte)3, (byte)3);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      stringReader1.reset();
      javaCharStream1.GetImage();
      javaCharStream0.GetSuffix(61);
      assertEquals((-3707), javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.8874762677165355
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      bufferedInputStream0.close();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte) (-58);
      byteArray0[3] = (byte) (-125);
      byteArray0[4] = (byte)27;
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)27;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 56, (byte)0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 74, 4094);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      int int0 = javaCharStream0.getEndLine();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(74, int0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.9880486116080727
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      bufferedInputStream0.mark((-868));
      bufferedInputStream0.close();
      StringReader stringReader0 = new StringReader("(S!EJ2MX[OEr=@e4w");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-58), (-1141));
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.backup((byte)9);
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.FillBuff();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      stringReader0.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, 67, (byte)27, (byte)9);
      javaCharStream1.GetImage();
      javaCharStream1.AdjustBuffSize();
      javaCharStream0.getEndLine();
      assertEquals(4088, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.8960122646159148
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringReader stringReader0 = new StringReader("58hMa");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)9, 0, 0);
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.ReadByte();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-1), 1091);
      javaCharStream0.readChar();
      javaCharStream1.ExpandBuff(false);
      javaCharStream0.readChar();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      JavaCharStream javaCharStream2 = new JavaCharStream(pushbackInputStream0, 1, 1091);
      javaCharStream2.GetImage();
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader1, 4070, 0, 0);
      Enumeration<ByteArrayInputStream> enumeration1 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      javaCharStream3.ReInit((InputStream) sequenceInputStream0, 2603, 1);
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.2356454875197467
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      String string0 = "9";
      StringReader stringReader0 = new StringReader("9");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-20), (-20), 2);
      javaCharStream0.available = 0;
      javaCharStream0.BeginToken();
      MockFile mockFile0 = new MockFile("L=Cq");
      mockFile0.setLastModified(0L);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      mockFile0.setReadable(true, false);
      MockFile mockFile1 = new MockFile("9");
      MockFile mockFile2 = new MockFile(mockFile1, "");
      mockFile2.renameTo(mockFile0);
      mockFile1.setExecutable(true, true);
      mockFile2.renameTo(mockFile1);
      mockFile1.setWritable(true, false);
      // Undeclared exception!
      try { 
        MockFile.createTempFile((String) null, "", (File) mockFile2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StringReader stringReader0 = new StringReader("PP;");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.Done();
      javaCharStream0.prevCharIsLF = true;
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, (-3108), 70);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StringReader stringReader0 = new StringReader("tv-}7@?");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ry*V&_,^3PFih_a(p");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "bT?W?ta}C*b<@5");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 77);
      javaCharStream0.prevCharIsLF = true;
      int[] intArray0 = new int[2];
      intArray0[0] = (-1);
      intArray0[1] = 0;
      javaCharStream0.bufline = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(false);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.977500522076773
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-41);
      byteArray0[1] = (byte) (-62);
      byteArray0[2] = (byte)98;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)72;
      byteArray0[5] = (byte) (-116);
      byteArray0[6] = (byte)70;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)102;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1), (-1));
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.157280995708096
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)72;
      byteArray0[2] = (byte) (-16);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-26);
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read(byteArray0);
      byteArrayInputStream0.mark((byte)0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)0, (byte)0);
      javaCharStream0.available = (-1514);
      javaCharStream0.maxNextCharInd = 0;
      byteArrayInputStream0.reset();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.616658115912942
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0);
      stringReader0.markSupported();
      stringReader0.close();
      javaCharStream0.ReInit((Reader) stringReader0);
      StringReader stringReader1 = new StringReader(".");
      stringReader1.markSupported();
      int int0 = (-1427);
      javaCharStream0.backup((-1427));
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.4960054686834225
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader1);
      stringReader0.markSupported();
      StringReader stringReader2 = new StringReader("");
      stringReader2.close();
      javaCharStream0.ReInit((Reader) stringReader2);
      stringReader2.markSupported();
      int int0 = 2;
      javaCharStream0.backup(2);
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      int int1 = (-872);
      try { 
        stringReader2.skip(1L);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.440769675320202
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1), 7);
      javaCharStream0.available = 0;
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.188815736332325
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      bufferedInputStream0.close();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-1);
      StringReader stringReader0 = new StringReader(">L&NN(");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-1), 1229, 2048);
      StringReader stringReader1 = new StringReader("-U}<e[:42uX\")z2(hc");
      StringReader stringReader2 = new StringReader("-U}<e[:42uX\")z2(hc");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, 2620, 1229);
      javaCharStream1.BeginToken();
      javaCharStream0.BeginToken();
      StringReader stringReader3 = new StringReader(">L&NN(");
      stringReader3.reset();
      javaCharStream0.GetImage();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      bufferedInputStream0.close();
      StringReader stringReader0 = new StringReader("<ubq<-/J-wsu");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, (byte) (-58), 115, (byte) (-110));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-37), (-37), 0);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 15);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      javaCharStream0.bufpos = 0;
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0, 359);
      stringReader0.read();
      byteArrayInputStream0.close();
      bufferedInputStream0.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(pushbackInputStream0, 58, 1190, 1);
      javaCharStream0.backup(58);
      assertEquals((-58), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.350711858404486
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StringReader stringReader0 = new StringReader("58hMa");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[9];
      charArray0[1] = '.';
      charArray0[2] = 'F';
      javaCharStream0.BeginToken();
      stringReader0.markSupported();
      javaCharStream0.backup(7);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      assertEquals(4091, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-1546), 4096);
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Reader reader0 = null;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 3482, 3482, 3482);
      javaCharStream0.GetImage();
      javaCharStream0.tokenBegin = 3482;
      javaCharStream0.Done();
      int[] intArray0 = new int[2];
      intArray0[0] = 3482;
      intArray0[1] = 3482;
      javaCharStream0.bufline = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.65842043948342
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\\1Z");
      byte byte0 = (byte)3;
      int int0 = 4089;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1), 4089);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.backup((byte)3);
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.readChar();
      javaCharStream0.AdjustBuffSize();
      stringReader0.close();
      int int1 = 4077;
      javaCharStream0.GetImage();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((PipedOutputStream) null, 4077);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(S!EJ2MX[OEr=@e4w");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      stringReader0.read();
      pipedInputStream0.skip((-1141));
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader0, 3010, (byte)9, (-1141));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.7250829733914482
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 95, 220, 233);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn(')');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.889319585688886
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StringReader stringReader0 = new StringReader("C1ZB");
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte)3;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)3;
      stringReader0.markSupported();
      stringReader0.close();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)3, (byte)3);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (-234), (int) (byte)3);
      javaCharStream0.BeginToken();
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 1821, (int) (byte)3, (-1));
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1211), (-1), (byte)3);
      StringReader stringReader1 = new StringReader("FU)`2Q}");
      javaCharStream0.ReInit((Reader) stringReader1, (-1426), 0, 710);
      assertEquals(0, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)98;
      byteArray0[1] = (byte)64;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)50;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-47);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      mockFileInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, (-1), (-3765), 99);
      char[] charArray0 = javaCharStream0.GetSuffix(0);
      assertEquals(0, charArray0.length);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1), 0);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 15);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      javaCharStream0.bufpos = 0;
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0, 359);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(dataInputStream0);
      javaCharStream0.ReInit((InputStream) dataInputStream0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(dataInputStream0);
      byte[] byteArray1 = new byte[0];
      javaCharStream1.getBeginLine();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(dataInputStream0, pushbackInputStream1);
      try { 
        sequenceInputStream0.reset();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // mark/reset not supported
         //
         verifyException("java.io.InputStream", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-122);
      byteArray0[1] = (byte)14;
      byteArray0[2] = (byte) (-26);
      byteArray0[3] = (byte) (-55);
      byteArray0[4] = (byte) (-47);
      byteArray0[5] = (byte)59;
      byteArray0[6] = (byte)86;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (byte)86);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 97, (byte) (-55));
      javaCharStream0.getBeginLine();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.948720592834763
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)15;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)83;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)46, 1);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, (-1103), 11, 1);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      JavaCharStream.hexval('6');
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile("MTZ", "C2R~/SNExtVlY)miRG");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"C2R~/SNExtVlY)miRG\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)1;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)1, (-870));
      javaCharStream0.getBeginColumn();
      byteArray0[1] = (byte)127;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)92;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte) (-58);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(sequenceInputStream1, sequenceInputStream0);
      sequenceInputStream1.skip(559L);
      sequenceInputStream0.read(byteArray1);
      try { 
        sequenceInputStream0.reset();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // mark/reset not supported
         //
         verifyException("java.io.InputStream", e);
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)1;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)1, (-870));
      javaCharStream0.prevCharIsLF = false;
      javaCharStream0.getBeginColumn();
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)92;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte) (-58);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      sequenceInputStream1.close();
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(sequenceInputStream1, sequenceInputStream0);
      sequenceInputStream2.available();
      sequenceInputStream1.skip(559L);
      sequenceInputStream0.read(byteArray1);
      try { 
        sequenceInputStream0.reset();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // mark/reset not supported
         //
         verifyException("java.io.InputStream", e);
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)53;
      byteArray0[1] = (byte) (-17);
      byteArray0[2] = (byte)114;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)72;
      byteArray0[6] = (byte)65;
      byteArray0[7] = (byte)75;
      byteArray0[8] = (byte)7;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 101, 62);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 2, (byte)65, 64);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StringReader stringReader0 = new StringReader("C1ZB");
      StringReader stringReader1 = new StringReader("C1ZB");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 8, 0);
      javaCharStream0.adjustBeginLineColumn(0, 4);
      MockFile mockFile0 = new MockFile("", "");
      MockFile mockFile1 = new MockFile("", "MI");
      String string0 = "";
      MockFile mockFile2 = new MockFile(mockFile0, "C1ZB");
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile("", "y+ $<");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"y+ $<\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.0676032882216056
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      String string0 = "\\C1ZB";
      StringReader stringReader0 = new StringReader("C1ZB");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-576), 8);
      javaCharStream0.adjustBeginLineColumn((-576), (-1327));
      MockFile mockFile0 = new MockFile("");
      String string1 = "";
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile(mockFile0, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 141
  /*Coverage entropy=2.1766453509367873
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(bufferedInputStream0);
      bufferedInputStream1.close();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)9;
      byteArray0[3] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream2 = new BufferedInputStream(bufferedInputStream1);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 141, (byte)9);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('\t', char0);
  }

  /**
  //Test case number: 142
  /*Coverage entropy=2.1073016318123377
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      StringReader stringReader1 = new StringReader("-U}<e[:42uX\")z2(hc");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 370, 61);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      stringReader1.reset();
      assertNotSame(stringReader1, stringReader0);
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 62, 710, 63);
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader1, (-602), (-935), 63);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)12;
      StringReader stringReader0 = new StringReader(">z>1v'v=xe-E");
      char[] charArray0 = new char[2];
      charArray0[0] = 'm';
      charArray0[1] = ';';
      stringReader0.read(charArray0);
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader(">z>1v'v=xe-E");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, 6, 19, 2);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StringReader stringReader0 = new StringReader("C1ZB");
      StringReader stringReader1 = new StringReader(">z>o1v'GvF=xe-E");
      char[] charArray0 = new char[9];
      charArray0[0] = ';';
      charArray0[1] = 'm';
      charArray0[2] = ';';
      charArray0[3] = ';';
      charArray0[4] = ';';
      charArray0[5] = 'm';
      charArray0[6] = ';';
      charArray0[7] = ';';
      charArray0[8] = ';';
      stringReader0.read(charArray0);
      stringReader1.read(charArray0);
      StringReader stringReader2 = new StringReader(">z>o1v'GvF=xe-E");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) null, 79, 92, (-2647));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
