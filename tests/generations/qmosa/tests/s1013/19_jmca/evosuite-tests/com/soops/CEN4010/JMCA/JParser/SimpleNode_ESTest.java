/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 02:56:14 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.BufferedInputStream;
import java.io.FileDescriptor;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.StringReader;
import java.io.StringWriter;
import java.nio.CharBuffer;
import java.util.ArrayList;
import java.util.EmptyStackException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4dW^L}I$");
      SimpleNode simpleNode0 = new SimpleNode(852);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ")a%$bH#-");
      simpleNode0.identifiers = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<=");
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier("4dW^L}I$");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1214104753232883
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(4);
      SimpleNode simpleNode1 = new SimpleNode(4);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter0 = new StringWriter(4);
      stringWriter0.append((CharSequence) "==");
      simpleNode0.jjtAddChild(simpleNode1, 4);
      String string0 = null;
      simpleNode0.dump((String) null, stringWriter0);
      int int0 = (-1798278926);
      simpleNode0.jjtGetChild(4);
      StringWriter stringWriter1 = new StringWriter();
      StringReader stringReader0 = new StringReader("*gt");
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("muCDk&");
      StringReader stringReader2 = null;
      try {
        stringReader2 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/19_jmca");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      SimpleNode simpleNode0 = new SimpleNode(91);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.setIdentifier(">");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/19_jmca");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ">");
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileDescriptor fileDescriptor1 = new FileDescriptor();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "5^s[Hq^]A5/O(mZM!s");
      simpleNode0.dump("5^s[Hq^]A5/O(mZM!s", stringWriter0);
      assertEquals("<SynchronizedStatement>\n  <identifier>*gt</identifier>\n</SynchronizedStatement>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/19_jmca");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      SimpleNode simpleNode0 = new SimpleNode(91);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      simpleNode0.setIdentifier(">");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/19_jmca");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ">");
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileDescriptor fileDescriptor1 = new FileDescriptor();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "5^s[Hq^]A5/O(mZM!s");
      simpleNode0.dump("5^s[Hq^]A5/O(mZM!s", stringWriter0);
      assertEquals("<SynchronizedStatement>\n  <identifier>*gt</identifier>\n</SynchronizedStatement>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0853864655447525
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      String string0 = ">>";
      simpleNode0.setIdentifier(">>");
      simpleNode0.toString();
      String string1 = "_Z/eL|&R?I9ElZWpJ";
      simpleNode0.setIdentifier("</identifier>");
      Node node0 = simpleNode0.parent;
      String string2 = "0n;";
      simpleNode0.setIdentifier("0n;");
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = '=';
      charArray0[1] = '=';
      charArray0[2] = '=';
      charArray0[3] = '=';
      charArray0[4] = '=';
      charArray0[5] = '=';
      charArray0[6] = '=';
      charArray0[7] = '=';
      stringWriter0.write(charArray0);
      stringWriter0.append((CharSequence) "{");
      stringWriter0.append('=');
      simpleNode0.dump("{", stringWriter0);
      StringWriter stringWriter1 = null;
      try {
        stringWriter1 = new StringWriter((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.setIdentifier("<=");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("Rx|gq", stringWriter0);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode0, 0);
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter0 = new StringWriter(0);
      stringWriter0.close();
      simpleNode0.jjtGetChild(0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(1);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      BufferedInputStream bufferedInputStream0 = null;
      try {
        bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, (-1214));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = 2744;
      SimpleNode simpleNode0 = new SimpleNode(2744);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      simpleNode0.jjtSetParent(nodeArray0[0]);
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[5] = (Node) simpleNode0;
      nodeArray0[6] = (Node) simpleNode0;
      nodeArray0[7] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild(nodeArray0[2], 2744);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      JavaParser javaParser0 = new JavaParser(pushbackInputStream0);
      SimpleNode simpleNode1 = (SimpleNode)simpleNode0.jjtGetChild(2744);
      simpleNode1.id = 4524;
      simpleNode0.jjtGetChild(2744);
      // Undeclared exception!
      try { 
        simpleNode0.toString("<<");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4524
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0974033676362451
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      simpleNode0.setIdentifier("{");
      simpleNode0.setIdentifier("&");
      StringWriter stringWriter0 = new StringWriter();
      StringReader stringReader0 = new StringReader("1EC6E>}t");
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("1EC6E>}t");
      stringReader0.reset();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      simpleNode0.dump("{", stringWriter0);
      assertEquals("<EnumBody>\n  <identifier>*amp</identifier>\n</EnumBody>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("EnumBody : { : &", string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.8120939218445867
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      simpleNode0.setIdentifier("zNekE?[#k,5y:Jrw");
      StringWriter stringWriter0 = new StringWriter();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      simpleNode0.setIdentifier("&&");
      StringWriter stringWriter1 = new StringWriter();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(";");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "G");
      StringWriter stringWriter2 = new StringWriter();
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      StringWriter stringWriter3 = new StringWriter();
      stringWriter3.flush();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringWriter0.append((CharSequence) "zNekE?[#k,5y:Jrw");
      StringWriter stringWriter4 = new StringWriter();
      stringWriter4.close();
      simpleNode0.dump("zNekE?[#k,5y:Jrw", stringWriter3);
      assertEquals("<EnumBody>\n  <identifier>zNekE?[#k,5y:Jrw</identifier>\n  <identifier>*amp</identifier>\n</EnumBody>\n", stringWriter3.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.2255849934249423
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("%");
      JavaParser javaParser1 = new JavaParser(javaParser0.token_source);
      SimpleNode simpleNode0 = new SimpleNode(javaParser1, 4);
      String string0 = "";
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(4);
      stringWriter1.append((CharSequence) "%");
      simpleNode0.dump("t<^Y?#OgzO&\"-Q", stringWriter1);
      JavaParser javaParser2 = new JavaParser("<");
      SimpleNode simpleNode1 = new SimpleNode(javaParser2, 2090);
      simpleNode0.setIdentifier("}");
      StringWriter stringWriter2 = new StringWriter();
      stringWriter2.append((CharSequence) "BooleanLiteral");
      simpleNode0.dump("t<^Y?#OgzO&\"-Q", stringWriter1);
      int int0 = 5;
      stringWriter2.write(4);
      StringWriter stringWriter3 = null;
      try {
        stringWriter3 = new StringWriter((-466));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5942014564857923
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(";");
      simpleNode0.setIdentifier("{");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/19_jmca");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "Jn");
      StringWriter stringWriter0 = new StringWriter();
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile(";");
      simpleNode0.toString("V~V3LH89Gqg");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "SynchronizedStatement");
      StringWriter stringWriter1 = new StringWriter();
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "]");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("/home/ubuntu/termite/projects/19_jmca");
      FileSystemHandling.appendStringToFile(evoSuiteFile3, "SynchronizedStatement");
      FileSystemHandling.appendLineToFile(evoSuiteFile2, "iH");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode0.dump("", stringWriter0);
      assertEquals("<EnumBody>\n</EnumBody>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString("SynchronizedStatement");
      assertEquals("SynchronizedStatementEnumBody : {", string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0783934585517456
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      simpleNode0.setIdentifier(";");
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "BQFmF0D/d1u~");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(";");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ";");
      simpleNode0.setIdentifier("BQFmF0D/d1u~");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "BQFmF0D/d1u~");
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter(1156);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "**EW{QZ.J_u?wPF");
      FileDescriptor fileDescriptor1 = new FileDescriptor();
      FileDescriptor fileDescriptor2 = new FileDescriptor();
      simpleNode0.dump("BQFmF0D/d1u~", stringWriter2);
      assertEquals("<EnumBody>\n  <identifier>BQFmF0D/d1u~</identifier>\n</EnumBody>\n", stringWriter2.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("EnumBody : ; : BQFmF0D/d1u~", string0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.8120939218445867
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("G");
      StringReader stringReader0 = new StringReader("G");
      StringReader stringReader1 = new StringReader("~");
      stringReader1.markSupported();
      StringReader stringReader2 = new StringReader(")");
      StringReader stringReader3 = new StringReader("G");
      StringReader stringReader4 = new StringReader("G");
      StringReader stringReader5 = new StringReader("B");
      char[] charArray0 = new char[4];
      charArray0[0] = 'Z';
      charArray0[1] = 'k';
      charArray0[3] = '0';
      stringReader5.read(charArray0);
      stringReader5.reset();
      StringReader stringReader6 = new StringReader("B");
      StringReader stringReader7 = new StringReader("NoraIAnnotation");
      StringReader stringReader8 = new StringReader("G");
      StringReader stringReader9 = new StringReader("Tu@K");
      stringReader9.read(charArray0);
      stringReader9.mark(3);
      simpleNode0.setIdentifier("<<");
      StringReader stringReader10 = new StringReader("&");
      stringReader6.reset();
      simpleNode0.dump("G", stringWriter0);
      assertEquals("<EnumBody>\n  <identifier>G</identifier>\n  <identifier>*lshft</identifier>\n</EnumBody>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.8539030631395337
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/19_jmca");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(91);
      simpleNode0.setIdentifier(".>");
      simpleNode0.setIdentifier((String) null);
      StringWriter stringWriter0 = new StringWriter();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-101);
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte) (-103);
      byteArray0[3] = (byte)67;
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile(";");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "5J<FPP@t`&i~$v^Lg");
      byteArray0[4] = (byte)79;
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile(";");
      FileSystemHandling.appendLineToFile(evoSuiteFile2, ".>");
      FileSystemHandling.appendStringToFile(evoSuiteFile2, ".>");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      stringWriter0.append((CharSequence) ".>");
      // Undeclared exception!
      try { 
        simpleNode0.dump("(8yMiB-FZ=DvA", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode0, 0);
      simpleNode0.jjtGetNumChildren();
      PipedInputStream pipedInputStream0 = new PipedInputStream(1);
      pipedInputStream0.mark(0);
      int int0 = 2250;
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(2250);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2250
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.3694451193186072
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode1.jjtGetNumChildren();
      StringWriter stringWriter0 = new StringWriter(0);
      stringWriter0.append('#');
      simpleNode1.jjtAddChild(simpleNode0, 2048);
      // Undeclared exception!
      simpleNode0.dump("\"", stringWriter0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SystemInUtil.addInputLine("AllocationExpression");
      SimpleNode simpleNode0 = new SimpleNode(1878);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 1878);
      simpleNode0.jjtGetChild(1878);
      simpleNode0.jjtGetNumChildren();
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(1879, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.087302357535235
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      simpleNode0.setIdentifier("~");
      StringReader stringReader0 = new StringReader("G");
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("G");
      StringReader stringReader2 = new StringReader("~");
      StringReader stringReader3 = new StringReader("~");
      stringReader3.markSupported();
      StringReader stringReader4 = new StringReader("-=");
      char[] charArray0 = new char[6];
      charArray0[0] = 'J';
      charArray0[1] = 'A';
      charArray0[2] = 'h';
      stringReader4.read(charArray0);
      stringReader0.markSupported();
      stringReader4.reset();
      StringReader stringReader5 = new StringReader("=|iQsbs([gA,E");
      StringReader stringReader6 = new StringReader("~");
      StringReader stringReader7 = new StringReader("-=");
      StringReader stringReader8 = new StringReader("~");
      stringReader8.skip((-1L));
      stringReader8.mark(68);
      StringReader stringReader9 = new StringReader("G");
      StringReader stringReader10 = new StringReader("G");
      stringReader3.mark(12);
      StringReader stringReader11 = new StringReader("~");
      stringReader8.reset();
      simpleNode0.dump((String) null, stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>~</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("CompilationUnit : ~", string0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.2969935575859295
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode1.jjtGetNumChildren();
      simpleNode0.jjtAddChild(simpleNode1, 3214);
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.dump("\"", stringWriter0);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.0102601478253668
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("");
      simpleNode0.setIdentifier("Java Parser Version 1.1:  Reading from standard input . . .");
      Node node0 = simpleNode0.parent;
      simpleNode0.parent = null;
      simpleNode0.setIdentifier("");
      simpleNode0.toString();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString();
      simpleNode0.toString("^8 aPR8");
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.jjtOpen();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.setIdentifier("Java Parser Version 1.1:  Reading from standard input . . .");
      simpleNode0.jjtClose();
      simpleNode0.jjtAddChild((Node) null, 1);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('D');
      char[] charArray0 = new char[2];
      charArray0[0] = 'D';
      charArray0[1] = 'D';
      stringWriter1.write(charArray0);
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "Java Parser Version 1.1:  Reading from standard input . . .");
      simpleNode0.dump("^8 aPR8", stringWriter2);
      simpleNode0.jjtGetChild(0);
      simpleNode0.jjtAddChild((Node) null, 1);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(1014);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1014
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.4048159937786893
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode1.jjtGetNumChildren();
      StringWriter stringWriter0 = new StringWriter(0);
      String string0 = "rmda=\"nl^B7_#Cr? l";
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode1, (-46160863));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -46160863
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.9456645463488123
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("<FLOATING_POINT_LITERAL>");
      javaParser0.Modifiers();
      StringReader stringReader0 = new StringReader("<FLOATING_POINT_LITERAL>");
      stringReader0.reset();
      javaParser0.ReInit((Reader) stringReader0);
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = new StringWriter(10);
      char[] charArray0 = new char[8];
      charArray0[1] = '/';
      charArray0[3] = '/';
      charArray0[4] = '/';
      charArray0[5] = '/';
      charArray0[7] = ':';
      stringWriter1.write(charArray0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("<FLOATING_POINT_LITERAL>");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "<FLOATING_POINT_LITERAL>");
      SimpleNode simpleNode0 = new SimpleNode(9);
      SimpleNode simpleNode1 = new SimpleNode(1071);
      simpleNode0.jjtAddChild(simpleNode1, 1);
      simpleNode0.jjtAddChild(simpleNode1, 9);
      assertEquals(10, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5351193029103083
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/19_jmca");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder(evoSuiteFile0);
      SimpleNode simpleNode0 = new SimpleNode(91);
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter();
      byte[] byteArray0 = new byte[5];
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, false);
      byteArray0[0] = (byte) (-101);
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte) (-103);
      byteArray0[3] = (byte)67;
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "5J<FPP@t`&i~$v^Lg");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile(";");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, ".>");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      simpleNode0.dump("(8yMiB-FZ=DvA", stringWriter0);
      assertEquals("<SynchronizedStatement>\n</SynchronizedStatement>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString("");
      assertEquals("SynchronizedStatement : ", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = 4951;
      SimpleNode simpleNode0 = new SimpleNode(4951);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtGetParent();
      simpleNode0.jjtGetParent();
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.jjtOpen();
      JJTJavaParserState jJTJavaParserState0 = new JJTJavaParserState();
      // Undeclared exception!
      try { 
        jJTJavaParserState0.popNode();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("u,9c?)7V$e{rt+?5E>");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-1078399016));
      Node node0 = simpleNode0.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1078399016));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringReader stringReader0 = new StringReader("BooleanLiteral");
      StringReader stringReader1 = new StringReader("F?}!MZv");
      stringReader0.markSupported();
      stringReader1.close();
      StringReader stringReader2 = new StringReader("X>>.Af\"s$");
      stringReader2.ready();
      StringReader stringReader3 = new StringReader("X>>.Af\"s$");
      stringReader2.close();
      stringReader1.markSupported();
      StringReader stringReader4 = new StringReader("X>>.Af\"s$");
      StringReader stringReader5 = new StringReader("IP|$H|b< ]3");
      stringReader4.markSupported();
      StringReader stringReader6 = new StringReader("Literal");
      StringReader stringReader7 = new StringReader("BooleanLiteral");
      StringReader stringReader8 = new StringReader("*rshft");
      StringReader stringReader9 = new StringReader("h\"(3");
      StringReader stringReader10 = new StringReader("X>>.Af\"s$");
      stringReader8.reset();
      JavaParser javaParser0 = new JavaParser(stringReader3);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 2894);
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("]Wo");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 114);
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(";");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "UnaryExpressionNotPlusMinus");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile(";");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "0n;");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "q+j)@,:*dlz^o");
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "}");
      FileDescriptor fileDescriptor1 = new FileDescriptor();
      FileDescriptor fileDescriptor2 = new FileDescriptor();
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "UnaryExpressionNotPlusMinus");
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, (-1911044906));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/19_jmca");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Jn");
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "o[5&s!|");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      stringWriter0.append((CharSequence) "o[5&s!|");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "#3%M)6>-]]_6");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileDescriptor fileDescriptor1 = new FileDescriptor();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "n9O9");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Jn");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      SimpleNode simpleNode0 = new SimpleNode((-2754));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2754
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/19_jmca");
      FileSystemHandling.createFolder(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile(";");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "Jn");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Jn");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      stringWriter1.append((CharSequence) "Jn");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, (String) null);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileDescriptor fileDescriptor1 = new FileDescriptor();
      FileSystemHandling.setPermissions(evoSuiteFile1, true, false, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "5^s[Hq^]A5/O(mZM!s");
      FileSystemHandling.appendDataToFile(evoSuiteFile1, (byte[]) null);
      SimpleNode simpleNode0 = new SimpleNode(809);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.dump("Jn", stringWriter1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0783934585517456
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/19_jmca");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(91);
      simpleNode0.setIdentifier(".>");
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-101);
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte) (-103);
      byteArray0[3] = (byte)67;
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile(";");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "5J<FPP@t`&i~$v^Lg");
      byteArray0[4] = (byte)79;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile(";");
      FileSystemHandling.appendLineToFile(evoSuiteFile2, "<");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile2);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringWriter0.append((CharSequence) "<");
      simpleNode0.dump("(8yMiB-FZ=DvA", stringWriter0);
      assertEquals("<<SynchronizedStatement>\n  <identifier>.></identifier>\n  <identifier>*lt</identifier>\n</SynchronizedStatement>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("SynchronizedStatement : .> : <", string0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringReader stringReader0 = new StringReader("iXsk9h\"(");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2004482753), (-2004482753));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-1));
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("iXsk9h\"(");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-2004482753));
      simpleNode0.id = (-2130);
      SimpleNode simpleNode1 = (SimpleNode)javaParser0.currNode;
      simpleNode0.jjtAddChild(simpleNode1, 2);
      assertEquals(3, simpleNode1.jjtGetNumChildren());
      assertEquals(3, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.8350516730230504
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(4);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.setIdentifier("k");
      StringReader stringReader0 = new StringReader("k");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)106;
      simpleNode0.setIdentifier(";");
      simpleNode0.setIdentifier("G7e]73I}");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      stringWriter0.append((CharSequence) ";");
      simpleNode0.dump("ExclusiveOrExpression", stringWriter0);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-1647000353));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtSetParent(simpleNode0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      Node node0 = simpleNode0.jjtGetParent();
      assertSame(simpleNode0, node0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = stringWriter1.append('#');
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "Hit");
      char[] charArray0 = new char[0];
      stringWriter0.write(charArray0);
      StringWriter stringWriter3 = stringWriter0.append((CharSequence) "Hit");
      StringWriter stringWriter4 = new StringWriter(9);
      stringWriter0.write(charArray0);
      CharBuffer.allocate(9);
      StringWriter stringWriter5 = stringWriter4.append((CharSequence) charBuffer0);
      char[] charArray1 = new char[1];
      charArray1[0] = '#';
      stringWriter5.write(charArray1);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      stringWriter0.append((CharSequence) charBuffer1);
      SimpleNode simpleNode0 = new SimpleNode((-1100374868));
      simpleNode0.dump("ResultType", stringWriter2);
      assertFalse(stringWriter2.equals((Object)stringWriter3));
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "Hit");
      char[] charArray0 = new char[0];
      stringWriter0.write(charArray0);
      stringWriter0.append((CharSequence) "Hit");
      stringWriter0.write(charArray0);
      char[] charArray1 = new char[1];
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      stringWriter0.append((CharSequence) charBuffer1);
      SimpleNode simpleNode0 = new SimpleNode((-1100374868));
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }
}
