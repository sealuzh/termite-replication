/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 00:36:56 GMT 2019
 */

package org.exolab.jms.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.io.Writer;
import java.net.URI;
import java.net.URISyntaxException;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.exolab.castor.xml.Marshaller;
import org.exolab.jms.config.ConnectionFactories;
import org.exolab.jms.config.ConnectionFactory;
import org.exolab.jms.config.QueueConnectionFactory;
import org.exolab.jms.config.TopicConnectionFactory;
import org.exolab.jms.config.XAConnectionFactory;
import org.exolab.jms.config.XAQueueConnectionFactory;
import org.exolab.jms.config.XATopicConnectionFactory;
import org.junit.runner.RunWith;
import org.xml.sax.Attributes;
import org.xml.sax.ContentHandler;
import org.xml.sax.ErrorHandler;
import org.xml.sax.InputSource;
import org.xml.sax.Locator;
import org.xml.sax.SAXParseException;
import org.xml.sax.ext.Attributes2Impl;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.ext.Locator2Impl;
import org.xml.sax.helpers.AttributesImpl;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.helpers.LocatorImpl;
import org.xml.sax.helpers.XMLFilterImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConnectionFactories_ESTest extends ConnectionFactories_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.2096058100845513
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[5];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      MockFile.createTempFile("java.util.Date", "A{R#vw");
      URI uRI0 = MockURI.aFTPURI;
      MockURI.resolve(uRI0, uRI0);
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      FileSystemHandling.shouldAllThrowIOExceptions();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[0];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      connectionFactories0.getXAConnectionFactory();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      AttributesImpl attributesImpl1 = new AttributesImpl(attributesImpl0);
      attributesImpl1.getValue("java.util.Date", "java.util.Date");
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.setErrorHandler((ErrorHandler) null);
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl0);
      SAXParseException sAXParseException0 = new SAXParseException("java.util.Date", locatorImpl0);
      sAXParseException0.getSuppressed();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.setXAConnectionFactory(0, xAConnectionFactory0);
      try { 
        connectionFactories0.getQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[3];
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      int int0 = 0;
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      MockFile mockFile0 = new MockFile("debug: Processing incrementally for element: ", "");
      connectionFactories0.getConnectionFactory(0);
      connectionFactories0.removeConnectionFactory((ConnectionFactory) null);
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter(mockFile0, "debug: Processing incrementally for element: ");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // debug: Processing incrementally for element: 
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[2];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      MockFile.createTempFile("java.url.Date", "&i,BGN");
      connectionFactories0.addXAQueueConnectionFactory((XAQueueConnectionFactory) null);
      MockURI.create("java.url.Date");
      connectionFactories0.getXAQueueConnectionFactoryCount();
      assertEquals(2, connectionFactories0.getXAConnectionFactoryCount());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactory0.setName("/gu9_%t@&M1");
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[7];
      connectionFactoryArray0[0] = connectionFactory0;
      connectionFactoryArray0[1] = connectionFactory0;
      connectionFactoryArray0[2] = connectionFactory0;
      connectionFactoryArray0[3] = connectionFactory0;
      connectionFactoryArray0[4] = connectionFactory0;
      connectionFactoryArray0[5] = connectionFactory0;
      connectionFactoryArray0[6] = connectionFactory0;
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      connectionFactories0.getQueueConnectionFactory();
      connectionFactories0.setConnectionFactory(0, connectionFactory0);
      assertEquals(7, connectionFactories0.getConnectionFactoryCount());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[12];
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      MockFile mockFile0 = new MockFile("htt3://xml.orB/7x/feqturesnamespaces");
      URI uRI0 = MockURI.aHttpURI;
      int int0 = connectionFactories0.getXATopicConnectionFactoryCount();
      assertEquals(12, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.8373875876189167
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("BO`>252/v");
      PrintWriter printWriter0 = mockPrintWriter0.append('\\');
      connectionFactories0.marshal((Writer) printWriter0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.addQueueConnectionFactory(queueConnectionFactory0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFile mockFile0 = new MockFile("vmZ", "vmZ");
      mockFile0.mkdir();
      connectionFactories0.getQueueConnectionFactory(0);
      try { 
        connectionFactories0.getTopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Marshaller.enableDebug = false;
      FileSystemHandling.shouldAllThrowIOExceptions();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.addTopicConnectionFactory(topicConnectionFactory0);
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[0];
      connectionFactories0.getQueueConnectionFactoryCount();
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      connectionFactories0.getTopicConnectionFactory(0);
      Enumeration enumeration0 = connectionFactories0.enumerateQueueConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[1];
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "l2#+nE");
      connectionFactories0.getConnectionFactory();
      int int0 = connectionFactories0.getConnectionFactoryCount();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.4990104312963837
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[7];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      MockFile.createTempFile("java.util.Date", "java.util.Date");
      URI uRI0 = MockURI.aFTPURI;
      MockURI.resolve(uRI0, uRI0);
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      FileSystemHandling.shouldAllThrowIOExceptions();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[0];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      connectionFactories0.getXAConnectionFactory();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      attributesImpl0.getValue("java.util.Date", "java.util.Date");
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.setErrorHandler((ErrorHandler) null);
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl0);
      LocatorImpl locatorImpl1 = new LocatorImpl(locator2Impl0);
      SAXParseException sAXParseException0 = new SAXParseException("nPd1X", locatorImpl0);
      sAXParseException0.getSuppressed();
      SAXParseException sAXParseException1 = new SAXParseException("", locator2Impl0);
      sAXParseException0.toString();
      sAXParseException1.getLineNumber();
      sAXParseException0.getSuppressed();
      sAXParseException0.getSuppressed();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      StringWriter stringWriter0 = new StringWriter();
      try { 
        connectionFactories0.marshal((Writer) stringWriter0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cannot validate a null Object.
         //
         verifyException("org.exolab.castor.xml.Validator", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.357285019952196
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getConnectionFactoryCount();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      connectionFactories0.removeConnectionFactory(connectionFactory0);
      connectionFactories0.addConnectionFactory(connectionFactory0);
      ConnectionFactory connectionFactory1 = connectionFactories0.getConnectionFactory(0);
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[6];
      connectionFactoryArray0[1] = connectionFactory0;
      connectionFactoryArray0[2] = connectionFactory0;
      connectionFactoryArray0[3] = connectionFactory0;
      connectionFactoryArray0[4] = connectionFactory0;
      connectionFactoryArray0[5] = connectionFactory1;
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      try { 
        connectionFactories0.getTopicConnectionFactory(764);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "' could not be found.");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      XAQueueConnectionFactory xAQueueConnectionFactory1 = new XAQueueConnectionFactory();
      connectionFactories0.addXAQueueConnectionFactory(xAQueueConnectionFactory1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      connectionFactories0.setXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
      assertNotSame(xAQueueConnectionFactory0, xAQueueConnectionFactory1);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.495914456064185
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory1 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[3];
      xAQueueConnectionFactoryArray0[2] = xAQueueConnectionFactory1;
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      int int0 = (-1);
      try { 
        connectionFactories0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cannot validate a null Object.
         //
         verifyException("org.exolab.castor.xml.Validator", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.4993646124305886
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.endElement("", "", "");
      xMLFilterImpl0.endPrefixMapping((String) null);
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[3];
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      connectionFactories0.getXAQueueConnectionFactory();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      xMLFilterImpl0.setParent(xMLFilterImpl1);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl0);
      attributes2Impl0.getValue("", (String) null);
      xMLFilterImpl0.setErrorHandler(xMLFilterImpl1);
      Attributes2Impl attributes2Impl1 = new Attributes2Impl(attributes2Impl0);
      xMLFilterImpl1.startElement((String) null, (String) null, "", attributes2Impl1);
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      assertEquals(3, connectionFactories0.getXAQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      SAXParseException sAXParseException0 = new SAXParseException("vmZ", (Locator) null);
      SAXParseException sAXParseException1 = new SAXParseException("vmZ", (Locator) null, sAXParseException0);
      sAXParseException1.getMessage();
      SAXParseException sAXParseException2 = (SAXParseException)sAXParseException1.fillInStackTrace();
      SAXParseException sAXParseException3 = new SAXParseException("vmZ", (Locator) null);
      SAXParseException sAXParseException4 = (SAXParseException)sAXParseException1.fillInStackTrace();
      SAXParseException sAXParseException5 = new SAXParseException("vmZ", (Locator) null);
      SAXParseException sAXParseException6 = new SAXParseException("vmZ", (Locator) null);
      SAXParseException sAXParseException7 = new SAXParseException("vmZ", (Locator) null);
      sAXParseException0.addSuppressed(sAXParseException5);
      sAXParseException0.getSuppressed();
      sAXParseException2.getColumnNumber();
      sAXParseException1.getLocalizedMessage();
      SAXParseException sAXParseException8 = (SAXParseException)sAXParseException4.fillInStackTrace();
      sAXParseException4.getLocalizedMessage();
      SAXParseException sAXParseException9 = (SAXParseException)sAXParseException8.fillInStackTrace();
      sAXParseException2.addSuppressed(sAXParseException0);
      SAXParseException sAXParseException10 = new SAXParseException("vmZ", "vmZ", "vmZ", (-1), (-1));
      sAXParseException9.getStackTrace();
      SAXParseException sAXParseException11 = new SAXParseException("vmZ", "vmZ", "vmZ", (-1), (-1));
      sAXParseException4.addSuppressed(sAXParseException10);
      SAXParseException sAXParseException12 = new SAXParseException("vmZ", "vmZ", "vmZ", (-1), (-1));
      SAXParseException sAXParseException13 = new SAXParseException("vmZ", (Locator) null);
      sAXParseException12.getLocalizedMessage();
      sAXParseException8.getSuppressed();
      sAXParseException1.initCause(sAXParseException3);
      sAXParseException3.toString();
      sAXParseException8.getLineNumber();
      sAXParseException8.getSuppressed();
      sAXParseException9.getSuppressed();
      sAXParseException1.getPublicId();
      SAXParseException sAXParseException14 = new SAXParseException((String) null, "vmZ", "vmZ", (-1), (-1), sAXParseException8);
      SAXParseException sAXParseException15 = new SAXParseException("vmZ", "org.xml.sax.SAXParseException; vmZ", "vmZ", (-1), (-1), sAXParseException8);
      sAXParseException3.getMessage();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[5];
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      int int0 = connectionFactories0.getQueueConnectionFactoryCount();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[8];
      xAQueueConnectionFactoryArray0[1] = xAQueueConnectionFactoryArray0[0];
      StringReader stringReader0 = new StringReader("N");
      XAQueueConnectionFactory xAQueueConnectionFactory1 = new XAQueueConnectionFactory();
      xAQueueConnectionFactoryArray0[3] = xAQueueConnectionFactory1;
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray1 = new XAQueueConnectionFactory[3];
      xAQueueConnectionFactoryArray1[0] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray1[1] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray1[2] = xAQueueConnectionFactory1;
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray1);
      boolean boolean0 = connectionFactories0.removeXAQueueConnectionFactory(xAQueueConnectionFactory0);
      assertEquals(2, connectionFactories0.getXAQueueConnectionFactoryCount());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      SAXParseException sAXParseException0 = new SAXParseException("*~vy&6RXw^", (Locator) null);
      SAXParseException sAXParseException1 = new SAXParseException("*~vy&6RXw^", (Locator) null, sAXParseException0);
      sAXParseException1.getStackTrace();
      SAXParseException sAXParseException2 = new SAXParseException("*~vy&6RXw^", (Locator) null);
      SAXParseException sAXParseException3 = new SAXParseException("", (Locator) null);
      sAXParseException3.initCause(sAXParseException1);
      SAXParseException sAXParseException4 = new SAXParseException("*~vy&6RXw^", (Locator) null, sAXParseException1);
      sAXParseException4.getStackTrace();
      sAXParseException4.getSuppressed();
      SAXParseException sAXParseException5 = new SAXParseException("LZ'On|P{O", "", "LZ'On|P{O", 1798, 1798);
      sAXParseException5.initCause(sAXParseException1);
      sAXParseException2.fillInStackTrace();
      SAXParseException sAXParseException6 = new SAXParseException("*~vy&6RXw^", "", "*~vy&6RXw^", 1798, 1798);
      sAXParseException6.addSuppressed(sAXParseException0);
      Throwable throwable0 = sAXParseException6.initCause(sAXParseException3);
      sAXParseException4.getPublicId();
      sAXParseException4.addSuppressed(sAXParseException6);
      FileSystemHandling.shouldAllThrowIOExceptions();
      sAXParseException4.getMessage();
      SAXParseException sAXParseException7 = new SAXParseException("*~vy&6RXw^", "*~vy&6RXw^", "*~vy&6RXw^", 1798, 1798);
      sAXParseException4.getColumnNumber();
      sAXParseException4.printStackTrace();
      SAXParseException sAXParseException8 = new SAXParseException("*~vy&6RXw^", "", "*~vy&6RXw^", 1798, 1798);
      sAXParseException8.addSuppressed(throwable0);
      sAXParseException4.getLocalizedMessage();
      sAXParseException8.getException();
      SAXParseException sAXParseException9 = new SAXParseException("*~vy&6RXw^", (Locator) null, sAXParseException0);
      SAXParseException sAXParseException10 = new SAXParseException("*~vy&6RXw^", "", "*~vy&6RXw^", 1798, (-1), sAXParseException4);
      sAXParseException0.getLineNumber();
      sAXParseException8.getColumnNumber();
      sAXParseException0.getSuppressed();
      try { 
        connectionFactories0.setQueueConnectionFactory(0, (QueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[8];
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      topicConnectionFactoryArray0[2] = topicConnectionFactory0;
      topicConnectionFactoryArray0[3] = topicConnectionFactory0;
      topicConnectionFactoryArray0[4] = topicConnectionFactory0;
      topicConnectionFactoryArray0[5] = topicConnectionFactory0;
      topicConnectionFactoryArray0[6] = topicConnectionFactory0;
      topicConnectionFactoryArray0[7] = topicConnectionFactory0;
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      TopicConnectionFactory topicConnectionFactory1 = new TopicConnectionFactory();
      int int0 = connectionFactories0.getTopicConnectionFactoryCount();
      assertEquals(8, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[6];
      queueConnectionFactoryArray0[0] = queueConnectionFactory0;
      queueConnectionFactoryArray0[1] = queueConnectionFactory0;
      queueConnectionFactoryArray0[2] = queueConnectionFactory0;
      queueConnectionFactoryArray0[3] = queueConnectionFactory0;
      queueConnectionFactoryArray0[4] = queueConnectionFactory0;
      queueConnectionFactoryArray0[5] = queueConnectionFactory0;
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      connectionFactories0.removeQueueConnectionFactory(queueConnectionFactory0);
      connectionFactories0.enumerateTopicConnectionFactory();
      assertEquals(5, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      SAXParseException sAXParseException0 = new SAXParseException("vmZ", (Locator) null);
      SAXParseException sAXParseException1 = new SAXParseException("vmZ", (Locator) null, sAXParseException0);
      sAXParseException1.getStackTrace();
      sAXParseException0.getCause();
      SAXParseException sAXParseException2 = new SAXParseException("vmZ", (Locator) null);
      Throwable throwable0 = sAXParseException1.fillInStackTrace();
      SAXParseException sAXParseException3 = new SAXParseException("vmZ", (Locator) null, sAXParseException1);
      SAXParseException sAXParseException4 = new SAXParseException("vmZ", (Locator) null);
      SAXParseException sAXParseException5 = new SAXParseException("0m4", (Locator) null);
      SAXParseException sAXParseException6 = new SAXParseException("vmZ", (Locator) null);
      sAXParseException3.getSuppressed();
      sAXParseException3.getColumnNumber();
      sAXParseException1.getLocalizedMessage();
      SAXParseException sAXParseException7 = (SAXParseException)sAXParseException3.fillInStackTrace();
      sAXParseException3.getLocalizedMessage();
      SAXParseException sAXParseException8 = (SAXParseException)sAXParseException7.fillInStackTrace();
      sAXParseException3.addSuppressed(sAXParseException0);
      SAXParseException sAXParseException9 = new SAXParseException("vmZ", "0m4", "vmZ", (-1), (-1));
      sAXParseException8.getStackTrace();
      sAXParseException9.getLocalizedMessage();
      sAXParseException3.getColumnNumber();
      MockThrowable mockThrowable0 = new MockThrowable(".QF0*<vt", throwable0);
      SAXParseException sAXParseException10 = new SAXParseException("vmZ", "vmZ", "vmZ", (-1), (-1));
      SAXParseException sAXParseException11 = new SAXParseException("vmZ", "vmZ", "vmZ", (-1), (-1));
      sAXParseException11.getException();
      sAXParseException11.getLocalizedMessage();
      sAXParseException11.getSuppressed();
      sAXParseException2.toString();
      sAXParseException8.getSuppressed();
      sAXParseException3.getPublicId();
      SAXParseException sAXParseException12 = new SAXParseException(".QF0*<vt", (Locator) null, sAXParseException11);
      SAXParseException sAXParseException13 = new SAXParseException("vmZ", "org.xml.sax.SAXParseException; vmZ", "vmZ", (-1), (-1), sAXParseException7);
      sAXParseException3.getException();
      try { 
        connectionFactories0.setQueueConnectionFactory((-1), (QueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[7];
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      Marshaller.enableDebug = false;
      topicConnectionFactoryArray0[2] = topicConnectionFactory0;
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      connectionFactories0.removeTopicConnectionFactory(topicConnectionFactory0);
      TopicConnectionFactory topicConnectionFactory1 = new TopicConnectionFactory();
      connectionFactories0.getTopicConnectionFactory();
      connectionFactories0.removeTopicConnectionFactory(topicConnectionFactory1);
      assertEquals(6, connectionFactories0.getTopicConnectionFactoryCount());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[9];
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.removeXATopicConnectionFactory(xATopicConnectionFactoryArray0[0]);
      assertEquals(8, connectionFactories0.getXATopicConnectionFactoryCount());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Locale locale0 = Locale.GERMAN;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      locale0.getDisplayCountry(locale0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList2, locale_FilteringMode1);
      UnaryOperator<Locale.LanguageRange> unaryOperator0 = UnaryOperator.identity();
      linkedList1.replaceAll(unaryOperator0);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) null, locale_FilteringMode2);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list1, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) null, locale_FilteringMode3);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      locale0.getDisplayCountry();
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode4 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList5, (Collection<Locale>) linkedList3, locale_FilteringMode4);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0);
      Locale.FilteringMode locale_FilteringMode5 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) list0, locale_FilteringMode5);
      // Undeclared exception!
      try { 
        connectionFactories0.setQueueConnectionFactory((QueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[2];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      int int0 = connectionFactories0.getXAConnectionFactoryCount();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Object object0 = new Object();
      Locale locale0 = Locale.GERMAN;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      Locale locale1 = Locale.KOREA;
      locale0.getDisplayCountry(locale1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList2, locale_FilteringMode1);
      UnaryOperator<Locale.LanguageRange> unaryOperator0 = UnaryOperator.identity();
      linkedList1.replaceAll(unaryOperator0);
      linkedList2.add(locale0);
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) null, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0, locale_FilteringMode2);
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) list1, locale_FilteringMode3);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      locale1.getDisplayCountry();
      Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) linkedList3, locale_FilteringMode1);
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList5, (Collection<Locale>) linkedList2);
      Locale.FilteringMode locale_FilteringMode4 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList3, locale_FilteringMode4);
      // Undeclared exception!
      try { 
        connectionFactories0.marshal((Writer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'out' is null.
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Object object0 = new Object();
      Locale locale0 = Locale.CANADA_FRENCH;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      Locale locale1 = Locale.KOREA;
      linkedList5.stream();
      locale1.getDisplayCountry(locale0);
      linkedList5.iterator();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList7 = new LinkedList<Locale>();
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList7, locale_FilteringMode0);
      linkedList5.add(locale0);
      linkedList3.add(locale0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      LinkedList<String> linkedList8 = new LinkedList<String>();
      linkedList8.add("The marshaller cannot unmarshal non primitive types that do not implement java.io.Serializable");
      linkedList8.add("Cor\u00E9e du Sud");
      locale1.toLanguageTag();
      LinkedList<String> linkedList9 = new LinkedList<String>();
      Set<String> set0 = locale1.getUnicodeLocaleAttributes();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList10 = new LinkedList<Locale.LanguageRange>();
      linkedList10.listIterator();
      locale0.getDisplayCountry();
      LinkedList<Locale.LanguageRange> linkedList11 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList12 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList13 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList10, (Collection<Locale>) linkedList3, locale_FilteringMode1);
      try { 
        connectionFactories0.setQueueConnectionFactory(7, (QueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[12];
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      MockFile mockFile0 = new MockFile("htt3://xml.orB/7x/feqturesnamespaces");
      connectionFactories0.getXATopicConnectionFactory();
      assertEquals(12, connectionFactories0.getXATopicConnectionFactoryCount());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      xATopicConnectionFactory0.setName(",p>*i{(AVW");
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      connectionFactories1.addXATopicConnectionFactory(0, xATopicConnectionFactory0);
      ConnectionFactories connectionFactories2 = new ConnectionFactories();
      assertFalse(connectionFactories2.equals((Object)connectionFactories1));
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[3];
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.getXATopicConnectionFactory(0);
      assertEquals(3, connectionFactories0.getXATopicConnectionFactoryCount());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[3];
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      connectionFactories1.addXAConnectionFactory(0, xAConnectionFactory0);
      try { 
        connectionFactories0.setXAConnectionFactory(0, xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      Marshaller.enableDebug = true;
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      boolean boolean0 = connectionFactories0.removeXAQueueConnectionFactory((XAQueueConnectionFactory) null);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearConnectionFactory();
      connectionFactories0.getTopicConnectionFactoryCount();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[6];
      queueConnectionFactoryArray0[0] = null;
      queueConnectionFactoryArray0[1] = null;
      queueConnectionFactoryArray0[2] = null;
      queueConnectionFactoryArray0[3] = null;
      queueConnectionFactoryArray0[4] = null;
      queueConnectionFactoryArray0[5] = null;
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      connectionFactories0.addQueueConnectionFactory(0, (QueueConnectionFactory) null);
      connectionFactories0.getXAQueueConnectionFactoryCount();
      assertEquals(7, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      TopicConnectionFactory topicConnectionFactory1 = new TopicConnectionFactory();
      topicConnectionFactory1.setName("org.exolab.castor.xml.validators.StringValidator");
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setXATopicConnectionFactory((XATopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearQueueConnectionFactory();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Q^1!$u");
      Object object0 = new Object();
      mockPrintWriter0.print(1443);
      Object object1 = new Object();
      Locale locale0 = Locale.CANADA_FRENCH;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Marshaller.enableDebug = true;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      Locale locale1 = Locale.KOREA;
      locale1.getDisplayCountry(locale0);
      linkedList5.iterator();
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList7 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList8 = new LinkedList<Locale>();
      linkedList5.addAll((Collection<? extends Locale>) linkedList7);
      linkedList5.add(locale0);
      linkedList3.add(locale0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      LinkedList<String> linkedList9 = new LinkedList<String>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList9.add("Cor\u00E9e du Sud");
      locale1.toLanguageTag();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList2, (Collection<String>) linkedList9, locale_FilteringMode0);
      locale1.getUnicodeLocaleKeys();
      LinkedList<String> linkedList10 = new LinkedList<String>();
      LinkedList<Locale.LanguageRange> linkedList11 = new LinkedList<Locale.LanguageRange>();
      locale0.getDisplayCountry();
      LinkedList<Locale.LanguageRange> linkedList12 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList13 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList14 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList15 = new LinkedList<Locale>();
      assertEquals(0, linkedList15.size());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getConnectionFactoryCount();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.addTopicConnectionFactory(0, topicConnectionFactory0);
      connectionFactories0.removeConnectionFactory(connectionFactory0);
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      try { 
        connectionFactories1.getConnectionFactory(5767);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory1 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory2 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[6];
      xAQueueConnectionFactoryArray0[1] = xAQueueConnectionFactory1;
      xAQueueConnectionFactoryArray0[2] = xAQueueConnectionFactory2;
      xAQueueConnectionFactoryArray0[3] = xAQueueConnectionFactory2;
      xAQueueConnectionFactoryArray0[4] = xAQueueConnectionFactory2;
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      XAQueueConnectionFactory xAQueueConnectionFactory3 = new XAQueueConnectionFactory();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      connectionFactories1.addXAQueueConnectionFactory(0, xAQueueConnectionFactory2);
      int int0 = (-1);
      try { 
        connectionFactories0.getXATopicConnectionFactory((-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[8];
      StringWriter stringWriter0 = new StringWriter();
      int int0 = 0;
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.addConnectionFactory(0, connectionFactory0);
      try { 
        connectionFactories0.getXATopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.5035870903352846
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.removeXAConnectionFactory(xAConnectionFactory0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories1.getXATopicConnectionFactory();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      defaultHandler2_0.processingInstruction("l1|O", "l1|O");
      connectionFactories1.getXAConnectionFactoryCount();
      connectionFactories1.getXAConnectionFactoryCount();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[2];
      xAConnectionFactoryArray0[0] = xAConnectionFactory0;
      xAConnectionFactoryArray0[1] = xAConnectionFactory0;
      connectionFactories1.setXAConnectionFactory(xAConnectionFactoryArray0);
      connectionFactories0.addXAConnectionFactory(xAConnectionFactory0);
      XAConnectionFactory[] xAConnectionFactoryArray1 = new XAConnectionFactory[3];
      xAConnectionFactoryArray1[0] = xAConnectionFactory0;
      XAConnectionFactory xAConnectionFactory1 = connectionFactories0.getXAConnectionFactory(0);
      xAConnectionFactoryArray1[1] = xAConnectionFactory1;
      xAConnectionFactoryArray1[2] = xAConnectionFactory0;
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray1);
      try { 
        connectionFactories0.addConnectionFactory((-1), (ConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      xMLFilterImpl1.getDTDHandler();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl1.getContentHandler();
      xMLFilterImpl2.unparsedEntityDecl("N#~F", "pJ<[EOe", "9<@?@{3^q pUjxsvYSC", "nF");
      xMLFilterImpl2.endPrefixMapping("N#~F");
      xMLFilterImpl0.unparsedEntityDecl("N#~F", "cFtZ#i+H$HB/9B", "N#~F", "N#~F");
      xMLFilterImpl0.skippedEntity("N#~F");
      xMLFilterImpl1.endElement("", "", "orgexab.castor.mapping.lader.J1CollectionHandlers$4");
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl3.unparsedEntityDecl("pJ<[EOe", "N#~F", "Oj[EG`Qsg4?q ", "kQwT");
      char[] charArray0 = new char[1];
      charArray0[0] = 'j';
      xMLFilterImpl2.characters(charArray0, (-1), (-1));
      xMLFilterImpl3.setDTDHandler(xMLFilterImpl2);
      xMLFilterImpl3.getParent();
      xMLFilterImpl2.skippedEntity("N#~F");
      xMLFilterImpl1.setParent(xMLFilterImpl3);
      AttributesImpl attributesImpl0 = new AttributesImpl();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      attributesImpl0.getValue("eyMvCE&OO4(]>CKGIimy", "");
      AttributesImpl attributesImpl1 = new AttributesImpl();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Marshaller.enableDebug = false;
      try { 
        connectionFactories0.addXAConnectionFactory((-4394), (XAConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -4394, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5094656225315988
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[3];
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      connectionFactories0.getConnectionFactory(1);
      connectionFactories0.getConnectionFactory(1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      assertFalse(connectionFactories1.equals((Object)connectionFactories0));
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setConnectionFactory((ConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearXATopicConnectionFactory();
      SAXParseException sAXParseException0 = new SAXParseException("vmZ", (Locator) null);
      SAXParseException sAXParseException1 = new SAXParseException("vmZ", (Locator) null, sAXParseException0);
      sAXParseException1.getStackTrace();
      sAXParseException0.getCause();
      SAXParseException sAXParseException2 = new SAXParseException("vmZ", (Locator) null);
      Throwable throwable0 = sAXParseException1.fillInStackTrace();
      SAXParseException sAXParseException3 = new SAXParseException("vmZ", (Locator) null, sAXParseException1);
      SAXParseException sAXParseException4 = new SAXParseException("vmZ", (Locator) null);
      SAXParseException sAXParseException5 = new SAXParseException("bms", (Locator) null);
      SAXParseException sAXParseException6 = new SAXParseException("vmZ", (Locator) null);
      sAXParseException3.getSuppressed();
      sAXParseException3.getColumnNumber();
      sAXParseException1.getLocalizedMessage();
      SAXParseException sAXParseException7 = (SAXParseException)sAXParseException3.fillInStackTrace();
      sAXParseException3.getLocalizedMessage();
      SAXParseException sAXParseException8 = (SAXParseException)throwable0.fillInStackTrace();
      sAXParseException3.addSuppressed(sAXParseException0);
      SAXParseException sAXParseException9 = new SAXParseException("vmZ", "bms", "vmZ", (-1), (-1));
      sAXParseException8.getStackTrace();
      sAXParseException9.getLocalizedMessage();
      sAXParseException3.getColumnNumber();
      SAXParseException sAXParseException10 = new SAXParseException("vmZ", "vmZ", "vmZ", (-1), (-1));
      SAXParseException sAXParseException11 = new SAXParseException("vmZ", "vmZ", "vmZ", (-1), (-1));
      MockException mockException0 = new MockException();
      sAXParseException11.getLocalizedMessage();
      sAXParseException11.getSuppressed();
      sAXParseException2.toString();
      sAXParseException8.getSuppressed();
      sAXParseException3.getPublicId();
      SAXParseException sAXParseException12 = new SAXParseException("vmZ", "vmZ", ".590<vm", (-1), (-1), sAXParseException6);
      SAXParseException sAXParseException13 = new SAXParseException("vmZ", "org.xml.sax.SAXParseException; vmZ", "vmZ", (-1), (-1), sAXParseException7);
      sAXParseException2.getMessage();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.setConnectionFactory(0, connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      int int0 = 38;
      try { 
        connectionFactories0.setConnectionFactory(38, connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Object object0 = new Object();
      Locale locale0 = Locale.CANADA_FRENCH;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      Locale locale1 = Locale.KOREA;
      linkedList3.stream();
      LinkedList<Locale> linkedList6 = new LinkedList<Locale>();
      linkedList6.add(locale0);
      locale1.getDisplayCountry(locale0);
      linkedList6.iterator();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList8 = new LinkedList<Locale>();
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList3, locale_FilteringMode0);
      linkedList8.add(locale0);
      linkedList5.add(locale1);
      LinkedList<String> linkedList9 = new LinkedList<String>();
      linkedList9.add("Cor\u00E9e du Sud");
      linkedList9.add((String) null);
      locale1.toLanguageTag();
      LinkedList<String> linkedList10 = new LinkedList<String>();
      locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList11 = new LinkedList<Locale.LanguageRange>();
      linkedList0.listIterator();
      locale1.getDisplayCountry();
      LinkedList<Locale> linkedList12 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList13 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList13, (Collection<Locale>) linkedList6, locale_FilteringMode1);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      // Undeclared exception!
      try { 
        connectionFactories0.marshal((ContentHandler) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'handler' is null.
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[1];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      int int0 = 0;
      try { 
        connectionFactories0.getConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[5];
      xAConnectionFactoryArray0[0] = xAConnectionFactory0;
      xAConnectionFactoryArray0[2] = xAConnectionFactory0;
      xAConnectionFactoryArray0[3] = xAConnectionFactory0;
      xAConnectionFactoryArray0[4] = xAConnectionFactory0;
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      connectionFactories0.removeXAConnectionFactory(xAConnectionFactory0);
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      assertNull(xAQueueConnectionFactory0.getName());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl1.endPrefixMapping("6tv62ytWBMHm]Z");
      xMLFilterImpl1.getErrorHandler();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl1);
      xMLFilterImpl0.setDocumentLocator(locator2Impl0);
      xMLFilterImpl1.endElement("j*vn.^til.Vector", "j*vn.^til.Vector", "<");
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl2.endPrefixMapping((String) null);
      xMLFilterImpl0.unparsedEntityDecl("j*vn.^til.Vector", "j*vn.^til.Vector", "j*vn.^til.Vector", "<");
      xMLFilterImpl2.endPrefixMapping("j*vn.^til.Vector");
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl3.setParent(xMLFilterImpl0);
      xMLFilterImpl3.setEntityResolver(xMLFilterImpl2);
      xMLFilterImpl3.setEntityResolver(xMLFilterImpl2);
      xMLFilterImpl3.endElement("j*vn.^til.Vector", "j*vn.^til.Vector", "<");
      xMLFilterImpl2.setErrorHandler(xMLFilterImpl3);
      xMLFilterImpl3.setDTDHandler(xMLFilterImpl2);
      xMLFilterImpl2.skippedEntity("<");
      xMLFilterImpl0.getErrorHandler();
      char[] charArray0 = new char[1];
      xMLFilterImpl0.getErrorHandler();
      xMLFilterImpl2.setErrorHandler((ErrorHandler) null);
      xMLFilterImpl1.characters(charArray0, 1023, 1023);
      xMLFilterImpl1.endElement("<", "j*vn.^til.Vector", "j*vn.^til.Vector");
      xMLFilterImpl0.startPrefixMapping((String) null, (String) null);
      xMLFilterImpl1.endPrefixMapping("");
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      ConnectionFactory[] connectionFactoryArray0 = connectionFactories0.getConnectionFactory();
      assertEquals(0, connectionFactoryArray0.length);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[1];
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      connectionFactories0.isValid();
      // Undeclared exception!
      try { 
        connectionFactories0.setTopicConnectionFactory((TopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      SAXParseException sAXParseException0 = new SAXParseException("", (Locator) null);
      SAXParseException sAXParseException1 = new SAXParseException("", (Locator) null, sAXParseException0);
      sAXParseException1.getStackTrace();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      DefaultHandler defaultHandler0 = new DefaultHandler();
      sAXParseException0.getCause();
      SAXParseException sAXParseException2 = new SAXParseException("vmZ", (Locator) null);
      SAXParseException sAXParseException3 = new SAXParseException("", (Locator) null, sAXParseException1);
      sAXParseException3.getColumnNumber();
      SAXParseException sAXParseException4 = new SAXParseException("vmZ", (Locator) null);
      sAXParseException3.getLocalizedMessage();
      SAXParseException sAXParseException5 = new SAXParseException("vmZ", (Locator) null);
      sAXParseException1.getSuppressed();
      sAXParseException1.getSuppressed();
      sAXParseException1.toString();
      sAXParseException3.getPublicId();
      SAXParseException sAXParseException6 = new SAXParseException("", "0m4", "vmZ", (-29), 1);
      sAXParseException2.getLocalizedMessage();
      SAXParseException sAXParseException7 = new SAXParseException("", "n8B g E+Pr9", "0m4", 67, (-29));
      MockException mockException0 = new MockException(sAXParseException0);
      xMLFilterImpl0.notationDecl("0m4", "+?0a;)5{", "+?0a;)5{");
      xMLFilterImpl0.fatalError(sAXParseException2);
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[1];
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      connectionFactories0.getQueueConnectionFactory();
      assertEquals(1, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.0141266108053313
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      connectionFactories0.enumerateXAConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory1 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory2 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[7];
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[1] = xAQueueConnectionFactory0;
      StringReader stringReader0 = new StringReader(".e_S3$qu42<,/:o");
      xAQueueConnectionFactoryArray0[2] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[3] = xAQueueConnectionFactory1;
      xAQueueConnectionFactoryArray0[4] = xAQueueConnectionFactory1;
      xAQueueConnectionFactoryArray0[5] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[6] = xAQueueConnectionFactory2;
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      connectionFactories0.getXAQueueConnectionFactory(1);
      try { 
        connectionFactories0.getConnectionFactory(464);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      boolean boolean0 = connectionFactories0.removeQueueConnectionFactory((QueueConnectionFactory) null);
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = 0;
      try { 
        connectionFactories0.getXAQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      try { 
        connectionFactories0.setTopicConnectionFactory(0, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[6];
      topicConnectionFactoryArray0[5] = topicConnectionFactory0;
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      Marshaller.enableDebug = false;
      topicConnectionFactoryArray0[2] = topicConnectionFactory0;
      topicConnectionFactoryArray0[3] = topicConnectionFactory0;
      topicConnectionFactoryArray0[4] = topicConnectionFactory0;
      topicConnectionFactoryArray0[5] = topicConnectionFactory0;
      try { 
        connectionFactories0.setTopicConnectionFactory(10, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.7962284387340903
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[4];
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      topicConnectionFactoryArray0[2] = topicConnectionFactory0;
      topicConnectionFactoryArray0[3] = topicConnectionFactory0;
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      TopicConnectionFactory topicConnectionFactory1 = new TopicConnectionFactory();
      connectionFactories0.setTopicConnectionFactory(0, topicConnectionFactory0);
      connectionFactories0.getTopicConnectionFactory();
      assertEquals(4, connectionFactories0.getTopicConnectionFactoryCount());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[1];
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      try { 
        connectionFactories0.getConnectionFactory(1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      TopicConnectionFactory topicConnectionFactory1 = new TopicConnectionFactory();
      topicConnectionFactory1.setName("org.exolab.castor.xml.validators.StringValidator");
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory2 = new TopicConnectionFactory();
      try { 
        connectionFactories0.addTopicConnectionFactory((-43), topicConnectionFactory2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -43, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXATopicConnectionFactory((-288), (XATopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Q^~1k!=u");
      Object object0 = new Object();
      mockPrintWriter0.print(1443);
      Object object1 = new Object();
      Locale locale0 = Locale.CANADA_FRENCH;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList4 = new LinkedList<Locale>();
      Locale locale1 = Locale.KOREA;
      locale1.getDisplayCountry(locale0);
      linkedList4.iterator();
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList6 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList7 = new LinkedList<Locale>();
      linkedList4.addAll((Collection<? extends Locale>) linkedList6);
      linkedList4.add(locale0);
      linkedList3.add(locale0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      LinkedList<String> linkedList8 = new LinkedList<String>();
      linkedList8.add("Cor\u00E9e du Sud");
      linkedList8.add("Cor\u00E9e du Sud");
      locale1.toLanguageTag();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList2, (Collection<String>) linkedList8, locale_FilteringMode0);
      locale1.getUnicodeLocaleKeys();
      LinkedList<String> linkedList9 = new LinkedList<String>();
      LinkedList<Locale.LanguageRange> linkedList10 = new LinkedList<Locale.LanguageRange>();
      locale0.getDisplayCountry();
      LinkedList<Locale.LanguageRange> linkedList11 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList5, (Collection<Locale>) linkedList3, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList12 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList13 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList13, (Collection<Locale>) linkedList4, locale_FilteringMode1);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = connectionFactories0.getXAQueueConnectionFactory();
      assertEquals(0, xAQueueConnectionFactoryArray0.length);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      SAXParseException sAXParseException0 = new SAXParseException("", (Locator) null);
      SAXParseException sAXParseException1 = new SAXParseException("", (Locator) null, sAXParseException0);
      sAXParseException1.getStackTrace();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      DefaultHandler defaultHandler0 = new DefaultHandler();
      sAXParseException0.getCause();
      SAXParseException sAXParseException2 = new SAXParseException("vmZ", (Locator) null);
      SAXParseException sAXParseException3 = new SAXParseException("", (Locator) null, sAXParseException1);
      sAXParseException3.getColumnNumber();
      SAXParseException sAXParseException4 = new SAXParseException("vmZ", (Locator) null);
      sAXParseException3.getLocalizedMessage();
      sAXParseException3.initCause((Throwable) null);
      sAXParseException1.getSuppressed();
      sAXParseException1.toString();
      SAXParseException sAXParseException5 = new SAXParseException("", "0m4", "vmZ", (-29), 1);
      sAXParseException2.getLocalizedMessage();
      SAXParseException sAXParseException6 = new SAXParseException("", "n8B g E+Pr9", "0m4", 67, (-29));
      sAXParseException2.getException();
      xMLFilterImpl0.notationDecl("0m4", "+?0a;)5{", "+?0a;)5{");
      xMLFilterImpl0.fatalError(sAXParseException2);
      try { 
        connectionFactories0.getQueueConnectionFactory((-3078));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.removeXATopicConnectionFactory((XATopicConnectionFactory) null);
      URI uRI0 = MockURI.aFTPURI;
      assertEquals((-1), uRI0.getPort());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.addQueueConnectionFactory(1273, (QueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1273, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "' could not be found.");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.addQueueConnectionFactory(queueConnectionFactory0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        connectionFactories0.setXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      int int0 = (-31);
      try { 
        connectionFactories0.setConnectionFactory((-31), connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.3604548990578045
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.enumerateXAConnectionFactory();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      FileSystemHandling.shouldAllThrowIOExceptions();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory1 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[6];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[4];
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[2] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[3] = xATopicConnectionFactory0;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.setXATopicConnectionFactory(0, xATopicConnectionFactory0);
      connectionFactories0.getXAQueueConnectionFactory(0);
      try { 
        connectionFactories0.getConnectionFactory((-4));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      try { 
        connectionFactories0.setXATopicConnectionFactory(0, xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      try { 
        connectionFactories0.setXATopicConnectionFactory(2321, xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.endPrefixMapping("^)ni~ V@skEQ-1");
      xMLFilterImpl0.endElement((String) null, "^)ni~ V@skEQ-1", "");
      xMLFilterImpl0.endPrefixMapping((String) null);
      AttributesImpl attributesImpl0 = new AttributesImpl();
      xMLFilterImpl0.startElement("getCollectionHandlersInfo", "", "NlZ", attributesImpl0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      xMLFilterImpl0.unparsedEntityDecl("J8M cS9{[?xN{bz\")=2", "NlZ", "hOMw+D h(-|4z#\"ze/", "F");
      xMLFilterImpl0.skippedEntity("vM");
      xMLFilterImpl0.endDocument();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXParseException sAXParseException0 = new SAXParseException("getCollectionHandlersInfo", "n1", "hOMw+D h(-|4z#\"ze/", 1, 1);
      sAXParseException0.getStackTrace();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[0];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      try { 
        connectionFactories0.addXAQueueConnectionFactory(1, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      SAXParseException sAXParseException0 = new SAXParseException("vmZ", (Locator) null);
      sAXParseException0.getStackTrace();
      sAXParseException0.getCause();
      SAXParseException sAXParseException1 = new SAXParseException("vmZ", (Locator) null);
      Throwable throwable0 = sAXParseException0.fillInStackTrace();
      SAXParseException sAXParseException2 = new SAXParseException("vmZ", (Locator) null, sAXParseException0);
      SAXParseException sAXParseException3 = new SAXParseException("vmZ", (Locator) null);
      SAXParseException sAXParseException4 = new SAXParseException("vmZ", (Locator) null);
      SAXParseException sAXParseException5 = new SAXParseException("vmZ", (Locator) null);
      sAXParseException2.getSuppressed();
      sAXParseException2.getColumnNumber();
      sAXParseException0.getLocalizedMessage();
      SAXParseException sAXParseException6 = (SAXParseException)sAXParseException2.fillInStackTrace();
      sAXParseException2.getLocalizedMessage();
      SAXParseException sAXParseException7 = (SAXParseException)sAXParseException6.fillInStackTrace();
      sAXParseException2.addSuppressed(sAXParseException0);
      SAXParseException sAXParseException8 = new SAXParseException("vmZ", "vmZ", "vmZ", (-1), (-1));
      sAXParseException7.getStackTrace();
      sAXParseException8.getLocalizedMessage();
      sAXParseException2.getColumnNumber();
      MockThrowable mockThrowable0 = new MockThrowable(".590<vm", throwable0);
      SAXParseException sAXParseException9 = new SAXParseException("vmZ", "vmZ", "vmZ", (-1), (-1));
      sAXParseException3.getException();
      sAXParseException5.getLocalizedMessage();
      sAXParseException0.getSuppressed();
      sAXParseException1.toString();
      sAXParseException7.getSuppressed();
      sAXParseException2.getPublicId();
      SAXParseException sAXParseException10 = new SAXParseException(".590<vm", (Locator) null, sAXParseException2);
      SAXParseException sAXParseException11 = new SAXParseException("vmZ", "org.xml.sax.SAXParseException; vmZ", "vmZ", (-1), (-1), sAXParseException6);
      sAXParseException1.getMessage();
      XAConnectionFactory[] xAConnectionFactoryArray0 = connectionFactories0.getXAConnectionFactory();
      assertEquals(0, xAConnectionFactoryArray0.length);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory1 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory2 = new XAQueueConnectionFactory();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[1];
      xAConnectionFactoryArray0[0] = xAConnectionFactory0;
      // Undeclared exception!
      try { 
        connectionFactories0.setXAConnectionFactory((XAConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory(1411, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      xMLFilterImpl1.endElement("", "OYApqpdZ}xR$", "OYApqpdZ}xR$");
      xMLFilterImpl1.getDTDHandler();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl2.unparsedEntityDecl("OYApqpdZ}xR$", "", "9<@?@{3^q pUjxsvYSC", "");
      xMLFilterImpl2.endPrefixMapping("OYApqpdZ}xR$");
      xMLFilterImpl0.unparsedEntityDecl("OYApqpdZ}xR$", "", "OYApqpdZ}xR$", "OYApqpdZ}xR$");
      xMLFilterImpl0.skippedEntity("OYApqpdZ}xR$");
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl3.setDTDHandler(xMLFilterImpl2);
      xMLFilterImpl3.getParent();
      xMLFilterImpl2.skippedEntity("OYApqpdZ}xR$");
      xMLFilterImpl1.setParent(xMLFilterImpl3);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      attributes2Impl0.getValue("eyMvCE&O4(]>CKGIimy", "");
      xMLFilterImpl4.startElement("^gt7l}ftlWI_eB[1 '", "^gt7l}ftlWI_eB[1 '", "eyMvCE&O4(]>CKGIimy", attributes2Impl0);
      try { 
        connectionFactories0.getXAConnectionFactory(749);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.endPrefixMapping((String) null);
      xMLFilterImpl0.endElement((String) null, (String) null, "");
      xMLFilterImpl0.endPrefixMapping((String) null);
      xMLFilterImpl0.unparsedEntityDecl("", "", "hOMw+D h(-|4z#\"ze/", "F");
      xMLFilterImpl0.skippedEntity("\n");
      xMLFilterImpl0.endDocument();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXParseException sAXParseException0 = new SAXParseException("getCollectionHandlersInfo", "n1", "hOMw+D h(-|4z#\"ze/", 1, 1);
      sAXParseException0.getStackTrace();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory((-1), xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory(1411, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      SAXParseException sAXParseException0 = new SAXParseException("wm|dZ", (Locator) null);
      SAXParseException sAXParseException1 = new SAXParseException("wm|dZ", (Locator) null, sAXParseException0);
      sAXParseException1.getStackTrace();
      sAXParseException1.getMessage();
      SAXParseException sAXParseException2 = (SAXParseException)sAXParseException1.fillInStackTrace();
      SAXParseException sAXParseException3 = new SAXParseException("wm|dZ", (Locator) null);
      SAXParseException sAXParseException4 = (SAXParseException)sAXParseException1.fillInStackTrace();
      SAXParseException sAXParseException5 = new SAXParseException("wm|dZ", (Locator) null);
      SAXParseException sAXParseException6 = new SAXParseException("wm|dZ", (Locator) null);
      SAXParseException sAXParseException7 = new SAXParseException("wm|dZ", (Locator) null);
      sAXParseException0.addSuppressed(sAXParseException5);
      sAXParseException5.getSuppressed();
      sAXParseException2.getColumnNumber();
      sAXParseException1.getLocalizedMessage();
      SAXParseException sAXParseException8 = (SAXParseException)sAXParseException4.fillInStackTrace();
      sAXParseException4.getLocalizedMessage();
      SAXParseException sAXParseException9 = (SAXParseException)sAXParseException8.fillInStackTrace();
      sAXParseException2.addSuppressed(sAXParseException0);
      SAXParseException sAXParseException10 = new SAXParseException("wm|dZ", "wm|dZ", "wm|dZ", (-1), (-1));
      sAXParseException9.getStackTrace();
      SAXParseException sAXParseException11 = new SAXParseException("wm|dZ", "wm|dZ", "wm|dZ", (-1), (-1));
      sAXParseException4.addSuppressed(sAXParseException10);
      SAXParseException sAXParseException12 = new SAXParseException("wm|dZ", "wm|dZ", "wm|dZ", (-1), (-1));
      SAXParseException sAXParseException13 = new SAXParseException("wm|dZ", "wm|dZ", "wm|dZ", (-1), (-1));
      sAXParseException12.getLocalizedMessage();
      sAXParseException8.getSuppressed();
      sAXParseException1.initCause(sAXParseException3);
      sAXParseException3.toString();
      int int0 = sAXParseException8.getLineNumber();
      sAXParseException11.getSuppressed();
      sAXParseException9.getSuppressed();
      sAXParseException1.getPublicId();
      SAXParseException sAXParseException14 = new SAXParseException((String) null, "wm|dZ", "wm|dZ", (-1), (-1), sAXParseException8);
      SAXParseException sAXParseException15 = new SAXParseException("wm|dZ", "org.xml.sax.SAXParseException; wm|dZ", "wm|dZ", (-1), (-1), sAXParseException8);
      sAXParseException3.getMessage();
      int int1 = connectionFactories0.getXATopicConnectionFactoryCount();
      assertFalse(int1 == int0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Object object0 = new Object();
      Object object1 = new Object();
      Locale locale0 = Locale.CANADA_FRENCH;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      Locale locale1 = Locale.KOREA;
      locale1.getDisplayCountry(locale0);
      linkedList5.iterator();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Q^~1k!=u");
      FileSystemHandling.createFolder(evoSuiteFile0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList6, (Collection<Locale>) linkedList5, locale_FilteringMode0);
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list0, locale_FilteringMode0);
      linkedList5.addAll((Collection<? extends Locale>) list0);
      linkedList3.add(locale0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      LinkedList<String> linkedList7 = new LinkedList<String>();
      linkedList7.add("Cor\u00E9e du Sud");
      locale1.toLanguageTag();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList2, (Collection<String>) linkedList7, locale_FilteringMode1);
      Set<String> set0 = locale1.getUnicodeLocaleAttributes();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      locale0.getDisplayCountry();
      LinkedList<Locale.LanguageRange> linkedList9 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList6, (Collection<Locale>) linkedList3, locale_FilteringMode1);
      LinkedList<Locale.LanguageRange> linkedList10 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList11 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList11, (Collection<Locale>) linkedList5, locale_FilteringMode2);
      Enumeration enumeration0 = connectionFactories0.enumerateConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      Enumeration enumeration0 = connectionFactories0.enumerateXAQueueConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      SAXParseException sAXParseException0 = new SAXParseException(":QQk =", (Locator) null);
      SAXParseException sAXParseException1 = new SAXParseException(":QQk =", (Locator) null, sAXParseException0);
      sAXParseException1.getStackTrace();
      sAXParseException0.getCause();
      SAXParseException sAXParseException2 = new SAXParseException("vmZ", (Locator) null);
      Throwable throwable0 = sAXParseException1.fillInStackTrace();
      SAXParseException sAXParseException3 = new SAXParseException(":QQk =", (Locator) null, sAXParseException1);
      SAXParseException sAXParseException4 = new SAXParseException("vmZ", (Locator) null);
      sAXParseException1.getCause();
      SAXParseException sAXParseException5 = new SAXParseException(":QQk =", (Locator) null);
      sAXParseException3.getSuppressed();
      sAXParseException3.getColumnNumber();
      sAXParseException1.getLocalizedMessage();
      SAXParseException sAXParseException6 = (SAXParseException)sAXParseException3.fillInStackTrace();
      SAXParseException sAXParseException7 = (SAXParseException)sAXParseException6.fillInStackTrace();
      sAXParseException3.addSuppressed(sAXParseException0);
      SAXParseException sAXParseException8 = new SAXParseException(":QQk =", "0m4", "vmZ", (-1), (-1));
      sAXParseException7.getStackTrace();
      sAXParseException8.getLocalizedMessage();
      sAXParseException3.getColumnNumber();
      MockThrowable mockThrowable0 = new MockThrowable(".590<vm", throwable0);
      SAXParseException sAXParseException9 = new SAXParseException("vmZ", ":QQk =", "vmZ", (-1), (-1));
      SAXParseException sAXParseException10 = new SAXParseException(":QQk =", ":QQk =", ":QQk =", (-1), (-1));
      MockException mockException0 = new MockException(":QQk =");
      sAXParseException10.getLocalizedMessage();
      sAXParseException10.getSuppressed();
      sAXParseException2.toString();
      sAXParseException7.getSuppressed();
      sAXParseException3.getPublicId();
      SAXParseException sAXParseException11 = new SAXParseException(".590<vm", (Locator) null, sAXParseException10);
      SAXParseException sAXParseException12 = new SAXParseException(":QQk =", "org.xml.sax.SAXParseException; vmZ", "vmZ", (-1), (-1), sAXParseException6);
      sAXParseException2.getMessage();
      // Undeclared exception!
      try { 
        connectionFactories0.setXAQueueConnectionFactory((XAQueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      SAXParseException sAXParseException0 = new SAXParseException("vmZ", (Locator) null);
      SAXParseException sAXParseException1 = new SAXParseException("vmZ", (Locator) null, sAXParseException0);
      sAXParseException1.getStackTrace();
      sAXParseException1.getMessage();
      SAXParseException sAXParseException2 = (SAXParseException)sAXParseException1.fillInStackTrace();
      SAXParseException sAXParseException3 = new SAXParseException("vmZ", (Locator) null);
      SAXParseException sAXParseException4 = (SAXParseException)sAXParseException1.fillInStackTrace();
      SAXParseException sAXParseException5 = new SAXParseException("vmZ", (Locator) null);
      SAXParseException sAXParseException6 = new SAXParseException("vmZ", (Locator) null);
      SAXParseException sAXParseException7 = new SAXParseException("vmZ", (Locator) null);
      sAXParseException0.addSuppressed(sAXParseException5);
      sAXParseException0.getSuppressed();
      sAXParseException2.getColumnNumber();
      sAXParseException1.getLocalizedMessage();
      SAXParseException sAXParseException8 = (SAXParseException)sAXParseException4.fillInStackTrace();
      sAXParseException4.getLocalizedMessage();
      SAXParseException sAXParseException9 = (SAXParseException)sAXParseException8.fillInStackTrace();
      sAXParseException2.addSuppressed(sAXParseException0);
      SAXParseException sAXParseException10 = new SAXParseException("vmZ", "vmZ", "vmZ", (-1), (-1));
      sAXParseException9.getStackTrace();
      SAXParseException sAXParseException11 = new SAXParseException("vmZ", "vmZ", "vmZ", (-1), (-1));
      SAXParseException sAXParseException12 = new SAXParseException("vmZ", "vmZ", "vmZ", (-1), (-1));
      sAXParseException12.getException();
      sAXParseException12.getLocalizedMessage();
      sAXParseException8.getSuppressed();
      sAXParseException1.initCause(sAXParseException3);
      sAXParseException3.toString();
      sAXParseException8.getLineNumber();
      sAXParseException8.getSuppressed();
      sAXParseException9.getSuppressed();
      sAXParseException1.getPublicId();
      SAXParseException sAXParseException13 = new SAXParseException(".QF0*<vt", (Locator) null, sAXParseException12);
      SAXParseException sAXParseException14 = new SAXParseException("vmZ", "org.xml.sax.SAXParseException; vmZ", "vmZ", (-1), (-1), sAXParseException8);
      try { 
        connectionFactories0.setTopicConnectionFactory((-1), (TopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      locatorImpl0.setColumnNumber((-227));
      Locator2Impl locator2Impl1 = new Locator2Impl(locatorImpl0);
      xMLFilterImpl0.setDocumentLocator(locator2Impl1);
      xMLFilterImpl0.endElement("", "OYApqpdZ}c6xR$'", "*!nfU}+VeMd^[Sr2:hC");
      xMLFilterImpl0.getDTDHandler();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      xMLFilterImpl1.endPrefixMapping("2<@?@{3^q aUxsvYP");
      xMLFilterImpl1.unparsedEntityDecl("BX]c'Jw=&", "PRQa!G#8YQ+WHr]", "2<@?@{3^q aUxsvYP", "PRQa!G#8YQ+WHr]");
      xMLFilterImpl1.endElement("OYApqpdZ}c6xR$'", (String) null, "<zH`hgi~\"i5*cj^s:");
      xMLFilterImpl0.setParent(xMLFilterImpl1);
      xMLFilterImpl0.getEntityResolver();
      xMLFilterImpl0.getDTDHandler();
      xMLFilterImpl0.endElement("*!nfU}+VeMd^[Sr2:hC", "OYApqpdZ}c6xR$'", "OYApqpdZ}c6xR$'");
      InputSource inputSource0 = new InputSource();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[1];
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      try { 
        connectionFactories0.getXATopicConnectionFactory(8);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getTopicConnectionFactory((-470));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.addXATopicConnectionFactory(xATopicConnectionFactory0);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[2];
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      TopicConnectionFactory topicConnectionFactory1 = new TopicConnectionFactory();
      assertNull(topicConnectionFactory1.getName());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Q^~1k!=u");
      Object object0 = new Object();
      mockPrintWriter0.print(1443);
      Object object1 = new Object();
      Locale locale0 = Locale.CANADA_FRENCH;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      Locale locale1 = Locale.KOREA;
      locale1.getDisplayCountry(locale0);
      linkedList5.iterator();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList6, (Collection<Locale>) linkedList5, locale_FilteringMode0);
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list0, locale_FilteringMode0);
      linkedList5.addAll((Collection<? extends Locale>) list0);
      linkedList5.add(locale0);
      linkedList3.add(locale0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      locale1.toLanguageTag();
      Set<String> set0 = locale1.getUnicodeLocaleAttributes();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      locale0.getDisplayCountry();
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList6, (Collection<Locale>) linkedList3, locale_FilteringMode1);
      LinkedList<Locale.LanguageRange> linkedList9 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList10 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList10, (Collection<Locale>) linkedList5, locale_FilteringMode2);
      TopicConnectionFactory[] topicConnectionFactoryArray0 = connectionFactories0.getTopicConnectionFactory();
      assertEquals(0, topicConnectionFactoryArray0.length);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.validate();
      String string0 = "java.io.PrintWriter";
      MockFile mockFile0 = new MockFile("java.io.PrintWriter");
      String string1 = "gt";
      MockFile mockFile1 = new MockFile(mockFile0, "gt");
      String string2 = "";
      String string3 = "crc+ZJuko}Bz=";
      MockFile mockFile2 = new MockFile("", "crc+ZJuko}Bz=");
      String string4 = "[uM";
      MockFile mockFile3 = new MockFile(mockFile1, "[uM");
      try { 
        MockURI.URI("java.io.PrintWriter", "crc+ZJuko}Bz=", "java.io.PrintWriter", "gt");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: java.io.PrintWriter://crc+ZJuko}Bz=java.io.PrintWriter#gt
         //
         verifyException("java.net.URI", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      Locale locale0 = Locale.KOREA;
      linkedList3.stream();
      LinkedList<Locale> linkedList6 = new LinkedList<Locale>();
      linkedList6.add(locale0);
      Locale locale1 = Locale.TAIWAN;
      locale0.getDisplayCountry(locale1);
      linkedList6.iterator();
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList8 = new LinkedList<Locale>();
      Locale locale2 = Locale.SIMPLIFIED_CHINESE;
      LinkedList<Locale> linkedList9 = new LinkedList<Locale>();
      linkedList3.add(locale2);
      Locale locale3 = locale1.stripExtensions();
      linkedList8.add(locale2);
      LinkedList<String> linkedList10 = new LinkedList<String>();
      linkedList10.add("|I(");
      LinkedList<String> linkedList11 = new LinkedList<String>();
      linkedList11.add("LX");
      locale2.toLanguageTag();
      LinkedList<String> linkedList12 = new LinkedList<String>();
      locale2.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList13 = new LinkedList<Locale.LanguageRange>();
      linkedList1.listIterator();
      locale3.getDisplayCountry();
      LinkedList<Locale> linkedList14 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList15 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList16 = new LinkedList<Locale.LanguageRange>();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      try { 
        connectionFactories0.marshal((ContentHandler) defaultHandler2_0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      SAXParseException sAXParseException0 = new SAXParseException(":QQk =", (Locator) null);
      SAXParseException sAXParseException1 = new SAXParseException(":QQk =", (Locator) null, sAXParseException0);
      sAXParseException1.getStackTrace();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXParseException0.getCause();
      SAXParseException sAXParseException2 = new SAXParseException("vmZ", (Locator) null);
      Throwable throwable0 = sAXParseException1.fillInStackTrace();
      SAXParseException sAXParseException3 = new SAXParseException(":QQk =", (Locator) null, sAXParseException1);
      SAXParseException sAXParseException4 = new SAXParseException("vmZ", (Locator) null);
      SAXParseException sAXParseException5 = new SAXParseException(":QQk =", (Locator) null);
      sAXParseException2.getSuppressed();
      sAXParseException3.getColumnNumber();
      sAXParseException1.getLocalizedMessage();
      Throwable throwable1 = sAXParseException3.fillInStackTrace();
      Throwable throwable2 = throwable1.fillInStackTrace();
      sAXParseException3.addSuppressed(sAXParseException0);
      SAXParseException sAXParseException6 = new SAXParseException(":QQk =", "0m4", "vmZ", (-1), (-1));
      sAXParseException3.getLocalizedMessage();
      MockThrowable mockThrowable0 = new MockThrowable(".590<vm", throwable0);
      SAXParseException sAXParseException7 = new SAXParseException("vmZ", ":QQk =", "vmZ", (-1), (-1));
      SAXParseException sAXParseException8 = new SAXParseException("vmZ", (Locator) null);
      sAXParseException8.getSuppressed();
      throwable2.getSuppressed();
      sAXParseException3.getPublicId();
      SAXParseException sAXParseException9 = new SAXParseException(":QQk =", ":QQk =", ":QQk =", (-1), (-1));
      SAXParseException sAXParseException10 = new SAXParseException("n8B g EPrH", (Locator) null);
      xMLFilterImpl0.endPrefixMapping(":QQk =");
      AttributesImpl attributesImpl0 = new AttributesImpl();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      try { 
        connectionFactories0.setXAConnectionFactory((-1), xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      SAXParseException sAXParseException0 = new SAXParseException("vmZ", (Locator) null);
      SAXParseException sAXParseException1 = new SAXParseException("vmZ", (Locator) null, sAXParseException0);
      sAXParseException1.getStackTrace();
      SAXParseException sAXParseException2 = (SAXParseException)sAXParseException1.fillInStackTrace();
      SAXParseException sAXParseException3 = new SAXParseException("vmZ", (Locator) null);
      SAXParseException sAXParseException4 = (SAXParseException)sAXParseException1.fillInStackTrace();
      SAXParseException sAXParseException5 = new SAXParseException("vmZ", (Locator) null);
      SAXParseException sAXParseException6 = new SAXParseException("vmZ", (Locator) null);
      SAXParseException sAXParseException7 = new SAXParseException("vmZ", (Locator) null);
      sAXParseException0.getSuppressed();
      sAXParseException2.getColumnNumber();
      sAXParseException1.getLocalizedMessage();
      SAXParseException sAXParseException8 = (SAXParseException)sAXParseException4.fillInStackTrace();
      sAXParseException4.getLocalizedMessage();
      SAXParseException sAXParseException9 = (SAXParseException)sAXParseException8.fillInStackTrace();
      sAXParseException2.addSuppressed(sAXParseException0);
      SAXParseException sAXParseException10 = new SAXParseException("vmZ", "vmZ", "vmZ", (-1), (-1));
      sAXParseException9.getStackTrace();
      sAXParseException2.getColumnNumber();
      SAXParseException sAXParseException11 = new SAXParseException("vmZ", "vmZ", "vmZ", (-1), (-1));
      SAXParseException sAXParseException12 = new SAXParseException("vmZ", "vmZ", "vmZ", (-1), (-1));
      sAXParseException12.getException();
      sAXParseException12.getLocalizedMessage();
      sAXParseException8.getSuppressed();
      sAXParseException3.toString();
      sAXParseException8.getLineNumber();
      sAXParseException8.getSuppressed();
      sAXParseException9.getSuppressed();
      sAXParseException1.getPublicId();
      SAXParseException sAXParseException13 = new SAXParseException(".QF0*<vt", (Locator) null, sAXParseException12);
      SAXParseException sAXParseException14 = new SAXParseException("vmZ", "org.xml.sax.SAXParseException; vmZ", "vmZ", (-1), (-1), sAXParseException8);
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      try { 
        connectionFactories0.setXAConnectionFactory(224, xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAQueueConnectionFactory(351);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAQueueConnectionFactory((-1129));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearTopicConnectionFactory();
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      TopicConnectionFactory topicConnectionFactory1 = new TopicConnectionFactory();
      topicConnectionFactory1.setName("org.exolab.castor.xml.validators.StringValidator");
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      xATopicConnectionFactory0.setName("");
      try { 
        connectionFactories0.addXATopicConnectionFactory(3059, xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 3059, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      xMLFilterImpl1.endElement("cFtZ#i+H$HB/9B", "N#~F", "N#~F");
      xMLFilterImpl1.getDTDHandler();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl1.getContentHandler();
      xMLFilterImpl2.unparsedEntityDecl("N#~F", "pJ<[EOe", "\"VlY\"6kwL0]T#", "nF");
      xMLFilterImpl2.endPrefixMapping("N#~F");
      xMLFilterImpl0.unparsedEntityDecl("N#~F", "cFtZ#i+H$HB/9B", "N#~F", "N#~F");
      xMLFilterImpl0.skippedEntity("N#~F");
      xMLFilterImpl1.endElement("F|tE", "F|tE", "cFtZ#i+H$HB/9B");
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl2.startElement("\"VlY\"6kwL0]T#", "^mp~}!U7%UEz+@$8", "Yz``QiRg", (Attributes) null);
      xMLFilterImpl3.unparsedEntityDecl("pJ<[EOe", "N#~F", "Oj[EG`Qsg4?q ", "kQwT");
      char[] charArray0 = new char[1];
      charArray0[0] = 'j';
      xMLFilterImpl2.characters(charArray0, (-1), (-1));
      xMLFilterImpl3.setDTDHandler(xMLFilterImpl2);
      xMLFilterImpl3.getParent();
      xMLFilterImpl2.skippedEntity("N#~F");
      xMLFilterImpl1.setParent(xMLFilterImpl3);
      AttributesImpl attributesImpl0 = new AttributesImpl();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl2);
      attributesImpl0.getValue("eyMvCE&OO4(]>CKGIimy", "");
      AttributesImpl attributesImpl1 = new AttributesImpl();
      try { 
        connectionFactories0.getQueueConnectionFactory((int) 'j');
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      xMLFilterImpl1.endElement("cFtZ#i+H$HB/9B", "N#~F", "N#~F");
      xMLFilterImpl1.getDTDHandler();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl1.getContentHandler();
      xMLFilterImpl2.unparsedEntityDecl("N#~F", "pJ<[EOe", "\"VlY\"6kwL0]T#", "nF");
      xMLFilterImpl2.endPrefixMapping("N#~F");
      xMLFilterImpl0.unparsedEntityDecl("N#~F", "cFtZ#i+H$HB/9B", "N#~F", "N#~F");
      xMLFilterImpl0.skippedEntity("N#~F");
      xMLFilterImpl1.endElement("F|tE", "F|tE", "cFtZ#i+H$HB/9B");
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl2.startElement("\"VlY\"6kwL0]T#", "pJ<[EOe", "Yz``QiRg", (Attributes) null);
      xMLFilterImpl3.unparsedEntityDecl("pJ<[EOe", "N#~F", "Oj[EG`Qsg4?q ", "kQwT");
      char[] charArray0 = new char[1];
      charArray0[0] = 'j';
      xMLFilterImpl2.characters(charArray0, (-1), (-1));
      xMLFilterImpl3.setDTDHandler(xMLFilterImpl2);
      xMLFilterImpl3.getParent();
      xMLFilterImpl2.skippedEntity("N#~F");
      xMLFilterImpl1.setParent(xMLFilterImpl3);
      AttributesImpl attributesImpl0 = new AttributesImpl();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl2);
      attributesImpl0.getValue("eyMvCE&OO4(]>CKGIimy", "");
      AttributesImpl attributesImpl1 = new AttributesImpl();
      try { 
        connectionFactories0.getQueueConnectionFactory((int) 'j');
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      SAXParseException sAXParseException0 = new SAXParseException("*~vy&6RXw^", (Locator) null);
      SAXParseException sAXParseException1 = new SAXParseException("*~vy&6RXw^", (Locator) null, sAXParseException0);
      sAXParseException1.getStackTrace();
      sAXParseException0.getCause();
      SAXParseException sAXParseException2 = new SAXParseException("", (Locator) null);
      SAXParseException sAXParseException3 = new SAXParseException("*~vy&6RXw^", (Locator) null, sAXParseException1);
      sAXParseException0.getMessage();
      SAXParseException sAXParseException4 = new SAXParseException("^", "", "LZ'On|P{O", 1816, 1816);
      sAXParseException1.getSystemId();
      sAXParseException4.toString();
      sAXParseException4.getCause();
      sAXParseException4.getCause();
      SAXParseException sAXParseException5 = new SAXParseException("LZ'On|P{O", "LZ'On|P{O", "^", 1816, 1816);
      sAXParseException3.getMessage();
      SAXParseException sAXParseException6 = new SAXParseException("*~vy&6RXw^", "*~vy&6RXw^", "*~vy&6RXw^", 1816, 1816);
      sAXParseException3.getColumnNumber();
      sAXParseException3.printStackTrace();
      SAXParseException sAXParseException7 = new SAXParseException("^", (Locator) null);
      sAXParseException3.getLocalizedMessage();
      sAXParseException0.getSystemId();
      SAXParseException sAXParseException8 = new SAXParseException("", (Locator) null);
      sAXParseException1.getSuppressed();
      sAXParseException7.getColumnNumber();
      sAXParseException1.getLineNumber();
      sAXParseException1.getSuppressed();
      sAXParseException1.getSuppressed();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.startPrefixMapping("}gE", "<##M");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAConnectionFactory((-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      xMLFilterImpl1.getDTDHandler();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl1.getContentHandler();
      xMLFilterImpl2.unparsedEntityDecl("N#~F", "pKJ<[EOe", "9<@?@{3^q pUjxsvYSC", "nF");
      xMLFilterImpl2.endPrefixMapping("N#~F");
      xMLFilterImpl0.unparsedEntityDecl("N#~F", "cFtZ#i+H$HB/9B", "N#~F", "N#~F");
      xMLFilterImpl0.skippedEntity("N#~F");
      xMLFilterImpl1.endElement("", "", "orgexab.castor.mapping.lader.J1CollectionHandlers$4");
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl3.unparsedEntityDecl("pKJ<[EOe", "N#~F", "Oj[EG`Qsg4?q ", "kQwT");
      char[] charArray0 = new char[1];
      charArray0[0] = 'j';
      xMLFilterImpl2.characters(charArray0, (-1), (-1));
      xMLFilterImpl3.setDTDHandler(xMLFilterImpl2);
      xMLFilterImpl2.skippedEntity("N#~F");
      xMLFilterImpl1.setParent(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean0 = connectionFactories0.isValid();
      assertTrue(boolean0);
      
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearXAQueueConnectionFactory();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "' could not be found.");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("BO`>252/v");
      Object[] objectArray0 = new Object[11];
      objectArray0[0] = (Object) mockPrintWriter0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      objectArray0[0] = (Object) mockPrintWriter0;
      objectArray0[2] = (Object) "BO`>252/v";
      objectArray0[3] = (Object) "BO`>252/v";
      objectArray0[4] = (Object) mockPrintWriter0;
      Object object0 = new Object();
      objectArray0[5] = object0;
      objectArray0[6] = (Object) "BO`>252/v";
      objectArray0[7] = (Object) "BO`>252/v";
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("BO`>252/v");
      MockFile mockFile0 = new MockFile("@", "0W!0#8X|YO");
      MockFile mockFile1 = new MockFile(mockFile0, "@");
      MockFile mockFile2 = new MockFile(mockFile1, "R[sFy.taoTTe80X%c");
      MockFile mockFile3 = new MockFile("@");
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(mockFile3);
      Enumeration enumeration0 = connectionFactories0.enumerateXATopicConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearXAConnectionFactory();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl0.setErrorHandler(xMLFilterImpl1);
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[0];
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      SAXParseException sAXParseException0 = new SAXParseException(":QQk =", (Locator) null);
      SAXParseException sAXParseException1 = new SAXParseException(":QQk =", (Locator) null);
      sAXParseException1.getStackTrace();
      sAXParseException0.getCause();
      SAXParseException sAXParseException2 = new SAXParseException("vmZ", (Locator) null);
      Throwable throwable0 = sAXParseException1.fillInStackTrace();
      SAXParseException sAXParseException3 = new SAXParseException(":QQk =", (Locator) null, sAXParseException1);
      SAXParseException sAXParseException4 = new SAXParseException("vmZ", (Locator) null);
      SAXParseException sAXParseException5 = new SAXParseException(":QQk =", (Locator) null);
      sAXParseException3.getSuppressed();
      sAXParseException3.getColumnNumber();
      sAXParseException1.getLocalizedMessage();
      Throwable throwable1 = sAXParseException3.fillInStackTrace();
      Throwable throwable2 = throwable1.fillInStackTrace();
      sAXParseException3.addSuppressed(sAXParseException0);
      SAXParseException sAXParseException6 = new SAXParseException(":QQk =", "0m4", "vmZ", (-1), (-1));
      sAXParseException3.getLocalizedMessage();
      MockThrowable mockThrowable0 = new MockThrowable(".590<vm", throwable0);
      SAXParseException sAXParseException7 = new SAXParseException("vmZ", ":QQk =", "vmZ", (-1), (-1));
      SAXParseException sAXParseException8 = new SAXParseException("vmZ", (Locator) null);
      sAXParseException8.getLocalizedMessage();
      sAXParseException8.getSuppressed();
      sAXParseException2.toString();
      throwable2.getSuppressed();
      sAXParseException3.getPublicId();
      SAXParseException sAXParseException9 = new SAXParseException(":QQk =", ":QQk =", ":QQk =", (-1), (-1));
      try { 
        connectionFactories0.getConnectionFactory(314);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z{B+0[zd8!]ci=");
      char[] charArray0 = new char[11];
      charArray0[5] = 'S';
      charArray0[1] = 'S';
      charArray0[2] = 'd';
      charArray0[3] = 'w';
      charArray0[4] = 'X';
      CharBuffer charBuffer0 = CharBuffer.allocate('w');
      stringReader0.read(charBuffer0);
      charArray0[5] = 'v';
      charArray0[6] = '/';
      stringReader0.read(charArray0, 1, 1);
      stringReader0.skip(1386L);
      try { 
        ConnectionFactories.unmarshal(stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parsing Error : Premature end of file.
         // Line : 1
         // Column : 1
         //
         verifyException("org.exolab.castor.xml.Unmarshaller", e);
      }
  }
}
