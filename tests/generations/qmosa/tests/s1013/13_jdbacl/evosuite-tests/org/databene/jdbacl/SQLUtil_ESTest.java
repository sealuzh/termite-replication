/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 02:17:41 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedReader;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.sql.SQLException;
import java.util.List;
import java.util.Vector;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.RejectedExecutionHandler;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.ThreadFactory;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import org.apache.derby.diag.ErrorMessages;
import org.apache.derby.iapi.services.context.ContextManager;
import org.apache.derby.iapi.services.context.ContextService;
import org.apache.derby.iapi.services.loader.GeneratedMethod;
import org.apache.derby.iapi.sql.conn.LanguageConnectionContext;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.iapi.sql.dictionary.ConstraintDescriptorList;
import org.apache.derby.iapi.sql.dictionary.DataDescriptorGenerator;
import org.apache.derby.iapi.sql.dictionary.GenericDescriptorList;
import org.apache.derby.iapi.sql.dictionary.SchemaDescriptor;
import org.apache.derby.iapi.sql.dictionary.TableDescriptor;
import org.apache.derby.iapi.sql.execute.NoPutResultSet;
import org.apache.derby.iapi.store.access.Qualifier;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.apache.derby.impl.db.SlaveDatabase;
import org.apache.derby.impl.services.reflect.ReflectClassesJava2;
import org.apache.derby.impl.services.reflect.ReflectGeneratedClass;
import org.apache.derby.impl.services.uuid.BasicUUID;
import org.apache.derby.impl.sql.GenericStorablePreparedStatement;
import org.apache.derby.impl.sql.catalog.DataDictionaryImpl;
import org.apache.derby.impl.sql.compile.CompilerContextImpl;
import org.apache.derby.impl.sql.compile.Predicate;
import org.apache.derby.impl.sql.compile.TypeCompilerFactoryImpl;
import org.apache.derby.impl.sql.conn.GenericLanguageConnectionFactory;
import org.apache.derby.impl.sql.execute.ConstantActionActivation;
import org.apache.derby.impl.sql.execute.GenericQualifier;
import org.apache.derby.impl.sql.execute.GenericScanQualifier;
import org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet;
import org.apache.derby.impl.store.access.UTFQualifier;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPackage;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl;
import org.firebirdsql.jca.FBConnectionRequestInfo;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jdbc.FBClob;
import org.firebirdsql.jdbc.FBConnection;
import org.firebirdsql.jdbc.FBConnectionProperties;
import org.h2.jdbc.JdbcSQLException;
import org.h2.tools.Csv;
import org.h2.tools.SimpleResultSet;
import org.hsqldb.jdbc.jdbcClob;
import org.hsqldb.lib.HashMappedList;
import org.hsqldb.rowio.RowOutputBinary;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.8672900914093027
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      boolean boolean0 = true;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("executeu_ggb");
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("executeu_ggb", true, defaultDBTable0, "executeu_ggb");
      dBCheckConstraint0.setTable(defaultDBTable0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      String string0 = "drop table";
      // Undeclared exception!
      try { 
        DBDataType.getInstance("j9]j'a/-9E=>s:U^wR ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Predicate predicate0 = new Predicate();
      DBDataType.getInstance(0, "insertselect int_");
      Integer integer0 = RawTransaction.COMMIT;
      PipedReader pipedReader0 = new PipedReader(3);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.slashSlashComments(false);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(pipedReader0);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(pipedReader0);
      streamTokenizer2.resetSyntax();
      streamTokenizer2.whitespaceChars((-4), 3);
      streamTokenizer0.nval = (double) 1;
      streamTokenizer2.eolIsSignificant(false);
      streamTokenizer0.ordinaryChar(3);
      streamTokenizer0.pushBack();
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(pipedReader0);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("1", string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.3419004922628597
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("6ea6ffac-0121-c5e6-29e6-00000043e718");
      assertNull(boolean0);
      
      boolean boolean1 = SQLUtil.isQuery("select into");
      assertFalse(boolean1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.3842713196839629
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("seleap2;16S|w");
      PrintWriter printWriter0 = mockPrintWriter0.append('q');
      mockPrintWriter0.println((-6.8775654F));
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) printWriter0;
      objectArray0[1] = (Object) "seleap2;16S|w";
      objectArray0[2] = (Object) "seleap2;16S|w";
      printWriter0.println((int) 'q');
      objectArray0[3] = (Object) "seleap2;16S|w";
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("w~xo", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("seleap2;16S|w");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      RowOutputBinary rowOutputBinary0 = new RowOutputBinary((-408117135));
      HashMappedList hashMappedList0 = new HashMappedList();
      mockPrintWriter0.print(false);
      hashMappedList0.get("seleap2;16S|w");
      rowOutputBinary0.writeUTF("<m(w\"jNr!~}A\tH");
      Object object0 = new Object();
      DBDataType dBDataType0 = DBDataType.getInstance(0, "");
      Integer integer0 = RawTransaction.ABORT;
      Integer.compare(57, 0);
      Integer.max(1, 0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("g!\"<)t_%|ZK-h.`ro;j", defaultDBTable0, dBDataType0, integer0, integer0);
      Object object1 = new Object();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(rowOutputBinary0);
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      assertSame(mockPrintWriter0, printWriter0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)95;
      byteArray0[1] = (byte)120;
      byteArray0[3] = (byte)120;
      StringBuilder stringBuilder0 = new StringBuilder((byte)120);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((int) (byte)120, "org.apache.derby.impl.services.monitor.UpdateServiceProperties");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = Integer.getInteger("ROW", integer0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("disconnecting #", defaultDBTable0, dBDataType0, integer1);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      doReturn((Thread) null).when(threadFactory0).newThread(any(java.lang.Runnable.class));
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor((byte)95, threadFactory0);
      Thread thread0 = MockThread.currentThread();
      MockThread mockThread0 = new MockThread((ThreadGroup) null, thread0);
      MockThread mockThread1 = new MockThread(mockThread0);
      ClassLoader classLoader0 = mockThread1.getContextClassLoader();
      mockThread1.setContextClassLoader(classLoader0);
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      scheduledThreadPoolExecutor0.scheduleAtFixedRate(mockThread1, (byte)0, 32L, timeUnit0);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7273952134111987
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      SQLUtil.isQuery("selectp2;1|w");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DBDataType dBDataType0 = DBDataType.getInstance(6, "delete");
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer2 = new Integer(6);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("(.$hnWdkdN-%wf 'D", (DBTable) null, dBDataType0, integer2, integer2);
      StringBuilder stringBuilder0 = new StringBuilder(6);
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("delete", (DBTable) null, dBDataType0);
      defaultDBColumn1.setDoc((String) null);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn1, stringBuilder0);
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(6, threadFactory0);
      defaultDBColumn0.isIdentical(defaultDBColumn1);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      DelayQueue<Delayed> delayQueue1 = new DelayQueue<Delayed>();
      SQLUtil.isDDL("(.$hnWdkdN-%wf 'D");
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("org.apache.derby.impl.services.locks.SinglePool", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("updatee", dBSchema0);
      // Undeclared exception!
      try { 
        defaultDBTable0.getUniqueConstraint("delete");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.3419004922628597
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select into");
      assertTrue(boolean0);
      assertNotNull(boolean0);
      
      boolean boolean1 = SQLUtil.isQuery("g^8_c>HFT|^H");
      assertFalse(boolean1);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.039581156259877
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("w~xo", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("s8bNYp'}$.s");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "s8bNYp'}$.s";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("s8bNYp'}$.s", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("s8bNYp'}$.s");
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "_u'm0J^s*", true, stringArray0);
      defaultDBTable0.addUniqueConstraint(dBUniqueConstraint0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      RowOutputBinary rowOutputBinary0 = new RowOutputBinary(180);
      int[] intArray0 = new int[0];
      HashMappedList hashMappedList0 = new HashMappedList();
      Object object0 = new Object();
      hashMappedList0.remove(object0);
      rowOutputBinary0.writeData(0, intArray0, (Object[]) stringArray0, hashMappedList0, intArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(rowOutputBinary0);
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      assertEquals("s8bNYp'}$.s", defaultDBTable0.getName());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      String string0 = "i(Ol}_|+B&okH";
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("i(Ol}_|+B&okH");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: i(Ol}_|+B&okH
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.6999267696231979
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      String string0 = "IMY4N";
      SQLUtil.isDML("IMY4N");
      String[] stringArray0 = new String[0];
      SQLUtil.renderColumnNames(stringArray0);
      System.setCurrentTimeMillis((-799L));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "()");
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("()");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" ADD ");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      String[] stringArray0 = new String[5];
      stringArray0[0] = " ADD ";
      stringArray0[1] = "rename";
      stringArray0[2] = " ADD ";
      stringArray0[3] = " ADD ";
      stringArray0[4] = "deletecreate unique index";
      defaultDBTable1.getUniqueConstraint(stringArray0);
      String[] stringArray1 = new String[0];
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint((String) null, false, defaultDBTable1, stringArray0, defaultDBTable0, stringArray1);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, (StringBuilder) null, nameSpec0);
      VersionNumber versionNumber0 = VersionNumber.valueOf((String) null);
      versionNumber0.toString();
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, (StringBuilder) null);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = null;
      try {
        dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint((DBTable) null, "$qn.", true, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBPrimaryKeyConstraint", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.004300942851871
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("I>9f=_Y;:\"EE");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(30000, "BLOB");
      Integer integer0 = RawTransaction.COMMIT;
      Integer integer1 = RawTransaction.COMMIT;
      Integer integer2 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer3 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer4 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer5 = new Integer(30000);
      Integer.sum(30000, 30000);
      Integer.getInteger("I>9f=_Y;:\"EE");
      Integer.getInteger("I>9f=_Y;:\"EE", 60000);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("f @ Ph,<\"e|#ABAV8!", (DBTable) null, dBDataType0, integer1);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("f @ Ph,<\"e|#ABAV8! BLOB NULL", string0);
      
      Integer integer6 = new Integer((-773));
      Integer.compare(30000, (-773));
      Integer integer7 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer8 = RawTransaction.ABORT;
      Integer.getInteger("f @ Ph,<\"e|#ABAV8!", (Integer) null);
      Integer integer9 = RawTransaction.ABORT;
      Integer integer10 = RawTransaction.LOCK_ESCALATE;
      Integer.remainderUnsigned(60000, (-477));
      Integer.getInteger(" on ", integer10);
      Integer integer11 = RawTransaction.LOCK_ESCALATE;
      Integer.getInteger(" jlZd[", (-477));
      Integer.getInteger("I>9f=_Y;:\"EE");
      Csv.getInstance();
      String string1 = SQLUtil.normalize("execute(+q4\"4-[3.bpw`pg, alter materialized viewu_ggb, p`99cpr[b, org.databene.commons.condition.comparationcondition, a}g<@oxa=:y+$^, (\"w8f?syzq8)", false);
      assertEquals("execute (+ q4 \"4-[3.bpw`pg, alter materialized viewu_ggb, p`99cpr[b, org.databene.commons.condition.comparationcondition, a}g<@oxa=:y+$^, (\" w8f ? syzq8)", string1);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.1950865325403197
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      jdbcClob jdbcClob0 = new jdbcClob("selectp2;1|w");
      jdbcClob jdbcClob1 = new jdbcClob("selectp2;1|w");
      ErrorMessages errorMessages0 = new ErrorMessages();
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("selectp2;1|w");
      assertFalse(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.1432136814444385
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      SQLUtil.removeComments("alter sessionalter materialized view");
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter sessionalter materialized view");
      assertNotNull(boolean0);
      assertFalse(boolean0);
      
      Boolean boolean1 = SQLUtil.mutatesStructure("select ");
      assertFalse(boolean1);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.880022123484118
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = SQLUtil.isQuery("select int_");
      String string0 = SQLUtil.substituteMarkers("select int_", "select int_", "select int_");
      assertEquals("'select int_'", string0);
      
      boolean boolean1 = SQLUtil.isProcedureCall("exec");
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.432553284919671
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      SQLUtil.removeComments("Mwf^-P");
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("Mwf^-P");
      assertNull(boolean0);
      
      Boolean boolean1 = SQLUtil.mutatesStructure("callnlter indexalt{r caterialized view");
      assertFalse(boolean1);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5053013916024658
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("w~xo", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("s8bNYp'}$.s");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "s8bNYp'}$.s";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("s8bNYp'}$.s", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("s8bNYp'}$.s");
      boolean boolean0 = true;
      RowOutputBinary rowOutputBinary0 = new RowOutputBinary(180);
      int[] intArray0 = new int[0];
      HashMappedList hashMappedList0 = new HashMappedList();
      rowOutputBinary0.writeData((-327670638), intArray0, (Object[]) stringArray0, hashMappedList0, intArray0);
      String[] stringArray1 = new String[1];
      stringArray1[0] = " on ";
      DBForeignKeyConstraint dBForeignKeyConstraint1 = new DBForeignKeyConstraint(" on ", false, defaultDBTable0, stringArray1, defaultDBTable0, stringArray1);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0, nameSpec0);
      VersionNumber versionNumber0 = VersionNumber.valueOf(" on ");
      versionNumber0.toString();
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint1, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.797664765144254
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      SQLUtil.substituteMarkers("", "deletenlter indexalt{r caterialized view", "deletenlter indexalt{r caterialized view");
      SQLUtil.mutatesStructure("pjOpYr{}+|");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "deletenlter indexalt{r caterialized view";
      stringArray0[2] = "pjOpYr{}+|";
      stringArray0[3] = "";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      SQLUtil.removeComments("@fS^Y*lUxrNP67hS");
      SQLUtil.removeComments("@fS^Y*lUxrNP67hS");
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      SQLUtil.renderColumnListWithTableName("update", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("update");
      DBDataType dBDataType0 = DBDataType.getInstance(2, "");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn((String) null, defaultDBTable0, dBDataType0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, " = '' AND deletenlter indexalt{r caterialized view = 'deletenlter indexalt{r caterialized view' AND pjOpYr{}+| = 'pjOpYr{}+|' AND  = ''", true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("@fS^Y*lUxrNP67hS");
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition("", stringBuilder0);
      StringBuilder stringBuilder2 = stringBuilder1.append('d');
      StringBuilder stringBuilder3 = stringBuilder2.insert(2, "update");
      char[] charArray0 = new char[5];
      charArray0[0] = 'd';
      charArray0[2] = 'd';
      charArray0[3] = 'd';
      charArray0[4] = 'd';
      StringBuilder stringBuilder4 = stringBuilder3.append(charArray0);
      // Undeclared exception!
      try { 
        stringBuilder4.insert(125, (float) 125);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 125
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.031606688608215
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ",8;[BGZDG/A");
      SQLUtil.normalize("Mwf^-P", false);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      LinkedBlockingQueue<Runnable> linkedBlockingQueue0 = new LinkedBlockingQueue<Runnable>();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Mwf^-P";
      stringArray0[1] = "Mwf^-P";
      stringArray0[2] = "Mwf^-P";
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("Mwf^-P", stringArray0, "Mwf^-P", "Mwf^-P", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      SQLUtil.normalize("Njb7PL!v(A8Sq;", true);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      ScrollInsensitiveResultSet scrollInsensitiveResultSet0 = null;
      try {
        scrollInsensitiveResultSet0 = new ScrollInsensitiveResultSet((NoPutResultSet) null, constantActionActivation0, 47, (-3547), (-2168.37197093), 12.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      int int0 = 336330824;
      StringBuilder stringBuilder0 = new StringBuilder(2800);
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("p21|W#", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      String string0 = SQLUtil.normalize("#Xf=8,:FP0", false);
      assertEquals("# X  f = 8, : FP0", string0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "s8bNYp'}$.s";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("s8bNYp'}$.s");
      mockPrintWriter0.print((-1612));
      mockPrintWriter0.append('q');
      String[] stringArray1 = new String[2];
      stringArray1[0] = "s8bNYp'}$.s";
      stringArray1[1] = "u+|0( &#eS39s'W";
      // Undeclared exception!
      try { 
        SQLUtil.join("s8bNYp'}$.s", "s8bNYp'}$.s", stringArray1, "Unknown constraint type: ", "Unknown constraint type: ", stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.1015830955806851
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("I>9f=_Y;:\"EE");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(30000, "BLOB");
      Integer integer0 = RawTransaction.COMMIT;
      Integer integer1 = RawTransaction.COMMIT;
      Integer.toUnsignedLong(90);
      Integer integer2 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer3 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer4 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer5 = new Integer(30000);
      Integer.sum(30000, 30000);
      Integer.getInteger("I>9f=_Y;:\"EE");
      Integer integer6 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("f @ Ph,<\"e|#ABAV8!", (DBTable) null, dBDataType0, integer1);
      defaultDBColumn0.toString();
      SQLUtil.renderColumn(defaultDBColumn0);
      Integer integer7 = new Integer(60000);
      Integer.compare(30000, 60000);
      Integer integer8 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer9 = RawTransaction.ABORT;
      Integer.getInteger("f @ Ph,<\"e|#ABAV8!", (Integer) null);
      Integer integer10 = RawTransaction.ABORT;
      Integer integer11 = RawTransaction.LOCK_ESCALATE;
      Integer.remainderUnsigned(60000, (-477));
      Integer.getInteger(" on ", integer11);
      Integer integer12 = RawTransaction.ABORT;
      Integer.getInteger(" jlZd[", (-477));
      Integer.getInteger("I>9f=_Y;:\"EE");
      Csv.getInstance();
      VersionNumber versionNumber0 = VersionNumber.valueOf("I>9f=_Y;:\"EE");
      assertNotNull(versionNumber0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.507563636449012
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      boolean boolean0 = true;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("s8bNYp'}$.s");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "s8bNYp'}$.s";
      stringArray0[1] = "select";
      stringArray0[2] = "s8bNYp'}$.s";
      stringArray0[3] = "s8bNYp'}$.s";
      stringArray0[4] = "rename";
      defaultDBTable0.getUniqueConstraint(stringArray0);
      String[] stringArray1 = new String[1];
      stringArray1[0] = "s8bNYp'}$.s";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("s8bNYp'}$.s", true, defaultDBTable0, stringArray1, defaultDBTable0, stringArray1);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, (StringBuilder) null, nameSpec0);
      VersionNumber versionNumber0 = VersionNumber.valueOf((String) null);
      versionNumber0.toString();
      dBForeignKeyConstraint0.setName("rename");
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.9263548464292743
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("s8bNYp'}$.s");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "s8bNYp'}$.s";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("s8bNYp'}$.s", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      SQLUtil.isDML("s8bNYp'}$.s");
      TableContainer tableContainer0 = new TableContainer("s8bNYp'}$.s");
      tableContainer0.getSequences(false);
      SQLUtil.isProcedureCall("org.apache.derby.impl.sql.compile.RowResultSetNode");
      SQLUtil.parseColumnTypeAndSize("s8bNYp'}$.s");
      DBCatalog dBCatalog0 = new DBCatalog();
      DBCatalog dBCatalog1 = new DBCatalog(">");
      dBCatalog1.getSchemas();
      VersionNumber versionNumber0 = VersionNumber.valueOf("create materialized vieworg.apache.derby.impl.sql.compile.createschemanode");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("select into", "l\"P'>=MpKVSkun4}K.", versionNumber0);
      DefaultDatabase defaultDatabase1 = new DefaultDatabase("A%[jcm$u}3&d", "execnull", versionNumber0);
      defaultDatabase1.getTable(" join ", false);
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "WC=c4yQz&c";
      stringArray0[1] = "WC=c4yQz&c";
      String[] stringArray1 = new String[7];
      stringArray1[0] = "WC=c4yQz&c";
      stringArray1[1] = "into";
      stringArray1[2] = "WC=c4yQz&c";
      stringArray1[3] = "% count: ";
      stringArray1[4] = "WC=c4yQz&c";
      stringArray1[5] = "into";
      stringArray1[6] = "WC=c4yQz&c";
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("% count: ", stringArray1, "Gy$C?I84", "into", stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.7315797140115936
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("alter materialized view");
      VersionNumber.valueOf("le5k5SH^^^_");
      jdbcClob jdbcClob0 = new jdbcClob("selectp21|w");
      int int0 = (-335058623);
      ErrorMessages errorMessages0 = new ErrorMessages();
      FBClob fBClob0 = new FBClob();
      long long0 = (-499L);
      try { 
        jdbcClob0.getSubString(0L, (-335058623));
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // java.lang.String@0000000012
         //
         verifyException("org.hsqldb.jdbc.Util", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)9;
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      SQLUtil.normalize(" ******* ", true);
      GenericStorablePreparedStatement genericStorablePreparedStatement0 = null;
      try {
        genericStorablePreparedStatement0 = new GenericStorablePreparedStatement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.GenericPreparedStatement", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      SQLUtil.normalize(",>low6!jQFGbEo$[./[", false);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      jdbcClob jdbcClob0 = new jdbcClob("selectdrop idexcannot create fbfield instance for null as xsqlvar.");
      int int0 = 3193;
      // Undeclared exception!
      try { 
        jdbcClob0.setString((long) 3193, "WdGME+Ae", 3193, (-851));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.Trace", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "p21|W#";
      CompositeDBObject<DBCheckConstraint> compositeDBObject0 = (CompositeDBObject<DBCheckConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer((String) null);
      tableContainer0.getTables();
      tableContainer0.getComponents();
      SQLUtil.typeAndName(tableContainer0);
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      doReturn((FBConnectionRequestInfo) null).when(fBManagedConnection0).getConnectionRequestInfo();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection(fBManagedConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = "ROW";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)95;
      byteArray0[1] = (byte)95;
      byteArray0[2] = (byte) (-91);
      byteArray0[3] = (byte) (-8);
      byteArray0[4] = (byte)57;
      byteArray0[5] = (byte)18;
      byteArray0[6] = (byte)85;
      byteArray0[7] = (byte) (-41);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[8] = (byte) (-13);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0730116670092564
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("s8bNYp'}$.s");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "s8bNYp'}$.s";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("s8bNYp'}$.s", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      dBForeignKeyConstraint0.setName("s8bNYp'}$.s");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, (StringBuilder) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "drop table";
      stringArray0[1] = ".`5.2~rJ";
      stringArray0[2] = "execute;z|8qb9,6)^6a]foh";
      stringArray0[3] = ";^)pS7}uu>#p>AD*Y";
      stringArray0[4] = "M^^9E";
      stringArray0[5] = "drop tablelike";
      SQLUtil.renderColumnNames(stringArray0);
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      Object object0 = new Object();
      genericDescriptorList0.add(object0);
      genericDescriptorList0.clone();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) genericDescriptorList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Character character0 = Character.valueOf('E');
      SQLUtil.renderValue(character0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      String[] stringArray0 = new String[4];
      stringArray0[2] = "/80|2T";
      stringArray0[1] = null;
      stringArray0[2] = "/80|2T";
      TableContainer tableContainer0 = new TableContainer(stringArray0[0], defaultDBTable0);
      tableContainer0.getSchema();
      defaultDBTable0.getPrimaryKeyConstraint();
      String string0 = SQLUtil.renderValue((Object) null);
      assertEquals("null", string0);
      
      Character character0 = new Character('8');
      String string1 = SQLUtil.substituteMarkers("inner", "renameuz-8i~vli^*}p4x#", character0);
      assertEquals("inner", string1);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)73;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte) (-120);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("DECIMAL", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "constraint");
      Boolean boolean0 = new Boolean("select int_");
      ThreadPoolExecutor.CallerRunsPolicy threadPoolExecutor_CallerRunsPolicy0 = new ThreadPoolExecutor.CallerRunsPolicy();
      SQLUtil.isQuery("select int_");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers("select int_", (String) null, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Predicate predicate0 = new Predicate();
      SQLUtil.isQuery("sepect iotoas");
      Integer integer0 = new Integer((byte) (-125));
      Integer integer1 = new Integer((-1957));
      Integer.compare(1, 45);
      Integer.toUnsignedString(42);
      Integer.compare((byte) (-125), (-372227321));
      Integer integer2 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer3 = RawTransaction.ABORT;
      Integer integer4 = new Integer(42);
      ThreadPoolExecutor.CallerRunsPolicy threadPoolExecutor_CallerRunsPolicy0 = new ThreadPoolExecutor.CallerRunsPolicy();
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-13);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "p21|W#";
      CompositeDBObject<DBCheckConstraint> compositeDBObject0 = (CompositeDBObject<DBCheckConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer((String) null);
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Boolean.valueOf("alter materialized view");
      // Undeclared exception!
      try { 
        SQLUtil.join("le5k5SH^^^_", "selectp21|w", (String[]) null, "", "insert", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.1104325826288886
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Oh+'W^";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("", (DBSchema) null);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "Oh+'W^", true, (String[]) null);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("!duwETC.-L{", false, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("r:2J #9j", dBTable0, (DBDataType) null, integer0);
      int int0 = 463;
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("|f~FLRk$+h1NW#", dBTable0, 463, "|f~FLRk$+h1NW#");
      DBColumn[] dBColumnArray0 = new DBColumn[5];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      defaultDBColumn1.setDefaultValue("!duwETC.-L{");
      dBColumnArray0[2] = (DBColumn) defaultDBColumn1;
      dBColumnArray0[3] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[4] = (DBColumn) defaultDBColumn1;
      SQLUtil.renderColumnNames(dBColumnArray0);
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("", stringArray0, "r:2J #9j", "Oh+'W^", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      boolean boolean0 = new Boolean("ROW");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)95;
      byteArray0[1] = (byte)120;
      byteArray0[2] = (byte) (-91);
      byteArray0[3] = (byte)120;
      byteArray0[4] = (byte)120;
      byteArray0[5] = (byte)18;
      byteArray0[6] = (byte)85;
      byteArray0[7] = (byte) (-41);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[8] = (byte) (-13);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "ROW";
      stringArray0[1] = "disconnecting #";
      stringArray0[2] = "ROW";
      stringArray0[3] = "disconnecting #";
      stringArray0[4] = "ROW";
      stringArray0[5] = "ROW";
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("ROW", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("I>9f=_Y;:\"EE");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType.getInstance((-668), "I>9f=_Y;:\"EE");
      Integer integer0 = RawTransaction.COMMIT;
      Integer integer1 = RawTransaction.COMMIT;
      Integer integer2 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer3 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer4 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer5 = new Integer((-234));
      DBDataType dBDataType0 = DBDataType.getInstance((-668), "create unique index");
      Integer integer6 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("BLOB", defaultDBTable0, dBDataType0, integer6);
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn((String) null, defaultDBTable0, (-234), "={mT{|n}{aUHA");
      SQLUtil.renderColumn(defaultDBColumn1);
      Integer integer7 = new Integer((-668));
      Integer integer8 = RawTransaction.COMMIT;
      Integer.compare((-668), (-668));
      Integer integer9 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer10 = RawTransaction.ABORT;
      Integer integer11 = RawTransaction.ABORT;
      Integer.getInteger("a{ U", integer11);
      Integer integer12 = RawTransaction.ABORT;
      Integer.getInteger("a{ U", integer10);
      VersionNumber.valueOf("create unique index");
      GenericLanguageConnectionFactory genericLanguageConnectionFactory0 = new GenericLanguageConnectionFactory();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      assertEquals(1, simpleResultSet0.getHoldability());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.0709763739725617
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" #*;Z)Nk%7^^N");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "l|G.W1OU81a]=@";
      stringArray0[1] = " #*;Z)Nk%7^^N";
      stringArray0[2] = " #*;Z)Nk%7^^N";
      stringArray0[3] = " #*;Z)Nk%7^^N";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "f9%z%mcu.i]pI6?H", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT f9%z%mcu.i]pI6?H PRIMARY KEY (l|G.W1OU81a]=@,  #*;Z)Nk%7^^N,  #*;Z)Nk%7^^N,  #*;Z)Nk%7^^N)", string0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.67380880533574
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("I7F9+n{d-", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      SQLUtil.renderColumnListWithTableName("I7F9+n{d-", stringArray0);
      SQLUtil.isQuery(" dt'zT3dd");
      SQLUtil.isDML(" dt'zT3dd");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      dBForeignKeyConstraint0.toString();
      SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      DBConstraint dBConstraint0 = null;
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      int int0 = (-1985375159);
      // Undeclared exception!
      try { 
        stringBuilder0.appendCodePoint((-1985375159));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.7039917864324614
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      String string0 = "p21|W";
      FileSystemHandling.shouldAllThrowIOExceptions();
      SQLUtil.isQuery("p21|W");
      String string1 = "deleteorg.apache.derby.impl.sql.compile.createschemanode";
      SQLUtil.isDML("deleteorg.apache.derby.impl.sql.compile.createschemanode");
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      DataDescriptorGenerator dataDescriptorGenerator0 = dataDictionaryImpl0.dataDescriptorGenerator;
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.3190095981344987
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("truncatecannot create fbfield instance for null as xsqlvar.");
      Object object0 = new Object();
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      SQLUtil.normalize("Oh+'W^", true);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      ConstantActionActivation constantActionActivation1 = new ConstantActionActivation();
      int int0 = (-335058623);
      ErrorMessages errorMessages0 = new ErrorMessages();
      int int1 = 336724008;
      int int2 = 2878;
      try { 
        errorMessages0.getClob(2878);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getClob
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      String string0 = SQLUtil.removeComments("");
      assertEquals("", string0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("create uniq");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "create uniq";
      stringArray0[1] = "s8oNYp'}$.s";
      stringArray0[2] = "create uniq";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("create uniq", false, defaultDBTable0, (String[]) null, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, (StringBuilder) null, nameSpec0);
      VersionNumber versionNumber0 = VersionNumber.valueOf("create uniq");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("MZ7f/Xz", "mI>U", versionNumber0);
      DefaultDatabase defaultDatabase1 = new DefaultDatabase("RZ", (String) null, versionNumber0);
      // Undeclared exception!
      try { 
        defaultDatabase0.getTable("create uniq", true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table 'create uniq'
         //
         verifyException("org.databene.jdbacl.model.DefaultDatabase", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      int int0 = 21;
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("setRowId(int, RowId)");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"int\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader(1525);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Predicate predicate0 = new Predicate();
      DBDataType.getInstance(0, "insertselect int_");
      Integer integer0 = RawTransaction.COMMIT;
      PipedReader pipedReader0 = new PipedReader(3);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.slashSlashComments(false);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(pipedReader0);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(pipedReader0);
      streamTokenizer2.resetSyntax();
      streamTokenizer2.eolIsSignificant(false);
      streamTokenizer0.ordinaryChar(3);
      streamTokenizer0.pushBack();
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(pipedReader0);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 0", string0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.624330177995208
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringBuilder stringBuilder0 = new StringBuilder();
      Integer.compare(42, 335544472);
      Integer integer0 = new Integer((-1));
      Integer.divideUnsigned(3587, 42);
      Integer.getInteger("no]TJ|gLZ=c@", integer0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "BLeKO,\u0006Z2W";
      stringArray0[1] = "no]TJ|gLZ=c@";
      stringArray0[2] = "no]TJ|gLZ=c@";
      stringArray0[3] = "no]TJ|gLZ=c@";
      stringArray0[4] = "no]TJ|gLZ=c@";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      String string0 = "s8bNYp'}$.s";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("s8bNYp'}$.s");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("org.apache.derby.impl.sql.compile.CreateSchemaNode");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, ":G");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("org.apache.derby.impl.sql.catalog.SYSKEYSRowFactory");
      PrintWriter printWriter0 = mockPrintWriter0.append('q');
      mockPrintWriter0.println(false);
      printWriter0.println(true);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0);
      mockPrintWriter1.println("org.apache.derby.impl.sql.catalog.SYSKEYSRowFactory");
      mockPrintWriter1.print("s8bNYp'}$.s");
      mockPrintWriter0.println((long) 'q');
      DBForeignKeyConstraint dBForeignKeyConstraint0 = null;
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "s8bNYp'}$.s");
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey((DBForeignKeyConstraint) null, nameSpec0, mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("A>");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("A>", defaultDBTable0, (-8339742), "");
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("Mwf^-P");
      DBDataType.getInstance((-1090645504), "Mwf^-P");
      Integer integer0 = RawTransaction.COMMIT;
      DBDataType dBDataType0 = DBDataType.getInstance(141, "truncateselect int_");
      Integer integer1 = RawTransaction.COMMIT;
      DBDataType.getInstance((-1090645504), "_%\"8rF^o+=X] yi7;p");
      dBDataType0.isNumber();
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "select intosepect iotoas";
      stringArray0[1] = "select intosepect iotoas";
      stringArray0[2] = "select intosepect iotoas";
      stringArray0[3] = "select intosepect iotoas";
      stringArray0[4] = "select intosepect iotoas";
      stringArray0[5] = "select intosepect iotoas";
      stringArray0[6] = "select intosepect iotoas";
      stringArray0[7] = "select intosepect iotoas";
      stringArray0[8] = "select intosepect iotoas";
      String string0 = SQLUtil.leftJoin("select intosepect iotoas", stringArray0, (String) null, "select intosepect iotoas", stringArray0);
      assertEquals("left join null as select intosepect iotoas on select intosepect iotoas.select intosepect iotoas = select intosepect iotoas.select intosepect iotoas and select intosepect iotoas.select intosepect iotoas = select intosepect iotoas.select intosepect iotoas and select intosepect iotoas.select intosepect iotoas = select intosepect iotoas.select intosepect iotoas and select intosepect iotoas.select intosepect iotoas = select intosepect iotoas.select intosepect iotoas and select intosepect iotoas.select intosepect iotoas = select intosepect iotoas.select intosepect iotoas and select intosepect iotoas.select intosepect iotoas = select intosepect iotoas.select intosepect iotoas and select intosepect iotoas.select intosepect iotoas = select intosepect iotoas.select intosepect iotoas and select intosepect iotoas.select intosepect iotoas = select intosepect iotoas.select intosepect iotoas and select intosepect iotoas.select intosepect iotoas = select intosepect iotoas.select intosepect iotoas", string0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = "Ho]#\\KCYt2/_@<49EPO";
      // Undeclared exception!
      try { 
        SQLUtil.join((String) null, (String) null, stringArray0, "Ho]#KCYt2/_@<49EPO", "XSCH4.S", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "s8bNYp'}$.s";
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      String string0 = ".";
      // Undeclared exception!
      try { 
        DBDataType.getInstance("alter session");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      DBCatalog dBCatalog0 = new DBCatalog("s");
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      TableDescriptor tableDescriptor0 = new TableDescriptor(dataDictionaryImpl0, ", ", (SchemaDescriptor) null, 707, 'F');
      ColumnDescriptorList columnDescriptorList0 = tableDescriptor0.getColumnDescriptorList();
      VersionNumber versionNumber0 = new VersionNumber(columnDescriptorList0);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("alter index", "executecannot create fbfield instance for null as xsqlvar.", versionNumber0);
      dBCatalog0.setDatabase(defaultDatabase0);
      DBSchema dBSchema0 = new DBSchema("", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("s", dBSchema0);
      DBDataType.getInstance(65, "vxe4i)Ms#>-Q_R");
      // Undeclared exception!
      SQLUtil.isDML("/*");
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      SQLUtil.normalize("QlY=.O-hQ06#2", true);
      GenericStorablePreparedStatement genericStorablePreparedStatement0 = null;
      try {
        genericStorablePreparedStatement0 = new GenericStorablePreparedStatement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.GenericPreparedStatement", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      SQLUtil.typeAndName((DBObject) null);
      DBTable dBTable0 = null;
      String string0 = "h}.(s";
      boolean boolean0 = true;
      String[] stringArray0 = new String[3];
      stringArray0[0] = "h}.(s";
      stringArray0[1] = "h}.(s";
      stringArray0[2] = "h}.(s";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = null;
      try {
        dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint((DBTable) null, "h}.(s", true, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBPrimaryKeyConstraint", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.4125328745724541
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("seleap2;16S|w");
      PrintWriter printWriter0 = mockPrintWriter0.append('q');
      mockPrintWriter0.println((-6.8775654F));
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) printWriter0;
      objectArray0[1] = (Object) "seleap2;16S|w";
      objectArray0[2] = (Object) "seleap2;16S|w";
      printWriter0.println((int) 'q');
      objectArray0[3] = (Object) "seleap2;16S|w";
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("w~xo", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("seleap2;16S|w");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      RowOutputBinary rowOutputBinary0 = new RowOutputBinary('q');
      HashMappedList hashMappedList0 = new HashMappedList();
      hashMappedList0.clear();
      hashMappedList0.values();
      mockPrintWriter0.print(true);
      hashMappedList0.get("seleap2;16S|w");
      rowOutputBinary0.writeUTF("<m(w\"jNr!~}A\tH");
      Object object0 = new Object();
      DBDataType dBDataType0 = DBDataType.getInstance(0, "");
      Integer integer0 = RawTransaction.ABORT;
      Integer.compare(57, 0);
      Integer.max(1, 0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("g!\"<)t_%|ZK-h.`ro;j", defaultDBTable0, dBDataType0, integer0, integer0);
      Object object1 = new Object();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(rowOutputBinary0);
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      System.setCurrentTimeMillis((-1448L));
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      VersionNumber versionNumber0 = VersionNumber.valueOf("");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("5sZNxzI1&9elh!01T", "", versionNumber0);
      defaultDatabase0.getTable((String) null, false);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "5sZNxzI1&9elh!01T";
      stringArray0[1] = "5sZNxzI1&9elh!01T";
      stringArray0[2] = null;
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "5sZNxzI1&9elh!01T";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.444902988163467
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      Integer integer0 = new Integer((-124));
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Mwf^-P");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "k|1o:sP& 0";
      stringArray0[1] = "Mwf^-P";
      stringArray0[2] = "Mwf^-P";
      stringArray0[3] = "create unique indexcannot create fbfield instance for null as xsqlvar.";
      stringArray0[4] = "Mwf^-P";
      stringArray0[5] = "Mwf^-P";
      stringArray0[6] = "call";
      defaultDBTable0.setDoc("k|1o:sP& 0");
      stringArray0[7] = "Mwf^-P";
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) "create unique indexcannot create fbfield instance for null as xsqlvar.";
      objectArray0[1] = (Object) "Mwf^-P";
      objectArray0[2] = (Object) "create unique indexcannot create fbfield instance for null as xsqlvar.";
      objectArray0[3] = (Object) delayQueue0;
      objectArray0[4] = (Object) "k|1o:sP& 0";
      objectArray0[5] = (Object) "call";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.5732052067491771
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      String[] stringArray0 = new String[12];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      stringArray0[10] = "Mwf^-P";
      SQLUtil.normalize("Mwf^-P", false);
      String string0 = "";
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("Mwf^-P", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema(" on ");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null, dBSchema0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "SYSCS_SET_DATABASE_PROPERTY";
      stringArray0[1] = "SYSCS_SET_DATABASE_PROPERTY";
      stringArray0[2] = null;
      stringArray0[3] = " on ";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "SYSCS_SET_DATABASE_PROPERTY", false, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) " on ");
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      int int0 = (-200);
      // Undeclared exception!
      try { 
        stringBuilder1.appendCodePoint((-200));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("s8bNYp'}$.s");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "s8bNYp'}$.s";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "s8bNYp'}$.s", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.ukSpec(dBPrimaryKeyConstraint0, nameSpec0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((DBColumn[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.196664918501384
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema((String) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null, dBSchema0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = "org.databene.jdbacl.SQLUtil";
      stringArray0[4] = "org.databene.jdbacl.SQLUtil";
      stringArray0[5] = null;
      stringArray0[6] = null;
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "org.databene.jdbacl.SQLUtil", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("CONSTRAINT org.databene.jdbacl.SQLUtil UNIQUE (, , , org.databene.jdbacl.SQLUtil, org.databene.jdbacl.SQLUtil, , )", string0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "p21|W#";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.093380419625629
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("w~xo", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("s8bNYp'}$.s");
      StringBuilder stringBuilder0 = new StringBuilder("s8bNYp'}$.s");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "alter tableselect into", true, stringArray0);
      defaultDBTable0.addUniqueConstraint(dBPrimaryKeyConstraint0);
      RowOutputBinary rowOutputBinary0 = new RowOutputBinary(180);
      HashMappedList hashMappedList0 = new HashMappedList();
      Object object0 = new Object();
      hashMappedList0.remove(object0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(rowOutputBinary0);
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      assertEquals("table", defaultDBTable0.getObjectType());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.7039917864324616
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      SQLUtil.isDDL("create unique index");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "create unique index";
      stringArray0[5] = "create unique index";
      stringArray0[2] = "create unique index";
      stringArray0[4] = "create unique index";
      stringArray0[5] = "create unique index";
      stringArray0[6] = "create unique index";
      String string0 = SQLUtil.renderValue("create unique index");
      assertEquals("'create unique index'", string0);
      
      Boolean boolean0 = SQLUtil.mutatesStructure("create unique index");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.1515952780212544
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Oh+'W^";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("", (DBSchema) null);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "Oh+'W^", true, (String[]) null);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("!duwETC.-L{", false, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("r:2J #9j", dBTable0, (DBDataType) null, integer0);
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("|f~FLRk$+h1NW#", dBTable0, 463, "|f~FLRk$+h1NW#");
      DBColumn[] dBColumnArray0 = new DBColumn[5];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      defaultDBColumn1.setDefaultValue("!duwETC.-L{");
      dBColumnArray0[2] = (DBColumn) defaultDBColumn1;
      dBColumnArray0[3] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[4] = (DBColumn) defaultDBColumn1;
      SQLUtil.renderColumnNames(dBColumnArray0);
      SQLUtil.constraintName(dBUniqueConstraint0);
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = stringBuilder0.append(463);
      StringBuilder stringBuilder2 = stringBuilder1.append("ctid");
      stringBuilder2.append((CharSequence) "Oh+'W^ = 'Oh+'W^' AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null");
      // Undeclared exception!
      try { 
        stringBuilder2.insert(335544475, 0.0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 335544475
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Predicate predicate0 = new Predicate();
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("I7F9+n{d-", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("org.apache.derby.impl.sql.compile.CreateSchemaNode");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "I7F9+n{d-");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("I7F9+n{d-");
      mockPrintWriter0.append('q');
      defaultDBTable0.setName("I7F9+n{d-");
      mockPrintWriter0.println(true);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("I7F9+n{d-");
      mockPrintWriter0.print("I7F9+n{d-");
      mockPrintWriter1.println(1123L);
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, mockPrintWriter1);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("I7F9+n{d-", "_|3bMK]C({he.aMb\"k", (VersionNumber) null);
      defaultDatabase0.setOwner(defaultDBTable0);
      DBTable dBTable0 = defaultDatabase0.getTable("SN3y ztBq>ayVT", false);
      assertNull(dBTable0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.7464172293626314
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      String[] stringArray0 = new String[5];
      String string0 = "Uc#w$*|#azB:jss7r";
      stringArray0[0] = "Uc#w$*|#azB:jss7r";
      stringArray0[1] = "Uc#w$*|#azB:jss7r";
      String string1 = "org.databene.commons.file.FileSuffixFilter";
      stringArray0[2] = "org.databene.commons.file.FileSuffixFilter";
      String string2 = "COUNT";
      stringArray0[3] = "COUNT";
      stringArray0[4] = "zfT{o,=BdH%i~v6>,!";
      SQLUtil.renderColumnNames(stringArray0);
      SQLUtil.normalize("8", true);
      String string3 = "56-C-=:8I/!3w+1+l";
      DBCatalog dBCatalog0 = new DBCatalog("56-C-=:8I/!3w+1+l");
      DBSchema dBSchema0 = new DBSchema("//", dBCatalog0);
      dBCatalog0.getSchemas();
      DBPackage dBPackage0 = new DBPackage("Uc#w$*|#azB:jss7r", dBSchema0);
      SQLUtil.ownerDotComponent(dBPackage0);
      SQLUtil.isDML(" as ");
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      constraintDescriptorList0.listIterator();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) constraintDescriptorList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("s8bNYp'}$.s");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "s8bNYp'}$.s";
      VersionNumber.valueOf((String) null);
      String string0 = SQLUtil.ownerDotComponent(defaultDBTable0);
      assertEquals("s8bNYp'}$.s", string0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.7464172293626314
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "Uc#w$*|#azB:jss7r";
      String string0 = "-";
      stringArray0[1] = "-";
      String string1 = "org.databene.commons.file.FileSuffixFilter";
      stringArray0[2] = "org.databene.commons.file.FileSuffixFilter";
      String string2 = "COUNT";
      stringArray0[3] = "COUNT";
      stringArray0[4] = "zfT{o,=BdH%i~v6>,!";
      SQLUtil.renderColumnNames(stringArray0);
      SQLUtil.normalize("8", true);
      String string3 = "56-C-=:8I/!3w+1+l";
      DBCatalog dBCatalog0 = new DBCatalog("56-C-=:8I/!3w+1+l");
      DBSchema dBSchema0 = new DBSchema("//", dBCatalog0);
      dBCatalog0.getSchemas();
      DBPackage dBPackage0 = new DBPackage("Uc#w$*|#azB:jss7r", dBSchema0);
      SQLUtil.ownerDotComponent(dBPackage0);
      SQLUtil.isDML(" as ");
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      constraintDescriptorList0.listIterator();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) constraintDescriptorList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("selectdrop idexcannot create fbfield instance for null as xsqlvar.");
      tableContainer0.getTable("u_gg");
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.9982695885852573
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      boolean boolean0 = true;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("s8bNYp'}$.s");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "s8bNYp'}$.s";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("s8bNYp'}$.s", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, (StringBuilder) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.8816064979261793
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("s8bNYp'}$.s");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "s8bNYp'}$.s";
      VersionNumber.valueOf((String) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "execcreate unique index", true, stringArray0);
      String string0 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT \"execcreate unique index\" PRIMARY KEY (s8bNYp'}$.s, , , , , , )", string0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)95;
      byteArray0[1] = (byte)120;
      byteArray0[2] = (byte) (-91);
      byteArray0[3] = (byte)120;
      byteArray0[4] = (byte)120;
      byteArray0[5] = (byte)18;
      byteArray0[6] = (byte)85;
      byteArray0[7] = (byte) (-41);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Thread thread0 = MockThread.currentThread();
      MockThread mockThread0 = new MockThread(thread0);
      ClassLoader classLoader0 = mockThread0.getContextClassLoader();
      mockThread0.setContextClassLoader(classLoader0);
      ThreadPoolExecutor.AbortPolicy threadPoolExecutor_AbortPolicy0 = new ThreadPoolExecutor.AbortPolicy();
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      doReturn((Thread) null).when(threadFactory0).newThread(any(java.lang.Runnable.class));
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(335544440, threadFactory0, threadPoolExecutor_AbortPolicy0);
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      scheduledThreadPoolExecutor0.scheduleAtFixedRate(mockThread0, 45, 48, timeUnit0);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      DelayQueue<Delayed> delayQueue1 = new DelayQueue<Delayed>();
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("inner", false, (String) null, "inner");
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = stringBuilder0.append(62.0F);
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder1);
      assertEquals("62.0CONSTRAINT inner ", stringBuilder1.toString());
      assertEquals("62.0CONSTRAINT inner ", stringBuilder0.toString());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("p21|W");
      PrintWriter printWriter0 = mockPrintWriter0.append('$');
      printWriter0.checkError();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0);
      printWriter0.println(true);
      printWriter0.println("|yN.");
      mockPrintWriter1.print((-1.0F));
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("renamealtep table");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "renamealtep table";
      stringArray0[1] = "E_";
      stringArray0[2] = "#+[mqA+Xr/4Q)BzK.";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("#+[mqA+Xr/4Q)BzK.", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBForeignKeyConstraint0, nameSpec0);
      StringBuilder stringBuilder1 = stringBuilder0.append('U');
      int int0 = 46;
      StringBuilder stringBuilder2 = stringBuilder1.appendCodePoint(46);
      // Undeclared exception!
      try { 
        stringBuilder2.insert(46, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 46
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      String string0 = " \r\t\n";
      StringBuilder stringBuilder0 = new StringBuilder(336330824);
      stringBuilder0.append((CharSequence) " \r\t\n");
      SQLUtil.addOptionalCondition(" \r\t\n", stringBuilder0);
      FBClob fBClob0 = new FBClob();
      long long0 = (-664L);
      jdbcClob jdbcClob0 = new jdbcClob("MX");
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      GenericLanguageConnectionFactory genericLanguageConnectionFactory0 = new GenericLanguageConnectionFactory();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection((FBManagedConnection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = null;
      SQLUtil.addOptionalCondition((String) null, stringBuilder0);
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      SlaveDatabase slaveDatabase0 = new SlaveDatabase();
      int int0 = 2297;
      int int1 = (-899);
      String string1 = "O\"ZK~>DMyt8>";
      // Undeclared exception!
      try { 
        constantActionActivation0.getMethod("O\"ZK~>DMyt8>");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.execute.BaseActivation", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.append(0.0F);
      String string0 = null;
      SQLUtil.addRequiredCondition((String) null, stringBuilder0);
      jdbcClob jdbcClob0 = null;
      try {
        jdbcClob0 = new jdbcClob((String) null);
        fail("Expecting exception: SQLException");
      
      } catch(Throwable e) {
         //
         // java.lang.String@0000000001
         //
         verifyException("org.hsqldb.jdbc.Util", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addRequiredCondition((String) null, stringBuilder0);
      jdbcClob jdbcClob0 = null;
      try {
        jdbcClob0 = new jdbcClob((String) null);
        fail("Expecting exception: SQLException");
      
      } catch(Throwable e) {
         //
         // java.lang.String@0000000001
         //
         verifyException("org.hsqldb.jdbc.Util", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[2] = "XSCH4.S";
      stringArray0[3] = ".";
      stringArray0[4] = "XSCH4.S";
      stringArray0[7] = "XSCH4.S";
      stringArray0[7] = ".";
      SQLUtil.join(".", "org.apache.derby.iapi.util.ReuseFactory", stringArray0, "XSCH4.S", "u+|0( &#eS39s'W", stringArray0);
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      GenericLanguageConnectionFactory genericLanguageConnectionFactory0 = new GenericLanguageConnectionFactory();
      FBManagedConnection fBManagedConnection0 = null;
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection((FBManagedConnection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "aBs#_)2V.";
      stringArray0[1] = "aBs#_)2V.";
      stringArray0[2] = "aBs#_)2V.";
      stringArray0[3] = "aBs#_)2V.";
      stringArray0[4] = "/*";
      stringArray0[5] = "aBs#_)2V.";
      stringArray0[6] = "aBs#_)2V.";
      stringArray0[7] = "truncate6ea6ffac-0121-c5e6-29e6-00000043e718";
      String string0 = SQLUtil.leftJoin("aBs#_)2V.", stringArray0, "aBs#_)2V.", "t*-cIR SZYz^", stringArray0);
      assertEquals("left join aBs#_)2V. as t*-cIR SZYz^ on aBs#_)2V..aBs#_)2V. = t*-cIR SZYz^.aBs#_)2V. and aBs#_)2V..aBs#_)2V. = t*-cIR SZYz^.aBs#_)2V. and aBs#_)2V..aBs#_)2V. = t*-cIR SZYz^.aBs#_)2V. and aBs#_)2V..aBs#_)2V. = t*-cIR SZYz^.aBs#_)2V. and aBs#_)2V../* = t*-cIR SZYz^./* and aBs#_)2V..aBs#_)2V. = t*-cIR SZYz^.aBs#_)2V. and aBs#_)2V..aBs#_)2V. = t*-cIR SZYz^.aBs#_)2V. and aBs#_)2V..truncate6ea6ffac-0121-c5e6-29e6-00000043e718 = t*-cIR SZYz^.truncate6ea6ffac-0121-c5e6-29e6-00000043e718", string0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("seleap2;16S|w");
      PrintWriter printWriter0 = mockPrintWriter0.append('q');
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) printWriter0;
      objectArray0[1] = (Object) "seleap2;16S|w";
      objectArray0[2] = (Object) "seleap2;16S|w";
      printWriter0.println((int) 'q');
      objectArray0[3] = (Object) "seleap2;16S|w";
      RowOutputBinary rowOutputBinary0 = new RowOutputBinary((-408117135));
      HashMappedList hashMappedList0 = new HashMappedList();
      mockPrintWriter0.print(false);
      hashMappedList0.get("seleap2;16S|w");
      rowOutputBinary0.writeUTF("<m(w\"jNr!~}A\tH");
      Object object0 = new Object();
      DBDataType.getInstance(0, "");
      Integer integer0 = RawTransaction.ABORT;
      Integer.compare(57, 0);
      Integer.max(1, 0);
      Object object1 = new Object();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(rowOutputBinary0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Predicate predicate0 = new Predicate();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = SQLUtil.normalize("", true);
      assertEquals("", string0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("I>9f=_Y;:\"EE");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType.getInstance(623, "BLOB");
      Integer integer0 = RawTransaction.COMMIT;
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      DBDataType dBDataType0 = DBDataType.getInstance((-1151), "D");
      Integer integer2 = RawTransaction.COMMIT;
      Integer integer3 = RawTransaction.COMMIT;
      Integer integer4 = RawTransaction.LOCK_ESCALATE;
      Integer integer5 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("BLOB", defaultDBTable0, dBDataType0, integer4, integer5);
      SQLUtil.renderColumn(defaultDBColumn0);
      Integer integer6 = new Integer((-1914420709));
      Integer integer7 = RawTransaction.COMMIT;
      Integer.compare((-337541355), 991);
      Integer integer8 = RawTransaction.ABORT;
      Integer.getInteger("BLOB D(3,2) NULL", integer6);
      VersionNumber.valueOf("6&8+yRm");
      GenericLanguageConnectionFactory genericLanguageConnectionFactory0 = new GenericLanguageConnectionFactory();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      assertEquals(1003, simpleResultSet0.getType());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      SQLUtil.normalize("** *****", true);
      GenericStorablePreparedStatement genericStorablePreparedStatement0 = null;
      try {
        genericStorablePreparedStatement0 = new GenericStorablePreparedStatement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.GenericPreparedStatement", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("I>9f=_Y;:\"EE");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType.getInstance(623, "BLOB");
      Integer integer0 = RawTransaction.COMMIT;
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      DBDataType dBDataType0 = DBDataType.getInstance((-1151), "D");
      Integer integer2 = RawTransaction.COMMIT;
      Integer integer3 = RawTransaction.COMMIT;
      Integer integer4 = RawTransaction.LOCK_ESCALATE;
      Integer integer5 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("BLOB", defaultDBTable0, dBDataType0, integer4, integer5);
      SQLUtil.renderColumn(defaultDBColumn0);
      GenericLanguageConnectionFactory genericLanguageConnectionFactory0 = new GenericLanguageConnectionFactory();
      FBManagedConnection fBManagedConnection0 = null;
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection((FBManagedConnection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("I>9f=_Y;:\"EE");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(30000, "L}OB");
      Integer integer0 = RawTransaction.COMMIT;
      Integer integer1 = RawTransaction.COMMIT;
      Integer integer2 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer3 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer4 = RawTransaction.LOCK_ESCALATE;
      Integer integer5 = new Integer(30000);
      Integer.sum(30000, 30000);
      Integer.getInteger("I>9f=_Y;:\"EE");
      Integer.getInteger("I>9f=_Y;:\"EE", 60000);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("f @ Ph,<\"e|#ABAV8!", (DBTable) null, dBDataType0, integer1);
      defaultDBColumn0.isUnique();
      SQLUtil.renderColumn(defaultDBColumn0);
      Integer integer6 = new Integer((-773));
      Integer.compare(30000, (-773));
      Integer integer7 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer8 = RawTransaction.ABORT;
      Integer.getInteger("f @ Ph,<\"e|#ABAV8!", (Integer) null);
      Integer integer9 = RawTransaction.ABORT;
      Integer integer10 = RawTransaction.LOCK_ESCALATE;
      Integer.remainderUnsigned(60000, 22);
      Integer.getInteger(" on ", integer10);
      Integer integer11 = RawTransaction.LOCK_ESCALATE;
      Integer.getInteger(" jlZd[", 22);
      Integer.getInteger("I>9f=_Y;:\"EE");
      Csv csv0 = Csv.getInstance();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet(csv0);
      try { 
        simpleResultSet0.getAsciiStream("I>9f=_Y;:\"EE");
        fail("Expecting exception: JdbcSQLException");
      
      } catch(JdbcSQLException e) {
         //
         // Feature not supported: null [50100-136]
         //
         verifyException("org.h2.message.DbException", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("KeYP", (DBTable) null, 810, "KeYP");
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("KEYP", string0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Predicate predicate0 = new Predicate();
      Integer integer0 = new Integer((byte) (-125));
      FBConnectionProperties fBConnectionProperties0 = new FBConnectionProperties();
      fBConnectionProperties0.setBlobBufferSize(2);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setExecutionPlan("defaultIsolation");
      isc_stmt_handle_impl0.getRsr_rdb();
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      DBSchema dBSchema0 = new DBSchema("klatvA>!rjfL76{X");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("org.apache.derby.impl.sql.compile.CreateSchemaNode", dBSchema0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("klatvA>!rjfL76{X", defaultDBTable0, (-1629), "klatvA>!rjfL76{X");
      defaultDBColumn0.getForeignKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.6082873972465446
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Random.setNextRandom(90);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "xsL$M+s\"A";
      stringArray0[1] = "xsL$M+s\"A";
      stringArray0[2] = "RDB$LOG_FILES";
      stringArray0[3] = "xsL$M+s\"A";
      stringArray0[4] = "xsL$M+s\"A";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("xsL$M+s\"A", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (xsL$M+s\"A, xsL$M+s\"A, RDB$LOG_FILES, xsL$M+s\"A, xsL$M+s\"A) REFERENCES null(xsL$M+s\"A, xsL$M+s\"A, RDB$LOG_FILES, xsL$M+s\"A, xsL$M+s\"A)", string0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      SQLUtil.isProcedureCall("s8bNYp'}$.s");
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      int int0 = (-790392254);
      long long0 = 0L;
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      delayQueue0.poll((long) (-790392254), timeUnit0);
      int int1 = (-2);
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = null;
      try {
        scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor((-2), (RejectedExecutionHandler) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ThreadPoolExecutor", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.440832331432847
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("like");
      String string0 = ";Z|8QB9,6)^6A]Foh";
      SQLUtil.isProcedureCall(";Z|8QB9,6)^6A]Foh");
      SQLUtil sQLUtil0 = new SQLUtil();
      SQLUtil.isQuery("like");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        defaultDBTable0.getUniqueConstraint(";Z|8QB9,6)^6A]Foh");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("x[qV\rkuu8hfS");
      tableContainer0.getComponents();
      SQLUtil.typeAndName(tableContainer0);
      tableContainer0.getSchema();
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.getContextManager();
      SlaveDatabase slaveDatabase0 = new SlaveDatabase();
      ConstantActionActivation constantActionActivation1 = new ConstantActionActivation();
      constantActionActivation1.getLanguageConnectionContext();
      TypeCompilerFactoryImpl typeCompilerFactoryImpl0 = new TypeCompilerFactoryImpl();
      CompilerContextImpl compilerContextImpl0 = null;
      try {
        compilerContextImpl0 = new CompilerContextImpl((ContextManager) null, (LanguageConnectionContext) null, typeCompilerFactoryImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.iapi.services.context.ContextImpl", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Predicate predicate0 = new Predicate();
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer2 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer3 = new Integer(2);
      Integer.sum((-1090), (-1090));
      Integer.getInteger("f @ Ph,<\"e|#ABAV8!");
      Integer integer4 = RawTransaction.ABORT;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(":e(6\"N{$Q7_E`_[L6");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(":e(6\"N{$Q7_E`_[L6", defaultDBTable0, (DBDataType) null, (Integer) 0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn(defaultDBColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      String string0 = "altep table";
      SQLUtil.isDDL("altep table");
      // Undeclared exception!
      try { 
        ContextService.getFactory();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         //
         verifyException("org.apache.derby.iapi.services.context.ContextService", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Boolean boolean0 = new Boolean(false);
      Boolean boolean1 = new Boolean("select int_");
      SQLUtil.isDML("select int_");
      ThreadPoolExecutor.CallerRunsPolicy threadPoolExecutor_CallerRunsPolicy0 = new ThreadPoolExecutor.CallerRunsPolicy();
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      Qualifier[][] qualifierArray0 = new Qualifier[4][5];
      Qualifier[] qualifierArray1 = new Qualifier[6];
      ConstantActionActivation constantActionActivation1 = new ConstantActionActivation();
      GenericQualifier genericQualifier0 = new GenericQualifier((-2), (-2), (GeneratedMethod) null, constantActionActivation1, false, false, false, (-2223));
      qualifierArray1[0] = (Qualifier) genericQualifier0;
      GenericScanQualifier genericScanQualifier0 = new GenericScanQualifier();
      qualifierArray1[1] = (Qualifier) genericScanQualifier0;
      UTFQualifier uTFQualifier0 = new UTFQualifier(2746, (String) null);
      qualifierArray1[2] = (Qualifier) uTFQualifier0;
      GenericQualifier genericQualifier1 = new GenericQualifier((-2223), 2746, (GeneratedMethod) null, constantActionActivation0, true, true, false, 42);
      qualifierArray1[3] = (Qualifier) genericQualifier1;
      ReflectClassesJava2 reflectClassesJava2_0 = new ReflectClassesJava2();
      Class<String> class0 = String.class;
      ReflectGeneratedClass reflectGeneratedClass0 = new ReflectGeneratedClass(reflectClassesJava2_0, class0, class0);
      try { 
        reflectGeneratedClass0.getMethod("O+{BY49#^QT=( Lr");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Method O+{BY49#^QT=( Lr() does not exist in generated class java.lang.String.
         //
         verifyException("org.apache.derby.iapi.error.StandardException", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "alter materialized viewu_ggb";
      stringArray0[1] = "alter materialized viewu_ggb";
      stringArray0[2] = "X3*LOZ86V#2o|";
      stringArray0[3] = "alter materialized viewu_ggb";
      stringArray0[4] = "alter materialized viewu_ggb";
      stringArray0[5] = "alter materialized viewu_ggb";
      stringArray0[6] = "alter materialized viewu_ggb";
      stringArray0[7] = "alter materialized viewu_ggb";
      stringArray0[8] = "inner";
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("alter materialized viewu_ggb", stringArray0, "insert", "'", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      String string0 = ".";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(".");
      String string1 = "XSCH4.S";
      String string2 = "NCLOB";
      String string3 = "org.apache.derby.iapi.util.ReuseFactory";
      String[] stringArray0 = new String[8];
      stringArray0[2] = "NCLOB";
      stringArray0[3] = "NCLOB";
      stringArray0[4] = "XSCH4.S";
      stringArray0[5] = stringArray0[1];
      stringArray0[7] = "NCLOB";
      stringArray0[7] = ".";
      String string4 = "u+|0( &#eS39s\\'W";
      SQLUtil.join("NCLOB", "org.apache.derby.iapi.util.ReuseFactory", stringArray0, "NCLOB", "u+|0( &#eS39s'W", stringArray0);
      BasicUUID basicUUID0 = new BasicUUID("NCLOB");
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      GenericLanguageConnectionFactory genericLanguageConnectionFactory0 = new GenericLanguageConnectionFactory();
      int int0 = 1828;
      int int1 = (-3531);
      int int2 = 61;
      long long0 = 1L;
      long long1 = 1000000000L;
      int int3 = (-1053);
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      doReturn((FBConnectionRequestInfo) null).when(fBManagedConnection0).getConnectionRequestInfo();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection(fBManagedConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "3/f@lDK[U~DkX<";
      stringArray0[1] = "3/f@lDK[U~DkX<";
      stringArray0[2] = "3/f@lDK[U~DkX<";
      stringArray0[3] = "3/f@lDK[U~DkX<";
      stringArray0[4] = "3/f@lDK[U~DkX<";
      stringArray0[5] = "3/f@lDK[U~DkX<";
      stringArray0[6] = "3/f@lDK[U~DkX<";
      stringArray0[7] = "3/f@lDK[U~DkX<";
      String string0 = SQLUtil.innerJoin("3/f@lDK[U~DkX<", stringArray0, "1Nyv7gZfc!fyEqO?OE", "3/f@lDK[U~DkX<", stringArray0);
      assertEquals("1Nyv7gZfc!fyEqO?OE as 3/f@lDK[U~DkX< on 3/f@lDK[U~DkX<.3/f@lDK[U~DkX< = 3/f@lDK[U~DkX<.3/f@lDK[U~DkX< and 3/f@lDK[U~DkX<.3/f@lDK[U~DkX< = 3/f@lDK[U~DkX<.3/f@lDK[U~DkX< and 3/f@lDK[U~DkX<.3/f@lDK[U~DkX< = 3/f@lDK[U~DkX<.3/f@lDK[U~DkX< and 3/f@lDK[U~DkX<.3/f@lDK[U~DkX< = 3/f@lDK[U~DkX<.3/f@lDK[U~DkX< and 3/f@lDK[U~DkX<.3/f@lDK[U~DkX< = 3/f@lDK[U~DkX<.3/f@lDK[U~DkX< and 3/f@lDK[U~DkX<.3/f@lDK[U~DkX< = 3/f@lDK[U~DkX<.3/f@lDK[U~DkX< and 3/f@lDK[U~DkX<.3/f@lDK[U~DkX< = 3/f@lDK[U~DkX<.3/f@lDK[U~DkX< and 3/f@lDK[U~DkX<.3/f@lDK[U~DkX< = 3/f@lDK[U~DkX<.3/f@lDK[U~DkX<", string0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("setValue");
      mockPrintWriter0.append('|');
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      mockPrintWriter0.print((-0.49962178F));
      System.setCurrentTimeMillis(0L);
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable((DBTable) null, false, nameSpec0, mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }
}
