/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 01:58:44 GMT 2019
 */

package com.lts.application.international;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.application.ApplicationException;
import com.lts.application.international.MessageFormatter;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PrintWriter;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.util.Collection;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.PropertyResourceBundle;
import java.util.ResourceBundle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MessageFormatter_ESTest extends MessageFormatter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object[] objectArray0 = new Object[10];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      objectArray0[3] = object3;
      Object object4 = new Object();
      objectArray0[4] = object4;
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = "EB.-$H)j=}";
      ResourceBundle resourceBundle0 = null;
      messageFormatter0.addBundle((ResourceBundle) null);
      ApplicationException applicationException0 = new ApplicationException((Throwable) null, "java.class", (Object) null, object1, object3);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) applicationException0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.948720592834763
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      linkedList2.poll();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      linkedList4.poll();
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      linkedList1.add("0");
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      ClassLoader classLoader1 = classLoader0.getParent();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      StringReader stringReader0 = new StringReader("0");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.addBundle(propertyResourceBundle0);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) classLoader0;
      objectArray0[1] = (Object) null;
      objectArray0[8] = (Object) linkedList5;
      objectArray0[3] = (Object) linkedList5;
      objectArray0[4] = (Object) classLoader1;
      Object object0 = new Object();
      objectArray0[5] = object0;
      objectArray0[6] = (Object) classLoader0;
      objectArray0[7] = (Object) null;
      objectArray0[5] = (Object) "\"`yINBt^Yb4";
      messageFormatter0.formatMessage("0", objectArray0);
      // Undeclared exception!
      try { 
        messageFormatter0.addResourceBundles();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<MessageFormatter.LoadBundleError> linkedList0 = new LinkedList<MessageFormatter.LoadBundleError>();
      ApplicationException applicationException0 = messageFormatter0.createLoadException(linkedList0);
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("resources.messages.standard", applicationException0);
      linkedList0.add(messageFormatter_LoadBundleError0);
      ApplicationException applicationException1 = new ApplicationException(applicationException0, "resources.messages.standard");
      messageFormatter0.createLoadException(linkedList0);
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) messageFormatter_LoadBundleError0;
      objectArray0[2] = (Object) applicationException1;
      objectArray0[3] = (Object) applicationException1;
      objectArray0[4] = (Object) null;
      objectArray0[5] = (Object) applicationException1;
      objectArray0[6] = (Object) applicationException1;
      try { 
        messageFormatter0.formatMessage((String) null, objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.211128820965081
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)37;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      messageFormatter0.createLoadException(linkedList0);
      messageFormatter0.addBundle((ResourceBundle) null);
      MessageFormatter messageFormatter1 = new MessageFormatter();
      MessageFormatter messageFormatter2 = new MessageFormatter();
      messageFormatter2.addBundle((ResourceBundle) null);
      MessageFormatter messageFormatter3 = new MessageFormatter();
      messageFormatter3.addBundle((ResourceBundle) null);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((String) null, (Object[]) messageFormatter1.DEFAULT_BUNDLE_PATH);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<SequenceInputStream> enumeration1 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      sequenceInputStream0.available();
      sequenceInputStream0.markSupported();
      Integer integer0 = new Integer(0);
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(sequenceInputStream1);
      Enumeration<InputStream> enumeration2 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration2).hasMoreElements();
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(enumeration2);
      sequenceInputStream2.read();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle(propertyResourceBundle0);
      try { 
        messageFormatter0.formatMessage("\"`yINBt^Yb4", objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<PropertyResourceBundle> linkedList0 = new LinkedList<PropertyResourceBundle>();
      LinkedList<PropertyResourceBundle> linkedList1 = new LinkedList<PropertyResourceBundle>(linkedList0);
      linkedList1.addFirst((PropertyResourceBundle) null);
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException(linkedList1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "Z+t])==-6@]NFqfU";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Z+t])==-6@]NFqfU");
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)37;
      byteArray0[0] = (byte)37;
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      String string1 = "";
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = object2;
      objectArray0[1] = (Object) fileSystemHandling0;
      objectArray0[2] = object1;
      Object object3 = new Object();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("Z+t])==-6@]NFqfU", objectArray0[1], (Object) "Z+t])==-6@]NFqfU");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Object[] objectArray0 = new Object[10];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      objectArray0[3] = object3;
      Object object4 = new Object();
      objectArray0[4] = object4;
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = "EB.-$H)j=}";
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      messageFormatter0.createLoadException(linkedList0);
      ResourceBundle resourceBundle0 = null;
      messageFormatter0.addBundle((ResourceBundle) null);
      Object object8 = new Object();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("X1[OpM'}gE5<Zc", object8, object3, object4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<SequenceInputStream> enumeration1 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-94);
      byteArray0[1] = (byte) (-27);
      byteArray0[2] = (byte) (-51);
      byteArray0[3] = (byte)59;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte)70;
      byteArray0[6] = (byte) (-101);
      sequenceInputStream1.read(byteArray0, (int) (byte)59, 1351);
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(sequenceInputStream1);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("\"`yINBt^Yb4");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object[] objectArray0 = new Object[10];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      objectArray0[3] = object3;
      Object object4 = new Object();
      objectArray0[4] = object4;
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      messageFormatter0.addBundle((ResourceBundle) null);
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage("EB.-$H)j=}", objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = messageFormatter0.listToString((List<String>) null);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      Object object0 = new Object();
      StringReader stringReader0 = new StringReader("2_,l<YD@R_oT`");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object object1 = new Object();
      String string0 = messageFormatter0.formatMessage("2_,l<YD@R_oT`", (Object[]) null, (ResourceBundle) propertyResourceBundle0);
      assertEquals("", string0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = new Integer((-2070787801));
      Integer integer1 = new Integer((-1146));
      Integer integer2 = new Integer((-1));
      Integer integer3 = new Integer((-2070787801));
      Integer integer4 = new Integer((-1146));
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad((String) null, "hi there");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<List<String>> linkedList0 = new LinkedList<List<String>>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) list0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<String> list2 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) list1, locale_FilteringMode0);
      List<String> list3 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) list2, locale_FilteringMode0);
      linkedList0.add(list3);
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException(linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.ArrayList cannot be cast to com.lts.application.international.MessageFormatter$LoadBundleError
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException(list0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to com.lts.application.international.MessageFormatter$LoadBundleError
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StringReader stringReader0 = new StringReader("resources.messages.standard");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.formatMessage("w@)[", (Object[]) null, (ResourceBundle) propertyResourceBundle0);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) "w@)[";
      Object object0 = new Object();
      objectArray0[2] = object0;
      objectArray0[3] = (Object) propertyResourceBundle0;
      objectArray0[4] = (Object) null;
      Object object1 = new Object();
      objectArray0[5] = object1;
      try { 
        messageFormatter0.formatMessage("2_,l<YD@R_oT`", objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      List list0 = MessageFormatter.buildList((Object[]) null);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Object object0 = new Object();
      List list0 = MessageFormatter.buildList((Object[]) null);
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[12];
      byteArray0[0] = (byte)37;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = new LinkedList<String>();
      String string0 = messageFormatter0.listToString(list0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(3325);
      linkedList0.add(integer0);
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List) linkedList0, (List) linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to java.lang.String
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = object1;
      objectArray0[1] = object0;
      objectArray0[2] = object5;
      objectArray0[3] = object3;
      objectArray0[4] = object5;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List list0 = messageFormatter0.loadCriticalBundles();
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      MockThrowable.getDefaultStackTrace();
      MockThrowable.getDefaultStackTrace();
      MockThrowable mockThrowable1 = new MockThrowable();
      mockThrowable1.printStackTrace();
      MockThrowable mockThrowable2 = new MockThrowable(">");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(">");
      MockThrowable.replacement_printStackTrace((Throwable) mockThrowable0, (PrintWriter) mockPrintWriter0);
      MockThrowable mockThrowable3 = new MockThrowable(">");
      MockThrowable mockThrowable4 = new MockThrowable(mockThrowable2);
      MockThrowable mockThrowable5 = new MockThrowable("xtxj#u5pFz>GA{<", mockThrowable2);
      MockThrowable.replacement_printStackTrace((Throwable) mockThrowable2, (PrintWriter) mockPrintWriter0);
      mockThrowable5.getSuppressed();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("u5C_O");
      mockThrowable0.getSuppressed();
      MockThrowable.replacement_printStackTrace((Throwable) mockThrowable5, (PrintWriter) mockPrintWriter1);
      MockThrowable.getDefaultStackTrace();
      mockThrowable2.addSuppressed(mockThrowable1);
      MockThrowable mockThrowable6 = new MockThrowable("xtxj#u5pFz>GA{<");
      MockThrowable mockThrowable7 = new MockThrowable(mockThrowable6);
      MockThrowable mockThrowable8 = new MockThrowable("com.lts.application.errors.Creati)gTe|pdir", (Throwable) null);
      MockThrowable mockThrowable9 = new MockThrowable(">");
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("}J{\"[*", object3, (Object) ", ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Integer integer0 = new Integer(14);
      Integer integer1 = new Integer(14);
      Integer integer2 = new Integer((-1));
      Integer integer3 = new Integer(14);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("hi there", (Object) integer0, (Object) "hi there");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.6999267696231979
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false, false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      Enumeration<InputStream> enumeration2 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration2).hasMoreElements();
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(enumeration2);
      sequenceInputStream1.close();
      sequenceInputStream0.markSupported();
      Enumeration<InputStream> enumeration3 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration3).hasMoreElements();
      SequenceInputStream sequenceInputStream3 = new SequenceInputStream(enumeration3);
      SequenceInputStream sequenceInputStream4 = new SequenceInputStream(sequenceInputStream2, sequenceInputStream3);
      SequenceInputStream sequenceInputStream5 = new SequenceInputStream(sequenceInputStream1, sequenceInputStream1);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)110;
      byteArray0[1] = (byte) (-9);
      sequenceInputStream3.read(byteArray0, (int) (byte) (-9), 3258);
      sequenceInputStream1.available();
      sequenceInputStream5.read();
      sequenceInputStream1.mark((-1));
      Enumeration<SequenceInputStream> enumeration4 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration4).hasMoreElements();
      SequenceInputStream sequenceInputStream6 = new SequenceInputStream(enumeration4);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream7 = new SequenceInputStream(sequenceInputStream3, sequenceInputStream6);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      SequenceInputStream sequenceInputStream8 = new SequenceInputStream(pushbackInputStream0, sequenceInputStream1);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      linkedList0.add("I%i77a/{PzmRSMN}+$:");
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      Locale locale0 = Locale.forLanguageTag("o:1is9sT=");
      Locale locale1 = Locale.US;
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle(list0, list0, locale0, (ClassLoader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StringReader stringReader0 = new StringReader("resources.messages.standard");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      stringReader0.ready();
      propertyResourceBundle0.getBaseBundleName();
      stringReader0.read();
      String string0 = messageFormatter0.formatMessage("]9jc%", (Object[]) messageFormatter0.DEFAULT_BUNDLE_PATH, (ResourceBundle) propertyResourceBundle0);
      assertNull(string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) "";
      Object object0 = new Object();
      objectArray0[2] = object0;
      objectArray0[3] = (Object) "";
      objectArray0[4] = (Object) "";
      objectArray0[5] = (Object) "";
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage("", objectArray0, (ResourceBundle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      MockThrowable mockThrowable1 = new MockThrowable();
      mockThrowable0.printStackTrace();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[6];
      StackTraceElement stackTraceElement0 = new StackTraceElement("x:xj#uopFKLA[<", "x:xj#uopFKLA[<", "8t8A(v}[", (-2086126969));
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("x:xj#uopFKLA[<", "8t8A(v}[", "x:xj#uopFKLA[<", (-2086126969));
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("x:xj#uopFKLA[<", "x:xj#uopFKLA[<", ".", 457);
      stackTraceElementArray0[2] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("CH", "x:xj#uopFKLA[<", "com.lts.io.IOUtilities", (-2113396603));
      stackTraceElementArray0[3] = stackTraceElement0;
      StackTraceElement stackTraceElement4 = new StackTraceElement("8t8A(v}[", ".", ",X", (-2086126969));
      stackTraceElementArray0[4] = stackTraceElement4;
      StackTraceElement stackTraceElement5 = new StackTraceElement("w", "8t8A(v}[", "x:xj#uopFKLA[<", (-2113396603));
      stackTraceElementArray0[5] = stackTraceElement5;
      mockThrowable0.setStackTrace(stackTraceElementArray0);
      ClassLoader.getSystemClassLoader();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      List<String> list1 = ResourceBundle.Control.FORMAT_CLASS;
      Locale locale0 = Locale.FRANCE;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      try { 
        messageFormatter0.getMessage("Yx]gLw&o8e!r5.z", (Object[]) stackTraceElementArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Integer integer0 = new Integer(14);
      Integer integer1 = new Integer(14);
      Integer integer2 = new Integer(14);
      Integer integer3 = new Integer((-1));
      Integer integer4 = new Integer(14);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("hi there", "fo{!UxQW[");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)37;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      String string0 = messageFormatter0.listToString(list0);
      assertEquals("java.class, java.properties", string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.1537308399247914
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      mockThrowable0.getLocalizedMessage();
      MockThrowable mockThrowable1 = new MockThrowable((String) null);
      mockThrowable1.getSuppressed();
      mockThrowable1.addSuppressed(mockThrowable0);
      MockThrowable.replacement_getStackTrace(mockThrowable0);
      MockThrowable mockThrowable2 = new MockThrowable();
      MockThrowable mockThrowable3 = new MockThrowable((String) null);
      MockThrowable mockThrowable4 = new MockThrowable((String) null);
      MockThrowable mockThrowable5 = new MockThrowable();
      ApplicationException applicationException0 = new ApplicationException(mockThrowable3, "g^}yF~]<K2v", mockThrowable2);
      MockThrowable mockThrowable6 = new MockThrowable("g^}yF~]<K2v");
      mockThrowable6.addSuppressed(mockThrowable1);
      mockThrowable0.getSuppressed();
      MockThrowable mockThrowable7 = new MockThrowable((String) null);
      mockThrowable7.getSuppressed();
      mockThrowable7.printStackTrace();
      mockThrowable7.addSuppressed(applicationException0);
      MockThrowable mockThrowable8 = new MockThrowable("");
      MockThrowable mockThrowable9 = new MockThrowable((String) null, mockThrowable2);
      mockThrowable5.getLocalizedMessage();
      MockThrowable mockThrowable10 = new MockThrowable("qdCDv{1$1u/", applicationException0);
      mockThrowable0.getStackTrace();
      mockThrowable4.getStackTrace();
      MockThrowable mockThrowable11 = new MockThrowable("#Z2?+%V!Kl\"r#htb20.", mockThrowable9);
      Throwable throwable0 = mockThrowable3.fillInStackTrace();
      mockThrowable0.addSuppressed(mockThrowable6);
      MockThrowable mockThrowable12 = new MockThrowable(mockThrowable5);
      MockThrowable mockThrowable13 = new MockThrowable();
      MockThrowable mockThrowable14 = new MockThrowable("#Z2?+%V!Kl\"r#htb20.");
      ApplicationException applicationException1 = new ApplicationException(throwable0, "<4pP>R_hV=hUIZ1x");
      MockThrowable mockThrowable15 = new MockThrowable(mockThrowable12);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      try { 
        messageFormatter0.initializeResourceBundle(list0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: java.class, java.properties
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      mockThrowable0.getLocalizedMessage();
      MockThrowable mockThrowable1 = new MockThrowable();
      mockThrowable1.getSuppressed();
      mockThrowable1.addSuppressed(mockThrowable0);
      MockThrowable mockThrowable2 = new MockThrowable();
      MockThrowable mockThrowable3 = new MockThrowable();
      MockThrowable mockThrowable4 = new MockThrowable();
      mockThrowable3.fillInStackTrace();
      ApplicationException applicationException0 = new ApplicationException(mockThrowable3, "g^}yF~]<K2v", mockThrowable2);
      MockThrowable mockThrowable5 = new MockThrowable();
      mockThrowable5.addSuppressed(mockThrowable1);
      mockThrowable0.getSuppressed();
      MockThrowable mockThrowable6 = new MockThrowable((String) null);
      mockThrowable6.getSuppressed();
      mockThrowable6.printStackTrace();
      mockThrowable6.addSuppressed(applicationException0);
      MockThrowable mockThrowable7 = new MockThrowable("_");
      mockThrowable7.getSuppressed();
      MockThrowable.getDefaultStackTrace();
      MockThrowable mockThrowable8 = new MockThrowable("g^}yF~]<K2v", mockThrowable2);
      mockThrowable2.getLocalizedMessage();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("4s");
      mockPrintWriter0.println("X%}{;++95$ydVjVuNi");
      MockThrowable.replacement_printStackTrace((Throwable) mockThrowable4, (PrintWriter) mockPrintWriter0);
      MockThrowable.getDefaultStackTrace();
      mockThrowable0.addSuppressed(mockThrowable7);
      MockThrowable mockThrowable9 = new MockThrowable(mockThrowable0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("g^}yF~]<K2v");
      mockPrintWriter1.println((String) null);
      MockThrowable.replacement_printStackTrace((Throwable) mockThrowable0, (PrintWriter) mockPrintWriter0);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Locale locale0 = Locale.US;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.listResources((String) null, classLoader0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      mockThrowable0.getLocalizedMessage();
      MockThrowable mockThrowable1 = new MockThrowable();
      mockThrowable1.getSuppressed();
      mockThrowable1.addSuppressed(mockThrowable0);
      MockThrowable mockThrowable2 = new MockThrowable();
      MockThrowable mockThrowable3 = new MockThrowable((String) null);
      MockThrowable mockThrowable4 = new MockThrowable((String) null);
      ApplicationException applicationException0 = new ApplicationException(mockThrowable3, "g^}yF~]<K2v", mockThrowable2);
      MockThrowable mockThrowable5 = new MockThrowable("g^}yF~]<K2v");
      mockThrowable5.addSuppressed(mockThrowable1);
      mockThrowable0.getSuppressed();
      MockThrowable mockThrowable6 = new MockThrowable((String) null);
      mockThrowable6.getSuppressed();
      mockThrowable1.printStackTrace();
      mockThrowable2.addSuppressed(mockThrowable1);
      MockThrowable mockThrowable7 = new MockThrowable((String) null);
      mockThrowable6.getSuppressed();
      MockThrowable.getDefaultStackTrace();
      MockThrowable mockThrowable8 = new MockThrowable("crititcal.com.lts.application.errors.properties.title", mockThrowable6);
      mockThrowable7.getLocalizedMessage();
      MockThrowable.getDefaultStackTrace();
      MockThrowable mockThrowable9 = new MockThrowable("4s", applicationException0);
      mockThrowable9.addSuppressed(mockThrowable6);
      MockThrowable mockThrowable10 = new MockThrowable(mockThrowable3);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("4s");
      mockPrintWriter0.println(", ");
      MockThrowable mockThrowable11 = new MockThrowable();
      MockThrowable mockThrowable12 = new MockThrowable("~,9Q@-8^hf`8KN");
      MockThrowable mockThrowable13 = new MockThrowable(mockThrowable9);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("oNE,]e!SIr,4)*Hu");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<SequenceInputStream> enumeration1 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      Enumeration<SequenceInputStream> enumeration2 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration2).hasMoreElements();
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(enumeration2);
      sequenceInputStream0.mark(15);
      sequenceInputStream2.close();
      sequenceInputStream0.markSupported();
      Enumeration<SequenceInputStream> enumeration3 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration3).hasMoreElements();
      SequenceInputStream sequenceInputStream3 = new SequenceInputStream(enumeration3);
      SequenceInputStream sequenceInputStream4 = new SequenceInputStream(sequenceInputStream1, sequenceInputStream0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)7;
      sequenceInputStream0.read(byteArray0, (int) (byte)7, 15);
      sequenceInputStream1.skip(15);
      SequenceInputStream sequenceInputStream5 = new SequenceInputStream(sequenceInputStream3, sequenceInputStream3);
      sequenceInputStream0.read();
      sequenceInputStream5.skip(0L);
      byte[] byteArray1 = new byte[1];
      sequenceInputStream5.markSupported();
      sequenceInputStream5.skip((-1879048189));
      sequenceInputStream5.skip((-1879048189));
      sequenceInputStream3.read(byteArray1, (-1431655763), 26);
      sequenceInputStream0.read(byteArray1);
      sequenceInputStream4.skip((-1));
      sequenceInputStream3.read();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("com.lts.application.international.MessageFormatter");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.initializeResourceBundle();
      MessageFormatter messageFormatter1 = new MessageFormatter();
      Throwable throwable0 = messageFormatter1.myLastException;
      ApplicationException applicationException0 = new ApplicationException((Throwable) null, "resources.messages.standard", (Object) null);
      messageFormatter0.myLastException = (Throwable) applicationException0;
      messageFormatter0.temp();
      applicationException0.getCause();
      messageFormatter0.getLastException();
      String string0 = "Pnim0u~0{W8i4BN";
      // Undeclared exception!
      try { 
        messageFormatter1.tryLoad("Pnim0u~0{W8i4BN", "resources.messages.standard");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.getLastException();
      PropertyResourceBundle propertyResourceBundle0 = null;
      try {
        propertyResourceBundle0 = new PropertyResourceBundle((Reader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      mockThrowable0.getLocalizedMessage();
      MockThrowable mockThrowable1 = new MockThrowable();
      mockThrowable1.getSuppressed();
      mockThrowable1.addSuppressed(mockThrowable0);
      MockThrowable mockThrowable2 = new MockThrowable();
      MockThrowable mockThrowable3 = new MockThrowable((String) null);
      MockThrowable mockThrowable4 = new MockThrowable((String) null);
      ApplicationException applicationException0 = new ApplicationException(mockThrowable3, "g^}yF~]<K2v", mockThrowable2);
      MockThrowable mockThrowable5 = new MockThrowable("g^}yF~]<K2v");
      mockThrowable5.addSuppressed(mockThrowable1);
      mockThrowable0.getSuppressed();
      mockThrowable0.getSuppressed();
      mockThrowable2.printStackTrace();
      mockThrowable5.addSuppressed(applicationException0);
      MockThrowable mockThrowable6 = new MockThrowable("_");
      mockThrowable6.getSuppressed();
      MockThrowable.getDefaultStackTrace();
      MockThrowable mockThrowable7 = new MockThrowable("g^}yF~]<K2v", mockThrowable2);
      mockThrowable0.getLocalizedMessage();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("4s");
      mockPrintWriter0.println("X%}{;++95$ydVjVuNi");
      MockThrowable.replacement_printStackTrace((Throwable) mockThrowable4, (PrintWriter) mockPrintWriter0);
      MockThrowable.getDefaultStackTrace();
      mockThrowable0.addSuppressed(mockThrowable6);
      MockThrowable mockThrowable8 = new MockThrowable(mockThrowable0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("g^}yF~]<K2v");
      mockPrintWriter1.println((String) null);
      MockThrowable.replacement_printStackTrace((Throwable) mockThrowable0, (PrintWriter) mockPrintWriter0);
      MockThrowable mockThrowable9 = new MockThrowable();
      MockThrowable mockThrowable10 = new MockThrowable("_");
      MockThrowable mockThrowable11 = new MockThrowable(mockThrowable3);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StackTraceElement[] stackTraceElementArray0 = MockThrowable.getDefaultStackTrace();
      MockThrowable.getDefaultStackTrace();
      MockThrowable mockThrowable0 = new MockThrowable();
      MockThrowable mockThrowable1 = new MockThrowable();
      mockThrowable1.getStackTrace();
      mockThrowable1.printStackTrace();
      StackTraceElement stackTraceElement0 = new StackTraceElement("fJ.96&hMJsSMG#&0cm!", "l0nGjs `RV@[", "l0nGjs `RV@[", (-2087831322));
      mockThrowable1.setOriginForDelegate(stackTraceElement0);
      StackTraceElement stackTraceElement1 = new StackTraceElement("?sq", "%S{xEUqDzM", "Y@ =wnb~w", (-2087831322));
      StackTraceElement stackTraceElement2 = new StackTraceElement("?sq", "Nwv>X(&krV|B", "criticaZ.quesSRon.saeFaiXed.ttl", 2420);
      StackTraceElement[] stackTraceElementArray1 = new StackTraceElement[3];
      stackTraceElementArray1[0] = stackTraceElement2;
      stackTraceElementArray1[1] = stackTraceElement1;
      stackTraceElementArray1[2] = stackTraceElement0;
      mockThrowable1.setStackTrace(stackTraceElementArray1);
      Object object0 = new Object();
      List list0 = MessageFormatter.buildList(stackTraceElementArray0);
      assertEquals(3, list0.size());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      MockThrowable.getDefaultStackTrace();
      MockThrowable mockThrowable1 = new MockThrowable();
      mockThrowable1.addSuppressed(mockThrowable0);
      MockThrowable mockThrowable2 = new MockThrowable();
      MockThrowable mockThrowable3 = new MockThrowable();
      mockThrowable3.addSuppressed(mockThrowable1);
      MockThrowable mockThrowable4 = new MockThrowable();
      mockThrowable3.printStackTrace();
      mockThrowable2.addSuppressed(mockThrowable1);
      mockThrowable0.getSuppressed();
      MockThrowable.getDefaultStackTrace();
      mockThrowable2.printStackTrace();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("!gh there");
      mockPrintWriter0.println("!gh there");
      MockThrowable.replacement_printStackTrace((Throwable) mockThrowable0, (PrintWriter) mockPrintWriter0);
      MockThrowable.getDefaultStackTrace();
      mockThrowable1.addSuppressed(mockThrowable2);
      MockThrowable mockThrowable5 = new MockThrowable(mockThrowable4);
      MockThrowable mockThrowable6 = new MockThrowable(mockThrowable3);
      MockThrowable mockThrowable7 = new MockThrowable("!gh there", mockThrowable4);
      MockThrowable mockThrowable8 = new MockThrowable("<~EF7}L;h%Lr_a?2");
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("!gh there", mockThrowable8);
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((String) null, (Object) messageFormatter_LoadBundleError0, (Object) mockThrowable3, (Object) list0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<SequenceInputStream> enumeration1 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      Enumeration<SequenceInputStream> enumeration2 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration2).hasMoreElements();
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(enumeration2);
      sequenceInputStream0.mark(15);
      sequenceInputStream2.close();
      sequenceInputStream0.markSupported();
      Enumeration<SequenceInputStream> enumeration3 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(enumeration3).hasMoreElements();
      SequenceInputStream sequenceInputStream3 = new SequenceInputStream(enumeration3);
      SequenceInputStream sequenceInputStream4 = new SequenceInputStream(sequenceInputStream1, sequenceInputStream0);
      sequenceInputStream1.skip(15);
      SequenceInputStream sequenceInputStream5 = new SequenceInputStream(sequenceInputStream3, sequenceInputStream3);
      sequenceInputStream5.skip(0L);
      byte[] byteArray0 = new byte[1];
      long long0 = new Integer(15);
      byteArray0[0] = (byte) (-30);
      sequenceInputStream1.read(byteArray0, (-1879048189), (int) (byte) (-30));
      sequenceInputStream5.read(byteArray0);
      sequenceInputStream5.skip(0L);
      sequenceInputStream1.read();
      sequenceInputStream2.read(byteArray0, (-1), (-2109135723));
      sequenceInputStream0.available();
      sequenceInputStream2.read(byteArray0, (int) (byte) (-30), (-1));
      sequenceInputStream2.available();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      MockThrowable mockThrowable0 = new MockThrowable("izZt~6s:l0K?i)IPr");
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) mockThrowable0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ApplicationException applicationException0 = new ApplicationException("showAndAskToContinue");
      PipedInputStream pipedInputStream0 = new PipedInputStream(3355);
      ApplicationException applicationException1 = new ApplicationException(applicationException0, "*(&e$BV[gg;<GlW!l", messageFormatter0, pipedInputStream0);
      ApplicationException applicationException2 = new ApplicationException("showAndAskToContinue", applicationException1);
      ApplicationException applicationException3 = new ApplicationException((Throwable) applicationException2, "}[!TXv]I", (Object[]) messageFormatter0.DEFAULT_BUNDLE_PATH);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) applicationException3);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      MockThrowable mockThrowable1 = new MockThrowable();
      mockThrowable0.printStackTrace();
      MockThrowable mockThrowable2 = new MockThrowable("b");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("b");
      MockThrowable.replacement_printStackTrace((Throwable) mockThrowable0, (PrintWriter) mockPrintWriter0);
      MockThrowable mockThrowable3 = new MockThrowable("b");
      MockThrowable mockThrowable4 = new MockThrowable(mockThrowable2);
      MockThrowable mockThrowable5 = new MockThrowable("x:xj#uopFKLA[<", mockThrowable2);
      MockThrowable.replacement_printStackTrace((Throwable) mockThrowable2, (PrintWriter) mockPrintWriter0);
      mockThrowable5.getSuppressed();
      mockThrowable5.printStackTrace((PrintWriter) mockPrintWriter0);
      mockThrowable5.printStackTrace();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("u5C_O");
      mockPrintWriter1.println((String) null);
      mockThrowable0.getSuppressed();
      char[] charArray0 = new char[9];
      charArray0[0] = 'P';
      charArray0[1] = 'H';
      charArray0[2] = ';';
      charArray0[3] = ')';
      charArray0[4] = ';';
      charArray0[5] = 'H';
      charArray0[6] = 'x';
      charArray0[7] = 'o';
      charArray0[8] = '&';
      mockPrintWriter1.println(charArray0);
      mockThrowable5.getLocalizedMessage();
      MockThrowable.replacement_printStackTrace((Throwable) mockThrowable5, (PrintWriter) mockPrintWriter1);
      MockThrowable.getDefaultStackTrace();
      mockThrowable2.addSuppressed(mockThrowable1);
      MockThrowable mockThrowable6 = new MockThrowable(mockThrowable2);
      ApplicationException applicationException0 = new ApplicationException(mockThrowable2, "*{Twv4B", mockThrowable5);
      MockThrowable mockThrowable7 = new MockThrowable(mockThrowable2);
      MockThrowable mockThrowable8 = new MockThrowable((String) null, mockThrowable7);
      MockThrowable mockThrowable9 = new MockThrowable();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List list0 = messageFormatter0.listResources("x:xj#uopFKLA[<", classLoader0);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<undefined>");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~P0Pgki");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte)66;
      byteArray0[4] = (byte)2;
      byteArray0[5] = (byte)3;
      byteArray0[6] = (byte)5;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[7] = (byte)17;
      byteArray0[8] = (byte)2;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("<undefined>");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<SequenceInputStream> enumeration1 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      Enumeration<SequenceInputStream> enumeration2 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration2).hasMoreElements();
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(enumeration2);
      sequenceInputStream0.mark(15);
      sequenceInputStream2.close();
      sequenceInputStream0.markSupported();
      Enumeration<SequenceInputStream> enumeration3 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(enumeration3).hasMoreElements();
      SequenceInputStream sequenceInputStream3 = new SequenceInputStream(enumeration3);
      SequenceInputStream sequenceInputStream4 = new SequenceInputStream(sequenceInputStream1, sequenceInputStream0);
      sequenceInputStream1.skip(15);
      SequenceInputStream sequenceInputStream5 = new SequenceInputStream(sequenceInputStream3, sequenceInputStream3);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-30);
      byteArray0[1] = (byte) (-30);
      byteArray0[2] = (byte) (-30);
      byteArray0[3] = (byte) (-30);
      byteArray0[4] = (byte) (-30);
      byteArray0[5] = (byte) (-30);
      byteArray0[6] = (byte) (-30);
      sequenceInputStream5.read(byteArray0);
      byte[] byteArray1 = new byte[1];
      sequenceInputStream5.skip((-1879048189));
      byteArray1[0] = (byte) (-30);
      sequenceInputStream1.read(byteArray1, (-1879048189), (int) (byte) (-30));
      sequenceInputStream5.read(byteArray1);
      sequenceInputStream5.skip(3L);
      sequenceInputStream1.read();
      sequenceInputStream2.read(byteArray1, (-1), (-2109135723));
      sequenceInputStream0.available();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("", "resources.messages.standard");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 475, 475);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(dataInputStream0, 475);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("O-2 FBm{*-8Y5", (Object) pushbackInputStream1, (Object) byteArrayInputStream0, (Object) pushbackInputStream1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<SequenceInputStream> enumeration1 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      Enumeration<SequenceInputStream> enumeration2 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      sequenceInputStream0.mark(15);
      sequenceInputStream1.close();
      sequenceInputStream0.markSupported();
      Enumeration<SequenceInputStream> enumeration3 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration3).hasMoreElements();
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(enumeration3);
      SequenceInputStream sequenceInputStream3 = new SequenceInputStream(sequenceInputStream1, sequenceInputStream0);
      SequenceInputStream sequenceInputStream4 = new SequenceInputStream(sequenceInputStream2, sequenceInputStream2);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)2;
      sequenceInputStream1.read(byteArray0, (-1879048189), (int) (byte)2);
      sequenceInputStream4.skip(0L);
      sequenceInputStream1.read();
      sequenceInputStream1.read(byteArray0, (-1), (-2109135723));
      sequenceInputStream2.available();
      sequenceInputStream0.available();
      sequenceInputStream0.read();
      sequenceInputStream3.mark(3258);
      sequenceInputStream1.read(byteArray0);
      sequenceInputStream2.read(byteArray0, 15, (-1431655763));
      LinkedList<String> linkedList0 = new LinkedList<String>();
      List<String> list0 = null;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List) null, (List) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<ApplicationException> linkedList0 = new LinkedList<ApplicationException>();
      try { 
        messageFormatter0.initializeResourceBundle((List) linkedList0, (List) linkedList0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: ; and resource path: 
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)37;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Integer[] integerArray0 = new Integer[9];
      Integer integer0 = new Integer((byte)37);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((-1789569704));
      integerArray0[1] = integer1;
      Integer integer2 = new Integer((-1789569704));
      integerArray0[2] = integer2;
      Integer integer3 = new Integer((-1789569704));
      integerArray0[3] = integer3;
      Integer integer4 = new Integer(2909);
      integerArray0[4] = integer4;
      Integer integer5 = new Integer((int) integerArray0[0]);
      integerArray0[5] = integer5;
      Integer integer6 = new Integer((-2080374781));
      Integer integer7 = new Integer((-1789569704));
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("lTS _:", "lTS _:");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.8742830984023096
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-117);
      byteArray0[1] = (byte)52;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      List<String> list0 = ResourceBundle.Control.FORMAT_CLASS;
      Locale locale0 = Locale.KOREA;
      ClassLoader classLoader1 = ClassLoader.getSystemClassLoader();
      try { 
        messageFormatter0.initializeResourceBundle(list0, list0, locale0, classLoader1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: java.class; and resource path: java.class
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }
}
