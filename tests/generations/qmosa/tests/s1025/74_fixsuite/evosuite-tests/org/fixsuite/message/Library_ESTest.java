/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 12 04:20:12 GMT 2020
 */

package org.fixsuite.message;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.fixsuite.message.Library;
import org.fixsuite.message.info.DictionaryInfo;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Library_ESTest extends Library_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.8953326659680909
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(" 0:dOV8&");
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-1);
      FileSystemHandling.createFolder(evoSuiteFile0);
      byteArray0[2] = (byte) (-3);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)126;
      byteArray0[5] = (byte)117;
      byteArray0[6] = (byte)1;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("l[*~['?{:~&ZdFr,6!%");
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-1);
      byteArray1[1] = (byte)1;
      byteArray1[2] = (byte)126;
      byteArray1[3] = (byte)117;
      byteArray1[4] = (byte) (-1);
      byteArray1[5] = (byte)126;
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray1);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      Library library0 = new Library();
      library0.loadFromDirectory("");
      boolean boolean0 = library0.loadFromDirectory("");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String string0 = "p[ \\^#[hCt g/]d~n$";
      System.setCurrentTimeMillis((-1062L));
      Library library0 = new Library();
      // Undeclared exception!
      try { 
        library0.loadFromDirectory((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Library library0 = new Library();
      library0.loadFromDirectory("p[ ^#[hCt g/]d~n$");
      library0.loadFromDirectory("p[ ^#[hCt g/]d~n$");
      library0.getDictionaries();
      library0.getDictionaries();
      library0.loadFromDirectory("org.fixsuite.message.parsers.fpl.MainParser");
      String string0 = "_zp(I";
      library0.loadFromDirectory("_zp(I");
      library0.loadFromDirectory("org.fixsuite.message.parsers.fpl.MainParser");
      String string1 = null;
      // Undeclared exception!
      try { 
        library0.getDictionary((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Library library0 = new Library();
      DictionaryInfo dictionaryInfo0 = library0.getDictionary("Fields.xml");
      assertNull(dictionaryInfo0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Library library0 = new Library();
      boolean boolean0 = library0.loadFromDirectory("");
      assertFalse(boolean0);
  }
}
