/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 14:59:21 GMT 2019
 */

package net.sourceforge.schemaspy.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.DatabaseMetaData;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.function.UnaryOperator;
import net.sourceforge.schemaspy.Config;
import net.sourceforge.schemaspy.model.ForeignKeyConstraint;
import net.sourceforge.schemaspy.model.Table;
import net.sourceforge.schemaspy.model.TableColumn;
import net.sourceforge.schemaspy.model.xml.TableColumnMeta;
import net.sourceforge.schemaspy.view.DefaultSqlFormatter;
import net.sourceforge.schemaspy.view.SqlFormatter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ForeignKeyConstraint_ESTest extends ForeignKeyConstraint_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "8`>gGRM`", (-20), 7);
      List<TableColumn> list0 = foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.isCascadeOnDelete();
      foreignKeyConstraint0.getParentColumns();
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertFalse(boolean0);
      
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals((-20), int0);
      
      ForeignKeyConstraint.toString(list0);
      foreignKeyConstraint0.getChildColumns();
      assertEquals(7, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@KESs");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@KESs");
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@KESs");
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@KESs");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "@KESs");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Fbpf$<=KeZ]");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling6 = new FileSystemHandling();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "@KESs", 20, 1660);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@KESs");
      FileSystemHandling fileSystemHandling7 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "@KESs");
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "Fbpf$<=KeZ]", 1660, 20);
      int int0 = foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
      assertEquals(38, int0);
      assertEquals(20, foreignKeyConstraint1.getDeleteRule());
      assertEquals(1660, foreignKeyConstraint1.getUpdateRule());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "RKESs");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-x");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "RKESs");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-x");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "vUz3rjYN]cl$");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "-x");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\" should contain a file named \"");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "\" should contain a file named \"", (-10), (-12));
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "r(c.\u0000P>[,e", (-10), (-12));
      foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
      SystemInUtil.addInputLine("I[n&@M1Wp=g");
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "-&^", (-1), 2);
      foreignKeyConstraint0.isNullOnDelete();
      System.setCurrentTimeMillis(1416);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Config config0 = Config.getInstance();
      Config config1 = Config.getInstance();
      config1.getMaxDetailedTables();
      Config config2 = Config.getInstance();
      Config config3 = new Config();
      config2.isLowQuality();
      Config config4 = Config.getInstance();
      Config config5 = Config.getInstance();
      config5.setSqlFormatter((SqlFormatter) null);
      config4.setOutputDir("UTF-8");
      config0.isLowQuality();
      config2.setSchema("UTF-8");
      Config config6 = Config.getInstance();
      config4.isLowQuality();
      config0.setRankDirBugEnabled(false);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "UTF-8";
      stringArray0[1] = "UTF-8";
      stringArray0[2] = "UTF-8";
      Config config7 = Config.getInstance();
      Config config8 = new Config();
      config6.getDb();
      Config config9 = Config.getInstance();
      config9.setEvaluateAllEnabled(true);
      config7.setHasRoutines(true);
      Config config10 = Config.getInstance();
      config0.getDbProperties();
      config10.isNumRowsEnabled();
      MockFile mockFile0 = new MockFile("UTF-8", "UTF-8");
      config7.isViewsEnabled();
      config10.setEvaluateAllEnabled(true);
      Config.getInstance();
      Config config11 = new Config(stringArray0);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "UTF-8", 300, 300);
      foreignKeyConstraint0.getChildTable();
      assertEquals(300, foreignKeyConstraint0.getUpdateRule());
      assertEquals(300, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = "~0MHe#kZS>UNVn!6";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "~0MHe#kZS>UNVn!6", 30, 30);
      long long0 = 1L;
      String string1 = null;
      foreignKeyConstraint0.isImplied();
      Locale.LanguageRange locale_LanguageRange0 = null;
      try {
        locale_LanguageRange0 = new Locale.LanguageRange((String) null, 30);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Locale$LanguageRange", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.8893115445695448
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "s$ucYN*t%$u<&VH0g", 43, 2);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      Config config0 = new Config();
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Null on delete", string0);
      
      String string1 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("N", string1);
      
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getDeleteRule();
      String string2 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals(43, foreignKeyConstraint0.getUpdateRule());
      assertEquals("Null on delete:\n Foreign key to parent set to NULL when parent deleted", string2);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.2248830687452414
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (-485), 1);
      String string0 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals((-485), foreignKeyConstraint0.getUpdateRule());
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.2407560846182575
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "DELETE", 1408, 3);
      assertEquals(1408, foreignKeyConstraint0.getUpdateRule());
      
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, (String) null, 0, 3);
      String string0 = foreignKeyConstraint1.getDeleteRuleDescription();
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@KESs");
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@KESs");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@KESs");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@KESs");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling6 = new FileSystemHandling();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 20, 646);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling7 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "@KESs");
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, (String) null, 646, 20);
      // Undeclared exception!
      try { 
        foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-x");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-x");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@KESs");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-x");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "vUz3rjYN]cl$");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-x");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\" should contain a file named \"");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "@KESs", (-12), 1668);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      int int0 = foreignKeyConstraint0.compareTo(foreignKeyConstraint0);
      assertEquals(1668, foreignKeyConstraint0.getDeleteRule());
      assertEquals(0, int0);
      assertEquals((-12), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "LEVEL", 1408, 0);
      Config config0 = Config.getInstance();
      config0.setOutputDir("Restrict delete:\n Parent cannot be deleted if children exist");
      config0.isImpliedConstraintsEnabled();
      config0.isLowQuality();
      Config config1 = new Config();
      Config config2 = new Config();
      config0.isLowQuality();
      Config config3 = Config.getInstance();
      config0.getDb();
      Config config4 = Config.getInstance();
      config0.setEvaluateAllEnabled(false);
      Config.getInstance();
      config4.getDbProperties();
      config0.isOneOfMultipleSchemas();
      Config config5 = new Config();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "UTF-8";
      stringArray0[2] = "UTF-8";
      stringArray0[1] = "UTF-8";
      Config config6 = new Config(stringArray0);
      config6.isNumRowsEnabled();
      config5.isViewsEnabled();
      config3.isLowQuality();
      Config.getInstance();
      Config config7 = new Config(stringArray0);
      config7.setEvaluateAllEnabled(true);
      Config config8 = new Config(stringArray0);
      Config config9 = new Config(stringArray0);
      foreignKeyConstraint0.getParentTable();
      assertEquals(1408, foreignKeyConstraint0.getUpdateRule());
      assertEquals(0, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = "~0MHe#kZS>UNVn!6";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "~0MHe#kZS>UNVn!6", 34, 34);
      foreignKeyConstraint0.addChildColumn((TableColumn) null);
      long long0 = 1L;
      Locale.LanguageRange locale_LanguageRange0 = null;
      try {
        locale_LanguageRange0 = new Locale.LanguageRange("~0MHe#kZS>UNVn!6", 34);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // weight=34.0
         //
         verifyException("java.util.Locale$LanguageRange", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "0", (-1197), 1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0");
      Config config0 = new Config();
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals((-1197), foreignKeyConstraint0.getUpdateRule());
      assertEquals("Restrict delete", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "DELETE", 1408, 3);
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals(1408, foreignKeyConstraint0.getUpdateRule());
      assertEquals("Restrict delete", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.2248830687452414
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Config config0 = Config.getInstance();
      config0.setHasRoutines(false);
      Config config1 = Config.getInstance();
      config1.getMaxDetailedTables();
      Config config2 = Config.getInstance();
      Config config3 = new Config();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Config config4 = new Config();
      Config config5 = new Config();
      config0.isLowQuality();
      config2.setSchema("UTF-8");
      Config config6 = new Config();
      config4.isLowQuality();
      config0.setRankDirBugEnabled(true);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "UTF-8";
      stringArray0[1] = "UTF-8";
      stringArray0[2] = "UTF-8";
      Config config7 = new Config(stringArray0);
      Config config8 = new Config();
      config6.getDb();
      Config config9 = new Config(stringArray0);
      config9.setEvaluateAllEnabled(true);
      config0.setSchema("");
      config0.getDbProperties();
      config0.isNumRowsEnabled();
      SystemInUtil.addInputLine("UTF-8");
      config7.isViewsEnabled();
      config0.setEvaluateAllEnabled(true);
      Config config10 = new Config(stringArray0);
      Config config11 = new Config(stringArray0);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "UTF-8", 14, 1494);
      foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals(14, foreignKeyConstraint0.getUpdateRule());
      assertEquals(1494, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.2248830687452414
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Config config0 = Config.getInstance();
      config0.setHasRoutines(false);
      Config config1 = Config.getInstance();
      config1.getMaxDetailedTables();
      Config config2 = Config.getInstance();
      Config config3 = new Config();
      config2.isLowQuality();
      Config config4 = new Config();
      Config config5 = new Config();
      config0.isLowQuality();
      config2.setSchema("UTF-8");
      Config config6 = new Config();
      config4.isLowQuality();
      config0.setRankDirBugEnabled(false);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "UTF-8";
      stringArray0[1] = "UTF-8";
      stringArray0[2] = "UTF-8";
      Config config7 = new Config(stringArray0);
      Config config8 = new Config();
      config6.getDb();
      Config config9 = new Config(stringArray0);
      config9.setEvaluateAllEnabled(true);
      config0.setSchema("");
      Config config10 = new Config();
      config0.getDbProperties();
      config10.isNumRowsEnabled();
      SystemInUtil.addInputLine("UTF-8");
      config7.isViewsEnabled();
      config10.setEvaluateAllEnabled(true);
      Config config11 = new Config(stringArray0);
      Config config12 = new Config(stringArray0);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "UTF-8", 14, 1494);
      foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals(14, foreignKeyConstraint0.getUpdateRule());
      assertEquals(1494, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "8`>gGRM`", 0, 0);
      boolean boolean0 = foreignKeyConstraint0.isReal();
      boolean boolean1 = foreignKeyConstraint0.isCascadeOnDelete();
      assertTrue(boolean1 == boolean0);
      
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.788458655589152
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "s$ucYN*t%$u<&VH0g", 48, (-3));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ")'EC4 tafDilV.");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      foreignKeyConstraint0.getDeleteRuleName();
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals(48, int0);
      
      foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals((-3), foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = 0;
      String string0 = null;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "DELETE", 1408, 0);
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "DELETE", 1408, 3);
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertTrue(boolean0);
      assertEquals(1408, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Config config0 = Config.getInstance();
      config0.setHighQuality(false);
      Config config1 = Config.getInstance();
      config0.isLowQuality();
      config1.setMeta("UTF-8");
      config0.getMaxDbThreads();
      config1.setEvaluateAllEnabled(true);
      config0.isNumRowsEnabled();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, (byte) (-7), 1);
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertTrue(boolean0);
      assertEquals((-7), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Config config0 = Config.getInstance();
      config0.setHasRoutines(false);
      Config config1 = Config.getInstance();
      config1.getMaxDetailedTables();
      config1.setHighQuality(false);
      Config config2 = Config.getInstance();
      Config config3 = new Config();
      config2.isLowQuality();
      Config config4 = new Config();
      Config config5 = new Config();
      config0.isLowQuality();
      config2.setSchema("UTF-8");
      Config config6 = Config.getInstance();
      config4.isLowQuality();
      config0.setRankDirBugEnabled(false);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "UTF-8";
      stringArray0[1] = "UTF-8";
      stringArray0[2] = "UTF-8";
      Config config7 = new Config(stringArray0);
      Config config8 = new Config();
      config6.getDb();
      Config config9 = new Config(stringArray0);
      config9.setEvaluateAllEnabled(true);
      config0.setSchema("");
      Config config10 = new Config();
      config0.getDbProperties();
      config10.isNumRowsEnabled();
      config7.isViewsEnabled();
      config10.setEvaluateAllEnabled(true);
      Config config11 = new Config(stringArray0);
      Config config12 = new Config(stringArray0);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "UTF-8", 14, (-69));
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertEquals((-69), foreignKeyConstraint0.getDeleteRule());
      assertEquals(14, foreignKeyConstraint0.getUpdateRule());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "DELETE", 1408, 0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      DefaultSqlFormatter defaultSqlFormatter0 = new DefaultSqlFormatter();
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(databaseMetaData0).getNumericFunctions();
      doReturn((String) null).when(databaseMetaData0).getSQLKeywords();
      doReturn((String) null).when(databaseMetaData0).getStringFunctions();
      doReturn((String) null).when(databaseMetaData0).getSystemFunctions();
      doReturn((String) null).when(databaseMetaData0).getTimeDateFunctions();
      defaultSqlFormatter0.getKeywords(databaseMetaData0);
      foreignKeyConstraint0.getDeleteRuleName();
      linkedList0.add((String) null);
      Locale.LanguageRange locale_LanguageRange0 = null;
      try {
        locale_LanguageRange0 = new Locale.LanguageRange("*=grg,8k`L<");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // range=*=grg,8k`l<
         //
         verifyException("java.util.Locale$LanguageRange", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "DELETE", 1408, 0);
      foreignKeyConstraint0.isNullOnDelete();
      Locale locale0 = Locale.KOREAN;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      linkedList0.add((Locale.LanguageRange) null);
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Collection<Locale> collection0 = null;
      Locale.LanguageRange locale_LanguageRange0 = null;
      try {
        locale_LanguageRange0 = new Locale.LanguageRange("Cascade on delete", (-1384.3045));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // weight=-1384.3045
         //
         verifyException("java.util.Locale$LanguageRange", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Config config0 = Config.getInstance();
      config0.setHasRoutines(false);
      Config config1 = Config.getInstance();
      config1.getMaxDetailedTables();
      Config config2 = Config.getInstance();
      Config config3 = new Config();
      config2.isLowQuality();
      Config config4 = Config.getInstance();
      Config config5 = new Config();
      config5.setSqlFormatter((SqlFormatter) null);
      config4.setOutputDir("UTF-8");
      config0.isLowQuality();
      config2.setSchema("UTF-8");
      Config config6 = Config.getInstance();
      config4.isLowQuality();
      config0.setRankDirBugEnabled(false);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "UTF-8";
      stringArray0[1] = "UTF-8";
      stringArray0[2] = "UTF-8";
      Config config7 = Config.getInstance();
      Config config8 = new Config();
      config6.getDb();
      Config config9 = new Config(stringArray0);
      config9.setEvaluateAllEnabled(true);
      Config config10 = new Config();
      config0.getDbProperties();
      config10.isNumRowsEnabled();
      config7.isViewsEnabled();
      config10.setEvaluateAllEnabled(true);
      Config config11 = new Config(stringArray0);
      Config config12 = new Config(stringArray0);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "UTF-8", 14, 1494);
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      assertEquals(1494, foreignKeyConstraint0.getDeleteRule());
      assertFalse(boolean0);
      assertEquals(14, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SystemInUtil.addInputLine("!IxU'Zo");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 0, (-2994));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      foreignKeyConstraint0.getDeleteRule();
      System.setCurrentTimeMillis((-2994));
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.6052468509647115
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "8`>gGRM`", 0, 0);
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("C", string0);
      
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string1 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Cascade on delete:\n Deletion of parent deletes child", string1);
      
      int int0 = foreignKeyConstraint0.getDeleteRule();
      assertEquals(0, foreignKeyConstraint0.getUpdateRule());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "s$ucYN*t%$u<&VH0g", 1, 1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      foreignKeyConstraint0.getDeleteRuleAlias();
      System.setCurrentTimeMillis(1);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.2407560846182575
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "DELETE", 1396, 3);
      assertEquals(1396, foreignKeyConstraint0.getUpdateRule());
      
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, (String) null, 0, 3);
      String string0 = foreignKeyConstraint1.getDeleteRuleAlias();
      assertEquals("R", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint(tableColumn1, tableColumn1, 3087, 3087);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "8`>gGRM`", 0, 0);
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      foreignKeyConstraint0.addParentColumn(tableColumn0);
      foreignKeyConstraint0.getChildColumns();
      Config.getInstance();
      List<TableColumn> list0 = foreignKeyConstraint0.getParentColumns();
      Config config0 = new Config();
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean0);
      
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      String string0 = ForeignKeyConstraint.toString(list0);
      assertEquals(0, foreignKeyConstraint0.getUpdateRule());
      assertNull(string0);
      assertEquals(0, foreignKeyConstraint0.getDeleteRule());
      assertFalse(foreignKeyConstraint0.isRestrictDelete());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (-487), (-332));
      foreignKeyConstraint0.getName();
      assertEquals((-332), foreignKeyConstraint0.getDeleteRule());
      assertEquals((-487), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "*", (-487), (-332));
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      foreignKeyConstraint0.getName();
      assertEquals((-487), foreignKeyConstraint0.getUpdateRule());
      assertEquals((-332), foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "-x");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-x");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@KESs");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-x");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "vUz3rjYN]cl$");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-x");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\" should contain a file named \"");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "@KESs", (-12), 1668);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "@KESs", 1668, (-12));
      // Undeclared exception!
      try { 
        foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      // Undeclared exception!
      try { 
        ForeignKeyConstraint.toString((List<TableColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = "";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 30, 30);
      foreignKeyConstraint0.addParentColumn((TableColumn) null);
      long long0 = 10L;
      String string1 = null;
      Locale.LanguageRange locale_LanguageRange0 = null;
      try {
        locale_LanguageRange0 = new Locale.LanguageRange((String) null, 30);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Locale$LanguageRange", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = "]";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "]", (-1247), 471);
      Config.getInstance();
      Locale locale0 = Locale.GERMAN;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      UnaryOperator.identity();
      locale0.getDisplayName(locale0);
      SystemInUtil.addInputLine("net.sourceforge.schemaspy.model.Database$CombinedMap");
      LinkedList<String> linkedList1 = new LinkedList<String>();
      LinkedList<String> linkedList2 = new LinkedList<String>();
      LinkedList<String> linkedList3 = new LinkedList<String>();
      linkedList3.parallelStream();
      locale0.getDisplayLanguage();
      foreignKeyConstraint0.isRestrictDelete();
      double double0 = 2632.0044964152;
      Locale.LanguageRange locale_LanguageRange0 = null;
      try {
        locale_LanguageRange0 = new Locale.LanguageRange("]", 2632.0044964152);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // weight=2632.0044964152
         //
         verifyException("java.util.Locale$LanguageRange", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.053882356878545
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      tableColumn1.unlinkParents();
      TableColumnMeta tableColumnMeta2 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta2).getComments();
      doReturn((String) null).when(tableColumnMeta2).getDefaultValue();
      doReturn(0).when(tableColumnMeta2).getDigits();
      doReturn((String) null).when(tableColumnMeta2).getId();
      doReturn((String) null).when(tableColumnMeta2).getName();
      doReturn(0).when(tableColumnMeta2).getSize();
      doReturn((String) null).when(tableColumnMeta2).getType();
      doReturn(false).when(tableColumnMeta2).isAutoUpdated();
      doReturn(false).when(tableColumnMeta2).isNullable();
      TableColumn tableColumn2 = new TableColumn((Table) null, tableColumnMeta2);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint(tableColumn1, tableColumn2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }
}
