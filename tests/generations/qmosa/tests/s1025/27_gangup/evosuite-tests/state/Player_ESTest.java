/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 14:09:31 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileNotFoundException;
import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.net.URISyntaxException;
import java.util.Enumeration;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player((-1805));
      player0.setZ((-2743.5F));
      player0.getZ();
      player0.pack();
      float float0 = player0.getZ();
      assertEquals((-2743.5F), float0, 0.01F);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0, 0);
      byte[] byteArray0 = new byte[9];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte) (-40);
      byteArray0[2] = (byte) (-85);
      byteArray0[3] = (byte) (-123);
      byteArray0[4] = (byte)80;
      byteArray0[5] = (byte)55;
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte) (-39);
      byteArray0[8] = (byte)0;
      player0.unpack(byteArray0);
      int int0 = player0.getStrength();
      assertEquals(0, int0);
      
      int int1 = player0.type();
      assertEquals(5, int1);
      
      Player player1 = new Player();
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertFalse(player1.isDead());
      assertFalse(boolean0);
      assertEquals(1, player1.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals(0L, player1.getTimeOfDeath());
      assertTrue(player1.isConnected());
      assertEquals(0, player1.getPictureId());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals("Player-1", player1.toString());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player((-3192), "|8z%i``nFgY6(wR6", 1209);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("|8z%i``nFgY6(wR6", true);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockFileOutputStream0);
      mockFileOutputStream0.release();
      mockFileOutputStream0.close();
      MockFileOutputStream mockFileOutputStream1 = new MockFileOutputStream("^etNoKh3/2F0, ");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      DataOutputStream dataOutputStream1 = new DataOutputStream(filterOutputStream0);
      DataOutputStream dataOutputStream2 = new DataOutputStream(mockFileOutputStream1);
      MockPrintStream mockPrintStream0 = new MockPrintStream("^etNoKh3/2F0, ");
      byte[] byteArray0 = new byte[2];
      mockPrintStream0.print("^etNoKh3/2F0, ");
      byteArray0[0] = (byte) (-36);
      mockFileOutputStream1.release();
      byteArray0[1] = (byte) (-36);
      mockPrintStream0.write(byteArray0);
      mockPrintStream0.println(0.0F);
      mockFileOutputStream1.getChannel();
      MockPrintStream mockPrintStream1 = new MockPrintStream("|8z%i``nFgY6(wR6");
      DataOutputStream dataOutputStream3 = new DataOutputStream(dataOutputStream2);
      DataOutputStream dataOutputStream4 = new DataOutputStream(filterOutputStream0);
      try { 
        player0.pack(dataOutputStream4);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.329898024063789
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(1154.0F);
      Player player1 = new Player((short)4919, "a$Y z:,t*~", "", (short)4919, (short)4919);
      player1.add(player0);
      player1.pack();
      player1.setJoinOK(player0, true);
      player1.add(player0);
      player1.setDead((-4125L));
      player1.isJoinOK(player0, true);
      player1.getY();
      player0.setDead(1L);
      player0.getName();
      player0.getTimeOfDeath();
      player1.setConnected(false);
      System.setCurrentTimeMillis(1392409281320L);
      player1.getName();
      player0.isConnected();
      player1.getZ();
      player1.isConnected();
      player1.isJoinOK(player0, false);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      player1.setDead((-4125L));
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)117;
      // Undeclared exception!
      try { 
        pipedInputStream0.read(byteArray0, (int) (byte)117, 1285);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1221L);
      Player player0 = new Player((-9643), "", "", (-9643), (-9643));
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player((-2284), "gui.ModuleBrowserDialog$ModuleFilter", "gui.ModuleBrowserDialog$ModuleFilter", (-2284));
      Party party0 = player0.gangBoss();
      party0.remove(player0);
      player0.setMoney((-2284));
      player0.add(party0);
      float float0 = player0.getMoney();
      assertEquals((-2284.0F), float0, 0.01F);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.1239058144637433
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(2727, "9q HW}!oG3fqd(+\">NV", "9q HW}!oG3fqd(+\">NV", 2072, (-509));
      Party party0 = new Party((short)4919);
      player0.boss = party0;
      player0.boss.next = party0;
      party0.next = (Party) player0;
      player0.prev = party0;
      player0.setZ(2727);
      player0.setMoney(0.0F);
      player0.getIP();
      player0.getY();
      player0.getX();
      party0.add(player0.boss);
      player0.setDead((long) (-509), true);
      player0.getName();
      player0.isDead();
      player0.setX((-639.0F));
      player0.getStrength();
      player0.getX();
      int int0 = player0.getStrength();
      assertEquals((-509L), player0.getTimeOfDeath());
      assertEquals((-509), int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.1341286000959614
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player((-823), "", "", (-823));
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.setJoinOK(player0, true);
      player0.isJoinOK(player0, true);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object[] objectArray0 = new Object[7];
      objectArray0[5] = (Object) "<u\"/E}u>mPyw";
      objectArray0[1] = objectArray0[0];
      objectArray0[3] = (Object) "";
      Object object4 = new Object();
      objectArray0[4] = object4;
      Object object5 = new Object();
      Object object6 = new Object();
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-823), 5);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party(982);
      player0.head = party0;
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 77;
      Player player0 = new Player(77, " .PS>d1'mv$E7Se=d", (String) null, 3290);
      player0.setMoney(3290);
      player0.setY(0.0F);
      player0.setZ(5897.8145F);
      player0.isConnected();
      player0.getMoney();
      System.setCurrentTimeMillis(545L);
      player0.getMoney();
      player0.isConnected();
      player0.type();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.6422165264472737
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player((-823), "qCT`y[.rJf#w0#YaI", "qCT`y[.rJf#w0#YaI", (-823), (-823));
      player0.setX((-823));
      player0.setX(0.0F);
      player0.setY((-823));
      FileSystemHandling.shouldAllThrowIOExceptions();
      Object object0 = new Object();
      Object object1 = new Object();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) "";
      objectArray0[1] = objectArray0[0];
      objectArray0[3] = (Object) "qCT`y[.rJf#w0#YaI";
      Object object2 = new Object();
      objectArray0[4] = object2;
      Object object3 = new Object();
      Object object4 = new Object();
      player0.getStrength();
      player0.gangStrength();
      player0.type();
      int int0 = player0.type();
      assertEquals((-823.0F), player0.getY(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ajnIO3`2?}RcM_j|p");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player((-277), (String) null, 5503);
      player0.getName();
      assertEquals(5503, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Player player0 = new Player();
      player0.setY((-2387.6646F));
      float float0 = player0.getY();
      assertEquals((-2387.6646F), float0, 0.01F);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player(4588, (String) null, (String) null, 26336);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.2615399186915353
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(1154.0F);
      Player player1 = new Player((short)4919, "a$Y z:,t*~", "", (short)4919, (short)4919);
      player1.add(player0);
      player1.pack();
      player1.setJoinOK(player0, true);
      player1.add(player0);
      player1.setDead((-4125L));
      player1.setY(0.1F);
      player1.isJoinOK(player0, true);
      player1.getY();
      player0.getName();
      player0.getTimeOfDeath();
      System.setCurrentTimeMillis(1392409281320L);
      player1.getName();
      player1.getZ();
      player1.isJoinOK(player0, true);
      player0.getY();
      player1.getTimeOfDeath();
      assertEquals((-4125L), player1.getTimeOfDeath());
      
      System.setCurrentTimeMillis((-4125L));
      Player player2 = new Player(1947, "*QtH>7b", 1524);
      player2.getName();
      assertEquals("0.0.0.0", player2.getIP());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(1699, "", "", (-32), 297);
      player0.getSubparty();
      player0.getName();
      player0.setDead(0L, false);
      Party party0 = new Party();
      player0.getPictureId();
      player0.getSubparty();
      player0.next = party0;
      player0.getPictureId();
      player0.setX((-32));
      player0.setY((-539.0F));
      int int0 = player0.getStrength();
      assertEquals((-32.0F), player0.getX(), 0.01F);
      assertEquals(297, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player(231);
      player0.setZ(0.1F);
      Player player2 = new Player((-605), "", "", (short)4919);
      player0.pack();
      assertEquals(0.1F, player0.getZ(), 0.01F);
      
      player2.getIP();
      assertTrue(player2.isConnected());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player((-2111), "iGbZwZW|iZ98W:&RG?", (String) null, (-4173), (-2111));
      PipedInputStream pipedInputStream0 = new PipedInputStream(3831);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      player0.unpack(dataInputStream0);
      int int0 = Packable.GAME_STATE;
      assertEquals(4, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player((-3192), "|8z%i``nFagY6(wR6", 1209);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("|8z%i``nFagY6(wR6");
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockFileOutputStream0);
      MockFileOutputStream mockFileOutputStream1 = new MockFileOutputStream("^etNoKh3/2F0, ");
      DataOutputStream dataOutputStream0 = new DataOutputStream(filterOutputStream0);
      DataOutputStream dataOutputStream1 = new DataOutputStream(mockFileOutputStream1);
      DataOutputStream dataOutputStream2 = new DataOutputStream(dataOutputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("ZAxz]b@");
      mockPrintStream0.println((-1249.816F));
      mockPrintStream0.append('5');
      DataOutputStream dataOutputStream3 = new DataOutputStream(mockPrintStream0);
      player0.pack(dataOutputStream0);
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.1271454652812123
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(1154.0F);
      Player player1 = new Player((short)4919, "a$Y z:,t*~", "a$Y z:,t*~", (short)4919, (short)4919);
      player1.add(player0);
      player1.pack();
      player0.setDead((long) (short)4919, true);
      player1.setJoinOK(player0, true);
      player1.add(player0);
      player1.setDead((-4125L));
      player1.setY(0.1F);
      player1.isJoinOK(player0, true);
      player1.getY();
      player1.setX(298.0F);
      Object object0 = new Object();
      Object object1 = new Object();
      player1.pack();
      System.setCurrentTimeMillis((-4125L));
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.1411461439556105
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player((-823), "", "", (-823));
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player1 = new Player((-823), "G#\"SBPgeiqx", "G#\"SBPgeiqx", 27);
      player0.setJoinOK(player1, true);
      player0.isJoinOK(player1, true);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      assertFalse(object6.equals((Object)object5));
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player(1025, "", (-823));
      Player player1 = new Player(1025);
      player0.setJoinOK(player1, false);
      player0.isJoinOK(player1, true);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      assertFalse(object6.equals((Object)object2));
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.031298644335524
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player((-823), "", "", (-823));
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object[] objectArray0 = new Object[7];
      objectArray0[5] = (Object) "";
      Player player1 = new Player((-823), "", "", (-823), (-823));
      player0.head = (Party) player1;
      objectArray0[1] = objectArray0[0];
      objectArray0[3] = (Object) "";
      Object object4 = new Object();
      objectArray0[4] = object4;
      Object object5 = new Object();
      Object object6 = new Object();
      int int0 = player0.gangStrength();
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals((-823), player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals((-822), int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.502808529414704
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = "";
      int int0 = 800;
      int int1 = 1719;
      Player player0 = new Player(2779, "", "", 800, 1719);
      Player player1 = new Player(800, "", (short)4919);
      player0.isJoinOK(player1, true);
      player0.setJoinOK(player1, true);
      Party party0 = player0.prev;
      player0.add((Party) null);
      player0.getSubparty();
      player1.toString();
      player0.getStrength();
      player0.isJoinOK(player1, true);
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-25);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      OutputStream outputStream0 = null;
      // Undeclared exception!
      try { 
        byteArrayOutputStream0.writeTo((OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayOutputStream", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 22786);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = "qCT`y[.rJf#w0#YaI";
      Player player0 = new Player(5);
      Player player1 = null;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(4, "state.Player", 1316);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0, 4919);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      assertFalse(player0.isDead());
      assertEquals(1316, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Player player0 = new Player((-2166), "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", 20060, 0);
      player0.type();
      player0.gangStrength();
      PipedInputStream pipedInputStream0 = new PipedInputStream(26144);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 26144);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.6401461330725327
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player();
      player0.getSubparty();
      player0.getName();
      player0.setDead(0L, false);
      player0.gangStrength();
      Party party0 = new Party();
      player0.prev = party0;
      player0.getPictureId();
      player0.getSubparty();
      player0.getPictureId();
      player0.setX(0);
      player0.setY((-539.0F));
      int int0 = player0.getStrength();
      assertEquals((-539.0F), player0.getY(), 0.01F);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player(231, "{Nnq]4ZX", "{Nnq]4ZX", (-550));
      float float0 = player0.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-550), player0.getPictureId());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(982, "", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", 982);
      player0.setDead(526L, false);
      player0.getTimeOfDeath();
      String string0 = "J-{&1gErt,`Kk5";
      String string1 = "`wX5P";
      String string2 = "gWjw|";
      System.setCurrentTimeMillis((-5461L));
      String string3 = "L-MGH,fnDODE91";
      try { 
        MockURI.URI("Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", "gWjw|", "J-{&1gErt,`Kk5", 935, "", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", "L-MGH,fnDODE91");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in scheme name at index 13: Player.unpack(): *** WARNING *** [IO] failed to unpack data: ://gWjw%7C@J-{&1gErt,`Kk5:935?Player.unpack():%20***%20WARNING%20***%20[IO]%20failed%20to%20unpack%20data:%20#L-MGH,fnDODE91
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player(2, "A$'c", (-1415));
      float float0 = player0.getY();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals((-1415), player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player((-3192), (String) null, (-3192));
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("|8z%i``nFagY6(wR6", false);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockFileOutputStream0);
      mockFileOutputStream0.release();
      mockFileOutputStream0.close();
      MockFileOutputStream mockFileOutputStream1 = new MockFileOutputStream("^etNoKh3/2F0, ", false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      DataOutputStream dataOutputStream1 = new DataOutputStream(filterOutputStream0);
      DataOutputStream dataOutputStream2 = new DataOutputStream(mockFileOutputStream1);
      MockPrintStream mockPrintStream0 = new MockPrintStream("^etNoKh3/2F0, ");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-36);
      mockFileOutputStream1.release();
      byteArray0[1] = (byte) (-36);
      mockPrintStream0.write(byteArray0);
      mockPrintStream0.println(0.0F);
      MockPrintStream mockPrintStream1 = new MockPrintStream("|8z%i``nFagY6(wR6");
      DataOutputStream dataOutputStream3 = new DataOutputStream(dataOutputStream2);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = "qCT`y[.rJf#w0#YaI";
      Player player0 = new Player((-823), "qCT`y[.rJf#w0#YaI", "qCT`y[.rJf#w0#YaI", (-823));
      player0.reset(false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.setJoinOK(player0, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      String string1 = "";
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("", " {?@{Z%Xj>Z");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player((-3192), "|8z%i``nFagY6(wR6", 1209);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("|8z%i``nFagY6(wR6", false);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockFileOutputStream0);
      mockFileOutputStream0.release();
      mockFileOutputStream0.close();
      MockFileOutputStream mockFileOutputStream1 = new MockFileOutputStream("^etNoKh3/2F0, ");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      DataOutputStream dataOutputStream1 = new DataOutputStream(filterOutputStream0);
      DataOutputStream dataOutputStream2 = new DataOutputStream(mockFileOutputStream1);
      MockPrintStream mockPrintStream0 = new MockPrintStream("^etNoKh3/2F0, ");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-36);
      mockFileOutputStream1.release();
      byteArray0[1] = (byte) (-36);
      mockPrintStream0.write(byteArray0);
      mockPrintStream0.println(0.0F);
      MockPrintStream mockPrintStream1 = new MockPrintStream("|8z%i``nFagY6(wR6");
      DataOutputStream dataOutputStream3 = new DataOutputStream(dataOutputStream2);
      int int0 = player0.type();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(5, int0);
      assertTrue(player0.isConnected());
      assertEquals(1209, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(545, "", 545);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)102;
      byteArray0[1] = (byte)32;
      byteArray0[2] = (byte) (-23);
      byteArray0[2] = (byte) (-23);
      player0.unpack(byteArray0);
      assertEquals("0.0.0.0", player0.getIP());
      
      Player player1 = new Player(545, "", "", (short)4919);
      assertEquals(4919, player1.getPictureId());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player((-3137), "YW;P_rH&Gv:\"jn", "YW;P_rH&Gv:\"jn", (-3137));
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)123;
      byteArray0[2] = (byte)55;
      byteArray0[3] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(2, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.8493821196946767
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(543, (String) null, "y_K#|4atxB!!Bci5`u", 543, 543);
      player0.getIP();
      player0.gangStrength();
      Party party0 = new Party(543);
      party0.getSubparty();
      party0.id = (-2796);
      party0.id = 0;
      party0.id = 0;
      party0.boss = (Party) player0;
      player0.add(party0);
      player0.getSubparty();
      player0.setX(0.0F);
      player0.pack();
      player0.setZ(0);
      Player player1 = null;
      player0.getX();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(1371, "qCT`y[.rJf#w0#YaI", "qCT`y[.rJf#w0#YaI", 1371, (-823));
      player0.setZ((-823));
      Player player1 = new Player(1371, "", "(rQ- 9Iw", 1337);
      player0.boss = (Party) player1;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) "";
      objectArray0[1] = objectArray0[0];
      objectArray0[3] = (Object) "qCT`y[.rJf#w0#YaI";
      Object object3 = new Object();
      objectArray0[4] = object3;
      Object object4 = new Object();
      objectArray0[5] = object4;
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.258303007954067
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player(2727, "9q HW}!oG3fqd(+\">NV", "9q HW}!oG3fqd(+\">NV", 2072, (-509));
      Party party0 = new Party((short)4919);
      player0.boss = party0;
      player0.boss.next = party0;
      party0.next = (Party) player0;
      player0.prev = party0;
      player0.setZ(2727);
      player0.setMoney(0.0F);
      player0.getIP();
      player0.getY();
      player0.getX();
      party0.add(player0.boss);
      party0.boss = player0.boss;
      player0.setDead((long) (-509), true);
      player0.setDead();
      player0.getName();
      player0.isDead();
      player0.setX((-639.0F));
      float float0 = player0.getZ();
      assertTrue(player0.isDead());
      assertEquals(2727.0F, float0, 0.01F);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player((-823), "", "", (-823));
      player0.setX(0.0F);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object[] objectArray0 = new Object[7];
      objectArray0[5] = (Object) "<u\"/E}u>mPyw";
      objectArray0[1] = objectArray0[0];
      objectArray0[3] = (Object) "";
      Object object4 = new Object();
      objectArray0[4] = object4;
      Object object5 = new Object();
      Object object6 = new Object();
      assertFalse(object6.equals((Object)object1));
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.022794924510636
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(1699, "", "", 1, 297);
      player0.getSubparty();
      player0.getName();
      player0.setDead(0L, false);
      player0.gangStrength();
      Party party0 = new Party();
      player0.prev = party0;
      player0.getPictureId();
      player0.getSubparty();
      player0.getPictureId();
      player0.setX(1);
      player0.setY((-539.0F));
      player0.getStrength();
      player0.isConnected();
      float float0 = player0.getZ();
      assertTrue(player0.isDead());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.31931252327703
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(0.0F);
      Player player1 = new Player(2147340491, "<a|A0M", 2147340491);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<a|A0M");
      player1.setJoinOK(player0, true);
      player1.add(player0);
      player1.getSubparty();
      player1.toString();
      player0.getStrength();
      player1.isConnected();
      player1.isJoinOK(player0, false);
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      player1.isConnected();
      player1.setX(1043.7963F);
      player1.setConnected(true);
      player1.getY();
      player1.setDead((-252L));
      assertEquals(1043.7963F, player1.getX(), 0.01F);
      
      player0.pack();
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player(0, (String) null, (String) null, 1);
      player0.toString();
      player0.setMoney(1);
      player0.getTimeOfDeath();
      Player player1 = new Player((short)4919, (String) null, "module.ModuleBrowserDialog$ModuleFilter", 2577, 180);
      player0.setConnected(true);
      player1.isDead();
      player1.getStrength();
      player1.setDead(1392409296320L);
      PipedInputStream pipedInputStream0 = new PipedInputStream(180);
      pipedInputStream0.markSupported();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 257);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.221751559072405
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player(982, "", "", (-3313));
      player0.isJoinOK(player0, false);
      player0.setJoinOK(player0, false);
      player0.isJoinOK(player0, false);
      MockFile mockFile0 = new MockFile("module.ModuleBrowserDialog$ModuleFilter");
      mockFile0.getAbsoluteFile();
      Object object0 = new Object();
      Object object1 = new Object();
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      mockPrintStream0.println("");
      Object[] objectArray0 = new Object[0];
      mockPrintStream0.print("");
      mockPrintStream0.checkError();
      mockPrintStream0.checkError();
      Player player1 = new Player(1194);
      mockPrintStream0.println((Object) player1);
      PrintStream printStream0 = mockPrintStream0.printf("", objectArray0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      byteArrayOutputStream0.writeTo(mockPrintStream0);
      ByteArrayOutputStream byteArrayOutputStream1 = new ByteArrayOutputStream();
      MockFile mockFile1 = new MockFile("d3JyT;H[=;[TH$>", "(;6?z/se");
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockFile0);
      assertFalse(mockPrintStream1.equals((Object)printStream0));
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Party party0 = new Party(982);
      party0.id = 982;
      Player player0 = new Player(982, "Xd", 982);
      party0.boss = (Party) player0;
      player0.setMoney(982);
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      party0.prev = party0;
      assertEquals("", party0.prev.toString());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("ZAxz]b@", true);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockFileOutputStream0);
      MockFileOutputStream mockFileOutputStream1 = new MockFileOutputStream("ZAxz]b@");
      Player player0 = new Player(58);
      assertEquals(0L, player0.getTimeOfDeath());
      
      player0.setDead((-1L));
      Player player1 = new Player();
      assertEquals("Player-1", player1.getName());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player(3, "", "D&Nso", (-1079));
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "D&Nso";
      objectArray0[2] = (Object) player0;
      objectArray0[4] = (Object) "cjQ5Ry5=~zam}B";
      Object object0 = new Object();
      player0.setDead();
      objectArray0[5] = object0;
      Object object1 = new Object();
      objectArray0[8] = object1;
      Object[] objectArray1 = new Object[1];
      objectArray1[0] = (Object) "";
      System.setCurrentTimeMillis(3);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player(465, "k(shGlpk ", "k(shGlpk ", (-3070));
      PipedInputStream pipedInputStream0 = new PipedInputStream(5);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertFalse(boolean0);
      assertEquals((-3070), player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Party party0 = new Party(982);
      party0.id = 982;
      party0.prev = null;
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      party0.prev = party0;
      Player player0 = new Player(982, (String) null, "", (-26614), (-26614));
      player0.pack();
      assertEquals((-26614), player0.getPictureId());
      assertEquals((-26614), player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player((-823), "", "", (-823));
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object[] objectArray0 = new Object[7];
      objectArray0[1] = objectArray0[0];
      objectArray0[3] = (Object) "";
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      assertFalse(object6.equals((Object)object2));
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Party party0 = new Party(982);
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      party0.getSubparty();
      party0.id = 982;
      LinkedList<Party> linkedList1 = new LinkedList<Party>();
      LinkedList<Party> linkedList2 = new LinkedList<Party>();
      Player player0 = new Player((-874), "+wc`!AgG", "module.ModuleBrowserDialog$ModuleFilter", 1, 1);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "zU^=h");
      Player player0 = new Player((-6205), "DL\"*OHRN2v;-{T_Z|@", (-27));
      boolean boolean0 = player0.isConnected();
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals((-27), player0.getPictureId());
      assertTrue(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Player player0 = new Player();
      float float0 = player0.getX();
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, float0, 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player(5);
      long long0 = player0.getTimeOfDeath();
      assertEquals(0, player0.getPictureId());
      assertEquals("Player5", player0.toString());
      assertEquals(0L, long0);
      
      Player player1 = new Player((-28155), "Ix8-4BsXKOR,T (.", (short)4919);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(4919, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(player1.isConnected());
      assertEquals(1, player1.getStrength());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Party party0 = new Party(982);
      Player player0 = new Player(2070, (String) null, 778);
      player0.boss = party0;
      player0.reset(true);
      MockPrintStream mockPrintStream0 = new MockPrintStream("|j");
      mockPrintStream0.println(994.9F);
      mockPrintStream0.append(',');
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      System.setCurrentTimeMillis(778);
  }
}
