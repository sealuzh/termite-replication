/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 13:57:13 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.043508145822018
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setEncoding(" ");
      outputFormat0.setLineSeparator("-lineSeprator");
      outputFormat0.setIndent(false);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "Ve";
      stringArray0[1] = "-trimText";
      stringArray0[2] = "-lineSeprator";
      stringArray0[3] = " ";
      String string0 = "ay<?ysfT#P5Ju9\\u";
      stringArray0[4] = string0;
      stringArray0[5] = "-expandEmpty1bYPk~iJg";
      outputFormat0.parseOptions(stringArray0, 1925);
      outputFormat0.setEncoding("-lineSeprator");
      outputFormat0.setIndent("-indent");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndent(",AroE?-zNBTP>M");
      assertEquals(",AroE?-zNBTP>M", outputFormat0.getIndent());
      
      OutputFormat outputFormat1 = new OutputFormat((String) null, true, (String) null);
      outputFormat1.setIndent("");
      outputFormat1.getEncoding();
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.030495400303718
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-indent";
      stringArray0[1] = "-omitEncoding";
      stringArray0[2] = "f;In(X";
      stringArray0[3] = ";@w2\"sCs{ZVfC-v";
      stringArray0[4] = "f?mNG)95b_ur";
      stringArray0[5] = "";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(2, int0);
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isPadText());
      assertEquals("-omitEncoding", outputFormat0.getIndent());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "-xhtmlF)!%}B>z9nBx";
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent("-xhtmlF)!%}B>z9nBx");
      outputFormat0.setPadText(true);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-xhtmlF)!%}B>z9nBx";
      stringArray0[1] = "-xhtmlF)!%}B>z9nBx";
      stringArray0[2] = "-xhtmlw";
      stringArray0[3] = "-xhtmlF)!%}B>z9nBx";
      stringArray0[4] = "-xhtmlw";
      outputFormat0.parseOptions(stringArray0, 2147483645);
      // Undeclared exception!
      outputFormat0.setIndentSize(2147483645);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.4030219621291495
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setNewLineAfterNTags(573);
      outputFormat1.setIndentSize(1307);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.setTrimText(true);
      outputFormat1.setPadText(false);
      outputFormat1.setXHTML(false);
      outputFormat0.setNewLineAfterNTags(1);
      outputFormat0.setIndent("}[K9c6fe");
      outputFormat0.isXHTML();
      OutputFormat outputFormat2 = new OutputFormat();
      String[] stringArray0 = new String[4];
      outputFormat2.setPadText(false);
      outputFormat2.setNewLineAfterDeclaration(false);
      stringArray0[0] = "}[K9c6fe";
      outputFormat2.setIndentSize(1307);
      stringArray0[1] = "1bYPk~iJg";
      outputFormat2.setNewLineAfterNTags(1289);
      outputFormat1.setPadText(true);
      stringArray0[2] = "1bYPk~iJg";
      stringArray0[3] = "}[K9c6fe";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat1.setIndent("-lineSeparat");
      assertEquals(573, outputFormat1.getNewLineAfterNTags());
      
      outputFormat0.getLineSeparator();
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.946632552840673
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "-newlines";
      stringArray0[2] = "Cj$V;viYr";
      OutputFormat outputFormat0 = new OutputFormat("Invalid attribute quote character (", true, "1EP^_+I ");
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 1);
      int int0 = 1;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, (-2356));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.085788413586281
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setIndentSize(1307);
      outputFormat1.setLineSeparator((String) null);
      outputFormat1.setPadText(false);
      outputFormat1.setXHTML(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewLineAfterNTags(1);
      outputFormat0.setIndent("}[K9c6fe");
      outputFormat0.isXHTML();
      OutputFormat outputFormat2 = new OutputFormat();
      String[] stringArray0 = new String[4];
      outputFormat2.setNewLineAfterDeclaration(false);
      stringArray0[0] = null;
      stringArray0[1] = " wtKp4+\"5Qx";
      outputFormat1.setPadText(true);
      assertTrue(outputFormat1.isPadText());
      
      stringArray0[2] = " wtKp4+\"5Qx";
      stringArray0[3] = "}[K9c6fe";
      outputFormat2.setIndentSize(1);
      outputFormat2.setOmitEncoding(true);
      String[] stringArray1 = new String[2];
      outputFormat2.setExpandEmptyElements(true);
      outputFormat0.getLineSeparator();
      boolean boolean0 = outputFormat2.isNewLineAfterDeclaration();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0096449398247995
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-padText";
      stringArray0[1] = "";
      stringArray0[2] = "pmqgk^,>3";
      stringArray0[3] = "-trimText";
      stringArray0[4] = "";
      stringArray0[6] = "-trimText";
      stringArray0[7] = "pmqgk^,>3";
      stringArray0[8] = "-trimText";
      outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isPadText());
      
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertFalse(outputFormat1.isExpandEmptyElements());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0996386475223843
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-trimText";
      stringArray0[1] = "-indentSize";
      stringArray0[2] = "";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.113971139136
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndentSize(1634);
      outputFormat0.setEncoding("-xhtml1bYPk~iJg");
      outputFormat0.setLineSeparator("");
      outputFormat0.setIndent(false);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-xhtmlF)!%}B>z9nBx";
      stringArray0[1] = "-xhtmlF)!%}B>z9nBx";
      stringArray0[2] = "-xhtml1bYPk~iJg";
      stringArray0[3] = "-xhtml1bYPk~iJg";
      stringArray0[4] = "-xhtmlF)!%}B>z9nBx";
      stringArray0[5] = "-xhtml1bYPk~iJg";
      stringArray0[6] = "-suppressDeclaration";
      stringArray0[7] = "";
      stringArray0[8] = "";
      outputFormat0.parseOptions(stringArray0, 3);
      OutputFormat outputFormat1 = new OutputFormat("-xhtml1bYPk~iJg");
      outputFormat0.setEncoding("");
      outputFormat1.setOmitEncoding(true);
      outputFormat0.setIndent("");
      assertEquals("", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.079471593345351
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-expandEmpty-uineSepmahor";
      stringArray0[1] = "Z_'a-";
      stringArray0[2] = "6 IPmUoH\u0005>[u";
      stringArray0[3] = "~[zu{Hp";
      stringArray0[4] = "-xhtml";
      stringArray0[5] = "-trimText";
      stringArray0[6] = "-expandEmpty-uineepahor";
      stringArray0[7] = "*MV4ll}^whBJKv)`P";
      stringArray0[8] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isExpandEmptyElements());
      
      OutputFormat.createPrettyPrint();
      String[] stringArray1 = new String[6];
      stringArray1[0] = "-trimText";
      stringArray1[1] = "-uineSepmahor";
      stringArray1[2] = "-trimText";
      stringArray1[4] = "-trimText";
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.parseOptions(stringArray1, 0);
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat2.isExpandEmptyElements());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.201232466197249
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-lieSeprato", false);
      outputFormat0.setLineSeparator("-lieSeprato");
      outputFormat0.setNewlines(false);
      outputFormat0.setIndentSize(2746);
      outputFormat0.setEncoding("-lieSeprato");
      String[] stringArray0 = new String[11];
      outputFormat0.setNewLineAfterNTags(571);
      outputFormat0.setLineSeparator("-lieSeprato");
      outputFormat0.setIndent(false);
      stringArray0[1] = "-lieSeprato";
      outputFormat0.setIndent(false);
      stringArray0[2] = "-lieSeprato";
      stringArray0[3] = "-lieSeprato";
      stringArray0[4] = "-lieSeprato";
      stringArray0[5] = "-lieSeprato";
      stringArray0[2] = stringArray0[0];
      stringArray0[7] = "-lieSeprato";
      stringArray0[8] = "-lieSeprato";
      outputFormat0.parseOptions(stringArray0, 3);
      outputFormat0.setIndent(false);
      outputFormat0.setLineSeparator("-lieSeprato");
      outputFormat0.setIndent("");
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertEquals("-lieSeprato", outputFormat0.getEncoding());
      assertEquals(571, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0287375017310743
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = OutputFormat.STANDARD_INDENT;
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-lineSeparator";
      OutputFormat outputFormat0 = new OutputFormat("5^:3? B8^@IG", true, "5^:3? B8^@IG");
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.8344319225942862
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("TD'A{t@");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "TD'A{t@";
      stringArray0[1] = "TD'A{t@";
      stringArray0[2] = "TD'A{t@";
      outputFormat0.setTrimText(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewLineAfterNTags(1036);
      outputFormat0.setIndentSize(1041);
      outputFormat0.setIndent("-expandEmptyNvsq*co");
      outputFormat0.isXHTML();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setNewLineAfterNTags((-910));
      outputFormat0.setPadText(true);
      outputFormat0.setTrimText(false);
      outputFormat0.parseOptions(stringArray0, 850);
      outputFormat0.setIndent("1bYPk~iJg");
      assertEquals("1bYPk~iJg", outputFormat0.getIndent());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.1218169283657025
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "-omitEncoding";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "gt'snQ";
      stringArray0[5] = "-omitEncoding";
      stringArray0[6] = "-omitEncoding";
      stringArray0[7] = "";
      stringArray0[8] = "";
      outputFormat0.parseOptions(stringArray0, 1);
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, (-916));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -916
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String[] stringArray0 = new String[3];
      String[] stringArray1 = new String[6];
      stringArray1[2] = "-newlines";
      stringArray1[1] = stringArray1[0];
      stringArray1[2] = "Cj$V;viYr";
      stringArray1[3] = "jB";
      OutputFormat outputFormat0 = new OutputFormat(stringArray0[0]);
      outputFormat0.setEncoding(stringArray1[0]);
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("UTF-8", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.6258417525947544
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      outputFormat0.setLineSeparator("");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndentSize(2717);
      outputFormat0.setEncoding("");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewlines(true);
      outputFormat0.setIndent("");
      String[] stringArray0 = new String[7];
      outputFormat0.setIndentSize(2717);
      stringArray0[0] = "";
      outputFormat0.setIndent("");
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = " 83em<{'?+@+nyN%";
      stringArray0[5] = "B";
      stringArray0[6] = "";
      outputFormat0.parseOptions(stringArray0, 2717);
      outputFormat0.getLineSeparator();
      assertTrue(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.1457228029945123
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml-xhtml-lineSeprator");
      String[] stringArray0 = new String[3];
      OutputFormat outputFormat1 = new OutputFormat("-trimText", false, "");
      outputFormat0.setEncoding("-trimText");
      outputFormat0.setIndent("<{1sn32H/`J{");
      outputFormat1.setOmitEncoding(false);
      outputFormat0.setIndent("<{1sn32H/`J{");
      outputFormat1.setIndent("z1*\u0000{v{hL)V:?7}+");
      outputFormat1.getEncoding();
      outputFormat0.setIndent("");
      OutputFormat outputFormat2 = new OutputFormat("", false, "-xhtml-xhtml-lineSeprator");
      outputFormat2.setIndent("Qd:m<1W}%");
      assertEquals("Qd:m<1W}%", outputFormat2.getIndent());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String[] stringArray0 = new String[4];
      String[] stringArray1 = new String[5];
      stringArray1[1] = "]VwW5a<*mm[br";
      stringArray1[2] = "]VwW5a<*mm[br";
      stringArray1[3] = "]VwW5a<*mm[br";
      stringArray1[4] = "]VwW5a<*mm[br";
      OutputFormat outputFormat0 = new OutputFormat("]VwW5a<*mm[br");
      outputFormat0.setEncoding("]VwW5a<*mm[br");
      outputFormat0.setEncoding("]VwW5a<*mm[br");
      outputFormat0.setOmitEncoding(false);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter(' ');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character ( )
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.2994313350130167
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setPadText(false);
      outputFormat0.setIndent("-encoding");
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setEncoding("-encoding");
      outputFormat0.setIndent(true);
      outputFormat0.isPadText();
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setNewlines(true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setPadText(false);
      outputFormat0.setIndent(false);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent(false);
      outputFormat0.setIndentSize(3213);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setTrimText(false);
      outputFormat0.setXHTML(true);
      outputFormat0.getEncoding();
      outputFormat0.isNewlines();
      outputFormat0.getEncoding();
      outputFormat0.isOmitEncoding();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.getAttributeQuoteCharacter();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-encoding";
      stringArray0[1] = "-suppressDeclaration";
      stringArray0[2] = "-encoding";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = OutputFormat.STANDARD_INDENT;
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-lineSeparator";
      stringArray0[1] = "J8'r[Dw8F#uV";
      stringArray0[2] = "  ";
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setAttributeQuoteCharacter('\"');
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, false, (String) null);
      outputFormat0.setAttributeQuoteCharacter('\'');
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertEquals('\'', char0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.404362631844509
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("DE<\"wt>Qa", true);
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isXHTML());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewlines());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("DE<\"wt>Qa", outputFormat0.getIndent());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isPadText());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-xhtmlw";
      stringArray0[1] = "-xhtmlw";
      stringArray0[2] = "-xhtmlw";
      stringArray0[3] = "-lineoeXpmaor";
      stringArray0[4] = "DE<\"wt>Qa";
      stringArray0[5] = "DE<\"wt>Qa";
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat1.isPadText());
      assertEquals("\n", outputFormat1.getLineSeparator());
      assertFalse(outputFormat1.isOmitEncoding());
      assertFalse(outputFormat1.isXHTML());
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
      assertFalse(outputFormat1.isSuppressDeclaration());
      assertTrue(outputFormat1.isNewlines());
      assertTrue(outputFormat1.isTrimText());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertEquals("  ", outputFormat1.getIndent());
      assertEquals("UTF-8", outputFormat1.getEncoding());
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.8344319225942862
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[3];
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("");
      assertFalse(outputFormat0.isXHTML());
      
      outputFormat0.setXHTML(true);
      outputFormat0.getIndent();
      assertTrue(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.1606859275426658
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setNewLineAfterNTags((-2078));
      outputFormat0.setIndent("=jGr5Ph=");
      outputFormat0.setNewLineAfterNTags((-2078));
      outputFormat0.isOmitEncoding();
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndent("-xtmlF!%}B>znB");
      outputFormat0.setNewLineAfterNTags((-1));
      outputFormat0.setNewlines(false);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setNewlines(true);
      outputFormat0.isPadText();
      outputFormat0.setEncoding("vm;4\t.;}]A");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "=jGr5Ph=";
      stringArray0[1] = "vm;4\t.;}]A";
      outputFormat1.setNewlines(false);
      stringArray0[4] = "-hSQ16~[L)vwU";
      stringArray0[3] = "-xtmlF!%}B>znB";
      stringArray0[5] = "=jGr5Ph=";
      outputFormat1.parseOptions(stringArray0, 2472);
      outputFormat1.setIndent("-xtmlF!%}B>znB");
      assertEquals("-xtmlF!%}B>znB", outputFormat1.getIndent());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.7410370767808394
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[4];
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent(true);
      outputFormat0.setXHTML(true);
      outputFormat0.getIndent();
      assertTrue(outputFormat0.isXHTML());
      
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertFalse(outputFormat1.isXHTML());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.431890978213752
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-encoding";
      stringArray0[1] = "Z";
      stringArray0[2] = "-encoding";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false);
      String string0 = outputFormat0.getIndent();
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals("", string0);
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("\n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.849407908128696
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setPadText(false);
      outputFormat0.setIndent("-encoding");
      outputFormat0.setEncoding("-encoding");
      outputFormat0.isPadText();
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setPadText(false);
      outputFormat0.setIndent(false);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent(false);
      outputFormat0.setIndentSize(3213);
      outputFormat0.setIndent(true);
      outputFormat0.setTrimText(false);
      outputFormat0.setXHTML(true);
      outputFormat0.getEncoding();
      outputFormat0.isNewlines();
      outputFormat0.getEncoding();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.getAttributeQuoteCharacter();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-encoding";
      stringArray0[1] = "vlz:u>yC";
      stringArray0[2] = "Z";
      stringArray0[3] = "Z";
      stringArray0[4] = "";
      stringArray0[5] = "-encoding";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isXHTML());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.0397234894802008
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(">EaX.]U4reTAiZ", true);
      outputFormat0.setNewLineAfterNTags(1339);
      outputFormat0.setIndent("");
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.setPadText(true);
      outputFormat0.setIndent(true);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize(3813);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setXHTML(true);
      outputFormat0.getEncoding();
      outputFormat0.isNewlines();
      outputFormat0.setLineSeparator("AY77");
      outputFormat0.setPadText(false);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setIndent("*\".]Z[&$ShP");
      assertEquals("AY77", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.7592997849367498
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("~[zu{Hp");
      String[] stringArray0 = new String[3];
      stringArray0[1] = "~[zu{Hp";
      outputFormat0.setNewLineAfterNTags((-1491692612));
      outputFormat0.getNewLineAfterNTags();
      String[] stringArray1 = new String[4];
      stringArray1[1] = "~[zu{Hp";
      stringArray1[2] = "~[zu{Hp";
      stringArray1[3] = "~[zu{Hp";
      outputFormat0.parseOptions(stringArray1, 1);
      outputFormat0.setIndentSize(1);
      String[] stringArray2 = new String[3];
      outputFormat0.setIndent("-expandEmpty-xhtml-lineSeplrator");
      outputFormat0.parseOptions(stringArray1, 4);
      stringArray2[1] = "-xhtml-lineSeplrator";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray2, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.853253087436612
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterNTags(573);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.setTrimText(true);
      outputFormat0.setPadText(false);
      outputFormat0.setXHTML(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewLineAfterNTags(1);
      outputFormat0.setIndent("}[K9c6fe");
      outputFormat0.isXHTML();
      String[] stringArray0 = new String[4];
      outputFormat0.setNewLineAfterDeclaration(false);
      stringArray0[0] = "}[K9c6fe";
      stringArray0[1] = "1bYPk~iJg";
      outputFormat0.setNewLineAfterNTags(1289);
      outputFormat0.setPadText(true);
      stringArray0[2] = "1bYPk~iJg";
      stringArray0[3] = "}[K9c6fe";
      outputFormat0.setIndent("-lineSeparat");
      int int0 = outputFormat0.parseOptions(stringArray0, 1307);
      assertTrue(outputFormat0.isPadText());
      assertEquals(1307, int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.4302705392332347
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtmlF)!%}B>z9nBx");
      outputFormat0.setIndent("-xhtmlF)!%}B>z9nBx");
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("-xhtmlF)!%}B>z9nBx");
      outputFormat0.setIndent("-xhtmlF)!%}B>z9nBx");
      outputFormat0.setIndent("-padText");
      outputFormat0.setIndent("");
      outputFormat0.setIndent("-indent");
      outputFormat0.setIndent("-xhtmlF)!%}B>z9nBx");
      outputFormat0.setIndent("-expandEmpty-indentSze");
      outputFormat0.setIndent("-expandEmpty-uineSepmahor");
      outputFormat0.setIndent("-expandEmpty-uineSepmahor");
      assertEquals("-expandEmpty-uineSepmahor", outputFormat0.getIndent());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("~[zu{Hp", true, "!hBUP\u0002Kroo#F3pp");
      String[] stringArray0 = new String[0];
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("~[zu{Hp", outputFormat0.getIndent());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertTrue(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals("!hBUP\u0002Kroo#F3pp", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals(0, int0);
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.178482546903138
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setPadText(true);
      outputFormat0.setIndent("-encoding");
      outputFormat0.setIndent("");
      outputFormat0.setLineSeparator(">e3Bm9");
      outputFormat0.setEncoding("-encoding");
      outputFormat0.isPadText();
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setIndent("-encoding");
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setTrimText(true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "n8_Va.c]*F";
      stringArray0[2] = "";
      stringArray0[3] = "-encoding";
      stringArray0[4] = "n8_Va.c]*F";
      stringArray0[5] = "";
      stringArray0[6] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent("n8_Va.c]*F");
      assertEquals("-encoding", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.458522186763
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("qg", true, "9\"{kp");
      outputFormat0.setNewLineAfterNTags((-932));
      outputFormat0.setNewLineAfterNTags((-932));
      outputFormat0.setIndentSize((-1));
      outputFormat0.setIndent("qg");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.getLineSeparator();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setLineSeparator("");
      outputFormat0.setLineSeparator("");
      outputFormat0.setIndent(true);
      outputFormat0.setPadText(false);
      outputFormat0.setIndentSize((-932));
      outputFormat0.setEncoding("9\"{kp");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setOmitEncoding(false);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat1.setTrimText(true);
      outputFormat1.setIndentSize(0);
      outputFormat0.isSuppressDeclaration();
      outputFormat1.setExpandEmptyElements(true);
      outputFormat2.setLineSeparator("uCW8;1I-g #");
      outputFormat1.setNewLineAfterNTags(0);
      outputFormat1.getLineSeparator();
      outputFormat1.isExpandEmptyElements();
      outputFormat2.isPadText();
      outputFormat2.setExpandEmptyElements(true);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "qg";
      boolean boolean0 = outputFormat2.isNewLineAfterDeclaration();
      assertEquals("uCW8;1I-g #", outputFormat2.getLineSeparator());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.7239348063754814
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent("-xhtmlF)!%}B>z9nBx");
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("-xhtmlF)!%}B>z9nBx");
      outputFormat0.setIndent("-xhtmlF)!%}B>z9nBx");
      outputFormat0.setIndentSize((-1725494885));
      outputFormat0.setIndent("-padText");
      outputFormat0.setIndent("");
      outputFormat0.setIndent("-indent");
      outputFormat0.setIndent("-xhtmlF)!%}B>z9nBx");
      outputFormat0.setIndent("-expandEmpty-indentSze");
      outputFormat0.setIndent("-expandEmpty-uineSepmahor");
      outputFormat0.setIndent("-expandEmpty-uineSepmahor");
      assertEquals("-expandEmpty-uineSepmahor", outputFormat0.getIndent());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.0850162128140806
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-lineSeparator", false);
      outputFormat0.setLineSeparator("-lineSeparator");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndentSize(2717);
      outputFormat0.setEncoding("-lineSeparator");
      outputFormat0.isXHTML();
      outputFormat0.setIndent(false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-lineSeparator";
      stringArray0[1] = "-lineSeparator";
      stringArray0[2] = "1bYPk~iJg";
      stringArray0[3] = "-lineSeparator";
      outputFormat0.parseOptions(stringArray0, 2717);
      outputFormat0.setIndentSize(2717);
      outputFormat0.setIndent("1bYPk~iJg");
      OutputFormat outputFormat1 = new OutputFormat("-xhtmlu8!rTP%/ECEsTtCzFq", false, "-lineSeparator");
      outputFormat1.isExpandEmptyElements();
      outputFormat1.setExpandEmptyElements(false);
      outputFormat1.setXHTML(true);
      outputFormat1.getIndent();
      outputFormat0.setEncoding("-lineSeparator");
      outputFormat1.setEncoding("'8 o__/M=X@gd~!");
      assertEquals("'8 o__/M=X@gd~!", outputFormat1.getEncoding());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.7518685126965625
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setPadText(true);
      outputFormat0.setLineSeparator("-trimText");
      outputFormat0.setTrimText(false);
      outputFormat0.setIndent(true);
      outputFormat0.setXHTML(true);
      assertEquals("-trimText", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.4341415069751702
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent("^n.Uo9BS");
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("-xhtmlF)!%}B>z9nBx");
      outputFormat0.setIndent("-xhtmlF)!%}B>z9nBx");
      outputFormat0.setIndent("-padex");
      outputFormat0.setIndent("");
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("-indent");
      outputFormat0.setIndent("-xhtmlF)!%}B>z9nBx");
      outputFormat0.setIndent("-expandEmpty-uineSepmahor");
      outputFormat0.setIndent("-expandEmpty-uineSepmahor");
      outputFormat0.setIndent("3Rloy,j/6,PDmS674_");
      outputFormat0.setIndent("-xhtml`<G!SN_]=");
      outputFormat0.setIndent("5zUT^v_tVu86sy.a");
      assertEquals("5zUT^v_tVu86sy.a", outputFormat0.getIndent());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.1074338557160757
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("i6h3xV<|5l7vv%K_");
      outputFormat0.setTrimText(true);
      int int0 = 0;
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setXHTML(true);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setPadText(true);
      outputFormat0.isTrimText();
      outputFormat0.isXHTML();
      outputFormat0.isSuppressDeclaration();
      outputFormat2.setIndent(true);
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      outputFormat3.setPadText(true);
      outputFormat3.setExpandEmptyElements(true);
      String[] stringArray0 = new String[9];
      stringArray0[1] = "i6h3xV<|5l7vv%K_";
      stringArray0[2] = "u$tF)e99v-OB@";
      stringArray0[3] = "i6h3xV<|5l7vv%K_";
      stringArray0[4] = "i6h3xV<|5l7vv%K_";
      stringArray0[5] = "i6h3xV<|5l7vv%K_";
      stringArray0[6] = "i6h3xV<|5l7vv%K_";
      stringArray0[8] = "i6h3xV<|5l7vv%K_";
      outputFormat2.setNewLineAfterNTags(957);
      String[] stringArray1 = null;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, 1612);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.9512690761619575
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("i6h3xV<|5l7vv%K_");
      outputFormat0.setPadText(false);
      outputFormat0.setTrimText(false);
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      outputFormat1.setPadText(false);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.isTrimText();
      outputFormat0.isExpandEmptyElements();
      OutputFormat.createCompactFormat();
      outputFormat1.setNewLineAfterNTags(957);
      assertEquals(957, outputFormat1.getNewLineAfterNTags());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.9556823265963292
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int int0 = 1;
      OutputFormat outputFormat0 = new OutputFormat("D.<\"w|>Qa", true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-xhtmlw";
      stringArray0[1] = "-xhtmlw";
      stringArray0[2] = "-xhtmlw";
      stringArray0[3] = "-lineoeXpmaor";
      stringArray0[4] = "D.<\"w|>Qa";
      stringArray0[5] = "D.<\"w|>Qa";
      outputFormat0.parseOptions(stringArray0, 1);
      String[] stringArray1 = new String[5];
      stringArray1[0] = "-xhtmlw";
      outputFormat0.parseOptions(stringArray0, 1);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("TD'Ay{t@");
      outputFormat0.setNewlines(true);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "TD'Ay{t@";
      stringArray0[1] = "TD'Ay{t@";
      stringArray0[2] = "TD'Ay{t@";
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String[] stringArray0 = new String[3];
      String[] stringArray1 = new String[6];
      stringArray1[1] = stringArray1[0];
      OutputFormat outputFormat0 = new OutputFormat("-xhtmlCj$V;viYr", true, "-xhtml");
      int int0 = outputFormat0.parseOptions(stringArray0, 290);
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("-xhtmlCj$V;viYr", outputFormat0.getIndent());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("-xhtml", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals(290, int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.9517607579688783
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      int int0 = 1;
      OutputFormat outputFormat0 = new OutputFormat("D.<\"w|(>Qa", false);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-xhtmlw";
      stringArray0[1] = "-xhtmlw";
      stringArray0[2] = "-xhtmlw";
      stringArray0[3] = "-lineoeXpmaor";
      stringArray0[4] = "D.<\"w|(>Qa";
      stringArray0[5] = "D.<\"w|(>Qa";
      outputFormat0.parseOptions(stringArray0, 1);
      String[] stringArray1 = new String[21];
      stringArray1[0] = "-xhtmlw";
      stringArray1[1] = "`<G!SN_]=";
      stringArray1[2] = "-lineoeXpmaor";
      stringArray1[3] = "-xhtmlw";
      stringArray1[4] = "D.<\"w|(>Qa";
      outputFormat0.parseOptions(stringArray1, 1);
      outputFormat0.parseOptions(stringArray1, 1);
      String[] stringArray2 = new String[4];
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray2, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String[] stringArray0 = new String[6];
      OutputFormat outputFormat0 = new OutputFormat("Invalid attribute quote character (", true, "-xhtml ");
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('t');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (t)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.3514341962233967
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent("UTF-8");
      outputFormat0.setIndent(true);
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndent("9T)k'l_@AI~");
      outputFormat0.setIndent("-padText");
      outputFormat0.setIndent("-suppressDeclaration");
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("UTF-8");
      outputFormat0.setIndent("R-:%{%2Pp\"93d!7g");
      outputFormat0.setIndent("");
      outputFormat0.setIndent("UTF-8");
      outputFormat0.setIndent(")+#J*N*E+{54n+td");
      outputFormat0.setIndent("");
      outputFormat0.setIndent("-indent");
      assertEquals("-indent", outputFormat0.getIndent());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expandEmpty1bYPk~iJg", true, "J5'UqI<LS|}V");
      String[] stringArray0 = new String[18];
      stringArray0[16] = "J5'UqI<LS|}V";
      stringArray0[1] = "";
      stringArray0[2] = "J5'UqI<LS|}V";
      stringArray0[3] = "-expandEmpty1bYPk~iJg";
      stringArray0[4] = "-lineSeprator";
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertFalse(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals(0, int0);
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("J5'UqI<LS|}V", outputFormat0.getEncoding());
      assertEquals("-expandEmpty1bYPk~iJg", outputFormat0.getIndent());
      assertEquals("\n", outputFormat0.getLineSeparator());
  }
}
