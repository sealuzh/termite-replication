/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 12:51:21 GMT 2019
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Services_ESTest extends Services_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      System.setCurrentTimeMillis(98L);
      System.setCurrentTimeMillis((-360L));
      System.setCurrentTimeMillis((-1226L));
      System.setCurrentTimeMillis(128L);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("127.0.0.1", 153);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1479L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-124L));
      System.setCurrentTimeMillis((-1226L));
      System.setCurrentTimeMillis(2906L);
      System.setCurrentTimeMillis((-4162L));
      System.setCurrentTimeMillis(1310L);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("", 153);
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)17;
      byteArray0[1] = (byte) (-101);
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)34;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)25;
      NetworkHandling.sendDataOnTcp(evoSuiteLocalAddress0, byteArray0);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, (byte[]) null);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, (byte[]) null);
      Services.testPOP3(" ", 1);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP(" ", 1);
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://jBI^$^T8gAi>yl:3052");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "Services");
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("jBI^$^T8gAi>yl", 3052);
      assertTrue(services_HTTP_Result0.works);
      assertEquals(9, services_HTTP_Result0.page_weight);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://q5CimNyA7&j5 BF:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "JQgNl");
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("q5CimNyA7&j5 BF", 0);
      assertEquals(6, services_HTTP_Result0.page_weight);
      assertTrue(services_HTTP_Result0.works);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP((String) null, (-1736));
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("2>gZm-2{f", (-13));
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS((String) null, 1917);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0L, services_HTTP_Result0.time);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      System.setCurrentTimeMillis(98L);
      System.setCurrentTimeMillis((-360L));
      System.setCurrentTimeMillis((-1226L));
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      System.setCurrentTimeMillis(128L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1479L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-124L));
      System.setCurrentTimeMillis((-1226L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-4162L));
      System.setCurrentTimeMillis(1310L);
      Services.testSMTP("T+UbHAbiU", 153);
      System.setCurrentTimeMillis((-360L));
      System.setCurrentTimeMillis(227L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1869L));
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.code = (-3344);
      services_HTTP_Result0.reset();
      assertEquals(0, services_HTTP_Result0.page_weight);
      
      services_HTTP_Result0.page_weight = 2378;
      services_HTTP_Result0.toString();
      services_HTTP_Result0.works = false;
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("2>gZm-2{f", (-13));
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0L, services_HTTP_Result0.time);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      System.setCurrentTimeMillis(98L);
      System.setCurrentTimeMillis((-360L));
      System.setCurrentTimeMillis((-1226L));
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3(" ms\n", 153);
      System.setCurrentTimeMillis(128L);
      services_SIMPLE_Result0.toString();
      System.setCurrentTimeMillis((-124L));
      services_SIMPLE_Result0.reset();
      System.setCurrentTimeMillis(128L);
      System.setCurrentTimeMillis((-360L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(153);
      System.setCurrentTimeMillis(153);
      Services.testSMTP(" ms\n", 153);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-360L));
      System.setCurrentTimeMillis((-639L));
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("ajVu P", 17);
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.code);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("jBI^$^T8gAi>yl", 3052);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0L, services_HTTP_Result0.time);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Services services0 = new Services();
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      Services.testPOP3("", 0);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-360L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(128L);
      System.setCurrentTimeMillis(153);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-193L));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-360L));
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("_:Se8Ys,yPw2Xc", (-2130));
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.code = (-3344);
      services_HTTP_Result0.reset();
      String string0 = services_HTTP_Result0.toString();
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string0);
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
      
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-1);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("", 0);
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("XAy5~TJ~BwCn-ByMux", (-1738));
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("l948r3]$C6V(Ow[r", 1708);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0L, services_HTTP_Result0.time);
  }
}
