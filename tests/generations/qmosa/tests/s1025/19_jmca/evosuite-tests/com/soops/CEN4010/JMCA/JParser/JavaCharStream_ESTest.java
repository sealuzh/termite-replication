/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 15:22:17 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FilterInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.net.URI;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockRandomAccessFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      File file0 = MockFile.createTempFile("MtL(_{aH8(v5/", "");
      file0.mkdirs();
      file0.toURI();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[3];
      charArray0[0] = '>';
      byte[] byteArray0 = new byte[4];
      file0.setLastModified((byte)1);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, (byte)12, (byte)1);
      file0.setExecutable(false);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, (byte)1);
      file0.setExecutable(false);
      byteArrayInputStream0.markSupported();
      byteArrayInputStream0.markSupported();
      javaCharStream0.backup((byte)1);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      assertEquals(4095, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-m4c.qa-]gV");
      StringReader stringReader1 = new StringReader("-m4c.qa-]gV");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)12;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-556), (byte)12, 0);
      StringReader stringReader2 = new StringReader("xa$ |ss&nXt+");
      stringReader2.reset();
      stringReader1.mark(4083);
      javaCharStream0.GetImage();
      StringReader stringReader3 = new StringReader(" column ");
      stringReader3.reset();
      StringReader stringReader4 = new StringReader("");
      stringReader2.reset();
      JavaCharStream javaCharStream1 = null;
      try {
        javaCharStream1 = new JavaCharStream(stringReader2, 10, 4088, (-849));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.724454707919628
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      File file0 = MockFile.createTempFile("MtL(_{aH8(v5/", "");
      file0.mkdirs();
      file0.toURI();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)7;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-60), 4091);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 4081, 4090);
      javaCharStream0.backup((byte)7);
      javaCharStream0.GetImage();
      stringReader0.reset();
      javaCharStream0.BeginToken();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/MtL(_\\{aH8(v5/0");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "naf0N(QWU");
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      javaCharStream0.readChar();
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.104810306523294
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-m4c.qa-]gV");
      StringReader stringReader1 = new StringReader("-m4c.qa-]gV");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)12;
      byteArray0[0] = (byte)12;
      byteArray0[4] = (byte)12;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1626, (byte)12);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      javaCharStream0.prevCharIsLF = true;
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream1, 4112, 0);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('\f', char0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.8300448638548636
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Vz`K6(K/S6sTh,72");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[4];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 92, (byte) (-120));
      javaCharStream0.adjustBeginLineColumn((-315), (byte)77);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~");
      javaCharStream0.GetImage();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-2582), (-133));
      javaCharStream1.AdjustBuffSize();
      javaCharStream1.AdjustBuffSize();
      // Undeclared exception!
      javaCharStream1.adjustBeginLineColumn((-1), (byte) (-120));
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.7636026328594285
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 11, 11);
      pipedOutputStream0.close();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      javaCharStream0.maxNextCharInd = 11;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      javaCharStream0.available = (-2582);
      javaCharStream0.adjustBeginLineColumn((-2582), (-2582));
      javaCharStream0.BeginToken();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.BeginToken();
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      stringReader0.read();
      javaCharStream1.readChar();
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(4096, javaCharStream0.bufpos);
      assertEquals((-2580), int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.1766453509367873
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("-m4c.qa-]gV");
      StringReader stringReader1 = new StringReader("-m4c.qa-]gV");
      StringReader stringReader2 = new StringReader("gC%aGOJ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, (-1387), 99, 957);
      javaCharStream0.BeginToken();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "RBY7ILwb");
      char[] charArray0 = new char[7];
      charArray0[0] = 'g';
      charArray0[1] = 'g';
      charArray0[2] = 'g';
      charArray0[3] = 'g';
      charArray0[4] = 'g';
      charArray0[5] = 'g';
      charArray0[6] = 'g';
      stringReader2.read(charArray0);
      javaCharStream0.GetImage();
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(99, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.622204027249963
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      MockFile mockFile0 = new MockFile("");
      mockFile0.setReadable(false);
      mockFile0.setExecutable(false);
      StringReader stringReader1 = new StringReader("");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte) (-60);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-60), (byte) (-60));
      javaCharStream0.backup(2048);
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      byteArrayInputStream0.markSupported();
      javaCharStream0.AdjustBuffSize();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream2.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StringReader stringReader0 = new StringReader("~a)Je'-{/");
      int int0 = (-2301);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2301), (-2301));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.maxNextCharInd = (-2301);
      stringReader0.reset();
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.4697702309218315
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte) (-60);
      byteArray0[2] = (byte) (-60);
      byteArray0[3] = (byte) (-60);
      byteArray0[4] = (byte) (-60);
      byteArray0[5] = (byte)7;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)7, (byte)7);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 4090, 1767);
      javaCharStream0.backup((byte)7);
      javaCharStream0.GetImage();
      javaCharStream0.bufsize = 4063;
      stringReader1.reset();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      javaCharStream0.readChar();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.1244854233950874
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      mockFile0.setReadable(false);
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte) (-60);
      byteArray0[2] = (byte) (-60);
      byteArray0[3] = (byte) (-60);
      byteArray0[4] = (byte) (-60);
      byteArray0[5] = (byte)7;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)7, (byte)7);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 4090, 1767);
      javaCharStream0.backup((byte)7);
      javaCharStream0.GetImage();
      stringReader0.reset();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.backup(4096);
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn((-1376), 12);
      javaCharStream0.ExpandBuff(true);
      assertEquals(4096, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.326607072019177
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-m4c.qa-]gV");
      JavaCharStream.hexval('F');
      StringReader stringReader1 = new StringReader("-m4c.qa-]gV");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)12;
      byteArray0[3] = (byte)12;
      byteArray0[4] = (byte)12;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1415), (byte)7);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)12, 0);
      javaCharStream0.bufsize = 86;
      char[] charArray0 = new char[1];
      charArray0[0] = 'F';
      stringReader1.read(charArray0);
      javaCharStream0.backup((byte)7);
      javaCharStream0.GetImage();
      stringReader1.reset();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      byteArrayInputStream0.skip(79);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.AdjustBuffSize();
      assertEquals(86, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)127;
      StringReader stringReader0 = new StringReader("j~ZzyBg0");
      StringReader stringReader1 = new StringReader("j~ZzyBg0");
      StringReader stringReader2 = new StringReader("j~ZzyBg0");
      StringReader stringReader3 = new StringReader("J[j{P>cm");
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.519382346735597
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      File file0 = MockFile.createTempFile("MtL(_{aH8(v5/", "");
      file0.mkdirs();
      file0.toURI();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)7;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-60), 4091);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 4081, 4090);
      javaCharStream0.backup((byte)7);
      javaCharStream0.GetImage();
      stringReader0.reset();
      javaCharStream0.BeginToken();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/MtL(_\\{aH8(v5/0");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "naf0N(QWU");
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(true);
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.9241124223261477
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-m4c.qa-]gV");
      JavaCharStream.hexval('F');
      StringReader stringReader1 = new StringReader("-m4c.qa-]gV");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)12;
      byteArray0[3] = (byte)12;
      byteArray0[4] = (byte)12;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1, 2104);
      javaCharStream0.backup(2104);
      javaCharStream0.BeginToken();
      StringReader stringReader2 = new StringReader("-m4c.qa-]gV");
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      File file0 = MockFile.createTempFile("MtL(_{aH8(v5/", "");
      file0.mkdirs();
      file0.setExecutable(true, true);
      file0.setReadable(true, false);
      file0.toURI();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)7;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-60), 4091);
      byteArrayInputStream0.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, (byte)7);
      bufferedInputStream0.skip((byte)0);
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.read(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      String string0 = "-m4c.qa-]gV";
      StringReader stringReader0 = new StringReader("-m4c.qa-]gV");
      char char0 = '<';
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)60;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)86;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.3928785285587444
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)73;
      byteArray0[1] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 4096, 4096);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)73, 4071);
      javaCharStream0.backup(1);
      String string0 = javaCharStream0.GetImage();
      StringReader stringReader0 = new StringReader("\"");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, string0);
      javaCharStream0.adjustBeginLineColumn(472, 4071);
      javaCharStream0.BeginToken();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/f;*Q1i7,!DW\u0006a-2&");
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (byte)73, (-1709));
      javaCharStream1.AdjustBuffSize();
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(2825, (byte)73);
      javaCharStream0.ExpandBuff(true);
      assertEquals(73, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.761271170654303
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)73;
      byteArray0[1] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 4096, 4096);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)73, 4071);
      javaCharStream0.backup(1);
      javaCharStream0.GetImage();
      StringReader stringReader0 = new StringReader("\"");
      stringReader0.reset();
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream1.GetImage();
      javaCharStream1.backup(4071);
      javaCharStream1.readChar();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.7456749096593813
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      mockFile0.toURL();
      mockFile0.setExecutable(true);
      StringReader stringReader0 = new StringReader("Vz`K6(K/S6sTh,72");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)91;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1, (-1));
      javaCharStream0.backup(1);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream1.ExpandBuff(false);
      javaCharStream1.BeginToken();
      javaCharStream0.GetImage();
      JavaCharStream javaCharStream3 = new JavaCharStream(byteArrayInputStream0);
      try { 
        javaCharStream3.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.5692374600471832
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "f#Xz}j");
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 11, 11);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      javaCharStream0.maxNextCharInd = 11;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      javaCharStream0.available = (-2582);
      javaCharStream0.adjustBeginLineColumn((-2582), (-2582));
      javaCharStream0.BeginToken();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      javaCharStream0.readChar();
      int int0 = javaCharStream0.getLine();
      assertEquals(4098, javaCharStream0.bufpos);
      assertEquals((-2581), int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.4060395717163217
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Vz`K6(K/S6sTh,72");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)7;
      byteArray0[3] = (byte)7;
      byteArray0[4] = (byte)7;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)7, (-1772));
      byteArrayInputStream1.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 0, (-3587));
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream3.skip(0L);
      javaCharStream0.readChar();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.getLine();
      javaCharStream0.getEndLine();
      assertEquals((-3587), javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      int int0 = JavaCharStream.hexval('1');
      assertEquals(1, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.845357967893249
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringReader stringReader0 = new StringReader("~a)Je'-{/");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 89, 2507);
      StringReader stringReader1 = new StringReader("09*B/xlcWCUIf)KS[M)");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)7;
      byteArray0[3] = (byte)7;
      byteArray0[4] = (byte)7;
      byteArray0[5] = (byte)7;
      byteArray0[6] = (byte)7;
      byteArray0[7] = (byte)7;
      byteArray0[8] = (byte)7;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-1), 2);
      javaCharStream0.backup((byte)7);
      javaCharStream0.BeginToken();
      byteArrayInputStream0.markSupported();
      javaCharStream0.AdjustBuffSize();
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0);
      JavaCharStream javaCharStream3 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream2.ExpandBuff(false);
      javaCharStream3.BeginToken();
      JavaCharStream javaCharStream4 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream4.GetImage();
      char char0 = javaCharStream3.BeginToken();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('\u0007', char0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.4731919317202857
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      JavaCharStream.hexval('E');
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      char[] charArray0 = new char[2];
      charArray0[0] = ']';
      charArray0[1] = 'E';
      stringReader0.read(charArray0);
      stringReader0.reset();
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1331, 1);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 82, 2, 2);
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '>';
      charArray0[1] = '>';
      charArray0[2] = 'T';
      charArray0[3] = 'X';
      charArray0[4] = 'T';
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte) (-47);
      byteArray0[2] = (byte) (-19);
      byteArray0[3] = (byte) (-26);
      byteArray0[4] = (byte) (-25);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-47), 3143);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('\r', char0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[3];
      charArray0[0] = 'V';
      charArray0[1] = 'M';
      charArray0[2] = '?';
      javaCharStream0.buffer = charArray0;
      javaCharStream0.Done();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-m4c.qa-]gV");
      StringReader stringReader1 = new StringReader("-m4c.qa-]gV");
      StringReader stringReader2 = new StringReader("-m4c.qa-]gV");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3593, 77);
      javaCharStream0.maxNextCharInd = 1632;
      int int0 = 2048;
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 95, (-879));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.6014203231153572
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      JavaCharStream.hexval('E');
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 99, 14, 14);
      stringReader0.reset();
      javaCharStream0.BeginToken();
      javaCharStream0.ReInit((Reader) stringReader0, 25, (-1861), 99);
      StringReader stringReader1 = new StringReader("T@xZEE+g");
      javaCharStream0.ReInit((Reader) stringReader1, 100, 1165, 70);
      javaCharStream0.GetImage();
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.394714983677679
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader("jZyBg0");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)127, 2956, 2956);
      char[] charArray0 = new char[4];
      charArray0[0] = 'f';
      charArray0[1] = '{';
      javaCharStream0.ReInit((Reader) stringReader0, 2149, 6, 2956);
      StringReader stringReader1 = new StringReader("f0$y'V],\"-66t8JnAD1");
      javaCharStream0.ReInit((Reader) stringReader0, 8, (-761), 1);
      String string0 = javaCharStream0.GetImage();
      assertEquals((-1), javaCharStream0.bufpos);
      assertEquals("\u0000", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5170133545329176
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      JavaCharStream.hexval('E');
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 99, 14, 14);
      stringReader0.reset();
      javaCharStream0.BeginToken();
      javaCharStream0.ReInit((Reader) stringReader0, 8, (-1857), 99);
      StringReader stringReader1 = new StringReader("T@xZEE+g");
      javaCharStream0.Done();
      javaCharStream0.ReInit((Reader) stringReader1, 100, 1165, 70);
      assertNotSame(stringReader1, stringReader0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.733857589601352
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 11, 11);
      pipedOutputStream0.close();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      byte[] byteArray0 = new byte[13];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte) (-9);
      byteArray0[2] = (byte)7;
      byteArray0[3] = (byte)7;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 327, (byte) (-9));
      byteArrayInputStream0.markSupported();
      javaCharStream0.backup((byte)7);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginLine();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.ExpandBuff(false);
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.836521786753116
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-m4c.qa-]gV");
      StringReader stringReader1 = new StringReader("-m4c.qa-]gV");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)12;
      byteArray0[3] = (byte)12;
      byteArray0[4] = (byte)12;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 4096, (-3273));
      javaCharStream0.backup(4089);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginLine();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      javaCharStream2.ExpandBuff(false);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      assertEquals(1, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.4897091818941455
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      File file0 = MockFile.createTempFile("MtL(_{aH8(v5/", "");
      file0.mkdirs();
      boolean boolean0 = JavaCharStream.staticFlag;
      FileSystemHandling.shouldAllThrowIOExceptions();
      file0.toURI();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)7;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-60), 4091);
      byteArrayInputStream0.close();
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)7);
      stringReader0.read(charBuffer0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 4081, 4090);
      javaCharStream0.backup((byte)7);
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(4081, 8);
      javaCharStream0.ExpandBuff(true);
      assertEquals(6, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.4478069142749117
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)127;
      StringReader stringReader0 = new StringReader("jZyBg0");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2956, 2956, 85);
      stringReader0.reset();
      stringReader0.reset();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      javaCharStream0.readChar();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn((-4638), 11);
      assertEquals(11, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.1928489571441423
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[4];
      charArray0[0] = '1';
      charArray0[1] = 'Y';
      charArray0[2] = '*';
      charArray0[3] = '<';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 4085, (-1));
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn((-1), (-1));
      int int0 = javaCharStream0.getColumn();
      assertEquals((-1), javaCharStream0.getBeginColumn());
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 197, 197);
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[3];
      javaCharStream0.prevCharIsLF = false;
      byteArray0[0] = (byte)126;
      byteArray0[1] = (byte)83;
      javaCharStream0.prevCharIsCR = true;
      byteArray0[0] = (byte)28;
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.126274433828183
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-m4c.qa-]gV");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)12;
      byteArray0[0] = (byte)12;
      byteArray0[4] = (byte)12;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 2830, (byte)7);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      javaCharStream0.tokenBegin = (-285);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      javaCharStream0.readChar();
      javaCharStream0.ReadByte();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.449792752728442
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      File file0 = MockFile.createTempFile("MtL(_{aH8(v5/", "");
      file0.mkdirs();
      file0.toURI();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      StringReader stringReader0 = new StringReader("MtL(_{aH8(v5/");
      char[] charArray0 = new char[8];
      charArray0[0] = '>';
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)12;
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 117, 96);
      javaCharStream0.backup((-1));
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.1621473996045415
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      int int0 = 11;
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 11, 59);
      EvoSuiteFile evoSuiteFile0 = null;
      pipedOutputStream0.close();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      javaCharStream0.maxNextCharInd = (-1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      javaCharStream0.adjustBeginLineColumn(11, 11);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.600117480211618
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-m4c.qa-]gV");
      StringReader stringReader1 = new StringReader("-m4c.qa-]gV");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)12;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(2252, (byte)7);
      javaCharStream0.getLine();
      javaCharStream0.BeginToken();
      javaCharStream0.getLine();
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn((byte)7, 101);
      char[] charArray0 = new char[6];
      charArray0[0] = '-';
      charArray0[1] = 'x';
      charArray0[2] = '-';
      charArray0[3] = 'x';
      charArray0[4] = 'x';
      charArray0[5] = 'x';
      stringReader0.read(charArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, (byte)12, 1, (-2557));
      javaCharStream1.getBeginLine();
      JavaCharStream javaCharStream2 = new JavaCharStream(pipedInputStream0);
      JavaCharStream javaCharStream3 = null;
      try {
        javaCharStream3 = new JavaCharStream(stringReader1, (-1), 10, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.3823452227303257
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      File file0 = MockFile.createTempFile("MtL(_{aH8(v5/", "");
      file0.mkdirs();
      file0.toURI();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)7;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-60), 4091);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 4081, 4090);
      javaCharStream0.backup((byte)7);
      javaCharStream0.GetImage();
      javaCharStream0.inputStream = (Reader) stringReader0;
      stringReader0.reset();
      javaCharStream0.BeginToken();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/MtL(_\\{aH8(v5/0");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "naf0N(QWU");
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(1360);
      assertEquals(4091, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.5825339255764286
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      File file0 = MockFile.createTempFile("MtL(_{aH8(v5/", "");
      file0.mkdirs();
      file0.toURI();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[8];
      charArray0[0] = '>';
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      byteArray0[2] = (byte)112;
      byteArray0[3] = (byte) (-89);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 4069, (byte)1);
      javaCharStream0.inBuf = (int) (byte)1;
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream1, 1832, (byte) (-89));
      javaCharStream1.ExpandBuff(false);
      javaCharStream1.BeginToken();
      javaCharStream1.BeginToken();
      javaCharStream0.GetSuffix(0);
      javaCharStream0.GetImage();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.9946571675310574
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 197, 197);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)126;
      byteArray0[1] = (byte)83;
      javaCharStream0.prevCharIsCR = true;
      byteArray0[2] = (byte)28;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('O');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.479535275002028
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 11, 11);
      pipedOutputStream0.close();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      javaCharStream0.maxNextCharInd = 11;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      javaCharStream0.available = (-2582);
      javaCharStream0.adjustBeginLineColumn((-2582), (-2582));
      javaCharStream0.BeginToken();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(11, 1);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.UpdateLineColumn('\u0000');
      assertEquals(4096, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      File file0 = MockFile.createTempFile("MtL(_{aH8(v5/", "");
      file0.toURI();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[8];
      charArray0[0] = '>';
      charArray0[1] = '>';
      charArray0[2] = 'T';
      charArray0[3] = 'X';
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/MtL(_\\{aH8(v5/0");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      charArray0[4] = 'T';
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)127;
      byteArray0[1] = (byte)8;
      StringReader stringReader0 = new StringReader(".");
      StringReader stringReader1 = new StringReader(".");
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.5672464197286167
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 11, 59);
      pipedOutputStream0.write((-1245));
      pipedOutputStream0.close();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      javaCharStream0.maxNextCharInd = 11;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      int int0 = (-2582);
      javaCharStream0.available = (-2582);
      javaCharStream0.adjustBeginLineColumn((-2582), (-2582));
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.getEndLine();
      int int1 = 1161;
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.628365610638593
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      File file0 = MockFile.createTempFile("MtL(_{aH8(v5/", "");
      file0.toPath();
      file0.toURL();
      file0.mkdirs();
      file0.toURI();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      char[] charArray0 = new char[8];
      charArray0[7] = '*';
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      byteArray0[3] = (byte) (-89);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 4069, (byte)1);
      javaCharStream0.BeginToken();
      javaCharStream0.getColumn();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.3597473990481395
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      File file0 = MockFile.createTempFile("MtL(_{aH8(v5/", "");
      file0.mkdirs();
      file0.toURI();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[8];
      charArray0[0] = '>';
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)12;
      byteArray0[2] = (byte)112;
      byteArray0[3] = (byte) (-89);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 4069, (byte)1);
      javaCharStream0.inBuf = (int) (byte)1;
      javaCharStream0.BeginToken();
      javaCharStream0.getColumn();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ExpandBuff(false);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.359747399048139
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" colun");
      char[] charArray0 = new char[8];
      charArray0[0] = '.';
      charArray0[1] = 'E';
      charArray0[2] = 'o';
      charArray0[3] = '#';
      charArray0[4] = 'K';
      charArray0[5] = '.';
      charArray0[6] = 'J';
      charArray0[7] = '>';
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1193), 1);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1156), 3211);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 81, 0, (-1));
      // Undeclared exception!
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.3342185879961668
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("j~ZzyBg0");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 5064, 0);
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("Vz`K6(K/S6sTh,72");
      stringReader0.reset();
      javaCharStream0.BeginToken();
      String string0 = javaCharStream0.GetImage();
      assertEquals(0, javaCharStream0.getLine());
      assertEquals(5064, javaCharStream0.getBeginColumn());
      assertEquals("j", string0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.4727186438179904
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 11, 59);
      javaCharStream0.maxNextCharInd = 11;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      javaCharStream0.available = (-2582);
      javaCharStream0.adjustBeginLineColumn((-2582), (-2582));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-2581), int0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.1766453509367873
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)127;
      StringReader stringReader0 = new StringReader("j~ZzyBg0");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 99, 99, 85);
      stringReader0.reset();
      javaCharStream0.GetImage();
      stringReader0.reset();
      stringReader0.reset();
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((PipedOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      int int0 = 54;
      int int1 = 83;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 54, 83, 54);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.7013090971439206
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      File file0 = MockFile.createTempFile("~pd5:tr", "");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.5602722817788353
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Vz`K6(K/S6sTh,N72");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)91;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1, (-1));
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(1, (-1401));
      javaCharStream0.BeginToken();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Vz`K6(K/S6sTh,N72");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(4086, (byte)91);
      javaCharStream0.ExpandBuff(false);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.233675857741236
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[4];
      charArray0[0] = '1';
      charArray0[1] = 'Y';
      charArray0[2] = '*';
      charArray0[3] = '<';
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int int0 = 0;
      javaCharStream0.adjustBeginLineColumn(0, (-2582));
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte) (-104);
      byteArray0[2] = (byte) (-104);
      byteArray0[3] = (byte)58;
      byteArray0[4] = (byte)0;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.2915336713312904
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)73;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)6;
      byteArray0[4] = (byte)99;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 73, (byte)99);
      javaCharStream0.adjustBeginLineColumn((byte)1, (byte)99);
      javaCharStream0.adjustBeginLineColumn(79, 75);
      assertEquals(75, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.7013090971439206
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader("P@U");
      char[] charArray0 = new char[14];
      charArray0[1] = 'o';
      charArray0[2] = '.';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 3);
      javaCharStream0.GetSuffix(54);
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      int int0 = JavaCharStream.hexval('f');
      assertEquals(15, int0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.119908764356186
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 11, 59);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      javaCharStream0.adjustBeginLineColumn(1580, 1580);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(1581, javaCharStream0.getBeginLine());
      assertEquals(1580, int0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.634339349220532
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)127;
      StringReader stringReader0 = new StringReader("jZyBg0");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2956, 2956, 85);
      stringReader0.reset();
      stringReader0.reset();
      javaCharStream0.BeginToken();
      char[] charArray0 = new char[9];
      charArray0[0] = 'j';
      charArray0[1] = 'j';
      charArray0[2] = 'j';
      charArray0[3] = 'j';
      charArray0[4] = 'j';
      charArray0[5] = 'j';
      charArray0[6] = 'j';
      charArray0[7] = 'j';
      charArray0[8] = 'j';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(85, 85);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-3446), (-572));
      javaCharStream1.ExpandBuff(false);
      javaCharStream0.GetSuffix(2956);
      assertEquals(85, javaCharStream0.getEndLine());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.999053945355143
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      int int0 = 11;
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 11, 11);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte) (-104);
      byteArray0[2] = (byte) (-104);
      byteArray0[3] = (byte)58;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-120);
      byte byte0 = (byte)77;
      byteArray0[6] = (byte)77;
      byteArray0[7] = (byte) (-120);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.maxNextCharInd = 11;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      javaCharStream0.available = (-2582);
      javaCharStream0.adjustBeginLineColumn((-2582), (-2582));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      File file0 = MockFile.createTempFile("MtL(_{aH8(v5/", "");
      file0.setExecutable(false);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      int int0 = JavaCharStream.hexval('d');
      assertEquals(13, int0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.4990917718033785
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)127;
      StringReader stringReader0 = new StringReader("j~ZzyBg0");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 99, 99, 85);
      stringReader0.reset();
      javaCharStream0.GetImage();
      stringReader0.reset();
      stringReader0.reset();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn((byte)127, 1);
      javaCharStream0.ExpandBuff(true);
      assertEquals(2133, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.468599985724085
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 11, 11);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte) (-104);
      byteArray0[2] = (byte) (-104);
      byteArray0[3] = (byte)58;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-120);
      byteArray0[6] = (byte)77;
      byteArray0[7] = (byte)44;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      javaCharStream0.maxNextCharInd = 11;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      javaCharStream0.available = (-2582);
      javaCharStream0.adjustBeginLineColumn((-2582), (-2582));
      javaCharStream0.BeginToken();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(11, (byte)77);
      javaCharStream0.ExpandBuff(false);
      assertEquals(11, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader("VBChZ-L4i1:");
      StringReader stringReader1 = new StringReader("<Co1}6yAK#n;&dJ{Ci");
      stringReader1.close();
      stringReader1.markSupported();
      StringReader stringReader2 = new StringReader("q'iUMca%th-*~");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)45;
      byteArray0[5] = (byte) (-88);
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte) (-1);
      byteArray0[0] = (byte)95;
      byteArray0[5] = (byte)12;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 83, (byte)12);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 2914, 47);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, (byte)95, (-1));
      javaCharStream1.bufline = null;
      char[] charArray0 = new char[6];
      charArray0[0] = 't';
      charArray0[1] = '\\';
      charArray0[2] = 'a';
      charArray0[3] = '[';
      charArray0[4] = ';';
      charArray0[5] = '.';
      javaCharStream1.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream1.adjustBeginLineColumn((-2302), (byte) (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" colun");
      JavaCharStream.hexval('8');
      PipedInputStream pipedInputStream0 = new PipedInputStream(3553);
      assertEquals(0, pipedInputStream0.available());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("VBChZ-L4i1:");
      StringReader stringReader1 = new StringReader("<Co1}6yAK#n;&dJ{Ci");
      stringReader1.skip(1351L);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringReader1.close();
      stringReader1.markSupported();
      StringReader stringReader2 = new StringReader("q'iUMca%th-*~");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)45;
      byteArray0[5] = (byte) (-88);
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)95;
      JavaCharStream.hexval('3');
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 4059, (-879));
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-m4c.qa-]gV");
      StringReader stringReader1 = new StringReader("SYS8qZb");
      stringReader0.markSupported();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "SYS8qZb");
      MockFile mockFile0 = new MockFile(" column ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ",%RIy+U<BgrVq^n..");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, (-1), (-2159));
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" colun");
      char[] charArray0 = new char[8];
      charArray0[0] = '.';
      charArray0[1] = 'E';
      charArray0[3] = '#';
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader(" colun");
      int int0 = JavaCharStream.hexval('e');
      assertEquals(14, int0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      File file0 = MockFile.createTempFile("MtL(_{aH8(v5/", "");
      file0.mkdirs();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      StringReader stringReader0 = new StringReader("");
      mockFileInputStream0.close();
      char[] charArray0 = new char[8];
      charArray0[0] = '>';
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 11, 11);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.48831978220001765
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream.hexval('B');
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader1, 11, 1162, (-144));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" colun");
      char[] charArray0 = new char[8];
      charArray0[0] = '.';
      charArray0[1] = 'E';
      charArray0[2] = 'o';
      charArray0[3] = '#';
      charArray0[4] = 'K';
      stringReader0.read(charArray0, 1, 1);
      charArray0[5] = '.';
      charArray0[6] = 'J';
      stringReader0.read();
      charArray0[7] = '>';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1193), 1);
      javaCharStream0.bufsize = (-1193);
      javaCharStream0.GetSuffix(0);
      javaCharStream0.adjustBeginLineColumn((-1193), 4);
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile((File) null, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.3609510106329856
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      int int0 = 11;
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 11, 11);
      EvoSuiteFile evoSuiteFile0 = null;
      pipedOutputStream0.close();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      javaCharStream0.bufpos = 11;
      String string0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      javaCharStream0.available = (-2582);
      javaCharStream0.adjustBeginLineColumn((-2582), (-2582));
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      JavaCharStream.hexval('9');
      StringReader stringReader0 = new StringReader(".");
      char[] charArray0 = new char[6];
      charArray0[0] = '#';
      charArray0[1] = '9';
      charArray0[2] = '>';
      charArray0[3] = '9';
      charArray0[4] = 'J';
      charArray0[5] = '=';
      stringReader0.read(charArray0);
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile((File) null, "0.8O\"bGY)X)MNn4p");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"0.8O\"bGY)X)MNn4p\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.4459669445063859
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader("VBChZ-L4i1:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      javaCharStream0.readChar();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      stringReader0.markSupported();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, (byte) (-1), (byte) (-1));
      StringReader stringReader1 = new StringReader("");
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.7588342921642806
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ZNTYjI<da+'Z(7");
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      char[] charArray0 = new char[4];
      javaCharStream0.tokenBegin = 0;
      charArray0[1] = 'N';
      javaCharStream0.available = (-934);
      charArray0[2] = 'O';
      charArray0[3] = 'K';
      javaCharStream0.ReInit((Reader) null);
      javaCharStream0.Done();
      javaCharStream0.buffer = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('0');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.4081099650910627
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0\"/`Rk2*");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte) (-12);
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)10;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte)115;
      byteArray0[6] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-1), (byte)10);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (byte) (-12), 369);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 369, 1451);
      javaCharStream1.BeginToken();
      javaCharStream1.ExpandBuff(false);
      assertEquals(0, javaCharStream1.bufpos);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      File file0 = MockFile.createTempFile("MtL(_{aH8(v5/", "");
      file0.toURI();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[8];
      charArray0[0] = '>';
      charArray0[1] = '>';
      charArray0[2] = 'T';
      charArray0[3] = 'X';
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/MtL(_\\{aH8(v5/0");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      charArray0[4] = 'T';
      int int0 = JavaCharStream.hexval('D');
      assertEquals(13, int0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      char char0 = '>';
      char[] charArray0 = new char[6];
      charArray0[0] = '>';
      charArray0[1] = '>';
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      charArray0[2] = 'j';
      charArray0[3] = '>';
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.901773211243061
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-m4c.qa-]gV");
      StringReader stringReader1 = new StringReader("SYS8qZb");
      StringReader stringReader2 = new StringReader("-m4c.qa-]gV");
      stringReader2.reset();
      stringReader2.read();
      stringReader2.markSupported();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringReader2.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 6, 3593);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('4', char0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)127;
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte)33;
      byteArray0[3] = (byte) (-84);
      byteArray0[4] = (byte) (-108);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)127, (byte) (-108));
      StringReader stringReader0 = new StringReader("");
      int int0 = JavaCharStream.hexval('4');
      assertEquals(4, int0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      int int0 = JavaCharStream.hexval('E');
      assertEquals(14, int0);
      
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      char[] charArray0 = new char[2];
      charArray0[0] = ']';
      charArray0[1] = 'E';
      stringReader0.read(charArray0);
      stringReader0.reset();
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("w$'`XjU,&Dhtz|,8");
      int int1 = JavaCharStream.hexval('2');
      assertEquals(2, int1);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.5076566703132268
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("VBChZ-L4i1:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      javaCharStream0.readChar();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringReader0.markSupported();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, (byte) (-1), 92);
      StringReader stringReader1 = new StringReader("");
      char[] charArray0 = new char[2];
      charArray0[0] = 'V';
      charArray0[1] = 'V';
      stringReader1.read(charArray0);
      StringReader stringReader2 = new StringReader("");
      StringReader stringReader3 = new StringReader("");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader3);
      char char0 = 'P';
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = '>';
      charArray0[1] = '>';
      charArray0[2] = 'j';
      charArray0[3] = '>';
      charArray0[4] = '>';
      charArray0[5] = '>';
      int int0 = JavaCharStream.hexval('C');
      assertEquals(12, int0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" colun");
      StringReader stringReader1 = new StringReader("T{0.Kv{W");
      StringReader stringReader2 = new StringReader(".Bj+MNb1~");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, false, false);
      int int0 = JavaCharStream.hexval('b');
      assertEquals(11, int0);
      
      int int1 = JavaCharStream.hexval('c');
      assertEquals(12, int1);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.3546927464246423
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      JavaCharStream.hexval('E');
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 99, 14, 14);
      javaCharStream0.BeginToken();
      stringReader0.reset();
      JavaCharStream.hexval('A');
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('o', char0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[1] = 'E';
      StringReader stringReader0 = new StringReader("JXbNgQ)<XTk");
      stringReader0.markSupported();
      JavaCharStream.hexval('a');
      try { 
        JavaCharStream.hexval('o');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)127;
      StringReader stringReader0 = new StringReader("j~ZzyBg0");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("C:BRx8$h34ZRVD62Fr^");
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = JavaCharStream.hexval('0');
      assertEquals(0, int0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '.';
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)15;
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.ready();
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)91;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Vz`K6(K/S6sTh,72");
      StringReader stringReader0 = new StringReader("Vz`K6(K/S6sTh,72");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)91, 2048);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, (int) (byte)91, (int) (byte)91, (-3307));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.4168885736492247
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringReader stringReader0 = new StringReader("VBChZ-L4i1:");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-6);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-6), (byte)10);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      byte[] byteArray1 = new byte[0];
      byteArrayInputStream0.read(byteArray1);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 83, 83);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1184, 2919);
      javaCharStream1.nextCharInd = 11;
      javaCharStream1.BeginToken();
      javaCharStream1.ExpandBuff(true);
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.48831978220001765
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringReader stringReader0 = new StringReader("jZyBg0");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)127, 2966, 2966);
      StringReader stringReader1 = new StringReader("jZyBg0");
      StringReader stringReader2 = new StringReader("jZyBg0");
      StringReader stringReader3 = new StringReader("ke");
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte)73;
      byteArray0[0] = (byte)73;
      byte byte1 = (byte)1;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-1);
      char char0 = 'O';
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("Ycz0ugIE");
      StringReader stringReader3 = new StringReader("");
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-m4c.qa-]gV");
      StringReader stringReader1 = new StringReader("Sxwx+=iF>,9YL>1W");
      StringReader stringReader2 = new StringReader("-m4c.qa-]gV");
      StringReader stringReader3 = new StringReader("");
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-m4c.qa-]gV");
      StringReader stringReader1 = new StringReader("SYS84qZb");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/MtL(_\\{aH8(v5/0");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.5516620075598864
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 11, 59);
      pipedOutputStream0.close();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      javaCharStream0.maxNextCharInd = 11;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      javaCharStream0.available = (-2582);
      javaCharStream0.adjustBeginLineColumn((-2582), (-2582));
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(11, 1);
      javaCharStream0.ExpandBuff(false);
      int int0 = javaCharStream0.getEndLine();
      assertEquals(11, javaCharStream0.getBeginLine());
      assertEquals(13, int0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      File file0 = MockFile.createTempFile("MtL(_{aH8(v5/", "");
      file0.mkdirs();
      file0.toURI();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[3];
      charArray0[0] = '>';
      byte[] byteArray0 = new byte[4];
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, (byte)12, (byte)1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, (byte)1);
      file0.setExecutable(false);
      byteArrayInputStream0.markSupported();
      byteArrayInputStream0.markSupported();
      javaCharStream0.backup((byte)1);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndLine();
      assertEquals(4095, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.577799299110595
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Vz`K6(K/S6sTh,72");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)91;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)91, 13);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream1.ExpandBuff(false);
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.ExpandBuff(true);
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StringReader stringReader0 = new StringReader("VBChZ-L4i1:");
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-m4c.qa-]gV");
      StringReader stringReader1 = new StringReader("SYS8qZb");
      StringReader stringReader2 = new StringReader("-m4c.qa-]gV");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3593, 77);
      javaCharStream0.getBeginColumn();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader(".");
      StringReader stringReader3 = new StringReader("");
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      File file0 = MockFile.createTempFile("MtL(_{aH8(v5/", "");
      file0.toURI();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[8];
      charArray0[0] = '>';
      charArray0[1] = '>';
      charArray0[2] = 'T';
      charArray0[3] = 'X';
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/MtL(_\\{aH8(v5/0");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      charArray0[4] = 'T';
      charArray0[6] = 'T';
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.6614728057439874
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)127;
      StringReader stringReader0 = new StringReader("j~ZzyBg0");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 99, 99, 85);
      stringReader0.reset();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      int int0 = (-3344);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-3344), (-1));
      javaCharStream0.backup((-1));
      javaCharStream1.BeginToken();
      byteArrayInputStream0.markSupported();
      javaCharStream1.AdjustBuffSize();
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0);
      JavaCharStream javaCharStream3 = new JavaCharStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream3.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.7401142184045777
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-m4c.qa-]gV");
      StringReader stringReader1 = new StringReader("-m4c.qa-]gV");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)12;
      byteArray0[2] = (byte) (-62);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-62), (byte)12);
      javaCharStream0.backup((-807));
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginLine();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream1.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.2453395327214007
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1633, 4085, (byte)127);
      stringReader0.reset();
      stringReader0.mark(10);
      javaCharStream0.GetImage();
      StringReader stringReader1 = new StringReader("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000");
      stringReader0.reset();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.48831978220001765
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)127;
      StringReader stringReader0 = new StringReader("j~ZzyBg0");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 99, 99, 85);
      assertEquals((-1), javaCharStream0.bufpos);
      
      stringReader0.reset();
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("j~ZzyBg0");
      int int0 = JavaCharStream.hexval('6');
      assertEquals(6, int0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-m4c.qa-]gV");
      File file0 = MockFile.createTempFile("g.%a GOJ!", "SYS8qZb");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      StringReader stringReader1 = new StringReader("SYS8qZb");
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.2814326612302802
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)14;
      byteArray0[3] = (byte)88;
      pipedOutputStream0.write(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 11, 59);
      pipedOutputStream0.close();
      char char0 = 'd';
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('d');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.201904941357862
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Vz`K6(K/S6sTh,72");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)88;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Vz`K6(K/S6sTh,72");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.prevCharIsCR = false;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((-1));
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 0, (-2386));
      javaCharStream0.readChar();
      javaCharStream1.ReadByte();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-m4c.qa-]gV");
      StringReader stringReader1 = new StringReader("SY8qZb");
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.4178660907557745
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)127;
      StringReader stringReader0 = new StringReader("j~ZzyBg0");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 99, 99, 85);
      stringReader0.reset();
      stringReader0.mark((byte)127);
      javaCharStream0.GetImage();
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("j~ZzyBg0");
      stringReader1.reset();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      javaCharStream0.readChar();
      javaCharStream0.getEndColumn();
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((byte)127);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-m4c.qa-]gV");
      StringReader stringReader1 = new StringReader("SYS8qZb");
      StringReader stringReader2 = new StringReader("-m4c.qa-]gV");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3593, 93);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('-', char0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-m4c.qa-]gV");
      StringReader stringReader1 = new StringReader("do!)");
      StringReader stringReader2 = new StringReader("-m4c.qa-]gV");
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      JavaCharStream.hexval('7');
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      JavaCharStream.hexval('E');
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.7988881124077563
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)73;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)6;
      byteArray0[4] = (byte)99;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 2403, 56);
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 8, (-876));
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 2787, 2787);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("Ycz0ugIE");
      StringReader stringReader3 = new StringReader("");
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0\"/`Rk2*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[8];
      stringReader0.skip((-1));
      charArray0[0] = '@';
      charArray0[1] = '?';
      charArray0[2] = '4';
      charArray0[3] = '(';
      javaCharStream0.FillBuff();
      javaCharStream0.ReadByte();
      javaCharStream0.ReInit((Reader) stringReader0, 1516, 1516);
      assertEquals(0, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.0172089238352386
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-m4c.qa-]gV");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)12;
      byteArray0[0] = (byte)12;
      byteArray0[4] = (byte)12;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 2830, (byte)7);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      char[] charArray0 = new char[5];
      charArray0[0] = 'b';
      charArray0[1] = 'o';
      charArray0[2] = '{';
      charArray0[3] = 'O';
      charArray0[4] = '=';
      javaCharStream0.buffer = charArray0;
      javaCharStream0.readChar();
      byteArrayInputStream0.skip((-308L));
      char char0 = javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals('\u0007', char0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-6);
      byteArray0[0] = (byte)2;
      sequenceInputStream0.read(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      byte[] byteArray1 = new byte[2];
      bufferedInputStream0.skip(0L);
      byteArray1[0] = (byte)0;
      bufferedInputStream0.skip(1L);
      byteArray1[1] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      byteArrayInputStream0.skip(0L);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)1, (-86));
      char char0 = javaCharStream0.readChar();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('\u0000', char0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-89);
      byteArray0[5] = (byte)3;
      sequenceInputStream0.close();
      byteArray0[6] = (byte) (-10);
      byteArray0[7] = (byte) (-40);
      sequenceInputStream0.read();
      sequenceInputStream0.read(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, (byte) (-10), 3309, (byte)0);
      StringReader stringReader0 = new StringReader(":hhkV?3");
      javaCharStream0.ReInit((Reader) stringReader0, (-3347), (-1));
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-m4c.qa-]gV");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      int int0 = (-2582);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)70;
      byteArray0[1] = (byte)70;
      byteArray0[2] = (byte)70;
      byteArray0[3] = (byte) (-36);
      byteArray0[3] = (byte)63;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)17;
      byteArray0[7] = (byte) (-17);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 72, (byte)70);
      File file0 = MockFile.createTempFile("/]2g/@i^k#hS`?", "");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      javaCharStream0.ReInit((InputStream) mockFileInputStream0, (int) (byte) (-17), (-2602));
      javaCharStream0.ReInit((Reader) stringReader0, 0, (-441));
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)117;
      byteArray0[1] = (byte)84;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-21);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)24;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, (byte)117, (byte)84);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StringReader stringReader0 = new StringReader("VBChZ-L4i1:");
      StringReader stringReader1 = new StringReader("VBChZ-L4i1:");
      char[] charArray0 = new char[2];
      charArray0[0] = '>';
      charArray0[1] = '>';
      stringReader1.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-1948));
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=2.660779805050986
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Vz`K6(K/S6sTh,72");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)91;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 11, 1337);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      boolean boolean0 = false;
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, 1, 1);
      javaCharStream2.Done();
      // Undeclared exception!
      try { 
        javaCharStream2.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      File file0 = MockFile.createTempFile("~pd5:tr", "");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      javaCharStream0.GetSuffix(0);
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile(file0, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 4090, (-1));
      char[] charArray0 = javaCharStream0.GetSuffix(4092);
      assertEquals(4092, charArray0.length);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      MockFile.createTempFile("Mt:cL(_{aH8(v5/", "");
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("e5:y/nWSHGHka~");
      int int0 = JavaCharStream.hexval('5');
      assertEquals(5, int0);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      StringReader stringReader0 = new StringReader("vm;4\t.;}]A");
      javaCharStream0.ReInit((Reader) stringReader0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 142
  /*Coverage entropy=2.157280995708096
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-6);
      byteArray0[0] = (byte)2;
      sequenceInputStream0.read(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      byte[] byteArray1 = new byte[2];
      bufferedInputStream0.skip(0L);
      byteArray1[0] = (byte)0;
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, (byte)0, 4096);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray1, 10, 1731);
      byteArrayInputStream2.read();
      byteArrayInputStream0.skip((byte)0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 143
  /*Coverage entropy=2.157280995708096
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-6);
      byteArray0[0] = (byte)2;
      sequenceInputStream0.read(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      byte[] byteArray1 = new byte[2];
      bufferedInputStream0.skip(0L);
      byteArray1[0] = (byte)0;
      bufferedInputStream0.skip(1L);
      byteArray1[1] = (byte)1;
      sequenceInputStream0.read(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 144
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[0];
      stringReader0.mark(1865);
      stringReader0.reset();
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int int0 = 0;
      javaCharStream0.inBuf = 0;
      stringReader0.reset();
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.prevCharIsLF = true;
      stringReader0.skip(0);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 145
  /*Coverage entropy=2.138526235860879
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-6);
      byteArray0[0] = (byte)2;
      sequenceInputStream0.read(byteArray0);
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte)0;
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 3, (byte)2);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StringReader stringReader0 = new StringReader("g/]d");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1849, 1849);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-m4c.qa-]gV");
      StringReader stringReader1 = new StringReader("SYS8qZb");
      StringReader stringReader2 = new StringReader("-m4c.qa-]gV");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.close();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pushbackInputStream0, pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 77, 3593);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 148
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 149
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StringReader stringReader0 = new StringReader("VBChZ-L4i1:");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("");
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.901773211243061
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-m4c.qa-]gV");
      StringReader stringReader1 = new StringReader("SYS8qZb");
      StringReader stringReader2 = new StringReader("-m4c.qa-]gV");
      stringReader2.markSupported();
      stringReader2.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 6, 3593);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('m', char0);
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, 0, 0, 0);
      StringReader stringReader0 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader0, 0, 0, 0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 152
  /*Coverage entropy=2.5671712797869235
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      File file0 = MockFile.createTempFile("MtL(_{aH8(v5/", "");
      file0.setExecutable(false);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, (-1), (byte)7);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('\u0007', char0);
  }

  /**
  //Test case number: 153
  /*Coverage entropy=0.6024679790977038
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 197, 197);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)126;
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("O%Q]1?^l751[{.%o-");
      StringReader stringReader3 = new StringReader("az?,9zlf !>QS*r;Ru");
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 154
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StringReader stringReader0 = new StringReader("VBChZ-L4i1:");
      StringReader stringReader1 = new StringReader("<Co1}6yAK#n;&dJ{Ci");
      stringReader1.close();
      stringReader1.markSupported();
      StringReader stringReader2 = new StringReader("q'iUMca%th-*~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }
}
