/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 14:32:16 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TextureImage;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLStreamHandler;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.2016318389219833
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      linkedList0.spliterator();
      homeEnvironment0.setVideoQuality((-2191));
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera((-2191), 0, 0, (-2191), 0, 1093.0F, (-485L), camera_Lens0);
      Camera camera1 = camera0.clone();
      linkedList0.add(camera1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      linkedList0.poll();
      homeEnvironment0.setVideoWidth((-1361));
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      homeEnvironment0.setSubpartSizeUnderLight(2477.9219F);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("muB5", (PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("muB5", propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_TEXTURE;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.WALLS_ALPHA;
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property1, (PropertyChangeListener) null);
      homeEnvironment0.setCeillingLightColor(1792);
      homeEnvironment1.getVideoFrameRate();
      int int0 = homeEnvironment1.getPhotoHeight();
      assertEquals(1792, homeEnvironment0.getCeillingLightColor());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("FILL_AND_OUTLINE", "J=W_t+", temporaryURLContent0, (-1400), (-1400), "FILL_AND_OUTLINE");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1400), homeTexture0, 2043, homeTexture0, 2043, 2043);
      homeEnvironment0.getSkyTexture();
      assertEquals(2043, homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(2043.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(2043, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-1400), homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.748058988887039
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setVideoQuality((-2191));
      linkedList0.poll();
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setPhotoHeight((-2191));
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.getPhotoHeight();
      Random.setNextRandom(10);
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (String) null, resourceURLContent0, (-158.0F), 12, (String) null, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(12, homeTexture0, 12, 1369, 1277.34F);
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(1369, homeEnvironment0.getLightColor());
      assertEquals(12, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(1277.34F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertNotNull(homeTexture1);
      assertEquals(12, homeEnvironment0.getSkyColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("I d&N>R", "3700-", (Content) null, 2477.9219F, 998, "", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(998, homeTexture0, (-1018), homeTexture0, 998, 1.0F);
      homeEnvironment0.setPhotoWidth(998);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setVideoWidth(11053224);
      homeEnvironment0.setWallsAlpha(2477.9219F);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      // Undeclared exception!
      try { 
        homeEnvironment0.setGroundTexture(homeTexture1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.75012938226178
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-80);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 494.0F, 494.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      catalogTexture0.getCategory();
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture1 = new CatalogTexture("VP>G15(ah>QP#ob5", "", (Content) null, (byte) (-80), 494.0F, "VP>G15(ah>QP#ob5");
      catalogTexture0.compareTo(catalogTexture1);
      catalogTexture0.setCategory((TexturesCategory) null);
      CatalogTexture catalogTexture2 = new CatalogTexture("VP>G15(ah>QP#ob5", resourceURLContent0, 1.3333334F, 494.0F, false);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture3 = new CatalogTexture("", (Content) null, 494.0F, 494.0F, false);
      HomeTexture homeTexture2 = new HomeTexture(homeTexture1);
      catalogTexture0.setCategory((TexturesCategory) null);
      catalogTexture0.compareTo(catalogTexture3);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((byte) (-80), homeTexture1, (byte) (-80), 0, 2864.5886F);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.getVideoFrameRate();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getGroundColor();
      homeEnvironment1.clone();
      homeEnvironment0.getVideoWidth();
      int int0 = homeEnvironment1.getCeillingLightColor();
      assertEquals(0, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.1539908575487527
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Random.setNextRandom((-625));
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      List<Camera> list0 = homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment1.setVideoWidth((-625));
      homeEnvironment0.setWallsAlpha((-625));
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoQuality((-616));
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment1.getVideoWidth();
      homeEnvironment1.getLightColor();
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getPhotoQuality();
      System.setCurrentTimeMillis(4070L);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("applicationSubFolder.Mac OS X", "applicationSubFolder.Mac OS X", (Content) null, 37.0F, 0, "applicationSubFolder.Mac OS X", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, (-80), homeTexture0, 1441, (-407.0F));
      homeEnvironment0.getSkyTexture();
      assertEquals((-407.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-80), homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(1441, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(320, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-80);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", (Content) null, 493.67896F, 493.67896F, "");
      CatalogTexture catalogTexture1 = new CatalogTexture("/U5>d+29?fi0=", "", (Content) null, 1684.5555F, 1684.5555F, "", false);
      catalogTexture0.compareTo(catalogTexture1);
      catalogTexture0.getCategory();
      catalogTexture0.getCategory();
      URL uRL0 = MockURL.getFtpExample();
      catalogTexture0.compareTo(catalogTexture1);
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture2 = new CatalogTexture("VP>G15(ah>QP#Eob5", "", (Content) null, (byte) (-80), 493.67896F, "VP>G15(ah>QP#Eob5");
      catalogTexture2.setCategory((TexturesCategory) null);
      catalogTexture0.compareTo(catalogTexture2);
      catalogTexture2.setCategory((TexturesCategory) null);
      catalogTexture0.setCategory((TexturesCategory) null);
      catalogTexture2.compareTo(catalogTexture1);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((byte) (-80), homeTexture0, 0, homeTexture0, 0, (-2738.57F));
      homeEnvironment0.setWallsAlpha(2.0F);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getLightColor();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.getSkyTexture();
      assertEquals(2.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor((-1722));
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.getCeillingLightColor();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("pdXjhx-)\".x:");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.pdXjhx-)\".x:
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("", "^.v+8X@?)\u0004zd", (Content) null, 0.0F, (-3887), "I d&N>R", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3887), homeTexture0, (-3887), homeTexture0, 2173, 1.5F);
      homeEnvironment0.getGroundTexture();
      assertEquals((-3887), homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(1.5F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(2173, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-3887), homeEnvironment0.getGroundColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("NAME", (Content) null, 992.04F, (-80.0F), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(10, homeTexture0, (-38), (-1007), (-37.0F));
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getLightColor();
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getPhotoQuality();
      Random.setNextRandom(1988);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-80);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 494.0F, 494.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      catalogTexture0.getCategory();
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture1 = new CatalogTexture("VP>G15(ah>QP#ob5", resourceURLContent0, (byte) (-80), 494.0F, false);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture2 = new CatalogTexture("", (Content) null, 494.0F, 494.0F, false);
      HomeTexture homeTexture2 = new HomeTexture(homeTexture1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(10, homeTexture0, 10, homeTexture0, (-70), (byte) (-80));
      // Undeclared exception!
      try { 
        homeEnvironment0.setSkyTexture(homeTexture1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 0.0F, 0.0F);
      texturesCategory0.getIndexOfTexture(catalogTexture0);
      catalogTexture0.setCategory(texturesCategory0);
      System.setCurrentTimeMillis(469L);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(14, homeTexture0, (-1), 0, 1.7777778F);
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertEquals(14, homeEnvironment0.getGroundColor());
      assertEquals(1.7777778F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(0, homeEnvironment0.getLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-1), homeEnvironment0.getSkyColor());
      assertNotNull(homeTexture1);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-80);
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 494.0F, 494.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("", "", (Content) null, 1684.5555F, 1684.5555F, "", false);
      catalogTexture0.compareTo(catalogTexture1);
      catalogTexture0.getCategory();
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture2 = new CatalogTexture("VP>G15(ah>QP#Eob5", "", (Content) null, (byte) (-80), 494.0F, "VP>G15(ah>QP#Eob5");
      catalogTexture2.setCategory((TexturesCategory) null);
      catalogTexture0.compareTo(catalogTexture2);
      catalogTexture0.setCategory((TexturesCategory) null);
      CatalogTexture catalogTexture3 = new CatalogTexture("VP>G15(ah>QP#Eob5", resourceURLContent0, 1.3333334F, 494.0F, false);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture4 = new CatalogTexture("", (Content) null, 494.0F, 494.0F, false);
      HomeTexture homeTexture2 = new HomeTexture(homeTexture1);
      catalogTexture0.setCategory((TexturesCategory) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "I`ju");
      Object object0 = new Object();
      Object object1 = new Object();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((byte) (-80), homeTexture1, 0, homeTexture0, (-1692), (byte) (-80));
      HomeTexture homeTexture3 = homeEnvironment0.getGroundTexture();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertNotSame(homeTexture3, homeTexture0);
      assertEquals((-1692), homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-80.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals((-80), homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.422119371442078
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setVideoQuality(13);
      homeEnvironment0.setVideoWidth((-2191));
      homeEnvironment0.setPhotoHeight(13);
      homeEnvironment0.setWallsAlpha((-3005.3F));
      homeEnvironment0.setSubpartSizeUnderLight((-1.0F));
      homeEnvironment0.setGroundColor(13427964);
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setPhotoWidth(13);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getGroundColor();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      Random.setNextRandom((-1383));
      System.setCurrentTimeMillis(25);
      homeEnvironment0.getVideoAspectRatio();
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals((-1643), homeEnvironment0.getVideoHeight());
      assertEquals(13, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.2590752087262675
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality((-2191));
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "]DRCP2YOY>C8;Ows,");
      homeEnvironment0.setVideoWidth(0);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      homeEnvironment0.setPhotoWidth((byte) (-45));
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setVideoWidth((-1));
      homeEnvironment0.setWallsAlpha(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getLightColor();
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getPhotoQuality();
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(HomeEnvironment.DrawingMode.OUTLINE, homeEnvironment0.getDrawingMode());
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Camera.convertTimeToTimeZone(0L, "");
      Camera.convertTimeToTimeZone(1325L, "VIDEO_WIDTH");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment0.setPhotoQuality((-449));
      Random.setNextRandom((-449));
      homeEnvironment0.clone();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("7b^y,");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.7b^y,
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera(494.0F, 494.0F, 0.0F, 0.44995946F, 494.0F, (-2376.307F), 1644L, camera_Lens0);
      Camera.convertTimeToTimeZone(1644L, "'<# k2k <'ULFZ");
      Camera.convertTimeToTimeZone(4116L, "PHOTO_HEIGHT");
      Camera.Lens camera_Lens1 = Camera.Lens.SPHERICAL;
      Camera camera1 = new Camera(1392409281320L, 2.0F, 1392409281320L, 2.0F, 1392409281320L, 494.0F, 1644L, camera_Lens1);
      Camera camera2 = new Camera(494.0F, (-2376.307F), 1325L, (-285.34F), 2.0F, 1.3333334F);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-3954));
      homeEnvironment0.clone();
      assertEquals((-3954), homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      List<Camera> list0 = null;
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      int int0 = 0;
      homeEnvironment0.getVideoCameraPath();
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio((AspectRatio) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Random.setNextRandom((-625));
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(1);
      homeEnvironment0.setVideoWidth((-625));
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getVideoWidth();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.getCeillingLightColor();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera.Lens camera_Lens1 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera((-550.777F), (-1023.36475F), (-3334.97F), 0L, 0.0F, (-1023.36475F), 0L, camera_Lens1);
      Camera.convertTimeToTimeZone(0L, "");
      Camera.convertTimeToTimeZone(1325L, "VIDEO_WIDTH");
      Camera camera1 = new Camera(1392409281320L, 1392409281320L, 1.3333334F, 1.7777778F, (-3334.97F), (-1.0F), 2160L, camera_Lens0);
      Camera camera2 = new Camera((-3334.97F), 1.7777778F, (-3334.97F), (-1023.36475F), (-1.0F), 1.3333334F);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.clone();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("7b^y,");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.7b^y,
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera(494.0F, 0.0F, (-2531.27F), (-2376.307F), 494.0F, 1644L, (-3216L), camera_Lens0);
      Camera.convertTimeToTimeZone((-3216L), "'<# k2k <'ULFZ");
      Camera.convertTimeToTimeZone((-1L), "PHOTO_HEIGHT");
      Camera.Lens camera_Lens1 = Camera.Lens.SPHERICAL;
      Camera camera1 = new Camera(4116L, 0.0F, 288.4496F, 0.0F, 365.7221F, (-2956.608F), 1392409281320L, camera_Lens1);
      Camera camera2 = new Camera(0.44995946F, 1.5F, (-285.34F), 1.0F, 1.3333334F, 4116L);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.clone();
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera(0.44995946F, (-2376.307F), 1484.1133F, 1252.0F, 1644L, 1484.1133F, 1644L, camera_Lens0);
      Camera.convertTimeToTimeZone((-1067L), "QY2J");
      Camera.convertTimeToTimeZone(0L, "POTO_HEIGHT");
      Camera.Lens camera_Lens1 = Camera.Lens.SPHERICAL;
      Camera.Lens camera_Lens2 = Camera.Lens.SPHERICAL;
      Camera camera1 = new Camera(631.2323F, (-1067L), 2227.0F, 0.44995946F, 1661.547F, (-2269.0F), (-1L), camera_Lens2);
      Camera camera2 = new Camera(1661.547F, 1484.1133F, (-1667.8461F), 631.2323F, (-821.47894F), 2260.713F, 0L, camera_Lens1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(300);
      homeEnvironment0.clone();
      assertEquals(300, homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera.Lens camera_Lens1 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera((-550.777F), (-1023.36475F), (-3289.919F), 0L, 0.0F, (-1023.36475F), 0L, camera_Lens1);
      Camera.convertTimeToTimeZone(0L, "");
      Camera.convertTimeToTimeZone(1325L, "VIDEO_WIDTH");
      Camera camera1 = new Camera(1392409281320L, 1392409281320L, 1.3333334F, 1.7777778F, (-3289.919F), (-1.0F), 2160L, camera_Lens0);
      Camera camera2 = new Camera((-3289.919F), 1.7777778F, (-3289.919F), (-1023.36475F), (-1.0F), 1.3333334F);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-2175));
      homeEnvironment0.setPhotoWidth((-2175));
      homeEnvironment0.clone();
      System.setCurrentTimeMillis(475L);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.999145016016288
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      List<Camera> list1 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list1);
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.setSkyColor(8192);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setPhotoHeight(0);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("!@Si=[f7m20K");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.!@Si=[f7m20K
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera(0.44995946F, (-2376.307F), 1484.1133F, 1252.0F, 1644L, 1484.1133F, 1644L, camera_Lens0);
      Camera.convertTimeToTimeZone((-1067L), "QY2J");
      Camera.convertTimeToTimeZone(0L, "POTO_HEIGHT");
      Camera.Lens camera_Lens1 = Camera.Lens.SPHERICAL;
      Camera.Lens camera_Lens2 = Camera.Lens.SPHERICAL;
      Camera camera1 = new Camera(631.2323F, (-1067L), 2227.0F, 0.44995946F, 1661.547F, (-2269.0F), (-1L), camera_Lens2);
      Camera camera2 = new Camera(1661.547F, 1484.1133F, (-1667.8461F), 631.2323F, (-821.47894F), 2260.713F, 0L, camera_Lens1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-265));
      homeEnvironment0.clone();
      assertEquals((-265), homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.301160282549396
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight((-1.0F));
      homeEnvironment0.setVideoQuality(13);
      homeEnvironment0.setVideoWidth((-2191));
      homeEnvironment0.setPhotoHeight(13);
      homeEnvironment0.setWallsAlpha((-3005.3F));
      homeEnvironment0.setSubpartSizeUnderLight((-1.0F));
      homeEnvironment0.setGroundColor(13427964);
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setPhotoWidth(13);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setVideoQuality(13427964);
      homeEnvironment0.getVideoWidth();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.eteks.sweethome3d.tools.OperatingSystem");
      Random.setNextRandom((-1383));
      System.setCurrentTimeMillis(25);
      homeEnvironment0.getVideoAspectRatio();
      assertEquals(13, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.238153103418003
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_TEXTURE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("B", propertyChangeListener0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, propertyChangeListener1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setWallsAlpha(1.0F);
      homeEnvironment0.getLightColor();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoQuality(13684944);
      homeEnvironment1.setGroundColor(1);
      homeEnvironment1.setVideoQuality(328);
      homeEnvironment1.getPhotoHeight();
      homeEnvironment1.setPhotoWidth((-945));
      homeEnvironment1.getVideoFrameRate();
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setGroundColor(11053224);
      assertEquals(1.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.444034914432476
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setVideoQuality((-2191));
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setPhotoHeight(96);
      homeEnvironment0.setWallsAlpha((-1.0F));
      homeEnvironment0.setGroundColor((-194));
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setSubpartSizeUnderLight((-1871.0369F));
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      List<Camera> list1 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list1);
      homeEnvironment0.setPhotoWidth((-2191));
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getGroundColor();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setAllLevelsVisible(true);
      boolean boolean0 = homeEnvironment0.isObserverCameraElevationAdjusted();
      assertEquals(0, homeEnvironment0.getVideoHeight());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.102117063514037
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setPhotoHeight(96);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setCeillingLightColor(96);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      List<Camera> list1 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list1);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getGroundColor();
      homeEnvironment1.setVideoWidth(846);
      homeEnvironment1.setVideoFrameRate((-464));
      HomeTexture homeTexture0 = null;
      try {
        homeTexture0 = new HomeTexture((TextureImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)37;
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 494.0F, 494.0F);
      CatalogTexture catalogTexture1 = new CatalogTexture("", (Content) null, (byte)37, 1684.5555F);
      catalogTexture0.compareTo(catalogTexture1);
      catalogTexture0.getCategory();
      catalogTexture0.compareTo(catalogTexture1);
      catalogTexture0.getCategory();
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture2 = new CatalogTexture("", "", (Content) null, (byte)37, 494.0F, "");
      catalogTexture2.setCategory((TexturesCategory) null);
      catalogTexture2.setCategory((TexturesCategory) null);
      catalogTexture0.compareTo(catalogTexture2);
      catalogTexture0.setCategory((TexturesCategory) null);
      CatalogTexture catalogTexture3 = new CatalogTexture("", resourceURLContent0, 1.3333334F, 494.0F, false);
      CatalogTexture catalogTexture4 = new CatalogTexture("", (Content) null, 494.0F, 494.0F, false);
      catalogTexture0.setCategory((TexturesCategory) null);
      catalogTexture0.compareTo(catalogTexture4);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(494.0F);
      catalogTexture4.compareTo(catalogTexture3);
      homeEnvironment0.clone();
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      texturesCategory0.getIndexOfTexture(catalogTexture2);
      catalogTexture4.setCategory(texturesCategory0);
      System.setCurrentTimeMillis((-1756L));
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.850863601176158
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setGroundColor((-1326));
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.setVideoQuality((-1326));
      homeEnvironment0.setLightColor((-48));
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setCeillingLightColor(12);
      homeEnvironment0.setSkyColor(12);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.setCeillingLightColor(12);
      System.setCurrentTimeMillis((-1326));
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals((-1326), homeEnvironment0.getVideoQuality());
      assertEquals(12, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera(494.0F, 0.0F, (-2531.27F), (-2376.307F), 494.0F, 1644L, (-3216L), camera_Lens0);
      Camera.convertTimeToTimeZone((-3216L), "'<# k2k <'ULFZ");
      Camera.convertTimeToTimeZone((-1L), "PHOTO_HEIGHT");
      Camera.Lens camera_Lens1 = Camera.Lens.SPHERICAL;
      Camera camera1 = new Camera(4116L, (-0.114346415F), 268.8656F, (-0.114346415F), 365.7221F, (-2956.608F), 1392409281320L, camera_Lens1);
      Camera camera2 = new Camera(0.44995946F, 1.5F, (-285.34F), 1.0F, 2.657055F, 4116L);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor((-405));
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.clone();
      assertEquals((-405), homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.415779257625656
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("1B2E>]", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("*Oq4?", propertyChangeListenerProxy0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.OBSERVER_CAMERA_ELEVATION_ADJUSTED;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.getVideoQuality();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setWallsAlpha((-1897.9192F));
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(list0, (String) null, "1B2E>]", object0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setGroundColor(49);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoQuality((-1));
      homeEnvironment1.setGroundColor(0);
      homeEnvironment0.setVideoQuality(49);
      homeEnvironment1.getPhotoHeight();
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getDrawingMode();
      homeEnvironment1.clone();
      System.setCurrentTimeMillis(49);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.311759886291737
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setVideoQuality((-2191));
      linkedList0.poll();
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setPhotoHeight(96);
      homeEnvironment0.getSubpartSizeUnderLight();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setSubpartSizeUnderLight((-1871.0369F));
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.setGroundColor(96);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setPhotoWidth(96);
      homeEnvironment0.getVideoFrameRate();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.getGroundColor();
      homeEnvironment1.setVideoCameraPath(linkedList0);
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals(96, homeEnvironment0.getPhotoWidth());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.9397928111645655
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setVideoQuality((-2191));
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setPhotoHeight(96);
      MockURL.getFtpExample();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth((-2191));
      homeEnvironment1.setPhotoWidth((-2191));
      homeEnvironment1.getPhotoQuality();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.2215523079930732
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setAllLevelsVisible(true);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("VIDEO_QUALITY", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("user.home", propertyChangeListenerProxy0);
      homeEnvironment1.isAllLevelsVisible();
      Object object0 = new Object();
      Object object1 = new Object();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      Object object2 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment2, "VIDEO_QUALITY", "VIDEO_QUALITY", object2);
      propertyChangeEvent0.toString();
      propertyChangeEvent0.toString();
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("user.home", propertyChangeListenerProxy1);
      propertyChangeListenerProxy2.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("VIDEO_QUALITY", propertyChangeListenerProxy2);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "java.beans.PropertyChangeEvent[propertyName=VIDEO_QUALITY; oldValue=VIDEO_QUALITY; newValue=java.lang.Object@3d5d4c0a; propagationId=null; source=com.eteks.sweethome3d.model.HomeEnvironment@3]");
      Object object3 = new Object();
      Object object4 = new Object();
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera.Lens camera_Lens1 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera((-550.777F), (-1023.36475F), (-3289.919F), 0L, 0.0F, (-1023.36475F), 0L, camera_Lens1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Camera.convertTimeToTimeZone(0L, "");
      Camera.convertTimeToTimeZone(1325L, "VIDEO_WIDTH");
      Camera camera1 = new Camera(1392409281320L, 1392409281320L, 1.3333334F, 1.7777778F, (-3289.919F), (-1.0F), 2160L, camera_Lens0);
      Camera camera2 = new Camera((-3289.919F), 1.7777778F, (-3289.919F), (-1023.36475F), (-1.0F), 1.3333334F);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(1895);
      homeEnvironment0.setSubpartSizeUnderLight(1.0F);
      homeEnvironment0.setLightColor(2979);
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.3472989158733744
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setVideoQuality((-2191));
      linkedList0.poll();
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setPhotoHeight(96);
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.getVideoQuality();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setWallsAlpha((-2191));
      homeEnvironment0.setGroundColor(2121918366);
      homeEnvironment0.getLightColor();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setPhotoQuality(2101792506);
      homeEnvironment1.setGroundColor(13684944);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment1.setVideoCameraPath(list0);
      homeEnvironment1.setPhotoWidth(2101792506);
      homeEnvironment0.getVideoFrameRate();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(classLoader0, "xhV&Z!.n_4S-");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource xhV&Z!.n_4S-
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)30;
      byteArray0[2] = (byte)55;
      byteArray0[3] = (byte)112;
      byteArray0[4] = (byte) (-103);
      byteArray0[5] = (byte)17;
      byteArray0[6] = (byte) (-94);
      byteArray0[7] = (byte)94;
      byteArray0[8] = (byte)91;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-3597));
      homeEnvironment0.setPhotoWidth(1758);
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals(1758, int0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("w&mv-\"i[)|!m", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("lmmF5;p4+lA{)\"gtzu", propertyChangeListenerProxy0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("lmmF5;p4+lA{)\"gtzu", "3cy", "w&mv-\"i[)|!m", "w&mv-\"i[)|!m");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("lmmF5;p4+lA{)\"gtzu", propertyChangeListenerProxy2);
      propertyChangeListenerProxy3.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy(";PR ,!6)'G+;n,$", propertyChangeListenerProxy4);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(141);
      homeEnvironment0.clone();
      System.setCurrentTimeMillis((-1756L));
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Class<Camera> class0 = Camera.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", false);
      CatalogTexture catalogTexture0 = new CatalogTexture("I d&N>R", "I d&N>R", resourceURLContent0, 0.0F, 0.0F, "I d&N>R");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(400, homeTexture0, 400, 400, 0.0F);
      homeEnvironment0.setPhotoQuality(2039);
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(2039, int0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-80);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 494.0F, 494.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      catalogTexture0.getCategory();
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture1 = new CatalogTexture("VP>G15(ah>QP#ob5", resourceURLContent0, 1.3333334F, 494.0F, false);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture2 = new CatalogTexture("", (Content) null, 494.0F, 494.0F, false);
      HomeTexture homeTexture2 = new HomeTexture(homeTexture1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(10, homeTexture0, 10, homeTexture0, (-70), (byte) (-80));
      homeEnvironment0.clone();
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      catalogTexture2.setCategory(texturesCategory0);
      Random.setNextRandom((-2146336509));
      homeEnvironment0.getLightColor();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.046430838943019
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 0, 0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("&v/p='3jQA", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("&v/p='3jQA", propertyChangeListenerProxy0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("j? MCY4en", "j? MCY4en", "&v/p='3jQA", "j? MCY4en");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.WALLS_ALPHA;
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("&v/p='3jQA", propertyChangeListenerProxy0);
      Object object0 = new Object();
      propertyChangeListenerProxy2.propertyChange(propertyChangeEvent0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(propertyChangeListenerProxy0, "", object0, "");
      propertyChangeListenerProxy2.propertyChange(propertyChangeEvent1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy2);
      homeEnvironment0.setSubpartSizeUnderLight(0);
      homeEnvironment0.setLightColor(3245);
      homeEnvironment0.setWallsAlpha((-1185.2F));
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setSkyColor((-944));
      homeEnvironment0.setCeillingLightColor(3245);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getLightColor();
      homeEnvironment0.clone();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("PHOTO_ASPECT_RATIO", "PHOTO_ASPECT_RATIO", (Content) null, 0.0F, 431.7F, "7", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(11053224, homeTexture0, 1967, homeTexture0, (-1), (-2621.0F));
      homeEnvironment0.getSkyTexture();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-2621.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(1967, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-1), homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("w&mv-\"i[)|!m", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("lmmF5;p4+lA{)\"gtzu", propertyChangeListenerProxy0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("lmmF5;p4+lA{)\"gtzu", "3cy", "w&mv-\"i[)|!m", "w&mv-\"i[)|!m");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("lmmF5;p4+lA{)\"gtzu", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy(";PR ,!6)'G+;n,$", propertyChangeListenerProxy4);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(13684944);
      homeEnvironment0.clone();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("lmmF5;p4+lA{)\"gtzu");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.lmmF5;p4+lA{)\"gtzu
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera.Lens camera_Lens1 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera((-550.777F), (-1023.36475F), (-3289.919F), 0L, 0.0F, (-1023.36475F), 0L, camera_Lens1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Camera.convertTimeToTimeZone(0L, "");
      Camera.convertTimeToTimeZone(1325L, "VIDEO_WIDTH");
      Camera camera1 = new Camera(1392409281320L, 1392409281320L, 1.3333334F, 1.7777778F, (-3289.919F), (-1.0F), 2160L, camera_Lens0);
      Camera camera2 = new Camera((-3289.919F), 1.7777778F, (-3289.919F), (-1023.36475F), (-1.0F), 1.3333334F);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight((-1.0F));
      homeEnvironment0.clone();
      assertEquals((-1.0F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "P'z.O{C0,z?y^0");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2143261047, (HomeTexture) null, 10, (HomeTexture) null, 2143261047, 2143261047);
      homeEnvironment0.setGroundColor(1986);
      homeEnvironment0.setSkyColor(2143261047);
      homeEnvironment0.setCeillingLightColor(5);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.getVideoCameraPath();
      assertEquals(1986, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-80);
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      System.setCurrentTimeMillis((-1756L));
      homeEnvironment0.getPhotoAspectRatio();
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)37;
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 494.0F, 494.0F);
      CatalogTexture catalogTexture1 = new CatalogTexture("", (Content) null, (byte)37, 1684.5555F);
      catalogTexture0.compareTo(catalogTexture1);
      catalogTexture0.getCategory();
      catalogTexture0.compareTo(catalogTexture1);
      catalogTexture0.getCategory();
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture2 = new CatalogTexture("", "", (Content) null, (byte)37, 494.0F, "");
      catalogTexture2.setCategory((TexturesCategory) null);
      catalogTexture2.setCategory((TexturesCategory) null);
      catalogTexture0.compareTo(catalogTexture2);
      catalogTexture0.setCategory((TexturesCategory) null);
      CatalogTexture catalogTexture3 = new CatalogTexture("", resourceURLContent0, 1.3333334F, 494.0F, false);
      catalogTexture3.setCategory((TexturesCategory) null);
      CatalogTexture catalogTexture4 = new CatalogTexture("", (Content) null, 494.0F, 494.0F, false);
      catalogTexture0.setCategory((TexturesCategory) null);
      catalogTexture0.compareTo(catalogTexture4);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(0);
      catalogTexture4.compareTo(catalogTexture3);
      homeEnvironment0.clone();
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      // Undeclared exception!
      try { 
        texturesCategory0.getTexture((-275));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.286318134992075
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoQuality((-2191));
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setPhotoHeight(96);
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setSubpartSizeUnderLight((-3666.438F));
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.setSkyColor(8192);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setPhotoHeight(0);
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(8192, homeEnvironment0.getSkyColor());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.0549710111377664
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setVideoFrameRate((-586));
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setPhotoWidth((-3032));
      homeEnvironment0.getVideoFrameRate();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.getGroundColor();
      homeEnvironment1.getVideoWidth();
      homeEnvironment0.setAllLevelsVisible(false);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.setVideoWidth(8192);
      homeEnvironment1.isObserverCameraElevationAdjusted();
      System.setCurrentTimeMillis((-366L));
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals((-3032), int0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera((-2376.307F), (-2376.307F), (-2376.307F), (-1.0F), (-1.0F), 494.0F, 3385L, camera_Lens0);
      Camera.convertTimeToTimeZone(1684L, "com.eteks.sweethome3d.model.Camera$Lens");
      Camera.convertTimeToTimeZone(1325L, "");
      Camera.Lens camera_Lens1 = Camera.Lens.SPHERICAL;
      Camera camera1 = new Camera((-2754.267F), (-3873.5F), 631.2323F, 0.0F, (-1666.0F), 0.44995946F, 1325L, camera_Lens1);
      Camera camera2 = new Camera((-50.19254F), (-1.0F), (-4103.077F), (-3289.919F), 2.0F, (-687.4F));
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoHeight(2905);
      homeEnvironment0.clone();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", uRLContent0, 0, 1.0F, "j", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, homeTexture0, 11, 11);
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals(0, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(11, homeEnvironment0.getLightColor());
      assertEquals(11.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(25, int0);
      assertEquals(0, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("w&mv-\"i[)|!m", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("lmmF5;p4+lA{)\"gtzu", propertyChangeListenerProxy0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("lmmF5;p4+lA{)\"gtzu", "3cy", "w&mv-\"i[)|!m", "w&mv-\"i[)|!m");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("lmmF5;p4+lA{)\"gtzu", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy(";PR ,!6)'G+;n,$", propertyChangeListenerProxy4);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.clone();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("lmmF5;p4+lA{)\"gtzu");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.lmmF5;p4+lA{)\"gtzu
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.156606376293304
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_TEXTURE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListener1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.getVideoQuality();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.getLightColor();
      homeEnvironment0.setGroundColor((-626));
      homeEnvironment0.setVideoQuality(5);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.setSkyColor(13427964);
      assertEquals((-626), homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.170793809518273
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("VIDEO_QUALITY", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("user.home", propertyChangeListenerProxy0);
      homeEnvironment1.setWallsAlpha(2187.0F);
      homeEnvironment1.setGroundColor((-1121));
      homeEnvironment0.getSubpartSizeUnderLight();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment1.setVideoCameraPath(linkedList0);
      homeEnvironment0.setSubpartSizeUnderLight(1348.9978F);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getLightColor();
      homeEnvironment0.setVideoQuality(11053224);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment1.getPhotoQuality();
      homeEnvironment0.getSubpartSizeUnderLight();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_TEXTURE;
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("VIDEO_QUALITY", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("O@RXx3}/E`wj <#h", propertyChangeListenerProxy2);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("_$^M,x{");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property._$^M,x{
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("w&mv-\"i[)|!m", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("lmmF5;p4+lA{)\"gtzu", propertyChangeListenerProxy0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "Content isn't a JAR entry", "3cy", propertyChangeListenerProxy1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy2);
      propertyChangeListenerProxy2.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("8pLD&F,f;", propertyChangeListenerProxy3);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.clone();
      System.setCurrentTimeMillis(1827L);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-80);
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 494.0F, 494.0F);
      CatalogTexture catalogTexture1 = new CatalogTexture("", "", (Content) null, 1684.5555F, 1684.5555F, "", false);
      catalogTexture0.compareTo(catalogTexture1);
      catalogTexture0.getCategory();
      catalogTexture0.getCategory();
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture2 = new CatalogTexture("VP>G15(ah>QP#Eob5", "", (Content) null, (byte) (-80), 494.0F, "VP>G15(ah>QP#Eob5");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, 0, 1684.5555F);
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(0, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(0, homeEnvironment0.getGroundColor());
      assertEquals(400, int0);
      assertEquals(0, homeEnvironment0.getSkyColor());
      assertEquals(1684.5555F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-80);
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 493.67896F, 493.67896F);
      CatalogTexture catalogTexture1 = new CatalogTexture("/U5>d+29?fi0=", "", (Content) null, 1684.5555F, 1684.5555F, "", false);
      catalogTexture0.compareTo(catalogTexture1);
      catalogTexture0.getCategory();
      catalogTexture0.getCategory();
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture2 = new CatalogTexture("VP>G15(ah>QP#Eob5", "", (Content) null, (byte) (-80), 493.67896F, "VP>G15(ah>QP#Eob5");
      catalogTexture2.setCategory((TexturesCategory) null);
      catalogTexture0.compareTo(catalogTexture2);
      catalogTexture0.setCategory((TexturesCategory) null);
      catalogTexture2.compareTo(catalogTexture1);
      CatalogTexture catalogTexture3 = new CatalogTexture("", "VP>G15(ah>QP#Eob5", (Content) null, 0, 0, "", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture4 = new CatalogTexture("", resourceURLContent0, 1684.5555F, 0);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      catalogTexture0.setCategory((TexturesCategory) null);
      catalogTexture0.compareTo(catalogTexture4);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyTexture(homeTexture1);
      catalogTexture4.compareTo(catalogTexture3);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      texturesCategory0.getIndexOfTexture(catalogTexture2);
      catalogTexture4.setCategory(texturesCategory0);
      System.setCurrentTimeMillis(0);
      homeEnvironment0.getGroundTexture();
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.6454371383635378
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_TEXTURE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, propertyChangeListener1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getVideoQuality();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy1);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      propertyChangeListenerProxy4.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.model.Camera", propertyChangeListenerProxy3);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.clone();
      System.setCurrentTimeMillis((-1708L));
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera(0.44995946F, (-2376.307F), 1484.1133F, 1252.0F, 1644L, 1484.1133F, 1644L, camera_Lens0);
      Camera.convertTimeToTimeZone((-1067L), "QY2J");
      Camera.convertTimeToTimeZone(0L, "POTO_HEIGHT");
      Camera.Lens camera_Lens1 = Camera.Lens.SPHERICAL;
      Camera.Lens camera_Lens2 = Camera.Lens.SPHERICAL;
      Camera camera1 = new Camera(631.2323F, (-1067L), 2227.0F, 0.44995946F, 1661.547F, (-2269.0F), (-1L), camera_Lens2);
      Camera camera2 = new Camera(1661.547F, 1484.1133F, (-1667.8461F), 631.2323F, (-821.47894F), 2260.713F, 0L, camera_Lens1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(400);
      homeEnvironment0.clone();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.4990104312963837
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setVideoQuality((-2191));
      linkedList0.poll();
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setPhotoHeight(96);
      homeEnvironment0.getSubpartSizeUnderLight();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("w&mv-\"i[)|!m", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("lmmF5;p4+lA{)\"gtzu", propertyChangeListenerProxy0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("lmmF5;p4+lA{)\"gtzu", "cy", "w&mv-\"i[)|!m", "w&mv-\"i[)|!m");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("w&mv-\"i[)|!m", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("lmmF5;p4+lA{)\"gtzu", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("w&mv-\"i[)|!m", propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("cy", propertyChangeListenerProxy4);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSubpartSizeUnderLight(744.35F);
      homeEnvironment1.setLightColor(13684944);
      System.setCurrentTimeMillis((-1756L));
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(14);
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera0 = new Camera(418.41238F, (-565.37F), 0, 426.94864F, 1.5F, (-2145816367), 0, camera_Lens0);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "VIDEO_QUALITY", object0, object1);
      homeEnvironment0.setPhotoQuality((-2145816367));
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getPhotoWidth();
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("6Q^I+Y", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, (PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("i^6?jA')]Y_\"Y", propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.clone();
      homeEnvironment0.getGroundTexture();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.510020088134489
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setVideoQuality((-2191));
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.369978708581614
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      List<Camera> list0 = new LinkedList<Camera>();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setVideoFrameRate(25);
      homeEnvironment0.setVideoQuality((-2191));
      homeEnvironment0.setVideoWidth(25);
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      try { 
        MockURL.URL("G3FK~K:d|J`u&", "G3FK~K:d|J`u&", (-2191), "Qh7}O");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid port number :-2191
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.048820325203473
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment1.setPhotoHeight(1454);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Wl>E$`7`||H!2LZ[YV", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("user.home", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("user.home", propertyChangeListenerProxy1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "user.home");
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment1.isAllLevelsVisible();
      homeEnvironment1.setCeillingLightColor((-2130));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.LIGHT_COLOR;
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("Wl>E$`7`||H!2LZ[YV", propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment3 = homeEnvironment2.clone();
      homeEnvironment2.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment3.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy4);
      int int0 = homeEnvironment1.getVideoHeight();
      assertEquals((-2130), homeEnvironment1.getCeillingLightColor());
      assertEquals(240, int0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.5042900108961854
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      linkedList0.spliterator();
      homeEnvironment0.setVideoQuality((-2191));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      linkedList0.poll();
      homeEnvironment0.setVideoWidth((-1361));
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera(1325.0F, 1.0F, 1325.0F, 1.5F, 0.0F, 0, 0L, camera_Lens0);
      Camera camera1 = new Camera((-1130.0F), (-1962.52F), (-2191), 2477.9219F, 3604.9053F, 0.0F);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment0.clone();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("7b^y,");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.7b^y,
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-80);
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 493.67896F, 493.67896F);
      CatalogTexture catalogTexture1 = new CatalogTexture("/U5>d+29?fi0=", "", (Content) null, (byte) (-80), (byte) (-80), "", false);
      catalogTexture0.compareTo(catalogTexture1);
      catalogTexture0.getCategory();
      catalogTexture0.getCategory();
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture2 = new CatalogTexture("VP>G15(ah>QP#Eob5", "", (Content) null, (byte) (-80), 493.67896F, "VP>G15(ah>QP#Eob5");
      catalogTexture2.setCategory((TexturesCategory) null);
      catalogTexture0.compareTo(catalogTexture2);
      catalogTexture0.setCategory((TexturesCategory) null);
      catalogTexture2.compareTo(catalogTexture1);
      CatalogTexture catalogTexture3 = new CatalogTexture("", "VP>G15(ah>QP#Eob5", (Content) null, 0, 0, "", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture4 = new CatalogTexture("", resourceURLContent0, 493.67896F, 0);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((byte) (-80), (HomeTexture) null, 0, 46, 46);
      homeEnvironment0.setGroundTexture(homeTexture0);
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals(320, int0);
      
      int int1 = homeEnvironment0.getLightColor();
      assertEquals(46, int1);
      
      int int2 = homeEnvironment0.getSkyColor();
      int int3 = homeEnvironment0.getPhotoQuality();
      assertTrue(int3 == int2);
      
      Random.setNextRandom(0);
      HomeTexture homeTexture2 = homeEnvironment0.getGroundTexture();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(46.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals((-80), homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertNotNull(homeTexture2);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", (Content) null, 0.0F, 494.0F, "I d&N>R");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(13684944, homeTexture0, 13684944, 13684944, 13684944);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "F56h>Mq");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio FREE_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera((-550.777F), (-3289.919F), (-3289.919F), 0L, 0.0F, (-3289.919F), 0L, camera_Lens0);
      Camera.convertTimeToTimeZone(0L, "");
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("", "VIDEO_WIDTH", object0, object1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy(";PR ,!6)'G+;n,$", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoWidth(4);
      assertEquals(4, homeEnvironment1.getPhotoWidth());
      
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(4276L);
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals(400, int0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("w&mv-\"i[)|!m", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("lmmF5;p4+lA{)\"gtzu", propertyChangeListenerProxy0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("lmmF5;p4+lA{)\"gtzu", "3cy", "w&mv-\"i[)|!m", "w&mv-\"i[)|!m");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("lmmF5;p4+lA{)\"gtzu", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy3);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setPhotoWidth(400);
      homeEnvironment0.setPhotoWidth(400);
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("lmmF5;p4+lA{)\"gtzu");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.lmmF5;p4+lA{)\"gtzu
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getGroundTexture();
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.414789648521252
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_TEXTURE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, propertyChangeListener1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getVideoQuality();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setWallsAlpha(1.0F);
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.getLightColor();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoQuality(13684944);
      homeEnvironment1.setGroundColor(1);
      homeEnvironment1.setVideoQuality(328);
      homeEnvironment1.getPhotoHeight();
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.setSkyColor((-586));
      float float0 = homeEnvironment1.getWallsAlpha();
      assertEquals(0, homeEnvironment0.getGroundColor());
      assertEquals(1.0F, float0, 0.01F);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera(494.0F, 494.0F, 0.0F, 0.44995946F, 494.0F, (-2376.307F), 1644L, camera_Lens0);
      Camera.convertTimeToTimeZone(1644L, "'<# k2k <'ULFZ");
      Camera.convertTimeToTimeZone(4116L, "PHOTO_HEIGHT");
      Camera.Lens camera_Lens1 = Camera.Lens.SPHERICAL;
      Camera camera1 = new Camera(1392409281320L, 2.0F, 1392409281320L, 2.0F, 1392409281320L, 494.0F, 1644L, camera_Lens1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Camera camera2 = new Camera(494.0F, (-2376.307F), 1325L, (-285.34F), 2.0F, 1.3333334F);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(0.0F);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      long long0 = 1644L;
      Camera camera0 = new Camera(494.0F, 494.0F, 0.0F, 0.44995946F, 494.0F, (-2376.307F), 1644L, camera_Lens0);
      String string0 = "'<# k2k <'ULFZ";
      Camera.convertTimeToTimeZone(1644L, "'<# k2k <'ULFZ");
      String string1 = "POTO_HEIGHT";
      Camera.convertTimeToTimeZone(4116L, "POTO_HEIGHT");
      Camera.Lens camera_Lens1 = Camera.Lens.SPHERICAL;
      Camera camera1 = new Camera(1392409281320L, 2.0F, 1392409281320L, 2.0F, 1392409281320L, 494.0F, 1644L, camera_Lens1);
      Camera camera2 = new Camera((-285.34F), (-2376.307F), 494.0F, 4116L, 0.44995946F, (-2376.307F), 1392409281320L, camera_Lens0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      Class<Integer> class0 = Integer.class;
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(class0, "POTO_HEIGHT");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource POTO_HEIGHT
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("", "", (Object) null, propertyChangeListenerProxy0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("w&mv-\"i[)|!m", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("L}SIY!\"", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("3cy", propertyChangeListenerProxy1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1846, (HomeTexture) null, 349, 349, (-34.422F));
      homeEnvironment0.clone();
      System.setCurrentTimeMillis((-33L));
      System.setCurrentTimeMillis(349);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-80);
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 493.67896F, 493.67896F);
      CatalogTexture catalogTexture1 = new CatalogTexture("/U5>d+29?fi0=", "", (Content) null, 1684.5555F, 1684.5555F, "", false);
      catalogTexture0.compareTo(catalogTexture1);
      catalogTexture0.getCategory();
      catalogTexture0.getCategory();
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture2 = new CatalogTexture("VP>G15(ah>QP#Eob5", "", (Content) null, (byte) (-80), 493.67896F, "VP>G15(ah>QP#Eob5");
      catalogTexture2.setCategory((TexturesCategory) null);
      catalogTexture0.compareTo(catalogTexture2);
      catalogTexture0.setCategory((TexturesCategory) null);
      catalogTexture2.compareTo(catalogTexture1);
      CatalogTexture catalogTexture3 = new CatalogTexture("", "VP>G15(ah>QP#Eob5", (Content) null, 0, 0, "", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture4 = new CatalogTexture("", resourceURLContent0, 1684.5555F, 0);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, homeTexture0, (byte) (-80), 493.67896F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals((-80), homeEnvironment1.getLightColor());
      assertEquals(0, homeEnvironment1.getSkyColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(493.67896F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(0, homeEnvironment1.getGroundColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertNotSame(homeEnvironment1, homeEnvironment0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      byteArray0[0] = (byte) (-80);
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 494.0F, 494.0F);
      CatalogTexture catalogTexture1 = new CatalogTexture("", "", (Content) null, 1684.5555F, 1684.5555F, "", false);
      catalogTexture0.compareTo(catalogTexture1);
      catalogTexture0.getCategory();
      catalogTexture0.getCategory();
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture2 = new CatalogTexture("VP>G15(ah>QP#Eob5", "", (Content) null, (byte) (-80), 494.0F, "VP>G15(ah>QP#Eob5");
      catalogTexture2.setCategory((TexturesCategory) null);
      catalogTexture0.compareTo(catalogTexture2);
      catalogTexture0.setCategory((TexturesCategory) null);
      CatalogTexture catalogTexture3 = new CatalogTexture("", "VP>G15(ah>QP#Eob5", (Content) null, 0, 0, "", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture4 = new CatalogTexture("", (Content) null, 494.0F, 494.0F, false);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      catalogTexture0.setCategory((TexturesCategory) null);
      catalogTexture0.compareTo(catalogTexture4);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture1, (byte) (-80), homeTexture1, 0, 494.0F);
      catalogTexture4.compareTo(catalogTexture3);
      homeEnvironment0.clone();
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      texturesCategory0.getIndexOfTexture(catalogTexture2);
      catalogTexture4.setCategory(texturesCategory0);
      System.setCurrentTimeMillis((-1756L));
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("lmmF5;p4+lA{)\"gtzu", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("lmmF5;p4+lA{)\"gtzu", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("lmmF5;p4+lA{)\"gtzu", propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-24), (HomeTexture) null, (-24), (-24), 2297.8F);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("lmmF5;p4+lA{)\"gtzu", "YHGsva0q/lak/cZyn", homeEnvironment0, "LIGHT_COLOR");
      propertyChangeListenerProxy2.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy2.propertyChange(propertyChangeEvent0);
      propertyChangeEvent0.toString();
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("lmmF5;p4+lA{)\"gtzu", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("3cy", propertyChangeListenerProxy2);
      propertyChangeListenerProxy2.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy4.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("lmmF5;p4+lA{)\"gtzu", propertyChangeListenerProxy4);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("LIGHT_COLOR", propertyChangeListenerProxy5);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment0.clone();
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.getDrawingMode();
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-80);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 494.0F, 494.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture1 = new CatalogTexture("/7c$F]9Vha%_v-o:", resourceURLContent0, 0.0F, (-3665), false);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture1);
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture2 = new CatalogTexture("AI6:Z<BA", uRLContent0, (-1287.0164F), (-3665));
      HomeEnvironment.DrawingMode.values();
      HomeTexture homeTexture2 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1263, homeTexture2, (-2680), 2144058634, 1224.0F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(1224.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals((-2680), homeEnvironment0.getSkyColor());
      assertEquals(2144058634, homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(1263, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      Camera.convertTimeToTimeZone(0L, "");
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera((-2112.2815F), (-3334.97F), 1392409281320L, (-3334.97F), 0L, (-3334.97F), (-1L), camera_Lens0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(33);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.6439556568820564
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setVideoQuality((-2191));
      linkedList0.poll();
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setPhotoHeight(96);
      homeEnvironment0.getSubpartSizeUnderLight();
      Camera.convertTimeToTimeZone((-1513L), "VIDEO_CAMERA_PATH");
      Camera.convertTimeToTimeZone((-657L), "");
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera(1226.0461F, 1226.0461F, 96, 96, (-2270.2507F), 4116L, (-2191), camera_Lens0);
      Camera.Lens camera_Lens1 = Camera.Lens.NORMAL;
      Camera camera1 = new Camera(1.5F, (-2191), (-285.34F), (-285.34F), (-285.34F), (-657L), 96, camera_Lens1);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment0.clone();
      assertEquals(96, homeEnvironment0.getPhotoHeight());
  }
}
