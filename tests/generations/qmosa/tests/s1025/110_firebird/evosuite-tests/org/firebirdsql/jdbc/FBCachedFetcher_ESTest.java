/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 15:04:36 GMT 2019
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.concurrent.LinkedBlockingDeque;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.PriorityBlockingQueue;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.ThreadFactory;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import java.util.function.Consumer;
import javax.management.remote.JMXPrincipal;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.firebirdsql.gds.GDS;
import org.firebirdsql.gds.IscDbHandle;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.GDSType;
import org.firebirdsql.gds.impl.jni.EmbeddedGDSImpl;
import org.firebirdsql.gds.impl.jni.isc_db_handle_impl;
import org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.wire.JavaGDSImpl;
import org.firebirdsql.gds.impl.wire.XdrOutputStream;
import org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_svc_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_tr_handle_impl;
import org.firebirdsql.jca.FBConnectionRequestInfo;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBFetcher;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.FBSQLException;
import org.firebirdsql.jdbc.field.FBLongVarCharField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.4055250768656427
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Locale locale0 = Locale.CHINESE;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Integer[] integerArray0 = new Integer[1];
      Integer integer0 = new Integer(2594);
      integerArray0[0] = integer0;
      linkedList1.toArray(integerArray0);
      PriorityBlockingQueue<String> priorityBlockingQueue0 = new PriorityBlockingQueue<String>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) priorityBlockingQueue0);
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) linkedHashSet0, locale_FilteringMode0);
      locale0.getDisplayName();
      LinkedBlockingQueue<Locale> linkedBlockingQueue0 = new LinkedBlockingQueue<Locale>();
      Locale.lookupTag(linkedList2, set0);
      locale0.getDisplayCountry((Locale) null);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      LinkedBlockingDeque<Locale> linkedBlockingDeque0 = new LinkedBlockingDeque<Locale>();
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedBlockingDeque0, locale_FilteringMode1);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl.printRow((byte[][]) null);
      isc_stmt_handle_impl0.clearRows();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      boolean boolean0 = fBCachedFetcher0.relative(241);
      boolean boolean1 = fBCachedFetcher0.previous();
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.509031976902076
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Locale locale0 = Locale.CHINESE;
      locale0.getUnicodeLocaleKeys();
      LinkedBlockingQueue<Locale> linkedBlockingQueue0 = new LinkedBlockingQueue<Locale>();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.clearRows();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      databaseParameterBufferImp0.write((XdrOutputStream) null);
      XdrOutputStream xdrOutputStream0 = isc_svc_handle_impl0.out;
      isc_svc_handle_impl isc_svc_handle_impl1 = new isc_svc_handle_impl();
      isc_svc_handle_impl1.setResp_object((-1485));
      XdrOutputStream xdrOutputStream1 = isc_svc_handle_impl1.out;
      linkedList0.add((byte[][]) null);
      databaseParameterBufferImp0.write((XdrOutputStream) null);
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_tr_handle_impl0.forgetResultSets();
      isc_tr_handle_impl0.forgetResultSets();
      isc_tr_handle_impl0.getDbHandle();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.updateRow((byte[][]) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = fBCachedFetcher0.isEmpty();
      boolean boolean1 = fBCachedFetcher0.absolute((-1));
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.2014023220140038
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Locale locale0 = Locale.CHINESE;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Integer[] integerArray0 = new Integer[1];
      Integer integer0 = new Integer(2594);
      integerArray0[0] = integer0;
      linkedList1.toArray(integerArray0);
      PriorityBlockingQueue<String> priorityBlockingQueue0 = new PriorityBlockingQueue<String>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) priorityBlockingQueue0);
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      locale0.getDisplayName();
      LinkedBlockingQueue<Locale> linkedBlockingQueue0 = new LinkedBlockingQueue<Locale>();
      Locale.lookupTag(linkedList2, set0);
      locale0.getDisplayCountry((Locale) null);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      LinkedBlockingDeque<Locale> linkedBlockingDeque0 = new LinkedBlockingDeque<Locale>();
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedBlockingDeque0, locale_FilteringMode0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl.printRow((byte[][]) null);
      isc_stmt_handle_impl0.clearRows();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.relative(241);
      boolean boolean0 = fBCachedFetcher0.previous();
      assertTrue(fBCachedFetcher0.isLast());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.656060983429676
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Locale locale0 = Locale.CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedBlockingQueue<Locale> linkedBlockingQueue0 = new LinkedBlockingQueue<Locale>();
      Locale.lookupTag(linkedList1, set0);
      locale0.getDisplayCountry((Locale) null);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedBlockingQueue0, locale_FilteringMode0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.clearRows();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      databaseParameterBufferImp0.write((XdrOutputStream) null);
      XdrOutputStream xdrOutputStream0 = isc_svc_handle_impl0.out;
      isc_svc_handle_impl isc_svc_handle_impl1 = new isc_svc_handle_impl();
      XdrOutputStream xdrOutputStream1 = isc_svc_handle_impl1.out;
      linkedList0.add((byte[][]) null);
      databaseParameterBufferImp0.write((XdrOutputStream) null);
      FBConnectionRequestInfo fBConnectionRequestInfo0 = new FBConnectionRequestInfo(databaseParameterBufferImp0);
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_tr_handle_impl0.forgetResultSets();
      isc_tr_handle_impl0.forgetResultSets();
      isc_tr_handle_impl0.getDbHandle();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl1 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_tr_handle_impl0.registerStatementWithTransaction(isc_stmt_handle_impl1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.updateRow((byte[][]) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.updateRow((byte[][]) null);
      fBCachedFetcher0.relative(2);
      fBCachedFetcher0.insertRow((byte[][]) null);
      assertEquals(0, fBCachedFetcher0.getFetchSize());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Locale locale0 = Locale.CHINESE;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      linkedList0.pollLast();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList4 = new LinkedList<byte[][]>();
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      doReturn((Thread) null).when(threadFactory0).newThread(any(java.lang.Runnable.class));
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor((byte)112, threadFactory0);
      MockThread.currentThread();
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread();
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      scheduledThreadPoolExecutor0.schedule((Runnable) mockThread0, 1L, timeUnit0);
      linkedList4.remove((Object) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedList<byte[][]> linkedList5 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList3, fBResultSet0);
      try { 
        fBCachedFetcher0.absolute((byte)0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.155876983332906
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Locale locale0 = Locale.CHINESE;
      locale0.getDisplayLanguage();
      locale0.getUnicodeLocaleAttributes();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setSingletonResult(true);
      isc_stmt_handle_impl0.clearRows();
      isc_stmt_handle_impl0.clearRows();
      isc_stmt_handle_impl0.clearRows();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      databaseParameterBufferImp0.write((XdrOutputStream) null);
      XdrOutputStream xdrOutputStream0 = isc_svc_handle_impl0.out;
      databaseParameterBufferImp0.write((XdrOutputStream) null);
      FBConnectionRequestInfo fBConnectionRequestInfo0 = new FBConnectionRequestInfo(databaseParameterBufferImp0);
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Result set is TYPE_FORWARD_ONLY");
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.first();
      fBCachedFetcher0.relative(0);
      int int0 = FBFetcher.MAX_FETCH_ROWS;
      assertEquals(400, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.384725757834036
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Locale locale0 = Locale.CHINESE;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      PriorityBlockingQueue<String> priorityBlockingQueue0 = new PriorityBlockingQueue<String>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) priorityBlockingQueue0);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      locale0.getDisplayName();
      LinkedBlockingQueue<Locale> linkedBlockingQueue0 = new LinkedBlockingQueue<Locale>();
      locale0.getDisplayCountry((Locale) null);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      linkedList3.add((Locale.LanguageRange) null);
      LinkedBlockingDeque<Locale> linkedBlockingDeque0 = new LinkedBlockingDeque<Locale>();
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedBlockingDeque0, locale_FilteringMode0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl.printRow((byte[][]) null);
      isc_stmt_handle_impl0.clearRows();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      XdrOutputStream xdrOutputStream0 = isc_svc_handle_impl0.out;
      isc_svc_handle_impl isc_svc_handle_impl1 = new isc_svc_handle_impl();
      XdrOutputStream xdrOutputStream1 = isc_svc_handle_impl0.out;
      databaseParameterBufferImp0.write((XdrOutputStream) null);
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_tr_handle_impl0.forgetResultSets();
      isc_tr_handle_impl0.forgetResultSets();
      isc_tr_handle_impl0.getDbHandle();
      LinkedList<byte[][]> linkedList4 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList4, fBResultSet0);
      LinkedList<byte[][]> linkedList5 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList6 = new LinkedList<byte[][]>();
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.447274622304046
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Locale locale0 = Locale.CHINESE;
      locale0.getDisplayLanguage();
      locale0.getUnicodeLocaleAttributes();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setSingletonResult(true);
      isc_stmt_handle_impl0.clearRows();
      isc_stmt_handle_impl0.clearRows();
      isc_stmt_handle_impl0.clearRows();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      databaseParameterBufferImp0.write((XdrOutputStream) null);
      XdrOutputStream xdrOutputStream0 = isc_svc_handle_impl0.out;
      databaseParameterBufferImp0.write((XdrOutputStream) null);
      FBConnectionRequestInfo fBConnectionRequestInfo0 = new FBConnectionRequestInfo(databaseParameterBufferImp0);
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_tr_handle_impl0.forgetResultSets();
      isc_tr_handle_impl0.forgetResultSets();
      isc_tr_handle_impl0.getDbHandle();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList2, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.updateRow((byte[][]) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.next();
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.insertRow((byte[][]) null);
      assertEquals(1, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.995295628324261
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Locale locale0 = Locale.CHINESE;
      locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedBlockingQueue<Locale> linkedBlockingQueue0 = new LinkedBlockingQueue<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedBlockingQueue0, locale_FilteringMode0);
      boolean boolean0 = linkedList0.offer((byte[][]) null);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      Consumer<byte[][]> consumer0 = (Consumer<byte[][]>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      FBLongVarCharField[] fBLongVarCharFieldArray0 = new FBLongVarCharField[3];
      FBLongVarCharField fBLongVarCharField0 = mock(FBLongVarCharField.class, new ViolatedAssumptionAnswer());
      fBLongVarCharFieldArray0[0] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[1] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[2] = fBLongVarCharField0;
      linkedList0.toArray(fBLongVarCharFieldArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean1 = fBCachedFetcher0.last();
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.28647799845853
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Locale locale0 = Locale.CHINESE;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      PriorityBlockingQueue<String> priorityBlockingQueue0 = new PriorityBlockingQueue<String>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) priorityBlockingQueue0);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      LinkedBlockingQueue<Locale> linkedBlockingQueue0 = new LinkedBlockingQueue<Locale>();
      locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      locale0.getDisplayName();
      LinkedBlockingQueue<Locale> linkedBlockingQueue1 = new LinkedBlockingQueue<Locale>();
      Locale locale1 = Locale.US;
      locale1.getDisplayCountry(locale0);
      locale1.getDisplayCountry(locale0);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<byte[][]> linkedList5 = new LinkedList<byte[][]>();
      linkedList5.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList5, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      linkedList5.removeAll(linkedBlockingQueue0);
      fBCachedFetcher0.deleteRow();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertTrue(fBCachedFetcher0.isFirst());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.0665970084507888
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.beforeFirst();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.previous();
      linkedList0.addFirst((byte[][]) null);
      fBCachedFetcher0.relative((-1973));
      fBCachedFetcher1.isLast();
      fBCachedFetcher1.insertRow((byte[][]) null);
      fBCachedFetcher1.updateRow((byte[][]) null);
      fBCachedFetcher1.deleteRow();
      fBCachedFetcher1.getRowNum();
      boolean boolean1 = fBCachedFetcher1.isFirst();
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.listIterator();
      linkedList0.pollLast();
      linkedList0.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.2817856971497052
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.iterator();
      linkedList0.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      linkedList0.spliterator();
      FBResultSet fBResultSet1 = new FBResultSet(fBResultSet0.xsqlvars, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet1);
      fBCachedFetcher0.isFirst();
      fBCachedFetcher0.next();
      fBCachedFetcher0.relative(2468);
      fBCachedFetcher0.isBeforeFirst();
      fBCachedFetcher0.relative((byte)127);
      fBCachedFetcher0.relative((-13));
      try { 
        fBResultSet1.getBlob("Result set is TYPE_FORWARD_ONLY");
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // The resultSet is not in a row, use next
         //
         verifyException("org.firebirdsql.jdbc.AbstractResultSet", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7754337976947767
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.pollLast();
      linkedList0.add((byte[][]) null);
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[5][3];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[9];
      byteArray2[0] = (byte)57;
      byteArray2[1] = (byte)117;
      byteArray2[2] = (byte)68;
      byteArray2[3] = (byte)85;
      byteArray2[4] = (byte)100;
      byteArray2[5] = (byte)0;
      byteArray2[6] = (byte) (-112);
      byteArray2[7] = (byte) (-102);
      byteArray2[8] = (byte) (-10);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[3];
      byteArray3[0] = (byte) (-2);
      byteArray3[1] = (byte) (-102);
      byteArray3[2] = (byte)0;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[5];
      byteArray4[0] = (byte) (-102);
      byteArray4[1] = (byte)57;
      byteArray4[2] = (byte) (-2);
      byteArray4[3] = (byte) (-102);
      byteArray4[4] = (byte) (-82);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[8];
      byteArray5[0] = (byte) (-10);
      byteArray5[1] = (byte) (-112);
      byteArray5[2] = (byte) (-112);
      byteArray5[3] = (byte) (-2);
      byteArray5[4] = (byte)100;
      byteArray5[5] = (byte)0;
      byteArray5[6] = (byte)117;
      byteArray5[7] = (byte) (-112);
      byteArray0[4] = byteArray5;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<C8?%>(>)X&");
      FileSystemHandling.shouldAllThrowIOExceptions();
      ThreadPoolExecutor.DiscardOldestPolicy threadPoolExecutor_DiscardOldestPolicy0 = new ThreadPoolExecutor.DiscardOldestPolicy();
      Thread thread0 = MockThread.currentThread();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(0, threadPoolExecutor_DiscardOldestPolicy0);
      threadPoolExecutor_DiscardOldestPolicy0.rejectedExecution(thread0, scheduledThreadPoolExecutor0);
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor1 = new ScheduledThreadPoolExecutor(3686, threadFactory0, threadPoolExecutor_DiscardOldestPolicy0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<C8?%>(>)X&");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      // Undeclared exception!
      try { 
        fBCachedFetcher0.first();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[7][4];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)100;
      byteArray1[1] = (byte) (-101);
      byteArray1[2] = (byte) (-48);
      byteArray1[3] = (byte) (-55);
      byteArray1[4] = (byte)88;
      byteArray1[5] = (byte)19;
      byteArray1[6] = (byte)116;
      byteArray1[7] = (byte)87;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[1];
      byteArray2[0] = (byte) (-48);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[7];
      byteArray3[0] = (byte)100;
      byteArray3[1] = (byte)19;
      byteArray3[2] = (byte) (-101);
      byteArray3[3] = (byte)87;
      byteArray3[4] = (byte) (-55);
      byteArray3[5] = (byte)88;
      byteArray3[6] = (byte) (-48);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[6];
      byteArray4[0] = (byte) (-48);
      byteArray4[1] = (byte) (-48);
      byteArray4[2] = (byte)88;
      byteArray4[3] = (byte) (-55);
      byteArray4[4] = (byte) (-48);
      byteArray4[5] = (byte)100;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[2];
      byteArray5[0] = (byte)116;
      byteArray5[1] = (byte)19;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[2];
      byteArray6[0] = (byte)100;
      byteArray6[1] = (byte)100;
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[5];
      byteArray7[0] = (byte) (-48);
      byteArray7[1] = (byte)87;
      byteArray7[2] = (byte)100;
      byteArray7[3] = (byte)19;
      byteArray7[4] = (byte) (-48);
      byteArray0[6] = byteArray7;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute((-226));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.6675530205253588
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-12);
      byte[] byteArray1 = new byte[14];
      byteArray1[0] = (byte)100;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "N=s'YgW-L'4:8qPM");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "N=s'YgW-L'4:8qPM");
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>(linkedList0);
      FBLongVarCharField[] fBLongVarCharFieldArray0 = new FBLongVarCharField[8];
      FBLongVarCharField fBLongVarCharField0 = mock(FBLongVarCharField.class, new ViolatedAssumptionAnswer());
      fBLongVarCharFieldArray0[0] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[1] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[2] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[3] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[4] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[5] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[6] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[7] = fBLongVarCharField0;
      linkedList1.toArray(fBLongVarCharFieldArray0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean1 = fBCachedFetcher1.absolute(4833);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.absolute((-10));
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      GDSType.getType(".|:");
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.removeExtensionParams();
      FBConnectionRequestInfo fBConnectionRequestInfo0 = new FBConnectionRequestInfo(databaseParameterBufferImp0);
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp3 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener1 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp4 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      JavaGDSImpl javaGDSImpl1 = new JavaGDSImpl();
      JavaGDSImpl javaGDSImpl2 = new JavaGDSImpl();
      GDSType gDSType0 = javaGDSImpl2.getType();
      EmbeddedGDSImpl embeddedGDSImpl0 = null;
      try {
        embeddedGDSImpl0 = new EmbeddedGDSImpl(gDSType0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) null, (FBObjectListener.FetcherListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.796328015521425
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList1.add((byte[][]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "wq>-fQp");
      FBResultSet fBResultSet1 = new FBResultSet(xSQLVARArray0, linkedList1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet1);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList1, fBResultSet1);
      fBCachedFetcher1.next();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_tr_handle_impl0.forgetResultSets();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      JavaGDSImpl javaGDSImpl1 = new JavaGDSImpl();
      javaGDSImpl1.getType();
      // Undeclared exception!
      try { 
        javaGDSImpl1.iscDetachDatabase(isc_db_handle_impl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList0.forEach(consumer0);
      linkedList0.pollLast();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)35;
      byteArray0[1] = (byte)126;
      linkedList0.iterator();
      byteArray0[3] = (byte)127;
      byteArray0[4] = (byte)127;
      linkedList0.add((byte[][]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      LinkedBlockingDeque<FBLongVarCharField> linkedBlockingDeque0 = new LinkedBlockingDeque<FBLongVarCharField>();
      linkedList0.retainAll(linkedBlockingDeque0);
      byteArray0[3] = (byte) (-40);
      byteArray0[6] = (byte) (-89);
      linkedList0.spliterator();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isFirst();
      boolean boolean0 = fBCachedFetcher0.next();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Locale locale0 = Locale.CHINESE;
      locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedBlockingQueue<Locale> linkedBlockingQueue0 = new LinkedBlockingQueue<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedBlockingQueue0, locale_FilteringMode0);
      linkedList0.offer((byte[][]) null);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      Consumer<byte[][]> consumer0 = (Consumer<byte[][]>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList0.forEach(consumer0);
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      linkedList2.clear();
      LinkedList<byte[][]> linkedList4 = new LinkedList<byte[][]>(linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      LinkedList<byte[][]> linkedList5 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList6 = new LinkedList<byte[][]>();
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.1437065979373684
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList0.forEach(consumer0);
      linkedList0.pollLast();
      linkedList0.add((byte[][]) null);
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.afterLast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl2.clearRows();
      byte[][] byteArray0 = new byte[3][8];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-4);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[1];
      byteArray2[0] = (byte) (-4);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[8];
      byteArray3[0] = (byte) (-4);
      byteArray3[1] = (byte) (-4);
      byteArray3[2] = (byte) (-4);
      byteArray3[3] = (byte) (-4);
      byteArray3[4] = (byte) (-4);
      byteArray3[5] = (byte) (-4);
      byteArray3[6] = (byte) (-4);
      byteArray3[7] = (byte) (-4);
      byteArray0[2] = byteArray3;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = fBCachedFetcher0.isBeforeFirst();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.8809457317913751
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Locale locale0 = Locale.CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      locale0.getDisplayName();
      LinkedBlockingQueue<Locale> linkedBlockingQueue0 = new LinkedBlockingQueue<Locale>();
      Locale.lookupTag(linkedList1, set0);
      locale0.getDisplayCountry((Locale) null);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedBlockingQueue0, locale_FilteringMode0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      byte[][] byteArray0 = new byte[3][7];
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)87;
      byteArray1[1] = (byte) (-1);
      byteArray1[2] = (byte)4;
      byteArray1[3] = (byte)62;
      byteArray1[4] = (byte)0;
      byteArray1[5] = (byte)53;
      byteArray1[6] = (byte)108;
      byteArray1[7] = (byte)79;
      byteArray1[8] = (byte) (-69);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[0];
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[8];
      byteArray3[0] = (byte) (-69);
      byteArray3[1] = (byte)0;
      byteArray3[2] = (byte)4;
      byteArray3[3] = (byte) (-1);
      byteArray3[4] = (byte) (-1);
      byteArray3[5] = (byte)53;
      byteArray3[6] = (byte) (-34);
      byteArray3[7] = (byte)79;
      byteArray0[2] = byteArray3;
      isc_stmt_handle_impl.printRow(byteArray0);
      isc_stmt_handle_impl.printRow((byte[][]) null);
      isc_stmt_handle_impl0.clearRows();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.relative((-2677));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = fBCachedFetcher0.getRowNum();
      assertEquals(0, int0);
      
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.setFetchSize(0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher1.next();
      fBCachedFetcher1.isEmpty();
      fBCachedFetcher0.next();
      fBCachedFetcher0.setFetchSize(84);
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.relative(0);
      fBCachedFetcher0.relative((-1));
      fBCachedFetcher1.isLast();
      FBCachedFetcher fBCachedFetcher2 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher2.afterLast();
      fBCachedFetcher1.beforeFirst();
      fBCachedFetcher0.first();
      fBCachedFetcher0.getFetchSize();
      fBCachedFetcher0.isLast();
      fBCachedFetcher1.getFetchSize();
      fBCachedFetcher2.absolute((-3080));
      // Undeclared exception!
      try { 
        fBCachedFetcher1.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[7][0];
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte) (-34);
      byteArray1[1] = (byte)1;
      byteArray1[2] = (byte) (-39);
      byteArray1[3] = (byte) (-19);
      byteArray1[4] = (byte) (-1);
      byteArray1[5] = (byte) (-29);
      byteArray1[6] = (byte) (-35);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte) (-35);
      byteArray2[1] = (byte) (-34);
      byteArray2[2] = (byte)1;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[0];
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[9];
      byteArray4[0] = (byte) (-1);
      byteArray4[1] = (byte) (-29);
      byteArray4[2] = (byte) (-112);
      byteArray4[3] = (byte) (-19);
      byteArray4[4] = (byte) (-34);
      byteArray4[5] = (byte) (-34);
      byteArray4[6] = (byte)1;
      byteArray4[7] = (byte) (-34);
      byteArray4[8] = (byte) (-39);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[3];
      byteArray5[0] = (byte) (-1);
      byteArray5[1] = (byte) (-35);
      byteArray5[2] = (byte) (-19);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[4];
      byteArray6[0] = (byte) (-1);
      byteArray6[1] = (byte) (-29);
      byteArray6[2] = (byte) (-39);
      byteArray6[3] = (byte) (-35);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[4];
      byteArray7[0] = (byte) (-112);
      byteArray7[1] = (byte) (-34);
      byteArray7[2] = (byte) (-34);
      byteArray7[3] = (byte) (-1);
      byteArray0[6] = byteArray7;
      linkedList0.push(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.listIterator();
      byte[][] byteArray0 = new byte[11][4];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.close();
      FileSystemHandling.shouldAllThrowIOExceptions();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_tr_handle_impl0.forgetResultSets();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      JavaGDSImpl javaGDSImpl1 = new JavaGDSImpl();
      javaGDSImpl1.getType();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl0.getRsr_rdb();
      try { 
        javaGDSImpl1.iscDetachDatabase((IscDbHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      boolean boolean0 = linkedList1.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean1 = fBCachedFetcher0.isBeforeFirst();
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<C8?%>(>)X&");
      FileSystemHandling.shouldAllThrowIOExceptions();
      ThreadPoolExecutor.DiscardOldestPolicy threadPoolExecutor_DiscardOldestPolicy0 = new ThreadPoolExecutor.DiscardOldestPolicy();
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      doReturn((Thread) null).when(threadFactory0).newThread(any(java.lang.Runnable.class));
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(106, threadFactory0, threadPoolExecutor_DiscardOldestPolicy0);
      Thread thread0 = MockThread.currentThread();
      MockThread mockThread0 = new MockThread(thread0, "3B[");
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread1 = new MockThread(threadGroup0, mockThread0);
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      scheduledThreadPoolExecutor0.schedule((Runnable) thread0, 3420L, timeUnit0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<C8?%>(>)X&");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<C8?%>(>)X&");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<C8?%>(>)X&");
      boolean boolean0 = fBCachedFetcher0.first();
      assertFalse(boolean0);
      assertFalse(fBCachedFetcher0.isFirst());
      
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<C8?%>(>)X&");
      FileSystemHandling.shouldAllThrowIOExceptions();
      ThreadPoolExecutor.DiscardOldestPolicy threadPoolExecutor_DiscardOldestPolicy0 = new ThreadPoolExecutor.DiscardOldestPolicy();
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      doReturn((Thread) null).when(threadFactory0).newThread(any(java.lang.Runnable.class));
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(106, threadFactory0, threadPoolExecutor_DiscardOldestPolicy0);
      Thread thread0 = MockThread.currentThread();
      MockThread mockThread0 = new MockThread(thread0, "3B[");
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread1 = new MockThread(threadGroup0, mockThread0);
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      scheduledThreadPoolExecutor0.schedule((Runnable) thread0, 3420L, timeUnit0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<C8?%>(>)X&");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean1 = fBCachedFetcher0.isEmpty();
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList0.forEach(consumer0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setSingletonResult(true);
      isc_stmt_handle_impl0.clearRows();
      isc_stmt_handle_impl0.clearRows();
      isc_stmt_handle_impl0.clearRows();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl1.clearRows();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      FBConnectionRequestInfo fBConnectionRequestInfo0 = new FBConnectionRequestInfo(databaseParameterBufferImp0);
      isc_stmt_handle_impl1.removeRows();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_tr_handle_impl0.unregisterStatementFromTransaction(isc_stmt_handle_impl1);
      isc_tr_handle_impl0.getDbHandle();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, fBConnectionRequestInfo0, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.setFetchSize(16384);
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.9487205928347628
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[3][2];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)87;
      byteArray1[1] = (byte) (-85);
      byteArray1[2] = (byte)107;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[8];
      byteArray2[0] = (byte)87;
      byteArray2[1] = (byte) (-85);
      byteArray2[2] = (byte) (-2);
      byteArray2[3] = (byte)107;
      byteArray2[4] = (byte) (-85);
      byteArray2[5] = (byte)107;
      byteArray2[6] = (byte)118;
      byteArray2[7] = (byte) (-85);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[7];
      byteArray3[0] = (byte)118;
      byteArray3[1] = (byte)118;
      byteArray3[2] = (byte)107;
      byteArray3[3] = (byte)107;
      byteArray3[4] = (byte) (-85);
      byteArray3[5] = (byte) (-2);
      byteArray3[6] = (byte)118;
      byteArray0[2] = byteArray3;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5935041414150646
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<C8?%>(>)X&");
      FileSystemHandling.shouldAllThrowIOExceptions();
      ThreadPoolExecutor.DiscardOldestPolicy threadPoolExecutor_DiscardOldestPolicy0 = new ThreadPoolExecutor.DiscardOldestPolicy();
      Thread thread0 = MockThread.currentThread();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(0, threadPoolExecutor_DiscardOldestPolicy0);
      threadPoolExecutor_DiscardOldestPolicy0.rejectedExecution(thread0, scheduledThreadPoolExecutor0);
      MockThread mockThread0 = new MockThread();
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread1 = new MockThread(threadGroup0, thread0);
      mockThread1.getContextClassLoader();
      scheduledThreadPoolExecutor0.isTerminated();
      ThreadGroup threadGroup1 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread2 = new MockThread(threadGroup1, mockThread1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = fBCachedFetcher0.relative(0);
      assertFalse(fBCachedFetcher0.isFirst());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setSingletonResult(true);
      isc_stmt_handle_impl0.clearRows();
      isc_stmt_handle_impl0.clearRows();
      isc_stmt_handle_impl0.clearRows();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl1.clearRows();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      FBConnectionRequestInfo fBConnectionRequestInfo0 = new FBConnectionRequestInfo(databaseParameterBufferImp0);
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_tr_handle_impl0.unregisterStatementFromTransaction(isc_stmt_handle_impl1);
      isc_tr_handle_impl0.getDbHandle();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals(0, int0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.3326567725582157
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Locale locale0 = Locale.CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      locale0.getDisplayName();
      LinkedBlockingQueue<Locale> linkedBlockingQueue0 = new LinkedBlockingQueue<Locale>();
      Locale.lookupTag(linkedList1, set0);
      locale0.getDisplayCountry((Locale) null);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("You cannot position to the row 0 with absolute() method.");
      linkedList0.remove((Object) jMXPrincipal0);
      linkedList0.add((byte[][]) null);
      FBResultSet fBResultSet1 = new FBResultSet(fBResultSet0.xsqlvars, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet1);
      fBCachedFetcher0.beforeFirst();
      assertFalse(fBCachedFetcher0.isAfterLast());
      assertTrue(fBCachedFetcher0.isBeforeFirst());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[7][7];
      byte[] byteArray1 = new byte[3];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "N=s'YgW-L'4:8qPM");
      byteArray1[0] = (byte) (-1);
      byteArray1[1] = (byte) (-112);
      byteArray1[2] = (byte)0;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[4];
      byteArray2[0] = (byte)0;
      byteArray2[1] = (byte) (-112);
      byteArray2[2] = (byte)0;
      byteArray2[3] = (byte) (-1);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[3];
      byteArray3[0] = (byte)0;
      byteArray3[1] = (byte) (-1);
      byteArray3[2] = (byte) (-1);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[4];
      byteArray4[0] = (byte) (-1);
      byteArray4[1] = (byte) (-112);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.pollLast();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = 2411;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.relative(2411);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Locale locale0 = Locale.CHINESE;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedBlockingDeque<String> linkedBlockingDeque0 = new LinkedBlockingDeque<String>();
      Locale.lookupTag(linkedList1, linkedBlockingDeque0);
      LinkedBlockingQueue<Locale> linkedBlockingQueue0 = new LinkedBlockingQueue<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedBlockingQueue0, locale_FilteringMode0);
      locale0.getDisplayLanguage();
      locale0.getUnicodeLocaleAttributes();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setSingletonResult(false);
      isc_stmt_handle_impl0.setSingletonResult(true);
      isc_stmt_handle_impl0.clearRows();
      isc_stmt_handle_impl0.clearRows();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      FBConnectionRequestInfo fBConnectionRequestInfo0 = new FBConnectionRequestInfo(databaseParameterBufferImp0);
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList2, fBResultSet0);
      boolean boolean0 = fBCachedFetcher1.isAfterLast();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      JavaGDSImpl javaGDSImpl1 = new JavaGDSImpl();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp1 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      databaseParameterBufferImp1.deepCopy();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl0, databaseParameterBufferImp1, isc_db_handle_impl1, gDSHelper_GDSHelperErrorListener0);
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.getRowNum();
      FBCachedFetcher fBCachedFetcher1 = null;
      try {
        fBCachedFetcher1 = new FBCachedFetcher(gDSHelper0, 67, 16384, isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-12);
      byte[] byteArray1 = new byte[14];
      byteArray1[0] = (byte) (-12);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "N=s'YgW-L'4:8qPM");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "N=s'YgW-L'4:8qPM");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.listIterator();
      byte[][] byteArray0 = new byte[11][4];
      linkedList0.add(byteArray0);
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.8286693162037997
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Locale locale0 = Locale.CHINESE;
      locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      locale0.getDisplayCountry((Locale) null);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.clearRows();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      XdrOutputStream xdrOutputStream0 = isc_svc_handle_impl0.out;
      isc_svc_handle_impl0.out = null;
      databaseParameterBufferImp0.write((XdrOutputStream) null);
      XdrOutputStream xdrOutputStream1 = isc_svc_handle_impl0.out;
      isc_svc_handle_impl isc_svc_handle_impl1 = new isc_svc_handle_impl();
      isc_svc_handle_impl1.setResp_object((-1485));
      XdrOutputStream xdrOutputStream2 = isc_svc_handle_impl1.out;
      linkedList0.add((byte[][]) null);
      databaseParameterBufferImp0.write((XdrOutputStream) null);
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_tr_handle_impl0.forgetResultSets();
      isc_tr_handle_impl0.getDbHandle();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      fBCachedFetcher0.updateRow((byte[][]) null);
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl1 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      fBCachedFetcher0.afterLast();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      boolean boolean0 = fBCachedFetcher0.previous();
      assertTrue(fBCachedFetcher0.isLast());
      
      fBCachedFetcher0.deleteRow();
      boolean boolean1 = fBCachedFetcher0.next();
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5935041414150646
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp1 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=><c");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBLongVarCharField[] fBLongVarCharFieldArray0 = new FBLongVarCharField[9];
      FBLongVarCharField fBLongVarCharField0 = mock(FBLongVarCharField.class, new ViolatedAssumptionAnswer());
      fBLongVarCharFieldArray0[0] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[1] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[2] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[3] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[4] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[5] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[3] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[7] = fBLongVarCharFieldArray0[6];
      fBLongVarCharFieldArray0[8] = fBLongVarCharFieldArray0[7];
      linkedList0.toArray(fBLongVarCharFieldArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      
      boolean boolean0 = fBCachedFetcher0.last();
      assertFalse(boolean0);
      assertFalse(fBCachedFetcher0.isFirst());
  }
}
