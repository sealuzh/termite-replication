/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 14:20:44 GMT 2019
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.Base64Decoder;
import Newzgrabber.BufferedCustomInputStream;
import Newzgrabber.Newzgrabber;
import java.io.InputStream;
import java.io.PipedOutputStream;
import java.net.URI;
import javax.swing.JTable;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Base64Decoder_ESTest extends Base64Decoder_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      Object object0 = new Object();
      Object object1 = new Object();
      Object[][] objectArray0 = new Object[3][8];
      Object[] objectArray1 = new Object[4];
      objectArray1[0] = (Object) uRI0;
      objectArray1[1] = (Object) uRI0;
      objectArray1[2] = (Object) mockFile0;
      objectArray1[3] = (Object) uRI0;
      objectArray0[0] = objectArray1;
      Object[] objectArray2 = new Object[0];
      objectArray0[1] = objectArray2;
      Object[] objectArray3 = new Object[4];
      objectArray3[0] = (Object) mockFile0;
      objectArray3[1] = object0;
      objectArray3[2] = (Object) uRI0;
      objectArray3[3] = (Object) mockFile0;
      objectArray0[2] = objectArray3;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray1);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      DefaultTableModel defaultTableModel1 = new DefaultTableModel();
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTable jTable0 = new JTable(defaultTableModel1, defaultTableColumnModel0);
      JTableHeader jTableHeader0 = jTable0.getTableHeader();
      JTable jTable1 = jTableHeader0.getTable();
      defaultTableModel1.addTableModelListener(jTable1);
      mockPrintStream0.print((Object) defaultTableModel1);
      Base64Decoder base64Decoder0 = new Base64Decoder((BufferedCustomInputStream) null, mockPrintStream0);
      Newzgrabber.verbose = true;
      // Undeclared exception!
      try { 
        base64Decoder0.decodeStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.Base64Decoder", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("Test Frame");
      Object[][] objectArray0 = new Object[7][7];
      Object[] objectArray1 = new Object[6];
      Object object0 = new Object();
      objectArray1[0] = object0;
      objectArray1[1] = (Object) "Test Frame";
      objectArray1[2] = (Object) "Test Frame";
      objectArray1[3] = (Object) "Test Frame";
      objectArray1[4] = (Object) null;
      objectArray1[5] = (Object) "Test Frame";
      objectArray0[0] = objectArray1;
      Object[] objectArray2 = new Object[4];
      objectArray2[0] = (Object) mockPrintStream0;
      objectArray2[1] = (Object) null;
      objectArray2[2] = (Object) mockPrintStream0;
      objectArray2[3] = (Object) mockPrintStream0;
      objectArray0[1] = objectArray2;
      Object[] objectArray3 = new Object[4];
      objectArray3[0] = (Object) "Test Frame";
      objectArray3[1] = (Object) mockPrintStream0;
      objectArray3[2] = object0;
      objectArray3[3] = (Object) "Test Frame";
      objectArray0[2] = objectArray3;
      Object[] objectArray4 = new Object[2];
      objectArray4[0] = (Object) "Test Frame";
      objectArray4[1] = object0;
      objectArray0[3] = objectArray4;
      Object[] objectArray5 = new Object[4];
      objectArray5[0] = (Object) mockPrintStream0;
      objectArray5[1] = (Object) null;
      Object object1 = new Object();
      objectArray5[2] = object1;
      objectArray5[3] = (Object) null;
      objectArray0[4] = objectArray5;
      Object[] objectArray6 = new Object[6];
      objectArray6[0] = object1;
      objectArray6[1] = object0;
      objectArray6[2] = object0;
      objectArray6[3] = (Object) null;
      objectArray6[4] = object1;
      objectArray6[5] = (Object) "Test Frame";
      objectArray0[5] = objectArray6;
      Object[] objectArray7 = new Object[9];
      objectArray7[0] = object0;
      objectArray7[1] = (Object) mockPrintStream0;
      objectArray7[2] = object1;
      objectArray7[3] = (Object) "Test Frame";
      objectArray7[4] = (Object) "Test Frame";
      objectArray7[5] = object0;
      objectArray7[6] = (Object) mockPrintStream0;
      objectArray7[7] = object1;
      objectArray7[8] = (Object) "Test Frame";
      objectArray0[6] = objectArray7;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray7);
      mockPrintStream0.print((Object) defaultTableModel0);
      Base64Decoder base64Decoder0 = new Base64Decoder((BufferedCustomInputStream) null, mockPrintStream0);
      // Undeclared exception!
      try { 
        base64Decoder0.decodeStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.Base64Decoder", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("YXGN{w^5Yp^VnFVHnh@");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      mockFileOutputStream0.release();
      byteArray0[1] = (byte) (-46);
      byteArray0[2] = (byte) (-46);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Base64Decoder base64Decoder0 = new Base64Decoder((BufferedCustomInputStream) null, mockFileOutputStream0);
      // Undeclared exception!
      try { 
        base64Decoder0.decodeStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.Base64Decoder", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream((InputStream) null, 290);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertFalse(base64Decoder0.ProgressSet);
  }
}
