/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 14:37:58 GMT 2019
 */

package nu.staldal.lagoon;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import nu.staldal.lagoon.LagoonCLI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LagoonCLI_ESTest extends LagoonCLI_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "'\"#Fx2R_{!MyMLE;";
      stringArray0[1] = "0";
      stringArray0[2] = "budXd";
      stringArray0[3] = "budXd";
      stringArray0[4] = "0";
      stringArray0[5] = " expected";
      stringArray0[6] = "I=wSO/j5?XVfyl~]3'";
      LagoonCLI.main(stringArray0);
      assertEquals(7, stringArray0.length);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("J.xm");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "J.xm";
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("J.xm");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("J.xm");
      FileSystemHandling.createFolder(evoSuiteFile2);
      String[] stringArray1 = new String[3];
      stringArray1[0] = "J.xm";
      stringArray1[1] = "9";
      stringArray1[2] = "9";
      LagoonCLI.main(stringArray1);
      assertNotSame(stringArray1, stringArray0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "Eleme<t ex:ected";
      stringArray0[1] = "9";
      stringArray0[2] = "YFc>";
      stringArray0[3] = "http://www.w3.org/XML/1998/namespace";
      stringArray0[0] = "http://www.w3.org/XML/1998/namespace";
      stringArray0[5] = "We!g`";
      stringArray0[6] = "c%|";
      LagoonCLI.main(stringArray0);
      assertEquals(8, stringArray0.length);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.7490805417936826
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "|;fpQ Rp";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("|;fpQ Rp");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      stringArray0[1] = "build";
      stringArray0[2] = "H_j0z(avKb%goJu<";
      byte[] byteArray1 = new byte[8];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray1);
      LagoonCLI.main(stringArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      String[] stringArray1 = new String[8];
      stringArray1[0] = "build";
      stringArray1[1] = "H_j0z(avKb%goJu<";
      stringArray1[2] = "";
      stringArray1[3] = "build";
      stringArray1[4] = "H_j0z(avKb%goJu<";
      LagoonCLI.main(stringArray1);
      LagoonCLI.main(stringArray1);
      assertNotSame(stringArray1, stringArray0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "I2/4GQbAgm";
      stringArray0[1] = "force";
      stringArray0[2] = "FgRB}.|-#t8VCW;r?";
      stringArray0[3] = "xu9#D=(,22n23=0l[";
      stringArray0[4] = "`z_&@b>;y>('";
      stringArray0[5] = "O^Ne]]2!?P.";
      stringArray0[6] = "aEt+mvx[Sg`#C";
      LagoonCLI.main(stringArray0);
      assertEquals(7, stringArray0.length);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      byteArray0[2] = (byte)91;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Gw%sG$meV{7z-Ov#m.sitemap.xml";
      // Undeclared exception!
      try { 
        LagoonCLI.main(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[7];
      stringArray0[0] = ".sitemap";
      stringArray0[1] = "build";
      stringArray0[2] = "^C%#";
      stringArray0[3] = "build";
      FileSystemHandling.shouldAllThrowIOExceptions();
      LagoonCLI.main(stringArray0);
      assertEquals(7, stringArray0.length);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = "Ouiod";
      stringArray0[2] = "vkNn/n'K>gPk-M$\"D";
      stringArray0[3] = "djLg!tFZf\"4";
      stringArray0[4] = "vkNn/n'K>gPk-M$\"D";
      stringArray0[4] = ">}Xn";
      stringArray0[6] = "Ouiod";
      String[] stringArray1 = new String[7];
      stringArray1[0] = "Ouiod";
      stringArray1[3] = "Ouiod";
      stringArray1[4] = "Ouiod";
      stringArray1[5] = " ms";
      stringArray1[6] = "vkNn/n'K>gPk-M$\"D";
      // Undeclared exception!
      try { 
        LagoonCLI.main(stringArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "uoq%|:p.a";
      stringArray0[2] = "Ewement expected";
      stringArray0[3] = "Ewement expected";
      stringArray0[4] = "forZe";
      stringArray0[5] = "W^)~ ^oh&l:)m`";
      String[] stringArray1 = new String[8];
      stringArray1[0] = "W^)~ ^oh&l:)m`";
      stringArray1[1] = "0";
      stringArray1[2] = "$";
      stringArray1[3] = "<2!DQ[PPUw-WZr$5?r";
      stringArray1[4] = "forZe";
      stringArray1[5] = "<2!DQ[PPUw-WZr$5?r";
      stringArray1[6] = "<2!DQ[PPUw-WZr$5?r";
      String[] stringArray2 = new String[1];
      stringArray2[0] = "`Vv4M";
      LagoonCLI.main(stringArray2);
      assertNotSame(stringArray2, stringArray1);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "vkNn/n'K>gPk-M$\"D";
      stringArray0[1] = "Ouiod";
      stringArray0[2] = "d0jLg!tFZf\"4";
      stringArray0[3] = "d0jLg!tFZf\"4";
      stringArray0[4] = "vkNn/n'K>gPk-M$\"D";
      stringArray0[5] = ">}Xn";
      stringArray0[6] = "Ouiod";
      stringArray0[7] = "Ouiod";
      LagoonCLI.main(stringArray0);
      assertEquals(8, stringArray0.length);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[0];
      LagoonCLI.main(stringArray0);
      assertEquals(0, stringArray0.length);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.7767701612564368
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LagoonCLI lagoonCLI0 = new LagoonCLI();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "Property ";
      stringArray0[1] = "rrors...";
      stringArray0[2] = "space";
      stringArray0[3] = "}aQTN`TgdD";
      stringArray0[4] = "Kv";
      stringArray0[5] = "Property ";
      stringArray0[6] = "space";
      stringArray0[7] = "Kv";
      LagoonCLI.main(stringArray0);
      assertEquals(8, stringArray0.length);
  }
}
