/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 14:14:16 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lowagie.text.pdf.PdfGraphics2D;
import java.awt.AWTEventMulticaster;
import java.awt.Dialog;
import java.awt.RenderingHints;
import java.awt.color.ColorSpace;
import java.awt.event.ActionListener;
import java.awt.event.ContainerListener;
import java.awt.event.FocusListener;
import java.awt.event.HierarchyListener;
import java.awt.event.InputMethodListener;
import java.awt.event.KeyListener;
import java.awt.event.MouseListener;
import java.awt.event.MouseWheelListener;
import java.awt.event.TextListener;
import java.awt.event.WindowFocusListener;
import java.awt.event.WindowListener;
import java.awt.event.WindowStateListener;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.renderable.ParameterBlock;
import java.io.ByteArrayInputStream;
import java.text.AttributedCharacterIterator;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import javax.media.jai.CollectionOp;
import javax.media.jai.OperationRegistry;
import javax.media.jai.operator.AddDescriptor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JLayeredPane;
import javax.swing.JToolTip;
import javax.swing.KeyStroke;
import javax.swing.MenuElement;
import javax.swing.event.ListDataListener;
import javax.swing.plaf.basic.BasicComboBoxEditor;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.0557051606564785
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Vector<String> vector0 = new Vector<String>();
      UnaryOperator.identity();
      vector0.add((String) null);
      UnaryOperator.identity();
      Function.identity();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[13];
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = visualPageListItemArray0[10];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.updateElementAt(5, (VisualPageListItem) null);
      visualListModel0.removeElements(3, 5, true);
      assertEquals(10, visualListModel0.getSize());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.0647549344121345
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Vector<String> vector0 = new Vector<String>();
      UnaryOperator.identity();
      UnaryOperator.identity();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[13];
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = visualPageListItemArray0[10];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.updateElementAt(49, (VisualPageListItem) null);
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[2];
      intArray0[0] = 49;
      intArray0[1] = 49;
      intArray0[1] = 49;
      try { 
        visualListModel0.moveUpIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 48
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.3119786101400903
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.setData(visualPageListItemArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = (int) (byte)79;
      try { 
        visualListModel1.removeElements(intArray1, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 80
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.1140059550872974
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Vector<String> vector0 = new Vector<String>();
      UnaryOperator.identity();
      UnaryOperator.identity();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[13];
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = visualPageListItemArray0[10];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.updateElementAt((-36), (VisualPageListItem) null);
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[3];
      intArray0[0] = (-36);
      intArray0[1] = (-36);
      intArray0[1] = (-36);
      visualListModel0.moveUpIndexes(intArray0);
      assertEquals(13, visualListModel0.getSize());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.0539205510024243
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Vector<String> vector0 = new Stack<String>();
      UnaryOperator.identity();
      UnaryOperator.identity();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[13];
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = visualPageListItemArray0[10];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.updateElementAt(5, (VisualPageListItem) null);
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[3];
      intArray0[0] = 5;
      intArray0[1] = 5;
      intArray0[1] = 5;
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.addElementAt(visualPageListItemArray0[5], 12);
      assertEquals(13, visualListModel0.getSize());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.3199044298479494
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 5;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      Vector<String> vector0 = new Vector<String>();
      UnaryOperator.identity();
      String[] stringArray0 = new String[3];
      stringArray0[0] = ":mLt}6o+^";
      stringArray0[1] = "";
      stringArray0[2] = "+M1";
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      visualListModel0.removeListDataListener(jComboBox0);
      UnaryOperator.identity();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[13];
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.updateElementAt(2174, visualPageListItemArray0[4]);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndex(5);
      assertEquals(13, visualListModel0.getSize());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.201793123629589
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[1];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0#8f5j^g< \"wv");
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray1 = new int[3];
      intArray1[2] = 2703;
      int int0 = 1778;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "x25g{L7>z");
      intArray1[1] = 1778;
      OperationRegistry operationRegistry0 = OperationRegistry.getThreadSafeOperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      HashMap<RenderingHints.Key, Integer> hashMap0 = new HashMap<RenderingHints.Key, Integer>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "x25g{L7>z", parameterBlock0, renderingHints0, false);
      // Undeclared exception!
      try { 
        visualListModel0.appendAllElements(collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"x25g{L7>z\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.9459959973559475
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Vector<String> vector0 = new Vector<String>();
      UnaryOperator.identity();
      String string0 = null;
      vector0.add((String) null);
      UnaryOperator.identity();
      Function.identity();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[13];
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = visualPageListItemArray0[10];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.updateElementAt(5, (VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(3, 5, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0647549344121345
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Vector<String> vector0 = new Vector<String>();
      UnaryOperator.identity();
      vector0.add((String) null);
      UnaryOperator.identity();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[13];
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = visualPageListItemArray0[10];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.updateElementAt(5, (VisualPageListItem) null);
      visualListModel0.removeElements(5, 5, true);
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(13, visualListModel0.getSize());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.330017050443346
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Vector<String> vector0 = new Vector<String>();
      UnaryOperator.identity();
      FileSystemHandling.shouldAllThrowIOExceptions();
      UnaryOperator.identity();
      Function.identity();
      vector0.spliterator();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[13];
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = visualPageListItemArray0[1];
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = visualPageListItemArray0[10];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.updateElementAt(284, (VisualPageListItem) null);
      visualListModel0.removeElements(5, 5, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "log4j.appender.");
      visualListModel0.moveUpIndex(10);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-886), "log4j.appender.");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      Vector<String> vector0 = new Vector<String>();
      vector0.spliterator();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      HierarchyListener hierarchyListener0 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
      HierarchyListener hierarchyListener1 = AWTEventMulticaster.add(hierarchyListener0, hierarchyListener0);
      AWTEventMulticaster.remove(hierarchyListener1, hierarchyListener1);
      int[] intArray0 = new int[1];
      intArray0[0] = (int) (byte)96;
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 96
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.9663267452196522
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(1778);
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.addElement((VisualPageListItem) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ",");
      int[] intArray0 = new int[3];
      intArray0[0] = 1778;
      visualListModel0.moveUpIndex((-4029));
      intArray0[1] = 1778;
      intArray0[2] = (-3857);
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.data = null;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) hashSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.5626906377805674
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.getSize();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      OperationRegistry operationRegistry0 = OperationRegistry.getThreadSafeOperationRegistry();
      visualListModel0.moveUpIndex(0);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getParameters();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      vector0.sort(comparator0);
      vector0.iterator();
      stack0.addElement((VisualPageListItem) null);
      visualListModel0.clearData();
      stack0.add((VisualPageListItem) null);
      visualListModel0.removeElements(0, (-1), false);
      visualListModel0.elementChanged((VisualPageListItem) null);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      Dialog.ModalExclusionType dialog_ModalExclusionType0 = Dialog.ModalExclusionType.NO_EXCLUDE;
      vector0.removeElement(dialog_ModalExclusionType0);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      parameterBlock0.set(0.0, 0);
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      // Undeclared exception!
      try { 
        operationRegistry0.clearProductPreferences("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Mode name \"\" is not a valid (registered) registry mode.
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.304960205575741
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 1642;
      visualListModel0.subList(959, 1642);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.clearData();
      Vector<VisualPageListItem> vector0 = new Stack<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      vector0.add((VisualPageListItem) null);
      visualListModel0.setData(vector0);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.0211196177983384
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)79;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)96;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      OperationRegistry operationRegistry0 = OperationRegistry.getThreadSafeOperationRegistry();
      Vector<Object> vector0 = new Vector<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(vector0, vector0);
      Vector<Object> vector1 = parameterBlock0.getParameters();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector1);
      HashMap<RenderingHints.Key, Dialog.ModalExclusionType> hashMap0 = new HashMap<RenderingHints.Key, Dialog.ModalExclusionType>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "e|h", parameterBlock1, renderingHints0, false);
      // Undeclared exception!
      try { 
        visualListModel1.addAllElements((Collection<VisualPageListItem>) collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"e|h\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      OperationRegistry operationRegistry0 = new OperationRegistry();
      Stack<Object> stack0 = new Stack<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(stack0);
      operationRegistry0.toString();
      parameterBlock0.add(1628.0F);
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "{AjonDj0", parameterBlock0, (RenderingHints) null);
      // Undeclared exception!
      try { 
        visualListModel0.prependAllElements(collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"{AjonDj0\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.138261944687921
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[1];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>();
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      BasicComboBoxEditor basicComboBoxEditor0 = new BasicComboBoxEditor();
      jComboBox0.configureEditor(basicComboBoxEditor0, linkedList0);
      DefaultComboBoxModel<String> defaultComboBoxModel1 = new DefaultComboBoxModel<String>();
      defaultComboBoxModel1.addListDataListener(jComboBox0);
      DefaultComboBoxModel<String> defaultComboBoxModel2 = new DefaultComboBoxModel<String>();
      defaultComboBoxModel2.addElement("org.pdfsam.guiclient.commons.models.VisualListModel");
      int[] intArray1 = new int[2];
      intArray1[0] = 3016;
      intArray1[1] = (-3046);
      visualListModel0.moveUpIndexes(intArray1);
      JComboBox<Object> jComboBox1 = new JComboBox<Object>();
      VisualListModel visualListModel1 = new VisualListModel();
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      visualListModel0.setData(visualPageListItemArray0);
      try { 
        visualListModel0.moveDownIndexes(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3045
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.6815118659867245
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.getSize();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      OperationRegistry.getThreadSafeOperationRegistry();
      visualListModel0.moveUpIndex(0);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getParameters();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      vector0.sort(comparator0);
      vector0.iterator();
      visualListModel0.clearData();
      stack0.add((VisualPageListItem) null);
      visualListModel0.removeElements(0, (-1), false);
      visualListModel0.elementChanged((VisualPageListItem) null);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      Dialog.ModalExclusionType dialog_ModalExclusionType0 = Dialog.ModalExclusionType.NO_EXCLUDE;
      vector0.removeElement(dialog_ModalExclusionType0);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      parameterBlock0.set(0.0, 0);
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      ParameterBlock parameterBlock1 = new ParameterBlock();
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      Object object0 = new Object();
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key1, sunHints_Key2);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.9348066056828754
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      int[] intArray0 = new int[1];
      intArray0[0] = 92;
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualListModel visualListModel2 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray1 = new int[4];
      intArray1[0] = 967;
      intArray1[1] = (-1);
      intArray1[2] = (-109);
      intArray1[3] = (-923);
      try { 
        visualListModel0.undeleteElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 967
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Vector<String> vector0 = new Vector<String>();
      vector0.spliterator();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Boolean boolean0 = new Boolean(true);
      HierarchyListener hierarchyListener0 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyListener0, hierarchyListener0);
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster0, (HierarchyListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) aWTEventMulticaster0);
      WindowStateListener windowStateListener0 = mock(WindowStateListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add(windowStateListener0, windowStateListener0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster1, (WindowStateListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster1, (WindowStateListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster3, (WindowStateListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster1, (WindowStateListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster6, (InputMethodListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster5, (WindowStateListener) aWTEventMulticaster6);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster5, (WindowStateListener) aWTEventMulticaster7);
      AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster8, (WindowStateListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) aWTEventMulticaster0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseListener) defaultCaret0, (MouseListener) defaultCaret0);
      DefaultCaret defaultCaret1 = new DefaultCaret();
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster2, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseListener) aWTEventMulticaster9, (MouseListener) defaultCaret0);
      AWTEventMulticaster.add((KeyListener) aWTEventMulticaster1, (KeyListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseListener) defaultCaret0, (MouseListener) aWTEventMulticaster10);
      JComboBox<String> jComboBox0 = new JComboBox<String>(vector0);
      jComboBox0.removeMouseListener(aWTEventMulticaster11);
      visualListModel0.removeElementAt(0, true);
      visualListModel0.getValidElements();
      ListDataListener[] listDataListenerArray0 = visualListModel0.getListDataListeners();
      assertEquals(0, listDataListenerArray0.length);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.9280478396261032
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.6999267696231979
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        ColorSpace.getInstance((-623));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      Vector<String> vector0 = new Vector<String>();
      Locale locale0 = Locale.US;
      locale0.getUnicodeLocaleKeys();
      int[] intArray0 = new int[1];
      intArray0[0] = (-2599);
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2599
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OperationRegistry operationRegistry0 = new OperationRegistry();
      Vector<String> vector0 = new Vector<String>();
      vector0.add("\u0130NFO");
      vector0.clone();
      JComboBox<String> jComboBox0 = new JComboBox<String>(vector0);
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>();
      defaultComboBoxModel0.addElement("log4j.additivity.");
      JComboBox<Object> jComboBox1 = new JComboBox<Object>();
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector1 = new Vector<VisualPageListItem>();
      vector1.add((VisualPageListItem) null);
      vector1.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(vector1);
      visualListModel0.updateElementAt((-3056), (VisualPageListItem) null);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.2410621450563353
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "eb-4z=B8@!y");
      OperationRegistry operationRegistry0 = new OperationRegistry();
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 5;
      intArray0[2] = 1024;
      visualListModel0.rotateClockwiseElements(intArray0);
      int[] intArray1 = new int[3];
      visualListModel0.moveUpIndexes(intArray1);
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      jComboBox0.getMouseMotionListeners();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      VisualListModel visualListModel1 = new VisualListModel();
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[3] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.6020395425995058
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int[] intArray0 = new int[1];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0#8f5j^g< \"wv");
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray1 = new int[3];
      intArray1[2] = 2671;
      visualListModel1.rotateClockwiseElements(intArray1);
      visualListModel1.moveUpIndexes(intArray1);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.rotateAnticlockwiseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualListModel visualListModel3 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualListModel3.setData(visualPageListItemArray0);
      visualListModel3.moveDownIndexes(intArray1);
      visualListModel0.reverseElements(intArray1);
      assertFalse(visualListModel0.equals((Object)visualListModel1));
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.7091199915606667
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Vector<String> vector0 = new Vector<String>();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      Function.identity();
      vector0.replaceAll(unaryOperator0);
      vector0.spliterator();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[13];
      visualPageListItemArray0[10] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.clearData();
      Integer integer0 = new Integer(1138);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("jpg", true);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.8212565066006587
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Vector<String> vector0 = new Vector<String>();
      UnaryOperator.identity();
      String string0 = null;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) visualListModel0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.negate();
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      Object object0 = new Object();
      Predicate.isEqual(object0);
      Predicate.isEqual((Object) pdfGraphics2D_HyperLinkKey0);
      Predicate<Object> predicate3 = predicate2.and(predicate0);
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, 114);
      Predicate.isEqual((Object) defaultTableModel0);
      vector0.removeIf(predicate3);
      FileSystemHandling.shouldAllThrowIOExceptions();
      UnaryOperator.identity();
      Function.identity();
      vector0.spliterator();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[13];
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = visualPageListItemArray0[1];
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = visualPageListItemArray0[10];
      visualListModel0.setData(visualPageListItemArray0);
      int int0 = 5;
      boolean boolean0 = false;
      int[] intArray0 = new int[3];
      intArray0[0] = 114;
      intArray0[1] = 5;
      intArray0[2] = 5;
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 114
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.9646192260062887
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(0, 276);
      Vector<String> vector0 = new Vector<String>();
      visualListModel0.getListDataListeners();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.elementsChanged();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addElementAt((VisualPageListItem) null, 5000);
      visualListModel1.getElements();
      OperationRegistry operationRegistry0 = new OperationRegistry();
      Vector<String> vector1 = new Vector<String>();
      Vector<String> vector2 = new Vector<String>();
      visualListModel0.moveDownIndex(1089);
      visualListModel0.moveUpIndex((-691));
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.moveUpIndex(11);
      visualListModel1.subList(276, 1089, false);
      visualListModel2.getListDataListeners();
      VisualListModel visualListModel3 = new VisualListModel();
      VisualListModel visualListModel4 = new VisualListModel();
      visualListModel4.updateElementAt(1505, (VisualPageListItem) null);
      visualListModel3.elementChanged((VisualPageListItem) null);
      Vector<VisualPageListItem> vector3 = visualListModel0.data;
      vector3.add((VisualPageListItem) null);
      visualListModel1.setData(vector3);
      visualListModel0.updateElementAt(998, (VisualPageListItem) null);
      visualListModel1.getElements();
      assertEquals(2, visualListModel1.getSize());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      visualListModel0.addElement((VisualPageListItem) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Hhmt!o}|nMT({.B,N#");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "q.\"ayPKRJ5[dXDE[gRV");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int int0 = 1;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Hhmt!o}|nMT({.B,N#");
      visualListModel0.moveDownIndex(2922);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "_,qUF3");
      visualListModel0.moveUpIndex(1);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(2922, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.202275472113694
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      OperationRegistry operationRegistry0 = new OperationRegistry();
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      visualListModel0.moveUpIndexes(intArray0);
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      jComboBox0.getMouseMotionListeners();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      assertEquals(4, visualListModel0.getSize());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.7228279870449024
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int[] intArray0 = new int[5];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.removeElements(intArray0, false);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>();
      defaultComboBoxModel0.addElement("");
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      visualListModel0.removeListDataListener(jComboBox0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.elementsChanged();
      visualListModel2.rotateAnticlockwiseElements(intArray0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      VisualListModel visualListModel3 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[9];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[7] = null;
      visualPageListItemArray0[8] = null;
      visualListModel3.setData(visualPageListItemArray0);
      visualListModel1.undeleteElements(intArray0);
      visualListModel2.moveDownIndexes(intArray0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel3.removeElements(intArray0, true);
      visualListModel0.prependAllElements(vector0);
      visualListModel3.reverseElements(intArray0);
      visualListModel3.removeElements(intArray0, true);
      assertEquals(7, visualListModel3.getSize());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Boolean boolean0 = new Boolean("com.lowage.tet.pdfPdfGra5hics2D$HyperLinkKey");
      ParameterBlock parameterBlock0 = new ParameterBlock();
      parameterBlock0.removeParameters();
      ParameterBlock parameterBlock1 = new ParameterBlock();
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)49;
      byteArray0[3] = (byte) (-21);
      byteArray0[4] = (byte) (-73);
      byteArray0[5] = (byte)39;
      byteArray0[6] = (byte)6;
      byteArray0[7] = (byte) (-92);
      int[] intArray0 = new int[8];
      intArray0[0] = (int) (byte) (-21);
      intArray0[1] = (int) (byte)39;
      intArray0[2] = (int) (byte) (-21);
      intArray0[3] = (int) (byte) (-21);
      intArray0[4] = (int) (byte)39;
      intArray0[5] = 4;
      intArray0[6] = (int) (byte)0;
      intArray0[7] = (int) (byte) (-92);
      visualListModel0.reverseElements(intArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ParameterBlock parameterBlock2 = new ParameterBlock();
      ParameterBlock parameterBlock3 = new ParameterBlock();
      parameterBlock3.removeSources();
      ParameterBlock parameterBlock4 = new ParameterBlock();
      ParameterBlock parameterBlock5 = new ParameterBlock();
      ParameterBlock parameterBlock6 = new ParameterBlock();
      parameterBlock3.removeSources();
      ParameterBlock parameterBlock7 = new ParameterBlock();
      parameterBlock7.getParameters();
      int[] intArray1 = null;
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.9280478396261032
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveUpIndexes(intArray0);
      RenderingHints renderingHints0 = new RenderingHints((Map<RenderingHints.Key, ?>) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Stack<String> stack0 = new Stack<String>();
      stack0.add("0Z7/c");
      stack0.add("0Z7/c");
      Stack<String> stack1 = new Stack<String>();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      parameterBlock0.removeParameters();
      ParameterBlock parameterBlock1 = new ParameterBlock();
      Stack<Object> stack2 = new Stack<Object>();
      ParameterBlock parameterBlock2 = new ParameterBlock(stack2, stack2);
      ParameterBlock parameterBlock3 = new ParameterBlock();
      Stack<Object> stack3 = new Stack<Object>();
      ParameterBlock parameterBlock4 = new ParameterBlock();
      stack3.removeElement("");
      parameterBlock2.setParameters(stack3);
      parameterBlock2.shallowClone();
      parameterBlock3.getParameters();
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.0423569973977633
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      JToolTip jToolTip0 = new JToolTip();
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      jToolTip0.requestFocus(true);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.3838918920472834
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      byte byte0 = (byte)79;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      System.setCurrentTimeMillis((byte)79);
      VisualPageListItem[] visualPageListItemArray1 = new VisualPageListItem[7];
      visualPageListItemArray1[0] = null;
      visualPageListItemArray1[1] = null;
      visualPageListItemArray1[2] = visualPageListItemArray0[0];
      visualPageListItemArray1[3] = null;
      visualPageListItemArray1[4] = null;
      visualPageListItemArray1[5] = null;
      AffineTransform affineTransform0 = new AffineTransform();
      AffineTransformOp affineTransformOp0 = null;
      try {
        affineTransformOp0 = new AffineTransformOp(affineTransform0, (byte)79);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown interpolation type: 79
         //
         verifyException("java.awt.image.AffineTransformOp", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.3119786101400903
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<String> stack0 = new Stack<String>();
      Stack<String> stack1 = new Stack<String>();
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, mouseWheelListener0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) null);
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster0, (HierarchyListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster1, (WindowStateListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster3, (WindowStateListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster4);
      int[] intArray0 = new int[1];
      intArray0[0] = (-51);
      visualListModel0.moveUpIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Stack<VisualPageListItem> stack2 = new Stack<VisualPageListItem>();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel1.moveDownIndexes(intArray0);
      try { 
        visualListModel0.reverseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -51
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.454597705975936
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int[] intArray0 = new int[1];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0#8f5j^g< \"wv");
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "x25g{L7>z");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "E");
      visualListModel1.moveUpIndexes(intArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0#8f5j^g< \"wv");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      visualListModel1.undeleteElements(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.moveDownIndexes(intArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "LogManang-r.repositorySelector was null likely due to error in class reloading, using NOPLoggerRepository.");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0#8f5j^g< \"wv");
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.5217669383437986
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      int[] intArray0 = new int[1];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0#8f5j^g< \"wv");
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "x25g{L7>z");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "E");
      visualListModel1.moveUpIndexes(intArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0#8f5j^g< \"wv");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      visualListModel1.undeleteElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "LogManang-r.repositorySelector was null likely due to error in class reloading, using NOPLoggerRepository.");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0#8f5j^g< \"wv");
      visualListModel0.reverseElements(intArray0);
      visualListModel0.removeElements(intArray0, true);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.4930230319831788
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int[] intArray0 = new int[1];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0#8f5j^g< \"wv");
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "x25g{L7>z");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "E");
      visualListModel1.moveUpIndexes(intArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0#8f5j^g< \"wv");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      visualListModel1.undeleteElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "LogManang-r.repositorySelector was null likely due to error in class reloading, using NOPLoggerRepository.");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0#8f5j^g< \"wv");
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      JToolTip jToolTip0 = new JToolTip();
      String string0 = "\" o-ions.";
      KeyStroke.getKeyStroke("\" o-ions.");
      int int0 = (-2453);
      long long0 = 1024L;
      int int1 = (-340);
      char char0 = 'Y';
      MenuElement[] menuElementArray0 = new MenuElement[1];
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      visualListModel0.moveDownIndex(0);
      visualListModel0.moveUpIndex(0);
      Stack<String> stack0 = new Stack<String>();
      stack0.add("9");
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.getDot();
      AWTEventMulticaster.remove((MouseListener) defaultCaret0, (MouseListener) defaultCaret0);
      AWTEventMulticaster.add((MouseListener) defaultCaret0, (MouseListener) null);
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      MouseWheelListener mouseWheelListener1 = AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove(mouseWheelListener1, mouseWheelListener1);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      WindowStateListener windowStateListener0 = mock(WindowStateListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(windowStateListener0, windowStateListener0);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((MouseListener) defaultCaret0, (MouseListener) defaultCaret0);
      MouseListener mouseListener0 = AWTEventMulticaster.add((MouseListener) defaultCaret0, (MouseListener) null);
      jComboBox0.removeMouseListener(mouseListener0);
      List<VisualPageListItem> list0 = new Stack<VisualPageListItem>();
      visualListModel0.updateElementAt(0, (VisualPageListItem) null);
      visualListModel0.getListDataListeners();
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.659334098393565
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      int[] intArray0 = new int[1];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>();
      VisualPageListItem visualPageListItem0 = null;
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualListModel0.setData(visualPageListItemArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5981863871455346
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.getListDataListeners();
      Vector<String> vector0 = new Vector<String>();
      vector0.spliterator();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Boolean boolean0 = new Boolean(true);
      HierarchyListener hierarchyListener0 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyListener0, hierarchyListener0);
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster0, (HierarchyListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) aWTEventMulticaster0);
      WindowStateListener windowStateListener0 = mock(WindowStateListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add(windowStateListener0, windowStateListener0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster1, (WindowStateListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster2, (WindowStateListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((FocusListener) aWTEventMulticaster0, (FocusListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster1, (WindowStateListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster5, (InputMethodListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster4, (WindowStateListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster4, (WindowStateListener) aWTEventMulticaster7);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster8, (WindowStateListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.remove((TextListener) aWTEventMulticaster6, (TextListener) aWTEventMulticaster9);
      AWTEventMulticaster.remove((TextListener) aWTEventMulticaster10, (TextListener) aWTEventMulticaster8);
      visualListModel0.getElements();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster1, (WindowFocusListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster9, (WindowFocusListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseListener) defaultCaret0, (MouseListener) defaultCaret0);
      DefaultCaret defaultCaret1 = new DefaultCaret();
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseListener) aWTEventMulticaster11, (MouseListener) defaultCaret0);
      AWTEventMulticaster.add((MouseListener) aWTEventMulticaster6, (MouseListener) defaultCaret0);
      AWTEventMulticaster.add((MouseListener) aWTEventMulticaster8, (MouseListener) aWTEventMulticaster12);
      JComboBox<String> jComboBox0 = new JComboBox<String>(vector0);
      jComboBox0.removeMouseListener(aWTEventMulticaster8);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.449191882584089
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<String> stack0 = new Stack<String>();
      stack0.iterator();
      stack0.add((String) null);
      stack0.removeElement("com.lwage.tet.pdfPdfGra5hics2D$HyperLi>kKey");
      Boolean boolean0 = new Boolean("com.lwage.tet.pdfPdfGra5hics2D$HyperLi>kKey");
      stack0.listIterator();
      stack0.add("com.lwage.tet.pdfPdfGra5hics2D$HyperLi>kKey");
      stack0.add("com.lwage.tet.pdfPdfGra5hics2D$HyperLi>kKey");
      stack0.add("com.lwage.tet.pdfPdfGra5hics2D$HyperLi>kKey");
      Stack<String> stack1 = new Stack<String>();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      ParameterBlock parameterBlock1 = new ParameterBlock();
      Stack<Object> stack2 = new Stack<Object>();
      parameterBlock1.setParameters(stack2);
      parameterBlock1.shallowClone();
      parameterBlock0.getSources();
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel2.removeElements(58, (-1081), false);
      visualListModel2.removeElements(intArray0, false);
      assertFalse(visualListModel2.equals((Object)visualListModel0));
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/109_pdfsam");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      Vector<String> vector0 = new Stack<String>();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/109_pdfsam");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      Integer integer0 = new Integer(13);
      Integer integer1 = new Integer((-2995));
      Integer integer2 = new Integer(32);
      Vector<Object> vector1 = new Vector<Object>();
      vector1.add((Object) "");
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      Object object0 = new Object();
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key1, object0);
      Vector<VisualPageListItem> vector2 = visualListModel0.data;
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.594839723260427
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.getSize();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      OperationRegistry operationRegistry0 = OperationRegistry.getThreadSafeOperationRegistry();
      visualListModel0.moveUpIndex(0);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getParameters();
      vector0.iterator();
      boolean boolean0 = new Boolean(false);
      visualListModel0.removeElements(0, (-1), false);
      visualListModel0.elementChanged((VisualPageListItem) null);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      Dialog.ModalExclusionType dialog_ModalExclusionType0 = Dialog.ModalExclusionType.NO_EXCLUDE;
      vector0.removeElement(dialog_ModalExclusionType0);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      parameterBlock0.set(0.0, 0);
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      // Undeclared exception!
      try { 
        operationRegistry0.clearProductPreferences("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Mode name \"\" is not a valid (registered) registry mode.
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<String> stack0 = new Stack<String>();
      Boolean boolean0 = new Boolean("com.lozage.tet.pdfPdfGra5hi.s2D$HyperLinBKey");
      stack0.add("com.lozage.tet.pdfPdfGra5hi.s2D$HyperLinBKey");
      Stack<String> stack1 = new Stack<String>();
      Stack<Object> stack2 = new Stack<Object>();
      stack2.setSize(1000);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0, 0).when(comparator0).compare(any() , any());
      Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      stack2.sort(comparator0);
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.LANGUAGE;
      stack2.add((Object) attributedCharacterIterator_Attribute0);
      Integer.compareUnsigned(1000, 1095);
      Integer.compare(1095, 1858);
      stack2.add((Object) stack0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      stack2.removeElement(stack0);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-2353));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2353
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      JToolTip jToolTip0 = new JToolTip();
      KeyStroke.getKeyStroke("\" o-ions.");
      visualListModel0.getSize();
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster.remove((MouseListener) defaultCaret0, (MouseListener) defaultCaret0);
      AWTEventMulticaster.remove((MouseListener) defaultCaret0, (MouseListener) defaultCaret0);
      DefaultCaret defaultCaret1 = new DefaultCaret();
      MouseListener mouseListener0 = null;
      MouseListener mouseListener1 = AWTEventMulticaster.add((MouseListener) defaultCaret1, (MouseListener) null);
      AWTEventMulticaster.add((MouseListener) null, (MouseListener) null);
      AWTEventMulticaster.remove(mouseListener1, (MouseListener) null);
      AWTEventMulticaster.remove((MouseListener) defaultCaret0, (MouseListener) null);
      AWTEventMulticaster.add(mouseListener1, (MouseListener) null);
      JComboBox<String> jComboBox0 = null;
      try {
        jComboBox0 = new JComboBox<String>((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DefaultComboBoxModel", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<String> stack0 = new Stack<String>();
      Boolean boolean0 = new Boolean(" does not have a class function toLevel(String, Level)");
      Boolean boolean1 = Boolean.FALSE;
      Boolean boolean2 = new Boolean("");
      Stack<String> stack1 = new Stack<String>();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.LANGUAGE;
      Integer.compareUnsigned(2110, 2110);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.9635593178217623
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      visualListModel0.moveUpIndexes(intArray0);
      intArray0[1] = (-2339);
      intArray0[2] = 276;
      intArray0[3] = 9999;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      int int0 = 0;
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0);
      visualListModel0.addAllElements(collection0);
      visualListModel0.addAllElements(collection0);
      visualListModel0.addAllElements((-15), collection0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.subList(6, 14, true);
      visualListModel0.addAllElements((-2339), (Collection<VisualPageListItem>) null);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements(collection0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(1601, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1601
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.4659497192528064
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualListModel0.setData(visualPageListItemArray0);
      RenderingHints renderingHints0 = new RenderingHints((Map<RenderingHints.Key, ?>) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster.remove((MouseListener) defaultCaret0, (MouseListener) defaultCaret0);
      MouseListener mouseListener0 = AWTEventMulticaster.add((MouseListener) null, (MouseListener) defaultCaret0);
      MouseListener mouseListener1 = AWTEventMulticaster.add(mouseListener0, mouseListener0);
      MouseListener mouseListener2 = AWTEventMulticaster.remove(mouseListener0, mouseListener1);
      MouseListener mouseListener3 = AWTEventMulticaster.remove(mouseListener2, (MouseListener) null);
      defaultCaret0.isSelectionVisible();
      MouseListener mouseListener4 = AWTEventMulticaster.add((MouseListener) null, mouseListener3);
      AWTEventMulticaster.remove(mouseListener4, mouseListener1);
      AWTEventMulticaster.remove(mouseListener3, mouseListener3);
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<String> stack0 = new Stack<String>();
      Stack<String> stack1 = new Stack<String>();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getSources();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0, vector0);
      parameterBlock0.getParameters();
      parameterBlock1.getParameters();
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) null);
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster0, (HierarchyListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster1, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster1, (WindowStateListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster3, (WindowStateListener) null);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) null);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster5);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster4, (WindowStateListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster3);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseListener) defaultCaret0, (MouseListener) defaultCaret0);
      DefaultCaret defaultCaret1 = new DefaultCaret();
      AWTEventMulticaster.add((MouseListener) defaultCaret1, (MouseListener) aWTEventMulticaster8);
      AWTEventMulticaster.add((MouseListener) aWTEventMulticaster7, (MouseListener) aWTEventMulticaster2);
      JComboBox<String> jComboBox0 = new JComboBox<String>(stack0);
      jComboBox0.removeMouseListener(aWTEventMulticaster6);
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/109_pdfsam");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      Vector<String> vector0 = new Vector<String>();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/109_pdfsam");
      byte[] byteArray0 = new byte[6];
      Boolean.valueOf("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      boolean boolean0 = new Boolean("");
      visualListModel0.moveDownIndex((byte)0);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/termite/projects/109_pdfsam");
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "_,qUF3");
      visualListModel0.moveUpIndex(276);
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (int) (byte) (-64));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-64)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      parameterBlock0.getParameters();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key1, sunHints_Key0);
      OperationRegistry.getThreadSafeOperationRegistry();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0#8f5j^g< \"wv");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "q.\"ayPKRJ5[dXDE[gRV");
      visualListModel0.moveUpIndex(1);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<String> stack0 = new Stack<String>();
      stack0.removeElement("com.lowage.tet.pdfPdfGra5hics2D$HyperLinkKey");
      Boolean boolean0 = new Boolean("com.lowage.tet.pdfPdfGra5hics2D$HyperLinkKey");
      stack0.add("com.lowage.tet.pdfPdfGra5hics2D$HyperLinkKey");
      Stack<Object> stack1 = new Stack<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      stack1.sort(comparator1);
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      stack1.add((Object) integer0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      stack1.removeElement(sunHints_Key0);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("\"@jk94'<v`R;>.mst", true);
      int[] intArray0 = new int[3];
      intArray0[0] = (-1);
      intArray0[1] = 3;
      intArray0[2] = 1691;
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.removeElements(0, 0, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Boolean boolean0 = new Boolean("com.lowage.tet.pdfPdfGra5hics2D$HyperLinkKey");
      ParameterBlock parameterBlock0 = new ParameterBlock();
      parameterBlock0.removeParameters();
      ParameterBlock parameterBlock1 = new ParameterBlock();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)49;
      byteArray0[3] = (byte) (-21);
      byteArray0[4] = (byte) (-73);
      byteArray0[5] = (byte)39;
      byteArray0[6] = (byte)6;
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.appendAllElements(hashSet0);
      byteArray0[7] = (byte) (-92);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ParameterBlock parameterBlock2 = new ParameterBlock();
      ParameterBlock parameterBlock3 = new ParameterBlock();
      parameterBlock3.removeSources();
      parameterBlock0.set(462, 462);
      Stack<Object> stack0 = new Stack<Object>();
      ParameterBlock parameterBlock4 = new ParameterBlock();
      stack0.removeElement(parameterBlock0);
      parameterBlock3.setParameters(stack0);
      ParameterBlock parameterBlock5 = (ParameterBlock)parameterBlock3.shallowClone();
      parameterBlock5.clone();
      parameterBlock5.getParameters();
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      assertEquals(0, intArray0.length);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<String> stack0 = new Stack<String>();
      Boolean boolean0 = new Boolean("com.lozage.tet.pdfPdfGra5hi.s2D$HyperLinBKey");
      stack0.add("com.lozage.tet.pdfPdfGra5hi.s2D$HyperLinBKey");
      Stack<String> stack1 = new Stack<String>();
      Stack<Object> stack2 = new Stack<Object>();
      stack2.setSize(1000);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0, 0).when(comparator0).compare(any() , any());
      Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      stack2.sort(comparator0);
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      Integer.compareUnsigned(1000, (-1));
      Integer.compare((-1), (-2353));
      stack2.add((Object) integer0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key2, sunHints_Key0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      // Undeclared exception!
      try { 
        visualListModel0.subList(116, (-2353), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(116) > toIndex(-2353)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<String> stack0 = new Stack<String>();
      Stack<String> stack1 = new Stack<String>();
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, mouseWheelListener0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) null);
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster0, (HierarchyListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster3, (WindowFocusListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster2, (WindowFocusListener) null);
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster0, (WindowFocusListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster6);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster7, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster6);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster8, (ContainerListener) aWTEventMulticaster7);
      AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster3, (WindowStateListener) null);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster6, (ContainerListener) aWTEventMulticaster9);
      AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster1, (WindowStateListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster.add((MouseListener) aWTEventMulticaster0, (MouseListener) aWTEventMulticaster5);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      ParameterBlock parameterBlock1 = new ParameterBlock();
      parameterBlock1.removeSources();
      int[] intArray0 = new int[0];
      visualListModel0.moveDownIndexes(intArray0);
      int[] intArray1 = new int[2];
      intArray1[0] = 0;
      visualListModel0.moveUpIndexes(intArray1);
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "log4j.rootLogger");
      VisualListModel visualListModel0 = new VisualListModel();
      Object object0 = visualListModel0.getElementAt(0);
      assertNull(object0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Boolean boolean0 = new Boolean("`Xx-o^ss9]+Q4WSf");
      ParameterBlock parameterBlock0 = new ParameterBlock();
      parameterBlock0.removeParameters();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      ParameterBlock parameterBlock1 = new ParameterBlock();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)49;
      byteArray0[3] = (byte) (-21);
      byteArray0[4] = (byte) (-95);
      byteArray0[5] = (byte)39;
      ParameterBlock parameterBlock2 = (ParameterBlock)parameterBlock0.clone();
      byteArray0[6] = (byte)6;
      byteArray0[7] = (byte) (-92);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ParameterBlock parameterBlock3 = new ParameterBlock();
      ParameterBlock parameterBlock4 = new ParameterBlock();
      parameterBlock4.removeSources();
      ParameterBlock parameterBlock5 = new ParameterBlock();
      Stack<Object> stack0 = new Stack<Object>();
      ParameterBlock parameterBlock6 = new ParameterBlock();
      parameterBlock0.add(0L);
      stack0.removeElement(parameterBlock0);
      parameterBlock4.setParameters(stack0);
      parameterBlock2.clone();
      parameterBlock5.getParameters();
      OperationRegistry.getThreadSafeOperationRegistry();
      Object object0 = visualListModel0.getElementAt(1784);
      assertNull(object0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<String> stack0 = new Stack<String>();
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, mouseWheelListener0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) null);
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster0, (HierarchyListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster2, (WindowStateListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster5, (WindowStateListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((ActionListener) aWTEventMulticaster2, (ActionListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster7);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster8, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster7);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster9, (ContainerListener) aWTEventMulticaster8);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster8, (InputMethodListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster11, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster3, (WindowStateListener) aWTEventMulticaster6);
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster6, (WindowStateListener) aWTEventMulticaster6);
      AWTEventMulticaster.add((WindowListener) aWTEventMulticaster8, (WindowListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster5);
      AWTEventMulticaster.add((MouseListener) aWTEventMulticaster12, (MouseListener) aWTEventMulticaster6);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster.add((MouseListener) aWTEventMulticaster5, (MouseListener) aWTEventMulticaster10);
      AWTEventMulticaster.add((MouseListener) aWTEventMulticaster5, (MouseListener) null);
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      Vector<Object> vector0 = new Vector<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(vector0, vector0);
      parameterBlock0.clone();
      parameterBlock0.getParameters();
      // Undeclared exception!
      try { 
        visualListModel0.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      int[] intArray0 = new int[0];
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)9;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[1] = (byte)30;
      byteArray0[2] = (byte) (-24);
      byteArray0[3] = (byte)63;
      byteArray0[4] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(intArray0, true);
      System.setCurrentTimeMillis((-1L));
      visualListModel0.removeElements(2842, 2842, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.9374751429887778
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(0, 0);
      Vector<String> vector0 = new Vector<String>();
      vector0.add(".");
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      JToolTip jToolTip0 = new JToolTip();
      vector0.add("");
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndex(1);
      visualListModel1.moveUpIndex(1340);
      // Undeclared exception!
      try { 
        visualListModel0.subList(34, 0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(34) > toIndex(0)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.5935041414150646
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/109_pdfsam");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      Vector<String> vector0 = new Vector<String>();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/109_pdfsam");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      byte[] byteArray0 = new byte[6];
      Boolean.valueOf("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[0] = (byte) (-64);
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/termite/projects/109_pdfsam");
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "");
      visualListModel0.moveDownIndex((byte) (-64));
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("/home/ubuntu/termite/projects/109_pdfsam");
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      FileSystemHandling.appendStringToFile(evoSuiteFile3, "_,qUF3");
      visualListModel0.moveUpIndex(276);
      visualListModel0.subList(0, 0, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("\"@jk94'<v`R;>.mst", true);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<String> vector0 = new Vector<String>();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/109_pdfsam");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      byte[] byteArray0 = new byte[1];
      Boolean.valueOf("");
      byteArray0[0] = (byte) (-64);
      vector0.add("/Hob:");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/109_pdfsam");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.moveDownIndex((-191));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      visualListModel0.moveUpIndex((byte) (-64));
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<String> stack0 = new Stack<String>();
      stack0.add("\u0130NFO");
      stack0.removeElement("com.lowage.tet.pdfPdfGra5hics2D$HyperLinkKey");
      stack0.add("com.lowage.tet.pdfPdfGra5hics2D$HyperLinkKey");
      stack0.add("com.lowage.tet.pdfPdfGra5hics2D$HyperLinkKey");
      Stack<String> stack1 = new Stack<String>();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getSources();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0, vector0);
      Vector<Object> vector1 = parameterBlock0.getParameters();
      Vector<Object> vector2 = parameterBlock1.getParameters();
      ParameterBlock parameterBlock2 = new ParameterBlock(vector2, vector2);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      vector2.add((Object) integer0);
      vector0.sort(comparator0);
      vector2.add((Object) vector1);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      vector1.removeElement(integer0);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, "com.lowage.tet.pdfPdfGra5hics2D$HyperLinkKey");
      OperationRegistry operationRegistry0 = OperationRegistry.getThreadSafeOperationRegistry();
      operationRegistry0.clearPropertyState();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      visualListModel0.addAllElements(1707, (Collection<VisualPageListItem>) treeSet0);
      OperationRegistry operationRegistry1 = new OperationRegistry();
      String string0 = "M;31Xu4t^FwDlu=F";
      String string1 = ":";
      // Undeclared exception!
      try { 
        operationRegistry0.clearPropertyState("M;31Xu4t^FwDlu=F");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Mode name \"M;31Xu4t^FwDlu=F\" is not a valid (registered) registry mode.
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      DefaultCaret defaultCaret0 = new DefaultCaret();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      Dialog.ModalExclusionType dialog_ModalExclusionType0 = Dialog.ModalExclusionType.APPLICATION_EXCLUDE;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key3, sunHints_Key2);
      VisualListModel visualListModel0 = new VisualListModel();
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        visualListModel0.subList(1109, (-509), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1109) > toIndex(-509)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      stack0.add("");
      Boolean boolean0 = new Boolean("com.lozage.tet.pdfPdfGra5hi.s2D$HyperLinBKey");
      stack0.add("com.lozage.tet.pdfPdfGra5hi.s2D$HyperLinBKey");
      Stack<String> stack1 = new Stack<String>();
      Stack<Object> stack2 = new Stack<Object>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Boolean.valueOf("com.lozage.tet.pdfPdfGra5hi.s2D$HyperLinBKey");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      stack0.replaceAll(unaryOperator0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/109_pdfsam");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "k@`0hY'");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-64);
      byteArray0[1] = (byte) (-64);
      byteArray0[2] = (byte) (-64);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "_,qUF3");
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("PA\"`fY0@U", true);
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList((int) (byte) (-64), (int) (byte) (-64), true);
      assertNull(collection0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/109_pdfsam");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      visualListModel0.subList(260, 260);
      Vector<String> vector0 = new Vector<String>();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/109_pdfsam");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      byte[] byteArray0 = new byte[1];
      Boolean.valueOf("");
      byteArray0[0] = (byte) (-64);
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/termite/projects/109_pdfsam");
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "");
      visualListModel0.moveDownIndex((byte) (-64));
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("/home/ubuntu/termite/projects/109_pdfsam");
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile2);
      FileSystemHandling.appendStringToFile(evoSuiteFile3, "_,qUF3");
      visualListModel0.moveUpIndex(276);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("\"@jk94'<v`R;>.mst", true);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      DefaultCaret defaultCaret0 = new DefaultCaret();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key3, sunHints_Key2);
      VisualListModel visualListModel0 = new VisualListModel();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel0.removeElements((-3331), 50, false);
      int[] intArray0 = new int[2];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      intArray0[0] = 0;
      intArray0[1] = (-1);
      visualListModel0.removeElements(intArray0, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      DefaultCaret defaultCaret0 = new DefaultCaret();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      Dialog.ModalExclusionType dialog_ModalExclusionType0 = Dialog.ModalExclusionType.NO_EXCLUDE;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      ParameterBlock parameterBlock1 = parameterBlock0.set((double) 0, 114);
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key3, sunHints_Key2);
      parameterBlock1.getParameters();
      parameterBlock1.getParameters();
      parameterBlock0.getSources();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(0, 12, true);
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 114;
      intArray0[2] = 12;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 114;
      intArray0[7] = (-1);
      intArray0[8] = 12;
      visualListModel0.removeElements(intArray0, false);
      assertEquals(9, intArray0.length);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      OperationRegistry operationRegistry0 = OperationRegistry.getThreadSafeOperationRegistry();
      operationRegistry0.getOperationDescriptor("4=>7%");
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      OperationRegistry.getThreadSafeOperationRegistry();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
      AddDescriptor addDescriptor0 = new AddDescriptor();
      OperationRegistry.getThreadSafeOperationRegistry();
      // Undeclared exception!
      try { 
        operationRegistry0.getOrderedProductList("/images/thumbnailerror.png", "4=>7%");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Mode name \"/images/thumbnailerror.png\" is not a valid (registered) registry mode.
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)9;
      String[] stringArray0 = new String[6];
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringArray0[0] = "] conversion failed.";
      stringArray0[1] = "] conversion failed.";
      stringArray0[2] = "] conversion failed.";
      stringArray0[4] = "] conversion failed.";
      stringArray0[5] = "] conversion failed.";
      JComboBox<String> jComboBox1 = new JComboBox<String>(stringArray0);
      jComboBox1.getBackground();
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>();
      jComboBox1.setModel(defaultComboBoxModel0);
      jComboBox1.doLayout();
      jComboBox1.removeMouseListener((MouseListener) null);
      String[] stringArray1 = new String[6];
      stringArray1[0] = "] conversion failed.";
      stringArray1[2] = "] conversion failed.";
      stringArray1[3] = "] conversion failed.";
      stringArray1[4] = "] conversion failed.";
      stringArray1[5] = "] conversion failed.";
      JComboBox<String> jComboBox2 = new JComboBox<String>(stringArray1);
      AWTEventMulticaster.add((MouseListener) null, (MouseListener) null);
      jComboBox1.removeMouseListener((MouseListener) null);
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(429, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 429
         //
         verifyException("java.util.Vector", e);
      }
  }
}
