/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 14:48:02 GMT 2019
 */

package net.sf.xbus.protocol.records;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.StringWriter;
import java.io.Writer;
import java.time.Clock;
import java.time.Instant;
import java.time.temporal.TemporalField;
import java.util.Date;
import java.util.Hashtable;
import java.util.Iterator;
import javax.xml.soap.MimeHeaders;
import javax.xml.stream.util.EventReaderDelegate;
import javax.xml.stream.util.StreamReaderDelegate;
import net.sf.xbus.base.bytearraylist.ByteArrayList;
import net.sf.xbus.base.xbussystem.XBUSSystem;
import net.sf.xbus.protocol.records.RecordTypeMessage;
import org.apache.axis.Message;
import org.apache.axis.client.AxisClient;
import org.apache.axis.configuration.DirProvider;
import org.apache.axis.encoding.SerializationContext;
import org.apache.axis.message.CDATAImpl;
import org.apache.html.dom.HTMLAppletElementImpl;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.html.dom.HTMLFrameSetElementImpl;
import org.apache.html.dom.HTMLParamElementImpl;
import org.apache.wml.dom.WMLDocumentImpl;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.dom.DocumentFragmentImpl;
import org.apache.xerces.dom.DocumentTypeImpl;
import org.apache.xerces.dom.PSVIDocumentImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.w3c.dom.Comment;
import org.w3c.dom.DocumentType;
import org.w3c.dom.Node;
import org.w3c.dom.traversal.NodeFilter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RecordTypeMessage_ESTest extends RecordTypeMessage_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseDocument(deferredDocumentImpl0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "badPropertyDesc00");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      pSVIDocumentImpl0.getAsync();
      documentTypeImpl0.getTextContent();
      DocumentTypeImpl documentTypeImpl1 = new DocumentTypeImpl(pSVIDocumentImpl0, "]i", "003", "DtRCl8mc-");
      documentTypeImpl1.getPublicId();
      DocumentTypeImpl documentTypeImpl2 = new DocumentTypeImpl(wMLDocumentImpl0, "003");
      documentTypeImpl2.normalize();
      DocumentTypeImpl documentTypeImpl3 = new DocumentTypeImpl(wMLDocumentImpl0, "I");
      documentTypeImpl3.getLocalName();
      documentTypeImpl2.setReadOnly(true, true);
      pSVIDocumentImpl0.getPrefix();
      pSVIDocumentImpl0.createDocumentType((String) null, "003", (String) null);
      Integer integer0 = new Integer(0);
      wMLDocumentImpl0.setUserData((Object) "104");
      PSVIDocumentImpl pSVIDocumentImpl1 = new PSVIDocumentImpl((DocumentType) null);
      wMLDocumentImpl0.getVersion();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("N`,1FM~DJy15ttX", (XBUSSystem) null, "U)&");
      recordTypeMessage0.setResponseDocument(pSVIDocumentImpl0, (XBUSSystem) null);
      recordTypeMessage0.getResponseText();
      recordTypeMessage0.getResponseObject();
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setRequestObject((Object) null, (XBUSSystem) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Hashtable<Integer, Integer> hashtable0 = new Hashtable<Integer, Integer>();
      recordTypeMessage0.synchronizeRequestFields((XBUSSystem) null);
      MimeHeaders mimeHeaders0 = new MimeHeaders();
      Message message0 = new Message((Object) null, false, mimeHeaders0);
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      recordTypeMessage0.getResponseObject();
      message0.getContentDescription();
      Integer integer0 = new Integer((-1));
      XBUSSystem xBUSSystem0 = null;
      try {
        xBUSSystem0 = new XBUSSystem((String) null, hashtable0, true);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      MockDate mockDate0 = new MockDate();
      MockDate mockDate1 = new MockDate();
      mockDate1.before(mockDate0);
      MockDate mockDate2 = new MockDate();
      MockDate mockDate3 = new MockDate(15, 15, 15, 15, 15, 15);
      MockDate.UTC((-2326), 15, (-2326), (-2326), 15, (-2326));
      mockDate1.before(mockDate0);
      MockDate.UTC((-2326), 15, 15, 2006, 15, (-2326));
      mockDate0.toInstant();
      MockDate mockDate4 = new MockDate(2006);
      MockDate.UTC(2006, (-2326), 15, 2006, (-2326), 2006);
      MockDate mockDate5 = new MockDate((-2326));
      mockDate1.before(mockDate4);
      mockDate0.after(mockDate1);
      byte[] byteArray0 = new byte[9];
      mockDate0.before(mockDate4);
      MockDate mockDate6 = new MockDate(16, 7, (byte)0, 7, 16, (byte)50);
      MockDate mockDate7 = new MockDate();
      mockDate6.getTime();
      mockDate6.after(mockDate0);
      MockDate mockDate8 = new MockDate(15, 16, 16, (byte)50, 7);
      mockDate8.toInstant();
      mockDate8.before(mockDate6);
      mockDate7.toInstant();
      MockDate mockDate9 = new MockDate();
      MockDate mockDate10 = new MockDate();
      MockDate.UTC((byte)50, 7, 7, (byte)0, (-1495), (byte)0);
      MockDate mockDate11 = new MockDate((-2326), 16, 15);
      MockDate mockDate12 = new MockDate((byte)50);
      try { 
        recordTypeMessage0.setResponseObject(mockDate12, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 org.evosuite.runtime.mock.java.util.MockDate cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      StreamReaderDelegate streamReaderDelegate1 = new StreamReaderDelegate();
      StreamReaderDelegate streamReaderDelegate2 = new StreamReaderDelegate(streamReaderDelegate0);
      StreamReaderDelegate streamReaderDelegate3 = new StreamReaderDelegate();
      StreamReaderDelegate streamReaderDelegate4 = new StreamReaderDelegate(streamReaderDelegate0);
      StreamReaderDelegate streamReaderDelegate5 = new StreamReaderDelegate(streamReaderDelegate2);
      StreamReaderDelegate streamReaderDelegate6 = new StreamReaderDelegate(streamReaderDelegate3);
      // Undeclared exception!
      try { 
        streamReaderDelegate4.getAttributeNamespace(8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.xml.stream.util.StreamReaderDelegate", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.synchronizeResponseFields((XBUSSystem) null);
      DirProvider dirProvider0 = null;
      try {
        dirProvider0 = new DirProvider("(803^vw@X(\"", "(803^vw@X(\"");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Configuration file directory '(803^vw@X(\"' does not exist or is not a directory or is not readable.
         //
         verifyException("org.apache.axis.configuration.DirProvider", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      byte[] byteArray0 = new byte[8];
      ByteArrayList byteArrayList0 = ByteArrayList.createByteArrayList(byteArray0, (-11));
      byteArrayList0.toString();
      Iterator iterator0 = new EventReaderDelegate();
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      MockDate mockDate0 = new MockDate();
      MockDate mockDate1 = new MockDate();
      mockDate1.before(mockDate0);
      mockDate1.clone();
      MockDate.UTC(142, 361, 1873, 142, 142, (-2331));
      mockDate1.before(mockDate0);
      MockInstant.now();
      mockDate1.before(mockDate0);
      mockDate0.after(mockDate1);
      byte[] byteArray0 = new byte[2];
      ByteArrayList byteArrayList0 = new ByteArrayList();
      Iterator iterator0 = new EventReaderDelegate();
      recordTypeMessage0.setRequestObject(byteArrayList0, (XBUSSystem) null);
      MockDate mockDate2 = new MockDate(3, 7, (byte)0, 7, 3, (byte)32);
      MockDate mockDate3 = new MockDate(3, (byte)32, 3, 3, (byte)32, (byte)32);
      mockDate2.getTime();
      mockDate2.getTime();
      mockDate2.after(mockDate0);
      MockDate mockDate4 = new MockDate(3, 7, 511, 511, 3, 7);
      mockDate4.toInstant();
      mockDate4.before(mockDate2);
      MockDate mockDate5 = new MockDate();
      MockDate mockDate6 = new MockDate((byte)0, 545, 7, (byte)32, 545);
      MockDate.UTC((byte)32, 7, 7, (byte)0, (-1484), (byte)0);
      mockDate2.setTime(545);
      MockDate mockDate7 = new MockDate(3, 7, 3, 7, 3);
      MockDate mockDate8 = new MockDate((byte)32);
      try { 
        recordTypeMessage0.setRequestObject(mockDate3, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 org.evosuite.runtime.mock.java.util.MockDate cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      MockDate mockDate0 = new MockDate();
      MockDate mockDate1 = new MockDate();
      MockInstant.ofEpochSecond(2589L, 2589L);
      mockDate1.before(mockDate0);
      mockDate0.after(mockDate1);
      mockDate0.setTime(1L);
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)26;
      int int0 = 3;
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byteArrayList0.add(byteArray0);
      byteArrayList0.toString();
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestObject(byteArrayList0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("", (XBUSSystem) null, "0>(Ca=d3sIE");
      Clock clock0 = mock(Clock.class, new ViolatedAssumptionAnswer());
      doReturn((Instant) null).when(clock0).instant();
      MockInstant.now(clock0);
      TemporalField temporalField0 = mock(TemporalField.class, new ViolatedAssumptionAnswer());
      recordTypeMessage0.setRequestObject((Object) null, (XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      MockDate mockDate0 = new MockDate();
      MockDate mockDate1 = new MockDate();
      mockDate0.before(mockDate1);
      Instant instant0 = MockInstant.ofEpochSecond(2589L, 2589L);
      recordTypeMessage0.setRequestText((String) null, (XBUSSystem) null);
      Date.from(instant0);
      mockDate1.before(mockDate0);
      mockDate0.after(mockDate1);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      // Undeclared exception!
      try { 
        streamReaderDelegate0.hasText();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.xml.stream.util.StreamReaderDelegate", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestText("0", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      PSVIDocumentImpl pSVIDocumentImpl1 = new PSVIDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getNodeName();
      pSVIDocumentImpl0.isSupported("#aKPr^@opert>yesc00", "#aKPr^@opert>yesc00");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "#aKPr^@opert>yesc00");
      pSVIDocumentImpl0.setReadOnly(false, false);
      hTMLDocumentImpl0.getTitle();
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl();
      HTMLParamElementImpl hTMLParamElementImpl0 = new HTMLParamElementImpl(hTMLDocumentImpl0, "#aKPr^@opert>yesc00");
      pSVIDocumentImpl1.setStandalone(false);
      hTMLDocumentImpl0.normalize();
      NodeFilter nodeFilter0 = mock(NodeFilter.class, new ViolatedAssumptionAnswer());
      hTMLDocumentImpl0.getParentNode();
      pSVIDocumentImpl0.createTreeWalker((Node) wMLDocumentImpl0, (short) (-34), nodeFilter0);
      pSVIDocumentImpl0.setErrorChecking(false);
      NodeFilter nodeFilter1 = mock(NodeFilter.class, new ViolatedAssumptionAnswer());
      pSVIDocumentImpl0.createTreeWalker((Node) wMLDocumentImpl0, (int) (short) (-34), nodeFilter1, false);
      CDATAImpl cDATAImpl0 = new CDATAImpl("#aKPr^@opert>yesc00");
      hTMLDocumentImpl0.setXmlEncoding("");
      hTMLDocumentImpl0.createCDATASection("");
      hTMLDocumentImpl0.getElementsByName("");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLFrameSetElementImpl hTMLFrameSetElementImpl0 = new HTMLFrameSetElementImpl((HTMLDocumentImpl) null, "#aKPr^@opert>yesc00");
      pSVIDocumentImpl0.getPrefix();
      wMLDocumentImpl0.getElementsByTagNameNS((String) null, (String) null);
      PSVIDocumentImpl pSVIDocumentImpl2 = new PSVIDocumentImpl();
      wMLDocumentImpl0.getVersion();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      MockDate mockDate0 = new MockDate((short) (-34), (-2755), 209, 1539, (short) (-34));
      recordTypeMessage0.setResponseTimestamp(mockDate0);
      recordTypeMessage0.getRequestTextAsXML((XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      PSVIDocumentImpl pSVIDocumentImpl1 = new PSVIDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Comment comment0 = pSVIDocumentImpl1.createComment("gB2Loi-Lk&|W{#g]C");
      hTMLDocumentImpl0.getNodeName();
      pSVIDocumentImpl0.isSupported("#aKP^Lopert>ysc00", "#aKP^Lopert>ysc00");
      pSVIDocumentImpl0.setReadOnly(false, false);
      hTMLDocumentImpl0.getTitle();
      DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl();
      HTMLParamElementImpl hTMLParamElementImpl0 = new HTMLParamElementImpl(hTMLDocumentImpl0, "#aKP^Lopert>ysc00");
      pSVIDocumentImpl1.createEntity("RC_OK");
      pSVIDocumentImpl1.importNode(comment0, false);
      pSVIDocumentImpl1.getOwnerDocument();
      pSVIDocumentImpl1.setStandalone(false);
      pSVIDocumentImpl1.createElementNS("U %]jDa", "RC_OK", "");
      hTMLDocumentImpl0.normalize();
      NodeFilter nodeFilter0 = mock(NodeFilter.class, new ViolatedAssumptionAnswer());
      HTMLAppletElementImpl hTMLAppletElementImpl0 = new HTMLAppletElementImpl(hTMLDocumentImpl0, "#aKP^Lopert>ysc00");
      pSVIDocumentImpl1.setErrorChecking(false);
      NodeFilter nodeFilter1 = mock(NodeFilter.class, new ViolatedAssumptionAnswer());
      CDATAImpl cDATAImpl0 = new CDATAImpl("#aKP^Lopert>ysc00");
      hTMLDocumentImpl0.setXmlEncoding("");
      hTMLDocumentImpl0.createCDATASection("");
      hTMLDocumentImpl0.getElementsByName("");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLFrameSetElementImpl hTMLFrameSetElementImpl0 = new HTMLFrameSetElementImpl((HTMLDocumentImpl) null, "#aKP^Lopert>ysc00");
      pSVIDocumentImpl0.getPrefix();
      PSVIDocumentImpl pSVIDocumentImpl2 = new PSVIDocumentImpl();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setResponseDocument(pSVIDocumentImpl0, (XBUSSystem) null);
      AxisClient axisClient0 = null;
      try {
        axisClient0 = new AxisClient();
        fail("Expecting exception: LinkageError");
      
      } catch(LinkageError e) {
         //
         // loader constraint violation: when resolving method \"org.apache.commons.discovery.resource.classes.DiscoverClasses.findResourceClasses(Lorg/apache/commons/discovery/ResourceNameIterator;)Lorg/apache/commons/discovery/ResourceClassIterator;\" the class loader (instance of org/evosuite/instrumentation/InstrumentingClassLoader) of the current class, org/apache/axis/AxisProperties, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/apache/commons/discovery/resource/classes/ResourceClassDiscoverImpl, have different Class objects for the type org/apache/commons/discovery/ResourceNameIterator used in the signature
         //
         verifyException("org.apache.axis.AxisProperties", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getRequestObject((XBUSSystem) null);
      DirProvider dirProvider0 = null;
      try {
        dirProvider0 = new DirProvider("(803mv@5X(\"", "(803mv@5X(\"");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Configuration file directory '(803mv@5X(\"' does not exist or is not a directory or is not readable.
         //
         verifyException("org.apache.axis.configuration.DirProvider", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      PSVIDocumentImpl pSVIDocumentImpl1 = new PSVIDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Comment comment0 = pSVIDocumentImpl1.createComment("RC_OK");
      hTMLDocumentImpl0.isSameNode(pSVIDocumentImpl0);
      comment0.setData("'w&&&3?UZe3jXy");
      pSVIDocumentImpl0.isSupported("#aKP^Lrt>ysc", "#aKP^Lrt>ysc");
      pSVIDocumentImpl0.setReadOnly(false, false);
      comment0.isDefaultNamespace("@En))QT:\"dS@");
      hTMLDocumentImpl0.getTitle();
      pSVIDocumentImpl1.createTreeWalker((Node) pSVIDocumentImpl0, 1550, (NodeFilter) null, false);
      DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl();
      hTMLDocumentImpl0.getOwnerDocument();
      pSVIDocumentImpl1.createEntity("RC_OK");
      pSVIDocumentImpl1.importNode(comment0, false);
      pSVIDocumentImpl1.getOwnerDocument();
      pSVIDocumentImpl1.setStandalone(false);
      pSVIDocumentImpl1.createElementNS("c\f)ul&%~-7", "RC_OK", "");
      hTMLDocumentImpl0.normalize();
      HTMLAppletElementImpl hTMLAppletElementImpl0 = new HTMLAppletElementImpl(hTMLDocumentImpl0, "#aKP^Lrt>ysc");
      pSVIDocumentImpl1.setErrorChecking(false);
      CDATAImpl cDATAImpl0 = new CDATAImpl("#aKP^Lrt>ysc");
      hTMLDocumentImpl0.setXmlEncoding("");
      hTMLDocumentImpl0.createCDATASection("");
      hTMLDocumentImpl0.getElementsByName("");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLFrameSetElementImpl hTMLFrameSetElementImpl0 = new HTMLFrameSetElementImpl((HTMLDocumentImpl) null, "#aKP^Lrt>ysc");
      pSVIDocumentImpl0.getPrefix();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("yPmtGjDJ", (XBUSSystem) null, "");
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseText("y{2hTJ%m4!wJ", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      SerializationContext serializationContext0 = new SerializationContext((Writer) null);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((String) null, (XBUSSystem) null, (String) null);
      recordTypeMessage0.getResponseText();
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseText(":ps5=pBNovChRL_\"e", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[9];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)113;
      recordTypeMessage0.setResponseText((String) null, (XBUSSystem) null);
      assertEquals(0, recordTypeMessage0.getErrorcode());
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setResponseObject((Object) null, (XBUSSystem) null);
      DirProvider dirProvider0 = null;
      try {
        dirProvider0 = new DirProvider("(803^v@5X(\"", "(803^v@5X(\"");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Configuration file directory '(803^v@5X(\"' does not exist or is not a directory or is not readable.
         //
         verifyException("org.apache.axis.configuration.DirProvider", e);
      }
  }
}
