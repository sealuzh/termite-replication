/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 13:03:39 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParserConstants;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Token;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaParserTokenManager_ESTest extends JavaParserTokenManager_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5091163735969886
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)76;
      StringReader stringReader0 = new StringReader("F5rq");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2193, (byte)76);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("\"<<\"");
      StringReader stringReader2 = new StringReader("\"<<\"");
      javaParserTokenManager0.getNextToken();
      Token token0 = new Token();
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, (byte)76);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 76. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.9737193137665394
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)76;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("*XC\"G7Pyd'U7?sF");
      StringReader stringReader1 = new StringReader("-9cvhX]6QPUm'(v%zr");
      stringReader1.reset();
      stringReader0.skip(1035L);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 2997, 3303);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader1.mark(51);
      javaParserTokenManager0.getNextToken();
      StringReader stringReader2 = new StringReader("-9cvhX]6QPUm'(v%zr");
      StringReader stringReader3 = new StringReader("-9cvhX]6QPUm'(v%zr");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(5, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals("9cvhX", token0.toString());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.9587412505720017
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)76;
      byteArray0[1] = (byte) (-32);
      byteArray0[2] = (byte)76;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      byteArrayInputStream0.mark(1108);
      StringReader stringReader0 = new StringReader("'6Vgq%_[huKxV35DV");
      stringReader0.skip(360L);
      StringReader stringReader1 = new StringReader("'6Vgq%_[huKxV35DV");
      stringReader1.reset();
      StringReader stringReader2 = new StringReader("");
      StringReader stringReader3 = new StringReader("Vfj7a>m5K");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader3);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(124, token0.kind);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.3267357324425544
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)76;
      byteArray0[1] = (byte) (-32);
      StringReader stringReader0 = new StringReader("\"abstract\"");
      StringReader stringReader1 = new StringReader("");
      stringReader0.read();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-32), (byte) (-32), (byte)76);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1115, 1115, 21);
      javaCharStream1.BeginToken();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream1.backup((byte) (-32));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaCharStream1.backup(27);
      Token token0 = javaParserTokenManager0.getNextToken();
      token0.beginColumn = 97;
      javaParserTokenManager0.TokenLexicalActions(token0);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals("", token1.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.4563366645108577
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "mnq6aTKD");
      StringReader stringReader0 = new StringReader("@");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.reset();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("finally");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1, 1531, (-1), 1536);
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream3);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 2557);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 2557. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.9668753842708706
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader("`'MwJ1\"*~&b");
      StringReader stringReader1 = new StringReader("\"[\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader1.reset();
      stringReader1.read();
      StringReader stringReader2 = new StringReader("ZmK.=");
      stringReader2.reset();
      stringReader1.reset();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaParserTokenManager0.getNextToken();
      StringReader stringReader3 = new StringReader("ZmK.=");
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.next;
      Token token1 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.getNextToken();
      Token token2 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals(0, token2.kind);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5684573465719043
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)76;
      StringReader stringReader0 = new StringReader("xSq}l");
      stringReader0.reset();
      stringReader0.read();
      stringReader0.skip((byte)76);
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("xSq}l");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(80, token0.kind);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5195757812480508
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)103;
      byteArray0[1] = (byte)33;
      byteArray0[2] = (byte)121;
      byteArray0[3] = (byte) (-125);
      byteArray0[4] = (byte) (-38);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("mv-EH");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 38, 2786);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "mv-EH");
      javaParserTokenManager0.jjnewStateCnt = 38;
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(32);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 32. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.9866895159716904
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("(ni5-gSyD");
      StringReader stringReader1 = new StringReader("(ni5-gSyD");
      stringReader1.reset();
      stringReader1.read();
      stringReader0.skip(1498L);
      StringReader stringReader2 = new StringReader("this");
      stringReader0.reset();
      StringReader stringReader3 = new StringReader("(ni5-gSyD");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader3);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.getNextToken();
      assertEquals(5, javaCharStream0.getEndColumn());
      assertEquals(3, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.9439041054621389
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)76;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("*XC\"G7Pyd'U7?sF");
      StringReader stringReader1 = new StringReader("-9cvhX]6QPUm'(v%zr");
      stringReader1.reset();
      stringReader0.skip(1035L);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 2997, 3303);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader1.mark(51);
      javaParserTokenManager0.getNextToken();
      StringReader stringReader2 = new StringReader("-9cvhX]6QPUm'(v%zr");
      StringReader stringReader3 = null;
      try {
        stringReader3 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.511509523993511
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)43;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("DgIN_t}52Wr[*~X@X");
      stringReader0.read();
      StringReader stringReader1 = new StringReader("DgIN_t}52Wr[*~X@X");
      StringReader stringReader2 = new StringReader("DgIN_t}52Wr[*~X@X");
      stringReader2.reset();
      StringReader stringReader3 = new StringReader("$6!z9PgY]$:k>-%");
      stringReader3.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader3);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 99, (-1));
      javaCharStream1.ReInit((Reader) stringReader2, 99, (-1859));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      stringReader1.close();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream1.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.006833754914604
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)43;
      byteArray0[1] = (byte)43;
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("package");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.reset();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.read();
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token0 = token_GTToken1.specialToken;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "X7(D+f");
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 1461);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 1461. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.9548138316365726
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".rtO,CUU");
      StringReader stringReader1 = new StringReader("enum");
      stringReader1.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaParserTokenManager0.getNextToken();
      Token.newToken(1);
      ByteArrayInputStream byteArrayInputStream0 = null;
      try {
        byteArrayInputStream0 = new ByteArrayInputStream((byte[]) null, 1551, 41);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5606874232938117
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)76;
      StringReader stringReader0 = new StringReader("\"\r\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2193, (byte)76);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("\"<<\"");
      StringReader stringReader2 = new StringReader("\"<<\"");
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 2193, column 77.  Encountered: \"\\r\" (13), after : \"\\\"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.9647138941158753
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)43;
      byteArray0[1] = (byte)43;
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader0 = new StringReader("lR!wlv2jW!");
      StringReader stringReader1 = new StringReader("-x-v]J7)e}8uLUg");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals(1, javaCharStream1.getEndColumn());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5390303892170727
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"<<\"");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("W]XK:)57,l_/h");
      stringReader0.reset();
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaParserTokenManager0.getNextToken();
      StringReader stringReader1 = new StringReader("W]XK:)57,l_/h");
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.next;
      Token token1 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.getNextToken();
      Token token2 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(78, token2.kind);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.465398336137827
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)76;
      StringReader stringReader0 = new StringReader("\"<<\"");
      StringReader stringReader1 = new StringReader("\"<<\"");
      Token token0 = new Token();
      StringReader stringReader2 = new StringReader("PlKB8ldBGt");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(9, javaCharStream0.bufpos);
      assertEquals(10, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.002272484405268
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StringReader stringReader0 = new StringReader("nKjId}`.9m!Pc};>*0*");
      StringReader stringReader1 = new StringReader("6!PC@u");
      StringReader stringReader2 = new StringReader("6!PC@u");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 113, 2531);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.next;
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(2535, javaCharStream0.getBeginColumn());
      assertEquals("@", token1.toString());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.9654005808538304
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)43;
      byteArray0[1] = (byte)43;
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader0 = new StringReader("lR!wlv2jW!");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.reset();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("lR", token0.toString());
      
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.getBeginColumn());
      assertEquals(1, javaCharStream0.getLine());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.9638167353397133
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("6/wT$@PPNib");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.reset();
      stringReader0.read();
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("W'NpZ3WfG5N*C1Tq=)");
      StringReader stringReader3 = new StringReader("W'NpZ3WfG5N*C1Tq=)");
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.mark(54);
      stringReader0.mark(92);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager2 = null;
      try {
        javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1, 54);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 54. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.9609665992431484
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)76;
      byteArray0[1] = (byte) (-32);
      StringReader stringReader0 = new StringReader("\"abstract\"");
      StringReader stringReader1 = new StringReader("");
      stringReader0.read();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-32), (byte) (-32), (byte)76);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1115, 1115, 21);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream1.backup((byte) (-32));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      token0.beginColumn = 97;
      javaParserTokenManager0.TokenLexicalActions(token0);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals("", token1.toString());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.1869691713521955
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)43;
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("while");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader1.reset();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.ready();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.getNextToken();
      assertEquals(5, javaCharStream0.getBeginColumn());
      assertEquals(5, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.531335768523829
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)76;
      StringReader stringReader0 = new StringReader("null");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 105, (byte)76);
      StringReader stringReader1 = new StringReader("</M;Se[#DP>~");
      StringReader stringReader2 = new StringReader("null");
      stringReader2.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, 2620, (byte)76, 10);
      StringReader stringReader3 = new StringReader("null");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader3, 21, (-676), 39);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals(78, javaCharStream1.getBeginColumn());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.983249198812128
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("l[&@Ao}");
      StringReader stringReader1 = new StringReader("\"private\"");
      StringReader stringReader2 = new StringReader("l[&@Ao}");
      stringReader2.reset();
      stringReader0.read();
      stringReader1.skip(0L);
      stringReader0.reset();
      StringReader stringReader3 = new StringReader("\"byte\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(81, token0.kind);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.9170970746239324
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StringReader stringReader0 = new StringReader("h;w3@x6xUb),QbaZ");
      StringReader stringReader1 = new StringReader("h;w3@x6xUb),QbaZ");
      stringReader1.reset();
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      token0.next = token1;
      javaParserTokenManager0.ReInit(javaCharStream0, 1);
      StringReader stringReader2 = new StringReader(";");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 2511, 22, 1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaCharStream0.backup(83);
      javaCharStream0.adjustBeginLineColumn(2014, 2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 2018, column 15.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5695696936241845
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StringReader stringReader0 = new StringReader("nKjId}`.9m!Pc};>*0*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 108, 120, 108);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("nKjId}`.9m!Pc};>*0*");
      StringReader stringReader2 = new StringReader("nKjId}`.9m!Pc};>*0*");
      stringReader0.read();
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader0, 2620, (-1), 47);
      JavaCharStream javaCharStream4 = new JavaCharStream(stringReader2, (-1), (-1), 36);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(5, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.9435528515000753
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[21];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("<LETTER>");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("<", token0.toString());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.3857727772151651
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("S,'0i=b0s");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      stringReader1.reset();
      stringReader1.read();
      StringReader stringReader2 = new StringReader("S,'0i=b0s");
      StringReader stringReader3 = new StringReader("0}FI2b");
      StringReader stringReader4 = new StringReader("0}FI2b");
      stringReader1.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.mark((byte)66);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: \"i\" (105), after : \"\\'0\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.613636637933878
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)76;
      byteArray0[1] = (byte) (-32);
      StringReader stringReader0 = new StringReader("\"abstract\"");
      StringReader stringReader1 = new StringReader("");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-32), (byte) (-32), (byte)76);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1115, 1115, 21);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      StringReader stringReader2 = new StringReader("super");
      javaCharStream1.tokenBegin = 1115;
      StringReader stringReader3 = new StringReader("u|6/e;t)^C1L.");
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader3);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(7, javaCharStream1.bufpos);
      assertEquals(13, token0.kind);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.962227466196086
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("sxS/t%NSC-WG BYh9");
      StringReader stringReader1 = new StringReader("sxS/t%NSC-WG BYh9");
      stringReader0.reset();
      stringReader1.reset();
      stringReader0.skip((-970L));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-849), (-2275));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.mark((byte)4);
      javaParserTokenManager0.getNextToken();
      stringReader1.close();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(104, token0.kind);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.9802532791608642
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StringReader stringReader0 = new StringReader("h;w3@x6xUb),QbaZ");
      StringReader stringReader1 = new StringReader("h;w3@x6xUb),QbaZ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 60, 60);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.next;
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      Token token1 = new Token();
      javaParserTokenManager0.getNextToken();
      Token token2 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("w3", token2.toString());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.9825665176997587
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("p#]NNa/r2EmWe$jQ");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      Token token1 = Token.newToken(1);
      javaParserTokenManager0.SkipLexicalActions(token1);
      javaParserTokenManager1.SkipLexicalActions(token0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"#\" (35), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.8003871978601085
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)43;
      StringReader stringReader0 = new StringReader("new");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.reset();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("short");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.getBeginColumn());
      assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.3076480808630437
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)66;
      StringReader stringReader0 = new StringReader("return");
      stringReader0.reset();
      stringReader0.mark((byte)66);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringReader0.reset();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.ready();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5378479894471806
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("\"<\"");
      StringReader stringReader1 = new StringReader("\"<\"");
      StringReader stringReader2 = new StringReader("\"<\"");
      stringReader2.reset();
      stringReader0.reset();
      StringReader stringReader3 = new StringReader("HLjt`U>R");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader3);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaParserTokenManager0.getNextToken();
      stringReader3.reset();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 1, 4, 114);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 5.  Encountered: \"`\" (96), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.1651850348169943
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      StringReader stringReader1 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      stringReader0.reset();
      stringReader1.read();
      stringReader1.skip(1153L);
      stringReader0.reset();
      StringReader stringReader2 = new StringReader("U}Ad%fs!z");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.getBeginColumn());
      assertEquals(1, javaCharStream0.getLine());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.3096370185241626
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[0] = (byte)66;
      StringReader stringReader0 = new StringReader("assert");
      stringReader0.skip((-341));
      stringReader0.reset();
      Token token0 = new Token();
      stringReader0.mark(15);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2315), (-972), 95);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token1 = javaParserTokenManager1.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("", token1.toString());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.975409388989918
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("a0BJ");
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("a0BJ");
      StringReader stringReader2 = new StringReader("_zQ|~ClNt");
      char[] charArray0 = new char[6];
      charArray0[0] = 'H';
      charArray0[1] = 'H';
      charArray0[2] = '?';
      charArray0[3] = 'H';
      charArray0[4] = '%';
      charArray0[5] = 'g';
      stringReader0.read(charArray0);
      StringReader stringReader3 = new StringReader("_og(OHw,7Tac");
      StringReader stringReader4 = new StringReader("~|z{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader4);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      stringReader4.ready();
      javaParserTokenManager1.getNextToken();
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(2, javaCharStream0.getBeginColumn());
      assertEquals("|", token0.toString());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.9874810652086254
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)76;
      StringReader stringReader0 = new StringReader("n2l8");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 105, (byte)76);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("<token of kind 7>");
      Token token0 = new Token();
      Token token1 = new Token();
      token0.kind = 22;
      token1.beginColumn = 22;
      token0.beginColumn = 0;
      token0.next = token1;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = null;
      try {
        javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 98);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 98. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5100371498201912
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)66;
      byteArray0[1] = (byte) (-32);
      byteArray0[2] = (byte)0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("7AGjeHveMGA#[+Y");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Token token0 = javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(10, javaCharStream1.bufpos);
      //  // Unstable assertion: assertEquals("7AGjeHveMGA", token0.toString());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.507598539128256
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)66;
      StringReader stringReader0 = new StringReader("AeG&");
      stringReader0.reset();
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("AeG&");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaParserTokenManager0.getNextToken();
      StringReader stringReader2 = new StringReader("AeG");
      stringReader2.reset();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager2 = null;
      try {
        javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 32);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 32. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5077000001839873
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "mnq6aTKD");
      StringReader stringReader0 = new StringReader("~GMP{?O [4)V");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.reset();
      stringReader0.read();
      StringReader stringReader1 = new StringReader("int");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 653, 102, 126);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.adjustBeginLineColumn(107, 121);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(124, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.0061052795325898
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StringReader stringReader0 = new StringReader("nKjId}`.9m!Pc};>*0*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 108, 120, 108);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("nKjId}`.9m!Pc};>*0*");
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader0, (-1), (-1), 125);
      JavaCharStream javaCharStream4 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream3);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream2, 103);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 103. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.9647138941158753
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringReader stringReader0 = new StringReader("jE");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader1 = new StringReader("jE");
      StringReader stringReader2 = new StringReader("<n?H93HQ<-\u0006U");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      stringReader0.reset();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals("<", token0.toString());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.936128565442576
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)43;
      StringReader stringReader0 = new StringReader("k16mhfaYkCDM75?Q=-");
      StringReader stringReader1 = new StringReader("int");
      stringReader0.reset();
      stringReader0.skip((-2602L));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringReader1.reset();
      StringReader stringReader2 = new StringReader("int");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5684508704406754
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("jE");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.reset();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      int int0 = JavaParserConstants.DEFAULT;
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "mnq6aTKD");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "jE");
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 84);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 84. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5100371498201912
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringReader stringReader0 = new StringReader("O@9CU{4|yk-(@5Gst");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("l4Atp]S4Wy]");
      StringReader stringReader2 = new StringReader("O@9CU{4|yk-(@5Gst");
      char[] charArray0 = new char[6];
      charArray0[0] = 'H';
      charArray0[1] = 'g';
      charArray0[2] = 'g';
      charArray0[3] = 'H';
      charArray0[4] = '%';
      charArray0[5] = '%';
      stringReader0.read(charArray0);
      StringReader stringReader3 = new StringReader("}]]di*Oh3V,}*|");
      StringReader stringReader4 = new StringReader("\"/*\"");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader4);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(66, token0.kind);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.956628712862526
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)0;
      StringReader stringReader0 = new StringReader("w%gxguu8T");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Token token0 = javaParserTokenManager0.getNextToken();
      Token.newToken(1);
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.getBeginColumn());
      assertEquals(108, token1.kind);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.000326743151907
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)0;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "w%`gxguu8T");
      StringReader stringReader0 = new StringReader("w%`gxguu8T");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (byte)0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Token token0 = javaParserTokenManager0.getNextToken();
      Token.newToken(1);
      javaParserTokenManager0.SkipLexicalActions(token0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "}Oa~B|_$sWOzO*q");
      javaCharStream0.adjustBeginLineColumn(1, 0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(108, token1.kind);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.0681258812983994
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)76;
      StringReader stringReader0 = new StringReader("null");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 105, (byte)76);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("<token of kind 7>");
      Token token0 = javaParserTokenManager0.getNextToken();
      Token token1 = new Token();
      token0.next = token1;
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 76);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 76. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.203101798858457
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)76;
      byteArray0[1] = (byte) (-32);
      StringReader stringReader0 = new StringReader(", column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)76, (byte)76);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token1 = token_GTToken0.next;
      token_GTToken0.next = token0;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.bufpos = 76;
      javaParserTokenManager1.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(84, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.5119208604684742
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("S,'0i=b0s");
      StringReader stringReader2 = new StringReader("");
      StringReader stringReader3 = new StringReader("");
      stringReader3.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 989, 3617, 14);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 989, (-1), 2624);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.backup(3581);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(1, javaCharStream1.bufpos);
      assertEquals(",", token0.toString());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.3566353903644248
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)12;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("l-`rHkd-mCs");
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1, 1631, 117, 1631);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1631, column 118.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.5655048865732537
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StringReader stringReader0 = new StringReader("O@9CU{4|yk-(@5Gst");
      StringReader stringReader1 = new StringReader("]");
      stringReader1.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-105), (-105), 93);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 49);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 49. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.5130896512717014
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringReader stringReader0 = new StringReader("`'MwJ1\"*~&b");
      StringReader stringReader1 = new StringReader("\"[\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader1.reset();
      stringReader1.read();
      StringReader stringReader2 = new StringReader("}d737bo<zytsuf#%b");
      StringReader stringReader3 = new StringReader("0}FI2b");
      StringReader stringReader4 = new StringReader("");
      stringReader4.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader3, 989, 830, 1115);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader3, 18, 1115, 2624);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream1.backup(37);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 0, column 0.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.9435528515000753
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      StringReader stringReader0 = new StringReader("|Nk_S>g|j 8Ei/CA,");
      stringReader0.reset();
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("false");
      StringReader stringReader2 = new StringReader("false");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      StringReader stringReader3 = new StringReader("false");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, javaCharStream0.getLine());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.5053383168413812
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringReader stringReader0 = new StringReader("h;w3@x6xUb),QbaZ");
      StringReader stringReader1 = new StringReader("h;w3@x6xUb),QbaZ");
      StringReader stringReader2 = new StringReader("r:31z<s[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 7, 3460);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader3 = new StringReader("");
      StringReader stringReader4 = new StringReader("h;w3@x6xUb),QbaZ");
      javaParserTokenManager0.getNextToken();
      Token token0 = new Token();
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 7);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 7. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.4981761906601778
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StringReader stringReader0 = new StringReader("4K(*LhCQg@w%&");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("4K(*LhCQg@w%&");
      stringReader1.reset();
      stringReader2.skip((-2602L));
      stringReader1.reset();
      StringReader stringReader3 = new StringReader("U}Ad%fs!z");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader3);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("U", token0.toString());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.8485521068596333
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("q?4I/jV9PsTD+A|");
      StringReader stringReader1 = new StringReader("q?4I/jV9PsTD+A|");
      stringReader0.reset();
      stringReader1.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Token token0 = javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.jjnewStateCnt = 40;
      javaParserTokenManager0.curLexState = 52;
      javaParserTokenManager1.curLexState = 47;
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 1);
      javaParserTokenManager2.SkipLexicalActions(token0);
      javaParserTokenManager0.SkipLexicalActions(token0);
      // Undeclared exception!
      try { 
        javaParserTokenManager2.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 16.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.0838342862697026
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)76;
      byteArray0[1] = (byte)76;
      byteArray0[2] = (byte)76;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      byteArrayInputStream0.mark((byte)76);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.MoreLexicalActions();
      StringReader stringReader0 = new StringReader("<CHARACTER_LITERAL>");
      dataInputStream0.readDouble();
      stringReader0.skip((-1L));
      javaCharStream0.inputStream = (Reader) stringReader0;
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("<", token0.toString());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.551515528150298
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("q?4I/jV9PsTD+A|");
      StringReader stringReader1 = new StringReader("q?4I/jV9PsTD+A|");
      stringReader0.reset();
      stringReader1.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.jjnewStateCnt = 40;
      javaParserTokenManager1.curLexState = 47;
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 1);
      javaCharStream0.backup(109);
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 0, column 0.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.0023237386667625
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)0;
      StringReader stringReader0 = new StringReader("w%gxguu8T");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("y4&fc2tW`iP<)[x");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.lengthOfMatch = (-1);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager((JavaCharStream) null, (byte)0);
      javaParserTokenManager1.debugStream = javaParserTokenManager0.debugStream;
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.507598539128256
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "mnq6aTKD");
      StringReader stringReader0 = new StringReader("mnq6aTKD");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)39;
      byteArray0[1] = (byte) (-47);
      byteArray0[2] = (byte) (-63);
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)40;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      StringReader stringReader1 = new StringReader("|Nk_S>g|j 8Ei/CA,");
      stringReader1.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-2340), (byte) (-63), (byte)39);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, (byte)40);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 40. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.7087003440155546
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      StringReader stringReader0 = new StringReader(">>=");
      StringReader stringReader1 = new StringReader("2,");
      stringReader1.reset();
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaParserTokenManager0.defaultLexState = (int) (byte)0;
      javaParserTokenManager0.getNextToken();
      stringReader1.reset();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager1.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.5036907290627806
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[21];
      byteArray0[1] = (byte) (-32);
      byteArray0[2] = (byte)76;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      byteArrayInputStream0.mark(119);
      StringReader stringReader0 = new StringReader("'6Vgq%_[huKxV35DV");
      stringReader0.skip((-786L));
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("8j#t&X]");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: \"#\" (35), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.6506712955516436
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)67;
      byteArray0[1] = (byte) (-32);
      byteArray0[2] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)67, 62, 37);
      javaCharStream0.backup((byte) (-32));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaParserTokenManager0.jjround = (int) (byte) (-32);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(74, token0.kind);
      assertEquals("C", token0.toString());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.5352972167838854
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StringReader stringReader0 = new StringReader("h;w3@x6xUb),QbaZ");
      StringReader stringReader1 = new StringReader("h;w3@x6xUb),QbaZ");
      stringReader1.reset();
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      stringReader1.reset();
      stringReader1.read();
      stringReader1.skip(74);
      stringReader1.reset();
      StringReader stringReader2 = new StringReader("\"*\"");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals("\"*\"", token0.toString());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.4428696008965822
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)43;
      byteArray0[1] = (byte)43;
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      byte[] byteArray1 = new byte[0];
      sequenceInputStream0.read(byteArray1);
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, 713, (-1153));
      StringReader stringReader0 = new StringReader("$t(d");
      StringReader stringReader1 = new StringReader("$t(d");
      stringReader1.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 83, 1506, 2620);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 0, (-1), 1506);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream1.backup(83);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream2.bufpos);
      assertEquals("$t", token0.toString());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.5960109478154454
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringReader stringReader0 = new StringReader("continue");
      StringReader stringReader1 = new StringReader("public");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.reset();
      stringReader0.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1011, 1756, 96);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1, (-399));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -399. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.9598433813751899
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader("O@9CU{4|yk-(@5Gst");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("l4Atp]S4Wy]");
      StringReader stringReader2 = new StringReader("O@9CU{4|yk-(@5Gst");
      char[] charArray0 = new char[6];
      charArray0[0] = 'H';
      charArray0[1] = 'g';
      charArray0[2] = 'g';
      stringReader0.read();
      charArray0[3] = 'H';
      charArray0[4] = '%';
      charArray0[5] = '%';
      stringReader0.read(charArray0);
      StringReader stringReader3 = new StringReader("}]]di*Oh3V,}*|");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals("-", token0.toString());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.448574958691757
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)67;
      byteArray0[2] = (byte) (-5);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)67, 62, (byte)67);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaCharStream0.adjustBeginLineColumn(62, (-547));
      FileSystemHandling.shouldAllThrowIOExceptions();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("C", token0.toString());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.448574958691757
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)67;
      byteArray0[2] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)67, 62, (byte)67);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaCharStream0.adjustBeginLineColumn(62, (-547));
      FileSystemHandling.shouldAllThrowIOExceptions();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("C", token0.toString());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.9829209364457567
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)43;
      StringReader stringReader0 = new StringReader("k16mhfaYkCDM75?Q=-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)43, 60);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      token_GTToken0.endColumn = 43;
      Token token1 = token_GTToken0.next;
      token0.next = null;
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(76, javaCharStream0.getBeginColumn());
      assertEquals(76, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.3299825171242272
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)66;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("\\");
      stringReader0.reset();
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.3789825982436716
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1, 22, (-1));
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader1, 22, 111);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(87, token0.kind);
      assertEquals("=", token0.toString());
      
      stringReader0.close();
      Token token1 = javaParserTokenManager1.getNextToken();
      assertEquals(0, token1.kind);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.031503889583348
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[0] = (byte)66;
      StringReader stringReader0 = new StringReader("\"for\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.reset();
      stringReader0.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 319, (-1512), 1011);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader1 = new StringReader("\"for\"");
      StringReader stringReader2 = new StringReader("C|$9Q{dwAMjksIwl3ZN");
      stringReader2.reset();
      StringReader stringReader3 = new StringReader("<DIGIT>");
      stringReader3.reset();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream2);
      StringReader stringReader4 = new StringReader("\">\"");
      StringReader stringReader5 = new StringReader("/c~kMYZ!H2~-%q");
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream1.bufpos);
      assertEquals(34, token0.kind);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.1546985398959184
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")RW\"ZE:Bg=1ilUGH;");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[1];
      StringReader stringReader1 = new StringReader("super");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 2636, 100);
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1, 91);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 91. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.030964473220763
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("l[&@Ao}");
      StringReader stringReader1 = new StringReader("l[&@Ao}");
      stringReader0.read();
      stringReader0.skip(108);
      StringReader stringReader2 = new StringReader("this");
      stringReader2.reset();
      StringReader stringReader3 = new StringReader("l[&@Ao}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(1, javaCharStream0.getLine());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.4840091867279797
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader("continue");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-118);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte) (-118);
      byteArray1[1] = (byte)14;
      byteArray1[2] = (byte) (-118);
      byteArray1[3] = (byte) (-118);
      byteArray1[4] = (byte) (-118);
      byteArray1[5] = (byte) (-118);
      byteArray1[6] = (byte) (-118);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      byteArray0[1] = (byte) (-118);
      byteArray0[2] = (byte) (-118);
      byteArray0[3] = (byte) (-118);
      byteArray0[4] = (byte) (-118);
      byteArray0[5] = (byte) (-118);
      byteArray0[6] = (byte) (-118);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader1 = new StringReader("continue");
      StringReader stringReader2 = new StringReader("X");
      stringReader1.reset();
      stringReader2.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader3 = new StringReader("ARqW}xhK:gIYv");
      char[] charArray0 = new char[2];
      charArray0[0] = '#';
      charArray0[1] = '|';
      stringReader3.read(charArray0);
      StringReader stringReader4 = new StringReader("ARqW}xhK:gIYv");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader3);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(23, token0.kind);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.4888063585961497
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("p<NWcXv_gyQq");
      StringReader stringReader1 = new StringReader("pq1rR#");
      stringReader0.reset();
      stringReader0.skip(8L);
      StringReader stringReader2 = new StringReader("ylDf");
      StringReader stringReader3 = new StringReader("\" \"");
      StringReader stringReader4 = new StringReader("false");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      StringReader stringReader5 = new StringReader("33K!b?Fa\"I[6$'|");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader5);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(2, javaCharStream1.bufpos);
      //  // Unstable assertion: assertEquals(3, javaCharStream1.getEndColumn());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.4939369590543794
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader("continue");
      StringReader stringReader1 = new StringReader("public");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      stringReader1.reset();
      StringReader stringReader2 = new StringReader("char");
      StringReader stringReader3 = new StringReader("public");
      StringReader stringReader4 = new StringReader("continue");
      StringReader stringReader5 = new StringReader("qzRGE~u_@");
      stringReader5.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader3, (-1), 122, 83);
      StringReader stringReader6 = new StringReader("\"instanceof\"");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader6, 1712, 20, 61);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream1.backup(41);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager0.getNextToken();
      assertEquals(11, javaCharStream2.bufpos);
      assertEquals(31, javaCharStream2.getColumn());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.5789831820875355
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)43;
      StringReader stringReader0 = new StringReader("k16mhfaYkCDM75?Q=-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)43, 60);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      token_GTToken0.endColumn = 43;
      Token token0 = token_GTToken0.next;
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager((JavaCharStream) null, 1);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(75, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.9285818755751196
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      StringReader stringReader0 = new StringReader(">>=");
      stringReader0.reset();
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaParserTokenManager0.defaultLexState = (int) (byte)0;
      javaParserTokenManager0.getNextToken();
      stringReader0.reset();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager2.jjFillToken();
      javaParserTokenManager2.ReInit(javaCharStream0, 1);
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.4280042347229518
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      char[] charArray0 = new char[0];
      javaCharStream0.nextCharBuf = charArray0;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.5090265423559037
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)66;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("ID)q F{A\"b");
      stringReader0.reset();
      stringReader0.skip((-2602L));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 35, (byte)0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.mark(376);
      javaParserTokenManager0.getNextToken();
      stringReader0.close();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.getBeginColumn());
      assertEquals(78, token0.kind);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.393560345712078
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringReader stringReader0 = new StringReader("`'MwJ1\"*~&b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.read();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 22);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte)47;
      byteArray0[2] = (byte) (-7);
      byteArray0[3] = (byte)52;
      byteArray0[4] = (byte)46;
      byteArray0[5] = (byte) (-5);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1), (-291));
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 96, 22);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
      // Undeclared exception!
      try { 
        javaParserTokenManager2.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 96, column 24.  Encountered: \"w\" (119), after : \"\\'M\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.7212029912980211
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)66;
      byteArray0[1] = (byte) (-32);
      byteArray0[2] = (byte)0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      byteArrayInputStream0.close();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"\\ufffd\" (65533), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)66;
      StringReader stringReader0 = new StringReader("\"for\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.reset();
      stringReader0.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 319, (-1512), 1011);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaCharStream1.nextCharInd = (-3938);
      javaCharStream1.FillBuff();
      javaCharStream1.adjustBeginLineColumn(126, (-547));
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.9868644889734068
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("p<NWcXv_gyQq");
      StringReader stringReader1 = new StringReader("\"instanceof\"");
      stringReader0.reset();
      stringReader1.skip(8L);
      StringReader stringReader2 = new StringReader("pq1rR#");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 107, 87);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader3 = new StringReader("p<NWcXv_gyQq");
      stringReader3.mark(107);
      javaParserTokenManager0.getNextToken();
      StringReader stringReader4 = new StringReader("throws");
      javaParserTokenManager0.lengthOfMatch = 107;
      StringReader stringReader5 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 107, column 91.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.9685182811033957
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("BRxOR^mr@Hlf");
      stringReader1.reset();
      stringReader1.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaParserTokenManager0.getNextToken();
      stringReader1.reset();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager((JavaCharStream) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1, 1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaParserTokenManager2.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 13.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.7398976376991158
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringReader stringReader0 = new StringReader("+=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      token0.beginColumn = (-2386);
      javaParserTokenManager0.SkipLexicalActions(token0);
      token0.beginLine = (-1060);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      stringReader0.reset();
      token0.beginColumn = (-2386);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 2);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 5.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.9439041054621389
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("\"import\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("1oe7*}GJ2&jOt<D!,");
      StringReader stringReader2 = new StringReader("^,,");
      char[] charArray0 = new char[5];
      charArray0[0] = '[';
      charArray0[1] = '%';
      charArray0[2] = '%';
      charArray0[3] = 'g';
      charArray0[4] = 'H';
      stringReader1.read(charArray0);
      StringReader stringReader3 = new StringReader("^,,");
      StringReader stringReader4 = new StringReader("\"import\"");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals(107, token0.kind);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.9758214937035552
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("<8}3?%i^?`]hygf5");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaParserTokenManager0.getNextToken();
      Token token0 = new Token();
      stringReader0.mark(88);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.getBeginColumn());
      assertEquals(66, token1.kind);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.9827442963479316
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)67;
      StringReader stringReader0 = new StringReader("p#]NNa/r2EmWe$jQ");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaParserTokenManager0.getNextToken();
      Token.newToken(1326);
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 98);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 98. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.4450982518169688
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader("continue");
      StringReader stringReader1 = new StringReader("public");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      stringReader1.reset();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "continue");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.reset();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Token.newToken((-1));
      javaParserTokenManager1.SwitchTo(0);
      assertNotSame(javaParserTokenManager1, javaParserTokenManager0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.jjimageLen = (-1184);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.5618683963011342
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringReader stringReader0 = new StringReader("+=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("<DIGIT>");
      StringReader stringReader2 = new StringReader("'");
      stringReader2.markSupported();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, 2430, (-1082));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader3 = new StringReader("<DIGIT>");
      StringReader stringReader4 = new StringReader("<DIGIT>");
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.4864339168345055
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"<<\"");
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("\"else\"");
      stringReader0.reset();
      stringReader0.read();
      stringReader1.skip(0L);
      stringReader0.reset();
      StringReader stringReader2 = new StringReader(">=");
      StringReader stringReader3 = new StringReader(">=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader3);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.9792947819042626
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("<8}3?%i^?`]hygf5");
      StringReader stringReader1 = new StringReader("t|");
      stringReader1.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      Token.newToken(0);
      stringReader1.mark(18);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      
      javaParserTokenManager1.getNextToken();
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals("", token0.toString());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.3764763325795113
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)43;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("&");
      StringReader stringReader1 = new StringReader("&");
      stringReader0.reset();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringReader1.skip((-1948L));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1342), (-1342));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader1.mark(32);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(105, token0.kind);
      
      stringReader0.close();
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals("", token1.toString());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.9780523209137693
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("mnq6aTKD");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.reset();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.read();
      Token token0 = javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token1 = token_GTToken0.specialToken;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "mnq6aTKD");
      token_GTToken0.endColumn = 1;
      token0.specialToken = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "nq6aTKD");
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      try { 
        stringReader0.reset();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.4450982518169688
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)66;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.6207636759850823
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)76;
      byteArray0[1] = (byte) (-32);
      byteArray0[2] = (byte)76;
      byteArray0[3] = (byte) (-32);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)76, (-1555));
      byteArrayInputStream1.close();
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("L", token0.toString());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.346219474337729
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)29;
      byteArray0[1] = (byte)29;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\\u001d\" (29), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.5020977592876288
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("l[&@Ao}");
      StringReader stringReader1 = new StringReader("\"private\"");
      StringReader stringReader2 = new StringReader("l[&@Ao}");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)121;
      byteArray0[1] = (byte)74;
      byteArray0[2] = (byte)125;
      byteArray0[3] = (byte)82;
      byteArray0[4] = (byte)52;
      byteArray0[5] = (byte)125;
      byteArray0[6] = (byte)93;
      byteArray0[7] = (byte)83;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)82, (-2564));
      byteArrayInputStream0.close();
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("yJ", token0.toString());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.0164927125448684
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 25, 25);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("K5>~g\"");
      StringReader stringReader2 = new StringReader("A<6J2OC'd4oD}nM");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, 17, 1583, 313);
      javaParserTokenManager0.ReInit(javaCharStream1);
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream2 = new JavaCharStream(pipedInputStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream2, (-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 25);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 3);
      MockFile mockFile0 = new MockFile("SD;s.zJ>`@> Ea0#", "SD;s.zJ>`@> Ea0#");
      javaParserTokenManager0.MoreLexicalActions();
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.394714983677679
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo((-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 0, (-1537), 30);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream, false);
      PrintStream printStream0 = mockPrintStream0.printf("*", (Object[]) javaParserTokenManager0.jjstrLiteralImages);
      javaParserTokenManager0.setDebugStream(printStream0);
      assertSame(printStream0, mockPrintStream0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.5392348977471735
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)43;
      StringReader stringReader0 = new StringReader("k16mhfaYkCDM75?Q=-");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)43, 60);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      token_GTToken0.endColumn = 43;
      Token token1 = javaParserTokenManager0.getNextToken();
      token0.next = token1;
      javaParserTokenManager0.SkipLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.SkipLexicalActions(token0);
      Token token2 = javaParserTokenManager0.jjFillToken();
      javaParserTokenManager1.SkipLexicalActions(token2);
      assertEquals(14, javaCharStream0.bufpos);
      assertEquals("?", token2.toString());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.3027855822311873
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StringReader stringReader0 = new StringReader("continue");
      StringReader stringReader1 = new StringReader("public");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      stringReader1.reset();
      StringReader stringReader2 = new StringReader("char");
      StringReader stringReader3 = new StringReader("public");
      char[] charArray0 = new char[5];
      charArray0[0] = '%';
      charArray0[1] = 'g';
      stringReader3.read(charArray0);
      StringReader stringReader4 = new StringReader("SIiWfMWf7rGwX6k");
      StringReader stringReader5 = new StringReader("char");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader5);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals("public", token0.toString());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.5201990205491125
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)66;
      byteArray0[2] = (byte)0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("B", token0.toString());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.5666745634092076
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StringReader stringReader0 = new StringReader("jE");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.reset();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.read();
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token0 = token_GTToken1.specialToken;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "E");
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, (byte)4);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 4. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-795), 9);
      File file0 = MockFile.createTempFile("while", "while");
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      mockPrintStream0.append((CharSequence) "while");
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }
}
