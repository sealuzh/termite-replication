/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 10 23:04:54 GMT 2020
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.StringReader;
import java.io.StringWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6674619334292948
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3390);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      simpleNode0.id = 3390;
      nodeArray0[2] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.parent = nodeArray0[0];
      simpleNode0.children = nodeArray0;
      int int0 = (-1836);
      String string0 = "`n\\t\\w8u)p!WbK";
      simpleNode0.setIdentifier("`n\tw8u)p!WbK");
      simpleNode0.id = (-1836);
      Node node0 = simpleNode0.jjtGetChild(2);
      simpleNode0.jjtGetParent();
      // Undeclared exception!
      try { 
        node0.jjtAddChild(nodeArray0[1], (-1836));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1836
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ExplicitConstructorInvocation");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "kJE)^_[p5}UU=D");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[4] = (byte)55;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"");
      SimpleNode simpleNode0 = new SimpleNode(48);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      simpleNode0.setIdentifier("\"");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "H{m/_aaA?_");
      simpleNode0.id = (int) (byte)0;
      simpleNode0.identifiers = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "UnryExpressio");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier("UnryExpressio");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6674619334292948
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      StringReader stringReader0 = new StringReader("vv-PLt(Aaq3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-3324), 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 0);
      nodeArray0[2] = (Node) simpleNode1;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[5] = (Node) simpleNode0;
      nodeArray0[6] = (Node) simpleNode0;
      SimpleNode simpleNode2 = (SimpleNode)javaParser0.currNode;
      nodeArray0[7] = (Node) simpleNode2;
      simpleNode0.children = nodeArray0;
      simpleNode0.toString("S%C^ws'|M`&YJ?b<k=.");
      simpleNode0.toString(":[Zg]tYH-w`n4");
      simpleNode0.toString();
      simpleNode0.toString(";A\"aW6Wk$:1k32mg");
      Node node0 = simpleNode0.jjtGetChild(0);
      simpleNode0.toString();
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(node0, (-78));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -78
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(88);
      simpleNode0.identifiers = null;
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "q_$:q";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "q_$:q");
      EvoSuiteFile evoSuiteFile1 = null;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      String string1 = "<";
      Node node0 = null;
      // Undeclared exception!
      try { 
        simpleNode0.toString("q_$:q");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(70);
      char[] charArray0 = new char[9];
      charArray0[0] = 'T';
      stringWriter0.write(70);
      stringWriter0.write(charArray0);
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      stringWriter2.write(charArray0);
      stringWriter1.write(charArray0);
      StringBuffer stringBuffer0 = new StringBuffer();
      StringWriter stringWriter3 = stringWriter1.append((CharSequence) stringBuffer0);
      stringWriter2.flush();
      StringWriter stringWriter4 = new StringWriter(70);
      stringWriter2.write(63);
      StringWriter stringWriter5 = new StringWriter();
      stringWriter3.close();
      stringWriter5.flush();
      StringWriter stringWriter6 = new StringWriter(70);
      SimpleNode simpleNode0 = new SimpleNode(63);
      stringWriter2.write(1);
      StringWriter stringWriter7 = new StringWriter(63);
      stringWriter0.flush();
      stringWriter3.write("k}^Bdh;XfPc/Onl>.");
      simpleNode0.setIdentifier("null");
      stringWriter0.write(charArray0);
      simpleNode0.dump("*gt", stringWriter0);
      assertEquals("FT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000T\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9993021689854977
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(88);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-eV8gMo2X fKt7:>U");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{");
      SimpleNode simpleNode1 = new SimpleNode(88);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      simpleNode0.setIdentifier("{");
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "{");
      simpleNode0.setIdentifier(" ]GGvp ;L;QJa,92");
      simpleNode0.setIdentifier("cp6\"");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "cp6\"");
      simpleNode0.dump(">", stringWriter1);
      simpleNode0.toString();
      simpleNode0.toString("cp6\"");
      simpleNode1.jjtAddChild(simpleNode0, 88);
      simpleNode1.jjtGetChild(88);
      assertEquals(89, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.623848004006291
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(52);
      simpleNode0.setIdentifier("`n\tw8u)!WbK");
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`n\tw8u)!WbK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`n\tw8u)!WbK");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.setIdentifier(";");
      SimpleNode simpleNode1 = new SimpleNode(52);
      simpleNode1.setIdentifier("*ge");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode1.setIdentifier(";");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "]\"");
      simpleNode1.dump("`n\tw8u)!WbK", stringWriter1);
      assertEquals("<UnaryExpression>\n  <identifier>*ge</identifier>\n</UnaryExpression>\n", stringWriter1.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("UnaryExpression : `n\tw8u)!WbK : ;", string0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.639031859650177
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(70);
      char[] charArray0 = new char[10];
      charArray0[1] = 'T';
      charArray0[5] = 'T';
      stringWriter0.write(70);
      charArray0[2] = 'T';
      charArray0[2] = '\u0000';
      stringWriter0.write(charArray0);
      StringWriter stringWriter1 = new StringWriter('T');
      StringWriter stringWriter2 = new StringWriter();
      stringWriter2.write(charArray0);
      stringWriter0.write(charArray0);
      stringWriter0.close();
      StringWriter stringWriter3 = new StringWriter();
      stringWriter2.flush();
      stringWriter2.close();
      StringWriter stringWriter4 = new StringWriter('T');
      stringWriter1.write((int) 'T');
      StringWriter stringWriter5 = new StringWriter();
      stringWriter3.close();
      StringWriter stringWriter6 = new StringWriter('\u0000');
      stringWriter2.flush();
      stringWriter2.flush();
      StringWriter stringWriter7 = new StringWriter('T');
      stringWriter0.write(90);
      stringWriter0.write("*le");
      SimpleNode simpleNode0 = new SimpleNode('T');
      stringWriter3.write(204);
      StringWriter stringWriter8 = new StringWriter(70);
      stringWriter0.flush();
      stringWriter1.write("n~}KXk4pnRbMtpaDYJ");
      simpleNode0.setIdentifier("}");
      stringWriter7.write(charArray0);
      simpleNode0.dump("n~}KXk4pnRbMtpaDYJ", stringWriter2);
      assertEquals("\u0000T\u0000\u0000\u0000T\u0000\u0000\u0000\u0000<ForInit>\n</ForInit>\n", stringWriter2.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3805062184775959
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 84;
      SimpleNode simpleNode0 = new SimpleNode(84);
      StringWriter stringWriter0 = new StringWriter(84);
      simpleNode0.setIdentifier(">=");
      simpleNode0.dump(">=", stringWriter0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedInputStream1.connect(pipedOutputStream0);
      PipedInputStream pipedInputStream2 = null;
      try {
        pipedInputStream2 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6428579130907905
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(85);
      stringWriter0.append('T');
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = stringWriter0.append((CharSequence) ",2KY");
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringWriter0.append('y');
      stringWriter2.append('4');
      stringWriter2.close();
      SimpleNode simpleNode0 = new SimpleNode('T');
      simpleNode0.setIdentifier(">>");
      simpleNode0.dump((String) null, stringWriter2);
      assertEquals("T,2KYy4<ForInit>\n  <identifier>*rshft</identifier>\n</ForInit>\n", stringWriter2.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("ForInit : >>", string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.623848004006291
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(73);
      simpleNode0.setIdentifier("`n\tw8u)p!WbK");
      StringWriter stringWriter0 = new StringWriter(51);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<=");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">=");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      simpleNode0.setIdentifier("]\"");
      simpleNode0.setIdentifier("<=");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.setIdentifier("UUC^1taN`<+z");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.toString();
      JavaParser javaParser0 = new JavaParser("]\"");
      simpleNode0.dump("ConditionalExpression", stringWriter0);
      assertEquals("<Block>\n  <identifier>`n\tw8u)p!WbK</identifier>\n  <identifier>]\"</identifier>\n  <identifier>*le</identifier>\n  <identifier>UUC^1taN`<+z</identifier>\n</Block>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.36764947740014225
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      simpleNode0.setIdentifier("<<");
      simpleNode0.setIdentifier("y");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<<");
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{");
      simpleNode0.dump("}", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>*lshft</identifier>\n  <identifier>y</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(101);
      SystemInUtil.addInputLine("G!I");
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 89);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtAddChild((Node) null, 101);
      simpleNode0.jjtGetChild(101);
      assertEquals(102, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.6428579130907905
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(97);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{>%;1sZP#Dq");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "*ge");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Fel8BN^#Fkq[^^KqS");
      simpleNode0.dump("Fel8BN^#Fkq[^^KqS", stringWriter0);
      assertEquals("<MarkerAnnotation>\n  <identifier>*lt</identifier>\n</MarkerAnnotation>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("MarkerAnnotation : <", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(80);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      JavaParser javaParser0 = new JavaParser("F*Xyl> ");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, (-1047));
      nodeArray0[2] = (Node) simpleNode1;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      SimpleNode simpleNode2 = new SimpleNode((-1310));
      simpleNode2.jjtGetParent();
      nodeArray0[5] = null;
      nodeArray0[6] = (Node) simpleNode0;
      simpleNode2.jjtAddChild(nodeArray0[6], 18);
      simpleNode0.children = nodeArray0;
      SimpleNode simpleNode3 = new SimpleNode((-1047));
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode3, (-1047));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1047
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.2848787678241698
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(73);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 73);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.dump("|]nahi@b_5", stringWriter0);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtAddChild((Node) null, 74);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetParent();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(2655);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2655
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.8953326659680909
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(86);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte) (-45);
      byteArray0[3] = (byte)104;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte) (-61);
      byteArray0[6] = (byte)10;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "!HTs6aEnCQFlcEbI");
      simpleNode0.setIdentifier("");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "*gt");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "!HTs6aEnCQFlcEbI");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("imort", stringWriter0);
      assertEquals("<ForUpdate>\n</ForUpdate>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("ForUpdate : ", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "]\"");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "D%@Z]<}{JS#JuDxY");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "9u@]Qdc7^z@@>z");
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "dD-No6*HN\"H%X=<");
      StringWriter stringWriter1 = new StringWriter(3428);
      SimpleNode simpleNode0 = new SimpleNode(65);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 10);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtAddChild((Node) null, 122);
      simpleNode0.jjtAddChild((Node) null, 122);
      assertEquals(123, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(74);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "U=xFlnu.#ccx&}G%");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "e1I'w|O");
      simpleNode0.setIdentifier((String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "}");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "y");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "j8^PZ8y!WuurvL(%T");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      StringWriter stringWriter0 = new StringWriter(74);
      // Undeclared exception!
      try { 
        simpleNode0.dump("{", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.639031859650177
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = 88;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "(5$ H_Tw");
      SimpleNode simpleNode0 = new SimpleNode(88);
      simpleNode0.jjtAddChild(simpleNode0, 88);
      String string0 = "K)+s;rA9V7%";
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      // Undeclared exception!
      simpleNode0.dump("\"~\"", stringWriter0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 1);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-120811353));
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 1);
      nodeArray0[5] = (Node) simpleNode1;
      simpleNode0.children = nodeArray0;
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(6, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((JavaParserTokenManager) null);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParser0.ReInit(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode(26);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1990);
      simpleNode0.jjtClose();
      simpleNode0.id = (-229);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)121;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)121;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"");
      SimpleNode simpleNode0 = new SimpleNode((byte)121);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "H{m/_aaA?_");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "UnryExpressio");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      simpleNode0.setIdentifier("UnryExpressio");
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "UnryExpressio");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "*l");
      // Undeclared exception!
      try { 
        simpleNode0.dump("*l", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Literal");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-119304647));
      // Undeclared exception!
      try { 
        simpleNode0.toString("Literal");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -119304647
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "!HTs6aEnCQFlcEbI");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "2e5%pT?SGL#");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "qqTTA,STOeB");
      SimpleNode simpleNode0 = new SimpleNode(2117);
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2117
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "*ge");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "?SZ:=fMlSuF'5A7G0L");
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, (-1734));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((JavaParserTokenManager) null);
      SimpleNode simpleNode0 = new SimpleNode((-5225));
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-5225));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.6004276097469979
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(73);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{");
      Node node0 = simpleNode0.parent;
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter(73);
      simpleNode0.dump("{nt@W\bYpd9U=VG", stringWriter0);
      simpleNode0.setIdentifier("NameList");
      simpleNode0.setIdentifier("^eRGLNy;");
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.setIdentifier("C");
      StringReader stringReader0 = new StringReader("zp@:cn>UP");
      simpleNode0.setIdentifier("AllocationExpression");
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.setIdentifier("NameList");
      SimpleNode simpleNode1 = new SimpleNode(68);
      Node[] nodeArray0 = new Node[0];
      simpleNode1.children = nodeArray0;
      Node[] nodeArray1 = new Node[1];
      nodeArray1[0] = null;
      simpleNode1.children = nodeArray1;
      simpleNode1.toString("LT\"PgE')tE0cI%&Dl");
      simpleNode0.setIdentifier("AllocationExpression");
      simpleNode1.dump("NameList", stringWriter0);
      simpleNode0.toString();
      simpleNode0.toString(">=");
      simpleNode0.dump("<SkoVR *", stringWriter0);
      assertEquals("<Block>\n</Block>\n<AllocationExpression></AllocationExpression>\n<Block>\n  <identifier>NameList</identifier>\n  <identifier>^eRGLNy;</identifier>\n  <identifier>C</identifier>\n  <identifier>AllocationExpression</identifier>\n  <identifier>NameList</identifier>\n  <identifier>AllocationExpression</identifier>\n</Block>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.7668382315802122
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(73);
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.toString();
      stringWriter0.append((CharSequence) "Block");
      simpleNode0.setIdentifier("&");
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      StringWriter stringWriter3 = new StringWriter();
      stringWriter3.append((CharSequence) "{");
      simpleNode0.setIdentifier("<token of kind 7>");
      JavaParser javaParser0 = new JavaParser("5U&(8e)(:9Ls>7.Z");
      simpleNode0.setIdentifier("-.]TZi");
      StringWriter stringWriter4 = new StringWriter(73);
      simpleNode0.dump("#Gi~<{c_E", stringWriter4);
      assertEquals("<Block>\n  <identifier>*amp</identifier>\n  <identifier><token of kind 7></identifier>\n  <identifier>-.]TZi</identifier>\n</Block>\n", stringWriter4.toString());
      
      simpleNode0.toString();
      String string0 = simpleNode0.toString("5U&(8e)(:9Ls>7.Z");
      assertEquals("5U&(8e)(:9Ls>7.ZBlock : & : <token of kind 7> : -.]TZi", string0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3805062184775959
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(70);
      char[] charArray0 = new char[10];
      charArray0[1] = 'T';
      charArray0[5] = 'T';
      stringWriter0.write(70);
      charArray0[2] = 'T';
      charArray0[2] = '\u0000';
      stringWriter0.write(charArray0);
      StringWriter stringWriter1 = new StringWriter('T');
      StringWriter stringWriter2 = new StringWriter();
      stringWriter2.write(charArray0);
      stringWriter0.write(charArray0);
      stringWriter0.close();
      StringWriter stringWriter3 = new StringWriter();
      stringWriter2.flush();
      stringWriter2.close();
      StringWriter stringWriter4 = new StringWriter('T');
      stringWriter1.write((int) 'T');
      StringWriter stringWriter5 = new StringWriter();
      stringWriter3.close();
      StringWriter stringWriter6 = new StringWriter('\u0000');
      stringWriter2.flush();
      stringWriter2.flush();
      StringWriter stringWriter7 = new StringWriter('T');
      stringWriter0.write(90);
      stringWriter0.write("*le");
      SimpleNode simpleNode0 = new SimpleNode('T');
      stringWriter3.write(204);
      StringWriter stringWriter8 = new StringWriter(70);
      stringWriter0.flush();
      stringWriter1.write("n~}KXk4pnRbMtpaDYJ");
      simpleNode0.setIdentifier("ForUpdate");
      stringWriter7.write(charArray0);
      simpleNode0.dump("n~}KXk4pnRbMtpaDYJ", stringWriter2);
      assertEquals("\u0000T\u0000\u0000\u0000T\u0000\u0000\u0000\u0000<ForInit>\n  <identifier>ForUpdate</identifier>\n</ForInit>\n", stringWriter2.toString());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.34883209584303193
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(271);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write(5414);
      StringWriter stringWriter1 = stringWriter0.append('1');
      simpleNode0.dump("Expression", stringWriter1);
      simpleNode0.dump("<IDENTIFIER>", stringWriter1);
      assertSame(stringWriter0, stringWriter1);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.5586478569798259
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(70);
      StringWriter stringWriter1 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode(70);
      stringWriter0.close();
      simpleNode0.dump("]6\"#,U@=", stringWriter0);
      simpleNode0.setIdentifier("~");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "fd\"I%ZR-!");
      simpleNode0.setIdentifier("&&");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "~");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "fd\"I%ZR-!");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "fd\"I%ZR-!");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringWriter stringWriter2 = new StringWriter();
      simpleNode0.dump(".", stringWriter0);
      assertEquals("<Statement>\n  <identifier>~</identifier>\n  <identifier>*amp</identifier>\n</Statement>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("Statement : ~ : &&", string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.623848004006291
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(73);
      StringWriter stringWriter0 = new StringWriter(3164);
      stringWriter0.write("{");
      stringWriter0.close();
      stringWriter0.close();
      simpleNode0.setIdentifier("{");
      simpleNode0.setIdentifier(">");
      simpleNode0.dump("1+wdB", stringWriter0);
      simpleNode0.toString();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-45);
      int int0 = (-1952463216);
      // Undeclared exception!
      try { 
        pipedOutputStream0.write(byteArray0, (-1952463216), (-486));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(52);
      simpleNode0.setIdentifier("`n\tw8u)!WbK");
      JavaParser javaParser0 = new JavaParser("0]-8Ixwh1I\"");
      boolean boolean0 = false;
      try { 
        javaParser0.ClassOrInterfaceBody(false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte) (-45);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)10;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "!HTs6aEnCQFlcEbI");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "y");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "*gt");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "y");
      JavaParser javaParser0 = new JavaParser("\"");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (byte)0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((byte)10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(2836);
      JavaParser javaParser0 = new JavaParser("ConditionalAndExpression");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 2836);
      simpleNode0.jjtSetParent(simpleNode1);
      Node node0 = simpleNode0.jjtGetParent();
      simpleNode1.jjtSetParent(node0);
      assertSame(node0, simpleNode1);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StringReader stringReader0 = new StringReader("AssertStatement");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      int int0 = (-505);
      javaParser0.InclusiveOrExpression();
      try { 
        javaParser0.ClassOrInterfaceBody(false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 15.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.identifiers = null;
      simpleNode0.jjtOpen();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }
}
