/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 11:42:57 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.util.ArrayList;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(44);
      simpleNode0.toString("daXI/.n&w#'NY");
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.toString("r=p");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.2438228280066395
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(82);
      StringWriter stringWriter0 = new StringWriter();
      byte[] byteArray0 = new byte[10];
      byteArray0[1] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)60, (byte)0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)60, (byte)60);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream1);
      byteArrayInputStream1.reset();
      DataInputStream dataInputStream2 = new DataInputStream(dataInputStream1);
      byteArrayInputStream1.read(byteArray0, 0, 3);
      byteArrayInputStream0.close();
      DataInputStream dataInputStream3 = new DataInputStream(byteArrayInputStream1);
      dataInputStream3.skip((-4700L));
      dataInputStream2.mark((byte)60);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, 82, (-4381));
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(dataInputStream3);
      simpleNode0.setIdentifier(">=");
      simpleNode0.dump("Fjw/J)5!ge$\"7oW", stringWriter0);
      assertEquals("<DoStatement>\n  <identifier>*ge</identifier>\n</DoStatement>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString("=");
      assertEquals("=DoStatement : >=", string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.2438228280066395
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(87);
      StringWriter stringWriter0 = new StringWriter();
      byte[] byteArray0 = new byte[10];
      byteArray0[1] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)60, (byte)0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)60, (byte)60);
      byteArrayInputStream1.skip((byte)0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      byteArrayInputStream1.mark((byte)60);
      byteArrayInputStream0.skip(87);
      byteArrayInputStream1.reset();
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      byteArrayInputStream1.read(byteArray0, 0, 3);
      DataInputStream dataInputStream2 = new DataInputStream(pushbackInputStream0);
      DataInputStream dataInputStream3 = new DataInputStream(dataInputStream0);
      byteArrayInputStream0.reset();
      dataInputStream3.close();
      DataInputStream dataInputStream4 = new DataInputStream((InputStream) null);
      dataInputStream0.mark(0);
      byte[] byteArray1 = new byte[3];
      byteArray1[1] = (byte)60;
      byteArray1[2] = (byte)60;
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray1, (byte)60, (-754));
      byteArrayInputStream2.read(byteArray1);
      byteArrayInputStream2.skip(1259L);
      simpleNode0.setIdentifier(">=");
      simpleNode0.dump(">=", stringWriter0);
      assertEquals("<BreakStatement>\n  <identifier>*ge</identifier>\n</BreakStatement>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString("rVpAX8E!r");
      assertEquals("rVpAX8E!rBreakStatement : >=", string0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.3432997828911644
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(67);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 78);
      simpleNode0.setIdentifier("");
      SystemInUtil.addInputLine((String) null);
      simpleNode0.setIdentifier("ED");
      SimpleNode simpleNode1 = new SimpleNode(47);
      simpleNode0.toString();
      simpleNode0.setIdentifier(">>=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetChild(76);
      StringWriter stringWriter0 = new StringWriter(67);
      char[] charArray0 = new char[3];
      charArray0[0] = ' ';
      charArray0[1] = 'D';
      stringWriter0.write(76);
      charArray0[2] = 'U';
      stringWriter0.write(charArray0);
      simpleNode1.toString();
      simpleNode0.jjtAddChild((Node) null, 79);
      simpleNode1.jjtGetParent();
      simpleNode1.dump("<)L'lnKgf-?TP0)k\"", stringWriter0);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(80, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.7790538414765252
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "}");
      StringWriter stringWriter0 = new StringWriter();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode(22);
      simpleNode0.dump("}", stringWriter0);
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      simpleNode0.setIdentifier("}");
      simpleNode0.setIdentifier("*ge");
      simpleNode0.dump("m9_+WDa\"", stringWriter0);
      assertEquals("<MethodDeclarator>\n  <identifier>*ge</identifier>\n</MethodDeclarator>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ":");
      StringWriter stringWriter0 = new StringWriter();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      char[] charArray0 = new char[7];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      charArray0[0] = 'W';
      StringWriter stringWriter1 = stringWriter0.append('T');
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-78);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)80;
      byteArray0[4] = (byte)50;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      stringWriter0.append('D');
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(63);
      simpleNode0.setIdentifier(":");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.dump("'kBSgZ4_\"{jriVpKk", stringWriter1);
      assertEquals("TD<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter1.toString());
      assertEquals("TD<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.2124068372530807
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "hZh");
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "hZh");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "hZh");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "do\"");
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.toString("do\"");
      simpleNode0.setIdentifier("<<");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "do\"");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<<");
      simpleNode0.setIdentifier("do\"");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FFd }M5R@R;'jRVyyq$");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\">>>=\"");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@RVe0&`wV");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "]IoJhp*");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "do\"");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.dump("@RVe0&`wV", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*lshft</identifier>\n  <identifier>do\"</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("VariableDeclaratorId : << : do\"", string0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4991158975602854
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(67);
      SimpleNode simpleNode1 = new SimpleNode(67);
      assertEquals(0, simpleNode1.jjtGetNumChildren());
      
      simpleNode1.jjtAddChild(simpleNode0, 0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "O2#]Sqz");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0u`p;w3x&a:yt");
      simpleNode0.setIdentifier(">>");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">>");
      simpleNode0.toString();
      simpleNode0.setIdentifier("B");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ArgumentList : >>");
      simpleNode0.jjtGetNumChildren();
      simpleNode1.jjtGetChild(0);
      StringWriter stringWriter0 = new StringWriter((byte)0);
      simpleNode0.dump(" : ", stringWriter0);
      assertEquals("<ArgumentList>\n  <identifier>*rshft</identifier>\n  <identifier>B</identifier>\n</ArgumentList>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(2846);
      simpleNode0.jjtAddChild(simpleNode0, 2846);
      simpleNode0.jjtSetParent(simpleNode0);
      simpleNode0.jjtGetParent();
      assertEquals(2847, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.087302357535235
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)85;
      byteArray0[1] = (byte) (-50);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SystemInUtil.addInputLine("*a$P:]9?mB:_9[6G0)");
      SimpleNode simpleNode0 = new SimpleNode(46);
      stringWriter0.append('O');
      simpleNode0.setIdentifier(">>");
      simpleNode0.dump("com.soops.CEN4010.JMCA.JParser.SimpleNode", stringWriter0);
      simpleNode0.toString();
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.soops.CEN4010.JMCA.JParser.SimpleNode");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      String string0 = "";
      simpleNode0.setIdentifier("");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-115);
      byteArray0[1] = (byte) (-106);
      byteArray0[2] = (byte) (-106);
      byteArray0[3] = (byte) (-42);
      byteArray0[4] = (byte) (-42);
      byteArray0[5] = (byte) (-106);
      byteArray0[6] = (byte) (-106);
      byteArray0[7] = (byte) (-42);
      byteArray0[8] = (byte) (-42);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-106), 2938);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pushbackInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      byteArrayInputStream0.skip(1182L);
      DataInputStream dataInputStream1 = new DataInputStream(pushbackInputStream1);
      pushbackInputStream0.read(byteArray0);
      dataInputStream1.mark((-2078209979));
      DataInputStream dataInputStream2 = new DataInputStream(pushbackInputStream1);
      DataInputStream dataInputStream3 = new DataInputStream(dataInputStream2);
      DataInputStream dataInputStream4 = new DataInputStream(dataInputStream2);
      dataInputStream2.skip((byte) (-106));
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream1);
      simpleNode0.setIdentifier("=");
      // Undeclared exception!
      try { 
        simpleNode0.dump("{", (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.298480482215484
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser(">=");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.jjnewStateCnt = 0;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager((JavaCharStream) null);
      StringBuffer stringBuffer0 = new StringBuffer(">=");
      javaParser0.CompilationUnit();
      javaParserTokenManager0.image = stringBuffer0;
      javaParserTokenManager0.image.append(1L);
      Object object0 = new Object();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager((JavaCharStream) null);
      stringBuffer0.chars();
      StringBuffer stringBuffer1 = javaParserTokenManager2.image;
      javaParserTokenManager2.jjimageLen = 0;
      javaParserTokenManager2.ReInit((JavaCharStream) null, 0);
      StringBuffer stringBuffer2 = new StringBuffer();
      javaParserTokenManager2.defaultLexState = 0;
      javaParserTokenManager0.image.append(0);
      JavaParser javaParser1 = new JavaParser(javaParserTokenManager2);
      javaParserTokenManager0.TokenLexicalActions(javaParser1.token);
      JavaParser javaParser2 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 1);
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.setIdentifier(";");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.dump("R$QG74YI", stringWriter0);
      assertEquals("<PackageDeclaration>\n  <identifier>*ge</identifier>\n</PackageDeclaration>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.929538535746656
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(88);
      StringWriter stringWriter0 = new StringWriter();
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte) (-106);
      byteArray0[0] = (byte) (-106);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-111), 3031);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      byteArrayInputStream0.skip((byte)0);
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.mark(64);
      DataInputStream dataInputStream2 = new DataInputStream(pushbackInputStream0);
      simpleNode0.dump("EqualityExpression", stringWriter0);
      dataInputStream0.skip(0L);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      simpleNode0.setIdentifier("{");
      simpleNode0.dump("EqualityExpression", stringWriter0);
      assertEquals("<ContinueStatement>\n</ContinueStatement>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3381514637755787
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "}");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtAddChild((Node) null, 33);
      simpleNode0.id = 33;
      simpleNode0.jjtGetParent();
      simpleNode0.jjtGetParent();
      simpleNode0.children = null;
      simpleNode0.jjtAddChild((Node) null, 1005);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-4036));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4036
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.9946571675310574
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter(47);
      simpleNode0.dump("", stringWriter0);
      byte[] byteArray0 = null;
      ByteArrayInputStream byteArrayInputStream0 = null;
      try {
        byteArrayInputStream0 = new ByteArrayInputStream((byte[]) null, (-1105729685), (-1105729685));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.8249506629220404
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(82);
      StringWriter stringWriter0 = new StringWriter();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">");
      byte[] byteArray1 = new byte[1];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleNode simpleNode1 = new SimpleNode((byte)24);
      simpleNode1.setIdentifier(">");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ArgumentList");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode1.dump("ArgumentList", stringWriter0);
      assertEquals("<FormalParameter>\n  <identifier>*gt</identifier>\n</FormalParameter>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write(1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.setIdentifier("<=");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.dump("%X[w(Mi t q*aS.A", stringWriter0);
      assertEquals("\u0001<PackageDeclaration>\n  <identifier>*le</identifier>\n</PackageDeclaration>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.394714983677679
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = 88;
      SimpleNode simpleNode0 = new SimpleNode(88);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 88);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      simpleNode0.jjtGetChild(88);
      Node node1 = simpleNode0.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (byte) (-106));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -106
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.157677035511023
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(88);
      StringWriter stringWriter0 = new StringWriter();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-106);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1106052531), 88);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pushbackInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.mark((-3165));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(pipedInputStream0);
      DataInputStream dataInputStream2 = new DataInputStream(pushbackInputStream0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.close();
      DataInputStream dataInputStream3 = new DataInputStream(sequenceInputStream0);
      DataInputStream dataInputStream4 = new DataInputStream(dataInputStream0);
      dataInputStream0.skip(0L);
      simpleNode0.toString("^V&T");
      simpleNode0.setIdentifier("&&");
      simpleNode0.dump("<HEX_LITERAL>", stringWriter0);
      assertEquals("<ContinueStatement>\n  <identifier>*amp</identifier>\n</ContinueStatement>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.394714983677679
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(88);
      simpleNode0.jjtAddChild(simpleNode0, 88);
      StringWriter stringWriter0 = new StringWriter();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      char[] charArray0 = new char[2];
      charArray0[0] = ']';
      Node node0 = simpleNode0.jjtGetChild(88);
      Node node1 = simpleNode0.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(node0, (byte) (-106));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -106
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(1708);
      simpleNode0.jjtGetParent();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = null;
      nodeArray0[1] = null;
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtSetParent((Node) null);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 1708);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(3813);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3813
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0067795890632527
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode((-1227));
      SimpleNode simpleNode1 = new SimpleNode((-1227));
      Node node0 = simpleNode1.parent;
      simpleNode0.jjtAddChild((Node) null, 173);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode0, (-1227));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1227
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.087302357535235
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(88);
      StringWriter stringWriter0 = new StringWriter();
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 88, 3038);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      byteArrayInputStream0.skip((-111));
      DataInputStream dataInputStream1 = new DataInputStream(pushbackInputStream0);
      dataInputStream0.mark(2571);
      DataInputStream dataInputStream2 = new DataInputStream(dataInputStream0);
      DataInputStream dataInputStream3 = new DataInputStream(byteArrayInputStream0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<BufferedInputStream> enumeration1 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      dataInputStream0.markSupported();
      dataInputStream1.markSupported();
      sequenceInputStream0.close();
      DataInputStream dataInputStream4 = new DataInputStream(dataInputStream1);
      pushbackInputStream0.markSupported();
      DataInputStream dataInputStream5 = new DataInputStream(dataInputStream4);
      dataInputStream5.mark((-1106101594));
      dataInputStream4.skip(2571);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(dataInputStream5);
      simpleNode0.setIdentifier("<");
      simpleNode0.dump("<", stringWriter0);
      assertEquals("<ContinueStatement>\n  <identifier>*lt</identifier>\n</ContinueStatement>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("ContinueStatement : <", string0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.9925623248862889
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-123);
      byteArray0[1] = (byte) (-123);
      byteArray0[2] = (byte) (-36);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "h:");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "h:");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "h:");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.toString();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "h:");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&");
      simpleNode0.setIdentifier("&");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"fals\"");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "h:");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"fals\"");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "VariableDeclaratorId");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.dump("X*KTH)|,E", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*amp</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser(">=");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.jjnewStateCnt = 0;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager((JavaCharStream) null);
      StringBuffer stringBuffer0 = new StringBuffer(">=");
      javaParser0.CompilationUnit();
      javaParserTokenManager0.image = stringBuffer0;
      javaParserTokenManager0.image.append(1L);
      javaParserTokenManager0.jjround = 0;
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager((JavaCharStream) null);
      stringBuffer0.chars();
      StringBuffer stringBuffer1 = javaParserTokenManager2.image;
      javaParserTokenManager2.ReInit((JavaCharStream) null, 0);
      StringBuffer stringBuffer2 = javaParserTokenManager2.image;
      javaParserTokenManager0.image.append(0);
      JavaParser javaParser1 = new JavaParser(javaParserTokenManager2);
      JavaParser javaParser2 = new JavaParser(">=");
      SimpleNode simpleNode0 = new SimpleNode(javaParser2, (-120811353));
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = 2154;
      SimpleNode simpleNode0 = new SimpleNode(2154);
      simpleNode0.jjtClose();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 2154);
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2154
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.087302357535235
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(88);
      StringWriter stringWriter0 = new StringWriter();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-106);
      byteArray0[0] = (byte) (-106);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-111), 3031);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      byteArrayInputStream0.skip((byte)0);
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.mark(64);
      DataInputStream dataInputStream2 = new DataInputStream(pushbackInputStream0);
      DataInputStream dataInputStream3 = new DataInputStream(byteArrayInputStream0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      dataInputStream1.markSupported();
      dataInputStream2.markSupported();
      sequenceInputStream1.close();
      DataInputStream dataInputStream4 = new DataInputStream(dataInputStream1);
      DataInputStream dataInputStream5 = new DataInputStream(dataInputStream2);
      dataInputStream0.skip(64);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(dataInputStream1);
      simpleNode0.setIdentifier("<");
      simpleNode0.dump("<", stringWriter0);
      assertEquals("<ContinueStatement>\n  <identifier>*lt</identifier>\n</ContinueStatement>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("ContinueStatement : <", string0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.087302357535235
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(88);
      StringWriter stringWriter0 = new StringWriter();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-106);
      byteArray0[0] = (byte) (-106);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-111), 3031);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      byteArrayInputStream0.skip((byte)0);
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.mark(64);
      DataInputStream dataInputStream2 = new DataInputStream(pushbackInputStream0);
      DataInputStream dataInputStream3 = new DataInputStream(byteArrayInputStream0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      dataInputStream1.markSupported();
      dataInputStream2.markSupported();
      sequenceInputStream0.close();
      DataInputStream dataInputStream4 = new DataInputStream(dataInputStream1);
      DataInputStream dataInputStream5 = new DataInputStream(dataInputStream2);
      dataInputStream0.skip(64);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(dataInputStream1);
      simpleNode0.setIdentifier("<");
      simpleNode0.dump("<", stringWriter0);
      assertEquals("<ContinueStatement>\n  <identifier>*lt</identifier>\n</ContinueStatement>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("ContinueStatement : <", string0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.jjnewStateCnt = 0;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager((JavaCharStream) null);
      StringBuffer stringBuffer0 = new StringBuffer(">=");
      javaParserTokenManager0.image = stringBuffer0;
      StringBuffer stringBuffer1 = javaParserTokenManager0.image.append(1L);
      Object object0 = new Object();
      stringBuffer1.append((double) 0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager((JavaCharStream) null);
      stringBuffer1.chars();
      StringBuffer stringBuffer2 = javaParserTokenManager2.image;
      javaParserTokenManager2.ReInit((JavaCharStream) null, 0);
      StringBuffer stringBuffer3 = javaParserTokenManager2.image;
      javaParserTokenManager2.defaultLexState = 0;
      javaParserTokenManager0.image.append(0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager2);
      JavaParser javaParser1 = new JavaParser(javaParserTokenManager0);
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode((-1085897390));
      // Undeclared exception!
      try { 
        simpleNode0.toString("#e");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1085897390
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser(">=");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.jjnewStateCnt = 0;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager((JavaCharStream) null);
      StringBuffer stringBuffer0 = new StringBuffer(">=");
      javaParser0.CompilationUnit();
      javaParserTokenManager0.image = stringBuffer0;
      javaParserTokenManager0.image.append(1L);
      javaParserTokenManager0.jjround = 0;
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager((JavaCharStream) null);
      stringBuffer0.chars();
      StringBuffer stringBuffer1 = javaParserTokenManager2.image;
      javaParserTokenManager2.ReInit((JavaCharStream) null, 0);
      StringBuffer stringBuffer2 = javaParserTokenManager2.image;
      javaParserTokenManager0.image.append(0);
      JavaParser javaParser1 = new JavaParser(javaParserTokenManager2);
      JavaParser javaParser2 = new JavaParser(">=");
      SimpleNode simpleNode0 = new SimpleNode(javaParser1, 0);
      String string0 = simpleNode0.toString();
      assertEquals("CompilationUnit", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      stringWriter1.getBuffer();
      stringWriter0.close();
      char[] charArray0 = new char[3];
      charArray0[1] = 'k';
      charArray0[2] = 'm';
      stringWriter0.write(charArray0);
      StringBuffer stringBuffer1 = new StringBuffer((byte)116);
      StringWriter stringWriter2 = stringWriter0.append((CharSequence) stringBuffer0);
      stringWriter2.append('c');
      StringWriter stringWriter3 = new StringWriter('Q');
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 1863);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Annotation");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1087843497), 520);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-1087843497));
      simpleNode0.jjtAddChild((Node) null, 0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser(">=");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.jjnewStateCnt = 0;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager((JavaCharStream) null);
      StringBuffer stringBuffer0 = new StringBuffer(">=");
      javaParser0.CompilationUnit();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.image = stringBuffer0;
      javaParserTokenManager0.image.append(1L);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager((JavaCharStream) null);
      stringBuffer0.chars();
      StringBuffer stringBuffer1 = javaParserTokenManager2.image;
      javaParserTokenManager2.ReInit((JavaCharStream) null, 0);
      StringBuffer stringBuffer2 = javaParserTokenManager2.image;
      javaParserTokenManager0.image.append(0);
      JavaParser javaParser1 = new JavaParser(javaParserTokenManager2);
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier(">=");
      javaParserTokenManager0.image.append(0);
      JavaParser javaParser2 = new JavaParser(javaParser1.token_source);
      JavaParser javaParser3 = new JavaParser("SynchronizedStatement");
      assertFalse(javaParser3.equals((Object)javaParser0));
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.12484349315711
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(67);
      SimpleNode simpleNode1 = new SimpleNode(67);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "O2#]Sqz");
      simpleNode0.setIdentifier(")0(Grrb.4l");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ")0(Grrb.4l");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<<");
      simpleNode1.jjtGetNumChildren();
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[0];
      stringWriter0.write(charArray0);
      StringWriter stringWriter1 = stringWriter0.append('\u0019');
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "=_v");
      simpleNode1.dump("=_v", stringWriter1);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.136867357485675
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SystemInUtil.addInputLine("z}y[e$9>$");
      SimpleNode simpleNode0 = new SimpleNode(88);
      simpleNode0.jjtAddChild(simpleNode0, 88);
      StringWriter stringWriter0 = new StringWriter(88);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      String string0 = "%=";
      // Undeclared exception!
      simpleNode0.dump("z}y[e$9>$", stringWriter0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.7488320958430319
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int int0 = 88;
      SimpleNode simpleNode0 = new SimpleNode(88);
      StringWriter stringWriter0 = new StringWriter();
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      String string0 = "<CHARACTER_LIDTERAL>";
      simpleNode0.dump("<CHARACTER_LIDTERAL>", stringWriter0);
      String string1 = ">=";
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null, 65);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 65. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "P2vm=@9q.,l~`z");
      StringWriter stringWriter0 = new StringWriter();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      char[] charArray0 = new char[7];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "P2vm=@9q.,l~`z");
      charArray0[0] = 'W';
      stringWriter0.append('T');
      charArray0[1] = 'T';
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{");
      SimpleNode simpleNode0 = new SimpleNode((-1994280991));
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        simpleNode0.dump("B", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.9925623248862889
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      StringWriter stringWriter0 = new StringWriter();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-121);
      byteArray0[1] = (byte)21;
      byteArray0[2] = (byte) (-36);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "h:");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "h:");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "PI7f@yJ[i;@Z");
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.toString();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "h:");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&");
      simpleNode0.setIdentifier("&");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "PI7f@yJ[i;@Z");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"false\"");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "PI7f@yJ[i;@Z");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"false\"");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.dump("X*KTH)|,E", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*amp</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(88);
      simpleNode0.setIdentifier("x)e3U6L5c`\"<wUT1f-");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("x)e3U6L5c`\"<wUT1f-", stringWriter0);
      ByteArrayInputStream byteArrayInputStream0 = null;
      try {
        byteArrayInputStream0 = new ByteArrayInputStream((byte[]) null, 1, (-295));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.7962209059715708
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "h:");
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "h:");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "h:");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "jOA.x/) 8?5aH2hSN,");
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("\"do\"");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.dump("h:", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>\"do\"</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "h1:");
      StringWriter stringWriter0 = new StringWriter();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "h1:");
      StringWriter stringWriter1 = stringWriter0.append('T');
      FileSystemHandling.shouldAllThrowIOExceptions();
      arrayList0.add("v39DLBdH1@");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      JavaParser javaParser0 = new JavaParser((Reader) null);
      SimpleNode simpleNode0 = new SimpleNode((-2878));
      simpleNode0.identifiers = arrayList0;
      // Undeclared exception!
      try { 
        simpleNode0.dump(";", stringWriter1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1242));
      SimpleNode simpleNode1 = new SimpleNode((-1242));
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode1, (-1242));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1459));
      SimpleNode simpleNode1 = new SimpleNode((-1459));
      simpleNode0.parent = (Node) simpleNode1;
      Node node0 = simpleNode0.jjtGetParent();
      assertNotSame(simpleNode0, node0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.4447336784670775
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(77);
      StringWriter stringWriter0 = new StringWriter(77);
      byte[] byteArray0 = new byte[10];
      StringReader stringReader0 = new StringReader("+(l($(?");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager1);
      JavaParser javaParser1 = new JavaParser(stringReader0);
      try { 
        javaParser1.MultiplicativeExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 6.  Encountered: (
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.identifiers = null;
      simpleNode0.identifiers = null;
      simpleNode0.jjtOpen();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser(">=");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.jjnewStateCnt = 0;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager((JavaCharStream) null);
      StringBuffer stringBuffer0 = new StringBuffer(">=");
      javaParser0.CompilationUnit();
      javaParserTokenManager0.image = stringBuffer0;
      javaParserTokenManager0.image.append(1L);
      javaParserTokenManager0.jjround = 0;
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager((JavaCharStream) null);
      stringBuffer0.chars();
      StringBuffer stringBuffer1 = javaParserTokenManager2.image;
      javaParserTokenManager2.ReInit((JavaCharStream) null, 0);
      StringBuffer stringBuffer2 = javaParserTokenManager2.image;
      javaParserTokenManager0.image.append(0);
      JavaParser javaParser1 = new JavaParser(javaParserTokenManager2);
      JavaParser javaParser2 = new JavaParser(">=");
      SimpleNode simpleNode0 = new SimpleNode(javaParser2, 0);
      String string0 = simpleNode0.toString(">=");
      assertEquals(">=CompilationUnit", string0);
  }
}
