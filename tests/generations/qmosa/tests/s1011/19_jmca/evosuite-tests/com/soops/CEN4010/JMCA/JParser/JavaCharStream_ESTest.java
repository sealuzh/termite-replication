/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 10 22:23:35 GMT 2020
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1353865002096117
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      String string0 = "<j 'gfeKgU& R$";
      StringReader stringReader0 = new StringReader("<j 'gfeKgU& R$");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.prevCharIsCR = true;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1), (-1));
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      byteArrayInputStream0.read();
      int int0 = (-1938);
      stringReader0.reset();
      javaCharStream0.bufsize = (-1938);
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader1 = new StringReader("<j 'gfeKgU& R$");
      stringReader0.ready();
      stringReader0.ready();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-1938), (-1938));
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.4036404106149494
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Wv{\"R+FCKq][m");
      stringReader0.ready();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Wv{\"R+FCKq][m");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Wv{\"R+FCKq][m");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2988, 2988);
      javaCharStream0.FillBuff();
      javaCharStream0.tokenBegin = 77;
      javaCharStream0.GetImage();
      stringReader0.reset();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), (-1));
      javaCharStream1.getBeginLine();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      javaCharStream2.ReInit((Reader) stringReader0, 12, (-2009));
      javaCharStream2.ExpandBuff(false);
      javaCharStream1.BeginToken();
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader1, (-1), (-1));
      javaCharStream3.ReInit((Reader) stringReader0, 64, 77, 77);
      javaCharStream3.GetImage();
      javaCharStream0.getBeginLine();
      javaCharStream0.GetSuffix(0);
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getColumn();
      assertEquals(2988, javaCharStream0.getBeginLine());
      assertEquals(2988, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.8213144407101969
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      String string0 = "`adsCksC|@NsZ\\#N\"]";
      StringReader stringReader0 = new StringReader("`adsCksC|@NsZ#N\"]");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int int0 = (-4488);
      javaCharStream0.available = 4096;
      javaCharStream0.BeginToken();
      stringReader0.markSupported();
      javaCharStream0.maxNextCharInd = (-4488);
      javaCharStream0.nextCharInd = (-4488);
      javaCharStream0.prevCharIsLF = true;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.adjustBeginLineColumn((-4488), (-4488));
      javaCharStream0.getColumn();
      stringReader0.close();
      try { 
        stringReader0.skip(2183L);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[11];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte)15;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("GaIB3;");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.6993255155252154
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      String string0 = "Wv{\"R+FCK[q][m";
      StringReader stringReader0 = new StringReader("Wv{\"R+FCK[q][m");
      stringReader0.ready();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 81, 81, 81);
      javaCharStream0.ReInit((Reader) stringReader0, 439, 439, 81);
      javaCharStream0.ReadByte();
      String string1 = null;
      StringReader stringReader1 = new StringReader("?]l %g6j+?cX>/");
      stringReader0.ready();
      javaCharStream0.BeginToken();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-62);
      byteArray0[2] = (byte) (-75);
      byteArray0[3] = (byte)78;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("Wv{\"R+FCK[q][m");
      stringReader0.reset();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringReader0.ready();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Wv{\"R+FCK[q][m");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Wv{\"R+FCK[q][m");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Wv{\"R+FCK[q][m");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      int int0 = JavaCharStream.hexval('6');
      assertEquals(6, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.351783994289646
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Wv{\"R+FCK[q][m");
      stringReader0.ready();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)40;
      byteArray0[1] = (byte)40;
      byteArray0[2] = (byte)40;
      byteArray0[3] = (byte)40;
      byteArray0[1] = (byte) (-36);
      byteArray0[5] = (byte) (-116);
      byteArray0[6] = (byte)0;
      byteArray0[3] = (byte)40;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1), 4096);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 5, 8);
      javaCharStream0.adjustBeginLineColumn((byte)40, (byte)0);
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7060571156426696
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)15;
      byteArray0[3] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[4] = (byte) (-116);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[5] = (byte)18;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)15);
      byteArrayInputStream0.mark(1);
      byteArrayInputStream0.markSupported();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-116), (byte)8, (-2265));
      javaCharStream0.BeginToken();
      javaCharStream0.getEndLine();
      // Undeclared exception!
      try { 
        CharBuffer.allocate((-1279));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0902402651011076
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      JavaCharStream.hexval('A');
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)95;
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-4);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      byteArrayInputStream0.read();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(pushbackInputStream0, sequenceInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      sequenceInputStream1.markSupported();
      DataInputStream dataInputStream1 = new DataInputStream(sequenceInputStream1);
      dataInputStream1.skipBytes((byte) (-4));
      StringReader stringReader0 = new StringReader("[");
      sequenceInputStream0.read(byteArray0, (-1684), (int) (byte) (-4));
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream1, 0, (byte)8, 0);
      javaCharStream0.FillBuff();
      javaCharStream0.readChar();
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn((byte)0, 1);
      assertEquals(2, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.1756363574222692
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("9y{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      JavaCharStream.hexval('9');
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-2585), (-257), 9);
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      assertEquals(1, javaCharStream0.getBeginColumn());
      
      javaCharStream1.getBeginLine();
      StringReader stringReader1 = new StringReader("9y{");
      StringReader stringReader2 = new StringReader("9");
      StringReader stringReader3 = new StringReader("vdIbzQ~RKf}Km");
      stringReader2.ready();
      StringReader stringReader4 = new StringReader("XH8K}Oq'W`^^zy&,");
      StringReader stringReader5 = new StringReader("");
      javaCharStream1.ExpandBuff(false);
      assertEquals((-1), javaCharStream1.bufpos);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<y5>F8;UfVy");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.inBuf = 10;
      javaCharStream0.readChar();
      StringReader stringReader1 = new StringReader("<y5>F8;UfVy");
      boolean boolean0 = JavaCharStream.staticFlag;
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-2866), (-286), 63);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-4);
      byteArray0[1] = (byte) (-36);
      byteArray0[2] = (byte) (-4);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-4);
      byteArray0[6] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 62, 0);
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, (-222), (byte)0);
      char char0 = javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals('\u0000', char0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.4474245570040813
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader("r/Q.Ho(v\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2035), (-2035), 1371);
      JavaCharStream.hexval('5');
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      byte[] byteArray0 = new byte[3];
      StringReader stringReader1 = new StringReader(",Oe[0/AY^'PF:");
      javaCharStream0.ReInit((Reader) stringReader1);
      byteArray0[0] = (byte) (-18);
      StringReader stringReader2 = new StringReader(" column ");
      boolean boolean0 = stringReader0.ready();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.getBeginLine();
      StringReader stringReader3 = new StringReader("");
      boolean boolean1 = stringReader1.ready();
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.31424474485062986
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      JavaCharStream.hexval('e');
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)9;
      StringReader stringReader0 = new StringReader("8&k$tM`kh5p S");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 14, (byte)9, (byte)9);
      javaCharStream0.backup((byte)9);
      javaCharStream0.backup(0);
      javaCharStream0.BeginToken();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      byte[] byteArray0 = new byte[8];
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.9104956296178259
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<y5>F8;Ufty");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.6525902233018674
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      byte byte0 = (byte)15;
      byteArray0[0] = (byte)15;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".");
      String string0 = "3^3e[qfJp0\\2";
      StringReader stringReader0 = new StringReader("3^3e[qfJp0\u0002");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4075, (byte)15);
      javaCharStream0.ReadByte();
      StringReader stringReader1 = new StringReader("a^%k&I^UfPP");
      javaCharStream0.BeginToken();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte)15;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[3] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[4] = (byte) (-116);
      byteArray0[5] = (byte) (-4);
      byteArray0[6] = (byte)0;
      char char0 = '\\';
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.756545254560463
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<y5>F8;UfVy");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.inBuf = 10;
      javaCharStream0.readChar();
      StringReader stringReader1 = new StringReader("<y5>F8;UfVy");
      stringReader1.ready();
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-2866), (-286), 63);
      StringReader stringReader2 = new StringReader("<y5>F8;UfVy");
      StringReader stringReader3 = new StringReader(":@hh_rjemR");
      StringReader stringReader4 = new StringReader("<y5>F8;UfVy");
      StringReader stringReader5 = new StringReader("<y5>F8;UfVy");
      StringReader stringReader6 = new StringReader(":@hh_rjemR");
      StringReader stringReader7 = new StringReader("q");
      stringReader6.ready();
      javaCharStream1.readChar();
      javaCharStream1.getEndColumn();
      javaCharStream0.adjustBeginLineColumn((-1), 98);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      char char0 = '?';
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.2275294114572126
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte)15;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[5] = (byte) (-4);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-36);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 11, (byte)0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)8, 362);
      javaCharStream0.Done();
      javaCharStream0.prevCharIsLF = true;
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn((byte)0, (byte) (-4));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      int int0 = JavaCharStream.hexval('f');
      assertEquals(15, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.5210349898294988
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      JavaCharStream.hexval('a');
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("gRt{g\"<t<Q,kQ&$yp,");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)58;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)70;
      byteArray0[4] = (byte)78;
      byteArray0[5] = (byte)91;
      byteArray0[6] = (byte) (-124);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-3932), 76);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)78);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0, (byte)78);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, (byte)70, (byte) (-124), (byte)0);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.6290407622471201
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)8;
      byteArray0[3] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[4] = (byte) (-116);
      byteArray0[5] = (byte) (-4);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[6] = (byte)0;
      StringReader stringReader0 = new StringReader("]8=gAAL6");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, (byte) (-4));
      javaCharStream0.BeginToken();
      stringReader0.skip(928L);
      StringReader stringReader1 = new StringReader("");
      stringReader1.markSupported();
      stringReader1.ready();
      char char0 = javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals('8', char0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.9633815843099565
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)8;
      byteArray0[3] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[4] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[5] = (byte) (-4);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)15);
      byteArrayInputStream0.mark(1);
      byteArrayInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)0, (byte)8, (-2265));
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.getLine();
      javaCharStream0.GetImage();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(0, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      String string0 = "jsiKyy+#KH[{/J";
      StringReader stringReader0 = new StringReader("jsiKyy+#KH[{/J");
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.1383330595080277
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.GetImage();
      javaCharStream0.available = 1936;
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5832584594204766
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.backup(0);
      javaCharStream0.backup(1);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(3496, 100);
      assertEquals(4095, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-77);
      byteArray0[1] = (byte) (-62);
      byteArray0[2] = (byte) (-75);
      byteArray0[3] = (byte)78;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      String string0 = "Wv{\"R+FCK[q][m";
      StringReader stringReader0 = new StringReader("Wv{\"R+FCK[q][m");
      stringReader0.ready();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Wv{\"R+FCK[q][m");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Wv{\"R+FCK[q][m");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Wv{\"R+FCK[q][m");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2988, 2988);
      javaCharStream0.FillBuff();
      javaCharStream0.tokenBegin = (int) (byte) (-77);
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.2969646938688473
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader("r/Q.Ho(v\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2035), (-2035), 1371);
      JavaCharStream.hexval('5');
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-18);
      StringReader stringReader1 = new StringReader(" column ");
      stringReader0.ready();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.getBeginLine();
      javaCharStream0.GetSuffix(5);
      int int0 = javaCharStream0.getLine();
      assertEquals((-2034), javaCharStream0.getBeginColumn());
      assertEquals((-2035), int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)8;
      byteArray0[3] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[4] = (byte) (-116);
      StringReader stringReader0 = new StringReader("([M&s");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.2568646526994761
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StringReader stringReader0 = new StringReader("r/Q.Ho(v\"");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 1371);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0, 1371);
      pushbackInputStream0.close();
      JavaCharStream.hexval('4');
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.close();
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.153532456654254
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.GetImage();
      javaCharStream0.available = (-3503);
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte)15;
      byteArray0[3] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[4] = (byte) (-116);
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.255265733556093
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<y5>F8;Ufty");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      javaCharStream0.getLine();
      javaCharStream0.getEndLine();
      javaCharStream0.GetImage();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-2585), (-257), '<');
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      javaCharStream1.getBeginLine();
      StringReader stringReader1 = new StringReader("<y5>F8;Ufty");
      StringReader stringReader2 = new StringReader("<");
      StringReader stringReader3 = new StringReader("vdIbzQ~RKf}Km");
      stringReader2.ready();
      javaCharStream0.ExpandBuff(true);
      // Undeclared exception!
      try { 
        javaCharStream1.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      char char0 = '1';
      JavaCharStream.hexval('1');
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      try { 
        mockFileInputStream0.skip((-1954L));
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      JavaCharStream.hexval('2');
      StringReader stringReader0 = new StringReader(".");
      stringReader0.reset();
      stringReader0.mark(2);
      stringReader0.read();
      stringReader0.mark(741);
      stringReader0.reset();
      StringReader stringReader1 = new StringReader(".");
      boolean boolean0 = stringReader1.ready();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-86);
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte)15;
      byteArray0[3] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.2568646526994761
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      JavaCharStream.hexval('0');
      JavaCharStream.hexval('0');
      JavaCharStream.hexval('0');
      InputStream inputStream0 = null;
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(bufferedInputStream0, bufferedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.close();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-1929));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.1214203231153572
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StringReader stringReader0 = new StringReader("r/Q.Ho(v\"");
      StringReader stringReader1 = new StringReader("x4VG)6.&|{#]#Mq-");
      stringReader1.markSupported();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte)9;
      byteArray0[3] = (byte)9;
      byteArray0[2] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.mark(0);
      byteArrayInputStream1.skip((byte)0);
      byteArrayInputStream1.markSupported();
      byteArrayInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1, (byte)9, 91);
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.AdjustBuffSize();
      try { 
        JavaCharStream.hexval('\t');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.1009712381205012
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      JavaCharStream.hexval('a');
      StringReader stringReader0 = new StringReader("x4VG)6.&|{#]#Mq-");
      stringReader0.markSupported();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte)9;
      byteArray0[3] = (byte)9;
      byteArray0[4] = (byte)9;
      byteArray0[5] = (byte)9;
      byteArray0[6] = (byte)9;
      byteArray0[7] = (byte)9;
      byteArray0[8] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      byteArrayInputStream0.mark((byte)9);
      byteArrayInputStream0.skip((-10L));
      byteArrayInputStream0.markSupported();
      byteArrayInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)9, (byte)9);
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.AdjustBuffSize();
      try { 
        JavaCharStream.hexval('\t');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.3419942522324244
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.GetImage();
      javaCharStream0.available = (-3518);
      javaCharStream0.getBeginLine();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      int int0 = (-2406);
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, 1346, 1882, (-2406));
      javaCharStream1.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5792331346113395
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)8;
      byteArray0[3] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-4);
      byteArray0[6] = (byte)0;
      StringReader stringReader0 = new StringReader("]8=gAAL6");
      boolean boolean0 = stringReader0.ready();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, (byte) (-4));
      javaCharStream0.BeginToken();
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("#");
      boolean boolean1 = stringReader0.ready();
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.4018945120507703
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      JavaCharStream.hexval('A');
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)8, 465, (byte)0);
      javaCharStream0.backup(92);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn((-1005), (-64));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.059044366009098
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1799, 1799);
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.6674619334292946
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.GetImage();
      javaCharStream0.available = (-3503);
      javaCharStream0.getBeginLine();
      javaCharStream0.tokenBegin = 100;
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ExpandBuff(false);
      String string0 = "xMhK7PP&C7QB4%~";
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.229918603764207
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte)15;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[5] = (byte) (-4);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-36);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 11, (byte)0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)8, 362);
      javaCharStream0.prevCharIsLF = true;
      javaCharStream0.adjustBeginLineColumn((byte)0, (byte) (-4));
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('^');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.941785058631368
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<y5>F8;UfVy");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.inBuf = 10;
      javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      
      StringReader stringReader1 = new StringReader("<y5>F8;UfVy");
      stringReader1.ready();
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-2866), (-2237), 0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-36);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)92;
      byteArray0[5] = (byte) (-4);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-578), 11);
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, 0, (byte)0);
      char char0 = javaCharStream1.readChar();
      assertEquals('<', char0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      JavaCharStream.hexval('F');
      InputStream inputStream0 = null;
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 15);
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      char char0 = 'Z';
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      int int0 = (-1789);
      StringReader stringReader0 = new StringReader("");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1789), (-1789));
      int int1 = 95;
      javaCharStream0.backup(95);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.8866967846580782
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<y5>F8;UfVy");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.inBuf = 10;
      javaCharStream0.readChar();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.FillBuff();
      javaCharStream0.getBeginLine();
      stringReader0.ready();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      javaCharStream0.UpdateLineColumn('\u0000');
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.UpdateLineColumn('f');
      assertEquals(2, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.8891591637540217
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.GetImage();
      javaCharStream0.backup(0);
      javaCharStream0.ReInit((Reader) null, 6112, 0, 6132);
      javaCharStream0.backup(1);
      javaCharStream0.bufsize = 3229;
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      stringReader0.ready();
      javaCharStream0.BeginToken();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      JavaCharStream.hexval('a');
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      CharBuffer.wrap((CharSequence) "");
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-62);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "26?Q");
      StringReader stringReader0 = new StringReader("(V3<<yRVq");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      char char0 = 'C';
      JavaCharStream.hexval('C');
      InputStream inputStream0 = null;
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 12);
      try { 
        JavaCharStream.hexval('$');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      int int0 = JavaCharStream.hexval('c');
      assertEquals(12, int0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      JavaCharStream.hexval('8');
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte) (-86);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte)65;
      StringReader stringReader0 = new StringReader("");
      // Undeclared exception!
      try { 
        stringReader0.mark((byte) (-86));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Read-ahead limit < 0
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      char char0 = '_';
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.4402347497045995
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<y5>F8;UfVy");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.inBuf = (-28);
      javaCharStream0.readChar();
      StringReader stringReader1 = new StringReader("<y5>F8;UfVy");
      stringReader1.ready();
      StringReader stringReader2 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-2866), (-286), 63);
      StringReader stringReader3 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      StringReader stringReader4 = new StringReader("");
      StringReader stringReader5 = new StringReader("");
      StringReader stringReader6 = new StringReader("ZVHlk}{");
      boolean boolean0 = stringReader3.ready();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.721904941357862
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 184, 7, 7);
      stringReader0.ready();
      javaCharStream0.backup((-1789));
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      StringReader stringReader1 = new StringReader(".");
      stringReader1.ready();
      javaCharStream0.ExpandBuff(true);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      int int0 = JavaCharStream.hexval('B');
      assertEquals(11, int0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.6086574211167033
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.GetImage();
      javaCharStream0.available = (-3554);
      javaCharStream0.backup(0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-36);
      javaCharStream0.prevCharIsLF = false;
      byteArray0[1] = (byte) (-36);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.bufsize = 640;
      javaCharStream0.adjustBeginLineColumn(1, (byte)0);
      javaCharStream0.getEndColumn();
      javaCharStream0.AdjustBuffSize();
      int int0 = javaCharStream0.getBeginLine();
      assertEquals(4095, javaCharStream0.bufpos);
      assertEquals(7, int0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.0590443660090973
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[2] = (byte) (-75);
      byteArray0[3] = (byte)78;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("Wv{\"R+FCK[q][m");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Wv{\"R+FCK[q][m");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Wv{\"R+FCK[q][m");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Wv{\"R+FCK[q][m");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2988, 2988);
      javaCharStream0.FillBuff();
      javaCharStream0.tokenBegin = 77;
      javaCharStream0.GetImage();
      stringReader0.reset();
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Wv{\"R+FCK[q][m");
      StringReader stringReader1 = new StringReader("Wv{\"R+FCK[q][m");
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getEndLine();
      assertEquals(2988, javaCharStream0.getBeginLine());
      assertEquals(2988, int0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.9104956296178259
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      JavaCharStream.hexval('A');
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)95;
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-4);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      byteArrayInputStream0.read();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(pushbackInputStream0, sequenceInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      sequenceInputStream1.markSupported();
      DataInputStream dataInputStream1 = new DataInputStream(sequenceInputStream1);
      dataInputStream1.skipBytes((byte) (-4));
      StringReader stringReader0 = new StringReader("[");
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream1, 0, (byte)8, 0);
      javaCharStream0.readChar();
      int int0 = javaCharStream0.getEndLine();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.08831978220001763
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      char char0 = 'D';
      JavaCharStream.hexval('D');
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader0, 60, (-2585), (-2585));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      JavaCharStream.hexval('d');
      StringReader stringReader0 = new StringReader(".");
      stringReader0.read();
      stringReader0.reset();
      StringReader stringReader1 = new StringReader(".");
      boolean boolean0 = stringReader0.ready();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-116), (byte)18);
      byteArrayInputStream0.mark((byte) (-116));
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte)0;
      byteArray1[3] = (byte)18;
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray1, (byte)0, 1);
      byteArrayInputStream1.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-2736), (byte)0, 11);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte) (-86);
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      JavaCharStream.hexval('F');
      InputStream inputStream0 = null;
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 15);
      pushbackInputStream0.close();
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0027182645175161
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[4] = (byte) (-116);
      byteArray0[5] = (byte) (-4);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-36);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 11, (byte) (-116));
      byteArrayInputStream0.mark((byte) (-116));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)8, 362);
      int[] intArray0 = new int[1];
      intArray0[0] = (int) (byte)0;
      javaCharStream0.bufcolumn = intArray0;
      javaCharStream0.prevCharIsLF = true;
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn((byte)0, (byte) (-4));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.157863352792527
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      String string0 = "r/Q.Ho(v\"";
      StringReader stringReader0 = new StringReader("r/Q.Ho(v\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2035), (-2035), 1371);
      JavaCharStream.hexval('5');
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.getBeginColumn();
      javaCharStream0.AdjustBuffSize();
      StringReader stringReader1 = null;
      try {
        stringReader1 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)3;
      StringReader stringReader0 = new StringReader("\"pNr");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 79, 2391, 92);
      StringReader stringReader1 = new StringReader("\"pNr");
      StringReader stringReader2 = new StringReader("");
      StringReader stringReader3 = new StringReader("");
      StringReader stringReader4 = new StringReader("");
      stringReader3.ready();
      char char0 = javaCharStream0.ReadByte();
      assertEquals('\"', char0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.6424091504413598
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.backup(0);
      javaCharStream0.ReInit((Reader) null, 6112, 0, 6132);
      javaCharStream0.backup(1);
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      javaCharStream0.BeginToken();
      JavaCharStream.hexval('5');
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Wv{\"R+FCK[q][m");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      JavaCharStream.hexval('E');
      StringReader stringReader0 = new StringReader(".");
      stringReader0.read();
      stringReader0.reset();
      StringReader stringReader1 = new StringReader(".");
      boolean boolean0 = stringReader0.ready();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-86);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 1, 76);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.2815372679003656
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<y5>F8;Ufty");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      StringReader stringReader1 = new StringReader("<y5>F8;Ufty");
      stringReader1.ready();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.BeginToken();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/replication/scripts/projects/19_jmca");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, (String) null);
      JavaCharStream javaCharStream1 = new JavaCharStream(mockFileInputStream0, 0, 1519);
      javaCharStream1.GetImage();
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte byte0 = (byte)8;
      byte byte1 = (byte) (-4);
      byte byte2 = (byte)0;
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.1383972463477243
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      String string0 = javaCharStream0.GetImage();
      javaCharStream0.backup(84);
      StringReader stringReader1 = new StringReader(string0);
      javaCharStream0.ReInit((Reader) stringReader1, 1074, (-3682), 6132);
      javaCharStream0.backup(6132);
      StringReader stringReader2 = new StringReader("");
      stringReader2.ready();
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetSuffix(76);
      assertEquals(8180, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.500138026365426
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-52);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte) (-106);
      byteArray0[6] = (byte)59;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-3356), (byte)0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      javaCharStream0.GetImage();
      javaCharStream0.available = (-3518);
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte) (-12);
      byteArray0[2] = (byte)15;
      byteArray0[3] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[4] = (byte) (-116);
      byteArray0[5] = (byte) (-4);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)15);
      byteArrayInputStream0.mark(1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-116), (byte) (-12), (-2265));
      javaCharStream0.maxNextCharInd = (int) (byte) (-116);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.4402347497045995
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte)15;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte byte0 = (byte) (-4);
      byteArray0[5] = (byte) (-4);
      byteArray0[6] = (byte)0;
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-4), (byte)8, 117);
      javaCharStream0.BeginToken();
      // Undeclared exception!
      try { 
        CharBuffer.allocate((-543));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte)0;
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.5726181631526384
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("r/Q.Ho(v\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2035), (-2035), 1371);
      JavaCharStream.hexval('5');
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      StringReader stringReader1 = new StringReader(",Oe[0/AY^'PF:");
      javaCharStream0.ReInit((Reader) stringReader1);
      StringReader stringReader2 = new StringReader(" column ");
      StringReader stringReader3 = new StringReader(":@hh_rjemR");
      StringReader stringReader4 = new StringReader(":@hh_rjemR");
      StringReader stringReader5 = new StringReader("");
      StringReader stringReader6 = new StringReader("r/Q.Ho(v\"");
      StringReader stringReader7 = new StringReader(":@hh_rjemR");
      stringReader7.markSupported();
      stringReader7.ready();
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn(270, 3751);
      assertEquals(270, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.5229550675313182
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("Invalid escape character at line ");
      StringReader stringReader2 = new StringReader("");
      StringReader stringReader3 = new StringReader("->");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, (-385), 3137, 4050);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.8891591637540217
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.GetImage();
      javaCharStream0.backup(0);
      javaCharStream0.ReInit((Reader) null, 6112, 0, 6132);
      javaCharStream0.backup(1);
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      stringReader0.ready();
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.5810937501718236
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.GetImage();
      javaCharStream0.available = (-3503);
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.tokenBegin = 100;
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.8224566865052352
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)8;
      byteArray0[3] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[4] = (byte) (-116);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Invalid escape character at line ");
      byteArray0[5] = (byte) (-4);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)15);
      byteArrayInputStream0.mark(1);
      byteArrayInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-116), (byte)8, (-2265));
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.GetImage();
      byteArrayInputStream0.markSupported();
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      File file0 = MockFile.createTempFile("i@pR)#&fCdY%:", "P:]9?mB:_9[6G0))");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.5792331346113395
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "60*)8");
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("60*)8");
      StringReader stringReader2 = new StringReader("");
      StringReader stringReader3 = new StringReader("trM51,;=A*P1hzl>");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      javaCharStream0.readChar();
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.660779861736039
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.GetImage();
      javaCharStream0.available = (-3554);
      javaCharStream0.backup(0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-36);
      javaCharStream0.prevCharIsLF = false;
      byteArray0[1] = (byte) (-36);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.adjustBeginLineColumn(1, (byte)0);
      javaCharStream0.getEndColumn();
      javaCharStream0.AdjustBuffSize();
      int int0 = javaCharStream0.getBeginLine();
      assertEquals(4095, javaCharStream0.bufpos);
      assertEquals(2, int0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      char char0 = 'S';
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      JavaCharStream.hexval('7');
      int int0 = 557;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream1, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.8855741515766717
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-1881), 1);
      javaCharStream0.adjustBeginLineColumn((-1313), 70);
      assertEquals((-1312), javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.0963525794641384
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Wv{\"R+FCK[q][m");
      stringReader0.ready();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Wv{\"R+FCK[q][m");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Wv{\"R+FCK[q][m");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Wv{\"R+FCK[q][m");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2988, 2988);
      javaCharStream0.FillBuff();
      javaCharStream0.tokenBegin = 77;
      javaCharStream0.GetImage();
      javaCharStream0.backup(77);
      stringReader0.reset();
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Wv{\"R+FCK[q][m");
      StringReader stringReader1 = new StringReader("Wv{\"R+FCK[q][m");
      javaCharStream0.adjustBeginLineColumn(0, 86);
      int int0 = javaCharStream0.getLine();
      assertEquals(86, javaCharStream0.getBeginColumn());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.3469886916978666
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StringReader stringReader0 = new StringReader("r/Q.Ho(v\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2035), (-2035), 1371);
      JavaCharStream.hexval('5');
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(false);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-18);
      StringReader stringReader1 = new StringReader(" column ");
      stringReader0.ready();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      stringReader1.reset();
      stringReader0.ready();
      javaCharStream0.getBeginLine();
      javaCharStream0.adjustBeginLineColumn(5, 1371);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.1214203231153572
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringReader stringReader0 = new StringReader("D[Uwr^i6GmyDxe^'oy]");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaCharStream.hexval('a');
      javaCharStream0.getBeginColumn();
      javaCharStream1.AdjustBuffSize();
      StringReader stringReader2 = new StringReader("D[Uwr^i6GmyDxe^'oy]");
      StringReader stringReader3 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      StringReader stringReader4 = new StringReader("D[Uwr^i6GmyDxe^'oy]");
      StringReader stringReader5 = new StringReader("D[Uwr^i6GmyDxe^'oy]");
      StringReader stringReader6 = new StringReader("o76PI,_wCVKf?");
      boolean boolean0 = stringReader6.ready();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      char char0 = '^';
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.GetImage();
      javaCharStream0.available = (-3554);
      javaCharStream0.backup(0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-36);
      javaCharStream0.prevCharIsLF = false;
      byteArray0[1] = (byte) (-36);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      JavaCharStream.hexval('a');
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-36);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-36);
      byteArray0[3] = (byte) (-36);
      byteArray0[4] = (byte) (-4);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 11, 13);
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.7351264569629226
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)8;
      byteArray0[3] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[4] = (byte) (-116);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[5] = (byte)18;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (byte) (-116), (byte) (-116), (byte)0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      StringReader stringReader0 = new StringReader("[");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader1 = new StringReader("[");
      StringReader stringReader2 = new StringReader("");
      StringReader stringReader3 = new StringReader("");
      StringReader stringReader4 = new StringReader("");
      stringReader4.ready();
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      int int0 = JavaCharStream.hexval('3');
      assertEquals(3, int0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.245823618110245
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StringReader stringReader0 = new StringReader("r/Q.Ho(v\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2035), (-2035), 1371);
      JavaCharStream.hexval('5');
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-18);
      StringReader stringReader1 = new StringReader(" column ");
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.getBeginLine();
      char[] charArray0 = javaCharStream0.GetSuffix(5);
      javaCharStream0.buffer = charArray0;
      char char0 = javaCharStream0.BeginToken();
      assertEquals((-2033), javaCharStream0.getBeginColumn());
      assertEquals('Q', char0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.148365610638593
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Wv{\"R+FCK[q][m");
      stringReader0.ready();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Wv{\"R+FCK[q][m");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Wv{\"R+FCK[q][m");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2988, 2988);
      javaCharStream0.FillBuff();
      javaCharStream0.tokenBegin = 77;
      javaCharStream0.GetImage();
      stringReader0.reset();
      javaCharStream0.getBeginLine();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.getBeginLine();
      javaCharStream0.GetSuffix(0);
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(2989, int0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte)15;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[3] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[4] = (byte) (-116);
      byteArray0[5] = (byte) (-4);
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-2502), 91, (byte)8);
      char[] charArray0 = javaCharStream0.GetSuffix(89);
      assertEquals(89, charArray0.length);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      String string0 = ".";
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4054, 4054);
      javaCharStream0.GetSuffix(4090);
      stringReader0.reset();
      // Undeclared exception!
      try { 
        stringReader0.mark((-3922));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Read-ahead limit < 0
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.9960309859581935
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte)15;
      byteArray0[3] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[4] = (byte) (-116);
      byteArray0[5] = (byte) (-4);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[6] = (byte)0;
      StringReader stringReader0 = new StringReader("]8=gAAL6");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, (byte) (-4));
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.ReInit((Reader) stringReader0, 1677, 1);
      javaCharStream0.ExpandBuff(false);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 2077, 2077, 2077);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{sF2p}QR4;>/V\"=");
      StringReader stringReader0 = new StringReader("{sF2p}QR4;>/V\"=");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, 56, 70, (-2288));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.622996276085791
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<j 'gfeKgU& R$");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[0];
      javaCharStream0.prevCharIsCR = false;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1562, (-1));
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 7);
      pushbackInputStream0.markSupported();
      javaCharStream0.ReInit((InputStream) pushbackInputStream0, 7, 76);
      javaCharStream0.getBeginColumn();
      javaCharStream0.getBeginLine();
      javaCharStream0.ReInit((Reader) stringReader0);
      byteArrayInputStream0.skip(0L);
      stringReader0.close();
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (-1), (-1), 0);
      javaCharStream0.ReInit((InputStream) pushbackInputStream0);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.GetImage();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginColumn();
      javaCharStream0.AdjustBuffSize();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      String string0 = "Wv{\"R+FCK[q][m";
      StringReader stringReader0 = new StringReader("Wv{\"R+FCK[q][m");
      stringReader0.ready();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Wv{\"R+FCK[q][m");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2988, 2988);
      javaCharStream0.FillBuff();
      int[] intArray0 = new int[4];
      intArray0[0] = 2988;
      intArray0[1] = 77;
      intArray0[2] = (-1);
      intArray0[3] = 2988;
      javaCharStream0.bufline = intArray0;
      javaCharStream0.tokenBegin = 77;
      javaCharStream0.GetImage();
      stringReader0.reset();
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.4976864074866398
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<j 'gfeKgU& R$");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      StringReader stringReader1 = new StringReader("<j 'gfeKgU& R$");
      stringReader1.ready();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      StringReader stringReader2 = new StringReader("[");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader3 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      StringReader stringReader4 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      stringReader3.ready();
      char char0 = javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals('j', char0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      char char0 = '>';
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.6290407622471201
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("kY.;`g#RU4L,");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 92, 92);
      javaCharStream0.BeginToken();
      stringReader0.skip(0L);
      StringReader stringReader1 = new StringReader("");
      stringReader0.ready();
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('Y', char0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-1722), (-1722));
      javaCharStream0.ReInit((Reader) null, (-1722), 0, 8);
      javaCharStream0.ReInit((Reader) null);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",");
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("MlujnNmLz&K(UY");
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 4896, 4896);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.329661348854758
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1257, 1257, (-2508));
      int[] intArray0 = new int[1];
      intArray0[0] = 1257;
      javaCharStream0.bufline = intArray0;
      javaCharStream0.backup(1257);
      javaCharStream0.backup(1257);
      javaCharStream0.BeginToken();
      SequenceInputStream sequenceInputStream0 = null;
      try {
        sequenceInputStream0 = new SequenceInputStream((Enumeration<? extends InputStream>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=0.6001660731596457
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Y@N;|ZU#-u.An Jc");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      char[] charArray0 = new char[5];
      charArray0[0] = 'x';
      charArray0[1] = '0';
      charArray0[2] = 'l';
      charArray0[3] = 'k';
      charArray0[4] = 'W';
      stringReader0.read(charArray0, 0, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('@');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringReader stringReader0 = new StringReader("vdIbzQ~RKf}Km");
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, (-257), (-257));
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Wv{\"R+FCK[q][m");
      stringReader0.ready();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Wv{\"R+FCK[q][m");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Wv{\"R+FCK[q][m");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Wv{\"R+FCK[q][m");
      int int0 = 2988;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2988, 2988);
      javaCharStream0.ReadByte();
      StringReader stringReader1 = new StringReader("");
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[5];
      charArray0[0] = 'W';
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, 2988, 97);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      String string0 = "Wv{\"R+FCK[q][m";
      StringReader stringReader0 = new StringReader("Wv{\"R+FCK[q][m");
      stringReader0.ready();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Wv{\"R+FCK[q][m");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Wv{\"R+FCK[q][m");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Wv{\"R+FCK[q][m");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2988, 2988);
      stringReader0.ready();
      javaCharStream0.FillBuff();
      JavaCharStream javaCharStream1 = null;
      try {
        javaCharStream1 = new JavaCharStream(stringReader0, 264, 74, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=0.2568646526994761
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      JavaCharStream.hexval('a');
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/replication/scripts/projects/19_jmca");
      String string0 = "";
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-1722), (-1722));
      javaCharStream0.Done();
      javaCharStream0.ReInit((Reader) null, (-1722), 0, 8);
      javaCharStream0.ReInit((Reader) null);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-651), (-651));
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-464));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-64);
      byteArray0[1] = (byte)35;
      byteArray0[2] = (byte) (-88);
      byteArray0[3] = (byte)68;
      byteArray0[4] = (byte)98;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=2.1383330595080277
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      int int0 = 0;
      char[] charArray0 = new char[3];
      charArray0[0] = '(';
      charArray0[1] = 'V';
      charArray0[2] = '';
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, 1, 0);
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, (-2241), (-2241));
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-62);
      byteArray0[2] = (byte) (-75);
      byteArray0[3] = (byte)78;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 7, 293);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.AdjustBuffSize();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<j 'gfeKgU& R$");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.prevCharIsCR = true;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1), (-1));
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      byteArrayInputStream1.read();
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream1);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(byteArrayInputStream0, bufferedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      sequenceInputStream1.markSupported();
      DataInputStream dataInputStream1 = new DataInputStream(pushbackInputStream0);
      dataInputStream1.skipBytes(75);
      pushbackInputStream0.unread(byteArray0);
      dataInputStream1.close();
      StringReader stringReader1 = new StringReader("<j 'gfeKgU& R$");
      JavaCharStream javaCharStream1 = new JavaCharStream(bufferedInputStream0, 0, (-1), (-1));
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(enumeration1);
      javaCharStream1.ReInit((Reader) stringReader1, (-1), 75, 0);
      assertEquals((-1), javaCharStream1.bufpos);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("");
      char[] charArray0 = new char[4];
      charArray0[0] = 'M';
      charArray0[1] = '9';
      charArray0[2] = '(';
      charArray0[3] = '\"';
      stringReader1.read(charArray0);
      stringReader1.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 4096, 3539, 4096);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.822456686505235
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)8;
      byteArray0[3] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[4] = (byte) (-116);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[5] = (byte) (-4);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)15);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byteArrayInputStream0.mark(1);
      byteArrayInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-116), (byte)8, (-2265));
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.getColumn();
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.148365610638593
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=>hyxr+zM>8Goh/!d");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=>hyxr+zM>8Goh/!d");
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2988, 1622);
      javaCharStream0.GetImage();
      StringReader stringReader1 = new StringReader("Rv-$SG");
      stringReader1.reset();
      javaCharStream0.getBeginLine();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      javaCharStream1.ExpandBuff(false);
      javaCharStream0.BeginToken();
      javaCharStream1.GetImage();
      javaCharStream0.getBeginLine();
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getColumn();
      assertEquals(1623, javaCharStream0.getBeginColumn());
      assertEquals(1623, int0);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Wv{\"R+FCK[q][m");
      stringReader0.ready();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Wv{\"R+FCK[q][m");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Wv{\"R+FCK[q][m");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Wv{\"R+FCK[q][m");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2988, 2988);
      javaCharStream0.ReadByte();
      int int0 = 1;
      StringReader stringReader1 = new StringReader("");
      stringReader1.ready();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ",+f0A>8@%f!zu51L");
      StringReader stringReader0 = new StringReader(".");
      stringReader0.read();
      stringReader0.reset();
      StringReader stringReader1 = new StringReader(".");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 99, 46);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.7351264569629226
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream((byte)9);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, (byte)9, (byte)9);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.4941751382893085
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[9];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = 1;
      intArray0[4] = (-1819);
      intArray0[5] = (-1);
      intArray0[6] = (-1);
      intArray0[7] = (-1);
      intArray0[8] = 70;
      javaCharStream0.bufcolumn = intArray0;
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.4402347497045995
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StringReader stringReader0 = new StringReader("jsiKyy+#KH[{/J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      stringReader0.reset();
      stringReader0.read();
      stringReader0.mark(106);
      StringReader stringReader1 = new StringReader("");
      char[] charArray0 = new char[2];
      charArray0[0] = 'j';
      charArray0[1] = 'j';
      stringReader0.read(charArray0);
      stringReader0.reset();
      StringReader stringReader2 = new StringReader("IcoluGn ");
      StringReader stringReader3 = new StringReader("jsiKyy+#KH[{/J");
      boolean boolean0 = stringReader0.ready();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 144
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 69, (-531), (-3192));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      File file0 = MockFile.createTempFile("i@pR)#&fCdY%:", "P:]9?mB:_9[6G0))");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 0, 1, 1);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }
}
