/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 12:46:37 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.967772556711847
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.equals();
      xPathLexer0.or();
      xPathLexer0.consume((-3491));
      xPathLexer0.leftBracket();
      xPathLexer0.endPosition();
      xPathLexer0.endPosition();
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.8800177912807112
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      String string0 = "d.at9:b-";
      XPathLexer xPathLexer1 = new XPathLexer("d.at9:b-");
      xPathLexer1.operatorName();
      xPathLexer1.div();
      xPathLexer0.minus();
      xPathLexer1.nextToken();
      xPathLexer1.nextToken();
      xPathLexer1.nextToken();
      xPathLexer1.minus();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.div();
      String string1 = null;
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.2203957566564636
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer0.minus();
      xPathLexer0.and();
      xPathLexer0.slashes();
      xPathLexer0.mod();
      xPathLexer0.consume((-180));
      xPathLexer0.rightParen();
      xPathLexer0.star();
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.8018613244276511
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+q[v`xg");
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (5) (+)", string0);
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("q[", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("v", token2.getTokenText());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.slashes();
      assertEquals("`", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("x", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("g", token5.getTokenText());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4268350377499148
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+q[v`xg");
      Token token0 = xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("q", token1.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (4) (+)", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer0.minus();
      assertEquals("[", token2.getTokenText());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("v`", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("u=G^.3a2");
      xPathLexer2.equals();
      Token token4 = xPathLexer2.nextToken();
      assertEquals(21, token4.getTokenType());
      assertEquals("=", token4.getTokenText());
      
      xPathLexer2.star();
      xPathLexer0.comma();
      XPathLexer xPathLexer3 = new XPathLexer("+q[v`xg");
      Token token5 = xPathLexer1.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer0.comma();
      assertEquals("g", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("I");
      XPathLexer xPathLexer5 = new XPathLexer("?Pv");
      Token token7 = xPathLexer4.not();
      assertEquals(23, token7.getTokenType());
      assertEquals("I", token7.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer("?Pv");
      Token token8 = xPathLexer6.at();
      assertEquals(16, token8.getTokenType());
      assertEquals("?", token8.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.consume(25);
      Token token9 = xPathLexer7.minus();
      assertEquals(6, token9.getTokenType());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.969204879461907
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume((-2690));
      xPathLexer0.not();
      xPathLexer0.consume((-2080));
      xPathLexer0.rightParen();
      xPathLexer0.rightParen();
      xPathLexer0.plus();
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4836982152915146
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+q[v`xg");
      Token token0 = xPathLexer0.not();
      assertEquals("+", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer2.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer4.minus();
      assertEquals("c", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer1.star();
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals("q", token4.getTokenText());
      
      xPathLexer2.slashes();
      XPathLexer xPathLexer5 = new XPathLexer("r/FUVQs");
      Token token5 = xPathLexer2.not();
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer5.slashes();
      assertEquals("r/", token6.getTokenText());
      assertEquals(12, token6.getTokenType());
      
      Token token7 = xPathLexer3.slashes();
      assertEquals(11, token7.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("?]");
      Token token8 = xPathLexer2.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer5.whitespace();
      assertEquals((-2), token9.getTokenType());
      assertEquals("", token9.getTokenText());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.091750119846483
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+q[v`xg");
      Token token0 = xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("q", token1.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (4) (+)", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer0.minus();
      assertEquals("[", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("v`", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("u=G^.3a2");
      Token token4 = xPathLexer2.nextToken();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer2.star();
      assertEquals(20, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer2.nextToken();
      assertEquals("G^.3a2", token6.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.doubleColon();
      xPathLexer3.rightBracket();
      Token token7 = xPathLexer4.number();
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer1.leftParen();
      assertEquals(1, token8.getTokenType());
      
      Token token9 = xPathLexer0.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token10 = xPathLexer5.at();
      assertEquals(16, token10.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.8550964054089625
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=\"U_vWz");
      xPathLexer0.consume((-3261));
      xPathLexer0.not();
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.613959091736105
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+F`x");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("+", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("+F`x");
      Token token1 = xPathLexer1.equals();
      assertEquals("+", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer2.colon();
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer2.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer1.equals();
      assertEquals("F", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.setXPath("I*oKX");
      Token token5 = xPathLexer3.comma();
      assertEquals(32, token5.getTokenType());
      
      xPathLexer3.setXPath("/No)|\"n^!dofwfh_q");
      xPathLexer3.mod();
      xPathLexer4.number();
      xPathLexer1.slashes();
      xPathLexer1.or();
      Token token6 = xPathLexer2.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      Token token7 = xPathLexer3.nextToken();
      assertEquals("/", token7.getTokenText());
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer4.minus();
      assertEquals("I", token8.getTokenText());
      assertEquals(6, token8.getTokenType());
      
      Token token9 = xPathLexer4.number();
      assertEquals(30, token9.getTokenType());
      
      Token token10 = xPathLexer2.leftBracket();
      assertEquals(3, token10.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.8064460679349292
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@]h`");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      XPathLexer xPathLexer2 = new XPathLexer("]OHV>TE_T!3nPpcw");
      xPathLexer2.div();
      XPathLexer xPathLexer3 = new XPathLexer("-c");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.nextToken();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.at();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer3.minus();
      xPathLexer6.star();
      xPathLexer8.comma();
      xPathLexer3.star();
      xPathLexer3.comma();
      XPathLexer xPathLexer9 = new XPathLexer("");
      XPathLexer xPathLexer10 = new XPathLexer("");
      xPathLexer10.not();
      xPathLexer6.slashes();
      Token token0 = xPathLexer6.or();
      assertNull(token0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.637291092221128
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      String string0 = "com.werken.saxpath.Token";
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.star();
      xPathLexer0.doubleColon();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.not();
      xPathLexer1.star();
      xPathLexer1.dollar();
      xPathLexer0.nextToken();
      xPathLexer1.dollar();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.consume((-292));
      // Undeclared exception!
      try { 
        xPathLexer2.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.9488773674189335
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.comma();
      xPathLexer0.consume();
      xPathLexer0.equals();
      xPathLexer0.or();
      xPathLexer0.consume((-3338));
      xPathLexer0.rightParen();
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.0358251254650463
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("? hR+c%R$>kY!I~%_G");
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("?", token1.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (-1) (? hR+c%R$>kY!I~%_G)", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.minus();
      assertEquals(6, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer("YT1tz:W[q0Bmzu%~A");
      Token token3 = xPathLexer3.nextToken();
      assertEquals(15, token3.getTokenType());
      
      xPathLexer1.or();
      Token token4 = xPathLexer3.slashes();
      assertEquals(":", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.or();
      Token token5 = xPathLexer1.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer3.nextToken();
      assertEquals("W[q0Bmzu%~A", token6.getTokenText());
      
      Token token7 = xPathLexer3.number();
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer1.leftBracket();
      assertEquals(3, token8.getTokenType());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.407753338487965
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("? hR+c%R$>kY!I~%_G");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      String string0 = token0.toString();
      assertEquals("[ (-1) (? hR+c%R$>kY!I~%_G)", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer("[ (-1) (? hR+c%R$>kY!I~%_G)");
      xPathLexer1.notEquals();
      xPathLexer1.div();
      XPathLexer xPathLexer3 = new XPathLexer("|]G");
      Token token1 = xPathLexer3.nextToken();
      assertEquals("|", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer1.comma();
      assertEquals(32, token2.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.identifier();
      xPathLexer1.or();
      xPathLexer1.identifier();
      XPathLexer xPathLexer5 = new XPathLexer("n");
      Token token3 = xPathLexer4.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer3.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("]G", token4.getTokenText());
      
      Token token5 = xPathLexer1.leftParen();
      assertEquals(1, token5.getTokenType());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.6101211185780757
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1#icnt+?");
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.minus();
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.doubleColon();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.equals();
      xPathLexer1.or();
      xPathLexer2.pipe();
      xPathLexer1.slashes();
      Token token1 = xPathLexer2.getPreviousToken();
      assertNull(token1);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.9948998233487245
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+q[v`xg");
      xPathLexer0.slashes();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("[", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("2Z7R@#U[");
      Token token2 = xPathLexer1.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("2", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("2Z7R@#U[");
      xPathLexer1.mod();
      XPathLexer xPathLexer3 = new XPathLexer("+q[v`xg");
      Token token3 = xPathLexer3.notEquals();
      assertEquals("+q", token3.getTokenText());
      
      xPathLexer0.div();
      xPathLexer2.div();
      Token token4 = xPathLexer1.nextToken();
      assertEquals("Z7R", token4.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token5 = xPathLexer5.notEquals();
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      assertEquals("`", token6.getTokenText());
      
      xPathLexer3.slashes();
      Token token7 = xPathLexer1.slashes();
      assertEquals(11, token7.getTokenType());
      assertEquals("@", token7.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token8 = xPathLexer6.at();
      assertEquals(16, token8.getTokenType());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.8635056581146585
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("? hR+c%R$>kY!I~%_G");
      xPathLexer0.setXPath("? hR+c%R$>kY!I~%_G");
      xPathLexer0.not();
      xPathLexer0.setXPath("V9NSI/~9b;#'R");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.number();
      XPathLexer xPathLexer2 = new XPathLexer("V9NSI/~9b;#'R");
      xPathLexer2.slashes();
      xPathLexer0.notEquals();
      xPathLexer0.div();
      xPathLexer0.leftBracket();
      xPathLexer2.nextToken();
      xPathLexer0.setXPath("3QUh7#");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.or();
      xPathLexer0.operatorName();
      xPathLexer3.at();
      xPathLexer2.dollar();
      xPathLexer1.at();
      xPathLexer3.dots();
      xPathLexer3.identifier();
      xPathLexer1.rightBracket();
      xPathLexer1.literal();
      xPathLexer2.colon();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.474113453698274
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4+LbQ5e.Q6");
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.pipe();
      XPathLexer xPathLexer3 = new XPathLexer("%cah:Sex\"~3");
      xPathLexer0.div();
      xPathLexer2.plus();
      XPathLexer xPathLexer4 = new XPathLexer("%cah:Sex\"~3");
      xPathLexer3.nextToken();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.nextToken();
      xPathLexer6.at();
      xPathLexer1.minus();
      xPathLexer0.star();
      xPathLexer1.comma();
      XPathLexer xPathLexer7 = new XPathLexer("%cah:Sex\"~3");
      XPathLexer xPathLexer8 = new XPathLexer("K`a.:8CJ^");
      xPathLexer8.not();
      xPathLexer4.slashes();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.6491088608595614
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("s!'2J#&TjD1a");
      xPathLexer1.leftBracket();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.at();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.star();
      xPathLexer0.comma();
      XPathLexer xPathLexer5 = new XPathLexer("SF8qy`/L9[$al's@Dbf");
      xPathLexer1.not();
      xPathLexer3.not();
      xPathLexer3.slashes();
      Token token0 = xPathLexer5.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.702064528887302
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7 .I&9:b-");
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      XPathLexer xPathLexer1 = new XPathLexer();
      String string0 = null;
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.9595854820352487
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.colon();
      assertEquals(")", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(1, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
      
      xPathLexer0.rightBracket();
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("WVm,{j");
      xPathLexer1.and();
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer0.equals();
      assertEquals(21, token6.getTokenType());
      
      Token token7 = xPathLexer1.dots();
      assertEquals(13, token7.getTokenType());
      assertEquals("W", token7.getTokenText());
      
      Token token8 = xPathLexer0.rightBracket();
      assertEquals(4, token8.getTokenType());
      
      xPathLexer0.div();
      Token token9 = xPathLexer1.nextToken();
      assertEquals(15, token9.getTokenType());
      assertEquals("Vm", token9.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.slashes();
      Token token10 = xPathLexer0.slashes();
      assertEquals(11, token10.getTokenType());
      
      Token token11 = xPathLexer0.at();
      assertEquals(16, token11.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.0795775542124675
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("? hR+c%R$>kY!I~%_G");
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer("Bw~By_Z]");
      xPathLexer0.number();
      XPathLexer xPathLexer2 = new XPathLexer("4ZUEi2Z\"");
      xPathLexer0.and();
      xPathLexer1.number();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("Yd4&06*=");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.or();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.setPreviousToken((Token) null);
      xPathLexer0.operatorName();
      xPathLexer3.consume((-2938));
      xPathLexer0.at();
      xPathLexer1.dollar();
      xPathLexer2.at();
      // Undeclared exception!
      try { 
        xPathLexer3.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.9214443410222075
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("13#@|K4S{e0ft8N");
      XPathLexer xPathLexer2 = new XPathLexer("3QU7#");
      xPathLexer1.mod();
      XPathLexer xPathLexer3 = new XPathLexer(".9Vqp-J?bJJp");
      xPathLexer0.notEquals();
      xPathLexer1.div();
      XPathLexer xPathLexer4 = new XPathLexer("BKgPm6dc58Os");
      Token token1 = xPathLexer4.nextToken();
      assertEquals("BKgPm6dc58Os", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals("13", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      
      xPathLexer4.or();
      Token token4 = xPathLexer3.identifier();
      assertEquals(".9Vqp-J", token4.getTokenText());
      
      Token token5 = xPathLexer2.dots();
      assertEquals(13, token5.getTokenType());
      assertEquals("3", token5.getTokenText());
      
      xPathLexer3.identifier();
      XPathLexer xPathLexer5 = new XPathLexer(".9Vqp-J?bJJp");
      Token token6 = xPathLexer2.identifierOrOperatorName();
      assertEquals("QU7", token6.getTokenText());
      
      Token token7 = xPathLexer5.notEquals();
      assertEquals(22, token7.getTokenType());
      assertEquals(".9", token7.getTokenText());
      
      Token token8 = xPathLexer2.leftParen();
      assertEquals("#", token8.getTokenText());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.658991218109875
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+q[v`xg");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("+", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("H]");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer2.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("H", token3.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.div();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      String string0 = token1.toString();
      assertEquals("[ (5) (q)", string0);
      
      xPathLexer3.pipe();
      Token token4 = xPathLexer4.pipe();
      assertEquals("c", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      xPathLexer5.mod();
      xPathLexer1.or();
      Token token5 = xPathLexer6.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer4.comma();
      assertEquals(32, token6.getTokenType());
      assertEquals("o", token6.getTokenText());
      
      Token token7 = xPathLexer3.not();
      assertEquals(23, token7.getTokenType());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.914722718453534
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer1 = new XPathLexer("$D&GxP ");
      xPathLexer1.setXPath("com.werken.saxpath.Token");
      XPathLexer xPathLexer2 = new XPathLexer(".8f;iDYD[?K");
      xPathLexer0.and();
      Token token0 = xPathLexer2.slashes();
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer1.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("c", token1.getTokenText());
      
      Token token2 = xPathLexer1.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("m.werken.saxpath.Token", token3.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer3.comma();
      assertEquals(32, token4.getTokenType());
      
      xPathLexer1.leftParen();
      xPathLexer0.setXPath("<&uZ~7[S");
      xPathLexer1.mod();
      Token token5 = xPathLexer2.number();
      assertEquals(30, token5.getTokenType());
      assertEquals("8", token5.getTokenText());
      
      xPathLexer3.leftParen();
      Token token6 = xPathLexer1.slashes();
      assertEquals(11, token6.getTokenType());
      
      xPathLexer2.or();
      Token token7 = xPathLexer3.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      xPathLexer1.nextToken();
      Token token8 = xPathLexer3.minus();
      assertEquals(6, token8.getTokenType());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.3361346232620783
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("=9-9|PG<VB");
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      Token token0 = xPathLexer1.colon();
      assertEquals(")", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals("9", token1.getTokenText());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.div();
      Token token3 = xPathLexer1.comma();
      assertEquals(" ", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
      
      xPathLexer0.setXPath("+q[v`xg");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.leftBracket();
      xPathLexer1.or();
      xPathLexer1.operatorName();
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("+", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("EzO)4Px6<R");
      Token token5 = xPathLexer0.identifier();
      assertEquals(15, token5.getTokenType());
      assertEquals("q", token5.getTokenText());
      
      Token token6 = xPathLexer2.rightParen();
      assertEquals(2, token6.getTokenType());
      
      Token token7 = xPathLexer1.pipe();
      assertEquals("(", token7.getTokenText());
      assertEquals(17, token7.getTokenType());
      
      xPathLexer2.mod();
      Token token8 = xPathLexer1.minus();
      assertEquals(6, token8.getTokenType());
      
      Token token9 = xPathLexer0.star();
      assertEquals("[", token9.getTokenText());
      
      Token token10 = xPathLexer0.dots();
      assertEquals(13, token10.getTokenType());
      assertEquals("v", token10.getTokenText());
      
      Token token11 = xPathLexer0.literal();
      assertNull(token11);
      
      Token token12 = xPathLexer3.dollar();
      assertEquals("E", token12.getTokenText());
      assertEquals(26, token12.getTokenType());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.6364607632621908
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+q[v`xg");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("+", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer0.minus();
      assertEquals("q", token1.getTokenText());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("[v", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("u=G^.3a2");
      Token token3 = xPathLexer2.nextToken();
      assertEquals("u", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer2.star();
      assertEquals("=", token4.getTokenText());
      
      xPathLexer0.comma();
      XPathLexer xPathLexer3 = new XPathLexer("+q[v`xg");
      Token token5 = xPathLexer1.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer0.comma();
      assertEquals("x", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      XPathLexer xPathLexer5 = new XPathLexer("?Pv");
      Token token7 = xPathLexer4.not();
      assertEquals(23, token7.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token8 = xPathLexer6.at();
      assertEquals(16, token8.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token9 = xPathLexer7.minus();
      assertEquals(6, token9.getTokenType());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5004447240021612
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7oyq\"k#NSj^]");
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("7oyq\"k#NSj^]");
      xPathLexer0.and();
      xPathLexer1.number();
      XPathLexer xPathLexer2 = new XPathLexer("<Cu3s]SoI`j");
      XPathLexer xPathLexer3 = new XPathLexer("04,VuM%^o~V");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("7", token0.getTokenText());
      
      Token token1 = xPathLexer2.relationalOperator();
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
      
      Token token2 = xPathLexer3.nextToken();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer2.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("Cu", token3.getTokenText());
      
      Token token4 = xPathLexer1.rightBracket();
      assertEquals(4, token4.getTokenType());
      assertEquals("o", token4.getTokenText());
      
      Token token5 = xPathLexer0.number();
      assertEquals("", token5.getTokenText());
      
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      assertEquals("y", token6.getTokenText());
      
      Token token7 = xPathLexer0.notEquals();
      assertEquals("oy", token7.getTokenText());
      assertEquals(22, token7.getTokenType());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.7390645145985084
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("d.at9:b-");
      xPathLexer1.div();
      xPathLexer0.minus();
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer1.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("b", token2.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer1.div();
      Token token3 = xPathLexer1.nextToken();
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.minus();
      Token token6 = xPathLexer2.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer1.comma();
      assertEquals(32, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("d.at9:b-");
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token8 = xPathLexer6.not();
      assertEquals(23, token8.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.relationalOperator();
      Token token9 = xPathLexer4.plus();
      assertEquals(5, token9.getTokenType());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.921518333031054
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@]h`");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.colon();
      xPathLexer3.star();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.div();
      xPathLexer3.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer3.notEquals();
      xPathLexer1.pipe();
      xPathLexer2.at();
      xPathLexer5.dots();
      xPathLexer1.rightParen();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.1186279501892296
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("? hR+c%R$>kY!I~%_G");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("?", token0.getTokenText());
      
      xPathLexer0.setXPath("? hR+c%R$>kY!I~%_G");
      XPathLexer xPathLexer1 = new XPathLexer("T#KxrbD9fO");
      xPathLexer1.and();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer1.equals();
      Token token2 = xPathLexer0.at();
      assertEquals("?", token2.getTokenText());
      
      xPathLexer1.equals();
      XPathLexer xPathLexer2 = new XPathLexer("? hR+c%R$>kY!I~%_G");
      xPathLexer2.literal();
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals(" ", token3.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("TOs-Z@#r/*r8");
      Token token4 = xPathLexer3.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      xPathLexer2.colon();
      Token token5 = xPathLexer1.rightParen();
      assertEquals("K", token5.getTokenText());
      
      Token token6 = xPathLexer2.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer3.nextToken();
      assertEquals("Os-Z", token7.getTokenText());
      
      xPathLexer3.mod();
      xPathLexer1.or();
      Token token8 = xPathLexer3.identifier();
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer1.dots();
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer2.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer2.at();
      assertEquals(16, token11.getTokenType());
      
      Token token12 = xPathLexer0.star();
      assertEquals("h", token12.getTokenText());
      
      Token token13 = xPathLexer1.notEquals();
      assertEquals("rb", token13.getTokenText());
      assertEquals(22, token13.getTokenType());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.8222548571892447
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("nf/J\"\"+sLEq");
      xPathLexer0.and();
      xPathLexer0.and();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("n", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("f", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("J", token3.getTokenText());
      
      Token token4 = xPathLexer0.star();
      assertEquals("\"", token4.getTokenText());
      
      xPathLexer0.literal();
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      
      xPathLexer0.operatorName();
      Token token7 = xPathLexer0.literal();
      assertNull(token7);
      
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
      
      char char0 = xPathLexer0.LA(6218);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.and();
      Token token9 = xPathLexer0.star();
      assertEquals(20, token9.getTokenType());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.958455957243537
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("? hR+c%R$>kY!I~%_G");
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      Token token1 = xPathLexer0.at();
      assertEquals("?", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      token0.toString();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(" ", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("E#2Q^Slv");
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("E", token3.getTokenText());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("[ (-1) (? hR+c%R$>kY!I~%_G)");
      Token token4 = xPathLexer2.nextToken();
      assertEquals("[", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      assertEquals("h", token5.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      String string0 = token0.toString();
      assertEquals("[ (-1) (? hR+c%R$>kY!I~%_G)", string0);
      
      xPathLexer4.pipe();
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      assertEquals("R", token6.getTokenText());
      
      xPathLexer0.mod();
      Token token7 = xPathLexer4.minus();
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer4.star();
      assertEquals(20, token8.getTokenType());
      
      Token token9 = xPathLexer2.comma();
      assertEquals(" ", token9.getTokenText());
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer4.not();
      assertEquals(23, token10.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.2274695605451464
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("7oyq\"k#NSj^]");
      xPathLexer1.and();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.star();
      Token token2 = xPathLexer1.nextToken();
      assertEquals(30, token2.getTokenType());
      
      xPathLexer1.setXPath("7oyq\"k#NSj^]");
      xPathLexer0.or();
      Token token3 = xPathLexer1.rightBracket();
      assertEquals("7", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      xPathLexer0.identifier();
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      xPathLexer0.setXPath("$zpO_.M4~>>");
      Token token5 = xPathLexer0.nextToken();
      assertEquals(26, token5.getTokenType());
      assertEquals("$", token5.getTokenText());
      
      xPathLexer1.mod();
      xPathLexer0.or();
      Token token6 = xPathLexer0.identifier();
      assertEquals(15, token6.getTokenType());
      assertEquals("zpO_.M4", token6.getTokenText());
      
      xPathLexer1.nextToken();
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      assertEquals("~", token7.getTokenText());
      
      Token token8 = xPathLexer1.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      Token token9 = xPathLexer1.notEquals();
      assertEquals("yq", token9.getTokenText());
      assertEquals(22, token9.getTokenType());
      
      int int0 = xPathLexer1.endPosition();
      assertEquals(12, int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.2911860753035984
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+q[v`xg");
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("s!'2J#&TjD1a");
      xPathLexer2.leftBracket();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.at();
      xPathLexer0.star();
      xPathLexer1.comma();
      XPathLexer xPathLexer4 = new XPathLexer("SF8qy`/L9[$al's@Dbf");
      xPathLexer1.not();
      xPathLexer0.not();
      xPathLexer1.slashes();
      Token token0 = xPathLexer4.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5788341422325676
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4+LbQ5e.Q6");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("4+", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("L", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.operatorName();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("YT1tz:W[q0Bmzu%~A");
      Token token3 = xPathLexer0.nextToken();
      assertEquals("5", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      xPathLexer2.or();
      XPathLexer xPathLexer3 = new XPathLexer("YT1tz:W[q0Bmzu%~A");
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      assertEquals("e", token4.getTokenText());
      
      Token token5 = xPathLexer2.pipe();
      assertEquals(17, token5.getTokenType());
      assertEquals("Y", token5.getTokenText());
      
      Token token6 = xPathLexer3.slashes();
      assertEquals("Y", token6.getTokenText());
      assertEquals(11, token6.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.9033571144934198
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3.v9T8tWX&2NS0\"'d@c");
      xPathLexer0.slashes();
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer1.number();
      XPathLexer xPathLexer2 = new XPathLexer("wrU");
      xPathLexer2.mod();
      XPathLexer xPathLexer3 = new XPathLexer("wrU");
      xPathLexer3.notEquals();
      xPathLexer0.div();
      XPathLexer xPathLexer4 = new XPathLexer("3.v9T8tWX&2NS0\"'d@c");
      xPathLexer1.nextToken();
      xPathLexer1.nextToken();
      xPathLexer4.comma();
      xPathLexer1.or();
      xPathLexer0.identifier();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token0 = xPathLexer5.dots();
      xPathLexer1.identifier();
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer6.identifierOrOperatorName();
      xPathLexer5.notEquals();
      Token token1 = xPathLexer6.leftParen();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.7178711308586063
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("? hR+c%R$>kY!I~%_G");
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.at();
      token0.toString();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.minus();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.operatorName();
      xPathLexer1.doubleColon();
      XPathLexer xPathLexer3 = new XPathLexer("YT1tz:W[q0Bmzu%E~A");
      xPathLexer3.nextToken();
      xPathLexer2.equals();
      xPathLexer2.pipe();
      xPathLexer2.slashes();
      Token token1 = xPathLexer1.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.7074523134071398
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+Qq[v`xg");
      xPathLexer0.not();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.at();
      xPathLexer0.equals();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.equals();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.not();
      xPathLexer1.star();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer0.dollar();
      xPathLexer1.nextToken();
      xPathLexer3.dollar();
      XPathLexer xPathLexer6 = new XPathLexer("WI");
      xPathLexer0.or();
      xPathLexer6.pipe();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.doubleColon();
      xPathLexer3.slashes();
      Token token0 = xPathLexer2.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.650210124579358
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+q[v`xg");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("+", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals("q", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals("[", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("x.HTd%ke? t>>c?<");
      xPathLexer1.and();
      Token token3 = xPathLexer0.number();
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.dots();
      assertEquals("v", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("<Cu3s]SoI`j");
      XPathLexer xPathLexer3 = new XPathLexer("<Cu3s]SoI`j");
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer2.nextToken();
      assertEquals("<", token5.getTokenText());
      assertEquals(7, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.doubleColon();
      Token token6 = xPathLexer4.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      Token token7 = xPathLexer1.number();
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer0.leftParen();
      assertEquals("`", token8.getTokenText());
      assertEquals(1, token8.getTokenType());
      
      Token token9 = xPathLexer0.doubleColon();
      assertEquals(19, token9.getTokenType());
      assertEquals("xg", token9.getTokenText());
      
      Token token10 = xPathLexer2.at();
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer2.dollar();
      assertEquals("u", token11.getTokenText());
      assertEquals(26, token11.getTokenType());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5475016948933056
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fP|9d}arc");
      Token token0 = xPathLexer0.not();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("P", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (23) (f)", string0);
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("9d", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("}arc", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (23) (f)");
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer2.pipe();
      assertEquals(17, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("IBn");
      Token token6 = xPathLexer3.slashes();
      assertEquals(11, token6.getTokenType());
      assertEquals("I", token6.getTokenText());
      
      Token token7 = xPathLexer3.rightParen();
      assertEquals(2, token7.getTokenType());
      assertEquals("B", token7.getTokenText());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.0202217637172555
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("c", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer1.colon();
      assertEquals(18, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      Token token4 = xPathLexer1.pipe();
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer1.number();
      assertEquals(30, token5.getTokenType());
      
      xPathLexer2.div();
      XPathLexer xPathLexer3 = new XPathLexer("NX");
      Token token6 = xPathLexer1.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      Token token7 = xPathLexer2.plus();
      assertEquals("c", token7.getTokenText());
      assertEquals(5, token7.getTokenType());
      
      Token token8 = xPathLexer2.doubleColon();
      assertEquals("om", token8.getTokenText());
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer3.nextToken();
      assertEquals(15, token9.getTokenType());
      assertEquals("NX", token9.getTokenText());
      
      Token token10 = xPathLexer3.dollar();
      assertEquals(26, token10.getTokenType());
      
      xPathLexer2.mod();
      xPathLexer1.or();
      xPathLexer3.identifier();
      XPathLexer xPathLexer4 = new XPathLexer("i4~1{k1a<#Ik7+TNQ[");
      Token token11 = xPathLexer4.dots();
      assertEquals("i", token11.getTokenText());
      assertEquals(13, token11.getTokenType());
      
      Token token12 = xPathLexer3.notEquals();
      assertEquals(22, token12.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.0012126919060895
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+q[v`xg");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      assertEquals("q", token1.getTokenText());
      
      Token token2 = xPathLexer0.colon();
      assertEquals("[", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("x.HTd%ke? t>>c?<");
      xPathLexer1.and();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals("v", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("<Cu3s]SoI`j");
      XPathLexer xPathLexer3 = new XPathLexer("<Cu3s]SoI`j");
      Token token5 = xPathLexer2.at();
      assertEquals("<", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer2.nextToken();
      assertEquals("Cu3s", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.doubleColon();
      Token token7 = xPathLexer4.star();
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      
      xPathLexer4.div();
      XPathLexer xPathLexer5 = new XPathLexer("HoCLF]6A}");
      Token token9 = xPathLexer4.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer0.slashes();
      assertEquals(11, token10.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.2034162243007795
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("7oyq\"k#NSj^]");
      xPathLexer1.and();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.slashes();
      XPathLexer xPathLexer2 = new XPathLexer("7oyq\"k#NSj^]");
      Token token1 = xPathLexer2.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("7", token1.getTokenText());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("7", token2.getTokenText());
      
      xPathLexer0.minus();
      xPathLexer0.div();
      Token token3 = xPathLexer2.nextToken();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer1.at();
      assertEquals("o", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token6 = xPathLexer1.nextToken();
      assertEquals("yq\"k#NSj^]", token6.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token7 = xPathLexer5.minus();
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
      
      Token token9 = xPathLexer2.comma();
      assertEquals(32, token9.getTokenType());
      assertEquals("\"", token9.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer("7oyq\"k#NSj^]");
      Token token10 = xPathLexer3.not();
      assertEquals(23, token10.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer7.relationalOperator();
      Token token11 = xPathLexer0.plus();
      assertEquals(5, token11.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.4279847367770697
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.rightParen();
      assertEquals(2, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werkWn.saYpath.Tokn");
      xPathLexer2.setXPath("{0aUn`eDzy*H#(xu");
      xPathLexer1.mod();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      xPathLexer1.setXPath("{0aUn`eDzy*H#(xu");
      xPathLexer1.mod();
      Token token3 = xPathLexer1.rightBracket();
      assertEquals("{", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer2.nextToken();
      assertEquals("{0aUn`eDzy*H#(xu", token4.getTokenText());
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer1.identifier();
      assertEquals("0aUn", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.871229092142416
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4+LbQ5e.Q6");
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer3 = new XPathLexer("4+LbQ5e.Q6");
      xPathLexer3.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.minus();
      xPathLexer4.star();
      xPathLexer3.comma();
      XPathLexer xPathLexer5 = new XPathLexer("P3uLF");
      xPathLexer0.not();
      XPathLexer xPathLexer6 = new XPathLexer(")");
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.7261497474641994
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7oyq\"k#NSj^]");
      xPathLexer0.and();
      xPathLexer0.doubleColon();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("~>x6@e7>`-GCv");
      xPathLexer1.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer1.minus();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.div();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.at();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer3.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.minus();
      xPathLexer2.star();
      xPathLexer0.comma();
      XPathLexer xPathLexer7 = new XPathLexer("7oyq\"k#NSj^]");
      xPathLexer5.not();
      XPathLexer xPathLexer8 = new XPathLexer("~>x6@e7>`-GCv");
      XPathLexer xPathLexer9 = new XPathLexer();
      xPathLexer9.relationalOperator();
      XPathLexer xPathLexer10 = null;
      try {
        xPathLexer10 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.8985804338321202
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.star();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.934033227555508
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+qn[v`x");
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      token0.toString();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.at();
      xPathLexer0.equals();
      XPathLexer xPathLexer3 = new XPathLexer("6RaPta(:!:/^I\"");
      xPathLexer3.and();
      xPathLexer0.rightParen();
      xPathLexer3.pipe();
      xPathLexer1.pipe();
      xPathLexer3.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer2.nextToken();
      xPathLexer5.minus();
      xPathLexer3.star();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.comma();
      XPathLexer xPathLexer7 = new XPathLexer("@NP}");
      xPathLexer7.not();
      XPathLexer xPathLexer8 = new XPathLexer(".at{N?");
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.0836143568918413
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("3QU7#");
      XPathLexer xPathLexer2 = new XPathLexer("3QU7#");
      xPathLexer1.mod();
      XPathLexer xPathLexer3 = new XPathLexer("XuEUsL!");
      Token token3 = xPathLexer3.notEquals();
      assertEquals("Xu", token3.getTokenText());
      
      xPathLexer2.div();
      XPathLexer xPathLexer4 = new XPathLexer("3QU7#");
      Token token4 = xPathLexer1.nextToken();
      assertEquals("3", token4.getTokenText());
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals("QU7#", token5.getTokenText());
      
      Token token6 = xPathLexer1.comma();
      assertEquals(32, token6.getTokenType());
      assertEquals("Q", token6.getTokenText());
      
      xPathLexer0.or();
      Token token7 = xPathLexer1.notEquals();
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer2.pipe();
      assertEquals("3", token8.getTokenText());
      assertEquals(17, token8.getTokenType());
      
      Token token9 = xPathLexer3.slashes();
      assertEquals("E", token9.getTokenText());
      
      Token token10 = xPathLexer0.slashes();
      assertEquals(11, token10.getTokenType());
      
      Token token11 = xPathLexer1.at();
      assertEquals("#", token11.getTokenText());
      assertEquals(16, token11.getTokenType());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.863115490871921
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("Sxko@XA");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.colon();
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer0.and();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer1.number();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.div();
      Token token4 = xPathLexer1.nextToken();
      assertEquals("Sxko", token4.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token5 = xPathLexer5.colon();
      assertEquals(18, token5.getTokenType());
      
      xPathLexer2.mod();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer2.or();
      Token token6 = xPathLexer1.identifier();
      assertEquals(15, token6.getTokenType());
      assertEquals("", token6.getTokenText());
      
      Token token7 = xPathLexer6.rightBracket();
      assertEquals(4, token7.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.997310434909725
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("? hR+c%R$>kY!I~%_G");
      xPathLexer0.setXPath("? hR+c%R$>kY!I~%_G");
      XPathLexer xPathLexer1 = new XPathLexer("T#KxrbD9fO");
      xPathLexer1.and();
      xPathLexer0.number();
      Token token0 = xPathLexer1.equals();
      assertEquals("T", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("?", token1.getTokenText());
      
      xPathLexer1.equals();
      XPathLexer xPathLexer2 = new XPathLexer("? hR+c%R$>kY!I~%_G");
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      xPathLexer2.and();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("h", token3.getTokenText());
      
      Token token4 = xPathLexer2.rightParen();
      assertEquals(2, token4.getTokenType());
      
      Token token5 = xPathLexer2.pipe();
      assertEquals(17, token5.getTokenType());
      assertEquals(" ", token5.getTokenText());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("KxrbD9fO", token6.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token7 = xPathLexer3.number();
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer3.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token9 = xPathLexer0.minus();
      assertEquals(6, token9.getTokenType());
      
      Token token10 = xPathLexer1.star();
      assertEquals(20, token10.getTokenType());
      
      Token token11 = xPathLexer4.comma();
      assertEquals(32, token11.getTokenType());
      
      Token token12 = xPathLexer0.not();
      assertEquals("+", token12.getTokenText());
      assertEquals(23, token12.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("T#KxrbD9fO");
      Token token13 = xPathLexer0.dots();
      assertEquals(13, token13.getTokenType());
      
      xPathLexer0.identifier();
      Token token14 = xPathLexer1.notEquals();
      assertEquals(22, token14.getTokenType());
      
      Token token15 = xPathLexer3.dollar();
      assertEquals(26, token15.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.9386841881025607
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("7oyq\"k#NSj^]");
      xPathLexer1.and();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("7oyq\"k#NSj^]");
      Token token2 = xPathLexer2.rightBracket();
      assertEquals("7", token2.getTokenText());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.minus();
      xPathLexer0.div();
      Token token4 = xPathLexer2.nextToken();
      assertEquals("oyq", token4.getTokenText());
      
      Token token5 = xPathLexer2.nextToken();
      assertEquals("", token5.getTokenText());
      assertEquals((-1), token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.mod();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.or();
      Token token6 = xPathLexer4.identifier();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer2.comma();
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer3.rightBracket();
      assertEquals(4, token8.getTokenType());
      
      xPathLexer2.nextToken();
      Token token9 = xPathLexer1.minus();
      assertEquals(6, token9.getTokenType());
      assertEquals("o", token9.getTokenText());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.8082156536862353
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+Qq[v`xg");
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("s!'2J#&TjD1a");
      xPathLexer2.leftBracket();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.div();
      xPathLexer2.leftBracket();
      xPathLexer0.plus();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer2.nextToken();
      xPathLexer4.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer5.minus();
      xPathLexer1.star();
      xPathLexer5.comma();
      XPathLexer xPathLexer7 = new XPathLexer("");
      xPathLexer3.not();
      XPathLexer xPathLexer8 = new XPathLexer("");
      xPathLexer8.slashes();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.789166963523272
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("DC");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.number();
      xPathLexer1.notEquals();
      xPathLexer1.equals();
      xPathLexer0.nextToken();
      xPathLexer1.notEquals();
      xPathLexer0.number();
      xPathLexer1.div();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.at();
      xPathLexer0.dots();
      xPathLexer2.identifier();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.93869968298772
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4+LbQ5e.Q6");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("4", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals("+", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals("L", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("x.HTd%ke? t>>c?<");
      xPathLexer1.and();
      Token token3 = xPathLexer1.number();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer1.dots();
      assertEquals("x.", token4.getTokenText());
      assertEquals(14, token4.getTokenType());
      
      xPathLexer0.div();
      XPathLexer xPathLexer2 = new XPathLexer("ky");
      XPathLexer xPathLexer3 = new XPathLexer("F)XeYYU-");
      XPathLexer xPathLexer4 = new XPathLexer("ky");
      xPathLexer4.relationalOperator();
      Token token5 = xPathLexer3.nextToken();
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer0.doubleColon();
      Token token6 = xPathLexer1.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      Token token7 = xPathLexer0.number();
      assertEquals("5", token7.getTokenText());
      
      Token token8 = xPathLexer1.leftParen();
      assertEquals(1, token8.getTokenType());
      assertEquals("T", token8.getTokenText());
      
      Token token9 = xPathLexer3.doubleColon();
      assertEquals(19, token9.getTokenType());
      assertEquals(")X", token9.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.relationalOperator();
      xPathLexer6.at();
      Token token10 = xPathLexer6.dollar();
      assertEquals(26, token10.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.8124060894221936
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.star();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.rightParen();
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer1.minus();
      xPathLexer0.star();
      xPathLexer1.comma();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer2.not();
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token0 = xPathLexer2.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.0017535911818847
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+qn[v`x");
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      token0.toString();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.at();
      xPathLexer1.equals();
      XPathLexer xPathLexer2 = new XPathLexer(">B%zv9$iQ(>FZLWW");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer3.pipe();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer4.minus();
      xPathLexer5.star();
      xPathLexer1.comma();
      XPathLexer xPathLexer7 = new XPathLexer("");
      xPathLexer0.not();
      xPathLexer6.slashes();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.7511646055896715
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.leftParen();
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token0);
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      xPathLexer0.colon();
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.mod();
      xPathLexer0.comma();
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.star();
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      xPathLexer0.dots();
      xPathLexer0.dots();
      xPathLexer0.star();
      Token token9 = xPathLexer0.literal();
      assertNull(token9);
      
      xPathLexer0.endPosition();
      xPathLexer0.and();
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
      
      Token token10 = xPathLexer0.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.comma();
      xPathLexer0.consume();
      Token token11 = xPathLexer0.getPreviousToken();
      assertEquals(1, token11.getTokenType());
      
      Token token12 = xPathLexer0.star();
      assertEquals(20, token12.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.9969490944021402
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+q[v`xg");
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer("m#;-Ce>?8!DK;k38+");
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer0.equals();
      Token token0 = xPathLexer1.at();
      assertEquals("m", token0.getTokenText());
      
      Token token1 = xPathLexer1.equals();
      assertEquals("#", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("m#;-Ce>?8!DK;k38+");
      Token token2 = xPathLexer1.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals(";", token2.getTokenText());
      
      xPathLexer1.and();
      Token token3 = xPathLexer2.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer1.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("-", token4.getTokenText());
      
      Token token5 = xPathLexer0.pipe();
      assertEquals("[", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("v", token6.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token7 = xPathLexer3.number();
      assertEquals(30, token7.getTokenType());
      
      xPathLexer2.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token8 = xPathLexer3.minus();
      assertEquals(6, token8.getTokenType());
      
      Token token9 = xPathLexer1.star();
      assertEquals("C", token9.getTokenText());
      assertEquals(20, token9.getTokenType());
      
      Token token10 = xPathLexer1.comma();
      assertEquals("e", token10.getTokenText());
      assertEquals(32, token10.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token11 = xPathLexer5.not();
      assertEquals(23, token11.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("+q[v`xg");
      Token token12 = xPathLexer3.dots();
      assertEquals(13, token12.getTokenType());
      
      Token token13 = xPathLexer3.identifier();
      assertEquals(15, token13.getTokenType());
      
      Token token14 = xPathLexer1.notEquals();
      assertEquals(">?", token14.getTokenText());
      assertEquals(22, token14.getTokenType());
      
      Token token15 = xPathLexer1.dollar();
      assertEquals("8", token15.getTokenText());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.032407792994819
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+qn[v`x");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.at();
      xPathLexer1.equals();
      XPathLexer xPathLexer2 = new XPathLexer("+qn[v`x");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.or();
      xPathLexer3.pipe();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer4.minus();
      xPathLexer5.star();
      xPathLexer1.comma();
      XPathLexer xPathLexer7 = new XPathLexer("");
      xPathLexer0.not();
      xPathLexer6.slashes();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.692637072426487
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+q[v`xg");
      Token token0 = xPathLexer0.plus();
      assertEquals("+", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("q", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.not();
      assertEquals("[", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.comma();
      xPathLexer0.or();
      Token token3 = xPathLexer0.comma();
      Token token4 = xPathLexer0.literal();
      assertNull(token4);
      
      String string0 = token3.toString();
      assertEquals("[ (32) (`)", string0);
      
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      
      xPathLexer0.setPreviousToken(token3);
      xPathLexer0.hasMoreChars();
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.literal();
      assertNull(token7);
      
      Token token8 = xPathLexer0.number();
      assertEquals(30, token8.getTokenType());
      
      xPathLexer0.setXPath("YDW1wtZNU");
      xPathLexer0.mod();
      xPathLexer0.or();
      Token token9 = xPathLexer0.identifier();
      assertEquals("YDW1wtZNU", token9.getTokenText());
      
      Token token10 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token10.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.6294331100433255
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Um'(v%zr");
      XPathLexer xPathLexer1 = new XPathLexer("+q[v`xg");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Um", token0.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer1.nextToken();
      assertEquals(5, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token2 = xPathLexer3.dollar();
      assertEquals(26, token2.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token3 = xPathLexer5.colon();
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer2.star();
      assertEquals(20, token4.getTokenType());
      
      xPathLexer0.div();
      Token token5 = xPathLexer5.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token6 = xPathLexer5.notEquals();
      assertEquals(22, token6.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("+q[v`xg");
      Token token7 = xPathLexer7.pipe();
      assertEquals(17, token7.getTokenType());
      assertEquals("+", token7.getTokenText());
      
      xPathLexer5.slashes();
      Token token8 = xPathLexer2.slashes();
      assertEquals(11, token8.getTokenType());
      
      Token token9 = xPathLexer4.at();
      assertEquals(16, token9.getTokenType());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.826318613264955
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("7oyq\"k#NSj^]");
      xPathLexer1.and();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("7oyq\"k#NSj^]");
      Token token2 = xPathLexer2.rightBracket();
      assertEquals("7", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals("7", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.minus();
      xPathLexer1.or();
      xPathLexer2.leftParen();
      XPathLexer xPathLexer3 = new XPathLexer("7oyq\"k#NSj^]");
      Token token4 = xPathLexer3.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals("7", token4.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.relationalOperator();
      Token token5 = xPathLexer1.minus();
      assertEquals("o", token5.getTokenText());
      
      Token token6 = xPathLexer1.equals();
      assertEquals(21, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("ra)X3-<Ns:Ad");
      Token token7 = xPathLexer5.not();
      assertEquals("r", token7.getTokenText());
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer5.dots();
      assertEquals("a", token8.getTokenText());
      assertEquals(13, token8.getTokenType());
      
      xPathLexer0.literal();
      Token token9 = xPathLexer0.minus();
      assertEquals(6, token9.getTokenType());
      
      Token token10 = xPathLexer1.leftParen();
      assertEquals("q", token10.getTokenText());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.0193187055685127
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H\"tz-");
      Token token0 = xPathLexer0.star();
      assertEquals("H", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals("t", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("z", token3.getTokenText());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      assertEquals("-", token5.getTokenText());
      
      xPathLexer0.LA(19);
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
      
      Token token6 = xPathLexer0.literal();
      assertNull(token6);
      
      XPathLexer xPathLexer1 = new XPathLexer("ze%Lm,j5vEbG");
      Token token7 = xPathLexer1.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("ze", token7.getTokenText());
      
      xPathLexer1.setXPath("!-i;T$&");
      XPathLexer xPathLexer2 = new XPathLexer();
      char char0 = xPathLexer2.LA(1);
      assertEquals('\uFFFF', char0);
      
      xPathLexer2.or();
      Token token8 = xPathLexer1.dollar();
      assertEquals("!", token8.getTokenText());
      
      Token token9 = xPathLexer2.at();
      assertEquals(16, token9.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token10 = xPathLexer2.dollar();
      assertEquals(26, token10.getTokenType());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.6373553737063684
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.star();
      xPathLexer0.doubleColon();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.not();
      xPathLexer1.star();
      xPathLexer1.dollar();
      xPathLexer0.nextToken();
      xPathLexer1.dollar();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.minus();
      xPathLexer0.star();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.comma();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer4.not();
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.939470299736585
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("d.at9:b-");
      xPathLexer1.div();
      xPathLexer0.minus();
      xPathLexer1.nextToken();
      xPathLexer1.nextToken();
      xPathLexer1.nextToken();
      xPathLexer1.minus();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.div();
      xPathLexer1.minus();
      xPathLexer1.star();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.comma();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.not();
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer5.plus();
      xPathLexer5.slashes();
      xPathLexer5.slashes();
      XPathLexer xPathLexer6 = null;
      try {
        xPathLexer6 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.849963117337456
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+q[v`xg");
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer("d>BsJ(QP");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.at();
      xPathLexer2.equals();
      XPathLexer xPathLexer3 = new XPathLexer("d>BsJ(QP");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.rightBracket();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer3.rightParen();
      xPathLexer4.pipe();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer5.leftParen();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer3.minus();
      xPathLexer1.notEquals();
      xPathLexer4.leftParen();
      XPathLexer xPathLexer8 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer7.comma();
      xPathLexer2.dollar();
      xPathLexer2.comma();
      xPathLexer1.slashes();
      xPathLexer0.at();
      xPathLexer3.not();
      xPathLexer4.slashes();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.62938510313033
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+F`x");
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(")", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer2.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals("+", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token3 = xPathLexer3.colon();
      assertEquals(18, token3.getTokenType());
      
      xPathLexer2.star();
      xPathLexer0.div();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("F", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      xPathLexer1.div();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token5 = xPathLexer4.notEquals();
      assertEquals(22, token5.getTokenType());
      
      xPathLexer1.pipe();
      xPathLexer4.slashes();
      Token token6 = xPathLexer2.slashes();
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer4.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer3.star();
      assertEquals(20, token8.getTokenType());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.3576599651954413
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.equals();
      assertEquals("o", token1.getTokenText());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer1.or();
      Token token2 = xPathLexer1.leftParen();
      assertEquals("c", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("m", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token4 = xPathLexer2.equals();
      assertEquals(21, token4.getTokenType());
      
      Token token5 = xPathLexer1.not();
      assertEquals(23, token5.getTokenType());
      assertEquals("o", token5.getTokenText());
      
      Token token6 = xPathLexer1.dots();
      assertEquals("m.", token6.getTokenText());
      assertEquals(14, token6.getTokenType());
      
      Token token7 = xPathLexer1.literal();
      assertNull(token7);
      
      Token token8 = xPathLexer0.minus();
      assertEquals(6, token8.getTokenType());
      assertEquals(".", token8.getTokenText());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.562173208596885
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.star();
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.or();
      Token token1 = xPathLexer1.leftParen();
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals("o", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.relationalOperator();
      xPathLexer2.minus();
      Token token3 = xPathLexer1.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer1.at();
      assertEquals(16, token4.getTokenType());
      
      xPathLexer0.minus();
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer2.comma();
      assertEquals(32, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("ma,cn");
      Token token7 = xPathLexer2.not();
      assertEquals(23, token7.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token8 = xPathLexer3.minus();
      assertEquals("m", token8.getTokenText());
      
      Token token9 = xPathLexer1.pipe();
      assertEquals(17, token9.getTokenType());
      
      Token token10 = xPathLexer2.minus();
      assertEquals(6, token10.getTokenType());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.9457665868631593
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+qn[v`x");
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (5) (+)", string0);
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("[", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer0.at();
      assertEquals("v", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer1.equals();
      assertEquals(21, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer(">B%zv9$iQ(>FZLWW");
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("`", token4.getTokenText());
      
      Token token5 = xPathLexer3.pipe();
      assertEquals(17, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer(">B%zv9$iQ(>FZLWW");
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer4.minus();
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer5.star();
      assertEquals(">", token8.getTokenText());
      
      Token token9 = xPathLexer1.comma();
      assertEquals(32, token9.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("");
      Token token10 = xPathLexer0.not();
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer6.slashes();
      assertEquals(11, token11.getTokenType());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.7680540728472929
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+qn[v`x");
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.and();
      Token token0 = xPathLexer1.doubleColon();
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("+", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("q", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      xPathLexer2.nextToken();
      xPathLexer2.minus();
      xPathLexer2.div();
      Token token3 = xPathLexer1.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token4 = xPathLexer3.at();
      assertEquals(16, token4.getTokenType());
      
      xPathLexer1.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token5 = xPathLexer0.nextToken();
      assertEquals("n", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token6 = xPathLexer2.minus();
      assertEquals(6, token6.getTokenType());
      
      xPathLexer4.star();
      Token token7 = xPathLexer5.comma();
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer3.not();
      assertEquals(23, token8.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("Oq15hnUMC");
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token9 = xPathLexer8.plus();
      assertEquals(5, token9.getTokenType());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.7521849270102736
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.star();
      xPathLexer0.doubleColon();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.not();
      xPathLexer1.star();
      xPathLexer1.dollar();
      xPathLexer0.nextToken();
      xPathLexer1.dollar();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.pipe();
      xPathLexer2.or();
      xPathLexer2.pipe();
      xPathLexer0.slashes();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.9432036628622715
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(" (", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      xPathLexer0.comma();
      xPathLexer0.dollar();
      xPathLexer0.identifier();
      xPathLexer0.number();
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      Token token5 = xPathLexer1.whitespace();
      assertEquals("", token5.getTokenText());
      assertEquals((-2), token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.number();
      XPathLexer xPathLexer3 = new XPathLexer(") (");
      Token token6 = xPathLexer3.nextToken();
      assertEquals(")", token6.getTokenText());
      assertEquals(2, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token7 = xPathLexer0.minus();
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer1.star();
      assertEquals("(", token8.getTokenText());
      assertEquals(20, token8.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer(") (");
      Token token9 = xPathLexer5.notEquals();
      assertEquals(") ", token9.getTokenText());
      
      Token token10 = xPathLexer5.comma();
      assertEquals("(", token10.getTokenText());
      assertEquals(32, token10.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.div();
      Token token11 = xPathLexer6.not();
      assertEquals(23, token11.getTokenType());
      
      Token token12 = xPathLexer1.dots();
      assertEquals(13, token12.getTokenType());
      
      Token token13 = xPathLexer1.identifier();
      assertEquals(15, token13.getTokenType());
      
      Token token14 = xPathLexer4.notEquals();
      assertEquals(22, token14.getTokenType());
      
      Token token15 = xPathLexer4.dollar();
      assertEquals(26, token15.getTokenType());
      
      Token token16 = xPathLexer0.number();
      assertEquals(30, token16.getTokenType());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.6527516905566062
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("co", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("m.werken.saxpath.Token", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token2 = xPathLexer1.nextToken();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer2.star();
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer2.comma();
      assertEquals(32, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer(") (");
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      xPathLexer0.slashes();
      Token token7 = xPathLexer2.slashes();
      assertEquals(11, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.Token");
      Token token8 = xPathLexer3.at();
      assertEquals(16, token8.getTokenType());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.4512369144590944
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+q[v`xg");
      xPathLexer0.setPreviousToken((Token) null);
      Token token0 = xPathLexer0.plus();
      assertEquals("+", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("q", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("+q[v`xg");
      xPathLexer1.setXPath("+q[v`xg");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.div();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(3, token2.getTokenType());
      assertEquals("[", token2.getTokenText());
      
      xPathLexer1.setXPath("+q[v`xg");
      xPathLexer2.mod();
      xPathLexer1.or();
      Token token3 = xPathLexer1.identifier();
      assertEquals(15, token3.getTokenType());
      
      int int0 = xPathLexer1.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.010178280338699
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.and();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.hasMoreChars();
      Token token1 = xPathLexer0.at();
      assertEquals("c", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals("om", token2.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      Token token3 = xPathLexer1.plus();
      assertEquals("c", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      Token token4 = xPathLexer2.star();
      assertEquals("[", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      xPathLexer1.comma();
      char char0 = xPathLexer0.LA(2302);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.hasMoreChars();
      Token token5 = xPathLexer0.literal();
      assertNull(token5);
      
      XPathLexer xPathLexer3 = new XPathLexer("j[|n^>Y");
      Token token6 = xPathLexer3.nextToken();
      assertEquals("j", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer2.comma();
      assertEquals(" ", token7.getTokenText());
      assertEquals(32, token7.getTokenType());
      
      xPathLexer3.or();
      xPathLexer2.identifier();
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      
      xPathLexer0.identifier();
      Token token9 = xPathLexer1.notEquals();
      assertEquals(22, token9.getTokenType());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.8001983252137277
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.star();
      xPathLexer0.doubleColon();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.not();
      xPathLexer1.star();
      xPathLexer1.dollar();
      xPathLexer0.nextToken();
      xPathLexer1.dollar();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.pipe();
      xPathLexer2.literal();
      xPathLexer0.rightBracket();
      xPathLexer2.pipe();
      xPathLexer2.slashes();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.6285617840278217
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.star();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("om.werken.saxpath.Token", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token2 = xPathLexer3.minus();
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token5 = xPathLexer2.not();
      assertEquals(23, token5.getTokenType());
      
      xPathLexer1.slashes();
      Token token6 = xPathLexer3.slashes();
      assertEquals(11, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token7 = xPathLexer2.at();
      assertEquals(16, token7.getTokenType());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.7817576377517026
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("7oyq\"k#NSj^]");
      xPathLexer1.and();
      xPathLexer0.doubleColon();
      xPathLexer0.slashes();
      XPathLexer xPathLexer2 = new XPathLexer("7oyq\"k#NSj^]");
      xPathLexer2.rightBracket();
      XPathLexer xPathLexer3 = new XPathLexer("*QZ");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.rightBracket();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer2.rightParen();
      xPathLexer0.pipe();
      XPathLexer xPathLexer6 = new XPathLexer("7oyq\"k#NSj^]");
      xPathLexer6.nextToken();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer0.leftParen();
      xPathLexer3.nextToken();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer6.minus();
      xPathLexer0.notEquals();
      xPathLexer1.leftParen();
      XPathLexer xPathLexer9 = new XPathLexer(") (");
      xPathLexer5.comma();
      xPathLexer3.dollar();
      xPathLexer0.comma();
      xPathLexer1.slashes();
      xPathLexer2.at();
      XPathLexer xPathLexer10 = new XPathLexer("*QZ");
      xPathLexer8.not();
      xPathLexer8.slashes();
      Token token0 = xPathLexer2.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.5354954353294863
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+q[v`xg");
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("s!'2J#&TjD1a");
      xPathLexer2.leftBracket();
      Token token0 = xPathLexer2.nextToken();
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer2.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("'", token1.getTokenText());
      
      Token token2 = xPathLexer2.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("2", token2.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("q", token3.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(3, token4.getTokenType());
      assertEquals("[", token4.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer3.star();
      Token token5 = xPathLexer2.comma();
      assertEquals(32, token5.getTokenType());
      assertEquals("J", token5.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer("XI(|&9~uS;LiQ");
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token6 = xPathLexer7.not();
      assertEquals(23, token6.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("Y 3BnBc Ey");
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token7 = xPathLexer9.minus();
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer9.star();
      assertEquals(20, token8.getTokenType());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.9975836508881137
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+]Y'pf]TA|a");
      Token token0 = xPathLexer0.star();
      assertEquals("+", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("]Y", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("'", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("pf", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals("]", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer0.not();
      assertEquals("T", token5.getTokenText());
      
      Token token6 = xPathLexer1.star();
      assertEquals(20, token6.getTokenType());
      
      xPathLexer1.dollar();
      xPathLexer0.nextToken();
      Token token7 = xPathLexer1.dollar();
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer1.equals();
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer1.not();
      assertEquals(23, token9.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("+]Y'pf]TA|a");
      Token token10 = xPathLexer2.dots();
      assertEquals(13, token10.getTokenType());
      assertEquals("+", token10.getTokenText());
      
      Token token11 = xPathLexer0.literal();
      assertNull(token11);
      
      Token token12 = xPathLexer1.at();
      assertEquals(16, token12.getTokenType());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.8263619188357385
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("? hR+c%R$>kY!I~%_G");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("?", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(" ", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.colon();
      assertEquals(18, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("? hR+c%R$>kY!I~%_G");
      xPathLexer0.and();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.notEquals();
      XPathLexer xPathLexer4 = new XPathLexer("T?)en^C6 I&`n");
      Token token4 = xPathLexer2.nextToken();
      assertEquals("? hR+c%R$>kY!I~%_G", token4.getTokenText());
      
      Token token5 = xPathLexer4.nextToken();
      assertEquals("T", token5.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.or();
      Token token6 = xPathLexer0.notEquals();
      assertEquals("hR", token6.getTokenText());
      assertEquals(22, token6.getTokenType());
      
      xPathLexer4.identifier();
      Token token7 = xPathLexer0.identifier();
      assertEquals(15, token7.getTokenType());
      
      xPathLexer5.comma();
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token8 = xPathLexer6.star();
      assertEquals(20, token8.getTokenType());
      assertEquals("c", token8.getTokenText());
      
      Token token9 = xPathLexer5.comma();
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer2.not();
      assertEquals("?", token10.getTokenText());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.83205214290145
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("? hR+c%R$>kY!I~%_G");
      Token token0 = xPathLexer0.dollar();
      token0.toString();
      token0.toString();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.at();
      xPathLexer0.equals();
      XPathLexer xPathLexer2 = new XPathLexer("[ (26) (?)");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer2.pipe();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer2.nextToken();
      xPathLexer4.minus();
      xPathLexer4.star();
      xPathLexer5.comma();
      XPathLexer xPathLexer6 = new XPathLexer("[ (26) (?)");
      xPathLexer5.not();
      XPathLexer xPathLexer7 = new XPathLexer("?UK{5r6QzgCjl0L%Q");
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.4506519300261935
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("? hR+c%R$>kY!I~%_G");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.at();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.equals();
      XPathLexer xPathLexer4 = new XPathLexer("? hR+c%R$>kY!I~%_G");
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.equals();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer1.not();
      xPathLexer1.star();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer4.dollar();
      xPathLexer3.nextToken();
      xPathLexer3.dollar();
      XPathLexer xPathLexer8 = new XPathLexer("");
      xPathLexer8.or();
      xPathLexer1.pipe();
      XPathLexer xPathLexer9 = new XPathLexer();
      xPathLexer6.doubleColon();
      XPathLexer xPathLexer10 = new XPathLexer();
      xPathLexer10.slashes();
      Token token0 = xPathLexer5.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.663052314747818
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.star();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.equals();
      assertEquals("o", token0.getTokenText());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.or();
      Token token1 = xPathLexer1.leftParen();
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals("m", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.relationalOperator();
      xPathLexer2.minus();
      Token token3 = xPathLexer1.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer1.at();
      assertEquals(16, token4.getTokenType());
      
      xPathLexer0.minus();
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      assertEquals("w", token5.getTokenText());
      
      Token token6 = xPathLexer2.comma();
      assertEquals(32, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("ma,cn");
      Token token7 = xPathLexer2.not();
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer0.slashes();
      assertEquals("e", token8.getTokenText());
      assertEquals(11, token8.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token9 = xPathLexer3.minus();
      assertEquals("m", token9.getTokenText());
      
      Token token10 = xPathLexer1.pipe();
      assertEquals(17, token10.getTokenType());
      
      Token token11 = xPathLexer2.minus();
      assertEquals(6, token11.getTokenType());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.9091261500316576
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.star();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.minus();
      xPathLexer0.star();
      xPathLexer0.comma();
      XPathLexer xPathLexer1 = new XPathLexer("8c8d`");
      xPathLexer1.star();
      XPathLexer xPathLexer2 = new XPathLexer("MC4|");
      xPathLexer2.comma();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.not();
      xPathLexer2.slashes();
      Token token0 = xPathLexer3.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.7680540728472929
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("7oyq\"k#NSj^]");
      xPathLexer1.and();
      xPathLexer0.doubleColon();
      xPathLexer0.slashes();
      xPathLexer1.equals();
      xPathLexer1.at();
      xPathLexer0.equals();
      XPathLexer xPathLexer2 = new XPathLexer("7oyq\"k#NSj^]");
      xPathLexer1.and();
      xPathLexer0.rightParen();
      xPathLexer2.pipe();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.minus();
      xPathLexer1.star();
      xPathLexer0.comma();
      xPathLexer4.not();
      XPathLexer xPathLexer5 = new XPathLexer("7oyq\"k#NSj^]");
      Token token0 = xPathLexer5.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.059102348352905
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.colon();
      xPathLexer0.number();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.rightBracket();
      xPathLexer0.comma();
      xPathLexer0.dollar();
      xPathLexer0.identifier();
      xPathLexer0.number();
      xPathLexer0.at();
      xPathLexer0.equals();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("W,2oo");
      xPathLexer1.nextToken();
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer("<gki(92(bCY`)#3D");
      xPathLexer2.rightBracket();
      xPathLexer0.pipe();
      xPathLexer1.slashes();
      xPathLexer1.relationalOperator();
      int int0 = xPathLexer1.endPosition();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.5050296258731017
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+F`x");
      Token token0 = xPathLexer0.not();
      Token token1 = xPathLexer0.nextToken();
      String string0 = token1.toString();
      assertEquals("[ (15) (F)", string0);
      
      String string1 = token0.toString();
      assertEquals("[ (23) (+)", string1);
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("`", token2.getTokenText());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.6074248822946624
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.star();
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.equals();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer1.and();
      Token token2 = xPathLexer0.equals();
      assertEquals(".", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals("w", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals("e", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token5 = xPathLexer5.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer2.pipe();
      assertEquals(17, token6.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token7 = xPathLexer3.minus();
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer3.star();
      assertEquals(20, token8.getTokenType());
      
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
      assertEquals("r", token9.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer("com.werken.saxpath.Token");
      Token token10 = xPathLexer7.not();
      assertEquals(23, token10.getTokenType());
      assertEquals("c", token10.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer1.relationalOperator();
      xPathLexer6.operatorName();
      boolean boolean0 = xPathLexer2.isIdentifierStartChar('?');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.425509378838722
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.plus();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.div();
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.leftBracket();
      xPathLexer0.or();
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      xPathLexer0.getXPath();
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.literal();
      assertNull(token4);
      
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.leftParen();
      assertEquals(1, token5.getTokenType());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.975451016040013
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("55L.t%5'");
      xPathLexer0.slashes();
      xPathLexer0.comma();
      xPathLexer0.relationalOperator();
      xPathLexer0.leftBracket();
      xPathLexer0.doubleColon();
      xPathLexer0.slashes();
      xPathLexer0.or();
      xPathLexer0.leftBracket();
      int int0 = (-749);
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-749));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.6469693897627713
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.notEquals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.comma();
      xPathLexer0.number();
      xPathLexer0.literal();
      xPathLexer0.consume((-1170));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=3.2377021760740097
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.comma();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("om", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      Token token3 = xPathLexer0.star();
      assertEquals("w", token3.getTokenText());
      
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("e", token4.getTokenText());
      
      xPathLexer0.or();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals("rk", token5.getTokenText());
      
      Token token6 = xPathLexer0.leftParen();
      assertEquals("e", token6.getTokenText());
      
      Token token7 = xPathLexer0.colon();
      assertEquals("n", token7.getTokenText());
      
      Token token8 = xPathLexer0.identifier();
      assertEquals(15, token8.getTokenType());
      assertEquals(".saxpath.Token", token8.getTokenText());
      
      Token token9 = xPathLexer0.number();
      assertEquals(30, token9.getTokenType());
      
      Token token10 = xPathLexer0.not();
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer0.leftParen();
      assertEquals(1, token11.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token12 = xPathLexer0.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      Token token13 = xPathLexer0.comma();
      assertEquals(32, token13.getTokenType());
      
      xPathLexer0.isIdentifierChar('*');
      xPathLexer0.relationalOperator();
      Token token14 = xPathLexer0.dollar();
      assertEquals(26, token14.getTokenType());
      
      Token token15 = xPathLexer0.leftBracket();
      assertEquals(3, token15.getTokenType());
      
      xPathLexer0.colon();
      Token token16 = xPathLexer0.equals();
      assertEquals(21, token16.getTokenType());
      
      Token token17 = xPathLexer0.star();
      assertEquals(20, token17.getTokenType());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.8576415929510495
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.slashes();
      assertEquals("o", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      XPathLexer xPathLexer2 = new XPathLexer("{0aUn`eDzy*H#(xu");
      Token token2 = xPathLexer2.at();
      assertEquals("{", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.Token");
      Token token3 = xPathLexer3.equals();
      assertEquals("c", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token4 = xPathLexer4.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      xPathLexer4.and();
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      assertEquals("m", token5.getTokenText());
      
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer4.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer(")vf");
      xPathLexer5.mod();
      xPathLexer0.or();
      Token token8 = xPathLexer0.identifier();
      assertEquals(15, token8.getTokenType());
      assertEquals(".werken.saxpath.Token", token8.getTokenText());
      
      Token token9 = xPathLexer5.dots();
      assertEquals(13, token9.getTokenType());
      assertEquals(")", token9.getTokenText());
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('7');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.6470198829490437
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4+LbQ5e.Q6");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("4+", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("LbQ5e.Q6", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.minus();
      xPathLexer2.star();
      xPathLexer0.comma();
      xPathLexer3.minus();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token2 = xPathLexer4.star();
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer2.comma();
      assertEquals(32, token3.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token4 = xPathLexer5.not();
      assertEquals(23, token4.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("\"3");
      xPathLexer3.relationalOperator();
      Token token5 = xPathLexer1.minus();
      assertEquals(6, token5.getTokenType());
      
      Token token6 = xPathLexer0.getPreviousToken();
      assertEquals("", token6.getTokenText());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.8764044440423469
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("? hR+c%R$>kY!I~%_G");
      Token token0 = xPathLexer0.dollar();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (26) (?)", string0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("hR", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(5, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.at();
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("%", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (26) (?)");
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer0.rightParen();
      assertEquals("R", token4.getTokenText());
      assertEquals(2, token4.getTokenType());
      
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      assertEquals("$", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(9, token6.getTokenType());
      assertEquals(">", token6.getTokenText());
      
      Token token7 = xPathLexer1.notEquals();
      assertEquals(22, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token8 = xPathLexer2.nextToken();
      assertEquals(3, token8.getTokenType());
      assertEquals("[", token8.getTokenText());
      
      Token token9 = xPathLexer1.minus();
      assertEquals(6, token9.getTokenType());
      
      Token token10 = xPathLexer2.star();
      assertEquals(" ", token10.getTokenText());
      assertEquals(20, token10.getTokenType());
      
      Token token11 = xPathLexer2.comma();
      assertEquals("(", token11.getTokenText());
      assertEquals(32, token11.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("? hR+c%R$>kY!I~%_G");
      Token token12 = xPathLexer6.not();
      assertEquals(23, token12.getTokenType());
      assertEquals("?", token12.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer("[ (26) (?)");
      xPathLexer6.relationalOperator();
      int int0 = xPathLexer3.endPosition();
      assertEquals(0, int0);
      
      Token token13 = xPathLexer0.at();
      assertEquals("k", token13.getTokenText());
      assertEquals(16, token13.getTokenType());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.9037025258513909
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpah.Token");
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (15) (com.werken.saxpah.Token)", string0);
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.relationalOperator();
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.identifier();
      Token token4 = xPathLexer1.rightParen();
      assertEquals(2, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("V|)]zaNfD");
      Token token5 = xPathLexer2.pipe();
      assertEquals("V", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
      
      xPathLexer1.operatorName();
      xPathLexer1.mod();
      Token token6 = xPathLexer0.minus();
      assertEquals(6, token6.getTokenType());
      
      Token token7 = xPathLexer2.star();
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer1.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.operatorName();
      boolean boolean0 = xPathLexer2.isIdentifierStartChar('w');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.159692729042681
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.at();
      xPathLexer0.star();
      xPathLexer0.equals();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.rightBracket();
      xPathLexer0.comma();
      xPathLexer0.literal();
      xPathLexer0.consume((-2199));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.5851900899729758
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.star();
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume(888);
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.at();
      xPathLexer0.equals();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer0.pipe();
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.nextToken();
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer2.nextToken();
      xPathLexer6.minus();
      xPathLexer3.star();
      xPathLexer3.comma();
      XPathLexer xPathLexer9 = new XPathLexer(">B%zv9$iQ(>FZLWW");
      xPathLexer9.literal();
      xPathLexer9.comma();
      xPathLexer6.not();
      XPathLexer xPathLexer10 = new XPathLexer("{<k:W{Qgn]z-");
      Token token0 = xPathLexer9.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.7932831584560327
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+q[v`xg");
      Token token0 = xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      String string0 = token0.toString();
      assertEquals("[ (4) (+)", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("v`", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("u=G^.3a2");
      Token token4 = xPathLexer2.nextToken();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer2.star();
      xPathLexer2.setPreviousToken(token5);
      assertEquals("=", token5.getTokenText());
      
      xPathLexer0.comma();
      XPathLexer xPathLexer3 = new XPathLexer("+q[v`xg");
      Token token6 = xPathLexer1.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer0.comma();
      assertEquals("g", token7.getTokenText());
      assertEquals(32, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token8 = xPathLexer3.not();
      assertEquals("+", token8.getTokenText());
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer2.slashes();
      assertEquals(11, token9.getTokenType());
      assertEquals("G", token9.getTokenText());
      
      xPathLexer3.relationalOperator();
      Token token10 = xPathLexer2.leftParen();
      assertEquals(1, token10.getTokenType());
      assertEquals("^", token10.getTokenText());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.9161244193139757
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer("@]h`");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.comma();
      xPathLexer2.comma();
      xPathLexer1.literal();
      xPathLexer0.plus();
      XPathLexer xPathLexer3 = new XPathLexer("%'ryxjbDwP}");
      Token token0 = xPathLexer1.doubleColon();
      xPathLexer3.setPreviousToken(token0);
      xPathLexer3.hasMoreChars();
      xPathLexer1.relationalOperator();
      xPathLexer0.at();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.slashes();
      xPathLexer4.literal();
      XPathLexer xPathLexer5 = new XPathLexer("%'ryxjbDwP}");
      xPathLexer4.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer5.or();
      xPathLexer4.identifier();
      XPathLexer xPathLexer7 = new XPathLexer("");
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.relationalOperator();
      xPathLexer2.dots();
      xPathLexer0.dots();
      Token token1 = xPathLexer1.or();
      assertNull(token1);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.848216136499965
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("? hR+c%R$>kY!I~%_G");
      Token token0 = xPathLexer0.dollar();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (26) (?)", string0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("hR", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(5, token2.getTokenType());
      assertEquals("+", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer0.at();
      assertEquals("c", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals("%", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (26) (?)");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.rightParen();
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token6 = xPathLexer2.nextToken();
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer1.minus();
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer2.star();
      assertEquals(" ", token8.getTokenText());
      assertEquals(20, token8.getTokenType());
      
      Token token9 = xPathLexer2.comma();
      assertEquals("(", token9.getTokenText());
      assertEquals(32, token9.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("? hR+c%R$>kY!I~%_G");
      Token token10 = xPathLexer6.not();
      assertEquals(23, token10.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("[ (26) (?)");
      xPathLexer6.relationalOperator();
      Token token11 = xPathLexer0.getPreviousToken();
      assertEquals(9, token11.getTokenType());
      assertEquals(">", token11.getTokenText());
      
      Token token12 = xPathLexer2.rightParen();
      assertEquals("2", token12.getTokenText());
      assertEquals(2, token12.getTokenType());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.2961864116181325
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.star();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("m", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      xPathLexer0.getPreviousToken();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(13, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer1.minus();
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer1.star();
      assertEquals(20, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token6 = xPathLexer2.comma();
      assertEquals(32, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      assertEquals("w", token7.getTokenText());
      
      Token token8 = xPathLexer0.slashes();
      assertEquals("e", token8.getTokenText());
      
      Token token9 = xPathLexer1.slashes();
      assertEquals(11, token9.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token10 = xPathLexer2.at();
      assertEquals(16, token10.getTokenType());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.318252549582219
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.leftParen();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.minus();
      xPathLexer1.notEquals();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer3 = new XPathLexer(")");
      xPathLexer2.comma();
      xPathLexer2.dollar();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.comma();
      xPathLexer3.slashes();
      xPathLexer1.at();
      xPathLexer2.slashes();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token0 = xPathLexer5.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.2277427456365886
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+q[v`xg");
      Token token0 = xPathLexer0.slashes();
      Token token1 = xPathLexer0.colon();
      assertEquals("q", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      String string0 = token0.toString();
      assertEquals("[ (11) (+)", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer0.minus();
      assertEquals("[", token2.getTokenText());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("v`", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("u=G^.3a2");
      Token token4 = xPathLexer1.dots();
      assertEquals(13, token4.getTokenType());
      
      Token token5 = xPathLexer2.star();
      assertEquals("u", token5.getTokenText());
      
      xPathLexer0.comma();
      XPathLexer xPathLexer3 = new XPathLexer("+q[v`xg");
      Token token6 = xPathLexer1.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      assertEquals("g", token7.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      XPathLexer xPathLexer5 = new XPathLexer("?Pv");
      Token token8 = xPathLexer4.not();
      assertEquals(23, token8.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token9 = xPathLexer6.at();
      assertEquals(16, token9.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token10 = xPathLexer7.minus();
      assertEquals(6, token10.getTokenType());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.247464936259248
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("s!'2J#&TjD1a");
      Token token1 = xPathLexer1.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token2 = xPathLexer2.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("s", token2.getTokenText());
      
      Token token3 = xPathLexer0.star();
      assertEquals("o", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals("m", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token5 = xPathLexer3.not();
      assertEquals(23, token5.getTokenType());
      
      xPathLexer1.slashes();
      Token token6 = xPathLexer1.slashes();
      assertEquals(11, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.Token");
      Token token7 = xPathLexer2.at();
      assertEquals(16, token7.getTokenType());
      assertEquals("!", token7.getTokenText());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.582451114176723
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.operatorName();
      xPathLexer0.notEquals();
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.not();
      xPathLexer0.equals();
      xPathLexer0.equals();
      xPathLexer0.pipe();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      xPathLexer0.identifier();
      xPathLexer0.mod();
      xPathLexer0.doubleColon();
      xPathLexer0.literal();
      xPathLexer0.slashes();
      xPathLexer0.at();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.equals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.plus();
      xPathLexer0.identifier();
      xPathLexer0.consume((-291));
      xPathLexer0.currentPosition();
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.421263929660615
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      String string0 = "";
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.and();
      xPathLexer0.leftParen();
      xPathLexer0.colon();
      xPathLexer0.doubleColon();
      xPathLexer0.number();
      xPathLexer0.currentPosition();
      xPathLexer0.and();
      xPathLexer0.not();
      xPathLexer0.mod();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.LA(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.511952868203546
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      xPathLexer0.consume();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      xPathLexer0.getPreviousToken();
      xPathLexer0.leftBracket();
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.consume();
      Token token6 = xPathLexer0.literal();
      assertNull(token6);
      
      Token token7 = xPathLexer0.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer0.leftParen();
      assertEquals(1, token9.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.getXPath();
      xPathLexer0.getXPath();
      xPathLexer0.consume();
      xPathLexer0.and();
      Token token10 = xPathLexer0.notEquals();
      assertEquals(22, token10.getTokenType());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.713055321132091
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"om.werken.saxpath.Token");
      xPathLexer0.hasMoreChars();
      Token token0 = xPathLexer0.at();
      assertEquals("\"", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      xPathLexer0.setXPath("ck8tSxNj95_@(@PU32,");
      XPathLexer xPathLexer1 = new XPathLexer("U^AT>stZ@Lq_[kc[{cU");
      Token token1 = xPathLexer1.notEquals();
      assertEquals("U^", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals("c", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("\"om.werken.saxpath.Token");
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      assertEquals("k", token3.getTokenText());
      
      Token token4 = xPathLexer0.comma();
      assertEquals("8", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
      
      xPathLexer0.LA((-1));
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer3.literal();
      assertNull(token5);
      
      XPathLexer xPathLexer4 = new XPathLexer("\"om.werken.saxpath.Token");
      Token token6 = xPathLexer3.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      xPathLexer0.or();
      Token token7 = xPathLexer0.identifier();
      assertEquals("tSxNj95_", token7.getTokenText());
      
      Token token8 = xPathLexer3.dots();
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer3.identifier();
      assertEquals(15, token9.getTokenType());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.8494938514180335
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftParen();
      xPathLexer0.rightBracket();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.comma();
      xPathLexer0.mod();
      xPathLexer0.comma();
      xPathLexer0.comma();
      xPathLexer0.literal();
      Token token0 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.hasMoreChars();
      xPathLexer0.at();
      xPathLexer0.notEquals();
      xPathLexer0.number();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.rightParen();
      xPathLexer0.star();
      xPathLexer0.LA(2302);
      xPathLexer0.hasMoreChars();
      xPathLexer0.literal();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.dollar();
      String string0 = xPathLexer0.getXPath();
      assertEquals("com.werken.saxpath.XPathLexer", string0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.6614765768142294
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7IDaQfAh`");
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.plus();
      xPathLexer1.nextToken();
      xPathLexer1.comma();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.slashes();
      xPathLexer2.at();
      xPathLexer2.dots();
      XPathLexer xPathLexer3 = new XPathLexer("7IDaQfAh`");
      xPathLexer3.equals();
      xPathLexer1.plus();
      XPathLexer xPathLexer4 = new XPathLexer("H");
      xPathLexer0.rightBracket();
      xPathLexer4.rightParen();
      xPathLexer4.pipe();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer5.nextToken();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer0.leftParen();
      xPathLexer7.minus();
      xPathLexer1.star();
      xPathLexer1.comma();
      XPathLexer xPathLexer9 = new XPathLexer("7IDaQfAh`");
      xPathLexer0.not();
      XPathLexer xPathLexer10 = new XPathLexer();
      xPathLexer10.whitespace();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.9431363974029585
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("? hR+c%R$>kY!I~%_G");
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("?", token1.getTokenText());
      
      token0.toString();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.minus();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer1.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("hR+c%R$>kY!I~%_G", token3.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      assertEquals("h", token4.getTokenText());
      
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      assertEquals("R", token5.getTokenText());
      
      Token token6 = xPathLexer4.comma();
      assertEquals(32, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("[ (-1) (? hR+c%R$>kY!I~%_G)");
      Token token7 = xPathLexer4.not();
      assertEquals(23, token7.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("6!?x,/?*-x^r9&+");
      xPathLexer3.relationalOperator();
      Token token8 = xPathLexer3.plus();
      assertEquals(5, token8.getTokenType());
      
      Token token9 = xPathLexer2.notEquals();
      assertEquals(22, token9.getTokenType());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.9300261049922565
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("? hR+c%R$>kY!I~%_G");
      xPathLexer0.setXPath("? hR+c%R$>kY!I~%_G");
      XPathLexer xPathLexer1 = new XPathLexer("T#KxrbD9fO");
      xPathLexer1.and();
      xPathLexer0.number();
      Token token0 = xPathLexer1.equals();
      assertEquals("T", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals("?", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer1.equals();
      assertEquals(21, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("? hR+c%R$>kY!I~%_G");
      xPathLexer0.leftBracket();
      xPathLexer2.and();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("h", token3.getTokenText());
      
      Token token4 = xPathLexer2.rightParen();
      assertEquals("?", token4.getTokenText());
      assertEquals(2, token4.getTokenType());
      
      Token token5 = xPathLexer2.pipe();
      assertEquals(" ", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer3.number();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer3.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token8 = xPathLexer0.minus();
      assertEquals(6, token8.getTokenType());
      assertEquals("R", token8.getTokenText());
      
      Token token9 = xPathLexer1.star();
      assertEquals("K", token9.getTokenText());
      assertEquals(20, token9.getTokenType());
      
      Token token10 = xPathLexer4.comma();
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer0.not();
      assertEquals("+", token11.getTokenText());
      assertEquals(23, token11.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("T#KxrbD9fO");
      Token token12 = xPathLexer5.leftBracket();
      assertEquals("T", token12.getTokenText());
      assertEquals(3, token12.getTokenType());
      
      Token token13 = xPathLexer0.dots();
      assertEquals("c", token13.getTokenText());
      assertEquals(13, token13.getTokenType());
      
      Token token14 = xPathLexer0.identifier();
      assertEquals("", token14.getTokenText());
      
      Token token15 = xPathLexer1.notEquals();
      assertEquals("xr", token15.getTokenText());
      assertEquals(22, token15.getTokenType());
      
      xPathLexer3.dollar();
      Token token16 = xPathLexer4.plus();
      assertEquals(5, token16.getTokenType());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.690731871398413
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.star();
      String string0 = token0.toString();
      assertEquals("[ (20) (c)", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals("", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("o", token3.getTokenText());
      
      xPathLexer2.equals();
      XPathLexer xPathLexer3 = new XPathLexer("Gk?S\"<x`dXqy");
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token4 = xPathLexer4.rightParen();
      assertEquals(2, token4.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("DyEeMsd`12c");
      Token token5 = xPathLexer5.pipe();
      assertEquals("D", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer(")");
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.nextToken();
      XPathLexer xPathLexer8 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token6 = xPathLexer9.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      Token token7 = xPathLexer2.minus();
      assertEquals(6, token7.getTokenType());
      
      xPathLexer2.star();
      XPathLexer xPathLexer10 = new XPathLexer("=(d(*75[");
      Token token8 = xPathLexer10.comma();
      assertEquals("=", token8.getTokenText());
      assertEquals(32, token8.getTokenType());
      
      XPathLexer xPathLexer11 = new XPathLexer("DyEeMsd`12c");
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
      assertEquals("m", token9.getTokenText());
      
      Token token10 = xPathLexer10.slashes();
      assertEquals("(", token10.getTokenText());
      assertEquals(11, token10.getTokenType());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.7753247948474213
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer("q-[");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.rightParen();
      xPathLexer2.pipe();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer1.minus();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer3.comma();
      xPathLexer6.dollar();
      xPathLexer3.comma();
      xPathLexer1.slashes();
      xPathLexer1.at();
      XPathLexer xPathLexer7 = new XPathLexer("");
      xPathLexer4.not();
      xPathLexer5.slashes();
      Token token0 = xPathLexer4.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.5510353035451225
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+Qq[v`xg");
      xPathLexer0.not();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer("kyaM+f6j%@9");
      xPathLexer1.number();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.pipe();
      xPathLexer2.minus();
      xPathLexer2.number();
      xPathLexer0.star();
      xPathLexer1.comma();
      XPathLexer xPathLexer3 = new XPathLexer("vsce");
      xPathLexer1.not();
      xPathLexer0.slashes();
      xPathLexer3.slashes();
      XPathLexer xPathLexer4 = new XPathLexer(".<b`pr;da#");
      assertFalse(xPathLexer4.equals((Object)xPathLexer1));
  }

  /**
  //Test case number: 122
  /*Coverage entropy=3.1801964563609793
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.consume();
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.or();
      Token token8 = xPathLexer0.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      Token token9 = xPathLexer0.rightParen();
      assertEquals(2, token9.getTokenType());
      
      xPathLexer0.operatorName();
      Token token10 = xPathLexer0.rightBracket();
      assertEquals(4, token10.getTokenType());
      
      Token token11 = xPathLexer0.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      Token token12 = xPathLexer0.dots();
      assertEquals(13, token12.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.mod();
      Token token13 = xPathLexer0.colon();
      assertEquals(18, token13.getTokenType());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.8546561057915099
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNull(token4);
      
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.2357934872597665
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.star();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("m", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(13, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("w", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      Token token5 = xPathLexer1.minus();
      assertEquals(6, token5.getTokenType());
      assertEquals("c", token5.getTokenText());
      
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      Token token7 = xPathLexer2.comma();
      assertEquals("c", token7.getTokenText());
      assertEquals(32, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token8 = xPathLexer1.not();
      assertEquals(23, token8.getTokenType());
      assertEquals("o", token8.getTokenText());
      
      xPathLexer2.slashes();
      Token token9 = xPathLexer2.slashes();
      assertEquals("m", token9.getTokenText());
      assertEquals(11, token9.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("cdl\"1yv");
      Token token10 = xPathLexer3.at();
      assertEquals(16, token10.getTokenType());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.9155099094996166
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4+LbQ5e.Q6");
      Token token0 = xPathLexer0.pipe();
      assertEquals("4", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(5, token1.getTokenType());
      assertEquals("+", token1.getTokenText());
      
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer2.pipe();
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("LbQ5e.Q6", token3.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer1.minus();
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer2.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token7 = xPathLexer1.not();
      assertEquals(23, token7.getTokenType());
      
      xPathLexer1.slashes();
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("51S|vr#(6UQS}Rae$");
      Token token9 = xPathLexer5.at();
      assertEquals("5", token9.getTokenText());
      assertEquals(16, token9.getTokenType());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.4476049100730943
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+q[v`xg");
      Token token0 = xPathLexer0.not();
      Token token1 = xPathLexer0.nextToken();
      token0.toString();
      token0.toString();
      String string0 = token1.toString();
      assertEquals("q", token1.getTokenText());
      assertEquals("[ (15) (q)", string0);
      
      String string1 = token0.toString();
      assertEquals("[ (23) (+)", string1);
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("[v", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("`xg", token3.getTokenText());
      
      xPathLexer0.or();
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("`", token4.getTokenText());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals("x", token5.getTokenText());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.440546401534378
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@]h`");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("@", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.nextToken();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("]", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.at();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("h", token2.getTokenText());
      
      xPathLexer2.comma();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer("@]h`");
      xPathLexer4.minus();
      Token token3 = xPathLexer2.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer2.at();
      assertEquals(16, token4.getTokenType());
      
      xPathLexer4.minus();
      XPathLexer xPathLexer5 = new XPathLexer("c|5D37Kv70h.JUX7`");
      Token token5 = xPathLexer5.star();
      assertEquals("c", token5.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token6 = xPathLexer6.comma();
      assertEquals(32, token6.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("c|5D37Kv70h.JUX7`");
      Token token7 = xPathLexer4.not();
      assertEquals(23, token7.getTokenType());
      assertEquals("h", token7.getTokenText());
      
      Token token8 = xPathLexer4.star();
      assertEquals(20, token8.getTokenType());
      
      Token token9 = xPathLexer4.slashes();
      assertEquals(11, token9.getTokenType());
      
      xPathLexer3.relationalOperator();
      Token token10 = xPathLexer7.minus();
      assertEquals("c", token10.getTokenText());
      
      Token token11 = xPathLexer4.pipe();
      assertEquals(17, token11.getTokenType());
      
      Token token12 = xPathLexer6.minus();
      assertEquals(6, token12.getTokenType());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=3.328782901824129
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3+6A:'2bIjC");
      Token token0 = xPathLexer0.star();
      assertEquals("3", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals("+", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("6", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals("A", token3.getTokenText());
      
      Token token4 = xPathLexer0.literal();
      assertNull(token4);
      
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer0.pipe();
      assertEquals(17, token8.getTokenType());
      
      Token token9 = xPathLexer0.leftParen();
      assertEquals(1, token9.getTokenType());
      
      Token token10 = xPathLexer0.identifier();
      assertEquals(15, token10.getTokenType());
      
      xPathLexer0.literal();
      Token token11 = xPathLexer0.not();
      assertEquals(23, token11.getTokenType());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.91489794328377
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+qn[v`x");
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      token0.toString();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.nextToken();
      token1.toString();
      token0.toString();
      xPathLexer0.minus();
      xPathLexer0.operatorName();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.pipe();
      xPathLexer0.dollar();
      Token token2 = xPathLexer0.relationalOperator();
      assertNull(token2);
  }
}
