/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 10:50:20 GMT 2019
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.URI;
import java.util.Collection;
import java.util.Comparator;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.ScheduledFuture;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.SynchronousQueue;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import java.util.function.Predicate;
import javax.management.remote.JMXPrincipal;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.firebirdsql.gds.DatabaseParameterBuffer;
import org.firebirdsql.gds.GDS;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.GDSType;
import org.firebirdsql.gds.impl.jni.EmbeddedGDSImpl;
import org.firebirdsql.gds.impl.jni.isc_db_handle_impl;
import org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.wire.JavaGDSImpl;
import org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_tr_handle_impl;
import org.firebirdsql.jca.FBConnectionRequestInfo;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jca.FBManagedConnectionFactory;
import org.firebirdsql.jdbc.DummyCallableStatementMetaData;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBConnection;
import org.firebirdsql.jdbc.FBConnectionProperties;
import org.firebirdsql.jdbc.FBFetcher;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.FBResultSetNotUpdatableException;
import org.firebirdsql.jdbc.FBSQLException;
import org.firebirdsql.jdbc.InternalTransactionCoordinator;
import org.firebirdsql.jdbc.field.FBCachedBlobField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.0989905178023474
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      SynchronousQueue<byte[][]> synchronousQueue0 = new SynchronousQueue<byte[][]>();
      linkedList0.addAll((Collection<? extends byte[][]>) synchronousQueue0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList1);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      Predicate<byte[][]> predicate3 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate4 = predicate0.negate();
      predicate2.or(predicate4);
      Object object0 = new Object();
      ThreadPoolExecutor.DiscardOldestPolicy threadPoolExecutor_DiscardOldestPolicy0 = new ThreadPoolExecutor.DiscardOldestPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(0, threadPoolExecutor_DiscardOldestPolicy0);
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread(threadGroup0, "+30Y+2&");
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      ScheduledFuture<?> scheduledFuture0 = scheduledThreadPoolExecutor0.schedule((Runnable) mockThread0, (long) 0, timeUnit0);
      Predicate<byte[][]> predicate5 = Predicate.isEqual((Object) scheduledFuture0);
      Object object1 = new Object();
      Predicate<Object> predicate6 = Predicate.isEqual(object1);
      Predicate<byte[][]> predicate7 = predicate5.or(predicate6);
      Predicate<byte[][]> predicate8 = predicate3.negate();
      Predicate<byte[][]> predicate9 = predicate8.negate();
      predicate7.and(predicate9);
      Predicate<Object> predicate10 = Predicate.isEqual((Object) "+30Y+2&");
      boolean boolean0 = linkedList0.removeIf(predicate10);
      LinkedHashSet<byte[][]> linkedHashSet0 = new LinkedHashSet<byte[][]>();
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList4 = new LinkedList<byte[][]>(linkedList0);
      FBResultSet fBResultSet1 = new FBResultSet(fBResultSet0.xsqlvars, linkedList2);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList4, fBResultSet1);
      fBCachedFetcher0.last();
      boolean boolean1 = fBCachedFetcher0.relative(0);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.363132203143378
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort((Comparator<? super byte[][]>) null);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.updateRow((byte[][]) null);
      try { 
        fBResultSet0.cancelRowUpdates();
        fail("Expecting exception: FBResultSetNotUpdatableException");
      
      } catch(FBResultSetNotUpdatableException e) {
         //
         // Underlying ResultSet is not updatable.
         //
         verifyException("org.firebirdsql.jdbc.AbstractResultSet", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.352641895713288
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.offerLast((byte[][]) null);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      FBManagedConnection fBManagedConnection0 = null;
      FileSystemHandling.shouldAllThrowIOExceptions();
      fBCachedFetcher0.next();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection((FBManagedConnection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.2218396677739918
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.addLast((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      boolean boolean0 = fBCachedFetcher0.isAfterLast();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.611642799829762
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      fBCachedFetcher0.deleteRow();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "H.zNk5");
      fBCachedFetcher0.setFetchSize((-1010));
      fBCachedFetcher0.isLast();
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals((-1010), int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.3638159780372976
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[2][5];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)100;
      linkedList1.add(byteArray0);
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("mS0qq");
      linkedList1.removeFirstOccurrence(jMXPrincipal0);
      linkedList1.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, fBResultSet0);
      fBCachedFetcher0.absolute(103);
      fBCachedFetcher0.next();
      fBCachedFetcher0.previous();
      linkedList0.add(byteArray0);
      fBCachedFetcher0.isEmpty();
      DummyCallableStatementMetaData dummyCallableStatementMetaData0 = new DummyCallableStatementMetaData();
      assertFalse(dummyCallableStatementMetaData0.canGetSelectableInformation());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.5010022021098646
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[2][5];
      byte[] byteArray1 = new byte[3];
      linkedList1.add(byteArray0);
      byteArray1[0] = (byte)100;
      linkedList1.add(byteArray0);
      linkedList1.addLast(byteArray0);
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("mS0qq");
      linkedList1.removeFirstOccurrence(jMXPrincipal0);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      linkedList2.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList2);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList2, fBResultSet0);
      fBCachedFetcher0.absolute(1);
      fBCachedFetcher0.next();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.getRowNum();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      GDSType.getType("org.firebirdsql.jdbc.FBCachedFetcher$1");
      FBConnectionProperties fBConnectionProperties0 = new FBConnectionProperties();
      FBManagedConnectionFactory fBManagedConnectionFactory0 = null;
      try {
        fBManagedConnectionFactory0 = new FBManagedConnectionFactory((GDSType) null, fBConnectionProperties0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jca.FBManagedConnectionFactory", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.329762467869229
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.insertRow((byte[][]) null);
      assertEquals(2, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.2218396677739918
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      FBManagedConnection fBManagedConnection0 = null;
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator();
      fBCachedFetcher0.next();
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = null;
      try {
        internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator(internalTransactionCoordinator0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.InternalTransactionCoordinator$MetaDataTransactionCoordinator", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.2318372046300308
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedHashSet<FBCachedBlobField> linkedHashSet0 = new LinkedHashSet<FBCachedBlobField>();
      linkedList0.containsAll(linkedHashSet0);
      linkedList0.stream();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[8][3];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte) (-12);
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte)0;
      boolean boolean0 = linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.first();
      fBCachedFetcher0.last();
      boolean boolean1 = fBCachedFetcher0.isFirst();
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.deepCopy();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, databaseParameterBuffer0, isc_db_handle_impl0, gDSHelper_GDSHelperErrorListener0);
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-44);
      byte byte0 = (byte) (-65);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray1 = new byte[10][0];
      byteArray1[0] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray1[1] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray1[2] = gDSHelper0.BLOB_LENGTH_REQUEST;
      linkedList0.push(byteArray1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.9983916035564593
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      SynchronousQueue<byte[][]> synchronousQueue0 = new SynchronousQueue<byte[][]>();
      linkedList0.addAll((Collection<? extends byte[][]>) synchronousQueue0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList1);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      Predicate.isEqual((Object) null);
      Predicate<Object> predicate3 = predicate0.negate();
      predicate2.or(predicate3);
      Object object0 = new Object();
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ThreadPoolExecutor.DiscardOldestPolicy threadPoolExecutor_DiscardOldestPolicy0 = new ThreadPoolExecutor.DiscardOldestPolicy();
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread(threadGroup0, "+30Y+2&");
      Object object1 = new Object();
      Predicate.isEqual(object1);
      Predicate<Object> predicate4 = Predicate.isEqual((Object) "+30Y+2&");
      linkedList0.removeIf(predicate4);
      LinkedHashSet<byte[][]> linkedHashSet0 = new LinkedHashSet<byte[][]>();
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList4 = new LinkedList<byte[][]>(linkedList0);
      linkedList4.add((byte[][]) null);
      FBResultSet fBResultSet1 = new FBResultSet(fBResultSet0.xsqlvars, linkedList2);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList4, fBResultSet1);
      boolean boolean1 = fBCachedFetcher0.last();
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7824268046877836
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.deepCopy();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      databaseParameterBufferImp0.removeExtensionParams();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      databaseParameterBufferImp0.getArgumentAsInt(72);
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.hasArgument(0);
      databaseParameterBufferImp1.getArgumentAsString(2482);
      databaseParameterBufferImp0.addArgument(2242, "");
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.previous();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.3539190349214616
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.toArray();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      FBManagedConnection fBManagedConnection0 = null;
      fBCachedFetcher0.updateRow((byte[][]) null);
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection((FBManagedConnection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[2][5];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)90;
      byteArray1[1] = (byte) (-61);
      byteArray1[2] = (byte) (-2);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte) (-61);
      byteArray2[1] = (byte) (-61);
      byteArray2[2] = (byte) (-61);
      byteArray2[3] = (byte) (-2);
      byteArray2[4] = (byte) (-61);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      byteArray0[1] = byteArray2;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.0204142811723194
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("org.firebirdsql.jdbc.AbstractConnection");
      linkedList0.iterator();
      linkedList0.removeFirstOccurrence(jMXPrincipal0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isFirst();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.isBeforeFirst();
      boolean boolean0 = fBCachedFetcher0.isBeforeFirst();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.221751559072405
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedHashSet<FBCachedBlobField> linkedHashSet0 = new LinkedHashSet<FBCachedBlobField>();
      linkedList0.containsAll(linkedHashSet0);
      linkedList0.stream();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[8][3];
      byte[] byteArray1 = new byte[4];
      linkedList0.add(byteArray0);
      byteArray1[0] = (byte) (-12);
      byteArray1[1] = (byte)21;
      byteArray1[2] = (byte)21;
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.next();
      fBCachedFetcher0.isBeforeFirst();
      boolean boolean0 = fBCachedFetcher0.isAfterLast();
      boolean boolean1 = fBCachedFetcher0.isLast();
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.7911998103932196
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[2][5];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)90;
      linkedList1.add(byteArray0);
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("ZmS0qq");
      linkedList1.removeFirstOccurrence(jMXPrincipal0);
      linkedList1.addAll((Collection<? extends byte[][]>) linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isFirst();
      fBCachedFetcher0.isBeforeFirst();
      boolean boolean1 = fBCachedFetcher0.isBeforeFirst();
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.2988759579769416
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      int int0 = fBCachedFetcher0.getRowNum();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = (DatabaseParameterBufferImp)databaseParameterBufferImp1.deepCopy();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isEmpty();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      byte[] byteArray0 = new byte[1];
      databaseParameterBufferImp3.addArgument((int) (byte) (-45), byteArray0);
      databaseParameterBufferImp3.addArgument(335544707, (int) (byte) (-45));
      byteArray0[0] = (byte) (-45);
      databaseParameterBufferImp3.addArgument((int) (byte) (-45), byteArray0);
      databaseParameterBufferImp2.addArgument((int) (byte) (-45), (String) null);
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.getArgumentAsInt((byte) (-45));
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp7.addArgument((-2819), (int) (byte) (-45));
      String string0 = databaseParameterBufferImp2.getArgumentAsString((-2819));
      assertNull(string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[2][5];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)90;
      linkedList1.add(byteArray0);
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("mS0qq");
      linkedList1.removeFirstOccurrence(jMXPrincipal0);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      boolean boolean0 = linkedList2.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList2);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList2, fBResultSet0);
      boolean boolean1 = fBCachedFetcher0.next();
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.1437065979373684
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[][] byteArray0 = new byte[2][5];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.afterLast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.0332653667861926
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[4][3];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      byteArray0[1] = byteArray1;
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte)0;
      byteArray2[1] = (byte)2;
      byteArray2[2] = (byte)0;
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator0);
      byteArray0[2] = byteArray2;
      byte[] byteArray3 = new byte[1];
      byteArray3[0] = (byte)0;
      byteArray0[3] = byteArray3;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.updateRow(byteArray0);
      fBCachedFetcher0.updateRow(byteArray0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.deepCopy();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      databaseParameterBufferImp0.getArgumentAsInt(2);
      DatabaseParameterBuffer databaseParameterBuffer1 = databaseParameterBufferImp0.removeExtensionParams();
      databaseParameterBuffer0.addArgument(2, 72);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      databaseParameterBuffer0.getArgumentAsInt(72);
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.addArgument((-2353), 0);
      databaseParameterBufferImp1.hasArgument(0);
      databaseParameterBuffer0.addArgument(0);
      databaseParameterBuffer1.getArgumentAsString(72);
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.removeExtensionParams();
      databaseParameterBufferImp2.addArgument(1);
      databaseParameterBuffer1.addArgument((-2));
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      databaseParameterBufferImp0.getArgumentAsInt((-3442));
      databaseParameterBuffer1.getArgumentAsString((-680));
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[7][0];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)88;
      byteArray1[1] = (byte)81;
      byteArray1[2] = (byte)79;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte)79;
      byteArray2[1] = (byte)88;
      byteArray2[2] = (byte)81;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[8];
      byteArray3[0] = (byte)81;
      byteArray3[1] = (byte)81;
      byteArray3[2] = (byte)88;
      byteArray3[3] = (byte)81;
      byteArray3[4] = (byte)43;
      byteArray3[5] = (byte)88;
      byteArray3[6] = (byte)88;
      byteArray3[7] = (byte)81;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[2];
      byteArray4[0] = (byte)43;
      byteArray4[1] = (byte)81;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[9];
      byteArray5[0] = (byte)43;
      byteArray5[1] = (byte)98;
      byteArray5[2] = (byte)79;
      byteArray5[3] = (byte)88;
      byteArray5[4] = (byte)4;
      byteArray5[5] = (byte)88;
      byteArray5[6] = (byte)81;
      byteArray5[7] = (byte)79;
      byteArray5[8] = (byte)88;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[1];
      byteArray6[0] = (byte)4;
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[5];
      byteArray7[0] = (byte)79;
      byteArray7[1] = (byte)4;
      byteArray7[2] = (byte)88;
      byteArray7[3] = (byte)79;
      byteArray7[4] = (byte)4;
      byteArray0[6] = byteArray7;
      linkedList1.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute(2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5504384368836852
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.deepCopy();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      databaseParameterBufferImp0.getArgumentAsInt(2);
      DatabaseParameterBuffer databaseParameterBuffer1 = databaseParameterBufferImp0.removeExtensionParams();
      databaseParameterBuffer0.addArgument(2, 72);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      databaseParameterBuffer0.getArgumentAsInt(72);
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.addArgument((-2353), 0);
      databaseParameterBufferImp1.hasArgument(0);
      databaseParameterBuffer0.addArgument(0);
      databaseParameterBuffer1.getArgumentAsString(72);
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer2 = databaseParameterBufferImp2.removeExtensionParams();
      databaseParameterBufferImp2.getArgumentAsString(335544334);
      databaseParameterBufferImp0.getLength();
      databaseParameterBufferImp2.addArgument(1);
      databaseParameterBuffer1.addArgument((-2));
      databaseParameterBuffer2.removeArgument((-1461));
      isc_stmt_handle_impl0.setUpdateCount((-583));
      databaseParameterBuffer2.getArgumentAsInt(1);
      databaseParameterBufferImp0.getArgumentAsString(72);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.absolute(3626);
      try { 
        fBCachedFetcher0.absolute(0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.deepCopy();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      databaseParameterBufferImp0.removeExtensionParams();
      databaseParameterBuffer0.addArgument(2, 335544565);
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, databaseParameterBuffer0, isc_db_handle_impl0, gDSHelper_GDSHelperErrorListener0);
      gDSHelper0.getJavaEncoding();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setStatementType(2);
      databaseParameterBuffer0.getArgumentAsString(16384);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = fBCachedFetcher0.getRowNum();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      SynchronousQueue<byte[][]> synchronousQueue0 = new SynchronousQueue<byte[][]>();
      Object object0 = new Object();
      Predicate.isEqual(object0);
      Predicate<byte[][]> predicate0 = Predicate.isEqual((Object) linkedList0);
      Object object1 = new Object();
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      ThreadGroup threadGroup1 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread("T'vk]}H");
      MockThread mockThread1 = new MockThread(mockThread0, "QzRD7\"x~982OQd<s-a");
      MockThread mockThread2 = new MockThread(threadGroup1, "QzRD7\"x~982OQd<s-a");
      MockThread mockThread3 = new MockThread();
      MockThread mockThread4 = new MockThread(threadGroup1, mockThread3);
      mockThread4.getContextClassLoader();
      MockThread mockThread5 = new MockThread(threadGroup1, mockThread4, "QzRD7\"x~982OQd<s-a");
      MockThread mockThread6 = new MockThread(threadGroup0, "QzRD7\"x~982OQd<s-a");
      predicate0.negate();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Predicate<byte[][]> predicate1 = predicate0.negate();
      Predicate<byte[][]> predicate2 = predicate1.negate();
      predicate1.and(predicate2);
      Predicate.isEqual((Object) "QzRD7\"x~982OQd<s-a");
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      fBCachedFetcher0.getRowNum();
      System.setCurrentTimeMillis(4204L);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      SynchronousQueue<byte[][]> synchronousQueue0 = new SynchronousQueue<byte[][]>();
      Object object0 = new Object();
      Predicate.isEqual(object0);
      Predicate<byte[][]> predicate0 = Predicate.isEqual((Object) linkedList0);
      Object object1 = new Object();
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      ThreadGroup threadGroup1 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread("T'vk]}H");
      MockThread mockThread1 = new MockThread(mockThread0, "QzRD7\"'~98OQd<s-a");
      MockThread mockThread2 = new MockThread(threadGroup1, "QzRD7\"'~98OQd<s-a");
      MockThread mockThread3 = new MockThread();
      MockThread mockThread4 = new MockThread(threadGroup1, mockThread3);
      mockThread4.getContextClassLoader();
      MockThread mockThread5 = new MockThread(threadGroup1, mockThread4, "QzRD7\"'~98OQd<s-a");
      MockThread mockThread6 = new MockThread(threadGroup0, "QzRD7\"'~98OQd<s-a");
      predicate0.negate();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Predicate<byte[][]> predicate1 = predicate0.negate();
      Predicate<byte[][]> predicate2 = predicate1.negate();
      predicate1.and(predicate2);
      Predicate.isEqual((Object) "QzRD7\"'~98OQd<s-a");
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      fBCachedFetcher0.getRowNum();
      System.setCurrentTimeMillis(4204L);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.995295628324261
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      boolean boolean0 = linkedList0.add((byte[][]) null);
      SynchronousQueue<byte[][]> synchronousQueue0 = new SynchronousQueue<byte[][]>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList1);
      Object object0 = new Object();
      Predicate<Object> predicate1 = Predicate.isEqual(object0);
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<byte[][]> predicate4 = Predicate.isEqual((Object) linkedList0);
      Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate5 = predicate0.negate();
      predicate3.or(predicate5);
      Object object1 = new Object();
      ThreadPoolExecutor.DiscardOldestPolicy threadPoolExecutor_DiscardOldestPolicy0 = new ThreadPoolExecutor.DiscardOldestPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(14, threadPoolExecutor_DiscardOldestPolicy0);
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread(threadGroup0, "+30Y+2&");
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      scheduledThreadPoolExecutor0.schedule((Runnable) mockThread0, (long) 14, timeUnit0);
      Predicate<byte[][]> predicate6 = predicate4.negate();
      Object object2 = new Object();
      Predicate<Object> predicate7 = Predicate.isEqual(object2);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "l_hmbMs:Ug");
      Predicate<byte[][]> predicate8 = predicate6.or(predicate7);
      Predicate<byte[][]> predicate9 = predicate8.negate();
      Predicate<byte[][]> predicate10 = predicate9.negate();
      predicate8.and(predicate10);
      Predicate<Object> predicate11 = Predicate.isEqual((Object) "+30Y+2&");
      linkedList0.removeIf(predicate11);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean1 = fBCachedFetcher0.relative(14);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.7754337976947767
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      databaseParameterBufferImp1.getArgumentAsInt(2);
      databaseParameterBufferImp0.addArgument((-3444), 72);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      databaseParameterBufferImp0.getArgumentAsInt(2);
      databaseParameterBufferImp0.hasArgument((-3200));
      isc_stmt_handle_impl0.setUpdateCount((-1));
      databaseParameterBufferImp0.getArgumentAsString(0);
      databaseParameterBufferImp1.addArgument(2, (String) null);
      isc_stmt_handle_impl0.setSingletonResult(false);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[4][9];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-44);
      byteArray1[1] = (byte)103;
      byteArray1[2] = (byte)4;
      byteArray1[3] = (byte) (-49);
      byteArray1[4] = (byte) (-30);
      byteArray1[5] = (byte) (-16);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[1];
      byteArray2[0] = (byte)4;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[0];
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[4];
      byteArray4[0] = (byte) (-16);
      byteArray4[1] = (byte) (-30);
      byteArray4[2] = (byte)4;
      byteArray4[3] = (byte) (-30);
      byteArray0[3] = byteArray4;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = (DatabaseParameterBufferImp)databaseParameterBufferImp1.deepCopy();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isEmpty();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      byte[] byteArray0 = new byte[1];
      databaseParameterBufferImp3.addArgument((int) (byte) (-45), byteArray0);
      byteArray0[0] = (byte) (-45);
      databaseParameterBufferImp2.getLength();
      databaseParameterBufferImp3.addArgument((int) (byte) (-45), byteArray0);
      databaseParameterBufferImp2.addArgument((int) (byte) (-45), (String) null);
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.getArgumentAsInt((byte) (-45));
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp7.addArgument((-2819), (int) (byte) (-45));
      String string0 = databaseParameterBufferImp2.getArgumentAsString((-2819));
      assertNull(string0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.2670824025440988
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[2][6];
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte) (-32);
      byteArray1[1] = (byte)72;
      byteArray1[2] = (byte)9;
      byteArray1[3] = (byte) (-3);
      byteArray1[4] = (byte) (-49);
      byteArray1[5] = (byte)1;
      byteArray1[6] = (byte)38;
      byteArray1[7] = (byte) (-2);
      byteArray1[8] = (byte)89;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte)1;
      byteArray2[1] = (byte) (-3);
      byteArray2[2] = (byte) (-17);
      byteArray0[1] = byteArray2;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.beforeFirst();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-37);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "jQst<+#.3GAw");
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) null, (FBObjectListener.FetcherListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.8195163165257857
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[2][5];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)90;
      byteArray1[1] = (byte) (-61);
      byteArray1[2] = (byte) (-2);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte) (-38);
      byteArray2[1] = (byte) (-61);
      byteArray2[3] = (byte) (-2);
      byteArray2[4] = (byte) (-61);
      byteArray0[1] = byteArray2;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.relative((byte) (-2));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.8809457317913751
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      SynchronousQueue<byte[][]> synchronousQueue0 = new SynchronousQueue<byte[][]>();
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList0);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      Predicate<byte[][]> predicate2 = Predicate.isEqual((Object) linkedList0);
      Object object0 = new Object();
      Predicate.isEqual(object0);
      predicate1.and(predicate0);
      Predicate<Object> predicate3 = predicate0.negate();
      predicate1.or(predicate3);
      Object object1 = new Object();
      MockThread mockThread0 = new MockThread("+30Y+2&");
      Predicate<byte[][]> predicate4 = predicate2.negate();
      Object object2 = new Object();
      Predicate.isEqual(object2);
      Predicate<byte[][]> predicate5 = predicate4.negate();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer0 = new Integer(0);
      predicate0.negate();
      predicate2.negate();
      Predicate<Object> predicate6 = predicate0.negate();
      predicate5.negate();
      predicate5.negate();
      linkedList0.add((byte[][]) null);
      predicate5.and(predicate0);
      Predicate<byte[][]> predicate7 = predicate2.and(predicate2);
      predicate2.or(predicate7);
      Predicate.isEqual((Object) predicate6);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean1 = fBCachedFetcher0.relative((-89));
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      System.setCurrentTimeMillis(1L);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[7][1];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte) (-5);
      byteArray1[1] = (byte) (-18);
      byteArray1[2] = (byte)41;
      byteArray1[3] = (byte)49;
      byteArray1[4] = (byte) (-96);
      byteArray1[5] = (byte)2;
      byteArray1[6] = (byte)4;
      byteArray1[7] = (byte) (-115);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[9];
      byteArray2[0] = (byte) (-115);
      byteArray2[1] = (byte) (-96);
      byteArray2[2] = (byte) (-96);
      byteArray2[3] = (byte)41;
      byteArray2[4] = (byte) (-5);
      byteArray2[5] = (byte)4;
      byteArray2[6] = (byte) (-18);
      byteArray2[7] = (byte)2;
      byteArray2[8] = (byte)4;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[8];
      byteArray3[0] = (byte) (-96);
      byteArray3[1] = (byte) (-5);
      byteArray3[2] = (byte)49;
      byteArray3[3] = (byte) (-5);
      byteArray3[4] = (byte)49;
      byteArray3[5] = (byte) (-18);
      byteArray3[6] = (byte) (-5);
      byteArray3[7] = (byte)49;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[0];
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[4];
      byteArray5[0] = (byte) (-18);
      byteArray5[1] = (byte)49;
      byteArray5[2] = (byte) (-18);
      byteArray5[3] = (byte)2;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[5];
      byteArray6[0] = (byte)41;
      byteArray6[1] = (byte)49;
      byteArray6[2] = (byte)49;
      byteArray6[3] = (byte) (-18);
      byteArray6[4] = (byte) (-96);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[4];
      byteArray7[0] = (byte)4;
      byteArray7[1] = (byte)2;
      byteArray7[2] = (byte)103;
      byteArray7[3] = (byte) (-115);
      byteArray0[6] = byteArray7;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = (DatabaseParameterBufferImp)databaseParameterBufferImp0.deepCopy();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      databaseParameterBufferImp0.getArgumentAsInt(2);
      DatabaseParameterBufferImp databaseParameterBufferImp2 = (DatabaseParameterBufferImp)databaseParameterBufferImp0.removeExtensionParams();
      databaseParameterBufferImp1.addArgument(2, 72);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      databaseParameterBufferImp2.getArgumentAsInt(2);
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.addArgument(2, 2);
      databaseParameterBufferImp3.hasArgument((-2353));
      databaseParameterBufferImp0.getArgumentAsInt(0);
      databaseParameterBufferImp3.addArgument(0);
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.removeExtensionParams();
      databaseParameterBufferImp0.addArgument((-2353));
      databaseParameterBufferImp4.addArgument(1);
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl2.setUpdateCount(0);
      databaseParameterBufferImp4.getArgumentAsInt(335544334);
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp5.getArgumentAsString(72);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[8][3];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)79;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[2];
      byteArray2[0] = (byte)79;
      byteArray2[1] = (byte)79;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[9];
      byteArray3[0] = (byte)79;
      byteArray3[1] = (byte)42;
      byteArray3[2] = (byte) (-123);
      byteArray3[3] = (byte)79;
      byteArray3[4] = (byte)79;
      byteArray3[5] = (byte)79;
      byteArray3[6] = (byte)79;
      byteArray3[7] = (byte)79;
      byteArray3[8] = (byte)79;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[1];
      byteArray4[0] = (byte)79;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[5];
      byteArray5[0] = (byte)79;
      byteArray5[1] = (byte)79;
      byteArray5[2] = (byte)79;
      byteArray5[3] = (byte)79;
      byteArray5[4] = (byte)42;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[3];
      byteArray6[0] = (byte) (-123);
      byteArray6[1] = (byte)42;
      byteArray6[2] = (byte) (-51);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[4];
      byteArray7[0] = (byte)118;
      byteArray7[1] = (byte) (-51);
      byteArray7[2] = (byte)42;
      byteArray7[3] = (byte) (-123);
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[7];
      byteArray8[0] = (byte)42;
      byteArray8[1] = (byte)79;
      byteArray8[2] = (byte) (-51);
      byteArray8[3] = (byte)42;
      byteArray8[4] = (byte)42;
      byteArray8[5] = (byte)61;
      byteArray8[6] = (byte) (-48);
      byteArray0[7] = byteArray8;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.first();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.9469989525125873
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      fBResultSet0.clearWarnings();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int int0 = 0;
      String string0 = "}wO:Pvo7oB";
      URI uRI0 = MockURI.aHttpURI;
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI scheme is not \"file\"
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.519606139405172
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.relative(1627);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      fBCachedFetcher0.setFetchSize((-733));
      byte[][] byteArrayArray0 = null;
      fBCachedFetcher0.previous();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow((byte[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.deepCopy();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, databaseParameterBuffer0, isc_db_handle_impl0, gDSHelper_GDSHelperErrorListener0);
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-44);
      byte byte0 = (byte) (-65);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.3585555441044765
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.close();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      FBManagedConnection fBManagedConnection0 = null;
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection((FBManagedConnection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      SynchronousQueue<byte[][]> synchronousQueue0 = new SynchronousQueue<byte[][]>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      Object object0 = new Object();
      Predicate.isEqual(object0);
      Predicate<byte[][]> predicate0 = Predicate.isEqual((Object) linkedList0);
      Object object1 = new Object();
      ThreadPoolExecutor.DiscardOldestPolicy threadPoolExecutor_DiscardOldestPolicy0 = new ThreadPoolExecutor.DiscardOldestPolicy();
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      ThreadGroup threadGroup1 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread("T'vk]}H");
      MockThread mockThread1 = new MockThread(mockThread0, "QzRD7\"'~98OQd<s-a");
      MockThread mockThread2 = new MockThread(threadGroup1, "QzRD7\"'~98OQd<s-a");
      MockThread mockThread3 = new MockThread(threadGroup1, mockThread2, "QzRD7\"'~98OQd<s-a", 0L);
      MockThread mockThread4 = new MockThread(threadGroup1, mockThread3);
      mockThread4.getContextClassLoader();
      MockThread mockThread5 = new MockThread(threadGroup1, mockThread4, "QzRD7\"'~98OQd<s-a");
      MockThread mockThread6 = new MockThread(threadGroup0, "QzRD7\"'~98OQd<s-a");
      predicate0.negate();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Predicate<byte[][]> predicate1 = predicate0.negate();
      Predicate.isEqual((Object) "T'vk]}H");
      Predicate<byte[][]> predicate2 = predicate1.negate();
      predicate1.and(predicate2);
      Predicate.isEqual((Object) "QzRD7\"'~98OQd<s-a");
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals(0, int0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.9557135998277697
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Object object0 = new Object();
      ThreadPoolExecutor.DiscardOldestPolicy threadPoolExecutor_DiscardOldestPolicy0 = new ThreadPoolExecutor.DiscardOldestPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(0, threadPoolExecutor_DiscardOldestPolicy0);
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      ThreadGroup threadGroup1 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread("T'vk0]}H");
      MockThread mockThread1 = new MockThread();
      threadPoolExecutor_DiscardOldestPolicy0.rejectedExecution(mockThread1, scheduledThreadPoolExecutor0);
      MockThread mockThread2 = new MockThread(threadGroup1, "QzRD7\"'~98OQd<s-a");
      MockThread mockThread3 = new MockThread("QzRD7\"'~98OQd<s-a");
      MockThread.reset();
      mockThread3.getContextClassLoader();
      MockThread mockThread4 = new MockThread((ThreadGroup) null, (Runnable) null);
      MockThread mockThread5 = new MockThread(threadGroup1, mockThread4, "QzRD7\"'~98OQd<s-a");
      scheduledThreadPoolExecutor0.execute(mockThread5);
      threadPoolExecutor_DiscardOldestPolicy0.rejectedExecution(mockThread5, scheduledThreadPoolExecutor0);
      MockThread mockThread6 = new MockThread(threadGroup0, "QzRD7\"'~98OQd<s-a");
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      scheduledThreadPoolExecutor0.schedule((Runnable) mockThread6, (long) 0, timeUnit0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow((byte[][]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isAfterLast();
      byte[][] byteArray0 = new byte[1][9];
      linkedList0.add(byteArray0);
      fBCachedFetcher0.isLast();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      GDSType gDSType0 = GDSType.getType("PURE_JAVA");
      EmbeddedGDSImpl embeddedGDSImpl0 = null;
      try {
        embeddedGDSImpl0 = new EmbeddedGDSImpl(gDSType0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.6675530205253588
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      SynchronousQueue<byte[][]> synchronousQueue0 = new SynchronousQueue<byte[][]>();
      Object object0 = new Object();
      Predicate<byte[][]> predicate0 = Predicate.isEqual((Object) linkedList0);
      Object object1 = new Object();
      ThreadPoolExecutor.DiscardOldestPolicy threadPoolExecutor_DiscardOldestPolicy0 = new ThreadPoolExecutor.DiscardOldestPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(10, threadPoolExecutor_DiscardOldestPolicy0);
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      ThreadGroup threadGroup1 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread("QzRD7\"'~98OQd<s-a");
      MockThread mockThread1 = new MockThread(mockThread0, "QzRD7\"'~98OQd<s-a");
      threadPoolExecutor_DiscardOldestPolicy0.rejectedExecution(mockThread1, scheduledThreadPoolExecutor0);
      MockThread mockThread2 = new MockThread(threadGroup1, "QzRD7\"'~98OQd<s-a");
      MockThread mockThread3 = new MockThread(threadGroup1, mockThread2, "QzRD7\"'~98OQd<s-a", (-39L));
      MockThread mockThread4 = new MockThread(threadGroup1, mockThread3);
      ClassLoader.getSystemClassLoader();
      MockThread mockThread5 = new MockThread(threadGroup1, mockThread4, "QzRD7\"'~98OQd<s-a");
      scheduledThreadPoolExecutor0.execute(mockThread5);
      Thread[] threadArray0 = new Thread[9];
      threadArray0[0] = (Thread) mockThread2;
      ThreadGroup threadGroup2 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread6 = new MockThread(threadGroup2, threadArray0[0], "org.firebirdsql.jdbc.FBCachedFetcher$1");
      threadArray0[1] = (Thread) mockThread6;
      threadArray0[2] = (Thread) mockThread1;
      threadArray0[3] = (Thread) mockThread3;
      threadArray0[4] = (Thread) mockThread2;
      threadArray0[5] = (Thread) mockThread5;
      threadArray0[6] = (Thread) mockThread5;
      threadArray0[7] = (Thread) mockThread4;
      threadArray0[8] = (Thread) mockThread2;
      MockThread.enumerate(threadArray0);
      threadPoolExecutor_DiscardOldestPolicy0.rejectedExecution(mockThread5, scheduledThreadPoolExecutor0);
      mockThread5.run();
      scheduledThreadPoolExecutor0.execute(mockThread2);
      threadPoolExecutor_DiscardOldestPolicy0.rejectedExecution(mockThread0, scheduledThreadPoolExecutor0);
      MockThread mockThread7 = new MockThread(threadGroup0, "q");
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      scheduledThreadPoolExecutor0.schedule((Runnable) mockThread0, (-1336L), timeUnit0);
      Predicate<byte[][]> predicate1 = predicate0.negate();
      predicate1.negate();
      predicate0.negate();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.relative(10);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.deepCopy();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      databaseParameterBufferImp0.getArgumentAsInt(2);
      DatabaseParameterBuffer databaseParameterBuffer1 = databaseParameterBufferImp0.removeExtensionParams();
      databaseParameterBuffer0.addArgument(2, 72);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      databaseParameterBuffer0.getArgumentAsInt(72);
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      boolean boolean0 = databaseParameterBufferImp1.hasArgument(0);
      databaseParameterBuffer1.getArgumentAsString(72);
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.addArgument(1);
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, databaseParameterBuffer0, isc_db_handle_impl0, gDSHelper_GDSHelperErrorListener0);
      databaseParameterBuffer1.addArgument((-2));
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setUpdateCount(0);
      databaseParameterBufferImp0.getArgumentAsInt((-3442));
      databaseParameterBuffer1.getArgumentAsString((-680));
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean1 = fBCachedFetcher0.absolute((-2));
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.0069724918931833
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.afterLast();
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      doReturn((FBConnectionRequestInfo) null).when(fBManagedConnection0).getConnectionRequestInfo();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection(fBManagedConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.1084013788541878
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.deepCopy();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, databaseParameterBuffer0, isc_db_handle_impl0, gDSHelper_GDSHelperErrorListener0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      databaseParameterBuffer0.getArgumentAsString(16384);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.beforeFirst();
      assertTrue(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.6036051515160747
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      SynchronousQueue<byte[][]> synchronousQueue0 = new SynchronousQueue<byte[][]>();
      Object object0 = new Object();
      Predicate<byte[][]> predicate0 = Predicate.isEqual((Object) linkedList0);
      Object object1 = new Object();
      ThreadPoolExecutor.DiscardOldestPolicy threadPoolExecutor_DiscardOldestPolicy0 = new ThreadPoolExecutor.DiscardOldestPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(0, threadPoolExecutor_DiscardOldestPolicy0);
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      ThreadGroup threadGroup1 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread("QzRD7\"'~98OQd<s-a");
      MockThread mockThread1 = new MockThread(mockThread0, "QzRD7\"'~98OQd<s-a");
      threadPoolExecutor_DiscardOldestPolicy0.rejectedExecution(mockThread1, scheduledThreadPoolExecutor0);
      MockThread mockThread2 = new MockThread(threadGroup1, "QzRD7\"'~98OQd<s-a");
      MockThread mockThread3 = new MockThread(threadGroup1, mockThread2, "QzRD7\"'~98OQd<s-a", (-39L));
      MockThread mockThread4 = new MockThread(threadGroup1, mockThread3);
      ClassLoader.getSystemClassLoader();
      MockThread mockThread5 = new MockThread(threadGroup1, mockThread4, "QzRD7\"'~98OQd<s-a");
      scheduledThreadPoolExecutor0.execute(mockThread5);
      Thread[] threadArray0 = new Thread[9];
      threadArray0[0] = (Thread) mockThread2;
      ThreadGroup threadGroup2 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread6 = new MockThread(threadGroup2, threadArray0[0], "org.firebirdsql.jdbc.FBCachedFetcher$1");
      threadArray0[1] = (Thread) mockThread6;
      threadArray0[2] = (Thread) mockThread1;
      threadArray0[3] = (Thread) mockThread3;
      threadArray0[4] = (Thread) mockThread2;
      threadArray0[5] = (Thread) mockThread5;
      threadArray0[6] = (Thread) mockThread5;
      threadArray0[7] = (Thread) mockThread4;
      threadArray0[8] = (Thread) mockThread2;
      MockThread.enumerate(threadArray0);
      threadPoolExecutor_DiscardOldestPolicy0.rejectedExecution(mockThread5, scheduledThreadPoolExecutor0);
      mockThread5.run();
      scheduledThreadPoolExecutor0.execute(mockThread2);
      threadPoolExecutor_DiscardOldestPolicy0.rejectedExecution(mockThread0, scheduledThreadPoolExecutor0);
      MockThread mockThread7 = new MockThread(threadGroup0, "q");
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      scheduledThreadPoolExecutor0.schedule((Runnable) mockThread0, (-1336L), timeUnit0);
      Predicate<byte[][]> predicate1 = predicate0.negate();
      predicate1.negate();
      predicate0.negate();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.relative(0);
      assertFalse(boolean0);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.6036051515160747
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Object object0 = new Object();
      ThreadPoolExecutor.DiscardOldestPolicy threadPoolExecutor_DiscardOldestPolicy0 = new ThreadPoolExecutor.DiscardOldestPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(0, threadPoolExecutor_DiscardOldestPolicy0);
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      ThreadGroup threadGroup1 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread("T'vk0d}J");
      MockThread mockThread1 = new MockThread();
      threadPoolExecutor_DiscardOldestPolicy0.rejectedExecution(mockThread1, scheduledThreadPoolExecutor0);
      MockThread mockThread2 = new MockThread(threadGroup1, "QzRD7\"'~98OQd<s-a");
      MockThread mockThread3 = new MockThread("QzRD7\"'~98OQd<s-a");
      scheduledThreadPoolExecutor0.getTaskCount();
      ClassLoader classLoader0 = mockThread2.getContextClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      mockThread3.setContextClassLoader(classLoader1);
      MockThread.reset();
      mockThread3.getContextClassLoader();
      MockThread mockThread4 = new MockThread((ThreadGroup) null, (Runnable) null);
      MockThread mockThread5 = new MockThread(threadGroup1, mockThread4, "QzRD7\"'~98OQd<s-a");
      Thread[] threadArray0 = new Thread[6];
      threadArray0[0] = (Thread) mockThread5;
      threadArray0[1] = (Thread) mockThread2;
      threadArray0[2] = (Thread) mockThread4;
      threadArray0[3] = (Thread) mockThread3;
      threadArray0[4] = (Thread) mockThread1;
      threadArray0[5] = (Thread) mockThread3;
      MockThread.enumerate(threadArray0);
      scheduledThreadPoolExecutor0.execute(mockThread5);
      threadPoolExecutor_DiscardOldestPolicy0.rejectedExecution(mockThread5, scheduledThreadPoolExecutor0);
      MockThread mockThread6 = new MockThread((ThreadGroup) null, "QzRD7\"'~98OQd<s-a");
      mockThread6.setUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      scheduledThreadPoolExecutor0.schedule((Runnable) mockThread6, (long) 0, timeUnit0);
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean1 = fBCachedFetcher0.last();
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.deepCopy();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      databaseParameterBufferImp0.getArgumentAsInt(2);
      DatabaseParameterBuffer databaseParameterBuffer1 = databaseParameterBufferImp0.removeExtensionParams();
      databaseParameterBuffer0.addArgument(2, 72);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      int int0 = FBFetcher.MAX_FETCH_ROWS;
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.addArgument((-2353), 400);
      boolean boolean0 = databaseParameterBufferImp1.hasArgument(400);
      databaseParameterBuffer0.addArgument(400);
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      databaseParameterBuffer1.hasArgument(2);
      databaseParameterBufferImp2.addArgument(1);
      databaseParameterBuffer1.addArgument(11);
      isc_stmt_handle_impl0.setUpdateCount(1649);
      databaseParameterBufferImp0.getArgumentAsInt((-3442));
      databaseParameterBuffer1.getArgumentAsString((-680));
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean1 = fBCachedFetcher0.first();
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      SynchronousQueue<byte[][]> synchronousQueue0 = new SynchronousQueue<byte[][]>();
      Object object0 = new Object();
      ThreadPoolExecutor.DiscardOldestPolicy threadPoolExecutor_DiscardOldestPolicy0 = new ThreadPoolExecutor.DiscardOldestPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(0, threadPoolExecutor_DiscardOldestPolicy0);
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      ThreadGroup threadGroup1 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      Thread thread0 = MockThread.currentThread();
      threadPoolExecutor_DiscardOldestPolicy0.rejectedExecution(thread0, scheduledThreadPoolExecutor0);
      MockThread mockThread0 = new MockThread("T'vk]}H");
      MockThread mockThread1 = new MockThread(mockThread0, "QzRD7\"'~98OQd<s-a");
      threadPoolExecutor_DiscardOldestPolicy0.rejectedExecution(mockThread1, scheduledThreadPoolExecutor0);
      MockThread mockThread2 = new MockThread(threadGroup1, "QzRD7\"'~98OQd<s-a");
      MockThread mockThread3 = new MockThread(threadGroup1, mockThread2, "QzRD7\"'~98OQd<s-a", (-39L));
      MockThread mockThread4 = new MockThread(threadGroup1, mockThread3);
      ClassLoader.getSystemClassLoader();
      MockThread mockThread5 = new MockThread(threadGroup1, mockThread4, "QzRD7\"'~98OQd<s-a");
      scheduledThreadPoolExecutor0.execute(mockThread5);
      MockThread mockThread6 = new MockThread(threadGroup0, "QzRD7\"'~98OQd<s-a");
      MockThread.reset();
      mockThread0.getUncaughtExceptionHandler();
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      scheduledThreadPoolExecutor0.schedule((Runnable) mockThread6, (long) 0, timeUnit0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Predicate.isEqual((Object) "QzRD7\"'~98OQd<s-a");
      System.setCurrentTimeMillis((-1455L));
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, fBResultSet0);
      fBCachedFetcher0.next();
      FBCachedFetcher fBCachedFetcher1 = null;
      try {
        fBCachedFetcher1 = new FBCachedFetcher((GDSHelper) null, 0, 0, isc_stmt_handle_impl0, fBResultSet0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.6036051515160747
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Object object0 = new Object();
      ThreadPoolExecutor.DiscardOldestPolicy threadPoolExecutor_DiscardOldestPolicy0 = new ThreadPoolExecutor.DiscardOldestPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(0, threadPoolExecutor_DiscardOldestPolicy0);
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      ThreadGroup threadGroup1 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread("T'vk0]}H");
      MockThread mockThread1 = new MockThread();
      threadPoolExecutor_DiscardOldestPolicy0.rejectedExecution(mockThread1, scheduledThreadPoolExecutor0);
      MockThread mockThread2 = new MockThread(threadGroup1, "QzRD7\"'~98OQd<s-a");
      MockThread mockThread3 = new MockThread("QzRD7\"'~98OQd<s-a");
      ClassLoader classLoader0 = mockThread2.getContextClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      mockThread3.setContextClassLoader(classLoader1);
      MockThread.reset();
      mockThread3.getContextClassLoader();
      MockThread mockThread4 = new MockThread((ThreadGroup) null, (Runnable) null);
      MockThread mockThread5 = new MockThread(threadGroup1, mockThread4, "QzRD7\"'~98OQd<s-a");
      scheduledThreadPoolExecutor0.execute(mockThread5);
      threadPoolExecutor_DiscardOldestPolicy0.rejectedExecution(mockThread5, scheduledThreadPoolExecutor0);
      MockThread mockThread6 = new MockThread(threadGroup0, "QzRD7\"'~98OQd<s-a");
      mockThread6.setUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      scheduledThreadPoolExecutor0.schedule((Runnable) mockThread6, (long) 0, timeUnit0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.last();
      assertFalse(boolean0);
      assertFalse(fBCachedFetcher0.isAfterLast());
      assertTrue(fBCachedFetcher0.isEmpty());
  }
}
