/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 12:15:14 GMT 2019
 */

package freemind.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import freemind.controller.Controller;
import freemind.main.FreeMind;
import freemind.main.FreeMindMain;
import freemind.modes.browsemode.BrowseMode;
import freemind.preferences.FreemindPropertyListener;
import java.awt.Color;
import java.awt.Component;
import java.awt.HeadlessException;
import java.awt.SystemColor;
import java.awt.event.ComponentEvent;
import java.awt.event.FocusEvent;
import java.awt.event.WindowEvent;
import java.io.File;
import java.util.Properties;
import java.util.Stack;
import java.util.Vector;
import javax.help.DefaultHelpHistoryModel;
import javax.help.DefaultHelpModel;
import javax.help.HelpSet;
import javax.help.JHelp;
import javax.swing.DebugGraphics;
import javax.swing.ImageIcon;
import javax.swing.JColorChooser;
import javax.swing.JEditorPane;
import javax.swing.JInternalFrame;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.JTableHeader;
import org.apache.batik.svggen.DefaultExtensionHandler;
import org.apache.batik.svggen.ImageHandlerBase64Encoder;
import org.apache.batik.svggen.SVGGeneratorContext;
import org.apache.batik.svggen.SVGGraphics2D;
import org.apache.xalan.templates.OutputProperties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.hsqldb.lib.FileUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Controller_ESTest extends Controller_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{~z.FPEXq(!^n");
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      Controller.DisposeOnClose controller_DisposeOnClose0 = new Controller.DisposeOnClose();
      boolean boolean0 = false;
      controller_DisposeOnClose0.componentResized((ComponentEvent) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      controller_DisposeOnClose0.componentShown((ComponentEvent) null);
      FocusEvent focusEvent0 = new FocusEvent(jInternalFrame0, 288, false, jInternalFrame0);
      focusEvent0.setSource("{~z.FPEXq(!^n");
      // Undeclared exception!
      try { 
        controller_DisposeOnClose0.componentHidden(focusEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller$DisposeOnClose", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Controller.Closer controller_Closer0 = new Controller.Closer();
      // Undeclared exception!
      try { 
        controller_Closer0.windowClosing((WindowEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller$Closer", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OutputProperties outputProperties0 = new OutputProperties();
      Controller.removePropertyChangeListener((FreemindPropertyListener) null);
      ImageHandlerBase64Encoder imageHandlerBase64Encoder0 = new ImageHandlerBase64Encoder();
      DefaultExtensionHandler defaultExtensionHandler0 = new DefaultExtensionHandler();
      SVGGeneratorContext sVGGeneratorContext0 = SVGGraphics2D.buildSVGGeneratorContext(outputProperties0, imageHandlerBase64Encoder0, defaultExtensionHandler0);
      SVGGraphics2D sVGGraphics2D0 = null;
      try {
        sVGGraphics2D0 = new SVGGraphics2D(sVGGeneratorContext0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ElemTemplateElement error: Function not supported!
         //
         verifyException("org.apache.xalan.templates.ElemTemplateElement", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Controller controller0 = null;
      try {
        controller0 = new Controller((FreeMindMain) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FileUtil fileUtil0 = FileUtil.getDefaultInstance();
      FileUtil.getDefaultInstance();
      JColorChooser jColorChooser0 = Controller.getCommonJColorChooser();
      jColorChooser0.repaint((-1385L));
      jColorChooser0.getPreviewPanel();
      Properties properties0 = FreeMind.props;
      FileUtil.getDefaultInstance();
      // Undeclared exception!
      try { 
        fileUtil0.canonicalFile((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.lib.FileUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ImageIcon imageIcon0 = new ImageIcon(byteArray0);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      ListSelectionModel listSelectionModel0 = defaultTableColumnModel0.getSelectionModel();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) imageIcon0;
      objectArray0[1] = (Object) defaultTableColumnModel0;
      objectArray0[3] = (Object) listSelectionModel0;
      objectArray0[4] = (Object) imageIcon0;
      objectArray0[5] = (Object) listSelectionModel0;
      objectArray0[6] = (Object) "";
      objectArray0[7] = (Object) null;
      objectArray0[8] = (Object) null;
      Object[][] objectArray1 = new Object[8][8];
      objectArray1[0] = objectArray0;
      objectArray1[1] = objectArray0;
      objectArray1[2] = objectArray0;
      objectArray1[3] = objectArray0;
      objectArray1[4] = objectArray0;
      objectArray1[5] = objectArray0;
      Color color0 = DebugGraphics.flashColor();
      color0.getComponents((float[]) null);
      defaultTableColumnModel0.getTotalColumnWidth();
      JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
      jTableHeader0.getTable();
      try { 
        Controller.showCommonJColorChooserDialog((Component) null, "", color0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Stack<JEditorPane> stack0 = new Stack<JEditorPane>();
      JTable jTable0 = new JTable(stack0, stack0);
      JTable jTable1 = new JTable();
      jTable1.getTableHeader();
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
      JTableHeader jTableHeader1 = new JTableHeader(defaultTableColumnModel0);
      HelpSet helpSet0 = new HelpSet((ClassLoader) null);
      DefaultHelpModel defaultHelpModel0 = new DefaultHelpModel(helpSet0);
      JHelp jHelp0 = new JHelp(defaultHelpModel0);
      DefaultHelpHistoryModel defaultHelpHistoryModel0 = new DefaultHelpHistoryModel(jHelp0);
      JHelp jHelp1 = new JHelp(defaultHelpModel0, defaultHelpHistoryModel0, (HelpSet.Presentation) null);
      SystemColor systemColor0 = SystemColor.windowBorder;
      try { 
        Controller.showCommonJColorChooserDialog(jHelp1, "c`<MYz}nSfET@@", systemColor0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Vector<JInternalFrame.JDesktopIcon> vector0 = new Vector<JInternalFrame.JDesktopIcon>();
      BrowseMode browseMode0 = new BrowseMode();
      browseMode0.getController();
      Controller.CloseAction controller_CloseAction0 = null;
      try {
        controller_CloseAction0 = new Controller.CloseAction((Controller) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller$CloseAction", e);
      }
  }
}
