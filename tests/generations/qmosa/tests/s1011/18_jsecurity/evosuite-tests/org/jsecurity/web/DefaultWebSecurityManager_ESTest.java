/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 10 23:14:13 GMT 2020
 */

package org.jsecurity.web;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedReader;
import java.net.InetAddress;
import java.util.Collection;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletOutputStream;
import javax.servlet.ServletRequest;
import javax.servlet.ServletRequestWrapper;
import javax.servlet.ServletResponse;
import javax.servlet.ServletResponseWrapper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jsecurity.authc.AuthenticationListener;
import org.jsecurity.authc.UsernamePasswordToken;
import org.jsecurity.authc.credential.AllowAllCredentialsMatcher;
import org.jsecurity.authc.credential.Sha512CredentialsMatcher;
import org.jsecurity.authc.credential.SimpleCredentialsMatcher;
import org.jsecurity.authz.ModularRealmAuthorizer;
import org.jsecurity.cache.CacheManager;
import org.jsecurity.codec.CodecSupport;
import org.jsecurity.mgt.DefaultSecurityManager;
import org.jsecurity.realm.Realm;
import org.jsecurity.realm.SimpleAccountRealm;
import org.jsecurity.session.Session;
import org.jsecurity.session.SessionListener;
import org.jsecurity.session.mgt.eis.MemorySessionDAO;
import org.jsecurity.subject.DelegatingSubject;
import org.jsecurity.subject.PrincipalCollection;
import org.jsecurity.subject.SimplePrincipalCollection;
import org.jsecurity.subject.Subject;
import org.jsecurity.web.DefaultWebSecurityManager;
import org.jsecurity.web.WebRememberMeManager;
import org.jsecurity.web.session.DefaultWebSessionManager;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultWebSecurityManager_ESTest extends DefaultWebSecurityManager_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      char[] charArray0 = new char[21];
      charArray0[3] = 'J';
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("yp<T7hMryS", charArray0);
      UsernamePasswordToken usernamePasswordToken1 = new UsernamePasswordToken();
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      UsernamePasswordToken usernamePasswordToken2 = new UsernamePasswordToken("yp<T7hMryS", charArray0, true, inetAddress0);
      usernamePasswordToken2.setUsername("yp<T7hMryS");
      usernamePasswordToken0.clear();
      usernamePasswordToken2.clear();
      usernamePasswordToken1.setPassword(charArray0);
      usernamePasswordToken0.clear();
      UsernamePasswordToken usernamePasswordToken3 = new UsernamePasswordToken("qM<j", "org.jsecuity.authc.UsernamePasswordToken - ypT7hNS, rememberMe=false", true);
      usernamePasswordToken0.toString();
      usernamePasswordToken0.setRememberMe(true);
      usernamePasswordToken1.clear();
      UsernamePasswordToken usernamePasswordToken4 = new UsernamePasswordToken();
      UsernamePasswordToken usernamePasswordToken5 = new UsernamePasswordToken();
      usernamePasswordToken1.clear();
      UsernamePasswordToken usernamePasswordToken6 = new UsernamePasswordToken("org.jsecurity.authc.UsernamePasswordToken - null, rememberMe=false", "BQUL1AxhAK4#zIF");
      usernamePasswordToken2.setRememberMe(true);
      UsernamePasswordToken usernamePasswordToken7 = new UsernamePasswordToken("org.jsecurity.authc.UsernamePasswordToken - null, rememberMe=false", (String) null);
      usernamePasswordToken4.setPassword(charArray0);
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      defaultWebSecurityManager0.isAuthenticated((Session) null);
      System.setCurrentTimeMillis((-1927L));
      Integer integer0 = new Integer(0);
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection(integer0, "org.jsecurity.authc.UsernamePasswordToken - mK>H/J!\"6(,:N6NQ, rememberMe=true");
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.createSubject((PrincipalCollection) simplePrincipalCollection0, true, (Session) null, (ServletRequest) null, (ServletResponse) servletResponseWrapper0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsecurity.web.WebUtils", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.2130075659799042
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/jsecurity-ehcache");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "add");
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      Boolean boolean0 = Boolean.TRUE;
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection();
      DefaultSecurityManager defaultSecurityManager0 = new DefaultSecurityManager();
      DelegatingSubject delegatingSubject0 = new DelegatingSubject(simplePrincipalCollection0, true, (InetAddress) null, (Session) null, defaultSecurityManager0);
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((Enumeration) null).when(servletRequest0).getLocales();
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      defaultWebSecurityManager0.bind(delegatingSubject0, servletRequestWrapper0, servletResponseWrapper0);
      servletRequestWrapper0.getLocales();
      servletResponseWrapper0.setContentLength(711);
      servletResponseWrapper0.setCharacterEncoding("/UU9{]a^h3Q4fZ0_`");
      Integer.remainderUnsigned(711, 1);
      int int0 = Integer.min(1, 85);
      ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper2 = new ServletResponseWrapper(servletResponseWrapper1);
      ServletResponseWrapper servletResponseWrapper3 = new ServletResponseWrapper(servletResponseWrapper2);
      ServletResponseWrapper servletResponseWrapper4 = new ServletResponseWrapper(servletResponseWrapper2);
      ServletResponseWrapper servletResponseWrapper5 = new ServletResponseWrapper(servletResponseWrapper2);
      Integer integer0 = new Integer(0);
      assertFalse(integer0.equals((Object)int0));
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5481155268740174
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager(simpleAccountRealm0);
      defaultWebSecurityManager0.setSessionMode("jsecurity");
      SimpleAccountRealm simpleAccountRealm1 = new SimpleAccountRealm();
      Object object0 = new Object();
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection(object0, "' being the default.");
      simplePrincipalCollection0.iterator();
      Class<Realm> class0 = Realm.class;
      Collection<Realm> collection0 = simplePrincipalCollection0.byType(class0);
      ModularRealmAuthorizer modularRealmAuthorizer0 = new ModularRealmAuthorizer(collection0);
      ModularRealmAuthorizer modularRealmAuthorizer1 = new ModularRealmAuthorizer();
      ModularRealmAuthorizer modularRealmAuthorizer2 = new ModularRealmAuthorizer();
      ModularRealmAuthorizer modularRealmAuthorizer3 = new ModularRealmAuthorizer();
      modularRealmAuthorizer2.getRealms();
      LinkedList<Realm> linkedList0 = new LinkedList<Realm>();
      MockInetAddress.getLoopbackAddress();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/jsecurity-ehcache");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "' being the default.");
      defaultWebSecurityManager0.setSessionIdCookieName("$J");
      MemorySessionDAO memorySessionDAO0 = new MemorySessionDAO();
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      try { 
        memorySessionDAO0.readSession(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // There is no session with id [interface org.jsecurity.realm.Realm]
         //
         verifyException("org.jsecurity.session.mgt.eis.CachingSessionDAO", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.1383330595080277
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/jsecurity-ehcache/ehcache_auto_created_1392409281320");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "CIO'+b *It`Bb");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection(evoSuiteFile0, "CIO'+b *It`Bb");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Session session0 = null;
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      ServletRequest servletRequest0 = null;
      ServletResponse servletResponse0 = null;
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.createSubject((Session) null, (ServletRequest) null, (ServletResponse) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsecurity.web.WebUtils", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5484538320369539
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/jsecurity-ehcache/ehcache_auto_created_1392409281320");
      defaultWebSecurityManager0.isHttpSessionMode();
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection(evoSuiteFile0, "jsecurity");
      Class<Object> class0 = Object.class;
      Collection<Object> collection0 = simplePrincipalCollection0.byType(class0);
      SimplePrincipalCollection simplePrincipalCollection1 = new SimplePrincipalCollection((Collection) collection0, "jsecurity");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.KOREA;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      locale0.getScript();
      Locale.LanguageRange locale_LanguageRange0 = new Locale.LanguageRange("http", 0.0);
      locale_LanguageRange0.equals(simplePrincipalCollection1);
      linkedList0.add(locale_LanguageRange0);
      linkedList0.removeLast();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      defaultWebSecurityManager0.hasAllRoles(simplePrincipalCollection1, list0);
      defaultWebSecurityManager0.isHttpSessionMode();
      defaultWebSecurityManager0.setSessionMode("jsecurity");
      defaultWebSecurityManager0.setSessionIdCookieSecure(true);
      assertEquals("jsecurity", defaultWebSecurityManager0.getSessionMode());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm("|b39ju&NPl  P");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleAccountRealm simpleAccountRealm1 = new SimpleAccountRealm();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection("|b39ju&NPl  P", "Using URL [");
      SimplePrincipalCollection simplePrincipalCollection1 = new SimplePrincipalCollection(simplePrincipalCollection0);
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(servletRequest0).getRemoteHost();
      doReturn((RequestDispatcher) null).when(servletRequest0).getRequestDispatcher(anyString());
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
      servletRequestWrapper0.getRequestDispatcher((String) null);
      simplePrincipalCollection0.spliterator();
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
      defaultWebSecurityManager0.createSubject((PrincipalCollection) simplePrincipalCollection0, false, (Session) null, (ServletRequest) servletRequestWrapper0, (ServletResponse) servletResponseWrapper1);
      ServletRequestWrapper servletRequestWrapper2 = new ServletRequestWrapper(servletRequestWrapper0);
      Integer.remainderUnsigned(1300, 1300);
      int int0 = Integer.min(1300, (-183));
      ServletRequestWrapper servletRequestWrapper3 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletResponseWrapper servletResponseWrapper2 = new ServletResponseWrapper(servletResponseWrapper0);
      Integer integer0 = new Integer(3030);
      assertFalse(integer0.equals((Object)int0));
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.1490596969706202
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      byte[] byteArray0 = new byte[6];
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      doReturn((Locale) null).when(servletResponse0).getLocale();
      doReturn((ServletOutputStream) null).when(servletResponse0).getOutputStream();
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper2 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper3 = new ServletResponseWrapper(servletResponseWrapper1);
      servletResponseWrapper1.getOutputStream();
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      servletResponseWrapper1.getLocale();
      servletResponseWrapper0.resetBuffer();
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletResponseWrapper servletResponseWrapper4 = new ServletResponseWrapper(servletResponseWrapper0);
      Boolean boolean0 = Boolean.TRUE;
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection();
      DelegatingSubject delegatingSubject0 = new DelegatingSubject(simplePrincipalCollection0, true, (InetAddress) null, (Session) null, defaultWebSecurityManager0);
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.bind(delegatingSubject0, servletRequestWrapper0, servletResponseWrapper2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
         //
         verifyException("org.jsecurity.web.WebUtils", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1490596969706202
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(servletRequest0).getContentLength();
      doReturn((Locale) null).when(servletRequest0).getLocale();
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper2 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper3 = new ServletRequestWrapper(servletRequestWrapper2);
      servletRequestWrapper2.getContentLength();
      ServletRequestWrapper servletRequestWrapper4 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper5 = new ServletRequestWrapper(servletRequestWrapper4);
      ServletRequestWrapper servletRequestWrapper6 = new ServletRequestWrapper(servletRequestWrapper4);
      ServletRequestWrapper servletRequestWrapper7 = new ServletRequestWrapper(servletRequestWrapper2);
      ServletRequestWrapper servletRequestWrapper8 = new ServletRequestWrapper(servletRequestWrapper2);
      servletRequestWrapper8.getLocale();
      Object object0 = new Object();
      servletRequestWrapper6.setAttribute("+4@Npd?>v_v6", object0);
      ServletRequestWrapper servletRequestWrapper9 = new ServletRequestWrapper(servletRequestWrapper5);
      SimpleAccountRealm simpleAccountRealm1 = new SimpleAccountRealm("+4@Npd?>v_v6");
      AllowAllCredentialsMatcher allowAllCredentialsMatcher0 = new AllowAllCredentialsMatcher();
      simpleAccountRealm0.setCredentialsMatcher(allowAllCredentialsMatcher0);
      SimpleAccountRealm simpleAccountRealm2 = new SimpleAccountRealm("+4@Npd?>v_v6");
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager(simpleAccountRealm0);
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.getSubject();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
         //
         verifyException("org.jsecurity.web.WebUtils", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(servletRequest0).getContentLength();
      doReturn((Locale) null).when(servletRequest0).getLocale();
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper2 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper3 = new ServletRequestWrapper(servletRequestWrapper2);
      servletRequestWrapper2.getContentLength();
      ServletRequestWrapper servletRequestWrapper4 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper5 = new ServletRequestWrapper(servletRequestWrapper4);
      ServletRequestWrapper servletRequestWrapper6 = new ServletRequestWrapper(servletRequestWrapper4);
      ServletRequestWrapper servletRequestWrapper7 = new ServletRequestWrapper(servletRequestWrapper2);
      ServletRequestWrapper servletRequestWrapper8 = new ServletRequestWrapper(servletRequestWrapper2);
      servletRequestWrapper8.getLocale();
      Object object0 = new Object();
      servletRequestWrapper6.setAttribute("+4@Npd?>v_v6", object0);
      CodecSupport.toBytes("+4@Npd?>v_v6");
      SimpleAccountRealm simpleAccountRealm1 = new SimpleAccountRealm("+4@Npd?>v_v6");
      AllowAllCredentialsMatcher allowAllCredentialsMatcher0 = new AllowAllCredentialsMatcher();
      simpleAccountRealm0.setCredentialsMatcher(allowAllCredentialsMatcher0);
      SimpleAccountRealm simpleAccountRealm2 = new SimpleAccountRealm("+4@Npd?>v_v6");
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager(simpleAccountRealm2);
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.getSubject();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
         //
         verifyException("org.jsecurity.web.WebUtils", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm("|b39ju&NPl  P");
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      doReturn((Locale) null).when(servletResponse0).getLocale();
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper2 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper3 = new ServletResponseWrapper(servletResponseWrapper2);
      simpleAccountRealm0.setName(",h?]j!me$");
      ServletResponseWrapper servletResponseWrapper4 = new ServletResponseWrapper(servletResponseWrapper0);
      servletResponseWrapper0.getLocale();
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager(simpleAccountRealm0);
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.bind((Subject) null, servletRequestWrapper0, servletResponseWrapper0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsecurity.web.DefaultWebSecurityManager", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(servletRequest0).getContentLength();
      doReturn((Enumeration) null).when(servletRequest0).getLocales();
      doReturn((String) null).when(servletRequest0).getParameter(anyString());
      doReturn((String[]) null).when(servletRequest0).getParameterValues(anyString());
      doReturn((BufferedReader) null).when(servletRequest0).getReader();
      doReturn((String) null).when(servletRequest0).getRemoteAddr();
      doReturn((String) null).when(servletRequest0).getScheme();
      doReturn(0).when(servletRequest0).getServerPort();
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper2 = new ServletRequestWrapper(servletRequestWrapper0);
      servletRequestWrapper0.getScheme();
      ServletRequestWrapper servletRequestWrapper3 = new ServletRequestWrapper(servletRequestWrapper2);
      servletRequestWrapper2.getContentLength();
      ServletRequestWrapper servletRequestWrapper4 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper5 = new ServletRequestWrapper(servletRequestWrapper4);
      ServletRequestWrapper servletRequestWrapper6 = new ServletRequestWrapper(servletRequestWrapper4);
      ServletRequestWrapper servletRequestWrapper7 = new ServletRequestWrapper(servletRequestWrapper2);
      ServletRequestWrapper servletRequestWrapper8 = new ServletRequestWrapper(servletRequestWrapper2);
      Object object0 = new Object();
      servletRequestWrapper6.setAttribute("+4@Npd?>v_v6", object0);
      ServletRequestWrapper servletRequestWrapper9 = new ServletRequestWrapper(servletRequestWrapper5);
      ServletRequestWrapper servletRequestWrapper10 = new ServletRequestWrapper(servletRequestWrapper0);
      servletRequestWrapper10.getParameter("\"=_i");
      servletRequestWrapper5.getReader();
      ServletRequestWrapper servletRequestWrapper11 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper12 = new ServletRequestWrapper(servletRequestWrapper11);
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      servletRequestWrapper4.getParameterValues("yp<7hMDS");
      servletRequestWrapper10.getRemoteAddr();
      defaultWebSecurityManager0.getPrincipals((Session) null, servletRequestWrapper10, (ServletResponse) null);
      ServletRequestWrapper servletRequestWrapper13 = new ServletRequestWrapper(servletRequestWrapper6);
      ServletRequestWrapper servletRequestWrapper14 = new ServletRequestWrapper(servletRequestWrapper13);
      ServletRequestWrapper servletRequestWrapper15 = new ServletRequestWrapper(servletRequestWrapper2);
      ServletRequestWrapper servletRequestWrapper16 = new ServletRequestWrapper(servletRequestWrapper9);
      servletRequestWrapper14.getServerPort();
      ServletRequestWrapper servletRequestWrapper17 = new ServletRequestWrapper(servletRequestWrapper16);
      ServletRequestWrapper servletRequestWrapper18 = new ServletRequestWrapper(servletRequestWrapper14);
      ServletRequestWrapper servletRequestWrapper19 = new ServletRequestWrapper(servletRequestWrapper12);
      servletRequestWrapper19.getLocales();
      defaultWebSecurityManager0.getPrincipals((Session) null);
      assertTrue(defaultWebSecurityManager0.isHttpSessionMode());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(servletRequest0).getRemoteHost();
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Subject subject0 = defaultWebSecurityManager0.createSubject((PrincipalCollection) null, true, (Session) null, (ServletRequest) servletRequestWrapper0, (ServletResponse) servletResponseWrapper0);
      assertTrue(defaultWebSecurityManager0.isHttpSessionMode());
      assertTrue(subject0.isAuthenticated());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.1383330595080277
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(servletRequest0).getRemoteHost();
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      Subject subject0 = defaultWebSecurityManager0.createSubject((Session) null, servletRequest0, (ServletResponse) servletResponseWrapper0);
      assertFalse(subject0.isAuthenticated());
      assertTrue(defaultWebSecurityManager0.isHttpSessionMode());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'J';
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("yp<T7hMryS", charArray0);
      UsernamePasswordToken usernamePasswordToken1 = new UsernamePasswordToken((String) null, charArray0);
      usernamePasswordToken1.setPassword(charArray0);
      MockInetAddress.getLoopbackAddress();
      UsernamePasswordToken usernamePasswordToken2 = new UsernamePasswordToken((String) null, (String) null, false);
      usernamePasswordToken1.clear();
      usernamePasswordToken2.toString();
      usernamePasswordToken2.clear();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      usernamePasswordToken1.clear();
      UsernamePasswordToken usernamePasswordToken3 = new UsernamePasswordToken();
      usernamePasswordToken3.setPassword(charArray0);
      UsernamePasswordToken usernamePasswordToken4 = new UsernamePasswordToken("L{:Al", "L{:Al", true);
      usernamePasswordToken3.toString();
      usernamePasswordToken3.clear();
      UsernamePasswordToken usernamePasswordToken5 = new UsernamePasswordToken();
      usernamePasswordToken0.clear();
      UsernamePasswordToken usernamePasswordToken6 = new UsernamePasswordToken();
      UsernamePasswordToken usernamePasswordToken7 = new UsernamePasswordToken((String) null, "org.jsecurity.authc.UsernamePasswordToken - null, rememberMe=false");
      usernamePasswordToken7.clear();
      usernamePasswordToken0.setRememberMe(false);
      UsernamePasswordToken usernamePasswordToken8 = new UsernamePasswordToken("yp<T7hMryS", "Ignoring ehcache attribute ");
      usernamePasswordToken7.setPassword(charArray0);
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      defaultWebSecurityManager0.isAuthenticated((Session) null);
      System.setCurrentTimeMillis((-1529L));
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      boolean boolean0 = defaultWebSecurityManager0.isAuthenticated((Session) null, servletRequestWrapper0, servletResponseWrapper0);
      assertFalse(boolean0);
      assertTrue(defaultWebSecurityManager0.isHttpSessionMode());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.18030455699462
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager(simpleAccountRealm0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-99);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)113;
      byteArray0[3] = (byte)48;
      byteArray0[4] = (byte) (-46);
      byteArray0[4] = (byte) (-99);
      byteArray0[6] = (byte)113;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection(defaultWebSecurityManager0, "http");
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleAccountRealm0.afterAuthorizationCacheSet();
      Class<SimplePrincipalCollection> class0 = SimplePrincipalCollection.class;
      simplePrincipalCollection0.byType(class0);
      defaultWebSecurityManager0.setSessionMode("jsecurity");
      defaultWebSecurityManager0.setSessionMode("jsecurity");
      DefaultWebSessionManager defaultWebSessionManager0 = new DefaultWebSessionManager();
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      // Undeclared exception!
      try { 
        defaultWebSessionManager0.getSession(servletRequestWrapper0, servletResponseWrapper0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // javax.servlet.ServletRequestWrapper cannot be cast to javax.servlet.http.HttpServletRequest
         //
         verifyException("org.jsecurity.web.WebUtils", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5481155268740174
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      defaultWebSecurityManager0.setSessionMode("jsecurity");
      AuthenticationListener authenticationListener0 = mock(AuthenticationListener.class, new ViolatedAssumptionAnswer());
      defaultWebSecurityManager0.add(authenticationListener0);
      String string0 = "c4jv<.kM&b).-|h\\.G5";
      defaultWebSecurityManager0.setSessionIdCookiePath("c4jv<.kM&b).-|h.G5");
      WebRememberMeManager webRememberMeManager0 = new WebRememberMeManager();
      // Undeclared exception!
      try { 
        webRememberMeManager0.getRememberedPrincipals();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
         //
         verifyException("org.jsecurity.web.WebUtils", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(servletResponse0).getCharacterEncoding();
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper2 = new ServletResponseWrapper(servletResponseWrapper1);
      ServletResponseWrapper servletResponseWrapper3 = new ServletResponseWrapper(servletResponseWrapper2);
      ServletResponseWrapper servletResponseWrapper4 = new ServletResponseWrapper(servletResponseWrapper2);
      ServletResponseWrapper servletResponseWrapper5 = new ServletResponseWrapper(servletResponseWrapper4);
      ServletResponseWrapper servletResponseWrapper6 = new ServletResponseWrapper(servletResponseWrapper0);
      servletResponseWrapper1.getCharacterEncoding();
      servletResponseWrapper4.flushBuffer();
      ServletResponseWrapper servletResponseWrapper7 = new ServletResponseWrapper(servletResponseWrapper2);
      ServletResponseWrapper servletResponseWrapper8 = new ServletResponseWrapper(servletResponseWrapper7);
      servletResponseWrapper0.setResponse(servletResponseWrapper1);
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((Enumeration) null).when(servletRequest0).getLocales();
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper2 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper3 = new ServletRequestWrapper(servletRequestWrapper1);
      ServletRequestWrapper servletRequestWrapper4 = new ServletRequestWrapper(servletRequestWrapper3);
      ServletResponseWrapper servletResponseWrapper9 = new ServletResponseWrapper(servletResponseWrapper0);
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      defaultWebSecurityManager0.getPrincipals((Session) null, servletRequestWrapper4, servletResponseWrapper1);
      ServletRequestWrapper servletRequestWrapper5 = new ServletRequestWrapper(servletRequestWrapper1);
      servletRequestWrapper5.getLocales();
      Integer.remainderUnsigned((-1803613918), (-1803613918));
      ServletResponseWrapper servletResponseWrapper10 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper11 = new ServletResponseWrapper(servletResponseWrapper2);
      System.setCurrentTimeMillis(0);
      defaultWebSecurityManager0.getPrincipals((Session) null);
      assertTrue(defaultWebSecurityManager0.isHttpSessionMode());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((Enumeration) null).when(servletRequest0).getLocales();
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper2 = new ServletRequestWrapper(servletRequestWrapper1);
      ServletRequestWrapper servletRequestWrapper3 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper4 = new ServletRequestWrapper(servletRequestWrapper1);
      ServletRequestWrapper servletRequestWrapper5 = new ServletRequestWrapper(servletRequestWrapper4);
      ServletRequestWrapper servletRequestWrapper6 = new ServletRequestWrapper(servletRequestWrapper4);
      ServletRequestWrapper servletRequestWrapper7 = new ServletRequestWrapper(servletRequestWrapper4);
      ServletRequestWrapper servletRequestWrapper8 = new ServletRequestWrapper(servletRequestWrapper3);
      ServletRequestWrapper servletRequestWrapper9 = new ServletRequestWrapper(servletRequestWrapper3);
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      ServletRequestWrapper servletRequestWrapper10 = new ServletRequestWrapper(servletRequestWrapper4);
      ServletRequestWrapper servletRequestWrapper11 = new ServletRequestWrapper(servletRequestWrapper5);
      ServletRequestWrapper servletRequestWrapper12 = new ServletRequestWrapper(servletRequestWrapper11);
      servletRequestWrapper12.getLocales();
      String string0 = defaultWebSecurityManager0.getSessionMode();
      assertEquals("http", string0);
      assertTrue(defaultWebSecurityManager0.isHttpSessionMode());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      char[] charArray0 = new char[21];
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("yp<T7hMryS", charArray0);
      UsernamePasswordToken usernamePasswordToken1 = new UsernamePasswordToken();
      usernamePasswordToken0.clear();
      usernamePasswordToken0.clear();
      UsernamePasswordToken usernamePasswordToken2 = new UsernamePasswordToken("U2H/*td\" *zs8L:@=(", charArray0);
      usernamePasswordToken2.setPassword(charArray0);
      UsernamePasswordToken usernamePasswordToken3 = new UsernamePasswordToken("org.jsecuity.authc.UsernamePasswordToken - ypT7hNS, rememberMe=false", "yp<T7hMryS", true);
      usernamePasswordToken3.setRememberMe(true);
      usernamePasswordToken3.toString();
      usernamePasswordToken1.clear();
      UsernamePasswordToken usernamePasswordToken4 = new UsernamePasswordToken();
      UsernamePasswordToken usernamePasswordToken5 = new UsernamePasswordToken("i=3DKp?s;qJ", "U2H/*td\" *zs8L:@=(");
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      UsernamePasswordToken usernamePasswordToken6 = new UsernamePasswordToken((String) null, "i=3DKp?s;qJ", true, inetAddress0);
      usernamePasswordToken6.setRememberMe(true);
      UsernamePasswordToken usernamePasswordToken7 = new UsernamePasswordToken("jsecurity", "jsecurity");
      usernamePasswordToken5.setPassword(charArray0);
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.setSessionMode((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid sessionMode [null].  Allowed values are public static final String constants in the org.jsecurity.web.DefaultWebSecurityManager class: 'http' or 'jsecurity', with 'http' being the default.
         //
         verifyException("org.jsecurity.web.DefaultWebSecurityManager", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.1490596969706202
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm("_Rz_\";CZ");
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager(simpleAccountRealm0);
      defaultWebSecurityManager0.setSessionMode("http");
      SimpleAccountRealm simpleAccountRealm1 = new SimpleAccountRealm();
      Object object0 = new Object();
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection("CIO'+b *It`Bb", "Error configuring from input stream. Initial cause was ");
      Class<Realm> class0 = Realm.class;
      Collection<Realm> collection0 = simplePrincipalCollection0.byType(class0);
      ModularRealmAuthorizer modularRealmAuthorizer0 = new ModularRealmAuthorizer(collection0);
      ModularRealmAuthorizer modularRealmAuthorizer1 = new ModularRealmAuthorizer();
      ModularRealmAuthorizer modularRealmAuthorizer2 = new ModularRealmAuthorizer();
      ModularRealmAuthorizer modularRealmAuthorizer3 = new ModularRealmAuthorizer();
      modularRealmAuthorizer2.getRealms();
      modularRealmAuthorizer1.getRealms();
      LinkedList<Realm> linkedList0 = new LinkedList<Realm>();
      LinkedList<Realm> linkedList1 = new LinkedList<Realm>();
      SimpleAccountRealm simpleAccountRealm2 = new SimpleAccountRealm();
      linkedList0.add((Realm) simpleAccountRealm0);
      ModularRealmAuthorizer modularRealmAuthorizer4 = new ModularRealmAuthorizer((Collection<Realm>) null);
      modularRealmAuthorizer2.getRealms();
      try { 
        Integer.valueOf("vmiHIFh~\\vZH+Z");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"vmiHIFh~\\vZH+Z\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5118965585343875
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager(simpleAccountRealm0);
      CacheManager cacheManager0 = defaultWebSecurityManager0.getCacheManager();
      simpleAccountRealm0.setCacheManager(cacheManager0);
      defaultWebSecurityManager0.setSessionMode("jsecurity");
      defaultWebSecurityManager0.setSessionIdCookiePath("jsecurity");
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      defaultWebSecurityManager0.isHttpSessionMode();
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.setSessionMode("_PRINCIPALS_SESSION_KEY");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid sessionMode [_PRINCIPALS_SESSION_KEY].  Allowed values are public static final String constants in the org.jsecurity.web.DefaultWebSecurityManager class: 'http' or 'jsecurity', with 'http' being the default.
         //
         verifyException("org.jsecurity.web.DefaultWebSecurityManager", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.6769877743224173
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/jsecurity-ehcache/ehcache_auto_created_1392409281320");
      defaultWebSecurityManager0.isHttpSessionMode();
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection(evoSuiteFile0, "jsecurity");
      Class<Object> class0 = Object.class;
      Collection<Object> collection0 = simplePrincipalCollection0.byType(class0);
      SimplePrincipalCollection simplePrincipalCollection1 = new SimplePrincipalCollection((Collection) collection0, "jsecurity");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.KOREA;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      locale0.getScript();
      Locale.LanguageRange locale_LanguageRange0 = new Locale.LanguageRange("http", 0.0);
      linkedList0.add(locale_LanguageRange0);
      linkedList0.removeLast();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      defaultWebSecurityManager0.hasAllRoles(simplePrincipalCollection1, list0);
      defaultWebSecurityManager0.isHttpSessionMode();
      defaultWebSecurityManager0.setSessionMode("jsecurity");
      assertFalse(defaultWebSecurityManager0.isHttpSessionMode());
      
      defaultWebSecurityManager0.setSessionIdCookieMaxAge(226);
      defaultWebSecurityManager0.isHttpSessionMode();
      defaultWebSecurityManager0.getSessionMode();
      assertEquals("jsecurity", defaultWebSecurityManager0.getSessionMode());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.2130075659799042
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Integer integer0 = new Integer(791);
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      DelegatingSubject delegatingSubject0 = new DelegatingSubject(defaultWebSecurityManager0);
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      defaultWebSecurityManager0.bind(delegatingSubject0, servletRequestWrapper0, servletResponseWrapper0);
      int int0 = Integer.remainderUnsigned(59, 1246);
      Integer.min(791, 94608000);
      ServletRequest servletRequest1 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequest1);
      ServletResponse servletResponse1 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponse1);
      Integer integer1 = new Integer((-834));
      assertFalse(integer1.equals((Object)int0));
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/jsecurity-ehcache/ehcache_auto_created_1392409281320");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "CIO'+b *It`Bb");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "7n{;{HR>b");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleAccountRealm simpleAccountRealm1 = new SimpleAccountRealm();
      SimpleCredentialsMatcher simpleCredentialsMatcher0 = new SimpleCredentialsMatcher();
      Sha512CredentialsMatcher sha512CredentialsMatcher0 = new Sha512CredentialsMatcher();
      simpleAccountRealm1.setCredentialsMatcher(sha512CredentialsMatcher0);
      SimpleAccountRealm simpleAccountRealm2 = new SimpleAccountRealm("The convenience passthrough methods for setting session id cookie attributes are only available when the underlying SessionManager implementation is ");
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.getSubject();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
         //
         verifyException("org.jsecurity.web.WebUtils", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0114042647073518
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/jsecurity-ehcache/ehcache_auto_created_1392409281320");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "CIO'+b *It`Bb");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "7n{;{HR>b");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleAccountRealm simpleAccountRealm1 = new SimpleAccountRealm();
      SimpleCredentialsMatcher simpleCredentialsMatcher0 = new SimpleCredentialsMatcher();
      Sha512CredentialsMatcher sha512CredentialsMatcher0 = new Sha512CredentialsMatcher();
      simpleAccountRealm1.setCredentialsMatcher(sha512CredentialsMatcher0);
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.getSubject();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
         //
         verifyException("org.jsecurity.web.WebUtils", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = "yp<T7hMryS";
      char[] charArray0 = new char[21];
      charArray0[3] = 'J';
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("yp<T7hMryS", charArray0);
      DefaultWebSecurityManager defaultWebSecurityManager0 = null;
      try {
        defaultWebSecurityManager0 = new DefaultWebSecurityManager((Realm) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Realm argument cannot be null
         //
         verifyException("org.jsecurity.mgt.RealmSecurityManager", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/jsecurity-ehcache");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "CIO'+b *It`Bb");
      char[] charArray0 = new char[8];
      charArray0[0] = 'l';
      charArray0[1] = 'M';
      charArray0[2] = 'L';
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("sessionMode is 'jsecurity'.", charArray0);
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.clear();
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockInetAddress.getLoopbackAddress();
      UsernamePasswordToken usernamePasswordToken1 = new UsernamePasswordToken("sessionMode is 'jsecurity'.", charArray0, true, (InetAddress) null);
      usernamePasswordToken0.setRememberMe(true);
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.setSessionIdCookiePath("gr*I0_Ifa^~");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // The convenience passthrough methods for setting session id cookie attributes are only available when the underlying SessionManager implementation is org.jsecurity.web.session.DefaultWebSessionManager, which is enabled by default when the sessionMode is 'jsecurity'.
         //
         verifyException("org.jsecurity.web.DefaultWebSecurityManager", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.setSessionIdCookieMaxAge(1226);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // The convenience passthrough methods for setting session id cookie attributes are only available when the underlying SessionManager implementation is org.jsecurity.web.session.DefaultWebSessionManager, which is enabled by default when the sessionMode is 'jsecurity'.
         //
         verifyException("org.jsecurity.web.DefaultWebSecurityManager", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = 'J';
      charArray0[1] = 'J';
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("yp<T7hMryS", charArray0);
      MockInetAddress.getLoopbackAddress();
      UsernamePasswordToken usernamePasswordToken1 = new UsernamePasswordToken("add", charArray0);
      char[] charArray1 = new char[7];
      charArray1[0] = '\\';
      charArray1[1] = 'J';
      charArray1[2] = 'J';
      charArray1[3] = 'J';
      charArray1[4] = 'J';
      charArray1[5] = 'J';
      charArray1[6] = 'J';
      usernamePasswordToken0.setPassword(charArray1);
      UsernamePasswordToken usernamePasswordToken2 = new UsernamePasswordToken("yp<T7hMryS", "add");
      usernamePasswordToken0.setPassword(charArray0);
      MockInetAddress.getLoopbackAddress();
      UsernamePasswordToken usernamePasswordToken3 = new UsernamePasswordToken("_7M7", "org.jsecuity.authc.UsernamePasswordToken - ypT7hNS, rememberMe=false", true);
      usernamePasswordToken3.toString();
      usernamePasswordToken1.clear();
      UsernamePasswordToken usernamePasswordToken4 = new UsernamePasswordToken();
      usernamePasswordToken4.clear();
      UsernamePasswordToken usernamePasswordToken5 = new UsernamePasswordToken();
      usernamePasswordToken1.clear();
      usernamePasswordToken4.setRememberMe(true);
      UsernamePasswordToken usernamePasswordToken6 = new UsernamePasswordToken("org.jsecurity.authc.UsernamePasswordToken - _7M7, rememberMe=true", "yp<T7hMryS");
      usernamePasswordToken4.setPassword(charArray0);
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      System.setCurrentTimeMillis((-1529L));
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.setSessionIdCookieName("kAzyi#ER%Lc");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // The convenience passthrough methods for setting session id cookie attributes are only available when the underlying SessionManager implementation is org.jsecurity.web.session.DefaultWebSessionManager, which is enabled by default when the sessionMode is 'jsecurity'.
         //
         verifyException("org.jsecurity.web.DefaultWebSecurityManager", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/jsecurity-ehcache");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "add");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/jsecurity-ehcache/ehcache_auto_created_1392409281320");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "add");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "add");
      FileSystemHandling.createFolder(evoSuiteFile0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)83;
      byteArray0[1] = (byte) (-43);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[2] = (byte) (-43);
      byteArray0[3] = (byte)83;
      byteArray0[4] = (byte)39;
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/tmp");
      FileSystemHandling.appendDataToFile(evoSuiteFile2, (byte[]) null);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, (byte[]) null);
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      FileSystemHandling.shouldThrowIOException(evoSuiteFile2);
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager(simpleAccountRealm0);
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.getSubject();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
         //
         verifyException("org.jsecurity.web.WebUtils", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/jsecurity-ehcache");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "add");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/jsecurity-ehcache/ehcache_auto_created_1392409281320");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "add");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "=p$o3NeL^UU^y+L=");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=p$o3NeL^UU^y+L=");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/tmp");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)39;
      FileSystemHandling.createFolder(evoSuiteFile0);
      byteArray0[1] = (byte)39;
      byteArray0[2] = (byte)39;
      byteArray0[3] = (byte)102;
      byteArray0[4] = (byte)102;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile(evoSuiteFile2, byteArray0);
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      WebRememberMeManager webRememberMeManager0 = new WebRememberMeManager();
      defaultWebSecurityManager0.setRememberMeManager(webRememberMeManager0);
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.createSubject((ServletRequest) servletRequestWrapper0, (ServletResponse) servletResponseWrapper0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // javax.servlet.ServletRequestWrapper cannot be cast to javax.servlet.http.HttpServletRequest
         //
         verifyException("org.jsecurity.web.session.ServletContainerSessionManager", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'J';
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("|b39j\"&7l  4", charArray0);
      InetAddress inetAddress0 = MockInetAddress.getLoopbackAddress();
      InetAddress inetAddress1 = MockInetAddress.anyLocalAddress();
      UsernamePasswordToken usernamePasswordToken1 = new UsernamePasswordToken("|b39j\"&7l  4", charArray0, false, inetAddress0);
      usernamePasswordToken1.clear();
      usernamePasswordToken1.clear();
      usernamePasswordToken0.setUsername("gl$TYt:6F2dX+");
      usernamePasswordToken1.setPassword(charArray0);
      UsernamePasswordToken usernamePasswordToken2 = new UsernamePasswordToken("|b39j\"&7l  4", charArray0, false, inetAddress0);
      usernamePasswordToken0.setUsername("org.jsecurity.authc.UsernamePasswordToken - ypT7hNS, rememberMe=false");
      usernamePasswordToken2.setPassword(charArray0);
      usernamePasswordToken2.clear();
      usernamePasswordToken0.setUsername(".WdwS2/;:=x0");
      usernamePasswordToken1.toString();
      usernamePasswordToken1.clear();
      UsernamePasswordToken usernamePasswordToken3 = new UsernamePasswordToken("org.jsecurity.authc.UsernamePasswordToken - null, rememberMe=false", charArray0);
      usernamePasswordToken3.clear();
      usernamePasswordToken3.setPassword(charArray0);
      UsernamePasswordToken usernamePasswordToken4 = new UsernamePasswordToken("' be-ng the de5ault$", "aBIS", false);
      usernamePasswordToken4.setPassword(charArray0);
      usernamePasswordToken4.clear();
      UsernamePasswordToken usernamePasswordToken5 = new UsernamePasswordToken(">]m3d\"->Gk`!E@no", charArray0, false, inetAddress1);
      usernamePasswordToken2.setRememberMe(false);
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.createSubject((ServletRequest) null, (ServletResponse) servletResponseWrapper0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsecurity.web.session.ServletContainerSessionManager", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(servletResponse0).getCharacterEncoding();
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper2 = new ServletResponseWrapper(servletResponseWrapper1);
      ServletResponseWrapper servletResponseWrapper3 = new ServletResponseWrapper(servletResponseWrapper1);
      ServletResponseWrapper servletResponseWrapper4 = new ServletResponseWrapper(servletResponseWrapper3);
      ServletResponseWrapper servletResponseWrapper5 = new ServletResponseWrapper(servletResponseWrapper0);
      servletResponseWrapper0.getCharacterEncoding();
      servletResponseWrapper3.flushBuffer();
      servletResponseWrapper3.setBufferSize((-1433047071));
      ServletResponseWrapper servletResponseWrapper6 = new ServletResponseWrapper(servletResponseWrapper1);
      ServletResponseWrapper servletResponseWrapper7 = new ServletResponseWrapper(servletResponseWrapper6);
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      ServletResponseWrapper servletResponseWrapper8 = new ServletResponseWrapper(servletResponseWrapper4);
      ServletResponseWrapper servletResponseWrapper9 = new ServletResponseWrapper(servletResponseWrapper3);
      ServletResponseWrapper servletResponseWrapper10 = new ServletResponseWrapper(servletResponseWrapper8);
      ServletResponseWrapper servletResponseWrapper11 = new ServletResponseWrapper(servletResponseWrapper10);
      ServletResponseWrapper servletResponseWrapper12 = new ServletResponseWrapper(servletResponseWrapper9);
      servletResponseWrapper8.setContentLength((-1433047071));
      ServletResponseWrapper servletResponseWrapper13 = new ServletResponseWrapper(servletResponseWrapper7);
      ServletResponseWrapper servletResponseWrapper14 = new ServletResponseWrapper(servletResponseWrapper4);
      ServletResponseWrapper servletResponseWrapper15 = new ServletResponseWrapper(servletResponseWrapper13);
      servletResponseWrapper13.getResponse();
      ServletResponseWrapper servletResponseWrapper16 = new ServletResponseWrapper(servletResponseWrapper11);
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager(simpleAccountRealm0);
      Collection<Realm> collection0 = defaultWebSecurityManager0.getRealms();
      DefaultWebSecurityManager defaultWebSecurityManager1 = new DefaultWebSecurityManager(collection0);
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.setRememberMeCookiePath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsecurity.web.DefaultWebSecurityManager", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      char[] charArray0 = new char[21];
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken();
      UsernamePasswordToken usernamePasswordToken1 = new UsernamePasswordToken("U2H/*td\" *zs8L:@=(", charArray0);
      usernamePasswordToken1.setPassword(charArray0);
      usernamePasswordToken1.setPassword(charArray0);
      usernamePasswordToken1.setRememberMe(true);
      usernamePasswordToken0.clear();
      UsernamePasswordToken usernamePasswordToken2 = new UsernamePasswordToken();
      UsernamePasswordToken usernamePasswordToken3 = new UsernamePasswordToken();
      usernamePasswordToken1.clear();
      UsernamePasswordToken usernamePasswordToken4 = new UsernamePasswordToken("Vf6E+E\"h (iH", charArray0, (InetAddress) null);
      usernamePasswordToken4.clear();
      UsernamePasswordToken usernamePasswordToken5 = new UsernamePasswordToken("The credentials provided for account [", (String) null);
      usernamePasswordToken4.setRememberMe(true);
      UsernamePasswordToken usernamePasswordToken6 = new UsernamePasswordToken("F+_z*uc%Vn", (String) null);
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      defaultWebSecurityManager0.setRememberMeCookiePath(", which is enabled by default when the ");
      assertTrue(defaultWebSecurityManager0.isHttpSessionMode());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/jsecurity-ehcache");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "add");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/jsecurity-ehcache/ehcache_auto_created_1392409281320");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "add");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "=p$o3NeL^UU^y+L=");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=p$o3NeL^UU^y+L=");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/tmp");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)39;
      FileSystemHandling.createFolder(evoSuiteFile0);
      byteArray0[1] = (byte)39;
      byteArray0[2] = (byte)39;
      byteArray0[3] = (byte)102;
      byteArray0[4] = (byte)102;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile(evoSuiteFile2, byteArray0);
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("add", "=p$o3NeL^UU^y+L=");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.bind((Subject) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
         //
         verifyException("org.jsecurity.web.WebUtils", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/jsecurity-ehcache");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Invalid sessionMode [");
      String string0 = "add";
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "add");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "add");
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleAccountRealm simpleAccountRealm1 = new SimpleAccountRealm("-oH7G;Bgm=>9");
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager(simpleAccountRealm0);
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.getSubject();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
         //
         verifyException("org.jsecurity.web.WebUtils", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/jsecurity-ehcache");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "add");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/jsecurity-ehcache/ehcache_auto_created_1392409281320");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "add");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      Integer integer0 = new Integer(1481);
      defaultWebSecurityManager0.setRememberMeCookieMaxAge(integer0);
      defaultWebSecurityManager0.setRealm(simpleAccountRealm0);
      SessionListener sessionListener0 = mock(SessionListener.class, new ViolatedAssumptionAnswer());
      defaultWebSecurityManager0.remove(sessionListener0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultWebSecurityManager defaultWebSecurityManager1 = new DefaultWebSecurityManager();
      assertTrue(defaultWebSecurityManager1.isHttpSessionMode());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0114042647073518
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '1';
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("|b39ju&NPl  P", charArray0);
      InetAddress inetAddress0 = MockInetAddress.getLoopbackAddress();
      InetAddress inetAddress1 = MockInetAddress.anyLocalAddress();
      UsernamePasswordToken usernamePasswordToken1 = new UsernamePasswordToken("', with '", charArray0, true, inetAddress0);
      usernamePasswordToken0.setUsername(".WdwS2/;:=x0");
      char[] charArray1 = new char[6];
      charArray1[0] = '<';
      charArray1[1] = '1';
      charArray1[2] = '1';
      charArray1[3] = '1';
      charArray1[4] = '4';
      charArray1[5] = '1';
      usernamePasswordToken1.setPassword(charArray1);
      usernamePasswordToken0.setUsername(".WdwS2/;:=x0");
      usernamePasswordToken1.setUsername("|b39ju&NPl  P");
      usernamePasswordToken0.clear();
      UsernamePasswordToken usernamePasswordToken2 = new UsernamePasswordToken("=YL@Ayxg-b??A}l>YI", charArray0);
      usernamePasswordToken2.setInetAddress(inetAddress0);
      MockInetAddress.getLoopbackAddress();
      UsernamePasswordToken usernamePasswordToken3 = new UsernamePasswordToken("=YL@Ayxg-b??A}l>YI", charArray0, true, inetAddress1);
      usernamePasswordToken2.setRememberMe(true);
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      boolean boolean0 = defaultWebSecurityManager0.isHttpSessionMode();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/jsecurity-ehcache");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "add");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/jsecurity-ehcache/ehcache_auto_created_1392409281320");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "add");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "add");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "add");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/tmp");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)39;
      FileSystemHandling.createFolder(evoSuiteFile0);
      byteArray0[1] = (byte)39;
      byteArray0[2] = (byte)39;
      byteArray0[3] = (byte)102;
      byteArray0[4] = (byte)102;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile(evoSuiteFile2, byteArray0);
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.getSubject();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
         //
         verifyException("org.jsecurity.web.WebUtils", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      DelegatingSubject delegatingSubject0 = new DelegatingSubject(defaultWebSecurityManager0);
      byte[] byteArray0 = new byte[6];
      Locale locale0 = Locale.UK;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      locale0.getScript();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) set0, locale_FilteringMode0);
      List<String> list0 = new LinkedList<String>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0, locale_FilteringMode1);
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.setSessionMode("'!4<,A[Z,T5");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid sessionMode ['!4<,A[Z,T5].  Allowed values are public static final String constants in the org.jsecurity.web.DefaultWebSecurityManager class: 'http' or 'jsecurity', with 'http' being the default.
         //
         verifyException("org.jsecurity.web.DefaultWebSecurityManager", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      char[] charArray0 = new char[21];
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("yp<T7hMryS", charArray0);
      UsernamePasswordToken usernamePasswordToken1 = new UsernamePasswordToken();
      usernamePasswordToken0.clear();
      usernamePasswordToken0.clear();
      UsernamePasswordToken usernamePasswordToken2 = new UsernamePasswordToken("U2H/*td\" *zs8L:@=(", charArray0);
      usernamePasswordToken2.setPassword(charArray0);
      usernamePasswordToken2.setPassword(charArray0);
      UsernamePasswordToken usernamePasswordToken3 = new UsernamePasswordToken("org.jsecuity.authc.UsernamePasswordToken - ypT7hNS, rememberMe=false", "yp<T7hMryS", true);
      usernamePasswordToken3.toString();
      usernamePasswordToken1.clear();
      UsernamePasswordToken usernamePasswordToken4 = new UsernamePasswordToken();
      usernamePasswordToken3.clear();
      UsernamePasswordToken usernamePasswordToken5 = new UsernamePasswordToken();
      UsernamePasswordToken usernamePasswordToken6 = new UsernamePasswordToken("org.jsecurity.authc.UsernamePasswordToken - org.jsecuity.authc.UsernamePasswordToken - ypT7hNS, rememberMe=false, rememberMe=true", "a:I6_6$@`a!@3sq@8", false);
      usernamePasswordToken6.clear();
      UsernamePasswordToken usernamePasswordToken7 = new UsernamePasswordToken();
      UsernamePasswordToken usernamePasswordToken8 = new UsernamePasswordToken("U2H/*td\" *zs8L:@=(", "org.jsecurity.authc.UsernamePasswordToken - org.jsecuity.authc.UsernamePasswordToken - ypT7hNS, rememberMe=false, rememberMe=true");
      UsernamePasswordToken usernamePasswordToken9 = new UsernamePasswordToken("i=3DKp?s;qJ", charArray0, true);
      usernamePasswordToken9.setRememberMe(true);
      UsernamePasswordToken usernamePasswordToken10 = new UsernamePasswordToken("org.jsecurity.authc.UsernamePasswordToken - org.jsecuity.authc.UsernamePasswordToken - ypT7hNS, rememberMe=false, rememberMe=true", "C]a=|V~;#>U),B<zL");
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      defaultWebSecurityManager0.getRealms();
      DefaultWebSecurityManager defaultWebSecurityManager1 = null;
      try {
        defaultWebSecurityManager1 = new DefaultWebSecurityManager((Collection<Realm>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Realms collection argument cannot be null.
         //
         verifyException("org.jsecurity.mgt.RealmSecurityManager", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/jsecurity-ehcache");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "addd");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/jsecurity-ehcache/ehcache_auto_created_1392409281320");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "addd");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "addd");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/tmp");
      FileSystemHandling.appendLineToFile(evoSuiteFile2, "Invalid sessionMode [");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "addd");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("/tmp");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)39;
      FileSystemHandling.createFolder(evoSuiteFile0);
      byteArray0[1] = (byte)39;
      byteArray0[2] = (byte)39;
      byteArray0[3] = (byte)102;
      byteArray0[4] = (byte)102;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile(evoSuiteFile3, byteArray0);
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.createSubject();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
         //
         verifyException("org.jsecurity.web.WebUtils", e);
      }
  }
}
