/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 13:36:12 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.5053262207700677
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = null;
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setPadText(false);
      outputFormat0.setIndent("H1F=ko`2b2mZ3>-U@");
      outputFormat0.setTrimText(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.getAttributeQuoteCharacter();
      // Undeclared exception!
      outputFormat1.setIndentSize(2147483645);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.1654496561804675
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-xhtml1mDXHzsrHw8\u0000g";
      stringArray0[1] = "-indentSize";
      stringArray0[2] = "-expandEmptyj,^BJ";
      stringArray0[3] = "-padText";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"-expandEmptyj,^BJ\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.281905766444831
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setXHTML(false);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.setIndentSize(5);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setTrimText(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      outputFormat2.setNewLineAfterDeclaration(false);
      outputFormat3.setIndentSize(5);
      outputFormat2.setIndent(true);
      outputFormat2.setNewLineAfterDeclaration(true);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat2.setExpandEmptyElements(true);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.setPadText(true);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      outputFormat1.setNewLineAfterNTags(3299);
      stringArray0[1] = null;
      outputFormat0.parseOptions(stringArray0, 5);
      outputFormat1.getLineSeparator();
      outputFormat0.setIndent("");
      outputFormat1.getAttributeQuoteCharacter();
      outputFormat0.getLineSeparator();
      outputFormat1.setIndent("");
      char char0 = outputFormat1.getAttributeQuoteCharacter();
      assertEquals(3299, outputFormat1.getNewLineAfterNTags());
      assertEquals('\"', char0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.9353859801180353
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent("-newlines");
      outputFormat0.setIndentSize((-321));
      outputFormat0.setIndentSize((-321));
      outputFormat0.setIndent("-xhtmlG`-ag6=DOY|'|n%");
      int int0 = 733;
      outputFormat0.setIndentSize(733);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "5";
      stringArray0[1] = "-newlines";
      stringArray0[2] = "-suppressDeclaration";
      outputFormat0.setIndent(false);
      stringArray0[3] = "-newlines";
      outputFormat0.parseOptions(stringArray0, 2);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-321));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -321
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.843736793968123
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent("-newlines");
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      outputFormat0.setLineSeparator("");
      outputFormat0.setOmitEncoding(false);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "w#aL1hmZ wK";
      outputFormat0.parseOptions(stringArray0, 2);
      outputFormat0.setPadText(true);
      OutputFormat.createPrettyPrint();
      outputFormat0.getLineSeparator();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat1.getIndent());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.585284495535304
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-indent", false, "c-y");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "-xhtmlG`-ag6=DOY|'|n%";
      stringArray0[2] = "-newlines";
      stringArray0[3] = "-xhtmlG`-ag6=DOY|'|n%";
      stringArray0[4] = "-indent";
      stringArray0[5] = "-xhtml1mDXHzsrHw8\u0000g";
      stringArray0[6] = "c-y";
      outputFormat0.parseOptions(stringArray0, 2);
      outputFormat0.setIndentSize(6);
      outputFormat0.setIndent("-expandEmpty-nA{vwlines");
      assertEquals("-expandEmpty-nA{vwlines", outputFormat0.getIndent());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("  ", true, (String) null);
      String string0 = outputFormat0.getEncoding();
      String[] stringArray0 = new String[5];
      stringArray0[0] = null;
      stringArray0[2] = null;
      outputFormat0.setEncoding("i");
      stringArray0[3] = "  ";
      stringArray0[4] = null;
      outputFormat0.setIndent(string0);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-2073608721));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2073608721
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0025732586933307
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-padText";
      stringArray0[1] = "Invalid attribute quote character (";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals(1, int0);
      
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat1.isPadText());
      assertTrue(outputFormat1.isTrimText());
      assertEquals("  ", outputFormat1.getIndent());
      
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat2.isXHTML());
      assertFalse(outputFormat2.isExpandEmptyElements());
      assertTrue(outputFormat2.isTrimText());
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
      assertEquals("\n", outputFormat2.getLineSeparator());
      assertFalse(outputFormat2.isOmitEncoding());
      assertFalse(outputFormat2.isNewlines());
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
      assertFalse(outputFormat2.isSuppressDeclaration());
      assertEquals("UTF-8", outputFormat2.getEncoding());
      assertFalse(outputFormat2.isPadText());
      assertEquals(0, outputFormat2.getNewLineAfterNTags());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.6960985460639177
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml1mDXHzsrHw8\u0000g");
      outputFormat0.setPadText(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setPadText(false);
      outputFormat0.setTrimText(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setPadText(true);
      outputFormat0.setPadText(true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-expandEmpty[^KXu~T+rUo=N2K";
      stringArray0[1] = "-xhtml1mDXHzsrHw8\u0000g";
      stringArray0[2] = "-expandEmpty[^KXu~T+rUo=N2K";
      stringArray0[3] = "-xhtml-ehxpandEmpty";
      stringArray0[4] = "-xhtmlG`-ag";
      stringArray0[5] = "-expandEmpty[^KXu~T+rUo=N2K";
      stringArray0[6] = "-riText";
      outputFormat0.parseOptions(stringArray0, 1);
      String[] stringArray1 = new String[5];
      stringArray0[3] = "-omitEncoding";
      stringArray1[1] = "-encoding";
      stringArray1[2] = "-xhtmlG`-ag";
      stringArray1[3] = "-riText";
      stringArray1[4] = "-xhtml1mDXHzsrHw8\u0000g";
      outputFormat0.parseOptions(stringArray1, 1);
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isPadText());
      assertEquals(6, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.781692614361692
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndentSize(953);
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("0*An*|PK&>Fm~6Z[X3");
      outputFormat0.setIndent("-xh_ml-al6DOY'|n%");
      outputFormat0.setIndent("-xh_ml-al6DOY'|n%");
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("-xh_ml-al6DOY'|n%");
      String[] stringArray0 = new String[5];
      outputFormat0.setIndentSize(953);
      stringArray0[3] = "0*An*|PK&>Fm~6Z[X3";
      stringArray0[2] = "-nAavwlines";
      stringArray0[3] = "-xh_ml-al6DOY'|n%";
      outputFormat0.parseOptions(stringArray0, 2);
      outputFormat0.setIndentSize(953);
      outputFormat0.setIndentSize(2);
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("-nAavwlines");
      outputFormat0.setIndent("7gp(v<xFS>2}\"_iLz$");
      char char0 = ' ';
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter(' ');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character ( )
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.9454908168625717
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("C", true);
      outputFormat0.setPadText(true);
      outputFormat0.setPadText(true);
      assertEquals("C", outputFormat0.getIndent());
      
      outputFormat0.setIndentSize((-911));
      outputFormat0.setXHTML(true);
      outputFormat0.setExpandEmptyElements(false);
      OutputFormat outputFormat1 = new OutputFormat("-suppressDeclaration");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "T~f)3Ja6(S])<R&";
      stringArray0[1] = "-suppressDeclaration";
      stringArray0[2] = "C";
      stringArray0[3] = "-suppressDeclaration";
      stringArray0[4] = "4_qGe^b#j";
      OutputFormat outputFormat2 = new OutputFormat((String) null, false);
      outputFormat1.setPadText(true);
      outputFormat2.setIndentSize(0);
      outputFormat1.setTrimText(false);
      outputFormat0.setIndent(false);
      OutputFormat.createPrettyPrint();
      boolean boolean0 = outputFormat0.isXHTML();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.8355442696465665
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(false);
      String[] stringArray0 = new String[6];
      outputFormat0.setIndent("-xhtml3cg5:xf_})-.");
      outputFormat0.setIndentSize((-1647));
      outputFormat0.setIndent(false);
      stringArray0[0] = "-xhtml3cg5:xf_})-.";
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setLineSeparator("-xhtml3cg5:xf_})-.");
      outputFormat0.setIndentSize(1);
      outputFormat0.setPadText(false);
      outputFormat0.setIndent("-encoding");
      outputFormat0.setNewLineAfterNTags((-389));
      outputFormat0.setIndent("`<uAKPli");
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setNewLineAfterNTags(3078);
      int int0 = 3089;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-389));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -389
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.9303769801543624
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setTrimText(true);
      outputFormat0.setPadText(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setPadText(false);
      outputFormat0.setIndent("-expandEmpty");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-expandEmpty";
      stringArray0[1] = "-expandEmpty";
      stringArray0[2] = "-expandEmpty";
      outputFormat0.parseOptions(stringArray0, 9);
      outputFormat0.setTrimText(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setIndentSize(45);
      outputFormat0.setAttributeQuoteCharacter('\'');
      outputFormat0.setTrimText(true);
      assertTrue(outputFormat0.isTrimText());
      
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat1.getIndent());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3381514637755787
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent("");
      outputFormat0.setIndent(false);
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndent("-xhtmlG`-ag6=DOY|'|n%");
      outputFormat0.setIndent("_jqOl/Z+'jcpsE!?5P");
      outputFormat0.setIndent("aBVLfBgU|f$.{YYUTU");
      outputFormat0.setIndent("-indent");
      assertEquals("-indent", outputFormat0.getIndent());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7592997849367498
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat("-encoding", true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-encoding";
      stringArray0[0] = "-xhtml1mDXHzsrHw8\u0000g";
      stringArray0[2] = "-encoding";
      stringArray0[3] = "-xhtml1mDXHzsrHw8\u0000g";
      stringArray0[4] = "-xhtml1mDXHzsrHw8\u0000g";
      outputFormat1.setIndentSize(2);
      stringArray0[5] = "-encoding";
      stringArray0[6] = "-xhtml1mDXHzsrHw8\u0000g";
      outputFormat1.parseOptions(stringArray0, 2);
      outputFormat0.setIndentSize(7);
      outputFormat1.setIndent("-encoding");
      assertEquals("-encoding", outputFormat1.getIndent());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.7377285573432877
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(false);
      String[] stringArray0 = new String[6];
      outputFormat0.setIndent("-xhtml3cg5:xf_})-.");
      outputFormat0.setIndentSize((-1647));
      outputFormat0.setIndent(false);
      stringArray0[0] = "-xhtml3cg5:xf_})-.";
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setLineSeparator("-xhtml3cg5:xf_})-.");
      outputFormat0.setIndentSize(1);
      outputFormat0.setIndent("-encoding");
      outputFormat0.setNewLineAfterNTags((-389));
      outputFormat0.setIndent("`<uAKPli");
      outputFormat0.setNewLineAfterNTags(1);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setNewLineAfterNTags(3078);
      int int0 = 3089;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.034659959734959
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      String string0 = outputFormat0.getLineSeparator();
      assertEquals("\n", string0);
      
      String[] stringArray0 = new String[15];
      stringArray0[0] = "\n";
      stringArray0[3] = "\n";
      stringArray0[2] = "\n";
      stringArray0[3] = "\n";
      stringArray0[4] = "\n";
      stringArray0[5] = "\n";
      stringArray0[6] = "\n";
      stringArray0[7] = "\n";
      outputFormat0.parseOptions(stringArray0, 1649);
      outputFormat0.setPadText(false);
      outputFormat0.getAttributeQuoteCharacter();
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertEquals(0, int0);
      
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertEquals('\"', char0);
      
      OutputFormat.createPrettyPrint();
      boolean boolean0 = outputFormat1.isPadText();
      assertTrue(boolean0);
      
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat2.isPadText());
      assertTrue(outputFormat2.isTrimText());
      assertFalse(outputFormat2.isNewlines());
      
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      assertEquals("UTF-8", outputFormat3.getEncoding());
      assertFalse(outputFormat3.isXHTML());
      assertFalse(outputFormat3.isExpandEmptyElements());
      assertTrue(outputFormat3.isTrimText());
      assertFalse(outputFormat3.isSuppressDeclaration());
      assertFalse(outputFormat3.isOmitEncoding());
      assertTrue(outputFormat3.isNewlines());
      assertTrue(outputFormat3.isNewLineAfterDeclaration());
      assertEquals("  ", outputFormat3.getIndent());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.216513061193868
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-riText";
      stringArray0[1] = "-riText";
      stringArray0[2] = "-Lhxpandjmpty";
      stringArray0[3] = "-Lhxpandjmpty";
      stringArray0[6] = "-Lhxpandjmpty";
      stringArray0[7] = "-Lhxpandjmpty";
      stringArray0[8] = "-Lhxpandjmpty";
      outputFormat0.parseOptions(stringArray0, 0);
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setAttributeQuoteCharacter('\"');
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
      
      OutputFormat.createPrettyPrint();
      outputFormat1.parseOptions(stringArray0, 0);
      assertTrue(outputFormat1.isPadText());
      assertTrue(outputFormat1.isTrimText());
      assertEquals("  ", outputFormat1.getIndent());
      assertTrue(outputFormat1.isNewlines());
      
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat3.isOmitEncoding());
      assertFalse(outputFormat3.isPadText());
      assertFalse(outputFormat3.isXHTML());
      assertTrue(outputFormat3.isTrimText());
      assertEquals("\n", outputFormat3.getLineSeparator());
      assertEquals(0, outputFormat3.getNewLineAfterNTags());
      assertFalse(outputFormat3.isExpandEmptyElements());
      assertEquals("UTF-8", outputFormat3.getEncoding());
      assertTrue(outputFormat3.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.6323282390812404
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = "-newlines";
      String string1 = "-riText";
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('$');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character ($)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("qW5mL@{RGW>QLcEl8", true, "qW5mL@{RGW>QLcEl8");
      outputFormat0.isNewlines();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "qW5mL@{RGW>QLcEl8";
      stringArray0[1] = "";
      stringArray0[2] = "qW5mL@{RGW>QLcEl8";
      stringArray0[3] = "qW5mL@{RGW>QLcEl8";
      stringArray0[4] = "qW5mL@{RGW>QLcEl8";
      stringArray0[5] = "qW5mL@{RGW>QLcEl8";
      stringArray0[6] = "qW5mL@{RGW>QLcEl8";
      stringArray0[7] = "qW5mL@{RGW>QLcEl8";
      stringArray0[8] = "qW5mL@{RGW>QLcEl8";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.1750538557887693
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(true);
      outputFormat0.setPadText(true);
      outputFormat0.setPadText(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setPadText(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setPadText(true);
      outputFormat0.setTrimText(false);
      outputFormat0.setTrimText(true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-trimText";
      outputFormat0.setTrimText(true);
      stringArray0[1] = "f8OyHj@j5]I";
      stringArray0[2] = "f8OyHj@j5]I";
      stringArray0[3] = "\"f,W2@>QoIm(`?";
      stringArray0[4] = "-trimText";
      stringArray0[5] = "f8OyHj@j5]I";
      outputFormat0.setPadText(true);
      stringArray0[6] = "-trimText";
      outputFormat0.setTrimText(true);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setPadText(false);
      outputFormat0.setPadText(true);
      outputFormat0.setPadText(false);
      assertTrue(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "59sN~y.%8EN*@9;z";
      stringArray0[1] = "cs%'";
      stringArray0[3] = "-^xpandEmpty[^KXu~T+rUo=N2K";
      stringArray0[3] = "-expandEmpty-^xpandEmpty[^KXu~T+rUo=N2K";
      stringArray0[4] = "-^xpandEmpty[^KXu~T+rUo=N2K";
      stringArray0[5] = "-expandEmpty-^xpandEmpty[^KXu~T+rUo=N2K";
      stringArray0[6] = "w`g?gC-8Y1";
      stringArray0[7] = "-expandEmpty-^xpandEmpty[^KXu~T+rUo=N2K";
      stringArray0[8] = "-^xpandEmpty[^KXu~T+rUo=N2K";
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals('\"', char0);
      assertTrue(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "59sN~y.%8EN*@9;z";
      stringArray0[2] = "-^xpandEmpty[^KXu~T+rUo=N2K";
      stringArray0[5] = "-expandEmpty-^xpandEmpty[^KXu~T+rUo=N2K";
      stringArray0[1] = "-^xpandEmpty[^KXu~T+rUo=N2K";
      stringArray0[5] = "-xhtml-)ehxpandEmpty";
      stringArray0[6] = "w`g?gC-8Y1";
      stringArray0[8] = "-^xpandEmpty[^KXu~T+rUo=N2K";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 7);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.6711893730418441
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-^xpandEmpty[^KXu~T+rUo=N2K";
      stringArray0[1] = "w`g?gC-8Y1";
      stringArray0[2] = "-expandEmpty-^xpandEmpty[^KXu~T+rUo=N2K";
      stringArray0[3] = "-xhtml-)ehxpandEmpty";
      stringArray0[4] = ")";
      stringArray0[5] = "";
      stringArray0[6] = "-indent";
      stringArray0[7] = "\u0000t{i.EaSA/M!";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isNewlines());
      assertEquals(0, int0);
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isPadText());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.292184143019244
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      outputFormat0.setPadText(false);
      outputFormat0.setIndentSize(0);
      outputFormat0.setOmitEncoding(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setExpandEmptyElements(true);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      outputFormat1.setSuppressDeclaration(false);
      outputFormat1.parseOptions(stringArray0, 93);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setPadText(true);
      outputFormat0.setNewLineAfterNTags(93);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setPadText(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setNewlines(false);
      outputFormat0.isOmitEncoding();
      outputFormat0.getIndent();
      outputFormat0.setOmitEncoding(true);
      assertTrue(outputFormat0.isOmitEncoding());
      
      outputFormat1.setIndent(true);
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat2.isNewlines());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.6904997026278057
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setLineSeparator("-encoding");
      outputFormat0.setPadText(true);
      outputFormat0.setIndent("");
      outputFormat0.setLineSeparator("[8dN6lA9n");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setEncoding("");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.getEncoding();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.setOmitEncoding(true);
      String string0 = OutputFormat.STANDARD_INDENT;
      outputFormat0.setIndent("ZC!r^;7M*8R9");
      assertEquals("[8dN6lA9n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.3932303833810415
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setEncoding("");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.getEncoding();
      outputFormat0.isPadText();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent(true);
      outputFormat0.setXHTML(false);
      outputFormat0.setPadText(false);
      outputFormat1.isTrimText();
      assertTrue(outputFormat1.isTrimText());
      
      outputFormat1.setTrimText(false);
      outputFormat0.setXHTML(false);
      outputFormat0.setIndentSize(1080);
      outputFormat1.setSuppressDeclaration(true);
      outputFormat0.isNewlines();
      outputFormat0.getNewLineAfterNTags();
      outputFormat1.setPadText(false);
      outputFormat1.setIndent("");
      outputFormat0.setOmitEncoding(false);
      outputFormat1.getNewLineAfterNTags();
      outputFormat1.isSuppressDeclaration();
      outputFormat0.isTrimText();
      String[] stringArray0 = new String[11];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[2] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      outputFormat0.parseOptions(stringArray0, 1080);
      outputFormat0.setIndent("");
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.3412474390077769
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent("");
      outputFormat0.setIndent(false);
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndent("-xhtmlG`-ag6=DOY|'|n%");
      outputFormat0.setIndent("_jqOl/Z+'jcpsE!?5P");
      outputFormat0.setIndent("*a><:W@M/=/,*3c;");
      outputFormat0.setIndent("aBVLfBgU|f$.{YYUTU");
      outputFormat0.setIndent("-indent");
      assertEquals("-indent", outputFormat0.getIndent());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.0876740201230506
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false);
      outputFormat0.setPadText(false);
      outputFormat0.setPadText(false);
      outputFormat0.isPadText();
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setIndent(false);
      outputFormat0.setPadText(false);
      outputFormat0.setIndent("");
      outputFormat0.setLineSeparator("");
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setEncoding("-suppressDeclaration");
      outputFormat0.setTrimText(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.getEncoding();
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setEncoding("-xhtmlInvalid attribute quote character (");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent(true);
      outputFormat0.setXHTML(false);
      assertEquals("-xhtmlInvalid attribute quote character (", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.0289251927098695
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("l3_");
      outputFormat0.setSuppressDeclaration(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setTrimText(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat1.setSuppressDeclaration(false);
      outputFormat0.setNewlines(true);
      outputFormat0.setNewlines(false);
      outputFormat0.setEncoding("l3_");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndentSize(34);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.isPadText();
      outputFormat0.isTrimText();
      outputFormat1.setPadText(false);
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, 34);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.759673390745343
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.isNewlines();
      outputFormat0.getAttributeQuoteCharacter();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = new OutputFormat();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "7__x7Ce;%";
      stringArray0[1] = "$?b~f@BQ;eJ(";
      stringArray0[2] = "U:I5_Xa";
      stringArray0[3] = "-expandEmpty-xhtml1mDXHzsrHw8\u0000g";
      stringArray0[4] = "";
      stringArray0[5] = "yoIO..QF\u0000V89q";
      stringArray0[6] = "-xhtml-xhtml1mDXHzsrHw8\u0000g";
      stringArray0[7] = "J-!IlK";
      stringArray0[8] = "kbFGl*[<lG]";
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.2422326546673657
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("C", true);
      outputFormat0.setPadText(false);
      outputFormat0.setOmitEncoding(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setExpandEmptyElements(true);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "C";
      stringArray0[1] = "C";
      stringArray0[2] = "C";
      stringArray0[3] = "C";
      outputFormat1.setSuppressDeclaration(false);
      outputFormat1.parseOptions(stringArray0, 93);
      outputFormat1.setNewLineAfterNTags(2);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setPadText(true);
      outputFormat0.setNewLineAfterNTags(93);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setPadText(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isOmitEncoding();
      outputFormat0.setNewlines(false);
      outputFormat0.isOmitEncoding();
      outputFormat0.getIndent();
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat1.setIndent(true);
      outputFormat0.setXHTML(true);
      assertTrue(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.575231925835416
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("C", true);
      outputFormat0.setPadText(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setPadText(true);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "C";
      stringArray0[2] = "C";
      stringArray0[3] = "";
      outputFormat0.parseOptions(stringArray0, 2);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setLineSeparator("C");
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat0.setLineSeparator("D");
      outputFormat0.setIndent("");
      OutputFormat outputFormat2 = new OutputFormat("C");
      boolean boolean0 = outputFormat0.isExpandEmptyElements();
      assertTrue(outputFormat0.isPadText());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setXHTML(true);
      outputFormat0.setXHTML(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setEncoding((String) null);
      outputFormat0.getEncoding();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setOmitEncoding(false);
      boolean boolean0 = outputFormat0.isXHTML();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.7366162102910074
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-expandEmpty";
      outputFormat0.setPadText(false);
      stringArray0[1] = "{t[w";
      OutputFormat outputFormat1 = new OutputFormat("-expandEmpty", false, "-expandEmpty");
      outputFormat1.setPadText(true);
      outputFormat0.setIndent("6!");
      stringArray0[2] = "+4s2G.,<6";
      stringArray0[3] = "G`-ag6=DOY|'|n%";
      outputFormat1.setIndentSize(3337);
      stringArray0[4] = "";
      outputFormat1.setOmitEncoding(true);
      assertTrue(outputFormat1.isPadText());
      assertTrue(outputFormat1.isOmitEncoding());
      
      OutputFormat outputFormat2 = new OutputFormat();
      outputFormat2.isOmitEncoding();
      outputFormat2.setNewLineAfterDeclaration(true);
      outputFormat2.setSuppressDeclaration(false);
      outputFormat2.setPadText(false);
      outputFormat2.getIndent();
      outputFormat0.setOmitEncoding(false);
      assertFalse(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.575231925835416
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("C", true);
      outputFormat0.setPadText(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setPadText(true);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "C";
      stringArray0[2] = "C";
      stringArray0[3] = "";
      outputFormat0.parseOptions(stringArray0, 2);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setLineSeparator("C");
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat0.setLineSeparator("");
      outputFormat0.setIndent("");
      boolean boolean0 = outputFormat0.isExpandEmptyElements();
      assertEquals("", outputFormat0.getLineSeparator());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.65807330394088
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-ehxpandEmpty";
      stringArray0[1] = "wCe5jY?SS_m";
      stringArray0[2] = "-ehxpandEmpty";
      OutputFormat.createPrettyPrint();
      stringArray0[3] = "Invalid attriute quote character (";
      stringArray0[4] = "-ehxpandEmpty";
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setEncoding("-ehxpandEmpty");
      assertEquals("-ehxpandEmpty", outputFormat0.getEncoding());
      
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndentSize((-2071259690));
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setIndentSize(802);
      outputFormat0.setIndent("M");
      assertEquals("M", outputFormat0.getIndent());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = "-expandEmpty-expandXmptoy";
      OutputFormat outputFormat0 = new OutputFormat("-expandEmpty-expandXmptoy");
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('W');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (W)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.9136655198736401
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true);
      assertFalse(outputFormat0.isExpandEmptyElements());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "59sN~y.%8EN*@9;z";
      stringArray0[1] = "cs%'";
      stringArray0[2] = "-^xpandEmpty[^KXu~T+rUo=N2K";
      stringArray0[3] = "-expandEmpty-^xpandEmpty[^KXu~T+rUo=N2K";
      stringArray0[4] = "-^xpandEmpty[^KXu~T+rUo=N2K";
      stringArray0[5] = "-xhtml-)ehxpandEmpty";
      stringArray0[6] = "w`g?gC-8Y1";
      stringArray0[7] = "-expandEmpty-^xpandEmpty[^KXu~T+rUo=N2K";
      stringArray0[8] = "-^xpandEmpty[^KXu~T+rUo=N2K";
      int int0 = outputFormat0.parseOptions(stringArray0, 7);
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertEquals(8, int0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.9454908168625717
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false, "");
      outputFormat0.isSuppressDeclaration();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      outputFormat0.getLineSeparator();
      stringArray0[3] = "";
      stringArray0[4] = "";
      outputFormat1.parseOptions(stringArray0, 1829);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat1.setLineSeparator("");
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat0.setLineSeparator("");
      outputFormat1.setIndent("-lineSeparator");
      assertEquals("", outputFormat1.getLineSeparator());
      
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertEquals("\n", outputFormat2.getLineSeparator());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.9678593488156242
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndentSize(953);
      outputFormat0.setIndent("");
      outputFormat0.setIndent("-xh_mlG`-ag6=DOY|'|n%");
      outputFormat0.setLineSeparator("Rv/d");
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("-xh_mlG`-ag6=DOY|'|n%");
      String[] stringArray0 = new String[5];
      outputFormat0.setIndentSize(953);
      stringArray0[3] = "-html1mDHzsrHw8g";
      stringArray0[2] = "-nA{vwlines";
      stringArray0[3] = "-xh_mlG`-ag6=DOY|'|n%";
      outputFormat0.setIndent("");
      assertEquals("Rv/d", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.1136632569776563
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "-xhtmlG`-ag6=DOY|'|n%";
      stringArray0[2] = "-xhtml1mDXHzsrHw8\u0000g";
      stringArray0[3] = ")";
      stringArray0[4] = "-xhtmlG`-ag6=DOY|'|n%";
      stringArray0[5] = "-xhtmlG`-ag6=DOY|'|n%";
      stringArray0[6] = "-xhtmlG`-ag6=DOY|'|n%";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 2122);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 2122);
      String[] stringArray1 = new String[5];
      stringArray1[0] = "-newlines";
      stringArray1[1] = "-xhtml1mDXHzsrHw8\u0000g";
      stringArray1[2] = "-xhtmlG`-ag6=DOY|'|n%";
      stringArray1[3] = "-newlines";
      stringArray1[4] = "-newlines";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, (-1020));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1020
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.9517607579688783
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-xhtml1mDXHzsrHw8\u0000g";
      stringArray0[1] = "-xhtml1mDXHzsrHw8\u0000g";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 2);
      String[] stringArray1 = new String[5];
      stringArray1[0] = "-xhtml1mDXHzsrHw8\u0000g";
      stringArray1[1] = "-xhtml1mDXHzsrHw8\u0000g";
      stringArray1[2] = "-xhtml1mDXHzsrHw8\u0000g";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.9946571675310574
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String[] stringArray0 = new String[17];
      stringArray0[0] = "Fe@x&.{MU_5cc(3";
      stringArray0[1] = "-expandEmptyxjw5 [";
      stringArray0[2] = "-lineSeparator";
      stringArray0[3] = "qOsAE=PLkzNE";
      OutputFormat outputFormat0 = new OutputFormat("-expandEmptyxjw5 [", false, "");
      String[] stringArray1 = new String[2];
      stringArray1[0] = "-lineSeparator";
      stringArray1[1] = "-lineSeparator";
      int int0 = outputFormat0.parseOptions(stringArray1, 0);
      assertEquals("-lineSeparator", outputFormat0.getLineSeparator());
      assertEquals(2, int0);
  }
}
