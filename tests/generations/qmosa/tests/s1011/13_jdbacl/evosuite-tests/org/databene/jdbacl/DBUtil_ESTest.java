/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 11:17:29 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.UnsupportedEncodingException;
import java.lang.reflect.Proxy;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.SQLWarning;
import java.sql.Statement;
import java.util.List;
import java.util.Properties;
import java.util.function.Consumer;
import java.util.regex.PatternSyntaxException;
import org.apache.derby.diag.ErrorMessages;
import org.apache.derby.iapi.error.StandardException;
import org.apache.derby.iapi.sql.execute.TemporaryRowHolder;
import org.apache.derby.iapi.store.access.Qualifier;
import org.apache.derby.iapi.types.CDCDataValueFactory;
import org.apache.derby.iapi.types.NumberDataValue;
import org.apache.derby.iapi.types.SQLReal;
import org.apache.derby.impl.sql.compile.FromVTI;
import org.apache.derby.impl.sql.execute.BaseActivation;
import org.apache.derby.impl.sql.execute.ConstantActionActivation;
import org.apache.derby.impl.sql.execute.GenericScanQualifier;
import org.apache.derby.impl.store.access.UTFQualifier;
import org.databene.commons.ErrorHandler;
import org.databene.commons.Level;
import org.databene.jdbacl.DBExecutionResult;
import org.databene.jdbacl.DBUtil;
import org.databene.jdbacl.JDBCConnectData;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBPackage;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBProcedure;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.TableContainer;
import org.databene.jdbacl.model.TableContainerSupport;
import org.databene.jdbacl.model.TableHolder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.gds.XSQLDA;
import org.firebirdsql.gds.impl.AbstractIscDbHandle;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.jni.EmbeddedGDSImpl;
import org.firebirdsql.gds.impl.jni.isc_db_handle_impl;
import org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl;
import org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.wire.JavaGDSImpl;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jdbc.AbstractStatement;
import org.firebirdsql.jdbc.FBArray;
import org.firebirdsql.jdbc.FBConnection;
import org.firebirdsql.jdbc.FBPreparedStatement;
import org.firebirdsql.jdbc.FBStatement;
import org.firebirdsql.jdbc.InternalTransactionCoordinator;
import org.h2.Driver;
import org.h2.command.ddl.CreateTableData;
import org.h2.engine.Database;
import org.h2.engine.Session;
import org.h2.engine.User;
import org.h2.jdbcx.JdbcDataSource;
import org.h2.jdbcx.JdbcXAConnection;
import org.h2.tools.Csv;
import org.h2.tools.Recover;
import org.h2.tools.SimpleResultSet;
import org.h2.value.ValueLob;
import org.hsqldb.Result;
import org.hsqldb.jdbc.jdbcClob;
import org.hsqldb.jdbc.jdbcConnection;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      String string0 = ".KwQjSx&o";
      Recover recover0 = new Recover();
      Recover recover1 = new Recover();
      ErrorHandler.getDefault();
      CreateTableData createTableData0 = new CreateTableData();
      Session session0 = createTableData0.session;
      String string1 = "--G";
      String string2 = "------T ,X4z]?%|m*|u";
      org.hsqldb.Session session1 = mock(org.hsqldb.Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session1).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session1);
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate(".KwQjSx&o", jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6820748660026672
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TableContainerSupport tableContainerSupport0 = new TableContainerSupport();
      tableContainerSupport0.getTables();
      TableContainerSupport tableContainerSupport1 = new TableContainerSupport();
      TableContainerSupport tableContainerSupport2 = new TableContainerSupport();
      tableContainerSupport2.getTables(true);
      boolean boolean0 = DBUtil.available("There are unclosed database resources", "There are unclosed database resources", "There are unclosed database resources", "There are unclosed database resources");
      assertFalse(boolean0);
      
      Csv csv0 = Csv.getInstance();
      Recover recover0 = new Recover();
      ValueLob valueLob0 = ValueLob.open(65545, recover0, 65545, 110, 5373L, false);
      Reader reader0 = valueLob0.getReader();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "There are unclosed database resources";
      stringArray0[1] = "There are unclosed database resources";
      stringArray0[2] = "There are unclosed database resources";
      stringArray0[3] = "There are unclosed database resources";
      stringArray0[4] = "There are unclosed database resources";
      stringArray0[5] = "@`";
      ResultSet resultSet0 = csv0.read(reader0, stringArray0);
      String string0 = DBUtil.format(resultSet0);
      assertEquals("There are unclosed database resources, There are unclosed database resources1, There are unclosed database resources11, There are unclosed database resources111, There are unclosed database resources1111, @`\n", string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.6650517089974617
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Csv.getInstance();
      TableContainerSupport tableContainerSupport0 = new TableContainerSupport();
      TableContainer tableContainer0 = new TableContainer("(f)D~j-;yIeS");
      TableContainerSupport tableContainerSupport1 = new TableContainerSupport();
      TableContainer tableContainer1 = new TableContainer("(f)D~j-;yIeS");
      tableContainer1.toString();
      tableContainer1.getSequences(true);
      TableContainer tableContainer2 = new TableContainer("(f)D~j-;yIeS");
      tableContainer2.equals(tableContainerSupport0);
      tableContainer2.isIdentical(tableContainer1);
      TableContainer tableContainer3 = new TableContainer("(f)D~j-;yIeS", tableContainer1);
      TableContainer tableContainer4 = new TableContainer("F");
      tableContainer4.getSchema();
      tableContainerSupport0.addSubContainer(tableContainer4);
      tableContainer4.getTable("(f)D~j-;yIeS");
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.format(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("z TA0wV9iS3qx/kQ_:U");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("N", dBSchema0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "N";
      stringArray0[1] = "N";
      stringArray0[2] = "z TA0wV9iS3qx/kQ_:U";
      stringArray0[3] = "N";
      stringArray0[4] = "N";
      stringArray0[5] = "pa";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "pa", true, stringArray0);
      boolean boolean0 = DBUtil.equivalent(dBPrimaryKeyConstraint0, dBPrimaryKeyConstraint0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4877614825285095
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      jdbcConnection jdbcConnection0 = new jdbcConnection((org.hsqldb.Session) null);
      String string0 = "{Om";
      Level level0 = Level.warn;
      Level level1 = Level.ignore;
      ErrorHandler errorHandler0 = new ErrorHandler("{Om", level1);
      jdbcConnection0.nativeSQL("FLOAT");
      ErrorHandler.setDefaultLevel(level0);
      SQLWarning sQLWarning0 = StandardException.newWarning("FLOAT");
      sQLWarning0.spliterator();
      SQLException sQLException0 = new SQLException("--pGy{-;w,r#kfYw", "FLOAT", sQLWarning0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      sQLWarning0.forEach(consumer0);
      sQLException0.getStackTrace();
      errorHandler0.handleError("{Om", (Throwable) sQLWarning0);
      Level level2 = Level.warn;
      ErrorHandler.setDefaultLevel(level2);
      DBUtil.runScript("--pGy{-;w,r#kfYw", 'C', (Connection) jdbcConnection0, false, errorHandler0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("FLOAT", (Connection) jdbcConnection0, false, (ErrorHandler) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer((String) null);
      TableContainerSupport tableContainerSupport0 = new TableContainerSupport();
      TableContainerSupport tableContainerSupport1 = new TableContainerSupport();
      TableContainer tableContainer1 = new TableContainer((String) null);
      TableContainer tableContainer2 = new TableContainer((String) null);
      tableContainerSupport1.addSubContainer(tableContainer2);
      tableContainer1.getSchema();
      tableContainer1.equals(tableContainerSupport1);
      tableContainer1.toString();
      TableContainer tableContainer3 = new TableContainer("!&V.Jysfx", tableContainer0);
      tableContainerSupport1.addSubContainer(tableContainer3);
      TableContainerSupport tableContainerSupport2 = new TableContainerSupport();
      tableContainerSupport2.getTable("!-=7wY)iiSvO");
      Class<FBConnection> class0 = FBConnection.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      // Undeclared exception!
      try { 
        DBUtil.runScript((String) null, (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("99)(-V-0ceEU.env.properties");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "select count(*) from ");
      // Undeclared exception!
      try { 
        DBUtil.getMetaData("99)(-V-0ceEU", true, false, true, true, "%&[Ms,+(", true, true);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unclosed character class near index 7
         // %&[Ms,+(
         //        ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("--SELECT BYTE_COUNT FROM INFORMATION_SCHEMA.LOBS WHERE ID = ?", 12345);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/databene/99)(-V-0ceEU.env.properties");
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)1;
      byteArray0[0] = (byte)1;
      byte byte1 = (byte)50;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)78;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      String string0 = "org.apache.derbyimpl.store.access.heap.HeapPotCommit";
      String string1 = "99)(-V-0ceEU";
      try { 
        DBUtil.getMetaData("99)(-V-0ceEU", true, false, false, false, "org.apache.derbyimpl.store.access.heap.HeapPotCommit", false, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      jdbcConnection jdbcConnection0 = new jdbcConnection((org.hsqldb.Session) null);
      Level level0 = Level.warn;
      Level level1 = Level.ignore;
      ErrorHandler errorHandler0 = new ErrorHandler("{Om", level1);
      jdbcConnection0.nativeSQL("FLOAT");
      ErrorHandler.setDefaultLevel(level0);
      SQLWarning sQLWarning0 = StandardException.newWarning("FLOAT");
      SQLException sQLException0 = new SQLException("--pGy{-;w,r#kfYw", "FLOAT", sQLWarning0);
      sQLException0.getLocalizedMessage();
      sQLWarning0.addSuppressed(sQLException0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Recover recover0 = new Recover();
      recover0.openFile("DAM)E9B+:x", "FLOAT", false);
      Recover recover1 = new Recover();
      Recover recover2 = new Recover();
      recover2.getLobConnection();
      try { 
        DBUtil.prepareStatement((Connection) jdbcConnection0, "IS$Sz1?ax_|dVsL", false, 32, (-423), 2010);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // java.lang.String@0000000010
         //
         verifyException("org.hsqldb.jdbc.Util", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("99)(-V-0ceEU.env.properties");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "select count(*) from ");
      try { 
        DBUtil.getMetaData("99)(-V-0ceEU", true, true, true, true, "org.apache.derbyimpl.store.access.heap.HeapPotCommit", true, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Csv csv0 = Csv.getInstance();
      Csv csv1 = Csv.getInstance();
      csv1.setLineSeparator("e-jFXDS{2K~~");
      SimpleResultSet simpleResultSet0 = new SimpleResultSet(csv0);
      DBUtil.nextLine(simpleResultSet0);
      String string0 = "territory";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("~Rd");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "e-jFXDS{2K~~");
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "pa", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("e-jFXDS{2K~~", false, dBPrimaryKeyConstraint0);
      DBUniqueIndex dBUniqueIndex1 = new DBUniqueIndex("~Rd", true, dBPrimaryKeyConstraint0);
      dBUniqueIndex1.equals(dBPrimaryKeyConstraint0);
      DBUniqueIndex dBUniqueIndex2 = new DBUniqueIndex("o", false, dBPrimaryKeyConstraint0);
      dBUniqueIndex2.getTable();
      DBUtil.containsMandatoryColumn(dBPrimaryKeyConstraint0);
      // Undeclared exception!
      try { 
        DBUtil.parseResultRow(simpleResultSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.h2.tools.SimpleResultSet", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      Csv csv0 = Csv.getInstance();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet(csv0);
      DBUtil.currentLine(simpleResultSet0);
      isc_stmt_handle_impl0.unregisterTransaction();
      isc_stmt_handle_impl0.setRsrId(44);
      isc_stmt_handle_impl0.ensureCapacity(40);
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl1.setExecutionPlan(",\n    ");
      XSQLDA xSQLDA0 = new XSQLDA();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)102;
      byteArray0[1] = (byte) (-12);
      xSQLDA0.sqln = (-2368);
      byteArray0[2] = (byte) (-82);
      byteArray0[3] = (byte)90;
      byteArray0[4] = (byte)65;
      byteArray0[5] = (byte)124;
      byteArray0[6] = (byte) (-22);
      xSQLDA0.blr = byteArray0;
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA0);
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_db_handle_impl isc_db_handle_impl0 = isc_stmt_handle_impl2.getRsr_rdb();
      assertNull(isc_db_handle_impl0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      jdbcConnection jdbcConnection0 = new jdbcConnection((org.hsqldb.Session) null);
      Level level0 = Level.ignore;
      ErrorHandler errorHandler0 = new ErrorHandler("{Om", level0);
      jdbcConnection0.nativeSQL("FLOAT");
      SQLWarning sQLWarning0 = StandardException.newWarning("FLOAT");
      SQLException sQLException0 = new SQLException("--pGy{-;w,r#kfYw", "FLOAT", sQLWarning0);
      sQLWarning0.addSuppressed(sQLException0);
      sQLException0.getStackTrace();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      sQLWarning0.forEach(consumer0);
      sQLException0.getStackTrace();
      errorHandler0.handleError("{Om", (Throwable) sQLWarning0);
      Level level1 = Level.warn;
      ErrorHandler.setDefaultLevel(level1);
      DBUtil.wrapWithPooledConnection(jdbcConnection0, false);
      DBUtil.close((Connection) jdbcConnection0);
      // Undeclared exception!
      try { 
        DBUtil.getMetaData((Connection) jdbcConnection0, "FLOAT", "FLOAT", false, false, false, false, "No JDBC URL specified", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcDatabaseMetaData", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.checkReadOnly("updateFot(", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: updateFot(
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte byte0 = (byte) (-95);
      byte[] byteArray0 = new byte[3];
      String string0 = "]vn{gPk&2Z~06b<qo";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "]vn{gPk&2Z~06b<qo");
      byteArray0[1] = (byte) (-95);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DBUtil.close((Statement) null);
      ErrorMessages errorMessages0 = new ErrorMessages();
      Proxy proxy0 = (Proxy)DBUtil.createLoggingResultSet(errorMessages0, (Statement) null);
      try { 
        DBUtil.parseResultRow((ResultSet) proxy0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      jdbcConnection jdbcConnection0 = new jdbcConnection((org.hsqldb.Session) null);
      // Undeclared exception!
      try { 
        DBUtil.queryWithMetadata("pG", jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-95);
      byteArray0[1] = (byte) (-95);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DBUtil.close((Statement) null);
      org.hsqldb.Session session0 = mock(org.hsqldb.Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      Proxy proxy0 = (Proxy)DBUtil.wrapWithPooledConnection(jdbcConnection0, false);
      // Undeclared exception!
      try { 
        DBUtil.query((String) null, (Connection) proxy0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Internal exception in method: public java.sql.ResultSet org.databene.jdbacl.proxy.LoggingStatementHandler.executeQuery(java.lang.String) throws java.sql.SQLException
         //
         verifyException("org.databene.commons.ExceptionMapper", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      Csv csv0 = Csv.getInstance();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet(csv0);
      isc_stmt_handle_impl0.unregisterTransaction();
      isc_stmt_handle_impl0.ensureCapacity(40);
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl1.setExecutionPlan(",\n    ");
      XSQLDA xSQLDA0 = new XSQLDA();
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[0] = (byte)102;
      xSQLDA0.sqld = (-1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      isc_stmt_handle_impl0.clearRows();
      isc_stmt_handle_impl1.setOutSqlda(xSQLDA0);
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl1.setUpdateCount(866);
      DBUtil.parseAndSimplifyResultSet(simpleResultSet0);
      DBUtil.parseResultSet(simpleResultSet0);
      DBUtil.getOpenResultSetCount();
      Proxy proxy0 = (Proxy)DBUtil.createLoggingResultSet(simpleResultSet0, (Statement) null);
      assertNotNull(proxy0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DBUtil.close((Connection) null);
      ErrorHandler errorHandler0 = new ErrorHandler("JZ{)~.6");
      // Undeclared exception!
      try { 
        DBUtil.runScript((String) null, "pU!M5", 'Y', (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Csv csv0 = Csv.getInstance();
      Csv.getInstance();
      csv0.readRow();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("SE", 12345);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      SimpleResultSet simpleResultSet0 = new SimpleResultSet(csv0);
      Class<Driver> class0 = Driver.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      Proxy proxy0 = (Proxy)DBUtil.wrapWithPooledConnection((Connection) null, true);
      // Undeclared exception!
      try { 
        DBUtil.close((Connection) proxy0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.proxy.PooledConnectionHandler", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.3634541894442356
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DBUtil.assertAllDbResourcesClosed(false);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DBUtil.getOpenStatementCount();
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.startExecution();
      constantActionActivation0.startExecution();
      // Undeclared exception!
      try { 
        constantActionActivation0.getResultSetFactory();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.execute.BaseActivation", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      jdbcConnection jdbcConnection0 = new jdbcConnection((org.hsqldb.Session) null);
      Level level0 = Level.ignore;
      ErrorHandler errorHandler0 = new ErrorHandler("{Om", level0);
      jdbcConnection0.nativeSQL("FLOAT");
      SQLWarning sQLWarning0 = StandardException.newWarning("FLOAT");
      SQLException sQLException0 = new SQLException("FLOAT", "FLOAT", sQLWarning0);
      sQLWarning0.addSuppressed(sQLException0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      SQLWarning sQLWarning1 = new SQLWarning("FLOAT", "derby.storage.minimumRecordSize", sQLException0);
      sQLWarning1.getNextWarning();
      sQLWarning0.setNextWarning((SQLWarning) null);
      sQLWarning0.forEach(consumer0);
      sQLException0.getStackTrace();
      errorHandler0.handleError("{Om", (Throwable) sQLWarning0);
      Level level1 = Level.warn;
      ErrorHandler.setDefaultLevel(level1);
      // Undeclared exception!
      try { 
        DBUtil.countRows("{Om", jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.Trace", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.openFile("8_^=vl", "8_^=vl", true);
      recover0.openFile("8_^=vl", ":9BKOeB+c/", true);
      Recover recover1 = new Recover();
      Recover.execute("8_^=vl", "-eV8gMo2X fKt7:>U");
      recover1.getLobConnection();
      Class<FBStatement> class0 = FBStatement.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      errorHandler0.setLoggingStackTrace(true);
      org.hsqldb.Session session0 = mock(org.hsqldb.Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      Class<FBPreparedStatement> class1 = FBPreparedStatement.class;
      // Undeclared exception!
      try { 
        DBUtil.queryScalarArray("8_^=vl", class1, (Connection) jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TableContainerSupport tableContainerSupport0 = new TableContainerSupport();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("-Om+p(:},p.env.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "org.h2.value.ValueTime");
      DBUtil.existsEnvironment("-Om+p(:},p");
      // Undeclared exception!
      try { 
        DBUtil.executeQuery("-Om+p(:},p", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.3634541894442356
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.assertAllDbResourcesClosed(true);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // There are unclosed database resources: 2 result set(s), 1 statement(s)
         //
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      boolean boolean0 = true;
      DBUtil.createLoggingStatementHandler((Statement) null, true);
      Database database0 = null;
      String string0 = ".9QihIL)\\";
      User user0 = null;
      try {
        user0 = new User((Database) null, 111, ".9QihIL)", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.h2.engine.DbObjectBase", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.5719579500515657
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.format(simpleResultSet0);
      FromVTI fromVTI0 = new FromVTI();
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator();
      InternalTransactionCoordinator internalTransactionCoordinator1 = new InternalTransactionCoordinator();
      InternalTransactionCoordinator internalTransactionCoordinator2 = new InternalTransactionCoordinator();
      DBUtil.available("~", "", "", "2f)uo38cQ@\"C%cHgs/");
      FBArray fBArray0 = new FBArray();
      fBArray0.getResultSet();
      DBUtil.closeResultSetAndStatement(simpleResultSet0);
      assertEquals(1000, simpleResultSet0.getFetchDirection());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Statement statement0 = null;
      DBUtil.close((Statement) null);
      ErrorMessages errorMessages0 = new ErrorMessages();
      // Undeclared exception!
      try { 
        DBUtil.getStatement(errorMessages0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error getting statement from result set
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.3417215058934495
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      jdbcConnection jdbcConnection0 = new jdbcConnection((org.hsqldb.Session) null);
      Level level0 = Level.warn;
      Level level1 = Level.ignore;
      ErrorHandler errorHandler0 = new ErrorHandler("{Om", level1);
      jdbcConnection0.nativeSQL("FLOAT");
      ErrorHandler.setDefaultLevel(level0);
      SQLWarning sQLWarning0 = StandardException.newWarning("FLOAT");
      SQLException sQLException0 = new SQLException("--pGy{-;w,r#kfYw", "FLOAT", sQLWarning0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      sQLException0.forEach(consumer1);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[2];
      StackTraceElement stackTraceElement0 = new StackTraceElement("--.", "bb,S", "Tried to mutate a database with read-only settings: ", (-687));
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("FLOAT", "FLOAT", "Tried to mutate a database with read-only settings: ", (-687));
      stackTraceElementArray0[1] = stackTraceElement1;
      sQLException0.setStackTrace(stackTraceElementArray0);
      sQLWarning0.forEach(consumer0);
      sQLException0.getStackTrace();
      errorHandler0.handleError("{Om", (Throwable) sQLWarning0);
      Level level2 = Level.warn;
      ErrorHandler.setDefaultLevel(level2);
      DBExecutionResult dBExecutionResult0 = DBUtil.runScript("--pGy{-;w,r#kfYw", 'C', (Connection) jdbcConnection0, false, errorHandler0);
      DBExecutionResult dBExecutionResult1 = DBUtil.runScript("", 'F', (Connection) jdbcConnection0, (boolean) dBExecutionResult0.changedStructure, errorHandler0);
      ErrorHandler errorHandler1 = new ErrorHandler("8gkiGWGa{");
      // Undeclared exception!
      try { 
        DBUtil.runScript("FLOAT", '}', (Connection) jdbcConnection0, (boolean) dBExecutionResult1.changedStructure, errorHandler1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = "--No";
      DBSchema dBSchema0 = new DBSchema("--No");
      DBPackage dBPackage0 = new DBPackage("sWl", dBSchema0);
      dBPackage0.equals("--No");
      DBProcedure dBProcedure0 = new DBProcedure(" |failed: ", dBPackage0);
      dBPackage0.addProcedure(dBProcedure0);
      DBCatalog dBCatalog0 = new DBCatalog();
      dBCatalog0.getSchemas();
      DBSchema dBSchema1 = new DBSchema("sWl", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("--No", dBSchema1);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      defaultDBTable1.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        DBUtil.containsMandatoryColumn((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "hf";
      stringArray0[1] = "hf";
      stringArray0[2] = "hf";
      stringArray0[3] = "hf";
      stringArray0[4] = "Expected a row.";
      stringArray0[5] = "Expected a row.";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "Expected a row.", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("hf", true, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(dBTable0, "Expected a row.", true, stringArray0);
      // Undeclared exception!
      try { 
        DBUtil.containsMandatoryColumn(dBUniqueConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column 'hf' not found in table 'null'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Statement statement0 = null;
      FBArray fBArray0 = new FBArray();
      fBArray0.getResultSet();
      // Undeclared exception!
      try { 
        DBUtil.getStatement((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Csv csv0 = Csv.getInstance();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet(csv0);
      DBUtil.getStatement(simpleResultSet0);
      String string0 = "SE";
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl0, databaseParameterBufferImp0, (AbstractIscDbHandle) null, gDSHelper_GDSHelperErrorListener0);
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection((FBManagedConnection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.openFile("8_^=vl", (String) null, true);
      recover0.openFile("C", (String) null, false);
      Recover recover1 = new Recover();
      recover0.getLobConnection();
      FBArray fBArray0 = new FBArray();
      fBArray0.getResultSet();
      // Undeclared exception!
      try { 
        DBUtil.closeResultSetAndStatement((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Recover recover0 = new Recover();
      Recover recover1 = new Recover();
      Recover recover2 = new Recover();
      UTFQualifier uTFQualifier0 = new UTFQualifier(312, "XSLAB.D");
      Qualifier[][] qualifierArray0 = new Qualifier[0][6];
      BaseActivation.reinitializeQualifiers(qualifierArray0);
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.getTargetVTI();
      // Undeclared exception!
      try { 
        DBUtil.parseAndSimplifyResultSet((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      org.hsqldb.Session session0 = mock(org.hsqldb.Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      // Undeclared exception!
      try { 
        DBUtil.logMetaData(jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcDatabaseMetaData", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer((String) null);
      TableContainerSupport tableContainerSupport0 = new TableContainerSupport();
      TableContainerSupport tableContainerSupport1 = new TableContainerSupport();
      TableContainer tableContainer1 = new TableContainer((String) null);
      TableContainer tableContainer2 = new TableContainer((String) null);
      tableContainerSupport1.addSubContainer(tableContainer2);
      tableContainer1.getSchema();
      tableContainer1.equals(tableContainerSupport1);
      tableContainer1.toString();
      TableContainer tableContainer3 = new TableContainer("!&V.Jysfx", tableContainer0);
      tableContainerSupport1.addSubContainer(tableContainer3);
      TableContainerSupport tableContainerSupport2 = new TableContainerSupport();
      tableContainerSupport2.getTable("!-=7wY)iiSvO");
      Class<FBConnection> class0 = FBConnection.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("8~QYL9T0pC!E(7]", "--SE", '|', (Connection) null, false, errorHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: 8~QYL9T0pC!E(7]
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.openFile("8_^=vl", "8_^=vl", true);
      Recover recover1 = new Recover();
      recover1.openFile("@NY9);.", "1w0=\"Ki%M'", true);
      recover0.openFile("kE<;+kv97;Ma6ft]A", "1w0=\"Ki%M'", true);
      Recover recover2 = new Recover();
      recover2.getLobConnection();
      Class<FBStatement> class0 = FBStatement.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      try { 
        DBUtil.runScript("kE<;+kv97;Ma6ft]A", "@NY9);.", 't', (Connection) null, true, errorHandler0);
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.2667097817732322
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "SE");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FBArray fBArray0 = new FBArray();
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-67);
      Class<DBUtil> class0 = DBUtil.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      errorHandler0.setLoggingStackTrace(false);
      Level level0 = Level.debug;
      ErrorHandler.setDefaultLevel(level0);
      ErrorHandler.setDefaultLevel(level0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Level level1 = Level.fatal;
      ErrorHandler.setDefaultLevel(level1);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "SE");
      // Undeclared exception!
      try { 
        DBUtil.runScript("SELECT BYTE_COUNT FROM INFORMATION_SCHEMA.LOBS WHERE ID = ?", '=', (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.openFile("#$", "#$", true);
      Recover recover1 = new Recover();
      recover1.openFile("@NY9);.", "1w0=\"Ki%M'", false);
      recover0.openFile("aT1Xsi2#anMe", "----T ,X4z]?%|m*|u", true);
      recover0.openFile("kE<;+kv97;Ma6ft]A", "1w0=\"Ki%M'", true);
      Recover recover2 = new Recover();
      recover2.getLobConnection();
      Class<FBStatement> class0 = FBStatement.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("No", "1w0=\"Ki%M'", (Connection) null, false, errorHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: No
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      // Undeclared exception!
      try { 
        DBUtil.runScript((String) null, (String) null, (Connection) null, true, (ErrorHandler) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ResultSet resultSet0 = null;
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      TemporaryRowHolder temporaryRowHolder0 = mock(TemporaryRowHolder.class, new ViolatedAssumptionAnswer());
      constantActionActivation0.setParentResultSet(temporaryRowHolder0, "--k%qT.uKAnG");
      constantActionActivation0.getTargetVTI();
      // Undeclared exception!
      try { 
        DBUtil.parseResultSet((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Csv.getInstance();
      Csv csv0 = Csv.getInstance();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet(csv0);
      DBUtil.nextLine(simpleResultSet0);
      FromVTI fromVTI0 = new FromVTI();
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      boolean boolean0 = false;
      try { 
        DBUtil.connect("ne{dyC5dw>wA", (String) null, "ne{dyC5dw>wA", "ne{dyC5dw>wA", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting ne{dyC5dw>wA failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.queryString((PreparedStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("--~");
      TableContainerSupport tableContainerSupport0 = new TableContainerSupport();
      TableContainerSupport tableContainerSupport1 = new TableContainerSupport();
      tableContainerSupport1.addSubContainer(tableContainer0);
      tableContainerSupport1.getTable("3)HE:X'Eo,C|O$p");
      tableContainerSupport1.addSubContainer(tableContainer0);
      TableContainerSupport tableContainerSupport2 = new TableContainerSupport();
      List<DBTable> list0 = DBUtil.dependencyOrderedTables(tableContainerSupport2);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      dBCatalog0.getSchema("CR%yuTY(lu8r");
      dBCatalog0.getComponents();
      dBCatalog0.getSchema("\nR8");
      // Undeclared exception!
      try { 
        DBUtil.dependencyOrderedTables((TableHolder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      // Undeclared exception!
      try { 
        DBUtil.checkReadOnly((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      int int0 = DBUtil.getOpenPreparedStatementCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer((String) null);
      TableContainerSupport tableContainerSupport0 = new TableContainerSupport();
      TableContainerSupport tableContainerSupport1 = new TableContainerSupport();
      TableContainer tableContainer1 = new TableContainer((String) null);
      TableContainer tableContainer2 = new TableContainer((String) null);
      tableContainerSupport1.addSubContainer(tableContainer2);
      tableContainer1.getSchema();
      tableContainer1.equals(tableContainerSupport1);
      tableContainer1.toString();
      TableContainer tableContainer3 = new TableContainer("!&V.Jysfx", tableContainer0);
      tableContainerSupport1.addSubContainer(tableContainer3);
      TableContainerSupport tableContainerSupport2 = new TableContainerSupport();
      tableContainerSupport2.getTable("!-=7wY)iiSvO");
      Class<JdbcXAConnection> class0 = JdbcXAConnection.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      // Undeclared exception!
      try { 
        DBUtil.runScript((String) null, 'n', (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Connection connection0 = null;
      DBUtil.executeUpdate((String) null, (Connection) null);
      // Undeclared exception!
      try { 
        DBUtil.query("y7nS", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "lhv4Jl!texi}j%");
      DBUtil.available("org.apache.derby.impl.store.access.heap.HeapPostCommit", "org.apache.derby.impl.store.access.heap.HeapPostCommit", "l $JXu$=2_(X|G.3j", "\nR8");
      DBUtil.close((Connection) null);
      try { 
        DBUtil.getMetaData((Connection) null, "\nR8", "l $JXu$=2_(X|G.3j", false, false, false, true, "org.apache.derby.impl.store.access.heap.HeapPostCommit", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Recover recover0 = new Recover();
      Recover recover1 = new Recover();
      Recover recover2 = new Recover();
      Recover recover3 = new Recover();
      recover2.getLobConnection();
      ErrorHandler errorHandler0 = new ErrorHandler("<");
      // Undeclared exception!
      try { 
        DBUtil.querySingleRow(".KwQjSx&o", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.1815461113373171
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.openFile("#$", "#$", true);
      Recover recover1 = new Recover();
      recover1.openFile("@NY9);.", "1w0=\"Ki%M'", false);
      recover0.openFile("aT1Xsi2#anMe", "----T ,X4z]?%|m*|u", true);
      recover0.openFile("kE<;+kv97;Ma6ft]A", "1w0=\"Ki%M'", true);
      Recover recover2 = new Recover();
      recover2.getLobConnection();
      Class<FBStatement> class0 = FBStatement.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("No", ';', (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String string0 = "''";
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate("''", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.399891585838211
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      jdbcConnection jdbcConnection0 = new jdbcConnection((org.hsqldb.Session) null);
      Level level0 = Level.warn;
      Level level1 = Level.ignore;
      ErrorHandler errorHandler0 = new ErrorHandler("{Om", level1);
      jdbcConnection0.nativeSQL("FLOAT");
      ErrorHandler.setDefaultLevel(level0);
      SQLWarning sQLWarning0 = StandardException.newWarning("FLOAT");
      SQLException sQLException0 = new SQLException("--pGy{-;w,r#kfYw", "FLOAT", sQLWarning0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      sQLWarning0.forEach(consumer0);
      sQLException0.getStackTrace();
      errorHandler0.handleError("7JSR", (Throwable) null);
      Level level2 = Level.debug;
      ErrorHandler.setDefaultLevel(level2);
      // Undeclared exception!
      try { 
        DBUtil.runScript("{Om", 'u', (Connection) jdbcConnection0, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.Trace", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      String string0 = "Zhf";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Zhf.env.properties");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-112);
      byteArray0[1] = (byte)97;
      byteArray0[2] = (byte)120;
      byteArray0[3] = (byte)25;
      byteArray0[4] = (byte)46;
      byteArray0[5] = (byte) (-75);
      byteArray0[6] = (byte) (-5);
      byteArray0[7] = (byte)67;
      byteArray0[8] = (byte) (-17);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      // Undeclared exception!
      try { 
        DBUtil.connect("Zhf", true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Class<Integer> class0 = Integer.TYPE;
      DBUtil.checkReadOnly("not yet implemented", false);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FBArray fBArray0 = new FBArray();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte) (-4);
      byteArray0[2] = (byte)19;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      String string0 = "CAST";
      DBUtil.available(") or wrong URL format (", "8e5{@&~BX1T)IDp*o", "CAST", "8e5{@&~BX1T)IDp*o");
      Proxy proxy0 = (Proxy)DBUtil.wrapWithPooledConnection((Connection) null, false);
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) proxy0, "CAST", false, (-1859), (-1859), 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer((String) null);
      TableContainerSupport tableContainerSupport0 = new TableContainerSupport();
      TableContainerSupport tableContainerSupport1 = new TableContainerSupport();
      TableContainer tableContainer1 = new TableContainer((String) null);
      TableContainer tableContainer2 = new TableContainer((String) null);
      tableContainerSupport1.addSubContainer(tableContainer2);
      tableContainer1.getSchema();
      tableContainer1.equals(tableContainerSupport1);
      tableContainer1.toString();
      TableContainer tableContainer3 = new TableContainer("!&V.Jysfx", tableContainer0);
      tableContainerSupport1.addSubContainer(tableContainer3);
      TableContainerSupport tableContainerSupport2 = new TableContainerSupport();
      tableContainerSupport2.getTable("!-=7wY)iiSvO");
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "!-=7wY)iiSvO", false, (-165765749), 91, 91);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.nextLine((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      TableContainerSupport tableContainerSupport0 = new TableContainerSupport();
      boolean boolean0 = DBUtil.existsEnvironment("--OmZ+p(:},p");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Driver driver0 = new Driver();
      Properties properties0 = null;
      driver0.connect("|n/LBjKV\f", (Properties) null);
      String string0 = "--#a";
      try { 
        DBUtil.getMetaData((Connection) null, "|n/LBjKV\f", "|n/LBjKV\f", false, true, true, false, "--#a", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("-{@$=", "!vO'l|l;e]", "!vO'l|l;e]", "!vO'l|l;e]");
      String string0 = "J}";
      boolean boolean0 = false;
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl0, databaseParameterBufferImp0, isc_db_handle_impl0, (GDSHelper.GDSHelperErrorListener) null);
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      FBStatement fBStatement0 = new FBStatement(gDSHelper0, 120, 32, (byte)1, internalTransactionCoordinator_MetaDataTransactionCoordinator0);
      fBStatement0.getConnection();
      internalTransactionCoordinator_MetaDataTransactionCoordinator0.executionStarted((AbstractStatement) null);
      String string1 = "--statement(s)";
      // Undeclared exception!
      try { 
        DBUtil.getMetaData((Connection) null, "~!@7{#2&Aa", "~!@7{#2&Aa", true, false, false, true, "-{@$=", true);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Illegal repetition near index 0
         // -{@$=
         // ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("!vO'l|l;e]", (String) null, "org.postgresql.jdbc3g.AbstractJdbc3gStatement", "f{zd5%h#itBuB");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("", "TCA5/NVv9", "uI=<`", "uI=<`");
      boolean boolean0 = true;
      boolean boolean1 = false;
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC driver class name specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      // Undeclared exception!
      try { 
        DBUtil.queryLong(".env.properties", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      TableContainerSupport tableContainerSupport0 = new TableContainerSupport();
      TableContainer tableContainer0 = new TableContainer("Cq7,>#MZk");
      TableContainerSupport tableContainerSupport1 = new TableContainerSupport();
      tableContainerSupport0.addSubContainer(tableContainer0);
      tableContainerSupport0.getTable("Cq7,>#MZk");
      TableContainerSupport tableContainerSupport2 = new TableContainerSupport();
      tableContainerSupport2.addSubContainer(tableContainer0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl isc_stmt_handle_impl1 = new org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl();
      isc_stmt_handle_impl1.getOutSqlda();
      isc_stmt_handle_impl0.setOutSqlda((XSQLDA) null);
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl2.getRsr_rdb();
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("Cq7,>#MZk", "yNE8-bJeOcD/", (String) null, (String) null);
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting yNE8-bJeOcD/ failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.connect((JDBCConnectData) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("--SELECT BYTE_COUNT FROM INFORMATION_SCHEMA.LOBS WHERE ID = ?", 12345);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/databene/99)(-V-0ceEU.env.properties");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)78;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      try { 
        DBUtil.getMetaData("99)(-V-0ceEU", true, true, false, true, "org.apache.derbyimpl.store.access.heap.HeapPotCommit", false, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      try { 
        DBUtil.getMetaData((Connection) null, "HJ", "u1uE!Oho /Goo N!/H", false, true, false, false, "HJ", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("99)(-V-0ceEU.env.properties");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "select count(*) from ");
      try { 
        DBUtil.getMetaData("99)(-V-0ceEU", true, true, false, true, "org.apache.derbyimpl.store.access.heap.HeapPotCommit", true, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Recover recover0 = new Recover();
      recover0.openFile("J0Cm]7UL8567$?'nc*F", "", false);
      recover0.openFile("-E", "UZ", false);
      Recover recover1 = new Recover();
      recover0.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.getMetaData((Connection) null, "<?xml version=\"1.0\"?>\n", "-E", false, false, false, false, ";%oTbCGs2c94w}([?<", false);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unclosed character class near index 18
         // ;%oTbCGs2c94w}([?<
         //                   ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      DBUtil.getOpenStatementCount();
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.getTargetVTI();
      constantActionActivation0.startExecution();
      // Undeclared exception!
      try { 
        constantActionActivation0.getResultSetFactory();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.execute.BaseActivation", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.close((ResultSet) null);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      Level level0 = Level.trace;
      ErrorHandler errorHandler0 = new ErrorHandler("(+p", level0);
      Level level1 = Level.ignore;
      ErrorHandler.setDefaultLevel(level1);
      assertNotSame(level1, level0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.close((ResultSet) simpleResultSet0);
      EmbeddedGDSImpl embeddedGDSImpl0 = null;
      try {
        embeddedGDSImpl0 = new EmbeddedGDSImpl();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.queryScalar("--SELECT BYTE_COUNT FROM INFORMATION_SCHEMA.LOBS WHERE ID = ?", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.queryScalar("--SELECT BYTE_COUNT FRAM INFORMATION_SCHEMA.LOBS WHERE IT = ?", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.currentLine((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.currentLine(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      String string0 = DBUtil.escape("`%>{>4");
      assertEquals("`%>{>4", string0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      DBUtil.escape("");
      DBUtil.getOpenConnectionCount();
      // Undeclared exception!
      try { 
        DBUtil.queryWithMetadata("", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Class<Integer> class0 = Integer.TYPE;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ErrorMessages errorMessages0 = new ErrorMessages();
      System.setCurrentTimeMillis(994L);
      // Undeclared exception!
      try { 
        DBUtil.escape((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      String string0 = null;
      Class<Integer> class0 = Integer.TYPE;
      Class<Integer> class1 = Integer.class;
      // Undeclared exception!
      try { 
        DBUtil.queryScalarArray((String) null, class1, (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.format((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Recover recover0 = new Recover();
      Recover recover1 = new Recover();
      Recover recover2 = new Recover();
      Recover recover3 = new Recover();
      recover2.getLobConnection();
      ErrorHandler.getDefault();
      // Undeclared exception!
      try { 
        DBUtil.querySingleRow(".KwQjSx&o", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.queryAndSimplify("--42Z21", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[3];
      stringArray0[0] = ">l20`n??L.2%Mh";
      stringArray0[1] = "6(<SPpU08j-/;";
      stringArray0[2] = "--SELECT BYTE_COUNT FROM INFORMATION_SCHEMA.LOBS WHERE ID = ?";
      defaultDBTable0.getUniqueConstraint(stringArray0);
      defaultDBTable0.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        DBUtil.equivalent((DBUniqueConstraint) null, (DBPrimaryKeyConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("--J}qAZ=Hb,GB}Y", 12);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-39);
      byteArray0[1] = (byte)89;
      byteArray0[2] = (byte)84;
      byteArray0[3] = (byte) (-118);
      byteArray0[4] = (byte) (-105);
      byteArray0[5] = (byte)2;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = DBUtil.getOpenResultSetCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.6141342688540803
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        DBUtil.assertAllDbResourcesClosed(true);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // There are unclosed database resources: 2 result set(s), 2 statement(s)
         //
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      boolean boolean0 = DBUtil.available("\nR8", "select count(*) from ", "lRYXe2v[UUiDS'RO?ha", "There are unclosed database resources");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      try { 
        DBUtil.connect("This statement does not declare an OUT parameter.  Use '{' ?= call ... '}' to declare one.", "Connecting the database failed silently - probably due to wrong driver (", "Connecting the database failed silently - probably due to wrong driver (", "XX&64\"&C", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting This statement does not declare an OUT parameter.  Use '{' ?= call ... '}' to declare one. failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-117);
      byteArray0[1] = (byte)51;
      byteArray0[2] = (byte)12;
      DBUtil.resetMonitors();
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      assertEquals(0, jdbcDataSource0.getTraceId());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      String string0 = "--hide--";
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "--hide--", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: --hide--
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      Csv.getInstance();
      Csv.getInstance();
      // Undeclared exception!
      try { 
        DBUtil.checkReadOnly("@p~>!XkU,&D]$:DqL", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: @p~>!XkU,&D]$:DqL
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      jdbcConnection jdbcConnection0 = new jdbcConnection((org.hsqldb.Session) null);
      Level level0 = Level.ignore;
      ErrorHandler errorHandler0 = new ErrorHandler("{Om", level0);
      jdbcConnection0.nativeSQL("FLOAT");
      SQLWarning sQLWarning0 = StandardException.newWarning("FLOAT");
      SQLWarning sQLWarning1 = new SQLWarning("FLOAT", "{Om");
      sQLWarning0.addSuppressed(sQLWarning1);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      SQLWarning sQLWarning2 = new SQLWarning("derby.storage.minimumRecordSize", "derby.storage.minimumRecordSize", sQLWarning1);
      sQLWarning2.getNextWarning();
      sQLWarning0.setNextWarning((SQLWarning) null);
      sQLWarning0.forEach(consumer0);
      sQLWarning1.getStackTrace();
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) jdbcConnection0, "Connecting the database failed silently - probably due to wrong driver (", true, 335544364, 335544364, (-423));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: Connecting the database failed silently - probably due to wrong driver (
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer((String) null);
      TableContainerSupport tableContainerSupport0 = new TableContainerSupport();
      TableContainerSupport tableContainerSupport1 = new TableContainerSupport();
      TableContainer tableContainer1 = new TableContainer((String) null);
      TableContainer tableContainer2 = new TableContainer((String) null);
      tableContainerSupport1.addSubContainer(tableContainer2);
      tableContainer1.getSchema();
      tableContainer1.equals(tableContainerSupport1);
      tableContainer1.toString();
      TableContainer tableContainer3 = new TableContainer("!&V.Jysfx", tableContainer0);
      tableContainerSupport1.addSubContainer(tableContainer3);
      TableContainerSupport tableContainerSupport2 = new TableContainerSupport();
      tableContainerSupport2.getTable("!-=7wY)iiSvO");
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      Class<Integer> class0 = Integer.TYPE;
      // Undeclared exception!
      try { 
        DBUtil.connect("7}Q", false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition '7}Q.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getConnectData("Th");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition 'Th.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test99()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Recover recover0 = new Recover();
      Recover recover1 = new Recover();
      Recover recover2 = new Recover();
      Recover recover3 = new Recover();
      recover2.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.getMetaData("--274qgn4C5", false, true, true, true, "Tj1kcZG!)`r", true, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition '--274qgn4C5.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }
}
