/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 13:20:06 GMT 2019
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.DirectoryScanner;
import com.lts.io.ImprovedFile;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.lang.reflect.Array;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.Vector;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String string0 = "~M2M.`!@`E;Gfd..jar";
      String[] stringArray0 = new String[4];
      stringArray0[0] = "~M2M.`!@`E;Gfd..jar";
      stringArray0[1] = "~M2M.`!@`E;Gfd..jar";
      stringArray0[2] = "~M2M.`!@`E;Gfd..jar";
      stringArray0[3] = "~M2M.`!@`E;Gfd..jar";
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.filesIncluded = vector0;
      archiveScanner0.includes = stringArray0;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(2);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
      Vector<Locale> vector1 = new Vector<Locale>();
      archiveScanner0.dirsExcluded = vector1;
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("com.lts.pest.tree.SimpleTreeListener");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/");
      FileSystemHandling.createFolder(evoSuiteFile0);
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      improvedFile0.toURL();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      archiveScanner0.haveSlowResults = true;
      DirectoryScanner.match("", "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Vector<Locale> vector0 = new Vector<Locale>();
      archiveScanner0.dirsIncluded = vector0;
      archiveScanner0.addDefaultExcludes();
      FileSystemHandling.shouldAllThrowIOExceptions();
      archiveScanner0.includes = stringArray0;
      long long0 = (-1206L);
      System.setCurrentTimeMillis((-1206L));
      String string0 = "rgGH^n!U.jar";
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("rgGH^n!U.jar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5814742493461305
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      DirectoryScanner.match("", "");
      DirectoryScanner.match("", "");
      Vector<Locale> vector0 = new Vector<Locale>();
      archiveScanner0.includes = stringArray0;
      DirectoryScanner.matchPath("", "");
      archiveScanner0.dirsIncluded = vector0;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.isExcluded("");
      vector0.containsAll(archiveScanner0.dirsIncluded);
      System.setCurrentTimeMillis(2);
      System.setCurrentTimeMillis(1);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("rgGHy+!U.jar", "rgGHy+!U.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[6];
      Vector<Object> vector0 = new Vector<Object>();
      Integer integer0 = new Integer(1);
      vector0.add((Object) integer0);
      archiveScanner0.filesExcluded = vector0;
      stringArray0[0] = "rgGHy+!U.jar";
      stringArray0[2] = "rgGHy+!U.jar";
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.includes = stringArray0;
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "rgGHy+!U.jar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("St", "St");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "St";
      DirectoryScanner.match("St", "St");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Vector<Locale> vector0 = new Vector<Locale>();
      archiveScanner0.includes = stringArray0;
      DirectoryScanner.matchPath("St", "St");
      archiveScanner0.dirsIncluded = vector0;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.isExcluded("St");
      vector0.containsAll(archiveScanner0.dirsIncluded);
      archiveScanner0.includes = stringArray0;
      System.setCurrentTimeMillis(1);
      System.setCurrentTimeMillis(1);
      try { 
        archiveScanner0.processDirectory(improvedFile0, "St", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/St/St
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7917080122369193
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      ImprovedFile improvedFile0 = new ImprovedFile("jru6a%VPD");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "jru6a%VPD";
      stringArray0[1] = "jru6a%VPD";
      Vector<Locale> vector0 = new Vector<Locale>();
      vector0.removeElement("jru6a%VPD");
      archiveScanner0.dirsNotIncluded = vector0;
      stringArray0[2] = "jru6a%VPD";
      stringArray0[3] = "";
      archiveScanner0.includes = stringArray0;
      improvedFile0.createTempDir();
      archiveScanner0.scandir(improvedFile0, "", true);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      linkedList0.clone();
      vector0.removeAllElements();
      archiveScanner0.haveSlowResults = true;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      linkedList0.toArray();
      linkedList0.pollFirst();
      linkedList0.add((Locale.LanguageRange) null);
      List<String>[] listArray0 = (List<String>[]) Array.newInstance(List.class, 0);
      vector0.toArray(listArray0);
      Vector<Locale.LanguageRange> vector1 = new Vector<Locale.LanguageRange>();
      linkedList0.spliterator();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList3 = new LinkedList<String>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale.LanguageRange> vector2 = new Vector<Locale.LanguageRange>();
      archiveScanner0.filesExcluded = vector2;
      archiveScanner0.scandir(improvedFile0, "", false);
      System.setCurrentTimeMillis(0);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive((File) null, ",[tT@=W<b!nc%Co/O");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("KPu&", "rgGHy+!U.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[6];
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      archiveScanner0.dirsIncluded = vector0;
      stringArray0[0] = "rgGHy+!U.jar";
      stringArray0[2] = "rgGHy+!U.jar";
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.includes = stringArray0;
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "rgGHy+!U.jar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("rgGHy+!U.jar", "rgGHy+!U.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "rgGHy+!U.jar";
      archiveScanner0.excludes = stringArray0;
      stringArray0[2] = "rgGHy+!U.jar";
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsNotIncluded = vector0;
      vector0.containsAll(archiveScanner0.dirsNotIncluded);
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.includes = archiveScanner0.excludes;
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "rgGHy+!U.jar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5814742493461305
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      DirectoryScanner.match("", "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Vector<Locale> vector0 = new Vector<Locale>();
      archiveScanner0.includes = stringArray0;
      DirectoryScanner.matchPath("", "");
      archiveScanner0.dirsIncluded = vector0;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.isExcluded("");
      vector0.containsAll(archiveScanner0.dirsIncluded);
      archiveScanner0.includes = stringArray0;
      System.setCurrentTimeMillis(1);
      System.setCurrentTimeMillis(1);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      ImprovedFile improvedFile0 = new ImprovedFile("jru6a%VPD");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "jru6a%VPD";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("jru6a%VPD");
      FileSystemHandling.createFolder(evoSuiteFile0);
      stringArray0[1] = "jru6a%VPD";
      improvedFile0.setExecutable(false, true);
      Vector<Locale> vector0 = new Vector<Locale>();
      archiveScanner0.dirsNotIncluded = vector0;
      stringArray0[2] = "jru6a%VPD";
      stringArray0[3] = "";
      archiveScanner0.includes = stringArray0;
      improvedFile0.createTempDir();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.setPermissions(evoSuiteFile1, false, false, true);
      System.setCurrentTimeMillis(0);
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("LqFv$r^lPg$WibN");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.545727559299491
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      ImprovedFile improvedFile0 = new ImprovedFile("jru6a%VPD");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "jru6a%VPD";
      stringArray0[1] = "jru6a%VPD";
      Vector<Locale> vector0 = new Vector<Locale>();
      vector0.removeElement("jru6a%VPD");
      archiveScanner0.dirsNotIncluded = vector0;
      stringArray0[2] = "jru6a%VPD";
      stringArray0[3] = "";
      archiveScanner0.includes = stringArray0;
      improvedFile0.createTempDir();
      improvedFile0.createTempDir();
      archiveScanner0.scandir(improvedFile0, ".JAR", false);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      vector0.removeAllElements();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Locale.LanguageRange locale_LanguageRange0 = null;
      try {
        locale_LanguageRange0 = new Locale.LanguageRange(".ear");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // range=.ear
         //
         verifyException("java.util.Locale$LanguageRange", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      File file0 = null;
      ImprovedFile improvedFile0 = ImprovedFile.createTempImprovedFile("|hOe", "|hOe", (File) null);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "|hOe";
      stringArray0[1] = "|hOe";
      stringArray0[2] = "|hOe";
      stringArray0[3] = "|hOe";
      stringArray0[4] = "|hOe";
      archiveScanner0.setIncludes(stringArray0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsIncluded = vector0;
      archiveScanner0.addDefaultExcludes();
      try { 
        archiveScanner0.processDirectory(improvedFile0, "|hOe", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /tmp/|hOe0|hOe
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "hru6at4Ey";
      stringArray0[1] = "hru6at4Ey";
      Vector<Locale> vector0 = new Vector<Locale>();
      vector0.removeElement("hru6at4Ey");
      archiveScanner0.dirsNotIncluded = vector0;
      stringArray0[2] = "hru6at4Ey";
      stringArray0[3] = "hru6at4Ey";
      archiveScanner0.includes = stringArray0;
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Locale.getISOCountries();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.lookup(linkedList0, vector0);
      locale0.clone();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      vector0.removeAllElements();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      linkedList1.toArray();
      linkedList1.spliterator();
      Locale locale1 = Locale.ITALIAN;
      locale1.toLanguageTag();
      vector0.trimToSize();
      Locale locale2 = Locale.TAIWAN;
      locale1.getDisplayCountry();
      vector0.add(locale2);
      linkedList1.removeLastOccurrence(archiveScanner0);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      linkedList3.iterator();
      linkedList2.pollFirst();
      locale2.getDisplayScript(locale1);
      linkedList2.spliterator();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList5 = new LinkedList<String>();
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      archiveScanner0.processDirectory((File) null, "$E4-\"U#(4Ym", true);
      assertEquals(0, ArchiveScanner.FILE);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[4];
      stringArray0[0] = ",FoAAjBf}5>B5gZ&";
      stringArray0[1] = ",FoAAjBf}5>B5gZ&";
      Vector<Locale> vector0 = new Vector<Locale>();
      archiveScanner0.dirsNotIncluded = vector0;
      vector0.removeAllElements();
      stringArray0[2] = ",FoAAjBf}5>B5gZ&";
      stringArray0[3] = ",FoAAjBf}5>B5gZ&";
      archiveScanner0.includes = stringArray0;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Predicate<Locale.LanguageRange> predicate0 = Predicate.isEqual((Object) archiveScanner0.dirsNotIncluded);
      Predicate<Locale.LanguageRange> predicate1 = predicate0.and(predicate0);
      Predicate<Locale.LanguageRange> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = Predicate.isEqual((Object) ",FoAAjBf}5>B5gZ&");
      predicate0.negate();
      Locale locale0 = Locale.CHINA;
      Predicate<Object> predicate4 = Predicate.isEqual((Object) locale0);
      Predicate<Object> predicate5 = predicate3.and(predicate4);
      Predicate<Object> predicate6 = predicate3.or(predicate5);
      predicate3.or(predicate6);
      Predicate<Object> predicate7 = predicate3.or(predicate3);
      Predicate<Object> predicate8 = predicate3.and(predicate7);
      Predicate<Object> predicate9 = predicate8.or(predicate3);
      predicate0.and(predicate9);
      Predicate<Object> predicate10 = predicate3.and(predicate9);
      Predicate<Object> predicate11 = predicate3.and(predicate7);
      predicate3.or(predicate11);
      predicate0.and(predicate9);
      predicate8.or(predicate3);
      Predicate<Object> predicate12 = predicate10.negate();
      predicate2.and(predicate12);
      Predicate<Locale.LanguageRange> predicate13 = predicate2.or(predicate0);
      linkedList0.removeIf(predicate13);
      Locale locale1 = Locale.ENGLISH;
      locale1.getDisplayScript(locale0);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory((File) null, "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.excludes = stringArray0;
      Vector<String> vector1 = new Vector<String>(2);
      archiveScanner0.filesExcluded = vector1;
      improvedFile0.setLastModified(0L);
      archiveScanner0.includes = stringArray0;
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.processFile("");
      assertEquals(0, ArchiveScanner.FILE);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = new Integer(2);
      vector0.add(integer0);
      archiveScanner0.filesNotIncluded = vector0;
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.includes = stringArray0;
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      DirectoryScanner.matchPath("", "");
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsExcluded = vector0;
      archiveScanner0.excludes = stringArray0;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.includes = stringArray0;
      System.setCurrentTimeMillis(1);
      archiveScanner0.processDirectory(improvedFile0, "", true);
      System.setCurrentTimeMillis(0L);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      DirectoryScanner.matchPath("", "");
      archiveScanner0.excludes = stringArray0;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.includes = stringArray0;
      System.setCurrentTimeMillis(1);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      ImprovedFile improvedFile1 = new ImprovedFile("");
      archiveScanner0.setBasedir((File) improvedFile1);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "CZ.jar";
      stringArray0[1] = "";
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) vector0, (Collection<Locale>) linkedList0, locale_FilteringMode0);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) vector0, (Collection<Locale>) list0, locale_FilteringMode0);
      Vector<Locale> vector1 = new Vector<Locale>(list1);
      archiveScanner0.filesNotIncluded = vector1;
      stringArray0[2] = "";
      archiveScanner0.includes = stringArray0;
      String string0 = "||x>)>E>f'";
      Locale locale0 = Locale.ROOT;
      linkedList0.add(locale0);
      archiveScanner0.processArchive((File) null, "||x>)>E>f'");
      // Undeclared exception!
      try { 
        archiveScanner0.isArchive((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("rgGHy+!U.jar", "rgGHy+!U.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[6];
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesExcluded = vector0;
      stringArray0[0] = "rgGHy+!U.jar";
      archiveScanner0.excludes = stringArray0;
      stringArray0[2] = "rgGHy+!U.jar";
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.includes = stringArray0;
      archiveScanner0.processArchive(improvedFile0, "rgGHy+!U.jar");
      assertEquals(2, ArchiveScanner.ARCHIVE);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      Vector<String> vector0 = new Vector<String>();
      vector0.add("");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Vector<Integer> vector1 = new Vector<Integer>();
      archiveScanner0.dirsNotIncluded = vector1;
      archiveScanner0.filesIncluded = vector0;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.includes = stringArray0;
      archiveScanner0.processFile("");
      System.setCurrentTimeMillis(2);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("\u00068W55W0D(~YfXV_.jar", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      DirectoryScanner.matchPatternStart("\u00068W55W0D(~YfXV_.jar", "");
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsExcluded = vector0;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("Kwub", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      Vector<InputStream> vector0 = new Vector<InputStream>();
      Vector<Integer> vector1 = new Vector<Integer>();
      vector1.add((Integer) 0);
      Integer integer0 = new Integer(3642);
      vector1.add(integer0);
      archiveScanner0.filesIncluded = vector1;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.setBasedir((File) improvedFile0);
      archiveScanner0.includes = stringArray0;
      archiveScanner0.setBasedir("");
      try { 
        archiveScanner0.processArchive(improvedFile0, "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, /home/ubuntu/termite/projects/78_caloriecount/Kwub
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("\u00068W55W0D(~YfXV_.jar", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[6];
      DirectoryScanner.matchPatternStart("\u00068W55W0D(~YfXV_.jar", "");
      stringArray0[0] = "";
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsExcluded = vector0;
      stringArray0[2] = "\u00068W55W0D(~YfXV_.jar";
      DirectoryScanner.matchPath("H|l*KG`:@e,dqw1Ag", "OTHER_ERROR.jar");
      stringArray0[4] = "\u00068W55W0D(~YfXV_.jar";
      archiveScanner0.addDefaultExcludes();
      DirectoryScanner.matchPatternStart("", "");
      archiveScanner0.includes = stringArray0;
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.8548720307766426
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("com.lts.io.ArchiveScanner.jar");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, "error processing file ");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      boolean boolean0 = true;
      MockFile.createTempFile(".EAR.jar", "error processing file ", (File) improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, ".EAR.jar", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = "";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("rg+I^+\\S@");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, true);
      ImprovedFile improvedFile0 = new ImprovedFile("rg+I^+S@", "");
      improvedFile0.setWritable(true, true);
      MockFile mockFile0 = new MockFile("", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Locale locale0 = Locale.forLanguageTag("");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("rg+I^+\\S@");
      archiveScanner0.addDefaultExcludes();
      FileSystemHandling.setPermissions(evoSuiteFile1, false, false, true);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      Vector<Object> vector0 = new Vector<Object>(set0);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.lookupTag(linkedList0, set0);
      archiveScanner0.filesExcluded = vector0;
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      vector0.parallelStream();
      improvedFile0.setWritable(true);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("CwBXo_5W");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("Yk#hhy.jar.jar.jar.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      boolean boolean0 = archiveScanner0.isArchive(improvedFile0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4471627089619605
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      MockFile mockFile0 = new MockFile("", "");
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(mockFile0, "Bv|jV~J#", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("=`,+g!UP3CUE", "=`,+g!UP3CUE");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.addDefaultExcludes();
      DirectoryScanner.match("=`,+g!UP3CUE", "=`,+g!UP3CUE");
      System.setCurrentTimeMillis(0L);
      try { 
        archiveScanner0.scandir(improvedFile0, "=`,+g!UP3CUE", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/=`,+g!UP3CUE/=`,+g!UP3CUE
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[4];
      stringArray0[0] = ",FoAAjBf}5>B5gZ&";
      stringArray0[1] = ",FoAAjBf}5>B5gZ&";
      Vector<Locale> vector0 = new Vector<Locale>();
      archiveScanner0.dirsNotIncluded = vector0;
      stringArray0[2] = ",FoAAjBf}5>B5gZ&";
      stringArray0[3] = ",FoAAjBf}5>B5gZ&";
      archiveScanner0.includes = stringArray0;
      Predicate<Locale.LanguageRange> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Locale.LanguageRange> predicate1 = predicate0.and(predicate0);
      Predicate<Locale.LanguageRange> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = Predicate.isEqual((Object) ",FoAAjBf}5>B5gZ&");
      predicate0.and(predicate3);
      Locale locale0 = Locale.CHINA;
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate4.negate();
      Predicate<Object> predicate6 = predicate3.or(predicate5);
      predicate3.or(predicate6);
      Predicate<Object> predicate7 = predicate3.or(predicate3);
      Predicate<Object> predicate8 = predicate3.and(predicate7);
      Predicate<Object> predicate9 = predicate8.or(predicate3);
      predicate0.and(predicate9);
      Predicate<Object> predicate10 = predicate3.and(predicate9);
      Predicate<Object> predicate11 = predicate3.and(predicate7);
      predicate3.or(predicate11);
      predicate0.and(predicate9);
      predicate7.or(predicate5);
      predicate8.or(predicate3);
      Predicate<Object> predicate12 = predicate10.negate();
      predicate2.and(predicate12);
      predicate2.or(predicate0);
      DirectoryScanner.match(",FoAAjBf}5>B5gZ&", ",FoAAjBf}5>B5gZ&");
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      locale0.getDisplayScript(locale0);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory((File) null, "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = "=),+g)UPzCDE";
      ImprovedFile improvedFile0 = new ImprovedFile("=),+g)UPzCDE", "=),+g)UPzCDE");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.isArchive(improvedFile0);
      DirectoryScanner.matchPath(string0, string0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      int int0 = (-26);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("z0^Cw1 jw.*4~LrX~M", "z0^Cw1 jw.*4~LrX~M");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scanArchive(improvedFile0, "QKPu&.par");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, /home/ubuntu/termite/projects/78_caloriecount/z0^Cw1 jw.*4~LrX~M/z0^Cw1 jw.*4~LrX~M
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[4];
      stringArray0[0] = ",FoAAjBf}5>B5gZ&";
      stringArray0[1] = ",FoAAjBf}5>B5gZ&";
      Vector<Locale> vector0 = new Vector<Locale>();
      archiveScanner0.dirsNotIncluded = vector0;
      stringArray0[2] = ",FoAAjBf}5>B5gZ&";
      stringArray0[3] = ",FoAAjBf}5>B5gZ&";
      archiveScanner0.includes = stringArray0;
      Predicate<Locale.LanguageRange> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Locale.LanguageRange> predicate1 = predicate0.and(predicate0);
      Predicate<Locale.LanguageRange> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = Predicate.isEqual((Object) ",FoAAjBf}5>B5gZ&");
      Predicate<Locale.LanguageRange> predicate4 = predicate0.and(predicate3);
      Predicate<Object> predicate5 = predicate3.negate();
      Predicate<Object> predicate6 = predicate5.negate();
      Predicate<Object> predicate7 = predicate3.or(predicate6);
      Predicate<Object> predicate8 = predicate3.or(predicate7);
      Predicate<Object> predicate9 = predicate3.or(predicate3);
      Predicate<Object> predicate10 = predicate3.and(predicate9);
      Predicate<Object> predicate11 = predicate10.or(predicate3);
      Predicate<Locale.LanguageRange> predicate12 = predicate0.and(predicate11);
      Predicate<Object> predicate13 = predicate3.and(predicate11);
      predicate3.or(predicate13);
      predicate5.and(predicate13);
      predicate12.and(predicate8);
      predicate9.or(predicate6);
      predicate10.or(predicate3);
      predicate0.or(predicate4);
      Predicate<Object> predicate14 = predicate13.negate();
      predicate2.and(predicate14);
      predicate2.or(predicate0);
      DirectoryScanner.match(",FoAAjBf}5>B5gZ&", ",FoAAjBf}5>B5gZ&");
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      // Undeclared exception!
      try { 
        archiveScanner0.scanArchive((File) null, "@/>rS.-");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = "C";
      String string1 = "rgGH^+!SU";
      ImprovedFile improvedFile0 = new ImprovedFile("rgGH^+!SU", "C");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.toFileType(improvedFile0);
      long long0 = (-1458L);
      System.setCurrentTimeMillis(long0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(string0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockFileOutputStream0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      int int0 = (-1);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("rg+I^+\\S@");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)75;
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte)14;
      byteArray0[3] = (byte) (-31);
      byteArray0[4] = (byte)76;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("rg+I^+\\S@");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, "");
      improvedFile1.toURI();
      improvedFile1.getCanonicalPath();
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("rg+I^+\\S@");
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "");
      FileSystemHandling.appendLineToFile(evoSuiteFile2, "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.8323649625844873
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("rg+I^+\\S@");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      improvedFile0.setWritable(false);
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, "P42.");
      improvedFile1.getCanonicalPath();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("rg+I^+\\S@");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "8YBP", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.8323649625844873
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("rg+I^+\\S@");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      improvedFile0.setWritable(false);
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, "P42.");
      improvedFile1.toURI();
      improvedFile1.getCanonicalPath();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("rg+I^+\\S@");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "8YBP", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.432813901625505
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = "";
      ImprovedFile improvedFile0 = new ImprovedFile("rgGH^+!SU", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      long long0 = (-1458L);
      System.setCurrentTimeMillis(long0);
      Collection<Locale> collection0 = null;
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) vector0, collection0, locale_FilteringMode2);
      int int1 = (-340);
      Vector<Locale.LanguageRange> vector1 = new Vector<Locale.LanguageRange>(int0, int1);
      Locale.filter((List<Locale.LanguageRange>) vector0, (Collection<Locale>) list0);
      Vector<Locale.LanguageRange> vector2 = new Vector<Locale.LanguageRange>();
      Object object0 = new Object();
      Locale locale0 = Locale.KOREA;
      Locale locale1 = Locale.CHINA;
      Object object1 = new Object();
      Vector<Locale.LanguageRange> vector3 = new Vector<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      locale1.getUnicodeLocaleAttributes();
      Locale.LanguageRange locale_LanguageRange0 = null;
      try {
        locale_LanguageRange0 = new Locale.LanguageRange(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // range=
         //
         verifyException("java.util.Locale$LanguageRange", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = "";
      String string1 = "rgGH^+!SU";
      ImprovedFile improvedFile0 = new ImprovedFile("rgGH^+!SU", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.isArchive(improvedFile0);
      Locale locale0 = Locale.ROOT;
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      Vector<Locale.LanguageRange> vector1 = new Vector<Locale.LanguageRange>();
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) linkedList0);
      Vector<Locale.LanguageRange> vector2 = new Vector<Locale.LanguageRange>();
      Locale locale1 = Locale.KOREA;
      Locale locale2 = Locale.CHINA;
      double double0 = 1555.0301325;
      Locale.LanguageRange locale_LanguageRange0 = null;
      try {
        locale_LanguageRange0 = new Locale.LanguageRange(string0, double0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // weight=1555.0301325
         //
         verifyException("java.util.Locale$LanguageRange", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("rgGH^+!SU", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.toFileType(improvedFile0);
      long long0 = (-1458L);
      System.setCurrentTimeMillis(long0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      int int0 = 0;
      int int1 = (-406);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(pipedOutputStream0, int1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }
}
