/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 11:17:20 GMT 2019
 */

package nu.staldal.lagoon;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import nu.staldal.lagoon.LagoonCLI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LagoonCLI_ESTest extends LagoonCLI_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("o6_&P3uO[");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("o6_&P3uO[");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "bLX$3_dm\"Zo<R_B");
      FileSystemHandling.createFolder(evoSuiteFile1);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("o6_&P3uO[");
      FileSystemHandling.createFolder(evoSuiteFile2);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "3u*[.sitemap";
      LagoonCLI.main(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.7188571020822931
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "o6_&P3uO[";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("o6_&P3uO[");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)104;
      byteArray0[1] = (byte) (-86);
      byteArray0[2] = (byte)104;
      byteArray0[2] = (byte)74;
      byteArray0[5] = (byte) (-24);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[6] = (byte) (-1);
      byteArray0[8] = (byte) (-27);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      LagoonCLI.main(stringArray0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      LagoonCLI.main(stringArray0);
      String[] stringArray1 = new String[9];
      stringArray1[0] = "-3`Mw649";
      stringArray1[1] = "space";
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray2 = new String[21];
      stringArray2[0] = "r;$ZXc";
      stringArray2[1] = "o6_&P3uO[";
      stringArray2[2] = "space";
      stringArray2[3] = "o6_&P3uO[";
      LagoonCLI.main(stringArray2);
      LagoonCLI.main(stringArray0);
      assertNotSame(stringArray0, stringArray2);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "Attribute {";
      stringArray0[1] = "build";
      stringArray0[2] = "/c:Ks$_#?";
      stringArray0[3] = "R8~G(Yl=X-X)d&,Q";
      stringArray0[4] = "YH";
      stringArray0[5] = "Attribute ";
      LagoonCLI.main(stringArray0);
      assertEquals(6, stringArray0.length);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "RSPy&z,|,[";
      stringArray0[1] = "force";
      stringArray0[2] = "force";
      stringArray0[3] = "//";
      stringArray0[4] = "All elements are not yet ended";
      stringArray0[5] = "basIoe";
      stringArray0[6] = "basIoe";
      stringArray0[7] = "CEa].N#|4(_Dlv";
      LagoonCLI.main(stringArray0);
      assertEquals(8, stringArray0.length);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "2";
      stringArray0[1] = "2";
      stringArray0[2] = "2";
      stringArray0[3] = "[(u`";
      stringArray0[4] = "2";
      stringArray0[5] = "http://www.w3.org/XML/1998/namespace";
      stringArray0[6] = "http://www.w3.org/XML/1998/namespace";
      stringArray0[7] = "2";
      stringArray0[8] = "Password is required but not specified";
      LagoonCLI.main(stringArray0);
      assertEquals(9, stringArray0.length);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "NecZlqAPBvO4+";
      stringArray0[1] = "z%\\NAR";
      String[] stringArray1 = new String[8];
      stringArray1[0] = "z%\\NAR";
      stringArray1[1] = "0";
      stringArray1[2] = "0";
      stringArray1[3] = "f}`IG1}`z_;4";
      stringArray1[4] = "uW}N5QrprFG6)";
      stringArray1[5] = "xh~!Ie{/(NuQpK=#Nk";
      stringArray1[6] = " expected";
      stringArray1[7] = "8D`X|7\"WKfX&D.xml";
      LagoonCLI.main(stringArray1);
      assertEquals(8, stringArray1.length);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "for`e";
      stringArray0[2] = "naHs}Cldal.xtree.NoYe@hCOidr";
      stringArray0[7] = "naHs}Cldal.xtree.NoYe@hCOidr";
      stringArray0[4] = "/L|-Dc>i_m#PF/Xl";
      stringArray0[5] = "/L|-Dc>i_m#PF/Xl";
      String[] stringArray1 = new String[1];
      stringArray1[0] = "/L|-Dc>i_m#PF/Xld.xml";
      LagoonCLI.main(stringArray1);
      assertEquals(1, stringArray1.length);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "sourceDir";
      stringArray0[1] = "force";
      stringArray0[2] = "QLGhWitv0Q";
      stringArray0[3] = "-_VUMk`Td";
      String[] stringArray1 = new String[9];
      stringArray1[0] = "sourceDir";
      stringArray1[1] = "force";
      stringArray1[2] = "force";
      stringArray1[3] = "force";
      stringArray1[4] = "GF+XQ*a-dJX~cuTB";
      stringArray1[5] = "force";
      LagoonCLI.main(stringArray1);
      assertNotSame(stringArray1, stringArray0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[0];
      LagoonCLI.main(stringArray0);
      assertEquals(0, stringArray0.length);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "M5r}M^9q$EUKk)g";
      stringArray0[2] = "a{&01!Xa&t0,";
      stringArray0[2] = "p5eH'+bTaF9tI5!'Z";
      stringArray0[3] = "!{q>xjAQmJR&";
      stringArray0[4] = "ree.Node";
      stringArray0[5] = "Wb!K,a}JXm~`";
      stringArray0[6] = "_&P~~uO[";
      stringArray0[7] = "TKgj";
      // Undeclared exception!
      try { 
        LagoonCLI.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.7488320958430319
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LagoonCLI lagoonCLI0 = new LagoonCLI();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "YAY=zNj@<Sf";
      stringArray0[1] = "o6_&33uO[.sitemap";
      String[] stringArray1 = new String[8];
      stringArray1[0] = "o6_&33uO[.sitemap";
      stringArray1[1] = "force";
      stringArray1[3] = "";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      LagoonCLI.main(stringArray1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1 == boolean0);
  }
}
