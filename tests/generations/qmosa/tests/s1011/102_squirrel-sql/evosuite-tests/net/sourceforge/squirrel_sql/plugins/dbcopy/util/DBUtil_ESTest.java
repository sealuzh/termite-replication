/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 12:20:39 GMT 2019
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.CallableStatementWrapper;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.awt.AWTEventMulticaster;
import java.awt.ComponentOrientation;
import java.awt.FocusTraversalPolicy;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.event.AdjustmentListener;
import java.awt.event.ContainerListener;
import java.awt.event.FocusListener;
import java.awt.event.HierarchyBoundsListener;
import java.awt.event.InputMethodListener;
import java.awt.event.KeyListener;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.event.MouseWheelListener;
import java.awt.event.WindowFocusListener;
import java.awt.geom.AffineTransform;
import java.awt.image.ImageObserver;
import java.io.File;
import java.io.FileFilter;
import java.net.URI;
import java.net.URL;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverPropertyInfo;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Stack;
import java.util.function.Predicate;
import javax.swing.Action;
import javax.swing.Box;
import javax.swing.DebugGraphics;
import javax.swing.ImageIcon;
import javax.swing.InputVerifier;
import javax.swing.JLayeredPane;
import javax.swing.JMenu;
import javax.swing.JRadioButton;
import javax.swing.KeyStroke;
import javax.swing.TransferHandler;
import javax.swing.text.DefaultCaret;
import javax.swing.text.DefaultEditorKit;
import javax.swing.text.TextAction;
import javax.swing.tree.DefaultTreeCellRenderer;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasColorProperties;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasConnectionProperties;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.util.ApplicationFileWrappersImpl;
import net.sourceforge.squirrel_sql.client.util.ApplicationFiles;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverProperty;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.util.FileWrapper;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperFactoryImpl;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperImpl;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jboss.util.file.FileSuffixFilter;
import org.jfree.data.time.Quarter;
import org.jfree.data.xy.DefaultIntervalXYDataset;
import org.jfree.date.SerialDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      SerialDate.getMonths();
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)120;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte) (-51);
      int int0 = 70;
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 5, (-5270), 70, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Rectangle rectangle0 = new Rectangle(1141, (-277));
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.setBounds(rectangle0);
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer2.requestFocusInWindow();
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      JMenu jMenu0 = new JMenu("org.jfree.data.xy.XIntervalSeries");
      jMenu0.getVisibleRect();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 92, 1141, 0, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Box.createVerticalBox();
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener1 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      DBUtil.typesAreEquivalent((-7), 3533);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      KeyStroke.getKeyStroke(3229, (-1276), true);
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAliasConnectionProperties sQLAliasConnectionProperties0 = new SQLAliasConnectionProperties();
      sQLAlias0.setConnectionProperties(sQLAliasConnectionProperties0);
      // Undeclared exception!
      try { 
        sQLAlias0.assignFrom((SQLAlias) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.client.gui.db.SQLAlias", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)58;
      ImageIcon imageIcon0 = new ImageIcon(byteArray0);
      JRadioButton jRadioButton0 = new JRadioButton();
      Integer integer0 = new Integer((byte)58);
      System.setCurrentTimeMillis((byte)58);
      Integer integer1 = JLayeredPane.PALETTE_LAYER;
      Integer integer2 = new Integer((byte)58);
      Integer integer3 = new Integer((byte)58);
      Integer.getInteger("EpKDZ3=", integer1);
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      Integer.getInteger("sN8:>}H,og}&?54B", (Integer) null);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2, (-142), 1441, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction0 = new DefaultEditorKit.InsertTabAction();
      JMenu jMenu0 = new JMenu(defaultEditorKit_InsertTabAction0);
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(containerListener0, containerListener0);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 70, 1010, 2082, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(containerListener0, containerListener0);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      DatabaseObjectType.createNewDatabaseObjectType("W[ ");
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2003, 12, (-3432), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      FileWrapper fileWrapper0 = applicationFileWrappersImpl0.getLicenceFile();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl(fileWrapper0, "&B^w\"=OV*");
      fileWrapperImpl0.setReadOnly();
      fileWrapperImpl0.toURL();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getLibraryDirectory();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl3.getLibraryDirectory();
      ISQLConnection iSQLConnection0 = null;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DBUtil.validateColumnNames((ITableInfo) null, (SessionInfoProvider) null);
      // Undeclared exception!
      try { 
        DBUtil.getColumnName((ISQLConnection) null, (ITableInfo) null, (-196));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.5357939587515939
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE;
      JRadioButton jRadioButton0 = new JRadioButton();
      ImageIcon imageIcon0 = new ImageIcon("Session.driverComplianceTitle");
      imageIcon0.getImageObserver();
      imageIcon0.setImageObserver(jRadioButton0);
      jRadioButton0.getModel();
      Byte byte0 = new Byte((byte) (-20));
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)102;
      byteArray0[2] = (byte) (-20);
      byteArray0[3] = (byte) (-20);
      byteArray0[4] = (byte) (-20);
      byteArray0[5] = (byte)29;
      byteArray0[6] = (byte)32;
      byteArray0[7] = (byte)92;
      byteArray0[8] = (byte)29;
      ImageIcon imageIcon1 = new ImageIcon(byteArray0);
      ImageIcon imageIcon2 = new ImageIcon(byteArray0);
      ImageIcon imageIcon3 = new ImageIcon();
      imageIcon3.getImageObserver();
      imageIcon3.setImageObserver(jRadioButton0);
      Byte byte1 = new Byte((byte)21);
      System.setCurrentTimeMillis(30000L);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-3), (-2347), (-3), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)applicationFileWrappersImpl0.getLicenceFile();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl("&BSw\"=OV*", "&BSw\"=OV*");
      URL uRL0 = fileWrapperImpl1.toURL();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl2 = FileWrapperImpl.createTempFile("&BSw\"=OV*", "&BSw\"=OV*", fileWrapperImpl1);
      FileWrapperImpl.listRoots();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      URI uRI0 = MockURL.toURI(uRL0);
      URI uRI1 = MockURI.normalize(uRI0);
      fileWrapperFactoryImpl0.create(uRI1);
      fileWrapperFactoryImpl0.create(fileWrapperImpl1);
      FileWrapperImpl fileWrapperImpl3 = new FileWrapperImpl(fileWrapperImpl0);
      FileWrapperImpl fileWrapperImpl4 = new FileWrapperImpl(fileWrapperImpl3);
      FileWrapperImpl fileWrapperImpl5 = new FileWrapperImpl(fileWrapperImpl1, "&BSw\"=OV*");
      fileWrapperFactoryImpl0.create(fileWrapperImpl2);
      MockURL.toURI(uRL0);
      FileWrapperImpl fileWrapperImpl6 = new FileWrapperImpl(uRI1);
      DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, "&BSw\"=OV*");
      int[] intArray0 = Quarter.FIRST_MONTH_IN_QUARTER;
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon();
      imageIcon0.getImageLoadStatus();
      imageIcon0.getIconHeight();
      imageIcon0.getImage();
      JRadioButton jRadioButton0 = new JRadioButton();
      imageIcon0.getImageObserver();
      imageIcon0.setImageObserver((ImageObserver) null);
      Integer integer0 = new Integer(0);
      System.setCurrentTimeMillis((-1));
      System.setCurrentTimeMillis((-9223372036854775808L));
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      Integer integer2 = new Integer(1012);
      Integer integer3 = JLayeredPane.MODAL_LAYER;
      Integer.getInteger("znW7!+=}rM\"?S", integer3);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-1), 2678, (-1), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Box.createVerticalBox();
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener1 = AWTEventMulticaster.add(containerListener0, containerListener0);
      ContainerListener containerListener2 = AWTEventMulticaster.add(containerListener1, containerListener1);
      AWTEventMulticaster.remove(containerListener2, containerListener2);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(containerListener1, containerListener2);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster0, containerListener1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add(containerListener2, (ContainerListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster3, containerListener1);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add(containerListener1, containerListener2);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster4, containerListener1);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster0, (KeyListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((KeyListener) aWTEventMulticaster1, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster6, (KeyListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster8, (ContainerListener) aWTEventMulticaster8);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster9, (ContainerListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster2, containerListener2);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster7, containerListener1);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster4, (ContainerListener) aWTEventMulticaster10);
      AWTEventMulticaster.remove((ContainerListener) null, containerListener2);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster4, (ContainerListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster11, (ContainerListener) aWTEventMulticaster6);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 4, 2004, 3150, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE;
      DatabaseObjectType.createNewDatabaseObjectType("7l=z|Ci`tX8T9hs");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.UDT_TYPE_DBO;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.DATABASE_TYPE_DBO;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.SYNONYM;
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.UDT;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)109;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)126;
      byteArray0[3] = (byte)3;
      ImageIcon imageIcon0 = new ImageIcon(byteArray0);
      Byte byte0 = new Byte((byte)3);
      Byte.toUnsignedLong((byte) (-1));
      System.setCurrentTimeMillis((byte)3);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (int) byte0, (byte)126, (byte)126, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((AdjustmentListener) aWTEventMulticaster1, (AdjustmentListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster0, (AdjustmentListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((AdjustmentListener) aWTEventMulticaster2, (AdjustmentListener) null);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster3, (AdjustmentListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster4, (AdjustmentListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster3, (AdjustmentListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((AdjustmentListener) aWTEventMulticaster5, (AdjustmentListener) null);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster2, (AdjustmentListener) aWTEventMulticaster5);
      AWTEventMulticaster.remove((AdjustmentListener) aWTEventMulticaster2, (AdjustmentListener) aWTEventMulticaster7);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster6);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-7), (-7), (-7), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      FileWrapper fileWrapper0 = applicationFileWrappersImpl0.getLicenceFile();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl(fileWrapper0, "&BSw\"=OV*");
      URL uRL0 = fileWrapperImpl0.toURL();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl1 = (FileWrapperImpl)applicationFileWrappersImpl2.getLibraryDirectory();
      FileWrapperImpl.listRoots();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapperImpl fileWrapperImpl2 = new FileWrapperImpl("&BSw\"=OV*");
      URI uRI0 = MockURL.toURI(uRL0);
      URI uRI1 = MockURI.normalize(uRI0);
      FileWrapperImpl fileWrapperImpl3 = (FileWrapperImpl)fileWrapperFactoryImpl0.create(uRI1);
      fileWrapperFactoryImpl0.create(fileWrapperImpl2);
      fileWrapperImpl2.getParentFile();
      fileWrapperImpl3.mkdir();
      fileWrapperImpl3.toURL();
      fileWrapperFactoryImpl0.create(fileWrapper0, "&BSw\"=OV*");
      fileWrapperFactoryImpl0.create(fileWrapperImpl1);
      FileWrapperImpl fileWrapperImpl4 = new FileWrapperImpl("c9(");
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.setFileWrapperFactory(fileWrapperFactoryImpl0);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-6), 1896, 57, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Box box0 = Box.createVerticalBox();
      box0.isOptimizedDrawingEnabled();
      box0.transferFocusBackward();
      box0.isDoubleBuffered();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getWidth();
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.requestFocusInWindow();
      DefaultTreeCellRenderer defaultTreeCellRenderer4 = new DefaultTreeCellRenderer();
      JMenu jMenu0 = new JMenu(" CASCADE");
      DefaultCaret defaultCaret0 = new DefaultCaret();
      System.setCurrentTimeMillis(0);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2000, 0, (-2006), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "iS|3joUL)J\"jt-a#R");
      Rectangle rectangle0 = new Rectangle(2268, 2268);
      defaultTreeCellRenderer1.transferFocusDownCycle();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.isRequestFocusEnabled();
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.requestFocusInWindow();
      DefaultTreeCellRenderer defaultTreeCellRenderer4 = new DefaultTreeCellRenderer();
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject((IDatabaseObjectInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getLibraryDirectory();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis((-1L));
      DBUtil.typesAreEquivalent(16, (-2990));
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-2990), 2006, (-2990), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Box.createVerticalBox();
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2006, (-5357), 2002, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Box box0 = Box.createVerticalBox();
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "E3V");
      AWTEventMulticaster.remove(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      ComponentOrientation componentOrientation0 = ComponentOrientation.UNKNOWN;
      box0.applyComponentOrientation(componentOrientation0);
      box0.addInputMethodListener((InputMethodListener) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      File file0 = applicationFiles0.getPluginsUserSettingsDirectory();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl(file0);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      DBUtil.typesAreEquivalent(2, 2);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.typesAreEquivalent(2, 3);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString() , anyInt() , anyInt());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-1392), (-1445));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(containerListener0, containerListener0);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add(containerListener0, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 1, 814, (-1210), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Box box0 = Box.createVerticalBox();
      box0.isOptimizedDrawingEnabled();
      ImageIcon imageIcon0 = new ImageIcon();
      imageIcon0.setImageObserver(box0);
      Integer integer0 = new Integer((-1891));
      System.setCurrentTimeMillis((-1891));
      System.setCurrentTimeMillis(1000L);
      Integer integer1 = JLayeredPane.PALETTE_LAYER;
      Integer integer2 = new Integer(739);
      Integer.sum((-1891), (-1891));
      Integer.remainderUnsigned(91, 739);
      Integer.compareUnsigned((-3032), (-1449));
      Integer.getInteger("?YYg9]KW'\"Bgqoy9W", integer2);
      Integer integer3 = JLayeredPane.MODAL_LAYER;
      Integer.getInteger("", integer3);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 7, 23, 128, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Box box0 = Box.createVerticalBox();
      box0.getInputVerifier();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Integer integer0 = new Integer((-2474));
      System.setCurrentTimeMillis((-2474));
      Integer integer1 = JLayeredPane.PALETTE_LAYER;
      Integer integer2 = new Integer(1441);
      Integer.getInteger("gP", 1441);
      Integer integer3 = new Integer((-2151));
      Integer.getInteger((String) null, integer1);
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      Integer.getInteger((String) null, integer0);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 6, 3936, (-2474), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Box.createVerticalBox();
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener1 = AWTEventMulticaster.add(containerListener0, containerListener0);
      ContainerListener containerListener2 = AWTEventMulticaster.add(containerListener1, containerListener1);
      AWTEventMulticaster.remove(containerListener2, containerListener2);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(containerListener1, containerListener2);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add(containerListener2, (ContainerListener) null);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster0, containerListener1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add(containerListener2, (ContainerListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add(containerListener1, containerListener2);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster4, containerListener1);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster0, (KeyListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((KeyListener) aWTEventMulticaster1, (KeyListener) aWTEventMulticaster7);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster5, (KeyListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster8, (ContainerListener) aWTEventMulticaster8);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster9, (ContainerListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster2, containerListener2);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster6, containerListener1);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster4, (ContainerListener) aWTEventMulticaster10);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster4, (ContainerListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster11, (ContainerListener) aWTEventMulticaster5);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 6, 6, 2004, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Box box0 = Box.createHorizontalBox();
      Box.createHorizontalBox();
      box0.getInputVerifier();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      System.setCurrentTimeMillis(1000L);
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Integer integer1 = new Integer(2003);
      Integer.sum(2003, 1007);
      Integer.remainderUnsigned(93, (-6));
      Integer.compareUnsigned(57, 974);
      Integer.getInteger("?YYg9]KW'\"Bgqoy9W", integer0);
      Integer integer2 = JLayeredPane.MODAL_LAYER;
      Integer integer3 = JLayeredPane.PALETTE_LAYER;
      Integer.getInteger("?YYg9]KW'\"Bgqoy9W", integer3);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 93, 12, 1231, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      FileWrapper fileWrapper0 = applicationFileWrappersImpl0.getLicenceFile();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl(fileWrapper0, "&B^w\"=OV*");
      fileWrapperImpl0.toURL();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getLibraryDirectory();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      assertEquals("license.txt", dBCopyPlugin0.getLicenceFileName());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction0 = new DefaultEditorKit.InsertTabAction();
      Action[] actionArray0 = new Action[9];
      actionArray0[0] = (Action) defaultEditorKit_InsertTabAction0;
      actionArray0[1] = (Action) defaultEditorKit_InsertTabAction0;
      actionArray0[2] = (Action) defaultEditorKit_InsertTabAction0;
      actionArray0[3] = (Action) defaultEditorKit_InsertTabAction0;
      actionArray0[4] = (Action) defaultEditorKit_InsertTabAction0;
      actionArray0[5] = (Action) defaultEditorKit_InsertTabAction0;
      actionArray0[6] = (Action) defaultEditorKit_InsertTabAction0;
      actionArray0[7] = (Action) defaultEditorKit_InsertTabAction0;
      actionArray0[8] = (Action) defaultEditorKit_InsertTabAction0;
      TextAction.augmentList(actionArray0, actionArray0);
      defaultEditorKit_InsertTabAction0.getKeys();
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction0 = new DefaultEditorKit.DefaultKeyTypedAction();
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction1 = new DefaultEditorKit.DefaultKeyTypedAction();
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction2 = new DefaultEditorKit.DefaultKeyTypedAction();
      DatabaseObjectType.createNewDatabaseObjectType(". Using 'max'");
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 8, 8, 8, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction0 = new DefaultEditorKit.InsertTabAction();
      JMenu jMenu0 = new JMenu(defaultEditorKit_InsertTabAction0);
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(containerListener0, containerListener0);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 12, 12, 4470, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      DefaultEditorKit.CutAction defaultEditorKit_CutAction0 = new DefaultEditorKit.CutAction();
      JMenu jMenu0 = new JMenu(defaultEditorKit_CutAction0);
      jMenu0.hasFocus();
      jMenu0.hasFocus();
      jMenu0.getFocusTraversalPolicy();
      jMenu0.setFocusTraversalPolicy((FocusTraversalPolicy) null);
      JMenu jMenu1 = new JMenu();
      jMenu1.getSelectedObjects();
      JMenu jMenu2 = new JMenu("T%s[!", false);
      jMenu1.setMnemonic('|');
      JMenu jMenu3 = new JMenu(defaultEditorKit_CutAction0);
      Rectangle rectangle0 = jMenu3.getVisibleRect();
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance(0.0);
      rectangle0.getPathIterator(affineTransform0);
      System.setCurrentTimeMillis(0);
      int int0 = 93;
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-5), 91, 0, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultCaret defaultCaret1 = new DefaultCaret();
      MouseMotionListener mouseMotionListener0 = AWTEventMulticaster.add((MouseMotionListener) defaultCaret1, (MouseMotionListener) defaultCaret0);
      AWTEventMulticaster.remove(mouseMotionListener0, (MouseMotionListener) defaultCaret1);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 1111, (-44), (-7), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      Rectangle rectangle0 = new Rectangle(2268, 2268);
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer2.setBounds(rectangle0);
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.requestFocusInWindow();
      DefaultTreeCellRenderer defaultTreeCellRenderer4 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer5 = new DefaultTreeCellRenderer();
      System.setCurrentTimeMillis(0L);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2002, 2268, 2268, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon();
      imageIcon0.getImageLoadStatus();
      imageIcon0.getIconHeight();
      imageIcon0.getImage();
      JRadioButton jRadioButton0 = new JRadioButton();
      imageIcon0.setImageObserver(jRadioButton0);
      System.setCurrentTimeMillis(0L);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 16, 1, 16, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Box box0 = Box.createVerticalBox();
      box0.isOptimizedDrawingEnabled();
      box0.transferFocusBackward();
      box0.repaint(2912, 1003, 2912, (-591));
      Box box1 = Box.createHorizontalBox();
      box1.contains(405, (-591));
      box1.getGraphics();
      DebugGraphics debugGraphics0 = new DebugGraphics((Graphics) null, box1);
      DebugGraphics debugGraphics1 = new DebugGraphics((Graphics) null, box1);
      box1.update(debugGraphics0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        DBUtil.getPKColumnString((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.5357939587515939
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon();
      imageIcon0.getIconHeight();
      JRadioButton jRadioButton0 = new JRadioButton();
      imageIcon0.setImageObserver(jRadioButton0);
      Integer integer0 = new Integer((-1));
      System.setCurrentTimeMillis((-1));
      System.setCurrentTimeMillis((-1));
      Integer integer1 = JLayeredPane.PALETTE_LAYER;
      Integer.sum(29, (-1));
      Integer.remainderUnsigned(29, (-1040));
      Integer integer2 = new Integer(29);
      Integer.getInteger("2O>xQWGlt`q8x+", 4);
      Integer.remainderUnsigned(29, 6);
      Integer.getInteger("|1:)Vst15[3J,NNw", integer2);
      imageIcon0.getImage();
      Integer.getInteger("znW7!+=}rM\"?S", integer1);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-2), (-1), (int) integer0, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.5357939587515939
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Box.createVerticalBox();
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener1 = AWTEventMulticaster.add(containerListener0, containerListener0);
      ContainerListener containerListener2 = AWTEventMulticaster.add(containerListener1, containerListener1);
      AWTEventMulticaster.remove(containerListener2, containerListener2);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(containerListener1, containerListener2);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster0, containerListener1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add(containerListener2, (ContainerListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster3, containerListener1);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add(containerListener1, containerListener2);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster4, containerListener1);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster0, (KeyListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((KeyListener) aWTEventMulticaster1, (KeyListener) null);
      AWTEventMulticaster.add((FocusListener) aWTEventMulticaster7, (FocusListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster6, (KeyListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster9, (ContainerListener) aWTEventMulticaster9);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster10, (ContainerListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster2, containerListener2);
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster7, containerListener1);
      AWTEventMulticaster aWTEventMulticaster13 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster4, (ContainerListener) aWTEventMulticaster11);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster12, (ContainerListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster10, (ContainerListener) aWTEventMulticaster8);
      AWTEventMulticaster aWTEventMulticaster14 = (AWTEventMulticaster)AWTEventMulticaster.add(containerListener1, (ContainerListener) aWTEventMulticaster6);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster13, (ContainerListener) aWTEventMulticaster14);
      AWTEventMulticaster.add(containerListener2, (ContainerListener) aWTEventMulticaster12);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2004, (-1780), (-2105376123), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.5357939587515939
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Box.createHorizontalBox();
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((AdjustmentListener) null, (AdjustmentListener) null);
      AWTEventMulticaster.remove((AdjustmentListener) null, (AdjustmentListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-4), (-7), (-4), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(containerListener0, containerListener0);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getLibraryDirectory();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2001, 17, (-1248), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Box box0 = Box.createVerticalBox();
      box0.isOptimizedDrawingEnabled();
      box0.transferFocusBackward();
      box0.isDoubleBuffered();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getWidth();
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer3.requestFocusInWindow();
      DefaultTreeCellRenderer defaultTreeCellRenderer4 = new DefaultTreeCellRenderer();
      JMenu jMenu0 = new JMenu(" CASCADE");
      jMenu0.getVisibleRect();
      System.setCurrentTimeMillis(0);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 91, 0, 414, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      SerialDate.getMonths();
      DatabaseObjectType.createNewDatabaseObjectType("{8[h&4--5!!E");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDT_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SEQUENCE;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.SYNONYM;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.UDT;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Could not instantiate dialect class", "!U=&Gi8iLw", ".~G", "znW7!+=}rM\"?S", (-14), "znW7!+=}rM\"?S", (-986), 502, 2124, (-4), (String) null, "x", 1, (-986), "K,eiHRmBr?z");
      // Undeclared exception!
      try { 
        DBUtil.isBinaryType((TableColumnInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Box box0 = Box.createVerticalBox();
      box0.isOptimizedDrawingEnabled();
      box0.transferFocusBackward();
      box0.isDoubleBuffered();
      System.setCurrentTimeMillis(1000L);
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Integer integer1 = new Integer((-398));
      Integer.sum(3, 2001);
      Integer.remainderUnsigned(3114, 3114);
      Integer.compareUnsigned(3, (-2821));
      Integer integer2 = JLayeredPane.MODAL_LAYER;
      Integer.getInteger(".<u U_^M#iJ[y", integer2);
      Integer integer3 = JLayeredPane.MODAL_LAYER;
      Integer.getInteger("`X5:d%dE6S'o:xD>6F", integer0);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 0, 3114, 0, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.5357939587515939
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction0 = new DefaultEditorKit.DefaultKeyTypedAction();
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction1 = new DefaultEditorKit.DefaultKeyTypedAction();
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction2 = new DefaultEditorKit.DefaultKeyTypedAction();
      DatabaseObjectType.createNewDatabaseObjectType(",\n\tPRIMARY KEY ");
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2005, 2005, 1436, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon();
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction0 = new DefaultEditorKit.InsertTabAction();
      JMenu jMenu0 = new JMenu(defaultEditorKit_InsertTabAction0);
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction0 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedAction0.getPropertyChangeListeners();
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction1 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedAction1.setEnabled(false);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultEditorKit_DefaultKeyTypedAction0.getKeys();
      PreparedStatement preparedStatement0 = null;
      int int0 = (-1);
      Integer integer0 = new Integer((-1));
      ResultSet resultSet0 = null;
      int int1 = 908;
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 908, 0, 0, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      SerialDate.getMonths();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE;
      DatabaseObjectType.createNewDatabaseObjectType("7l=z|Ci`tX8T9hs");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.UDT_TYPE_DBO;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.SEQUENCE;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.SYNONYM;
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.UDT;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("5", "", "^", "net.sourceforge.squirrel_sql.fw.dialects.ProgressDialectExt$ProgressDialectHelper", 93, "U$<>J8(TVfB2:", 93, 2192, (-212), 2148, "ZQIy?|", "I:", 93, 273, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      String string0 = "'r)(LXN1!4c?*HHD'w";
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "2", "`EMA");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "'r)(LXN1!4c?*HHD'w";
      stringArray0[1] = "`EMA";
      stringArray0[2] = "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy";
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Box box0 = Box.createHorizontalBox();
      Box box1 = Box.createHorizontalBox();
      box0.getInputVerifier();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      DebugGraphics debugGraphics1 = new DebugGraphics(debugGraphics0);
      DebugGraphics.flashColor();
      DebugGraphics debugGraphics2 = new DebugGraphics(debugGraphics1, defaultTreeCellRenderer0);
      box1.update(debugGraphics2);
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.getHierarchyBoundsListeners();
      box1.getInputVerifier();
      defaultTreeCellRenderer1.setInputVerifier((InputVerifier) null);
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer2.getLeafIcon();
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SYNONYM_TYPE_DBO;
      boolean boolean0 = DBUtil.typesAreEquivalent(2, 92);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DebugGraphics debugGraphics0 = new DebugGraphics();
      DebugGraphics debugGraphics1 = new DebugGraphics(debugGraphics0);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getHierarchyBoundsListeners();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SYNONYM_TYPE_DBO;
      boolean boolean0 = DBUtil.typesAreEquivalent(2, (-959));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Box.createHorizontalBox();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl(" from ");
      FileSuffixFilter fileSuffixFilter0 = new FileSuffixFilter((String[]) null);
      fileWrapperImpl0.listFiles((FileFilter) fileSuffixFilter0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " from ");
      fileWrapperImpl0.toURL();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "[iH", "[iH", "R_[tZ2/", (-2), "4VPl.^]A4?iqBo(", (-360), (-2320), (-1382), (-2), "[iH", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 3711, 16777215, "oldSQuirreLInstallDir");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
      
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getWebSite();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin2.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals((-2), int0);
      
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[3];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("R_[tZ2/, R_[tZ2/, R_[tZ2/", string0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      String string0 = "R[9<y4cx3Y]fapFv?;";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("QLh;w3@x6xUb),Qba", "QLh;w3@x6xUb),Qba", "QLh;w3@x6xUb),Qba", "QLh;w3@x6xUb),Qba", 0, ":RU|BZ7$", 0, 0, 8, 0, "QLh;w3@x6xUb),Qba", "QLh;w3@x6xUb),Qba", (-17), 8, "R[9<y4cx3Y]fapFv?;");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      Connection connection0 = null;
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLDriver sQLDriver0 = new SQLDriver(uidIdentifier0);
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(140);
      // Undeclared exception!
      try { 
        integerIdentifier0.setString("R_[tZ2/");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"R_[tZ2/\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)applicationFileWrappersImpl0.getLicenceFile();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl("&BSw\"=OV*", "&BSw\"=OV*");
      URL uRL0 = fileWrapperImpl1.toURL();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl2 = FileWrapperImpl.createTempFile("&BSw\"=OV*", "&BSw\"=OV*", fileWrapperImpl1);
      FileWrapperImpl.listRoots();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      URI uRI0 = MockURL.toURI(uRL0);
      URI uRI1 = MockURI.normalize(uRI0);
      fileWrapperFactoryImpl0.create(uRI1);
      fileWrapperFactoryImpl0.create(fileWrapperImpl1);
      FileWrapperImpl fileWrapperImpl3 = new FileWrapperImpl(fileWrapperImpl0);
      fileWrapperImpl3.getParentFile();
      FileWrapperImpl fileWrapperImpl4 = new FileWrapperImpl(fileWrapperImpl3);
      FileWrapperImpl fileWrapperImpl5 = new FileWrapperImpl(fileWrapperImpl1, "&BSw\"=OV*");
      fileWrapperFactoryImpl0.create(fileWrapperImpl2);
      MockURL.toURI(uRL0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "&BSw\"=OV*");
      FileWrapperImpl fileWrapperImpl6 = new FileWrapperImpl(uRI1);
      DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, "&BSw\"=OV*");
      int[] intArray0 = Quarter.FIRST_MONTH_IN_QUARTER;
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Box box0 = Box.createVerticalBox();
      box0.isOptimizedDrawingEnabled();
      DefaultEditorKit.InsertBreakAction defaultEditorKit_InsertBreakAction0 = new DefaultEditorKit.InsertBreakAction();
      Action action0 = TransferHandler.getPasteAction();
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction0 = new DefaultEditorKit.DefaultKeyTypedAction();
      Action action1 = TransferHandler.getPasteAction();
      TransferHandler.getPasteAction();
      Action[] actionArray0 = new Action[6];
      actionArray0[0] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray0[1] = (Action) defaultEditorKit_InsertBreakAction0;
      actionArray0[2] = action1;
      actionArray0[3] = action0;
      actionArray0[4] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray0[5] = action0;
      TextAction.augmentList(actionArray0, actionArray0);
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction1 = new DefaultEditorKit.DefaultKeyTypedAction();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      DBUtil.typesAreEquivalent(3, 3);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      boolean boolean0 = DBUtil.typesAreEquivalent((-691), (-691));
      assertTrue(boolean0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((AdjustmentListener) aWTEventMulticaster1, (AdjustmentListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster0, (AdjustmentListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster2, (AdjustmentListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster3, (AdjustmentListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster2, (AdjustmentListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((AdjustmentListener) aWTEventMulticaster4, (AdjustmentListener) null);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster2, (AdjustmentListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((AdjustmentListener) aWTEventMulticaster2, (AdjustmentListener) aWTEventMulticaster5);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      DBUtil.typesAreEquivalent(3, (-2638));
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      ISession iSession0 = dBCopyPlugin1.getSourceSession();
      assertNull(iSession0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      FileWrapper fileWrapper0 = applicationFileWrappersImpl0.getLicenceFile();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl(fileWrapper0, "&BSw\"=OV*");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=Mq,Lu1JriKgG");
      URL uRL0 = fileWrapperImpl0.toURL();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl1 = (FileWrapperImpl)applicationFileWrappersImpl2.getLibraryDirectory();
      FileWrapperImpl.listRoots();
      FileWrapperImpl.createTempFile("&BSw\"=OV*", "&BSw\"=OV*", fileWrapper0);
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapperImpl fileWrapperImpl2 = new FileWrapperImpl("&BSw\"=OV*");
      URI uRI0 = MockURL.toURI(uRL0);
      URI uRI1 = MockURI.normalize(uRI0);
      fileWrapperFactoryImpl0.create(uRI1);
      fileWrapperFactoryImpl0.create(fileWrapperImpl2);
      fileWrapperImpl2.getParentFile();
      fileWrapperFactoryImpl0.create(fileWrapper0, "&BSw\"=OV*");
      fileWrapperFactoryImpl0.create(fileWrapperImpl1);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "9QRG[)9", "/JwHoGW>Do1F");
      // Undeclared exception!
      try { 
        DBUtil.tableHasPrimaryKey((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Box box0 = Box.createHorizontalBox();
      Box box1 = Box.createHorizontalBox();
      Class<DefaultIntervalXYDataset> class0 = DefaultIntervalXYDataset.class;
      box1.getListeners(class0);
      box0.getInputVerifier();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      box1.getInputVerifier();
      defaultTreeCellRenderer1.setInputVerifier((InputVerifier) null);
      box1.isDoubleBuffered();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("^", (String) null, "", "^", 2004, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 2004, 0, 0, 1003, "^", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 2148, (-4), " - ");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROCEDURE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      SerialDate.getMonths();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("=Lh;J3@x6xUb)mQba");
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl(fileWrapperImpl0);
      fileWrapperFactoryImpl0.createTempFile("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      FileWrapper fileWrapper0 = fileWrapperFactoryImpl0.create("&`T");
      fileWrapperFactoryImpl0.create(fileWrapper0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      FileWrapperImpl fileWrapperImpl2 = fileWrapperFactoryImpl0.createTempFile("character_data", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", fileWrapper0);
      fileWrapperImpl2.createNewFile();
      fileWrapperImpl2.listFiles();
      fileWrapperFactoryImpl0.create(fileWrapperImpl0);
      FileWrapperImpl fileWrapperImpl3 = (FileWrapperImpl)fileWrapperImpl0.getCanonicalFile();
      fileWrapperImpl1.getParentFile();
      fileWrapperFactoryImpl0.create((FileWrapper) fileWrapperImpl3, "&`T");
      FileWrapperImpl fileWrapperImpl4 = new FileWrapperImpl(fileWrapperImpl3);
      fileWrapperImpl2.getCanonicalFile();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      dBCopyPlugin0.getPluginJarFilePath();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "DBUtil.error.tablenotfound");
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Box box0 = Box.createVerticalBox();
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      box0.addHierarchyBoundsListener((HierarchyBoundsListener) null);
      ComponentOrientation componentOrientation0 = ComponentOrientation.UNKNOWN;
      box0.applyComponentOrientation(componentOrientation0);
      box0.addInputMethodListener((InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove((MouseListener) aWTEventMulticaster0, (MouseListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseListener) null, (MouseListener) aWTEventMulticaster0);
      box0.addMouseWheelListener(aWTEventMulticaster1);
      Box.createVerticalBox();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("org.apache.commons.cli.OptionValidator", "org.apache.commons.cli.OptionValidator", "6.82f ", "6.82f ", 2001, "org.apache.commons.cli.OptionValidator", 2001, (-1286), (-980), 2291, "6.82f ", "6.82f ", (-2508), (-1402), "Olla<rD");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      System.setCurrentTimeMillis((-961L));
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.replaceDistinctDataType(2001, tableColumnInfo0, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "welcome.html", "welcome.html");
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Box box0 = Box.createVerticalBox();
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      box0.getVetoableChangeListeners();
      AWTEventMulticaster.remove(containerListener0, containerListener0);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      DebugGraphics debugGraphics0 = new DebugGraphics();
      DebugGraphics debugGraphics1 = new DebugGraphics(debugGraphics0);
      DebugGraphics.setFlashTime(449);
      DebugGraphics debugGraphics2 = new DebugGraphics(debugGraphics1, box0);
      box0.update(debugGraphics0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin1, (ITableInfo) null, (String) null, "=Lh;J3@x6xUb)mQba", "=Lh;J3@x6xUb)mQba");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("9QRG[)9", "9QRG[)9", "yfR7 j=^\"!Q^", "!9:#Z=C(^~Ox{kacy!i", 2009, "9QRG[)9", (-2508), (-1909), 16, 2009, "G-", "9QRG[)9", 694, 502, "9QRG[)9");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getLibraryDirectory();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis((-1L));
      DBUtil.typesAreEquivalent(16, 16);
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAlias sQLAlias1 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias1.getDriverPropertiesClone();
      SQLAliasColorProperties sQLAliasColorProperties0 = sQLAlias1.getColorProperties();
      sQLAlias1.setColorProperties(sQLAliasColorProperties0);
      sQLAlias0.getDriverPropertiesClone();
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLConnection sQLConnection0 = null;
      try {
        sQLConnection0 = new SQLConnection((Connection) null, sQLDriverPropertyCollection0, sQLDriver0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLConnection == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLConnection", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("9QRG[)9", "9QRG[)9", "yfR7 j=^\"!Q^", "!9#Z=C(^~Ox{kacy!i", 2009, "9QRG[)9", (-2508), (-1909), (-1733), 2009, "G-", "9QRG[)9", 694, 502, "9QRG[)9");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("7=z|Ci`tX8T9hs");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.UDT_TYPE_DBO;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.SEQUENCE;
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.SYNONYM;
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.UDT;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("5", "~h\"u(pXI0", "", "$fN8", (-5), "`&", 2192, 2124, 502, 2148, "~h\"u(pXI0", "[p|M", 1629, (-14), "^");
      DatabaseObjectType databaseObjectType6 = DatabaseObjectType.DATATYPE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType6);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) null);
      AWTEventMulticaster.remove((AdjustmentListener) aWTEventMulticaster1, (AdjustmentListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((AdjustmentListener) aWTEventMulticaster0, (AdjustmentListener) null);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "aO:D.m?i7Xv");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, (String) null, "aO:D.m?i7Xv");
      // Undeclared exception!
      try { 
        DBUtil.getColumnNames((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      SerialDate.getMonths();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      String string0 = ".ekT}2\\-FQ\\K=";
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, ".ekT}2-FQK=", ".ekT}2-FQK=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Box box0 = Box.createHorizontalBox();
      Box box1 = Box.createHorizontalBox();
      Class<DefaultIntervalXYDataset> class0 = DefaultIntervalXYDataset.class;
      box1.getListeners(class0);
      box0.getInputVerifier();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      box1.getInputVerifier();
      defaultTreeCellRenderer1.setInputVerifier((InputVerifier) null);
      box1.isDoubleBuffered();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      box1.getInputVerifier();
      DefaultTreeCellRenderer defaultTreeCellRenderer4 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer2.setInputVerifier((InputVerifier) null);
      DefaultTreeCellRenderer defaultTreeCellRenderer5 = new DefaultTreeCellRenderer();
      DatabaseObjectType.createNewDatabaseObjectType(" NULL ");
      DatabaseObjectType.createNewDatabaseObjectType((String) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.replaceOtherDataType((TableColumnInfo) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      JRadioButton jRadioButton0 = new JRadioButton();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      boolean boolean0 = DBUtil.typesAreEquivalent((-329), 2004);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "QLh;w3@x6xUb),Qba", "Zya*{+", "QLh;w3@x6xUb),Qba", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      DBUtil.getColumnList(tableColumnInfoArray0);
      DBUtil.convertObjectArrayToTableList(tableColumnInfoArray0);
      System.setCurrentTimeMillis(387L);
      DBUtil.getColumnList(tableColumnInfoArray0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAlias sQLAlias1 = new SQLAlias();
      sQLAlias0.getDriverPropertiesClone();
      sQLAlias0.getDriverPropertiesClone();
      Connection connection1 = null;
      ConnectionWrapper connectionWrapper1 = null;
      try {
        connectionWrapper1 = new ConnectionWrapper((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      String[] stringArray0 = SerialDate.getMonths();
      FileSuffixFilter fileSuffixFilter0 = new FileSuffixFilter(stringArray0);
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      File file0 = applicationFiles0.getSquirrelHomeDir();
      fileSuffixFilter0.accept(file0);
      URI uRI0 = MockURI.aFileURI;
      MockURI.parseServerAuthority(uRI0);
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl(uRI0);
      fileWrapperImpl0.listFiles((FileFilter) fileSuffixFilter0);
      fileWrapperImpl0.toURL();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getLibraryDirectory();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      applicationFileWrappersImpl0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      applicationFileWrappersImpl0.getLibraryDirectory();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl0);
      dBCopyPlugin0.getSourceSession();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(databaseObjectInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      Box box0 = Box.createVerticalBox();
      box0.addContainerListener((ContainerListener) null);
      Class<DefaultIntervalXYDataset> class0 = DefaultIntervalXYDataset.class;
      box0.getListeners(class0);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      box0.getInputVerifier();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("]bU Cv", "QLh;w3@x6xUb),Qba", "0\"(?");
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(databaseObjectInfo0, (SchemaInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      String[] stringArray0 = SerialDate.getMonths();
      FileSuffixFilter fileSuffixFilter0 = new FileSuffixFilter(stringArray0);
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      File file0 = applicationFiles0.getSquirrelHomeDir();
      file0.setReadable(true, true);
      fileSuffixFilter0.accept(file0);
      URI uRI0 = MockURI.aFileURI;
      MockURI.parseServerAuthority(uRI0);
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl(uRI0);
      fileWrapperImpl0.listFiles((FileFilter) fileSuffixFilter0);
      fileWrapperImpl0.toURL();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getLibraryDirectory();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      applicationFileWrappersImpl0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      applicationFileWrappersImpl0.getLibraryDirectory();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl0);
      dBCopyPlugin0.getSourceSession();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(databaseObjectInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getWidth();
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.requestFocusInWindow();
      JMenu jMenu0 = new JMenu();
      DefaultTreeCellRenderer defaultTreeCellRenderer4 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer4.getHierarchyBoundsListeners();
      Box box0 = Box.createVerticalBox();
      box0.getInputVerifier();
      defaultTreeCellRenderer2.setInputVerifier((InputVerifier) null);
      DefaultTreeCellRenderer defaultTreeCellRenderer5 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer6 = new DefaultTreeCellRenderer();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SYNONYM_TYPE_DBO;
      boolean boolean0 = DBUtil.typesAreEquivalent(92, 0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon();
      DBUtil.typesAreEquivalent(12, 2000);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLDriverPropertyCollection sQLDriverPropertyCollection1 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver1 = new SQLDriver();
      SQLDriverProperty[] sQLDriverPropertyArray0 = new SQLDriverProperty[6];
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo((String) null, ". Skipping FK constraint");
      SQLDriverProperty sQLDriverProperty0 = null;
      try {
        sQLDriverProperty0 = new SQLDriverProperty(driverPropertyInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLDriverProperty", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      JMenu jMenu0 = new JMenu((String) null, false);
      JRadioButton jRadioButton0 = new JRadioButton();
      System.setCurrentTimeMillis(0L);
      boolean boolean0 = DBUtil.typesAreEquivalent(304, 409);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "", "znW7!+=}rM\"?S", ") - table ", 2003, "", 10, 506, (-1910), 0, "@dhYosw%'6[|BENO>G", "u]!,H`7mL@F1l%n0&", 309, 3255, "znW7!+=}rM\"?S");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SEQUENCE;
      DatabaseObjectType.createNewDatabaseObjectType("k'J5WgHmJ_ZuV4x ");
      DatabaseObjectType.createNewDatabaseObjectType(";t'ORU4vWX\"");
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[3];
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("~?W2h9luO3E9 I=y!d/", "@dhYosw%'6[|BENO>G", ") - table ", "znW7!+=}rM\"?S", 3255, "PreferencesPanel.useFileCachingToolTip", (-846), 10, 2149, 35, "DROP TABLE ", ") - table ", (-1910), 565, "DROP TABLE ");
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) tableColumnInfo1;
      iDatabaseObjectInfoArray0[1] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[2] = (IDatabaseObjectInfo) tableColumnInfo0;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX_TYPE_DBO;
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getClosedIcon();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SEQUENCE;
      DatabaseObjectType.createNewDatabaseObjectType("k'J5WgHmJ_ZuV4x ");
      DatabaseObjectType.createNewDatabaseObjectType(";t'ORU4vWX\"");
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[3];
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      assertEquals(3, list0.size());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Box box0 = Box.createHorizontalBox();
      Box box1 = Box.createHorizontalBox();
      Class<DefaultIntervalXYDataset> class0 = DefaultIntervalXYDataset.class;
      box1.getListeners(class0);
      box0.getInputVerifier();
      box0.setName(". Skipping FK constraint");
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      box1.getInputVerifier();
      defaultTreeCellRenderer0.setInputVerifier((InputVerifier) null);
      box0.isDoubleBuffered();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      box1.getInputVerifier();
      defaultTreeCellRenderer0.requestFocusInWindow();
      DefaultTreeCellRenderer defaultTreeCellRenderer4 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer5 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer5.setInputVerifier((InputVerifier) null);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setPasteToTableName("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DatabaseObjectType.createNewDatabaseObjectType("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate((ISQLConnection) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      String string0 = "R[9<y4cx3Y]fapFv?;";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("QLh;w3@x6xUb),Qba", "QLh;w3@x6xUb),Qba", "QLh;w3@x6xUb),Qba", "QLh;w3@x6xUb),Qba", 0, ":RU|BZ7$", 0, 0, 8, 0, "QLh;w3@x6xUb),Qba", "QLh;w3@x6xUb),Qba", (-17), 8, "R[9<y4cx3Y]fapFv?;");
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      Connection connection0 = null;
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLDriver sQLDriver0 = new SQLDriver(uidIdentifier0);
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(140);
      // Undeclared exception!
      try { 
        integerIdentifier0.setString("R_[tZ2/");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"R_[tZ2/\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      String string0 = "H[UG,Yt\\Q:de";
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "H[UG,YtQ:de", (ITableInfo) null, (-9991));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Box.createHorizontalBox();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl(" fromo");
      fileWrapperImpl0.setLastModified(4750L);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " fromo");
      fileWrapperImpl0.toURL();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      stack0.add((IDatabaseObjectInfo) null);
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(stack0);
      List<IDatabaseObjectInfo> list1 = DBUtil.convertTableToObjectList(list0);
      assertFalse(list1.isEmpty());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)applicationFileWrappersImpl0.getLicenceFile();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl("&BSw\"=OV*", "&BSw\"=OV*");
      URL uRL0 = fileWrapperImpl1.toURL();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl2 = FileWrapperImpl.createTempFile("&BSw\"=OV*", "&BSw\"=OV*", fileWrapperImpl1);
      FileWrapperImpl.listRoots();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      URI uRI0 = MockURL.toURI(uRL0);
      URI uRI1 = MockURI.normalize(uRI0);
      FileWrapperImpl fileWrapperImpl3 = (FileWrapperImpl)fileWrapperFactoryImpl0.create(uRI1);
      fileWrapperFactoryImpl0.create(fileWrapperImpl1);
      FileWrapperImpl fileWrapperImpl4 = new FileWrapperImpl(fileWrapperImpl0);
      fileWrapperImpl2.getParentFile();
      FileWrapperImpl fileWrapperImpl5 = new FileWrapperImpl(fileWrapperImpl1, "&BSw\"=OV*");
      fileWrapperFactoryImpl0.create(fileWrapperImpl2);
      fileWrapperFactoryImpl0.createTempFile("c9(", "&BSw\"=OV*", (FileWrapper) fileWrapperImpl3);
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.setFileWrapperFactory(fileWrapperFactoryImpl0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL(dBCopyPlugin0, (ITableInfo) null, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)applicationFileWrappersImpl0.getLicenceFile();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl("&BSw\"=OV*", "&BSw\"=OV*");
      URL uRL0 = fileWrapperImpl1.toURL();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl2 = FileWrapperImpl.createTempFile("&BSw\"=OV*", "&BSw\"=OV*", fileWrapperImpl1);
      FileWrapperImpl.listRoots();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      URI uRI0 = MockURL.toURI(uRL0);
      URI uRI1 = MockURI.normalize(uRI0);
      fileWrapperFactoryImpl0.create(uRI1);
      FileWrapperImpl fileWrapperImpl3 = new FileWrapperImpl(uRI1);
      FileWrapperImpl fileWrapperImpl4 = new FileWrapperImpl(fileWrapperImpl0);
      fileWrapperImpl2.getParentFile();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Olla<rD", "Olla<rD", "Olla<rD", "&BSw\"=OV*", (-1286), "Olla<rD", 5, 1, 1, (-4098), "&BSw\"=OV*", "jar:", 93, 47, "&BSw\"=OV*");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      System.setCurrentTimeMillis((-980));
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceDistinctDataType(3533, tableColumnInfo0, (ISession) null);
      assertEquals(3533, int0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster0, (WindowFocusListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster1, (WindowFocusListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster2);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("uORcxXUn@0+RQn#A)G", "uORcxXUn@0+RQn#A)G", "/home/ubuntu/termite/projects/102_squirrel-sql/plugins/dbcopy.jar", "uORcxXUn@0+RQn#A)G", 91, "LJ`v", 91, 1, 1, 1, "LJ`v", "uORcxXUn@0+RQn#A)G", 91, 7, "LJ`v");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin0, tableColumnInfo0, "<Dus", "=Lh;J3@x6xUb)mQba");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getWidth();
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.requestFocusInWindow();
      JMenu jMenu0 = new JMenu();
      jMenu0.getVisibleRect();
      DefaultTreeCellRenderer defaultTreeCellRenderer4 = new DefaultTreeCellRenderer();
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "ui");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null, "Xx*::la", "b(/g'P]Se~VVj", 0, "=_guT^f<OF6HS7?=9V", (-452), 0, 607, 607, "", "+fM>|Dnd", 2147483645, 3433, (String) null);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Box.createVerticalBox();
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AdjustmentListener adjustmentListener0 = mock(AdjustmentListener.class, new ViolatedAssumptionAnswer());
      AdjustmentListener adjustmentListener1 = AWTEventMulticaster.add(adjustmentListener0, adjustmentListener0);
      AWTEventMulticaster.remove(adjustmentListener1, adjustmentListener1);
      AWTEventMulticaster.add((AdjustmentListener) null, adjustmentListener1);
      AWTEventMulticaster.remove(adjustmentListener1, adjustmentListener1);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      MouseWheelListener mouseWheelListener1 = AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove(mouseWheelListener1, mouseWheelListener1);
      AWTEventMulticaster.add((MouseWheelListener) null, mouseWheelListener1);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "rqlb0h5jp)z)v^`C/", "An9[bn~", "DBUtil.error.unknowntype", 20, "9QRG[)9", (-4386), (-4386), 4386, (-2178), "rqlb0h5jp)z)v^`C/", "Khqi", (-4386), (-960), "rqlb0h5jp)z)v^`C/");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(20, int0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener1 = AWTEventMulticaster.add(containerListener0, containerListener0);
      AWTEventMulticaster.remove(containerListener1, containerListener1);
      ContainerListener containerListener2 = AWTEventMulticaster.add((ContainerListener) null, containerListener1);
      AWTEventMulticaster.remove(containerListener2, containerListener1);
      AWTEventMulticaster.remove(containerListener2, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, containerListener1);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Box.createVerticalBox();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "dj`#1ML;f&bu|", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 1900, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 3, (-4), (-4), 808, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "rqlb0h5jp)z)v^`C/", (-851), 3, "Khqi");
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(1900, int0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "j";
      stringArray0[1] = "newColumnName";
      stringArray0[2] = "M7VP=\"@HepURTP6";
      stringArray0[3] = "7/EH,~)sd";
      stringArray0[4] = "8`C};r";
      // Undeclared exception!
      try { 
        DBUtil.getColumnList((TableColumnInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Locale.getISOCountries();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, "java.protocol.handle.pkgs", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Box box0 = Box.createVerticalBox();
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      box0.addMouseWheelListener((MouseWheelListener) null);
      AWTEventMulticaster.remove(containerListener0, containerListener0);
      Box box1 = Box.createHorizontalBox();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Box.createVerticalBox();
      box1.getInputVerifier();
      SQLAlias sQLAlias0 = new SQLAlias();
      sQLAlias0.getDriverPropertiesClone();
      sQLAlias0.getDriverPropertiesClone();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "INCREMENT BY $incrementBy$ ,", "net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", "!xE", 999);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Box box0 = Box.createVerticalBox();
      box0.getInputVerifier();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      box0.getInputVerifier();
      defaultTreeCellRenderer0.setInputVerifier((InputVerifier) null);
      box0.isDoubleBuffered();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      Rectangle rectangle0 = new Rectangle(2268, 2268);
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer2.setBounds(rectangle0);
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.requestFocusInWindow();
      DefaultTreeCellRenderer defaultTreeCellRenderer4 = new DefaultTreeCellRenderer();
      JMenu jMenu0 = new JMenu("org.jfree.data.xy.XIntervalSeries");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "\t", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "org.jfree.data.xy.XIntervalSeries", 7);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey((String) null, "9QRG[)9", ";cDR&t$|yuY)$", foreignKeyInfo0, (SessionInfoProvider) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getX();
      defaultTreeCellRenderer0.getWidth();
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer4 = new DefaultTreeCellRenderer();
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "po(aBc|", "length", "%(l3n@#");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      FileWrapper fileWrapper0 = applicationFileWrappersImpl0.getLicenceFile();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl(fileWrapper0, "&BSw\"=OV*");
      URL uRL0 = fileWrapperImpl0.toURL();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getLibraryDirectory();
      FileWrapperImpl.listRoots();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapperImpl fileWrapperImpl1 = FileWrapperImpl.createTempFile("&BSw\"=OV*", "&BSw\"=OV*", fileWrapperImpl0);
      URI uRI0 = MockURL.toURI(uRL0);
      URI uRI1 = MockURI.normalize(uRI0);
      FileWrapperImpl fileWrapperImpl2 = (FileWrapperImpl)fileWrapperFactoryImpl0.create(uRI1);
      fileWrapperImpl1.getCanonicalFile();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "&BSw\"=OV*";
      stringArray0[1] = "&BSw\"=OV*";
      stringArray0[2] = "&BSw\"=OV*";
      FileSuffixFilter fileSuffixFilter0 = new FileSuffixFilter(stringArray0);
      URI uRI2 = MockURI.aFileURI;
      URI uRI3 = MockURI.parseServerAuthority(uRI2);
      FileWrapperImpl fileWrapperImpl3 = new FileWrapperImpl(uRI3);
      fileWrapperImpl2.listFiles((FileFilter) fileSuffixFilter0);
      FileWrapperImpl fileWrapperImpl4 = new FileWrapperImpl("&BSw\"=OV*");
      FileWrapperImpl fileWrapperImpl5 = new FileWrapperImpl(fileWrapperImpl2);
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, "g(u_i8RRn&s\"756;l", "M|n.p[", "wXXzU:Y^Z");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DBUtil.setLastStatement("SELECT data_type FROM information_schema.columns where column_name = ? ");
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("SELECT data_type FROM information_schema.columns where column_name = ? ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBUtil.typesAreEquivalent(1007, 1007);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver0 = new SQLDriver();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLDriver sQLDriver1 = new SQLDriver(uidIdentifier0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection1 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver2 = new SQLDriver();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(1007);
      SQLDriver sQLDriver3 = new SQLDriver(integerIdentifier0);
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection2 = sQLAlias0.getDriverPropertiesClone();
      sQLDriverPropertyCollection2.clear();
      SQLAlias sQLAlias1 = new SQLAlias();
      KeyStroke.getKeyStroke('1');
      SQLAlias sQLAlias2 = new SQLAlias();
      DBUtil dBUtil0 = new DBUtil();
      sQLAlias2.equals(dBUtil0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection3 = new SQLDriverPropertyCollection();
      SQLDriverPropertyCollection sQLDriverPropertyCollection4 = sQLAlias0.getDriverPropertiesClone();
      assertFalse(sQLDriverPropertyCollection4.equals((Object)sQLDriverPropertyCollection0));
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      List<ITableInfo> list0 = null;
      // Undeclared exception!
      try { 
        DBUtil.convertTableToObjectList((List<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.fixCase((ISession) null, "");
      int int0 = 4;
      String string0 = "ef)\\|.eY9k'\"QYiQ:EL";
      TableColumnInfo tableColumnInfo0 = null;
      try {
        tableColumnInfo0 = new TableColumnInfo("", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null, "", 4, "", 2054, 4, 4, 2516, "ef)|.eY9k'\"QYiQ:EL", "", 4, 0, "ef)|.eY9k'\"QYiQ:EL", (ISQLDatabaseMetaData) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.fixCase((ISession) null, (String) null);
      // Undeclared exception!
      try { 
        DBUtil.dropTable("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "insert into ", (String) null, (ISession) null, false, 31);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "", "", " t>eG=hS0Ahj:K+Y-", 174, "", 0, 0, (-1442), 0, "", "nooqKiKr}\"s", 174, 0, " t>eG=hS0Ahj:K+Y-");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROCEDURE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      int int0 = DBUtil.replaceDistinctDataType(0, tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Box box0 = Box.createVerticalBox();
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      box0.getVetoableChangeListeners();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      DebugGraphics debugGraphics1 = new DebugGraphics(debugGraphics0);
      DebugGraphics debugGraphics2 = new DebugGraphics(debugGraphics1, box0);
      box0.update(debugGraphics0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getSourceDatabaseObjects();
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon();
      imageIcon0.getImageLoadStatus();
      imageIcon0.getIconHeight();
      imageIcon0.getImage();
      JRadioButton jRadioButton0 = new JRadioButton();
      imageIcon0.setImageObserver(jRadioButton0);
      System.setCurrentTimeMillis(0L);
      String string0 = DBUtil.getLastStatement();
      assertNull(string0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Box box0 = Box.createVerticalBox();
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      box0.getVetoableChangeListeners();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      DebugGraphics debugGraphics1 = new DebugGraphics(debugGraphics0);
      DebugGraphics.setFlashTime(449);
      DebugGraphics debugGraphics2 = new DebugGraphics(debugGraphics0, box0);
      Box box1 = Box.createHorizontalBox();
      box1.update(debugGraphics2);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      System.setCurrentTimeMillis(449);
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceDistinctDataType(449, (TableColumnInfo) null, (ISession) null);
      assertEquals(449, int0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      SerialDate.getMonths();
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)120;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Olla<rD", "Olla<rD", "Olla<rD", "Olla<rD", 2179, "R_[tZE/", (-980), (-1286), 2836, (byte)120, "axion", "R_[tZE/", (-1432), (byte)120, "R_[tZE/");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      System.setCurrentTimeMillis((-1491L));
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceDistinctDataType((-2508), tableColumnInfo0, (ISession) null);
      assertEquals((-2508), int0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "OcQ*j}g$!;'UjL$");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      String string0 = "}";
      String string1 = null;
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("}", (String) null, (String) null);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate2.and(predicate0);
      linkedList0.removeIf(predicate3);
      linkedList0.add((IDatabaseObjectInfo) databaseObjectInfo0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(stack0);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Box.createVerticalBox();
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener1 = AWTEventMulticaster.add(containerListener0, containerListener0);
      AWTEventMulticaster.remove(containerListener1, containerListener1);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, containerListener1);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(containerListener1, (ContainerListener) null);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster0, (ContainerListener) null);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster3, (ContainerListener) null);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add(containerListener1, (ContainerListener) null);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster4, containerListener1);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster0, (KeyListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((KeyListener) aWTEventMulticaster1, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster6, (KeyListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster8, (ContainerListener) aWTEventMulticaster8);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster9, (ContainerListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster2, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster7, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster4, (ContainerListener) aWTEventMulticaster10);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster4, (ContainerListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) aWTEventMulticaster6);
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster8, (ContainerListener) aWTEventMulticaster11);
      AWTEventMulticaster aWTEventMulticaster13 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster3, (ContainerListener) null);
      AWTEventMulticaster aWTEventMulticaster14 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) aWTEventMulticaster12);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster13, (ContainerListener) aWTEventMulticaster14);
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setPromptForDialect(true);
      dBCopyPreferenceBean0.setPruneDuplicateIndexDefs(true);
      dBCopyPreferenceBean0.setCopyIndexDefs(false);
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      DBUtil dBUtil0 = new DBUtil();
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getX();
      defaultTreeCellRenderer0.getWidth();
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.requestFocusInWindow();
      JMenu jMenu0 = new JMenu();
      Rectangle rectangle0 = new Rectangle();
      DefaultTreeCellRenderer defaultTreeCellRenderer4 = new DefaultTreeCellRenderer();
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, " )", "ui");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      LinkedList<ITableInfo> linkedList0 = new LinkedList<ITableInfo>();
      DBUtil.convertTableToObjectList(linkedList0);
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "xLM3", 350, "PA@q6XNgK1n)}n", (-543), 350, (-9999), (-2343), "v", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-2343), (-9999), "PA@q6XNgK1n)}n");
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, tableColumnInfo0, "PA@q6XNgK1n)}n", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      String string0 = DBUtil.getLastStatementValues();
      assertNull(string0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      String string0 = "_aH<d;IG /TWLQP";
      DBUtil.setLastStatementValues("_aH<d;IG /TWLQP");
      ConnectionWrapper connectionWrapper0 = null;
      try {
        connectionWrapper0 = new ConnectionWrapper((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper", e);
      }
  }
}
